
! function(_0x51407b, _0x4b6703) {
    'object' == typeof exports && 'undefined' != typeof module ? _0x4b6703(exports) : 'function' == typeof define && define['amd'] ? define(['exports'], _0x4b6703) : _0x4b6703((_0x51407b = 'undefined' != typeof globalThis ? globalThis : _0x51407b || self)['fastUniqueNumbers'] = {});
}(this, function(_0x5e422e) {
    'use strict';
    var _0x4ceb70, _0xf98112 = void 0x0 === Number['MAX_SAFE_INTEGER'] ? 0x1fffffffffffff : Number['MAX_SAFE_INTEGER'],
        _0x2f442c = new WeakMap(),
        _0x18214c = function(_0x107bd4, _0x41332c) {
            return function(_0x57e28a) {
                var _0x20c0eb = _0x41332c['get'](_0x57e28a),
                    _0x506801 = void 0x0 === _0x20c0eb ? _0x57e28a['size'] : _0x20c0eb < 0x40000000 ? _0x20c0eb + 0x1 : 0x0;
                if (!_0x57e28a['has'](_0x506801)) return _0x107bd4(_0x57e28a, _0x506801);
                if (_0x57e28a['size'] < 0x20000000) {
                    for (; _0x57e28a['has'](_0x506801);) _0x506801 = Math['floor'](0x40000000 * Math['random']());
                    return _0x107bd4(_0x57e28a, _0x506801);
                }
                if (_0x57e28a['size'] > _0xf98112) throw new Error('Congratulations,\x20you\x20created\x20a\x20collection\x20of\x20unique\x20numbers\x20which\x20uses\x20all\x20available\x20integers!');
                for (; _0x57e28a['has'](_0x506801);) _0x506801 = Math['floor'](Math['random']() * _0xf98112);
                return _0x107bd4(_0x57e28a, _0x506801);
            };
        }((_0x4ceb70 = _0x2f442c, function(_0x2d3293, _0x3ad61a) {
            return _0x4ceb70['set'](_0x2d3293, _0x3ad61a), _0x3ad61a;
        }), _0x2f442c),
        _0x17d8e7 = function(_0xcd2df9) {
            return function(_0x6f7488) {
                var _0x337184 = _0xcd2df9(_0x6f7488);
                return _0x6f7488['add'](_0x337184), _0x337184;
            };
        }(_0x18214c);
    _0x5e422e['addUniqueNumber'] = _0x17d8e7, _0x5e422e['generateUniqueNumber'] = _0x18214c, Object['defineProperty'](_0x5e422e, '__esModule', {
        'value': !0x0
    });
}),
function(_0x5c488, _0x3042f3) {
    'object' == typeof exports && 'undefined' != typeof module ? _0x3042f3(exports, require('fast-unique-numbers')) : 'function' == typeof define && define['amd'] ? define(['exports', 'fast-unique-numbers'], _0x3042f3) : _0x3042f3((_0x5c488 = 'undefined' != typeof globalThis ? globalThis : _0x5c488 || self)['workerTimersBroker'] = {}, _0x5c488['fastUniqueNumbers']);
}(this, function(_0x3b0398, _0x1f3a1e) {
    'use strict';
    _0x3b0398['load'] = function(_0x58505d) {
        var _0x851064 = new Map([
                [0x0, function() {}]
            ]),
            _0x12a2e4 = new Map([
                [0x0, function() {}]
            ]),
            _0xcfac06 = new Map(),
            _0x50989b = new Worker(_0x58505d);
        return _0x50989b['addEventListener']('message', function(_0x14e4a7) {
            var _0x2f0ef0 = _0x14e4a7['data'];
            if (function(_0x2f448a) {
                    return void 0x0 !== _0x2f448a['method'] && 'call' === _0x2f448a['method'];
                }(_0x2f0ef0)) {
                var _0x18755c = _0x2f0ef0['params'],
                    _0x2b5670 = _0x18755c['timerId'],
                    _0x1f1229 = _0x18755c['timerType'];
                if ('interval' === _0x1f1229) {
                    var _0x537458 = _0x851064['get'](_0x2b5670);
                    if ('number' == typeof _0x537458) {
                        var _0x418c46 = _0xcfac06['get'](_0x537458);
                        if (void 0x0 === _0x418c46 || _0x418c46['timerId'] !== _0x2b5670 || _0x418c46['timerType'] !== _0x1f1229) throw new Error('The\x20timer\x20is\x20in\x20an\x20undefined\x20state.');
                    } else {
                        if (void 0x0 === _0x537458) throw new Error('The\x20timer\x20is\x20in\x20an\x20undefined\x20state.');
                        _0x537458();
                    }
                } else {
                    if ('timeout' === _0x1f1229) {
                        var _0x4afce6 = _0x12a2e4['get'](_0x2b5670);
                        if ('number' == typeof _0x4afce6) {
                            var _0x2ae437 = _0xcfac06['get'](_0x4afce6);
                            if (void 0x0 === _0x2ae437 || _0x2ae437['timerId'] !== _0x2b5670 || _0x2ae437['timerType'] !== _0x1f1229) throw new Error('The\x20timer\x20is\x20in\x20an\x20undefined\x20state.');
                        } else {
                            if (void 0x0 === _0x4afce6) throw new Error('The\x20timer\x20is\x20in\x20an\x20undefined\x20state.');
                            _0x4afce6(), _0x12a2e4['delete'](_0x2b5670);
                        }
                    }
                }
            } else {
                if (! function(_0x348a4c) {
                        return null === _0x348a4c['error'] && 'number' == typeof _0x348a4c['id'];
                    }(_0x2f0ef0)) {
                    var _0x185466 = _0x2f0ef0['error']['message'];
                    throw new Error(_0x185466);
                }
                var _0x205b6d = _0x2f0ef0['id'],
                    _0x8bd3f = _0xcfac06['get'](_0x205b6d);
                if (void 0x0 === _0x8bd3f) throw new Error('The\x20timer\x20is\x20in\x20an\x20undefined\x20state.');
                var _0x436b0a = _0x8bd3f['timerId'],
                    _0x1e001b = _0x8bd3f['timerType'];
                _0xcfac06['delete'](_0x205b6d), 'interval' === _0x1e001b ? _0x851064['delete'](_0x436b0a) : _0x12a2e4['delete'](_0x436b0a);
            }
        }), {
            'clearInterval': function(_0x617e00) {
                var _0x2cdb72 = _0x1f3a1e['generateUniqueNumber'](_0xcfac06);
                _0xcfac06['set'](_0x2cdb72, {
                    'timerId': _0x617e00,
                    'timerType': 'interval'
                }), _0x851064['set'](_0x617e00, _0x2cdb72), _0x50989b['postMessage']({
                    'id': _0x2cdb72,
                    'method': 'clear',
                    'params': {
                        'timerId': _0x617e00,
                        'timerType': 'interval'
                    }
                });
            },
            'clearTimeout': function(_0xce89f9) {
                var _0x19210b = _0x1f3a1e['generateUniqueNumber'](_0xcfac06);
                _0xcfac06['set'](_0x19210b, {
                    'timerId': _0xce89f9,
                    'timerType': 'timeout'
                }), _0x12a2e4['set'](_0xce89f9, _0x19210b), _0x50989b['postMessage']({
                    'id': _0x19210b,
                    'method': 'clear',
                    'params': {
                        'timerId': _0xce89f9,
                        'timerType': 'timeout'
                    }
                });
            },
            'setInterval': function(_0x2b33c6, _0x12377e) {
                var _0x30d318 = _0x1f3a1e['generateUniqueNumber'](_0x851064);
                return _0x851064['set'](_0x30d318, function() {
                    _0x2b33c6(), 'function' == typeof _0x851064['get'](_0x30d318) && _0x50989b['postMessage']({
                        'id': null,
                        'method': 'set',
                        'params': {
                            'delay': _0x12377e,
                            'now': performance['now'](),
                            'timerId': _0x30d318,
                            'timerType': 'interval'
                        }
                    });
                }), _0x50989b['postMessage']({
                    'id': null,
                    'method': 'set',
                    'params': {
                        'delay': _0x12377e,
                        'now': performance['now'](),
                        'timerId': _0x30d318,
                        'timerType': 'interval'
                    }
                }), _0x30d318;
            },
            'setTimeout': function(_0xa71546, _0x5b7148) {
                var _0x4582ff = _0x1f3a1e['generateUniqueNumber'](_0x12a2e4);
                return _0x12a2e4['set'](_0x4582ff, _0xa71546), _0x50989b['postMessage']({
                    'id': null,
                    'method': 'set',
                    'params': {
                        'delay': _0x5b7148,
                        'now': performance['now'](),
                        'timerId': _0x4582ff,
                        'timerType': 'timeout'
                    }
                }), _0x4582ff;
            }
        };
    }, Object['defineProperty'](_0x3b0398, '__esModule', {
        'value': !0x0
    });
}),
function(_0x326038, _0x14fd42) {
    var _0x1d3003 = (function() {
            var _0x849e20 = !![];
            return function(_0x2c2eea, _0x56d418) {
                var _0x39c597 = _0x849e20 ? function() {
                    if (_0x56d418) {
                        var _0x4fbf43 = _0x56d418['apply'](_0x2c2eea, arguments);
                        return _0x56d418 = null, _0x4fbf43;
                    }
                } : function() {};
                return _0x849e20 = ![], _0x39c597;
            };
        }()),
        _0x3a0a4b = _0x1d3003(this, function() {
            var _0x5e5f4f = typeof window !== 'undefined' ? window : typeof process === 'object' && typeof require === 'function' && typeof global === 'object' ? global : this,
                _0x10971f = _0x5e5f4f['console'] = _0x5e5f4f['console'] || {},
                _0x2b7c12 = ['log', 'warn', 'info', 'error', 'exception', 'table', 'trace'];
            for (var _0x5bf392 = 0x0; _0x5bf392 < _0x2b7c12['length']; _0x5bf392++) {
                var _0x52f1de = _0x1d3003['constructor']['prototype']['bind'](_0x1d3003),
                    _0x1c11c6 = _0x2b7c12[_0x5bf392],
                    _0x20086a = _0x10971f[_0x1c11c6] || _0x52f1de;
                _0x52f1de['__proto__'] = _0x1d3003['bind'](_0x1d3003), _0x52f1de['toString'] = _0x20086a['toString']['bind'](_0x20086a), _0x10971f[_0x1c11c6] = _0x52f1de;
            }
        });
    _0x3a0a4b(), 'object' == typeof exports && 'undefined' != typeof module ? _0x14fd42(exports, require('worker-timers-broker')) : 'function' == typeof define && define['amd'] ? define(['exports', 'worker-timers-broker'], _0x14fd42) : _0x14fd42((_0x326038 = 'undefined' != typeof globalThis ? globalThis : _0x326038 || self)['workerTimers'] = {}, _0x326038['workerTimersBroker']);
}(this, function(_0x26ea88, _0x211f26) {
    'use strict';
    var _0x4c7622 = null,
        _0x353c1f = function(_0x519731, _0x5e0640) {
            return function() {
                if (null !== _0x4c7622) return _0x4c7622;
                var _0x24da02 = new Blob([_0x5e0640], {
                        'type': 'application/javascript;\x20charset=utf-8'
                    }),
                    _0x579ebc = URL['createObjectURL'](_0x24da02);
                return (_0x4c7622 = _0x519731(_0x579ebc))['setTimeout'](function() {
                    return URL['revokeObjectURL'](_0x579ebc);
                }, 0x0), _0x4c7622;
            };
        }(_0x211f26['load'], '(()=>{var\x20e={67:(e,t,r)=>{var\x20o,i;void\x200===(i=\x22function\x22==typeof(o=function(){\x22use\x20strict\x22;var\x20e=new\x20Map,t=new\x20Map,r=function(t){var\x20r=e.get(t);if(void\x200===r)throw\x20new\x20Error(\x27There\x20is\x20no\x20interval\x20scheduled\x20with\x20the\x20given\x20id\x20\x22\x27.concat(t,\x27\x22.\x27));clearTimeout(r),e.delete(t)},o=function(e){var\x20r=t.get(e);if(void\x200===r)throw\x20new\x20Error(\x27There\x20is\x20no\x20timeout\x20scheduled\x20with\x20the\x20given\x20id\x20\x22\x27.concat(e,\x27\x22.\x27));clearTimeout(r),t.delete(e)},i=function(e,t){var\x20r,o=performance.now();return{expected:o+(r=e-Math.max(0,o-t)),remainingDelay:r}},n=function\x20e(t,r,o,i){var\x20n=performance.now();n>o?postMessage({id:null,method:\x22call\x22,params:{timerId:r,timerType:i}}):t.set(r,setTimeout(e,o-n,t,r,o,i))},a=function(t,r,o){var\x20a=i(t,o),s=a.expected,d=a.remainingDelay;e.set(r,setTimeout(n,d,e,r,s,\x22interval\x22))},s=function(e,r,o){var\x20a=i(e,o),s=a.expected,d=a.remainingDelay;t.set(r,setTimeout(n,d,t,r,s,\x22timeout\x22))};addEventListener(\x22message\x22,(function(e){var\x20t=e.data;try{if(\x22clear\x22===t.method){var\x20i=t.id,n=t.params,d=n.timerId,c=n.timerType;if(\x22interval\x22===c)r(d),postMessage({error:null,id:i});else{if(\x22timeout\x22!==c)throw\x20new\x20Error(\x27The\x20given\x20type\x20\x22\x27.concat(c,\x27\x22\x20is\x20not\x20supported\x27));o(d),postMessage({error:null,id:i})}}else{if(\x22set\x22!==t.method)throw\x20new\x20Error(\x27The\x20given\x20method\x20\x22\x27.concat(t.method,\x27\x22\x20is\x20not\x20supported\x27));var\x20u=t.params,l=u.delay,p=u.now,m=u.timerId,v=u.timerType;if(\x22interval\x22===v)a(l,m,p);else{if(\x22timeout\x22!==v)throw\x20new\x20Error(\x27The\x20given\x20type\x20\x22\x27.concat(v,\x27\x22\x20is\x20not\x20supported\x27));s(l,m,p)}}}catch(e){postMessage({error:{message:e.message},id:t.id,result:null})}}))})?o.call(t,r,t,e):o)||(e.exports=i)}},t={};function\x20r(o){var\x20i=t[o];if(void\x200!==i)return\x20i.exports;var\x20n=t[o]={exports:{}};return\x20e[o](n,n.exports,r),n.exports}r.n=e=>{var\x20t=e&&e.__esModule?()=>e.default:()=>e;return\x20r.d(t,{a:t}),t},r.d=(e,t)=>{for(var\x20o\x20in\x20t)r.o(t,o)&&!r.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{\x22use\x20strict\x22;r(67)})()})();');
    _0x26ea88['clearInterval'] = function(_0x187859) {
        return _0x353c1f()['clearInterval'](_0x187859);
    }, _0x26ea88['clearTimeout'] = function(_0x19b11c) {
        return _0x353c1f()['clearTimeout'](_0x19b11c);
    }, _0x26ea88['setInterval'] = function(_0x526b0e, _0x5ae1e5) {
        return _0x353c1f()['setInterval'](_0x526b0e, _0x5ae1e5);
    }, _0x26ea88['setTimeout'] = function(_0x37cfbb, _0x1a7c79) {
        return _0x353c1f()['setTimeout'](_0x37cfbb, _0x1a7c79);
    }, Object['defineProperty'](_0x26ea88, '__esModule', {
        'value': !0x0
    });
});
let CurrentlyPlaying, kokoip, lastcrafted, lastrecycled, CrownCooldown = 0x0,
    TimerTools = {
        'HPTimer': 0x0,
        'GaugeTimer': 0x0
    },
    lla = {
        'e': ![]
    },
    toPlace = -0x1;
const getdmg = _0x585dcc => {
        switch (_0x585dcc) {
            case 0x3:
                return 0x3;
            case 0x4:
                return 0x4;
            case 0x1f:
                return 0x5;
            case 0x1:
                return 0x2;
            case 0x39:
                return 0xc;
            case 0x0:
                return 0x13;
            case 0x8:
                return 0x16;
            case 0x6:
                return 0x18;
            case 0x26:
                return 0x5;
            case 0x27:
                return 0x6;
            case 0x20:
                return 0x6;
            case 0x5:
                return 0x16;
            case 0x1e:
                return 0x1b;
            case 0x13:
                return 0x1e;
            case 0x9:
                return 0x18;
            case 0x3e:
                return 0x1e;
            case 0x3f:
                return 0x21;
            case 0xc:
                return 0xa;
            case 0xd:
                return 0xe;
            case 0xe:
                return 0xf;
            case 0xf:
                return 0x11;
            case 0x21:
                return 0x12;
            case 0x10:
                return 0x16;
            case 0x11:
                return 0x18;
            case 0x22:
                return 0x16;
            case 0x12:
                return 0x18;
            default:
                return 0x5;
        }
    },
    GetHp = _0x342c50 => {
        switch (_0x342c50) {
            case 0x3d:
                return 0x78;
            case 0x3c:
                return 0x12c;
            case 0x46:
                return 0x258;
            case 0x50:
                return 0x3c;
            case 0x43:
                return 0xf0;
            case 0x41:
                return 0x12c;
            case 0x4a:
                return 0xfa;
            case 0x4d:
                return 0x3e8;
            case 0x4e:
                return 0xbb8;
            case 0x48:
                return 0x384;
            case 0x45:
                return 0xbb8;
            case 0x40:
                return 0x5dc;
            case 0x49:
                return 0x5dc;
            case 0x58:
                return 0x5a;
            case 0x3f:
                return 0x384;
            case 0x3e:
                return 0x12c;
            case 0x56:
                return 0x1e;
            case 0x52:
                return 0x12c;
            case 0x42:
                return 0x1770;
            case 0x47:
                return 0x5dc;
            case 0x44:
                return 0x258;
            case 0x4b:
                return 0x258;
            case 0x4c:
                return 0x5dc;
            default:
                return null;
        }
    };
let Totem = {
        'x': null,
        'y': null
    },
    JoinLeave = {
        'Join': [],
        'Leave': [],
        'toggle1': ![],
        'toggle2': ![],
        'toggle11': ![],
        'toggle22': ![]
    },
    Spectator;

function CheckTotem(_0x99c4d1) {
    if (user['team'][0x0] === _0x99c4d1) return 0x1;
    return 0x0;
};

function UpdateTotem() {
    let _0x277acf = world['units'][ITEMS['TOTEM']];
    for (let _0x5c1aaa = 0x0; _0x5c1aaa < _0x277acf['length']; _0x5c1aaa++) {
        CheckTotem(_0x277acf[_0x5c1aaa]['pid']) && (Totem['x'] = _0x277acf[_0x5c1aaa]['x'], Totem['y'] = _0x277acf[_0x5c1aaa]['y']);;
    };
};
let EmeraldPos = [
        [0x542e, 0x7416],
        [0x55cb, 0x744d],
        [0x559f, 0x72a6]
    ],
    EmeraldIndex = 0x0;

function updateAllys() {
    for (let _0xf770c8 = 0x0; _0xf770c8 < world['units'][0x0]['length']; _0xf770c8++) {
        world['units'][0x0][_0xf770c8]['ally'] = user['id'] === world['units'][0x0][_0xf770c8]['pid'] || CheckAlly(world['units'][0x0][_0xf770c8]['pid']);
    };
    for (let _0x5d9277 = 0x0; _0x5d9277 < world['units'][0x4]['length']; _0x5d9277++) {
        world['units'][0x4][_0x5d9277]['ally'] = user['id'] === world['units'][0x4][_0x5d9277]['pid'] || CheckAlly(world['units'][0x4][_0x5d9277]['pid']);
    };
    for (let _0x44aacb = 0x0; _0x44aacb < world['units'][0x7]['length']; _0x44aacb++) {
        world['units'][0x7][_0x44aacb]['ally'] = user['id'] === world['units'][0x7][_0x44aacb]['pid'] || CheckAlly(world['units'][0x7][_0x44aacb]['pid']);
    };
    for (let _0x1bcfa1 = 0x0; _0x1bcfa1 < world['units'][0x8]['length']; _0x1bcfa1++) {
        world['units'][0x8][_0x1bcfa1]['ally'] = user['id'] === world['units'][0x8][_0x1bcfa1]['pid'] || CheckAlly(world['units'][0x8][_0x1bcfa1]['pid']);
    };
    for (let _0x3c945f = 0x0; _0x3c945f < world['units'][0x9]['length']; _0x3c945f++) {
        world['units'][0x9][_0x3c945f]['ally'] = user['id'] === world['units'][0x9][_0x3c945f]['pid'] || CheckAlly(world['units'][0x9][_0x3c945f]['pid']);
    };
    for (let _0xadb5d = 0x0; _0xadb5d < world['units'][0x13]['length']; _0xadb5d++) {
        world['units'][0x13][_0xadb5d]['ally'] = user['id'] === world['units'][0x13][_0xadb5d]['pid'] || CheckAlly(world['units'][0x13][_0xadb5d]['pid']);
    };
    for (let _0xe0d6a6 = 0x0; _0xe0d6a6 < world['units'][0x32]['length']; _0xe0d6a6++) {
        world['units'][0x32][_0xe0d6a6]['ally'] = user['id'] === world['units'][0x32][_0xe0d6a6]['pid'] || CheckAlly(world['units'][0x32][_0xe0d6a6]['pid']);
    };
    for (let _0x125541 = 0x0; _0x125541 < world['units'][0x5]['length']; _0x125541++) {
        world['units'][0x5][_0x125541]['ally'] = user['id'] === world['units'][0x5][_0x125541]['pid'] || CheckAlly(world['units'][0x5][_0x125541]['pid']);
    };
    for (let _0xc2decf = 0x0; _0xc2decf < world['units'][0xc]['length']; _0xc2decf++) {
        world['units'][0xc][_0xc2decf]['ally'] = user['id'] === world['units'][0xc][_0xc2decf]['pid'] || CheckAlly(world['units'][0xc][_0xc2decf]['pid']);
    };
    for (let _0x237ba4 = 0x0; _0x237ba4 < world['units'][0xd]['length']; _0x237ba4++) {
        world['units'][0xd][_0x237ba4]['ally'] = user['id'] === world['units'][0xd][_0x237ba4]['pid'] || CheckAlly(world['units'][0xd][_0x237ba4]['pid']);
    };
    for (let _0x1ae9d0 = 0x0; _0x1ae9d0 < world['units'][0xe]['length']; _0x1ae9d0++) {
        world['units'][0xe][_0x1ae9d0]['ally'] = user['id'] === world['units'][0xe][_0x1ae9d0]['pid'] || CheckAlly(world['units'][0xe][_0x1ae9d0]['pid']);
    };
    for (let _0x5d22c3 = 0x0; _0x5d22c3 < world['units'][0x14]['length']; _0x5d22c3++) {
        world['units'][0x14][_0x5d22c3]['ally'] = user['id'] === world['units'][0x14][_0x5d22c3]['pid'] || CheckAlly(world['units'][0x14][_0x5d22c3]['pid']);
    };
    for (let _0x49fef1 = 0x0; _0x49fef1 < world['units'][0x34]['length']; _0x49fef1++) {
        world['units'][0x34][_0x49fef1]['ally'] = user['id'] === world['units'][0x34][_0x49fef1]['pid'] || CheckAlly(world['units'][0x34][_0x49fef1]['pid']);
    };
    for (let _0x1e4a8e = 0x0; _0x1e4a8e < world['units'][0x2d]['length']; _0x1e4a8e++) {
        world['units'][0x2d][_0x1e4a8e]['ally'] = user['id'] === world['units'][0x2d][_0x1e4a8e]['pid'] || CheckAlly(world['units'][0x2d][_0x1e4a8e]['pid']);
    };
    for (let _0x4c793e = 0x0; _0x4c793e < world['units'][0x2e]['length']; _0x4c793e++) {
        world['units'][0x2e][_0x4c793e]['ally'] = user['id'] === world['units'][0x2e][_0x4c793e]['pid'] || CheckAlly(world['units'][0x2e][_0x4c793e]['pid']);
    };
    for (let _0x51211a = 0x0; _0x51211a < world['units'][0x2f]['length']; _0x51211a++) {
        world['units'][0x2f][_0x51211a]['ally'] = user['id'] === world['units'][0x2f][_0x51211a]['pid'] || CheckAlly(world['units'][0x2f][_0x51211a]['pid']);
    };
    for (let _0x5d5921 = 0x0; _0x5d5921 < world['units'][0x30]['length']; _0x5d5921++) {
        world['units'][0x30][_0x5d5921]['ally'] = user['id'] === world['units'][0x30][_0x5d5921]['pid'] || CheckAlly(world['units'][0x30][_0x5d5921]['pid']);
    };
    for (let _0x2d4189 = 0x0; _0x2d4189 < world['units'][0x31]['length']; _0x2d4189++) {
        world['units'][0x31][_0x2d4189]['ally'] = user['id'] === world['units'][0x31][_0x2d4189]['pid'] || CheckAlly(world['units'][0x31][_0x2d4189]['pid']);
    };
    for (let _0x3d7645 = 0x0; _0x3d7645 < world['units'][0x35]['length']; _0x3d7645++) {
        world['units'][0x35][_0x3d7645]['ally'] = user['id'] === world['units'][0x35][_0x3d7645]['pid'] || CheckAlly(world['units'][0x35][_0x3d7645]['pid']);
    };
    for (let _0x28770d = 0x0; _0x28770d < world['units'][0xa]['length']; _0x28770d++) {
        world['units'][0xa][_0x28770d]['ally'] = user['id'] === world['units'][0xa][_0x28770d]['pid'] || CheckAlly(world['units'][0xa][_0x28770d]['pid']);
    };
    for (let _0x1322dc = 0x0; _0x1322dc < world['units'][0xf]['length']; _0x1322dc++) {
        world['units'][0xf][_0x1322dc]['ally'] = user['id'] === world['units'][0xf][_0x1322dc]['pid'] || CheckAlly(world['units'][0xf][_0x1322dc]['pid']);
    };
    for (let _0x2f4e23 = 0x0; _0x2f4e23 < world['units'][0x10]['length']; _0x2f4e23++) {
        world['units'][0x10][_0x2f4e23]['ally'] = user['id'] === world['units'][0x10][_0x2f4e23]['pid'] || CheckAlly(world['units'][0x10][_0x2f4e23]['pid']);
    };
    for (let _0x202d1d = 0x0; _0x202d1d < world['units'][0x11]['length']; _0x202d1d++) {
        world['units'][0x11][_0x202d1d]['ally'] = user['id'] === world['units'][0x11][_0x202d1d]['pid'] || CheckAlly(world['units'][0x11][_0x202d1d]['pid']);
    };
    for (let _0x4d6fc6 = 0x0; _0x4d6fc6 < world['units'][0x15]['length']; _0x4d6fc6++) {
        world['units'][0x15][_0x4d6fc6]['ally'] = user['id'] === world['units'][0x15][_0x4d6fc6]['pid'] || CheckAlly(world['units'][0x15][_0x4d6fc6]['pid']);
    };
    for (let _0x1f88ae = 0x0; _0x1f88ae < world['units'][0x33]['length']; _0x1f88ae++) {
        world['units'][0x33][_0x1f88ae]['ally'] = user['id'] === world['units'][0x33][_0x1f88ae]['pid'] || CheckAlly(world['units'][0x33][_0x1f88ae]['pid']);
    };
    for (let _0x1fe937 = 0x0; _0x1fe937 < world['units'][0xb]['length']; _0x1fe937++) {
        world['units'][0xb][_0x1fe937]['ally'] = user['id'] === world['units'][0xb][_0x1fe937]['pid'] || CheckAlly(world['units'][0xb][_0x1fe937]['pid']);
    };
};

function CheckAlly(_0x12ad3d) {
    for (var _0x123a06 = 0x0; _0x123a06 < user['team']['length']; _0x123a06++)
        if (user['team'][_0x123a06] == _0x12ad3d) return 0x1;
    return 0x0;
};
let Settings = {
    'food': 0x3c,
    'Tokenjoin': {
        'e': !0x1,
        'token': '',
        'id': ''
    },
    'esp': ![],
    'Moves': ![],
    'JoinLeave': ![],
    'AutoSeed': ![],
    'Ice': ![],
    'mob': ![],
    'Ice2': ![],
    'Tame': {
        'e': !0x1,
        'k': 'KeyG',
        'a': null
    },
    'speed': 0x91,
    'Tracers': !0x1,
    'killworm': {
        'e': !0x1,
        'k': 'KeyJ'
    },
    'ColoredSpikes': !![],
    'AutoBuild': {
        'e': ![],
        'k': 'KeyT',
        'm': ![],
        'c': ['Bridge']
    },
    'Crown': !![],
    'AMB': {
        'e': !0x1,
        'k': 'KeyF',
        'a': null
    },
    'Xray': {
        'e': !0x1,
        'k': 'Backquote',
        'o': 0.5
    },
    'aaa22': ![],
    'Equiq': ![],
    'Spectator': {
        'k': 'KeyP'
    },
    'Timer': !0x0,
    'AutoSpike': {
        'e': !0x1,
        'k': 'Space',
        'm': !0x0,
        'p': ['Reidite\x20Spike', 'Amethyst\x20Spike', 'Diamond\x20Spike', 'Gold\x20Spike', 'Stone\x20Spike', 'Wood\x20Spike', 'Wood\x20Wall']
    },
    'AutoSpikee': {
        'e': !0x1,
        'k': 'KeyC',
        'm': !0x0
    },
    'AutoSpikeee': {
        'e': !0x1,
        'k': 'KeyX',
        'm': !0x0
    },
    'AutoTotem': {
        'e': ![],
        'k': 'KeyH'
    },
    'AutoSteal': {
        'e': ![],
        'k': 'KeyQ',
        'l': [],
        'u': ![],
        'o': 0x0
    },
    'AutoExtTake': {
        'e': ![],
        'k': 'NONE'
    },
    'AutoExtPut': {
        'e': ![],
        'k': 'NONE'
    },
    'AutoBreadTake': {
        'e': ![],
        'k': 'NONE'
    },
    'AutoBreadPut': {
        'e': ![],
        'k': 'NONE'
    },
    'AutoEme': {
        'e': ![],
        'k': 'Numpad2',
        'a': null
    },
    'Autofarm': {
        'e': ![],
        'k': 'KeyU',
        'a': null,
        'w': ![],
        'x': null,
        'xx': null,
        'y': null,
        'yy': null,
        'sy': null,
        'sx': null
    },
    'AutoCraft': {
        'e': ![],
        'k': 'KeyK'
    },
    'AutoRecycle': {
        'e': ![],
        'k': 'KeyL'
    }
};

function getBuild() {
    switch (Settings['AutoBuild']['c'][0x0]) {
        case 'Roof':
            return 0xb8;
        case 'Bridge':
            return 0x77;
        case 'Plot':
            return 0x87;
        default:
            return 0xb8;
    }
}
const environments = {
    'DEV': 'development',
    'PROD': 'production'
};
class createText {
    constructor(_0x47c3a1, _0x584999, _0x30120a) {
        this['canvas'] = document['createElement']('canvas'), this['ctx'] = this['canvas']['getContext']('2d'), this['canvas']['width'] = _0x47c3a1, this['canvas']['height'] = _0x584999, this['buildType'] = _0x30120a;
    } ['drawText'](_0xda666e, _0x2b75ce, _0x1ec272, _0xad6c3b) {
        this['ctx']['clearRect'](0x0, 0x0, this['canvas']['width'], this['canvas']['height']), this['ctx']['font'] = _0x2b75ce + 'px\x20Baloo\x20Paaji', this['ctx']['strokeStyle'] = _0x1ec272, this['ctx']['fillStyle'] = _0xad6c3b, this['ctx']['lineWidth'] = 0x7;
        switch (this['buildType']) {
            case 0x1:
                this['ctx']['strokeText']('x' + (_0xda666e & 0xff), 0xf, 0x28), this['ctx']['fillText']('x' + (_0xda666e & 0xff), 0xf, 0x28), this['ctx']['strokeText']('x' + ((_0xda666e & 0xff00) >> 0x8), 0xf, 0x3c), this['ctx']['fillText']('x' + ((_0xda666e & 0xff00) >> 0x8), 0xf, 0x3c);
                break;
            case 0x2:
                this['ctx']['strokeText']('x' + (_0xda666e & 0x1f), 0xf, 0x28), this['ctx']['fillText']('x' + (_0xda666e & 0x1f), 0xf, 0x28), this['ctx']['strokeText']('x' + ((_0xda666e & 0x3e0) >> 0x5), 0xf, 0x3c), this['ctx']['fillText']('x' + ((_0xda666e & 0x3e0) >> 0x5), 0xf, 0x3c), this['ctx']['strokeText']('x' + ((_0xda666e & 0x7c00) >> 0xa), 0xf, 0x50), this['ctx']['fillText']('x' + ((_0xda666e & 0x7c00) >> 0xa), 0xf, 0x50);
                break;
            case 0x3:
                this['ctx']['strokeText'](_0xda666e[0x0], 0xf, 0x28), this['ctx']['fillText'](_0xda666e[0x0], 0xf, 0x28), this['ctx']['strokeText']((_0xda666e[0x1] & 0x10) >> 0x4 ? 'L' : 'U', 0xf, 0x3c), this['ctx']['fillText']((_0xda666e[0x1] & 0x10) >> 0x4 ? 'L' : 'U', 0xf, 0x3c), this['ctx']['strokeText']((_0xda666e[0x1] & 0x10) >> 0x4 ? _0xda666e[0x1] - 0x10 : _0xda666e[0x1], 0xf, 0x50), this['ctx']['fillText']((_0xda666e[0x1] & 0x10) >> 0x4 ? _0xda666e[0x1] - 0x10 : _0xda666e[0x1], 0xf, 0x50);
                break;
            default:
                this['ctx']['strokeText'](_0xda666e, 0xf, 0x28), this['ctx']['fillText'](_0xda666e, 0xf, 0x28);
                break;
        };
    }
};
let Limit = {
        'L': 0x0,
        'I': new createText(0xfa, 0x46, 0x0),
        'E': ![]
    },
    SandStormImage = new Image(),
    BlizzardImage = new Image();
SandStormImage['src'] = 'https://raw.githubusercontent.com/XmreLoux/images/main/sandstorm.png', BlizzardImage['src'] = 'https://raw.githubusercontent.com/XmreLoux/images/main/blizzard.png';
const environment = environments['PROD'];

function RNG(_0x43745d) {
    this['m'] = 0x80000000, this['a'] = 0x41c64e6d, this['c'] = 0x3039, this['state'] = _0x43745d ? _0x43745d : Math['floor'](Math['random']() * (this['m'] - 0x1));
}
RNG['prototype']['random'] = function() {
    return this['state'] = (this['a'] * this['state'] + this['c']) % this['m'], this['state'] / this['m'];
}, RNG['prototype']['set_seed'] = function(_0x3cf8a1) {
    this['state'] = _0x3cf8a1;
}, RAND_SIZE = 0x2710, RANDOM = [];
var rrr = new RNG();
rrr['set_seed'](new Date()['getTime']());
for (var k = 0x0; k < RAND_SIZE; k++) RANDOM['push'](rrr['random']());

function fun18_token(_0x17fbae, _0x4aa837, _0x3a1b63, _0x890029) {
    const _0x1faec3 = ~(0xe77b & _0x17fbae) & _0x17fbae | ~(_0x17fbae & 0xe77b) & 0xe77b,
        _0x3d6eb0 = ~(_0x4aa837 & 0xdb21) & _0x4aa837 | ~(_0x4aa837 & 0xdb21) & 0xdb21,
        _0x5d8391 = (0x19660d * (0xa933 + _0x3a1b63) + 0x3c6ef35f) % 0x100000000,
        _0x3f761b = (0x8 << (_0x890029 >> 0x18 & 0xff)) + (0x20 << (_0x890029 >> 0x20 & 0xff)) + (0x18 << (_0x890029 >> 0x8 & 0xff)) + (0x10 << (_0x890029 >> 0x10 & 0xff)),
        _0xd4f44a = fun19_token(_0x1faec3, _0x3d6eb0, _0x5d8391, _0x3f761b, _0x1faec3, _0x3d6eb0),
        _0x426d4e = fun22_token(_0x5d8391, _0x3f761b, _0x1faec3, _0x3d6eb0, _0x5d8391),
        _0x242d1e = fun20_token(_0x3f761b, _0x1faec3, _0x3d6eb0, _0x5d8391, _0x3f761b, _0x1faec3),
        _0x53c4fd = (0x3c6ef35f + 0x19660d * ((_0xd4f44a ^ _0x426d4e) + 0x664f)) % 0x100000000,
        _0x334bf7 = (_0x53c4fd | 0x96e6) & ~(0x96e6 & _0x53c4fd);
    return _0x334bf7;
}

function fun13_token(_0x17b87e, _0x1590aa, _0x59b4ab, _0xb7e63a, _0x17e9e4, _0x375087) {
    const _0x369429 = (0x343fd * (0x9a40 + _0x17b87e) + 0x269ec3) % 0x100000000,
        _0x2c0e8d = ~(0xc338 & _0x1590aa) & _0x1590aa | ~(_0x1590aa & 0xc338) & 0xc338,
        _0x19f82d = ~(_0x59b4ab & 0x8c10) & _0x59b4ab | ~(_0x59b4ab & 0x8c10) & 0x8c10,
        _0x5982e2 = 0xcbfb ^ _0xb7e63a,
        _0x1ab716 = (_0x17e9e4 + 0xdf7) % 0xffdf,
        _0x516a56 = ~(0x1b14 & _0x375087) & _0x375087 | ~(_0x375087 & 0x1b14) & 0x1b14,
        _0x5d8569 = fun15_token(_0x369429, _0x2c0e8d, _0x19f82d, _0x5982e2, _0x1ab716),
        _0x122b5e = fun14_token(_0x516a56, _0x369429, _0x2c0e8d, _0x19f82d, _0x5982e2, _0x1ab716),
        _0x197e9e = fun35_token(_0x516a56, _0x369429, _0x2c0e8d, _0x19f82d, _0x5982e2, _0x1ab716),
        _0x2f71f8 = (0x3c6ef35f + 0x19660d * ((_0x5d8569 ^ _0x122b5e) + 0xed25)) % 0x100000000,
        _0x56e598 = ~(_0x2f71f8 & 0xa49a) & _0x2f71f8 | ~(_0x2f71f8 & 0xa49a) & 0xa49a;
    return _0x56e598;
}

function fun16_token(_0x5dc7c8, _0x3fbe72, _0x5a9cec, _0x1993bc, _0x60d7c2) {
    const _0x5bfcd3 = ((_0x5dc7c8 + 0x39b4) * 0x7fffffed + 0x7fffffc3) % 0x7fffffff,
        _0xe963c4 = 0xf668 ^ _0x3fbe72,
        _0x4ea296 = (0x15a4e35 * (_0x5a9cec + 0xeb90) + 0x1) % 0x100000000,
        _0x185961 = ~(0x155b & _0x1993bc) & 0x155b | ~(0x155b & _0x1993bc) & _0x1993bc,
        _0x15ae07 = (_0x60d7c2 | 0x9ce5) & ~(0x9ce5 & _0x60d7c2),
        _0x3d5d03 = fun17_token(_0x5bfcd3, _0xe963c4, _0x4ea296, _0x185961),
        _0x16acb6 = fun22_token(_0x15ae07, _0x5bfcd3, _0xe963c4, _0x4ea296, _0x185961),
        _0x1a5310 = fun33_token(_0x15ae07, _0x5bfcd3, _0xe963c4, _0x4ea296, _0x185961, _0x15ae07),
        _0xd92af9 = (0x10 << ((_0x3d5d03 ^ _0x16acb6) >> 0x18 & 0xff)) + (0x8 << ((_0x3d5d03 ^ _0x16acb6) >> 0x10 & 0xff)) + (0x18 << ((_0x3d5d03 ^ _0x16acb6) >> 0x20 & 0xff)) + (0x20 << ((_0x3d5d03 ^ _0x16acb6) >> 0x8 & 0xff)),
        _0x49d4ed = (0x19660d * (0x705d + (_0xd92af9 ^ _0x1a5310)) + 0x3c6ef35f) % 0x100000000;
    return _0x49d4ed;
}

function fun11_token(_0x1c8dc8, _0x1dc262) {
    const _0x3f3c19 = ~(0xa1be & _0x1c8dc8) & _0x1c8dc8 | ~(_0x1c8dc8 & 0xa1be) & 0xa1be,
        _0x3aa4b4 = ((_0x1dc262 + 0x4602) * 0x41c64e6d + 0x3039) % 0x80000000,
        _0x469652 = fun25_token(_0x3f3c19, _0x3aa4b4, _0x3f3c19),
        _0x31bcd1 = fun12_token(_0x3aa4b4, _0x3f3c19, _0x3aa4b4, _0x3f3c19),
        _0x4110b1 = fun31_token(_0x3aa4b4, _0x3f3c19, _0x3aa4b4, _0x3f3c19, _0x3aa4b4),
        _0x1534e8 = _0x469652 ^ 0x488d,
        _0x555836 = (0x7fffffed * (0xa56a + (_0x1534e8 ^ _0x4110b1)) + 0x7fffffc3) % 0x7fffffff;
    return _0x555836;
}

function fun9_token(_0x2578dd, _0x54a800, _0x502203, _0x1533c2, _0x2e4576) {
    const _0x24a30a = (0x3039 + (0x5a3d + _0x2578dd) * 0x41c64e6d) % 0x80000000,
        _0x2de443 = 0xe4f6 ^ _0x54a800,
        _0x434086 = ((_0x502203 + 0xb0d3) * 0x343fd + 0x269ec3) % 0x100000000,
        _0x4a9596 = _0x1533c2 ^ 0x9f6a,
        _0x2e0ace = (0x18 << (_0x2e4576 >> 0x18 & 0xff)) + (0x8 << (_0x2e4576 >> 0x20 & 0xff)) + (0x20 << (_0x2e4576 >> 0x8 & 0xff)) + (0x10 << (_0x2e4576 >> 0x10 & 0xff)),
        _0x4aa62e = fun23_token(_0x24a30a, _0x2de443),
        _0x5df9aa = fun18_token(_0x434086, _0x4a9596, _0x2e0ace, _0x24a30a),
        _0x3b5a9a = fun10_token(_0x2de443, _0x434086, _0x4a9596, _0x2e0ace),
        _0x42643e = (0x18 << ((_0x4aa62e ^ _0x5df9aa) >> 0x18 & 0xff)) + (0x20 << ((_0x4aa62e ^ _0x5df9aa) >> 0x10 & 0xff)) + (0x8 << ((_0x4aa62e ^ _0x5df9aa) >> 0x20 & 0xff)) + (0x10 << ((_0x4aa62e ^ _0x5df9aa) >> 0x8 & 0xff)),
        _0x38d2f7 = ~(0x354c & _0x42643e) & _0x42643e | ~(_0x42643e & 0x354c) & 0x354c;
    return _0x38d2f7;
}

function fun36_token(_0x92797, _0x2785cc, _0x2a2d2c, _0x7c4c3f) {
    const _0x286c01 = 0x2df2 ^ _0x92797,
        _0x409c2e = ~(_0x2785cc & 0x4be1) & 0x4be1 | ~(0x4be1 & _0x2785cc) & _0x2785cc,
        _0x390112 = (0x20 << (_0x2a2d2c >> 0x10 & 0xff)) + (0x8 << (_0x2a2d2c >> 0x20 & 0xff)) + (0x18 << (_0x2a2d2c >> 0x18 & 0xff)) + (0x10 << (_0x2a2d2c >> 0x8 & 0xff)),
        _0x44f006 = ~(0x103 & _0x7c4c3f) & 0x103 | ~(0x103 & _0x7c4c3f) & _0x7c4c3f,
        _0x14d1a7 = (0x20 << ((_0x286c01 ^ _0x409c2e) >> 0x20 & 0xff)) + (0x8 << ((_0x286c01 ^ _0x409c2e) >> 0x8 & 0xff)) + (0x18 << ((_0x286c01 ^ _0x409c2e) >> 0x18 & 0xff)) + (0x10 << ((_0x286c01 ^ _0x409c2e) >> 0x10 & 0xff)),
        _0xc16067 = ((0x455d + (_0x14d1a7 ^ _0x390112)) * 0x19660d + 0x3c6ef35f) % 0x100000000,
        _0x508bc7 = (0x19660d * (0xd78e + (_0xc16067 ^ _0x44f006)) + 0x3c6ef35f) % 0x100000000;
    return _0x508bc7;
}

function fun31_token(_0x171559, _0x452ec6, _0xff89e1, _0xa47e8c, _0x5cf400) {
    const _0x659243 = (0x20 << (_0x171559 >> 0x18 & 0xff)) + (0x10 << (_0x171559 >> 0x8 & 0xff)) + (0x18 << (_0x171559 >> 0x10 & 0xff)) + (0x8 << (_0x171559 >> 0x20 & 0xff)),
        _0x55c800 = (_0x452ec6 + 0x98e8) % 0xff7e,
        _0x194a66 = _0xff89e1 ^ 0x870f,
        _0xac2f1e = ~(0x93d1 & _0xa47e8c) & _0xa47e8c | ~(_0xa47e8c & 0x93d1) & 0x93d1,
        _0x1f9358 = (0x6577 | _0x5cf400) & ~(0x6577 & _0x5cf400),
        _0x51c2a4 = fun36_token(_0x659243, _0x55c800, _0x194a66, _0xac2f1e),
        _0x4cfc73 = fun32_token(_0x1f9358, _0x659243, _0x55c800, _0x194a66, _0xac2f1e),
        _0x435377 = fun35_token(_0x1f9358, _0x659243, _0x55c800, _0x194a66, _0xac2f1e, _0x1f9358),
        _0x5470f9 = (0x4b7e | _0x51c2a4) & ~(0x4b7e & _0x51c2a4),
        _0x21c0ca = 0x8dc9 ^ _0x5470f9;
    return _0x21c0ca;
}

function fun26_token(_0x3f3d27, _0x3b9eb1, _0x5435bf, _0x15ceb5, _0x49d36a) {
    const _0x8bd05d = (0x18 << (_0x3f3d27 >> 0x18 & 0xff)) + (0x20 << (_0x3f3d27 >> 0x10 & 0xff)) + (0x10 << (_0x3f3d27 >> 0x8 & 0xff)) + (0x8 << (_0x3f3d27 >> 0x20 & 0xff)),
        _0x29065b = (0x3039 + 0x41c64e6d * (_0x3b9eb1 + 0xbd0)) % 0x80000000,
        _0x595c3a = (0x8 << (_0x5435bf >> 0x8 & 0xff)) + (0x20 << (_0x5435bf >> 0x20 & 0xff)) + (0x18 << (_0x5435bf >> 0x10 & 0xff)) + (0x10 << (_0x5435bf >> 0x18 & 0xff)),
        _0x2e34c8 = (0x1 + (_0x15ceb5 + 0xa16c) * 0x15a4e35) % 0x100000000,
        _0x518ce4 = (0x4c97 | _0x49d36a) & ~(_0x49d36a & 0x4c97),
        _0x56b317 = fun27_token(_0x8bd05d, _0x29065b),
        _0x57581c = fun32_token(_0x595c3a, _0x2e34c8, _0x518ce4, _0x8bd05d, _0x29065b),
        _0x531fb6 = fun30_token(_0x595c3a, _0x2e34c8, _0x518ce4, _0x8bd05d, _0x29065b, _0x595c3a),
        _0x28efc7 = ~(0xc0ab & _0x56b317) & 0xc0ab | ~(0xc0ab & _0x56b317) & _0x56b317,
        _0x24ab10 = ~(_0x28efc7 & 0xb5e7) & (0xb5e7 | _0x28efc7);
    return _0x24ab10;
}

function fun17_token(_0xc7ac43, _0xbc2c5d, _0x22a243, _0x5acd9f) {
    const _0x446f0e = (0xe10b | _0xc7ac43) & ~(_0xc7ac43 & 0xe10b),
        _0x429ea8 = (0x19660d * (_0xbc2c5d + 0xde39) + 0x3c6ef35f) % 0x100000000,
        _0x5c3aa1 = _0x22a243 ^ 0xf57a,
        _0x5bb3d5 = ~(_0x5acd9f & 0x49b) & _0x5acd9f | ~(_0x5acd9f & 0x49b) & 0x49b,
        _0x4ea3eb = fun36_token(_0x446f0e, _0x429ea8, _0x5c3aa1, _0x5bb3d5),
        _0x569ef7 = fun21_token(_0x446f0e, _0x429ea8, _0x5c3aa1, _0x5bb3d5),
        _0x2e94d2 = fun18_token(_0x446f0e, _0x429ea8, _0x5c3aa1, _0x5bb3d5),
        _0x588ca0 = (0x18 << ((_0x4ea3eb ^ _0x569ef7) >> 0x18 & 0xff)) + (0x8 << ((_0x4ea3eb ^ _0x569ef7) >> 0x10 & 0xff)) + (0x10 << ((_0x4ea3eb ^ _0x569ef7) >> 0x20 & 0xff)) + (0x20 << ((_0x4ea3eb ^ _0x569ef7) >> 0x8 & 0xff)),
        _0x1dfb4d = ~(0xf748 & _0x588ca0) & (_0x588ca0 | 0xf748);
    return _0x1dfb4d;
}

function fun0_token(_0x455345, _0xbdf1ab, _0x16a4a0, _0x2c3aec, _0x4f47d5, _0x558f7f) {
    const _0x2cecbd = (0x3c6ef35f + (_0x455345 + 0x7098) * 0x19660d) % 0x100000000,
        _0x14bae8 = (0x3c6ef35f + 0x19660d * (0x339a + _0xbdf1ab)) % 0x100000000,
        _0x3db21b = ~(0x7da5 & _0x16a4a0) & 0x7da5 | ~(0x7da5 & _0x16a4a0) & _0x16a4a0,
        _0xfdd698 = (0x18 << (_0x2c3aec >> 0x18 & 0xff)) + (0x10 << (_0x2c3aec >> 0x8 & 0xff)) + (0x8 << (_0x2c3aec >> 0x10 & 0xff)) + (0x20 << (_0x2c3aec >> 0x20 & 0xff)),
        _0x1e1969 = (0x1 + (0x991f + _0x4f47d5) * 0x15a4e35) % 0x100000000,
        _0x5f3d80 = 0x810d ^ _0x558f7f,
        _0x3fc4af = fun1_token(_0x2cecbd, _0x14bae8, _0x3db21b),
        _0x58dacd = fun21_token(_0xfdd698, _0x1e1969, _0x5f3d80, _0x2cecbd),
        _0x48e162 = fun7_token(_0x14bae8, _0x3db21b, _0xfdd698, _0x1e1969),
        _0x5591b0 = _0x3fc4af ^ 0xb8f,
        _0x16136d = (0x41c64e6d * (0x856f + (_0x5591b0 ^ _0x48e162)) + 0x3039) % 0x80000000;
    return _0x16136d;
}

function fun19_token(_0x4871e3, _0x42c4e3, _0x2d1563, _0x3c0b03, _0x5d994f, _0x53cfb0) {
    const _0x2456ba = 0x29db ^ _0x4871e3,
        _0x5f31d2 = (0x18 << (_0x42c4e3 >> 0x10 & 0xff)) + (0x10 << (_0x42c4e3 >> 0x20 & 0xff)) + (0x20 << (_0x42c4e3 >> 0x8 & 0xff)) + (0x8 << (_0x42c4e3 >> 0x18 & 0xff)),
        _0xd0f938 = (0x8 << (_0x2d1563 >> 0x10 & 0xff)) + (0x20 << (_0x2d1563 >> 0x18 & 0xff)) + (0x10 << (_0x2d1563 >> 0x8 & 0xff)) + (0x18 << (_0x2d1563 >> 0x20 & 0xff)),
        _0x3afc01 = _0x3c0b03 ^ 0x9f4e,
        _0xd266e0 = _0x5d994f ^ 0xa155,
        _0x3bc40d = ~(_0x53cfb0 & 0x2f3b) & (0x2f3b | _0x53cfb0),
        _0x3977f4 = fun20_token(_0x2456ba, _0x5f31d2, _0xd0f938, _0x3afc01, _0xd266e0, _0x3bc40d),
        _0x3fc7a1 = fun20_token(_0x2456ba, _0x5f31d2, _0xd0f938, _0x3afc01, _0xd266e0, _0x3bc40d),
        _0x49a5c4 = fun29_token(_0x2456ba, _0x5f31d2, _0xd0f938, _0x3afc01, _0xd266e0),
        _0x180816 = (_0x3977f4 | 0xbbe) & ~(_0x3977f4 & 0xbbe),
        _0x375913 = ~(0x5f8c & _0x180816) & (_0x180816 | 0x5f8c);
    return _0x375913;
}

function fun7_token(_0x312472, _0x103be7, _0x9f1de3, _0x3bcbb7) {
    const _0x487910 = ~(0x8153 & _0x312472) & (0x8153 | _0x312472),
        _0x1afbe0 = (0x18 << (_0x103be7 >> 0x20 & 0xff)) + (0x20 << (_0x103be7 >> 0x8 & 0xff)) + (0x8 << (_0x103be7 >> 0x10 & 0xff)) + (0x10 << (_0x103be7 >> 0x18 & 0xff)),
        _0x18686c = ~(_0x9f1de3 & 0x7d35) & (0x7d35 | _0x9f1de3),
        _0x38b081 = 0x2fd0 ^ _0x3bcbb7,
        _0x5ad576 = fun8_token(_0x487910, _0x1afbe0, _0x18686c, _0x38b081),
        _0x1b5f7a = fun21_token(_0x487910, _0x1afbe0, _0x18686c, _0x38b081),
        _0x5a4d1b = fun15_token(_0x487910, _0x1afbe0, _0x18686c, _0x38b081, _0x487910),
        _0x1aefda = ~(0xfa83 & _0x5ad576) & 0xfa83 | ~(0xfa83 & _0x5ad576) & _0x5ad576,
        _0x2d5f78 = (0x269ec3 + 0x343fd * (0xad40 + (_0x1aefda ^ _0x5a4d1b))) % 0x100000000;
    return _0x2d5f78;
}

function fun20_token(_0x479fa7, _0x24b7cf, _0x30819b, _0x3468ca, _0x183c21, _0x368867) {
    const _0x46f9e8 = ~(_0x479fa7 & 0x8d25) & (_0x479fa7 | 0x8d25),
        _0x566dda = (0x3566 | _0x24b7cf) & ~(_0x24b7cf & 0x3566),
        _0x52b17c = (0x7a9e | _0x30819b) & ~(_0x30819b & 0x7a9e),
        _0x5e9892 = _0x3468ca ^ 0xfa51,
        _0x31a2b3 = 0x1d7e ^ _0x183c21,
        _0x9752f1 = (0x7fffffc3 + (_0x368867 + 0xf9ce) * 0x7fffffed) % 0x7fffffff,
        _0x3c7915 = fun28_token(_0x46f9e8, _0x566dda, _0x52b17c, _0x5e9892, _0x31a2b3),
        _0x2ce9cb = fun21_token(_0x9752f1, _0x46f9e8, _0x566dda, _0x52b17c),
        _0xe2b2e = fun29_token(_0x5e9892, _0x31a2b3, _0x9752f1, _0x46f9e8, _0x566dda),
        _0x35a94a = ((0xf458 + (_0x3c7915 ^ _0x2ce9cb)) * 0x7fffffed + 0x7fffffc3) % 0x7fffffff,
        _0x5a9b90 = (0x3039 + 0x41c64e6d * (0x8f98 + (_0x35a94a ^ _0xe2b2e))) % 0x80000000;
    return _0x5a9b90;
}

function fun5_token(_0x3f89ca, _0x5b09fe, _0x1dcc2f) {
    const _0x41a889 = (0x19660d * (0x14ae + _0x3f89ca) + 0x3c6ef35f) % 0x100000000,
        _0x233fdc = (_0x5b09fe | 0xd971) & ~(0xd971 & _0x5b09fe),
        _0x2e6683 = (_0x1dcc2f + 0xd569) % 0xff7c,
        _0x2e5de8 = fun16_token(_0x41a889, _0x233fdc, _0x2e6683, _0x41a889, _0x233fdc),
        _0x27a18f = fun6_token(_0x2e6683, _0x41a889, _0x233fdc, _0x2e6683, _0x41a889, _0x233fdc),
        _0x57575e = fun21_token(_0x2e6683, _0x41a889, _0x233fdc, _0x2e6683),
        _0x3d44f0 = ~(0xab63 & _0x2e5de8) & (0xab63 | _0x2e5de8),
        _0x272a09 = _0x3d44f0 ^ 0x3b0c;
    return _0x272a09;
}

function fun12_token(_0x39b596, _0x217907, _0x464863, _0x520fa5) {
    const _0x1c3b2d = (_0x39b596 | 0x3c48) & ~(_0x39b596 & 0x3c48),
        _0x20c4a4 = 0x301b ^ _0x217907,
        _0x32b43f = _0x464863 ^ 0x973a,
        _0x2b822b = 0xe2e4 ^ _0x520fa5,
        _0x140299 = fun13_token(_0x1c3b2d, _0x20c4a4, _0x32b43f, _0x2b822b, _0x1c3b2d, _0x20c4a4),
        _0x557acb = fun21_token(_0x32b43f, _0x2b822b, _0x1c3b2d, _0x20c4a4),
        _0x3da0f4 = fun35_token(_0x32b43f, _0x2b822b, _0x1c3b2d, _0x20c4a4, _0x32b43f, _0x2b822b),
        _0xcea92d = ~(0xa0ae & _0x140299) & _0x140299 | ~(_0x140299 & 0xa0ae) & 0xa0ae,
        _0xd4a16c = ((0x8779 + (_0xcea92d ^ _0x3da0f4)) * 0x343fd + 0x269ec3) % 0x100000000;
    return _0xd4a16c;
}

function fun4_token(_0x2dcecf, _0x418c96) {
    const _0x38bb5b = ((_0x2dcecf + 0xc13c) * 0x41c64e6d + 0x3039) % 0x80000000,
        _0x914929 = ((_0x418c96 + 0x7731) * 0x343fd + 0x269ec3) % 0x100000000,
        _0x4d502a = fun5_token(_0x38bb5b, _0x914929, _0x38bb5b),
        _0x1b1973 = fun29_token(_0x914929, _0x38bb5b, _0x914929, _0x38bb5b, _0x914929),
        _0x14b36f = fun36_token(_0x38bb5b, _0x914929, _0x38bb5b, _0x914929),
        _0x179488 = (0x4617 | _0x4d502a) & ~(_0x4d502a & 0x4617),
        _0xf00bd4 = 0x551f ^ _0x179488;
    return _0xf00bd4;
}

function fun10_token(_0x2a672f, _0x45d70b, _0x29b1f0, _0x29c80e) {
    const _0x2e07e0 = (_0x2a672f + 0x85ea) % 0xff38,
        _0x5c1e26 = ~(_0x45d70b & 0xb07d) & 0xb07d | ~(0xb07d & _0x45d70b) & _0x45d70b,
        _0x5a5e1f = (0x10 << (_0x29b1f0 >> 0x8 & 0xff)) + (0x20 << (_0x29b1f0 >> 0x18 & 0xff)) + (0x8 << (_0x29b1f0 >> 0x20 & 0xff)) + (0x18 << (_0x29b1f0 >> 0x10 & 0xff)),
        _0x234511 = ~(_0x29c80e & 0x6383) & 0x6383 | ~(0x6383 & _0x29c80e) & _0x29c80e,
        _0xc0584c = fun11_token(_0x2e07e0, _0x5c1e26),
        _0x493c99 = fun32_token(_0x5a5e1f, _0x234511, _0x2e07e0, _0x5c1e26, _0x5a5e1f),
        _0x5c08c6 = fun23_token(_0x234511, _0x2e07e0),
        _0x495718 = (0xe482 + (_0xc0584c ^ _0x493c99)) % 0xfffb,
        _0x434780 = ~(_0x495718 & 0x9091) & 0x9091 | ~(0x9091 & _0x495718) & _0x495718;
    return _0x434780;
}

function fun35_token(_0x3d5a5c, _0x221683, _0x1be2be, _0x40cde7, _0x471ee3, _0x3565b9) {
    const _0x43213d = _0x3d5a5c ^ 0x5b71,
        _0x323222 = _0x221683 ^ 0x670c,
        _0x4b67e3 = _0x1be2be ^ 0xd156,
        _0x4be0f3 = 0x8f19 ^ _0x40cde7,
        _0x23c81d = (0x41c64e6d * (_0x471ee3 + 0x80f9) + 0x3039) % 0x80000000,
        _0x37f93b = 0xa5fa ^ _0x3565b9,
        _0x5b6954 = fun36_token(_0x43213d, _0x323222, _0x4b67e3, _0x4be0f3),
        _0x1699ff = fun36_token(_0x23c81d, _0x37f93b, _0x43213d, _0x323222),
        _0xf849fe = (0x15a4e35 * (0x4a70 + (_0x5b6954 ^ _0x1699ff)) + 0x1) % 0x100000000;
    return _0xf849fe;
}

function fun24_token(_0x56fb68, _0x11728f, _0x36b11d, _0x557870, _0x2a2749) {
    const _0x5baa0e = ((0x25f4 + _0x56fb68) * 0x19660d + 0x3c6ef35f) % 0x100000000,
        _0x19e057 = ~(_0x11728f & 0x1e17) & _0x11728f | ~(_0x11728f & 0x1e17) & 0x1e17,
        _0x311f28 = (_0x36b11d | 0x7a2b) & ~(0x7a2b & _0x36b11d),
        _0x3faa07 = ~(0x645d & _0x557870) & 0x645d | ~(0x645d & _0x557870) & _0x557870,
        _0x4d1aa1 = (0x8 << (_0x2a2749 >> 0x8 & 0xff)) + (0x20 << (_0x2a2749 >> 0x18 & 0xff)) + (0x18 << (_0x2a2749 >> 0x10 & 0xff)) + (0x10 << (_0x2a2749 >> 0x20 & 0xff)),
        _0x8e3c05 = fun35_token(_0x5baa0e, _0x19e057, _0x311f28, _0x3faa07, _0x4d1aa1, _0x5baa0e),
        _0x3219e3 = fun36_token(_0x19e057, _0x311f28, _0x3faa07, _0x4d1aa1),
        _0x7072c4 = fun25_token(_0x5baa0e, _0x19e057, _0x311f28),
        _0x45b53f = (0x18 << ((_0x8e3c05 ^ _0x3219e3) >> 0x10 & 0xff)) + (0x8 << ((_0x8e3c05 ^ _0x3219e3) >> 0x8 & 0xff)) + (0x20 << ((_0x8e3c05 ^ _0x3219e3) >> 0x18 & 0xff)) + (0x10 << ((_0x8e3c05 ^ _0x3219e3) >> 0x20 & 0xff)),
        _0x1561dd = _0x45b53f ^ 0x7bde;
    return _0x1561dd;
}

function fun34_token(_0x1dee4a, _0x2e93ae) {
    const _0x5d48b = (0x269ec3 + (_0x1dee4a + 0xf59a) * 0x343fd) % 0x100000000,
        _0x19555c = (0x18 << (_0x2e93ae >> 0x18 & 0xff)) + (0x10 << (_0x2e93ae >> 0x20 & 0xff)) + (0x8 << (_0x2e93ae >> 0x8 & 0xff)) + (0x20 << (_0x2e93ae >> 0x10 & 0xff)),
        _0x22713b = fun35_token(_0x5d48b, _0x19555c, _0x5d48b, _0x19555c, _0x5d48b, _0x19555c),
        _0x5be748 = fun35_token(_0x5d48b, _0x19555c, _0x5d48b, _0x19555c, _0x5d48b, _0x19555c),
        _0x5275ae = fun36_token(_0x5d48b, _0x19555c, _0x5d48b, _0x19555c),
        _0x2fc04d = (0x10 << ((_0x22713b ^ _0x5be748) >> 0x20 & 0xff)) + (0x8 << ((_0x22713b ^ _0x5be748) >> 0x18 & 0xff)) + (0x18 << ((_0x22713b ^ _0x5be748) >> 0x10 & 0xff)) + (0x20 << ((_0x22713b ^ _0x5be748) >> 0x8 & 0xff)),
        _0x8f96da = ~(_0x2fc04d & 0xda8d) & 0xda8d | ~(0xda8d & _0x2fc04d) & _0x2fc04d;
    return _0x8f96da;
}

function fun30_token(_0x54d2a9, _0x59530b, _0x3c0d36, _0x58b8cb, _0x240b2c, _0x1f5683) {
    const _0x95346f = (0x18 << (_0x54d2a9 >> 0x18 & 0xff)) + (0x20 << (_0x54d2a9 >> 0x10 & 0xff)) + (0x10 << (_0x54d2a9 >> 0x8 & 0xff)) + (0x8 << (_0x54d2a9 >> 0x20 & 0xff)),
        _0x4f4cc0 = (0xa24f | _0x59530b) & ~(_0x59530b & 0xa24f),
        _0x4eed78 = (0x18 << (_0x3c0d36 >> 0x18 & 0xff)) + (0x10 << (_0x3c0d36 >> 0x20 & 0xff)) + (0x8 << (_0x3c0d36 >> 0x10 & 0xff)) + (0x20 << (_0x3c0d36 >> 0x8 & 0xff)),
        _0x411541 = ~(0x7f81 & _0x58b8cb) & (0x7f81 | _0x58b8cb),
        _0x24318a = ((_0x240b2c + 0x8afe) * 0x343fd + 0x269ec3) % 0x100000000,
        _0x53ce79 = ~(0x442 & _0x1f5683) & (_0x1f5683 | 0x442),
        _0x5afbc2 = fun33_token(_0x95346f, _0x4f4cc0, _0x4eed78, _0x411541, _0x24318a, _0x53ce79),
        _0x1b85e4 = fun31_token(_0x95346f, _0x4f4cc0, _0x4eed78, _0x411541, _0x24318a),
        _0xac2ebc = fun36_token(_0x53ce79, _0x95346f, _0x4f4cc0, _0x4eed78),
        _0x27da2a = ~(_0x5afbc2 & 0x1f8d) & 0x1f8d | ~(0x1f8d & _0x5afbc2) & _0x5afbc2,
        _0x23ecf3 = ~(0xe7c & _0x27da2a) & (_0x27da2a | 0xe7c);
    return _0x23ecf3;
}

function fun14_token(_0x43b6ea, _0x5735ce, _0x464283, _0x9242e2, _0x4fae40, _0x398497) {
    const _0xbd7394 = 0x75be ^ _0x43b6ea,
        _0x800c7a = (_0x5735ce + 0xf631) % 0xffd5,
        _0x345940 = _0x464283 ^ 0x7839,
        _0x38a8b2 = ((0xb373 + _0x9242e2) * 0x15a4e35 + 0x1) % 0x100000000,
        _0x261798 = (0x8 << (_0x4fae40 >> 0x10 & 0xff)) + (0x20 << (_0x4fae40 >> 0x18 & 0xff)) + (0x18 << (_0x4fae40 >> 0x20 & 0xff)) + (0x10 << (_0x4fae40 >> 0x8 & 0xff)),
        _0x261df4 = (_0x398497 | 0xb254) & ~(_0x398497 & 0xb254),
        _0x24de7b = fun15_token(_0xbd7394, _0x800c7a, _0x345940, _0x38a8b2, _0x261798),
        _0x1c25a6 = fun16_token(_0x261df4, _0xbd7394, _0x800c7a, _0x345940, _0x38a8b2),
        _0xc9d150 = fun30_token(_0x261798, _0x261df4, _0xbd7394, _0x800c7a, _0x345940, _0x38a8b2),
        _0x574fde = 0xb746 ^ _0x24de7b,
        _0x2e2675 = _0x574fde ^ 0x5dd6;
    return _0x2e2675;
}

function entrypoint(_0xea73a8) {
    return fun0_token(_0xea73a8, 0x2044, 0xb763, 0x1f44, 0x91d2, 0x14d2);
}

function fun6_token(_0x1d476b, _0x9d8bcd, _0x26ef02, _0xa7b341, _0x51e8b9, _0x687e96) {
    const _0x5d0745 = (0x269ec3 + (_0x1d476b + 0x423b) * 0x343fd) % 0x100000000,
        _0x7191de = (0x41c64e6d * (0x24dc + _0x9d8bcd) + 0x3039) % 0x80000000,
        _0x2cd2d9 = (0x39b6 | _0x26ef02) & ~(0x39b6 & _0x26ef02),
        _0x4d870a = (0xbea2 | _0xa7b341) & ~(_0xa7b341 & 0xbea2),
        _0x4661ca = ~(_0x51e8b9 & 0x61a6) & (_0x51e8b9 | 0x61a6),
        _0xacf0b7 = (0x8 << (_0x687e96 >> 0x8 & 0xff)) + (0x10 << (_0x687e96 >> 0x10 & 0xff)) + (0x20 << (_0x687e96 >> 0x20 & 0xff)) + (0x18 << (_0x687e96 >> 0x18 & 0xff)),
        _0x3c2444 = fun7_token(_0x5d0745, _0x7191de, _0x2cd2d9, _0x4d870a),
        _0xf4e6a0 = fun32_token(_0x4661ca, _0xacf0b7, _0x5d0745, _0x7191de, _0x2cd2d9),
        _0x25221c = fun7_token(_0x4d870a, _0x4661ca, _0xacf0b7, _0x5d0745),
        _0x128e3c = (0x18 << ((_0x3c2444 ^ _0xf4e6a0) >> 0x18 & 0xff)) + (0x8 << ((_0x3c2444 ^ _0xf4e6a0) >> 0x20 & 0xff)) + (0x10 << ((_0x3c2444 ^ _0xf4e6a0) >> 0x8 & 0xff)) + (0x20 << ((_0x3c2444 ^ _0xf4e6a0) >> 0x10 & 0xff)),
        _0x330432 = (((_0x128e3c ^ _0x25221c) + 0x8a4c) * 0x343fd + 0x269ec3) % 0x100000000;
    return _0x330432;
}

function fun3_token(_0x4f3bd2, _0x1e76c4, _0x354840, _0x3e2578, _0x3dfae2) {
    const _0x165418 = 0xfc3a ^ _0x4f3bd2,
        _0x301af4 = (0x269ec3 + 0x343fd * (_0x1e76c4 + 0xa328)) % 0x100000000,
        _0x2cfdbb = (0x3c6ef35f + (_0x354840 + 0xab93) * 0x19660d) % 0x100000000,
        _0x5073c8 = (0x10 << (_0x3e2578 >> 0x20 & 0xff)) + (0x8 << (_0x3e2578 >> 0x18 & 0xff)) + (0x20 << (_0x3e2578 >> 0x10 & 0xff)) + (0x18 << (_0x3e2578 >> 0x8 & 0xff)),
        _0x4d16ed = (_0x3dfae2 | 0x5588) & ~(_0x3dfae2 & 0x5588),
        _0x3669e0 = fun4_token(_0x165418, _0x301af4),
        _0x3d04ff = fun12_token(_0x2cfdbb, _0x5073c8, _0x4d16ed, _0x165418),
        _0x4c95ec = fun26_token(_0x301af4, _0x2cfdbb, _0x5073c8, _0x4d16ed, _0x165418),
        _0x5e70e6 = ~(0xcbee & _0x3669e0) & (_0x3669e0 | 0xcbee),
        _0x28663a = (0x3039 + (0x1d43 + (_0x5e70e6 ^ _0x4c95ec)) * 0x41c64e6d) % 0x80000000;
    return _0x28663a;
}

function fun29_token(_0x50751a, _0x42f04f, _0x40ed26, _0x15a9d9, _0x4932e9) {
    const _0x37b7a4 = (0x7fffffc3 + 0x7fffffed * (_0x50751a + 0xfcfa)) % 0x7fffffff,
        _0x48def0 = ((0x4715 + _0x42f04f) * 0x343fd + 0x269ec3) % 0x100000000,
        _0x65b5a1 = (0x269ec3 + (0x593d + _0x40ed26) * 0x343fd) % 0x100000000,
        _0x37c8f8 = (0x20 << (_0x15a9d9 >> 0x10 & 0xff)) + (0x10 << (_0x15a9d9 >> 0x8 & 0xff)) + (0x8 << (_0x15a9d9 >> 0x20 & 0xff)) + (0x18 << (_0x15a9d9 >> 0x18 & 0xff)),
        _0x5ad194 = ~(_0x4932e9 & 0x2edf) & _0x4932e9 | ~(_0x4932e9 & 0x2edf) & 0x2edf,
        _0x4fec3c = fun35_token(_0x37b7a4, _0x48def0, _0x65b5a1, _0x37c8f8, _0x5ad194, _0x37b7a4),
        _0x2d459f = fun30_token(_0x48def0, _0x65b5a1, _0x37c8f8, _0x5ad194, _0x37b7a4, _0x48def0),
        _0x4a24a1 = fun36_token(_0x65b5a1, _0x37c8f8, _0x5ad194, _0x37b7a4),
        _0x3a4ea4 = (0x8 << ((_0x4fec3c ^ _0x2d459f) >> 0x18 & 0xff)) + (0x10 << ((_0x4fec3c ^ _0x2d459f) >> 0x10 & 0xff)) + (0x18 << ((_0x4fec3c ^ _0x2d459f) >> 0x8 & 0xff)) + (0x20 << ((_0x4fec3c ^ _0x2d459f) >> 0x20 & 0xff)),
        _0x402df5 = _0x3a4ea4 ^ 0x8a74;
    return _0x402df5;
}

function fun21_token(_0x4ffc62, _0x49d83d, _0x58c50c, _0x485721) {
    const _0x2353c6 = (0x7fffffc3 + 0x7fffffed * (0x922a + _0x4ffc62)) % 0x7fffffff,
        _0x4b7f63 = _0x49d83d ^ 0xe117,
        _0x4563f3 = ~(_0x58c50c & 0x9d58) & _0x58c50c | ~(_0x58c50c & 0x9d58) & 0x9d58,
        _0x4b3594 = ~(_0x485721 & 0x6019) & _0x485721 | ~(_0x485721 & 0x6019) & 0x6019,
        _0x963a07 = fun27_token(_0x2353c6, _0x4b7f63),
        _0x372be3 = fun27_token(_0x4563f3, _0x4b3594),
        _0x434415 = fun22_token(_0x2353c6, _0x4b7f63, _0x4563f3, _0x4b3594, _0x2353c6),
        _0x2da279 = ~(0xab7e & _0x963a07) & 0xab7e | ~(0xab7e & _0x963a07) & _0x963a07,
        _0x43e391 = (0x229e | _0x2da279) & ~(0x229e & _0x2da279);
    return _0x43e391;
}

function fun8_token(_0x466385, _0x330b68, _0x2e2c81, _0x115286) {
    const _0x83e46e = (0x20 << (_0x466385 >> 0x20 & 0xff)) + (0x10 << (_0x466385 >> 0x10 & 0xff)) + (0x18 << (_0x466385 >> 0x18 & 0xff)) + (0x8 << (_0x466385 >> 0x8 & 0xff)),
        _0x47d40a = (0x1 + (0xc5a3 + _0x330b68) * 0x15a4e35) % 0x100000000,
        _0xf2507 = ~(0x9c82 & _0x2e2c81) & _0x2e2c81 | ~(_0x2e2c81 & 0x9c82) & 0x9c82,
        _0x25c9b9 = 0x4950 ^ _0x115286,
        _0x147451 = fun15_token(_0x83e46e, _0x47d40a, _0xf2507, _0x25c9b9, _0x83e46e),
        _0x44d176 = fun9_token(_0x47d40a, _0xf2507, _0x25c9b9, _0x83e46e, _0x47d40a),
        _0x3045ca = fun34_token(_0xf2507, _0x25c9b9),
        _0x5a38e6 = (0x269ec3 + ((_0x147451 ^ _0x44d176) + 0x89d7) * 0x343fd) % 0x100000000,
        _0x539a1a = (((_0x5a38e6 ^ _0x3045ca) + 0x417f) * 0x19660d + 0x3c6ef35f) % 0x100000000;
    return _0x539a1a;
}

function fun1_token(_0x143944, _0x481e3f, _0x15a524) {
    const _0x55bee = (0x3039 + (0x988b + _0x143944) * 0x41c64e6d) % 0x80000000,
        _0x3f1962 = (0xac55 | _0x481e3f) & ~(_0x481e3f & 0xac55),
        _0x2dbd5c = (0x18 << (_0x15a524 >> 0x18 & 0xff)) + (0x8 << (_0x15a524 >> 0x10 & 0xff)) + (0x10 << (_0x15a524 >> 0x20 & 0xff)) + (0x20 << (_0x15a524 >> 0x8 & 0xff)),
        _0x459ab0 = fun24_token(_0x55bee, _0x3f1962, _0x2dbd5c, _0x55bee, _0x3f1962),
        _0x3a2e31 = fun33_token(_0x2dbd5c, _0x55bee, _0x3f1962, _0x2dbd5c, _0x55bee, _0x3f1962),
        _0x51a010 = fun2_token(_0x2dbd5c, _0x55bee),
        _0x346b0e = (0x10 << ((_0x459ab0 ^ _0x3a2e31) >> 0x20 & 0xff)) + (0x18 << ((_0x459ab0 ^ _0x3a2e31) >> 0x18 & 0xff)) + (0x20 << ((_0x459ab0 ^ _0x3a2e31) >> 0x8 & 0xff)) + (0x8 << ((_0x459ab0 ^ _0x3a2e31) >> 0x10 & 0xff)),
        _0x429f96 = (0x8 << ((_0x346b0e ^ _0x51a010) >> 0x20 & 0xff)) + (0x10 << ((_0x346b0e ^ _0x51a010) >> 0x8 & 0xff)) + (0x20 << ((_0x346b0e ^ _0x51a010) >> 0x10 & 0xff)) + (0x18 << ((_0x346b0e ^ _0x51a010) >> 0x18 & 0xff));
    return _0x429f96;
}

function fun15_token(_0x3750ee, _0x31762f, _0x2034a2, _0x4f4d14, _0x4d1f54) {
    const _0xaebfd8 = _0x3750ee ^ 0xf238,
        _0x164d1d = (0x18 << (_0x31762f >> 0x20 & 0xff)) + (0x8 << (_0x31762f >> 0x10 & 0xff)) + (0x20 << (_0x31762f >> 0x8 & 0xff)) + (0x10 << (_0x31762f >> 0x18 & 0xff)),
        _0x2a15ca = (0x15a4e35 * (_0x2034a2 + 0xb5c3) + 0x1) % 0x100000000,
        _0x188867 = ~(_0x4f4d14 & 0x75c) & 0x75c | ~(0x75c & _0x4f4d14) & _0x4f4d14,
        _0x2babff = ~(_0x4d1f54 & 0xd924) & 0xd924 | ~(0xd924 & _0x4d1f54) & _0x4d1f54,
        _0x2b2ae5 = fun16_token(_0xaebfd8, _0x164d1d, _0x2a15ca, _0x188867, _0x2babff),
        _0x5438cc = fun33_token(_0xaebfd8, _0x164d1d, _0x2a15ca, _0x188867, _0x2babff, _0xaebfd8),
        _0x3d4ab1 = fun22_token(_0x164d1d, _0x2a15ca, _0x188867, _0x2babff, _0xaebfd8),
        _0x287514 = _0x2b2ae5 ^ 0xe07b,
        _0x147b30 = (0x19660d * ((_0x287514 ^ _0x3d4ab1) + 0xbdd) + 0x3c6ef35f) % 0x100000000;
    return _0x147b30;
}

function fun27_token(_0x29ea43, _0x52a88b) {
    const _0xa51f6c = (0x19660d * (_0x29ea43 + 0xae78) + 0x3c6ef35f) % 0x100000000,
        _0xb8a21e = _0x52a88b ^ 0xcf58,
        _0x4bf53 = fun28_token(_0xa51f6c, _0xb8a21e, _0xa51f6c, _0xb8a21e, _0xa51f6c),
        _0x4118dd = fun32_token(_0xb8a21e, _0xa51f6c, _0xb8a21e, _0xa51f6c, _0xb8a21e),
        _0x1063e6 = fun36_token(_0xa51f6c, _0xb8a21e, _0xa51f6c, _0xb8a21e),
        _0x4833e2 = ((_0x4bf53 ^ _0x4118dd) + 0x4569) % 0xff4d,
        _0x1f6611 = (0x1 + 0x15a4e35 * ((_0x4833e2 ^ _0x1063e6) + 0xe0b5)) % 0x100000000;
    return _0x1f6611;
}

function fun32_token(_0x27ff6a, _0x48af0a, _0x4cb4dc, _0x51484c, _0x46177e) {
    const _0xc7b9b8 = ~(0xa4db & _0x27ff6a) & _0x27ff6a | ~(_0x27ff6a & 0xa4db) & 0xa4db,
        _0x160651 = 0xc3c6 ^ _0x48af0a,
        _0x15789a = _0x4cb4dc ^ 0xa294,
        _0x27d932 = ((_0x51484c + 0x85c0) * 0x7fffffed + 0x7fffffc3) % 0x7fffffff,
        _0x5ca451 = (0x20 << (_0x46177e >> 0x10 & 0xff)) + (0x10 << (_0x46177e >> 0x8 & 0xff)) + (0x8 << (_0x46177e >> 0x20 & 0xff)) + (0x18 << (_0x46177e >> 0x18 & 0xff)),
        _0x5080e9 = fun33_token(_0xc7b9b8, _0x160651, _0x15789a, _0x27d932, _0x5ca451, _0xc7b9b8),
        _0x43c4a0 = fun33_token(_0x160651, _0x15789a, _0x27d932, _0x5ca451, _0xc7b9b8, _0x160651),
        _0xeb5949 = fun36_token(_0x15789a, _0x27d932, _0x5ca451, _0xc7b9b8),
        _0x3e77dc = (0xa9d5 | _0x5080e9) & ~(_0x5080e9 & 0xa9d5),
        _0x27a79b = (0x269ec3 + ((_0x3e77dc ^ _0xeb5949) + 0xd170) * 0x343fd) % 0x100000000;
    return _0x27a79b;
}

function fun28_token(_0x4e25e9, _0x1f868b, _0x22e5a2, _0x188c0c, _0xc732f1) {
    const _0x43282e = (0x10 << (_0x4e25e9 >> 0x20 & 0xff)) + (0x18 << (_0x4e25e9 >> 0x18 & 0xff)) + (0x8 << (_0x4e25e9 >> 0x8 & 0xff)) + (0x20 << (_0x4e25e9 >> 0x10 & 0xff)),
        _0x5a92c4 = _0x1f868b ^ 0xdaaa,
        _0x5b4481 = (0x19660d * (_0x22e5a2 + 0xb76) + 0x3c6ef35f) % 0x100000000,
        _0xec1049 = ~(_0x188c0c & 0x77b2) & (_0x188c0c | 0x77b2),
        _0x359218 = (0x8 << (_0xc732f1 >> 0x8 & 0xff)) + (0x18 << (_0xc732f1 >> 0x20 & 0xff)) + (0x10 << (_0xc732f1 >> 0x18 & 0xff)) + (0x20 << (_0xc732f1 >> 0x10 & 0xff)),
        _0x1ed6db = fun32_token(_0x43282e, _0x5a92c4, _0x5b4481, _0xec1049, _0x359218),
        _0x59ed17 = fun29_token(_0x43282e, _0x5a92c4, _0x5b4481, _0xec1049, _0x359218),
        _0x388cd2 = fun36_token(_0x43282e, _0x5a92c4, _0x5b4481, _0xec1049),
        _0x1cb9bb = (0x10 << ((_0x1ed6db ^ _0x59ed17) >> 0x20 & 0xff)) + (0x18 << ((_0x1ed6db ^ _0x59ed17) >> 0x8 & 0xff)) + (0x8 << ((_0x1ed6db ^ _0x59ed17) >> 0x18 & 0xff)) + (0x20 << ((_0x1ed6db ^ _0x59ed17) >> 0x10 & 0xff)),
        _0x2d7dc9 = ~(0x5c86 & _0x1cb9bb) & (0x5c86 | _0x1cb9bb);
    return _0x2d7dc9;
}

function fun22_token(_0x5a13aa, _0x4f2000, _0x16c480, _0xd70556, _0x51ce3d) {
    const _0x2ed5df = ((_0x5a13aa + 0xc015) * 0x41c64e6d + 0x3039) % 0x80000000,
        _0x38b172 = (_0x4f2000 + 0xceba) % 0xff39,
        _0x4a45cc = _0x16c480 ^ 0x62a2,
        _0x5b64fe = ~(_0xd70556 & 0x2a97) & 0x2a97 | ~(0x2a97 & _0xd70556) & _0xd70556,
        _0x321bee = ~(_0x51ce3d & 0x8416) & 0x8416 | ~(0x8416 & _0x51ce3d) & _0x51ce3d,
        _0x53b155 = fun31_token(_0x2ed5df, _0x38b172, _0x4a45cc, _0x5b64fe, _0x321bee),
        _0x38d73c = fun23_token(_0x2ed5df, _0x38b172),
        _0x241b09 = fun31_token(_0x4a45cc, _0x5b64fe, _0x321bee, _0x2ed5df, _0x38b172),
        _0x249eb9 = (0x1 + 0x15a4e35 * ((_0x53b155 ^ _0x38d73c) + 0x4cdb)) % 0x100000000,
        _0xdf0c2c = ~(0x1ef2 & _0x249eb9) & _0x249eb9 | ~(_0x249eb9 & 0x1ef2) & 0x1ef2;
    return _0xdf0c2c;
}

function fun23_token(_0x4ef50e, _0x476ba4) {
    const _0x2aa435 = 0x5fbc ^ _0x4ef50e,
        _0x58f7f0 = (0x10 << (_0x476ba4 >> 0x10 & 0xff)) + (0x18 << (_0x476ba4 >> 0x8 & 0xff)) + (0x20 << (_0x476ba4 >> 0x20 & 0xff)) + (0x8 << (_0x476ba4 >> 0x18 & 0xff)),
        _0x1d981a = fun26_token(_0x2aa435, _0x58f7f0, _0x2aa435, _0x58f7f0, _0x2aa435),
        _0x546ff1 = fun28_token(_0x58f7f0, _0x2aa435, _0x58f7f0, _0x2aa435, _0x58f7f0),
        _0xf30e7b = fun24_token(_0x2aa435, _0x58f7f0, _0x2aa435, _0x58f7f0, _0x2aa435),
        _0x5836be = (0x7fffffed * ((_0x1d981a ^ _0x546ff1) + 0x2c05) + 0x7fffffc3) % 0x7fffffff,
        _0xe83d48 = ~(_0x5836be & 0x9fdf) & 0x9fdf | ~(0x9fdf & _0x5836be) & _0x5836be;
    return _0xe83d48;
}

function fun25_token(_0x227f82, _0x3d7ceb, _0x226fb9) {
    const _0x50b3f0 = 0x5b1b ^ _0x227f82,
        _0x5e4db0 = (0x269ec3 + (0xf111 + _0x3d7ceb) * 0x343fd) % 0x100000000,
        _0x37eea3 = (_0x226fb9 | 0x5e86) & ~(_0x226fb9 & 0x5e86),
        _0x49481f = fun26_token(_0x50b3f0, _0x5e4db0, _0x37eea3, _0x50b3f0, _0x5e4db0),
        _0x4da484 = fun26_token(_0x37eea3, _0x50b3f0, _0x5e4db0, _0x37eea3, _0x50b3f0),
        _0x5474d5 = fun26_token(_0x5e4db0, _0x37eea3, _0x50b3f0, _0x5e4db0, _0x37eea3),
        _0x57b77e = (0x10 << ((_0x49481f ^ _0x4da484) >> 0x20 & 0xff)) + (0x8 << ((_0x49481f ^ _0x4da484) >> 0x8 & 0xff)) + (0x18 << ((_0x49481f ^ _0x4da484) >> 0x18 & 0xff)) + (0x20 << ((_0x49481f ^ _0x4da484) >> 0x10 & 0xff)),
        _0x35352c = _0x57b77e ^ 0x79cd;
    return _0x35352c;
}

function fun33_token(_0x406582, _0x51a56f, _0x43b891, _0x5b6fd9, _0x525354, _0x35f98d) {
    const _0x56579e = (_0x406582 + 0xcd03) % 0xffd8,
        _0xead900 = (0x10 << (_0x51a56f >> 0x10 & 0xff)) + (0x18 << (_0x51a56f >> 0x8 & 0xff)) + (0x20 << (_0x51a56f >> 0x18 & 0xff)) + (0x8 << (_0x51a56f >> 0x20 & 0xff)),
        _0x31b932 = _0x43b891 ^ 0x1fa6,
        _0x596bc2 = (0x18 << (_0x5b6fd9 >> 0x10 & 0xff)) + (0x20 << (_0x5b6fd9 >> 0x20 & 0xff)) + (0x8 << (_0x5b6fd9 >> 0x18 & 0xff)) + (0x10 << (_0x5b6fd9 >> 0x8 & 0xff)),
        _0x17bf68 = ~(_0x525354 & 0x73f7) & 0x73f7 | ~(0x73f7 & _0x525354) & _0x525354,
        _0xbed16c = (0x1 + (0xf31d + _0x35f98d) * 0x15a4e35) % 0x100000000,
        _0x5b9574 = fun34_token(_0x56579e, _0xead900),
        _0x23fd1b = fun34_token(_0x31b932, _0x596bc2),
        _0x17a6af = fun34_token(_0x17bf68, _0xbed16c),
        _0x330d5e = (0xb0ea + (_0x5b9574 ^ _0x23fd1b)) % 0xff36,
        _0x189751 = 0xd917 ^ _0x330d5e;
    return _0x189751;
}

function fun2_token(_0x315b0a, _0x3f3390) {
    const _0x420dea = (0x10 << (_0x315b0a >> 0x8 & 0xff)) + (0x20 << (_0x315b0a >> 0x10 & 0xff)) + (0x8 << (_0x315b0a >> 0x20 & 0xff)) + (0x18 << (_0x315b0a >> 0x18 & 0xff)),
        _0x4a938a = (0x20 << (_0x3f3390 >> 0x20 & 0xff)) + (0x18 << (_0x3f3390 >> 0x18 & 0xff)) + (0x8 << (_0x3f3390 >> 0x8 & 0xff)) + (0x10 << (_0x3f3390 >> 0x10 & 0xff)),
        _0x306833 = fun30_token(_0x420dea, _0x4a938a, _0x420dea, _0x4a938a, _0x420dea, _0x4a938a),
        _0x834e83 = fun3_token(_0x420dea, _0x4a938a, _0x420dea, _0x4a938a, _0x420dea),
        _0x48d293 = fun27_token(_0x4a938a, _0x420dea),
        _0xad9443 = (_0x306833 | 0xe3ab) & ~(0xe3ab & _0x306833),
        _0x1c8d7e = 0x2091 ^ _0xad9443;
    return _0x1c8d7e;
}
const get_recaptcha_tokens = () => {
    return new Promise((_0x22916c, _0x3b3be5) => {
        grecaptcha['ready'](function() {
            grecaptcha['execute']('6LdvBaEjAAAAAIKTgdecsZBehRxhVZOIDzG9MvXg', {
                'action': 'validate_recaptcha'
            })['then'](function(_0x299166) {
                _0x22916c(_0x299166);
            })['catch'](_0x49b027 => {
                console['log'](_0x49b027), _0x3b3be5(_0x49b027);
            });
        });
    });
};
Utils = {
    'get_recaptcha_token': get_recaptcha_tokens,
    'open_in_new_tab': function(_0xac1337) {
        var _0x478fa1 = window['open'](_0xac1337, '_blank');
        _0x478fa1['focus']();
    },
    'open_in_new_box': function(_0x32fd39) {
        window['open'](_0x32fd39, '_blank', 'location=yes,height=570,width=520,scrollbars=yes,status=yes');
    },
    'compare_object': function(_0x23bf0a, _0x23b487) {
        for (var _0x4216ab in _0x23bf0a) {
            if (_0x23bf0a[_0x4216ab] != _0x23b487[_0x4216ab]) return ![];
        }
        return !![];
    },
    'compare_array': function(_0x2c0420, _0x553a9b) {
        if (_0x2c0420['length'] != _0x553a9b['length']) return ![];
        for (var _0x15d754 = 0x0; _0x15d754 < _0x2c0420['length']; _0x15d754++) {
            if (typeof _0x2c0420 == 'object') {
                if (!this['compare_object'](_0x2c0420[_0x15d754], _0x553a9b[_0x15d754])) return ![];
            } else {
                if (_0x2c0420[_0x15d754] != _0x553a9b[_0x15d754]) return ![];
            }
        }
        return !![];
    },
    'copy_vector': function(_0x397710, _0xdc2b80) {
        _0xdc2b80['x'] = _0x397710['x'], _0xdc2b80['y'] = _0x397710['y'];
    },
    'get_vector': function(_0x580945, _0x23b3db) {
        return {
            'x': _0x580945['x'] - _0x23b3db['x'],
            'y': _0x580945['y'] - _0x23b3db['y']
        };
    },
    'mul_vector': function(_0x1e27b5, _0x39c198) {
        _0x1e27b5['x'] *= _0x39c198, _0x1e27b5['y'] *= _0x39c198;
    },
    'scalar_product': function(_0x4f4e08, _0x47f9e9) {
        return _0x4f4e08['x'] * _0x47f9e9['x'] + _0x4f4e08['y'] * _0x47f9e9['y'];
    },
    'norm': function(_0x4e88ba) {
        return Math['sqrt'](_0x4e88ba['x'] * _0x4e88ba['x'] + _0x4e88ba['y'] * _0x4e88ba['y']);
    },
    'sign': function(_0x19a24f) {
        if (_0x19a24f < 0x0) return -0x1;
        else return 0x1;
    },
    'cross_product': function(_0x3011b0, _0x2fe657) {
        return _0x3011b0['x'] * _0x2fe657['y'] - _0x3011b0['y'] * _0x2fe657['x'];
    },
    'get_angle_2': function(_0x26e83d, _0xe328f9, _0x3d8b74, _0x1d725e) {
        var _0x3a6825 = _0x1d725e - _0xe328f9,
            _0x17069c = _0x3d8b74 - _0x26e83d;
        return Math['atan2'](_0x3a6825, _0x17069c);
    },
    'get_angle': function(_0x1b79c6, _0x574ad4) {
        return Math['acos'](this['scalar_product'](_0x1b79c6, _0x574ad4) / (this['norm'](_0x1b79c6) * this['norm'](_0x574ad4))) * this['sign'](this['cross_product'](_0x1b79c6, _0x574ad4));
    },
    'getURLData': function(_0x5c9088) {
        _url = location['href'], _0x5c9088 = _0x5c9088['replace'](/[\[]/, '\x5c[')['replace'](/[\]]/, '\x5c]');
        var _0x2a185e = '[\x5c?&]' + _0x5c9088 + '=([^&#]*)',
            _0x3bacf1 = new RegExp(_0x2a185e),
            _0xa4d29a = _0x3bacf1['exec'](_url);
        return _0xa4d29a === null ? null : _0xa4d29a[0x1];
    },
    'reduceAngle': function(_0x3b32ce, _0x2e493f) {
        var _0x326155 = Math['PI'] * 0x2;
        _0x2e493f = (_0x2e493f % _0x326155 + _0x326155) % _0x326155;
        if (Math['abs'](_0x3b32ce - _0x2e493f) > Math['PI']) {
            if (_0x3b32ce > _0x2e493f) return _0x2e493f + _0x326155;
            else return _0x2e493f - _0x326155;
        }
        return _0x2e493f;
    },
    'get_std_angle': function(_0x4ee5c5, _0x383db0) {
        return this['get_angle']({
            'x': 0x1,
            'y': 0x0
        }, this['get_vector'](_0x4ee5c5, _0x383db0));
    },
    'dist': function(_0x54d626, _0x5e2d09) {
        return Math['sqrt']((_0x5e2d09['x'] - _0x54d626['x']) * (_0x5e2d09['x'] - _0x54d626['x']) + (_0x5e2d09['y'] - _0x54d626['y']) * (_0x5e2d09['y'] - _0x54d626['y']));
    },
    'build_vector': function(_0x5aa458, _0x673860) {
        return {
            'x': Math['cos'](_0x673860) * _0x5aa458,
            'y': Math['sin'](_0x673860) * _0x5aa458
        };
    },
    'add_vector': function(_0x355cc2, _0x46f74a) {
        _0x355cc2['x'] += _0x46f74a['x'], _0x355cc2['y'] += _0x46f74a['y'];
    },
    'sub_vector': function(_0x1caa62, _0x4d0365) {
        _0x1caa62['x'] -= _0x4d0365['x'], _0x1caa62['y'] -= _0x4d0365['y'];
    },
    'translate_vector': function(_0x112a5d, _0x43de2f, _0x25b137) {
        _0x112a5d['x'] += _0x43de2f, _0x112a5d['y'] += _0x25b137;
    },
    'translate_new_vector': function(_0x26d7c8, _0x58c6cf, _0x8048f5) {
        return {
            'x': _0x26d7c8['x'] + _0x58c6cf,
            'y': _0x26d7c8['y'] + _0x8048f5
        };
    },
    'move': function(_0x49ee8c, _0x1e494b, _0x2e4044) {
        _0x49ee8c['x'] += Math['cos'](_0x2e4044) * _0x1e494b, _0x49ee8c['y'] += Math['sin'](_0x2e4044) * _0x1e494b;
    },
    'middle': function(_0x36dc21, _0x32e2af) {
        return Math['floor']((_0x36dc21 - _0x32e2af) / 0x2);
    },
    'middle_point': function(_0x339288, _0x220164) {
        return {
            'x': (_0x339288['x'] + _0x220164['x']) / 0x2,
            'y': (_0x339288['y'] + _0x220164['y']) / 0x2
        };
    },
    'rand_sign': function() {
        return Math['random']() > 0.5 ? 0x1 : -0x1;
    },
    'get_rand_pos_in_circle': function(_0x1c6239, _0x3ff562, _0x1ce213) {
        var _0x3eb096 = this['rand_sign'](),
            _0x428baa = this['rand_sign'](),
            _0x4b941f = Math['random']() * Math['PI'] / 0x2;
        return {
            'x': Math['floor'](_0x1c6239 + Math['cos'](_0x4b941f) * _0x3eb096 * _0x1ce213),
            'y': Math['floor'](_0x3ff562 + Math['sin'](_0x4b941f) * _0x428baa * _0x1ce213)
        };
    },
    'Box': function(_0x2e72b8, _0x215b80, _0x451291, _0x29f897) {
        this['x'] = _0x2e72b8, this['y'] = _0x215b80, this['w'] = _0x451291, this['h'] = _0x29f897;
    },
    'randomize_list': function(_0x431c6f) {
        a = [], a['push']['apply'](a, _0x431c6f);
        var _0x5117a3 = [];
        while (a['length'] > 0x0) {
            var _0x4b5bc0 = Math['floor'](Math['random']() * a['length']);
            _0x5117a3['push'](a[_0x4b5bc0]), a['splice'](_0x4b5bc0, 0x1);
        }
        return _0x5117a3;
    },
    'restore_number': function(_0x783378) {
        if (_0x783378 >= 0x4e20) _0x783378 = (_0x783378 - 0x4e20) * 0x3e8;
        else {
            if (_0x783378 >= 0x2710) _0x783378 = (_0x783378 - 0x2710) * 0x64;
        }
        return _0x783378;
    },
    'simplify_number': function(_0x4c1204) {
        if (typeof _0x4c1204 !== 'number') return '0';
        else {
            if (_0x4c1204 >= 0x2710) {
                var _0xe77614 = Math['floor'](Math['log10'](_0x4c1204)) - 0x2,
                    _0x32cd09 = Math['max'](0x0, 0x3 - _0xe77614),
                    _0x3cdba3 = Math['floor'](_0x4c1204 / 0x3e8)['toString']();
                if (_0x32cd09) {
                    _0x3cdba3 += '.' + (_0x4c1204 % 0x3e8 / 0x3e8)['toString']()['substring'](0x2)['substring'](0x0, _0x32cd09);;
                    for (var _0x6c973b = _0x3cdba3['length'] - 0x1, _0x4c1294 = 0x0; _0x6c973b > 0x0; _0x6c973b--) {
                        if (_0x3cdba3[_0x6c973b] != '0') break;
                        else _0x4c1294++;
                    }
                    _0x3cdba3 = _0x3cdba3['substring'](0x0, _0x3cdba3['length'] - _0x4c1294);
                    if (_0x3cdba3[_0x3cdba3['length'] - 0x1] == '.') _0x3cdba3 = _0x3cdba3['substring'](0x0, _0x3cdba3['length'] - 0x1);
                }
                return _0x3cdba3 += 'k', _0x3cdba3;
            } else return _0x4c1204['toString']();
        }
    },
    'ease_out_quad': function(_0x678483) {
        return _0x678483 * (0x2 - _0x678483);
    },
    'ease_out_cubic': function(_0x50849c) {
        return --_0x50849c * _0x50849c * _0x50849c + 0x1;
    },
    'ease_in_out_quad': function(_0x5280d5) {
        return _0x5280d5 < 0.5 ? 0x2 * _0x5280d5 * _0x5280d5 : -0x1 + (0x4 - 0x2 * _0x5280d5) * _0x5280d5;
    },
    'ease_in_out_cubic': function(_0x542284) {
        return _0x542284 < 0.5 ? 0x4 * _0x542284 * _0x542284 * _0x542284 : (_0x542284 - 0x1) * (0x2 * _0x542284 - 0x2) * (0x2 * _0x542284 - 0x2) + 0x1;
    },
    'ease_in_out_quart': function(_0x38b808) {
        return _0x38b808 < 0.5 ? 0x8 * _0x38b808 * _0x38b808 * _0x38b808 * _0x38b808 : 0x1 - 0x8 * --_0x38b808 * _0x38b808 * _0x38b808 * _0x38b808;
    },
    'ease_out_quart': function(_0xd92085) {
        return 0x1 - --_0xd92085 * _0xd92085 * _0xd92085 * _0xd92085;
    },
    'ease_out_quint': function(_0x501b72) {
        return 0x1 + --_0x501b72 * _0x501b72 * _0x501b72 * _0x501b72 * _0x501b72;
    },
    'LinearAnimation': function(_0x1f535f, _0x576f43, _0x3dd5c, _0x4ada02, _0x274391, _0x4f687e) {
        return this['o'] = _0x1f535f, this['v'] = _0x576f43, this['max'] = _0x3dd5c, this['min'] = _0x4ada02, this['max_speed'] = _0x274391, this['min_speed'] = _0x4f687e, this['last'] = 0x0, this['update'] = function() {
            if (this['o']) {
                var _0x2550b7 = this['v'] + delta * this['max_speed'];
                if (_0x2550b7 > this['max']) return this['v'] = this['max'], this['o'] = ![], !![];
                else this['v'] = _0x2550b7;
            } else {
                var _0x2550b7 = this['v'] - delta * this['min_speed'];
                if (_0x2550b7 < this['min']) this['v'] = this['min'], this['o'] = !![];
                else this['v'] = _0x2550b7;
            }
        }, ![];
    },
    'Ease': function(_0x11bdbb, _0x48b796, _0x2886fa, _0x4ffbb1, _0x135636, _0x6fedac) {
        this['fun'] = _0x11bdbb, (this['ed'] = _0x48b796, this['em'] = _0x2886fa, this['sx'] = _0x4ffbb1, this['x'] = _0x135636, this['ex'] = _0x6fedac, this['restart'] = function() {
            this['x'] = this['sex'], this['ed'] = 0x0;
        }, this['ease'] = function(_0x590e89) {
            _0x590e89 !== this['ex'] && (this['ex'] = _0x590e89, this['sx'] = this['x'], this['ed'] = 0x0);
            if (this['ex'] !== this['x']) {
                this['ed'] += delta;
                if (this['ed'] > this['em']) this['x'] = this['ex'];
                else {
                    var _0x25617e = this['fun'](this['ed'] / this['em']);
                    this['x'] = this['sx'] + (this['ex'] - this['sx']) * _0x25617e;
                }
            }
        });
    },
    'Ease2d': function(_0x181044, _0x1a16e7, _0x326a05, _0x5063ac, _0xb4785b, _0x8185cb, _0x262e76, _0x2f986e, _0x41eb23) {
        this['fun'] = _0x181044, (this['ed'] = _0x1a16e7, this['em'] = _0x326a05, this['sx'] = _0x5063ac, this['sy'] = _0xb4785b, this['x'] = _0x8185cb, this['y'] = _0x262e76, this['ex'] = _0x2f986e, this['ey'] = _0x41eb23, this['ease'] = function(_0x1c2716) {
            (_0x1c2716['x'] != this['ex'] || _0x1c2716['y'] != this['ey']) && (this['ex'] = _0x1c2716['x'], this['ey'] = _0x1c2716['y'], this['sx'] = this['x'], this['sy'] = this['y'], this['ed'] = 0x0);
            if (this['ex'] != this['x'] || this['ey'] != this['y']) {
                this['ed'] += delta;
                if (this['ed'] > this['em']) this['x'] = this['ex'], this['y'] = this['ey'];
                else {
                    var _0x25c2a2 = this['fun'](this['ed'] / this['em']);
                    this['x'] = this['sx'] + (this['ex'] - this['sx']) * _0x25c2a2, this['y'] = this['sy'] + (this['ey'] - this['sy']) * _0x25c2a2;
                }
            }
        });
    },
    'generate_token': function(_0x7f38c0) {
        var _0x26351c = '';
        for (var _0x44fb13 = 0x0; _0x44fb13 < _0x7f38c0; _0x44fb13++) {
            _0x26351c += String['fromCharCode'](0x30 + Math['floor'](Math['random']() * 0x4a));
        }
        return _0x26351c;
    },
    'gup': function(_0xb47857, _0x42193c) {
        if (!_0x42193c) _0x42193c = location['href'];
        _0xb47857 = _0xb47857['replace'](/[\[]/, '\x5c[')['replace'](/[\]]/, '\x5c]');
        var _0x161235 = '[\x5c?&]' + _0xb47857 + '=([^&#]*)',
            _0x155359 = new RegExp(_0x161235),
            _0x53aa18 = _0x155359['exec'](_0x42193c);
        return _0x53aa18 == null ? null : _0x53aa18[0x1];
    },
    'inside_box': function(_0xccb673, _0x494304) {
        if (_0xccb673['x'] >= _0x494304['x'] && _0xccb673['x'] <= _0x494304['x'] + _0x494304['w'] && _0xccb673['y'] >= _0x494304['y'] && _0xccb673['y'] <= _0x494304['y'] + _0x494304['h']) return !![];
        return ![];
    },
    'intersect_aabb': function(_0x1fc1e4, _0x11f48c, _0x2c47e6, _0x2f0d7d, _0x15ba67, _0x22a93b, _0x383f47, _0x36bc8c) {
        if (Math['max'](_0x1fc1e4, _0x15ba67) < Math['min'](_0x11f48c, _0x22a93b) && Math['max'](_0x2c47e6, _0x383f47) < Math['min'](_0x2f0d7d, _0x36bc8c)) return 0x1;
        return 0x0;
    },
    'lerp': function(_0x3fbb03, _0x5d40cf, _0x3a595d) {
        return (0x1 - _0x3a595d) * _0x3fbb03 + _0x3a595d * _0x5d40cf;
    },
    'escape_html': function(_0x37fe25) {
        return _0x37fe25['replace'](/&/g, '&amp;')['replace'](/</g, '&lt;')['replace'](/>/g, '&gt;')['replace'](/"/g, '&quot;')['replace'](/'/g, '&#039;');
    }
}, Math['sign'] = Math['sign'] || function(_0x344955) {
    if (_0x344955 === 0x0) return 0x0;
    else {
        if (_0x344955 > 0x0) return 0x1;
        else return -0x1;
    }
}, Math['log10'] = Math['log10'] || function(_0x415c80) {
    return Math['log'](_0x415c80) / Math['LOG10'];
};;
(function(_0x17cd9b) {
    var _0x5f55bd = ![];
    typeof define === 'function' && define['amd'] && (define(_0x17cd9b), _0x5f55bd = !![]);
    typeof exports === 'object' && (module['exports'] = _0x17cd9b(), _0x5f55bd = !![]);
    if (!_0x5f55bd) {
        var _0x1df8d5 = window['Cookies'],
            _0x11c1ff = window['Cookies'] = _0x17cd9b();
        _0x11c1ff['noConflict'] = function() {
            return window['Cookies'] = _0x1df8d5, _0x11c1ff;
        };
    }
}(function() {
    function _0x4ef047() {
        var _0xd6bf3 = 0x0,
            _0x257ecb = {};
        for (; _0xd6bf3 < arguments['length']; _0xd6bf3++) {
            var _0x3647c3 = arguments[_0xd6bf3];
            for (var _0x593249 in _0x3647c3) {
                _0x257ecb[_0x593249] = _0x3647c3[_0x593249];
            }
        }
        return _0x257ecb;
    }

    function _0x471a7d(_0x17c133) {
        function _0x1728ad(_0x5c49f7, _0x370b7d, _0x17d3f0) {
            var _0x4de9b7;
            if (typeof document === 'undefined') return;
            if (arguments['length'] > 0x1) {
                _0x17d3f0 = _0x4ef047({
                    'path': '/'
                }, _0x1728ad['defaults'], _0x17d3f0);
                if (typeof _0x17d3f0['expires'] === 'number') {
                    var _0x44043f = new Date();
                    _0x44043f['setMilliseconds'](_0x44043f['getMilliseconds']() + _0x17d3f0['expires'] * 0x5265c00), _0x17d3f0['expires'] = _0x44043f;
                }
                try {
                    _0x4de9b7 = JSON['stringify'](_0x370b7d), /^[\{\[]/ ['test'](_0x4de9b7) && (_0x370b7d = _0x4de9b7);
                } catch (_0x146097) {}
                return !_0x17c133['write'] ? _0x370b7d = encodeURIComponent(String(_0x370b7d))['replace'](/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent) : _0x370b7d = _0x17c133['write'](_0x370b7d, _0x5c49f7), _0x5c49f7 = encodeURIComponent(String(_0x5c49f7)), _0x5c49f7 = _0x5c49f7['replace'](/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent), _0x5c49f7 = _0x5c49f7['replace'](/[\(\)]/g, escape), document['cookie'] = [_0x5c49f7, '=', _0x370b7d, _0x17d3f0['expires'] ? ';\x20expires=' + _0x17d3f0['expires']['toUTCString']() : '', _0x17d3f0['path'] ? ';\x20path=' + _0x17d3f0['path'] : '', _0x17d3f0['domain'] ? ';\x20domain=' + _0x17d3f0['domain'] : '', _0x17d3f0['secure'] ? ';\x20secure' : '']['join']('');
            }!_0x5c49f7 && (_0x4de9b7 = {});
            var _0x3bfac4 = document['cookie'] ? document['cookie']['split'](';\x20') : [],
                _0xd52d26 = /(%[0-9A-Z]{2})+/g,
                _0x31cdda = 0x0;
            for (; _0x31cdda < _0x3bfac4['length']; _0x31cdda++) {
                var _0x2fd8c4 = _0x3bfac4[_0x31cdda]['split']('='),
                    _0x1a1b5c = _0x2fd8c4['slice'](0x1)['join']('=');
                _0x1a1b5c['charAt'](0x0) === '\x22' && (_0x1a1b5c = _0x1a1b5c['slice'](0x1, -0x1));
                try {
                    var _0x82944d = _0x2fd8c4[0x0]['replace'](_0xd52d26, decodeURIComponent);
                    _0x1a1b5c = _0x17c133['read'] ? _0x17c133['read'](_0x1a1b5c, _0x82944d) : _0x17c133(_0x1a1b5c, _0x82944d) || _0x1a1b5c['replace'](_0xd52d26, decodeURIComponent);
                    if (this['json']) try {
                        _0x1a1b5c = JSON['parse'](_0x1a1b5c);
                    } catch (_0x58f1ec) {}
                    if (_0x5c49f7 === _0x82944d) {
                        _0x4de9b7 = _0x1a1b5c;
                        break;
                    }!_0x5c49f7 && (_0x4de9b7[_0x82944d] = _0x1a1b5c);
                } catch (_0x35da6d) {}
            }
            return _0x4de9b7;
        }
        return _0x1728ad['set'] = _0x1728ad, _0x1728ad['get'] = function(_0x16adc3) {
            return _0x1728ad['call'](_0x1728ad, _0x16adc3);
        }, _0x1728ad['getJSON'] = function() {
            return _0x1728ad['apply']({
                'json': !![]
            }, []['slice']['call'](arguments));
        }, _0x1728ad['defaults'] = {}, _0x1728ad['remove'] = function(_0x41cbad, _0x510be6) {
            _0x1728ad(_0x41cbad, '', _0x4ef047(_0x510be6, {
                'expires': -0x1
            }));
        }, _0x1728ad['withConverter'] = _0x471a7d, _0x1728ad;
    }
    return _0x471a7d(function() {});
}));

function Mouse() {
    this['DOWN'] = 0x0, this['UP'] = 0x1, this['IDLE'] = 0x2, this['IN'] = 0x0, this['OUT'] = 0x1, this['pos'] = {
        'x': 0x0,
        'y': 0x0
    }, this['x_old'] = 0x0, this['y_old'] = 0x0, this['angle'] = 0x0, this['state'] = this['IDLE'], this['dist'] = this['IN'], this['down'] = function() {
        this['state'] = this['DOWN'];
    }, this['up'] = function() {
        this['state'] = this['UP'];
    }, this['update'] = function() {
        if (this['pos']['x'] != this['x_old'] || this['pos']['y'] != this['y_old']) return this['x_old'] = this['pos']['x'], this['y_old'] = this['pos']['y'], !![];
        return ![];
    };
}

function Keyboard() {
    this['set_azerty'] = function() {
        this['LEFT'] = 0x51, this['RIGHT'] = 0x44, this['TOP'] = 0x5a, this['DOWN'] = 0x53;
    }, this['set_qwerty'] = function() {
        this['LEFT'] = 0x41, this['RIGHT'] = 0x44, this['TOP'] = 0x57, this['BOTTOM'] = 0x53;
    }, (this['UP'] = 0x0, this['DOWN'] = 0x1, this['_1'] = 0x31), this['_2'] = 0x32, this['_3'] = 0x33, this['_4'] = 0x34, this['_5'] = 0x35, this['CTRL'] = 0x11, this['ARROW_LEFT'] = 0x25, this['ARROW_RIGHT'] = 0x27, this['ARROW_TOP'] = 0x26, this['ARROW_BOTTOM'] = 0x28, this['SPACE'] = 0x20, this['R'] = 0x52, this['G'] = 0x47, this['V'] = 0x56, this['B'] = 0x42, this['set_qwerty'](), this['keys'] = new Array(0xff);
    for (var _0x1b613b = 0x0; _0x1b613b < 0xff; _0x1b613b++) this['keys'][_0x1b613b] = this['UP'];
    this['up'] = function(_0x285eb3) {
        var _0x24c798 = Math['min'](_0x285eb3['charCode'] || _0x285eb3['keyCode'], 0xff);
        this['keys'][_0x24c798] = this['UP'];
    }, this['down'] = function(_0x15b1a9) {
        var _0x4cb111 = Math['min'](_0x15b1a9['charCode'] || _0x15b1a9['keyCode'], 0xff);
        if (_0x4cb111 == this['LEFT'] || _0x4cb111 == this['ARROW_LEFT']) this['press_left']();
        else {
            if (_0x4cb111 == this['TOP'] || _0x4cb111 == this['ARROW_TOP']) this['press_top']();
            else {
                if (_0x4cb111 == this['DOWN'] || _0x4cb111 == this['ARROW_DOWN']) this['press_bottom']();
                else {
                    if (_0x4cb111 == this['RIGHT'] || _0x4cb111 == this['ARROW_RIGHT']) this['press_right']();
                }
            }
        }
        return this['keys'][_0x4cb111] = this['DOWN'], _0x4cb111;
    }, this['press_left'] = function() {
        this['keys'][this['RIGHT']] = this['UP'], this['keys'][this['ARROW_RIGHT']] = this['UP'];
    }, this['press_right'] = function() {
        this['keys'][this['LEFT']] = this['UP'], this['keys'][this['ARROW_LEFT']] = this['UP'];
    }, this['press_bottom'] = function() {
        this['keys'][this['TOP']] = this['UP'], this['keys'][this['ARROW_TOP']] = this['UP'];
    }, this['press_top'] = function() {
        this['keys'][this['BOTTOM']] = this['UP'], this['keys'][this['ARROW_BOTTOM']] = this['UP'];
    }, this['clear_directionnal'] = function() {
        this['keys'][this['RIGHT']] = this['UP'], this['keys'][this['ARROW_RIGHT']] = this['UP'], this['keys'][this['LEFT']] = this['UP'], this['keys'][this['ARROW_LEFT']] = this['UP'], this['keys'][this['TOP']] = this['UP'], this['keys'][this['ARROW_TOP']] = this['UP'], this['keys'][this['BOTTOM']] = this['UP'], this['keys'][this['ARROW_BOTTOM']] = this['UP'];
    }, this['is_left'] = function() {
        return this['keys'][this['LEFT']] || this['keys'][this['ARROW_LEFT']];
    }, this['is_right'] = function() {
        return this['keys'][this['RIGHT']] || this['keys'][this['ARROW_RIGHT']];
    }, this['is_top'] = function() {
        return this['keys'][this['TOP']] || this['keys'][this['ARROW_TOP']];
    }, this['is_bottom'] = function() {
        return this['keys'][this['BOTTOM']] || this['keys'][this['ARROW_BOTTOM']];
    }, this['is_ctrl'] = function() {
        return this['keys'][this['CTRL']];
    }, this['is_1'] = function() {
        return this['keys'][this['_1']];
    }, this['is_2'] = function() {
        return this['keys'][this['_2']];
    }, this['is_3'] = function() {
        return this['keys'][this['_3']];
    }, this['is_4'] = function() {
        return this['keys'][this['_4']];
    }, this['is_space'] = function() {
        return this['keys'][this['SPACE']];
    }, this['is_r'] = function() {
        return this['keys'][this['R']];
    }, this['is_g'] = function() {
        return this['keys'][this['G']];
    }, this['is_v'] = function() {
        return this['keys'][this['V']];
    }, this['is_b'] = function() {
        return this['keys'][this['B']];
    };
}
var can = document['getElementById']('game_canvas'),
    ctx = can['getContext']('2d'),
    canw = can['width'],
    canh = can['height'],
    canw2 = can['width'] / 0x2,
    canh2 = can['height'] / 0x2,
    canm = {
        'x': canw2,
        'y': canh2
    },
    scale = 0x1,
    ratio = 0x1,
    ratio_opt = -0x1,
    JUNK10, JUNK8 = 'J' + JUNK3,
    JUNK6 = 'S' + JUNK4,
    WINDOW1 = window,
    JUNK4, JSONWORD2, JUNK1 = 'O',
    JUNK2 = JUNK1 + 'N',
    JSONWORD1 = 'O',
    JSONWORD12 = 0x0,
    JUNK3, WINDOW2 = WINDOW1,
    JUNK4, JSONWORD3, JUNK6 = 'N',
    JUNK7 = 'J',
    JUNK1 = 'O' + JUNK3,
    JUNK8, WINDOW3 = WINDOW2,
    JUNK9, JUNK10, JSONWORD4, JUNK5, JUNK4, JUNK3, WINDOW4 = WINDOW3,
    JUNK2 = 'N' + JUNK5,
    JUNK2, WINDOW5 = WINDOW4,
    JSONWORD5, JUNK1, JUNK10, JUNK9 = '',
    JSONWORD6, WINDOW6 = WINDOW5,
    JSONWORD7, JUNK4, JUNK3, WINDOW7 = WINDOW6,
    JUNK1, JSONWORD8, JUNK8, WINDOW8 = WINDOW7,
    JUNK7 = 'O',
    JUNK10 = 'J',
    JUNK6, JSONWORD9, JUNK10, WINDOW8 = WINDOW7,
    JSONWORD9 = 'S',
    WINDOW9 = WINDOW8,
    JUNK5, JSONWORD10, WINDOW10 = WINDOW9,
    JUNK4 = JUNK10 + JSONWORD9;
can['oncontextmenu'] = function() {
    return ![];
}, JUNK8 = JUNK10, JUNK9 = JUNK8;

function CTI(_0x489e3d) {
    var _0x3de72d = new Image();
    return _0x3de72d['src'] = _0x489e3d['toDataURL']('image/png'), _0x3de72d['width'] = _0x489e3d['width'], _0x3de72d['height'] = _0x489e3d['height'], _0x3de72d['isLoaded'] = 0x1, _0x3de72d;
}
JUNK8 = JUNK6, JUNK7 = JUNK7 + JUNK8, JSONWORD1 = JUNK4 + JUNK7, JSONWORD2 = JSONWORD1, JUNK1 = JUNK2, JSONWORD3 = JSONWORD2, JUNK2 = JUNK3, JUNK3 = JUNK4, JSONWORD5 = JUNK4 + JUNK7, JUNK3 = JUNK4, JUNK1 = JUNK4, JSONWORD4 = JSONWORD5, JUNK6 = JUNK7 + JUNK8, JSONWORD6 = JSONWORD2, JUNK1 = JUNK4 + JUNK7, JSONWORD7 = JSONWORD1, JUNK2 = JUNK4 + JUNK7, JSONWORD8 = JSONWORD3, JUNK7 = JUNK3, JSONWORD9 = JSONWORD1, JSONWORD10 = JSONWORD2, JUNK8 = JUNK1;

function resize_canvas() {
    var _0x182ccc = window['devicePixelRatio'] || 0x1,
        _0x3f59f9 = ctx['webkitBackingStorePixelRatio'] || ctx['mozBackingStorePixelRatio'] || ctx['msBackingStorePixelRatio'] || ctx['oBackingStorePixelRatio'] || ctx['backingStorePixelRatio'] || 0x1;
    window['backingStoreRatio'] = ctx['webkitBackingStorePixelRatio'] || ctx['mozBackingStorePixelRatio'] || ctx['msBackingStorePixelRatio'] || ctx['oBackingStorePixelRatio'] || ctx['backingStorePixelRatio'] || 0x1;
    can['width'] != window['innerWidth'] && (can['width'] = window['innerWidth'], canw = can['width'], canw2 = can['width'] / 0x2);
    can['height'] != window['innerHeight'] && (can['height'] = window['innerHeight'], canh = can['height'], canh2 = can['height'] / 0x2);
    canm = {
        'x': canw2,
        'y': canh2
    };
    var _0x2a3fc7 = can['width'],
        _0x3628e5 = can['height'];
    try {
        ratio_opt = document['getElementById']('input_ratio')['value'] * (_0x182ccc / window['backingStoreRatio']);
    } catch {
        ratio_opt = _0x182ccc / window['backingStoreRatio'];
    }
    ratio = ratio_opt, can['width'] = _0x2a3fc7 * ratio, can['height'] = _0x3628e5 * ratio, can['style']['width'] = _0x2a3fc7 + 'px', can['style']['height'] = _0x3628e5 + 'px', ctx['scale'](ratio, ratio);
    user && (user['cam']['rw'] = _0x2a3fc7, user['cam']['rh'] = _0x3628e5);
    if (loader['is_run']) loader['update']();
    else {
        if (ui['is_run']) ui['update']();
        else {
            if (game['is_run']) game['update']();
            else {
                if (scoreboard['is_run']) scoreboard['update']();
            }
        }
    }
}
var game_body = document['getElementById']('game_body');
game_body['ondragstart'] = function() {
    return ![];
}, game_body['ondrop'] = function() {
    return ![];
}, game_body['onresize'] = resize_canvas, (function() {
    var _0x9dc327 = 0x0,
        _0x596fbd = ['ms', 'moz', 'webkit', 'o'];
    for (var _0x2472ef = 0x0; _0x2472ef < _0x596fbd['length'] && !window['requestAnimationFrame']; ++_0x2472ef) {
        window['requestAnimationFrame'] = window[_0x596fbd[_0x2472ef] + 'RequestAnimationFrame'], window['cancelAnimationFrame'] = window[_0x596fbd[_0x2472ef] + 'CancelAnimationFrame'] || window[_0x596fbd[_0x2472ef] + 'CancelRequestAnimationFrame'];
    }
    if (!window['requestAnimationFrame']) window['requestAnimationFrame'] = function(_0xe91a4b, _0xeca7b0) {
        var _0x466c66 = new Date()['getTime'](),
            _0x1463a9 = Math['max'](0x0, 0x10 - (_0x466c66 - _0x9dc327)),
            _0x4611a1 = window['setTimeout'](function() {
                _0xe91a4b(_0x466c66 + _0x1463a9);
            }, _0x1463a9);
        return _0x9dc327 = _0x466c66 + _0x1463a9, _0x4611a1;
    };
    if (!window['cancelAnimationFrame']) window['cancelAnimationFrame'] = function(_0x3bfcbf) {
        clearTimeout(_0x3bfcbf);
    };
}());
var lang = navigator['language'] || navigator['userLanguage'],
    timezone = -(new Date()['getTimezoneOffset']() / 0x3c),
    TZ_EU = 'Europe',
    TZ_RU = 'Russia',
    TZ_NA = 'North\x20America',
    TZ_SA = 'South\x20America',
    TZ_WA = 'West\x20America',
    TZ_AS = 'Asia',
    TZ_AU = 'Australia',
    TZ = TZ_EU;
if (timezone >= -0x2 && timezone <= 0x2) TZ = TZ_EU;
else {
    if (timezone > 0x2 && timezone <= 0x5) TZ = TZ_RU;
    else {
        if (timezone > 0x5 && timezone <= 0x9) TZ = TZ_AS;
        else {
            if (timezone > 0x9) TZ = TZ_AU;
            else {
                if (timezone >= -0x5 && timezone < -0x2) {
                    if (lang === 'pt-BR' || lang === 'pt-br' || lang === 'pt' || lang === 'pt-pt') TZ = TZ_SA;
                    else TZ = TZ_NA;
                } else {
                    if (timezone < -0x5) {
                        if (lang === 'pt-BR' || lang === 'pt-br' || lang === 'pt' || lang === 'pt-pt') TZ = TZ_SA;
                        else TZ = TZ_WA;
                    }
                }
            }
        }
    }
}
var RNG = (function() {
        function _0xcd76d4(_0x4f780d) {
            var _0x41ad9d = 0x80000000,
                _0x14899e = 0x41c64e6d,
                _0x3add3d = 0x3039,
                _0x5c7c0a = _0x4f780d ? _0x4f780d : Math['floor'](Math['random']() * (_0x41ad9d - 0x1));
            this['init'] = function(_0x2f0c40) {
                _0x5c7c0a = _0x2f0c40 ? _0x2f0c40 : Math['floor'](Math['random']() * (_0x41ad9d - 0x1));
            }, this['get'] = function() {
                return _0x5c7c0a = (_0x14899e * _0x5c7c0a + _0x3add3d) % _0x41ad9d, _0x5c7c0a / _0x41ad9d;
            };
        };
        return {
            'Random': _0xcd76d4
        };
    }()),
    ___MAP___ = [
        [0x0, 'DRAGON', 0x12, 0x6, 0x42, 0x23, 0x0],
        [0x0, 'WINTER', 0x5b, 0x12, 0x5, 0x28, 0x8],
        [0x0, 'DESERT', 0x87, 0xb4, 0x59, 0x7c, 0x5],
        [0x0, 'LAVA', 0x8e, 0x6, 0x52, 0x63, 0x6],
        [0x0, 'FOREST', 0x6, 0x96, 0x5a, 0x9a, 0x8],
        [0x0, 'WINTER', 0x6, 0x6, 0x5a, 0x96, 0x0],
        [0x1, 'b', 0x0, 0x5, 0xaf, 0x0],
        [0x1, 't', 0x2, 0x5, 0xae, 0x0],
        [0x1, 't', 0x5, 0x5, 0xad, 0x0],
        [0x1, 'b', 0x3, 0x5, 0xb0, 0x0],
        [0x1, 't', 0x0, 0x5, 0xb1, 0x0],
        [0x1, 't', 0x3, 0x5, 0xb2, 0x0],
        [0x1, 't', 0x4, 0x5, 0xb3, 0x0],
        [0x1, 'b', 0x0, 0x5, 0xb4, 0x0],
        [0x1, 't', 0x5, 0x5, 0xb5, 0x0],
        [0x1, 'b', 0x2, 0x5, 0xb6, 0x0],
        [0x1, 'b', 0x1, 0x5, 0xb7, 0x0],
        [0x1, 'b', 0x2, 0x5, 0xb8, 0x0],
        [0x1, 't', 0x5, 0x5, 0xb9, 0x0],
        [0x1, 't', 0x2, 0x5, 0xba, 0x0],
        [0x1, 't', 0x0, 0x5, 0xbb, 0x0],
        [0x1, 't', 0x5, 0x5, 0xbc, 0x0],
        [0x1, 't', 0x1, 0x5, 0xbd, 0x0],
        [0x1, 'b', 0x2, 0x5, 0xbe, 0x0],
        [0x1, 't', 0x4, 0x5, 0xbf, 0x0],
        [0x1, 'b', 0x3, 0x5, 0xc0, 0x0],
        [0x1, 't', 0x5, 0x5, 0xc1, 0x0],
        [0x1, 't', 0x0, 0x5, 0xc2, 0x0],
        [0x1, 't', 0x3, 0x5, 0xc3, 0x0],
        [0x1, 'b', 0x0, 0x5, 0xc4, 0x0],
        [0x1, 't', 0x5, 0x5, 0xc5, 0x0],
        [0x1, 't', 0x2, 0x5, 0xc6, 0x0],
        [0x1, 'b', 0x2, 0x5, 0xc7, 0x0],
        [0x1, 't', 0x4, 0x5, 0xc8, 0x0],
        [0x1, 't', 0x1, 0x5, 0xc9, 0x0],
        [0x1, 'b', 0x1, 0x5, 0xca, 0x0],
        [0x1, 't', 0x5, 0x5, 0xcb, 0x0],
        [0x1, 't', 0x2, 0x5, 0xcc, 0x0],
        [0x1, 't', 0x4, 0x5, 0xcd, 0x0],
        [0x1, 'b', 0x2, 0x5, 0xce, 0x0],
        [0x1, 't', 0x1, 0x5, 0xcf, 0x0],
        [0x1, 't', 0x4, 0x5, 0xd0, 0x0],
        [0x1, 't', 0x2, 0x5, 0xd1, 0x0],
        [0x1, 'b', 0x0, 0x5, 0xd2, 0x0],
        [0x1, 't', 0x5, 0x5, 0xd3, 0x0],
        [0x1, 't', 0x1, 0x5, 0xd4, 0x0],
        [0x1, 't', 0x2, 0x5, 0xd5, 0x0],
        [0x1, 'b', 0x3, 0x5, 0xd6, 0x0],
        [0x1, 't', 0x5, 0x5, 0xd7, 0x0],
        [0x1, 'b', 0x0, 0x5, 0xd8, 0x0],
        [0x1, 't', 0x4, 0x5, 0xd9, 0x0],
        [0x1, 't', 0x2, 0x5, 0xda, 0x0],
        [0x1, 't', 0x1, 0x5, 0xdb, 0x0],
        [0x1, 't', 0x3, 0x5, 0xdc, 0x0],
        [0x1, 't', 0x5, 0x5, 0xdd, 0x0],
        [0x1, 't', 0x2, 0x5, 0xde, 0x0],
        [0x1, 't', 0x4, 0x5, 0xdf, 0x0],
        [0x1, 'b', 0x3, 0x5, 0xe0, 0x0],
        [0x1, 't', 0x1, 0x5, 0xe1, 0x0],
        [0x1, 't', 0x3, 0x5, 0xe2, 0x0],
        [0x1, 'b', 0x0, 0x5, 0xe3, 0x0],
        [0x1, 't', 0x3, 0x5, 0xe4, 0x0],
        [0x1, 't', 0x5, 0x5, 0xe5, 0x0],
        [0x1, 't', 0x2, 0x5, 0xe6, 0x0],
        [0x1, 't', 0x0, 0x5, 0xe7, 0x0],
        [0x1, 'b', 0x2, 0x5, 0xe8, 0x0],
        [0x1, 't', 0x1, 0x5, 0xe9, 0x0],
        [0x1, 't', 0x4, 0x5, 0xea, 0x0],
        [0x1, 'b', 0x1, 0x5, 0xeb, 0x0],
        [0x1, 't', 0x4, 0x5, 0xec, 0x0],
        [0x1, 't', 0x2, 0x5, 0xed, 0x0],
        [0x1, 't', 0x0, 0x5, 0xee, 0x0],
        [0x1, 't', 0x4, 0x5, 0xef, 0x0],
        [0x1, 'b', 0x2, 0x5, 0xf0, 0x0],
        [0x1, 't', 0x5, 0x5, 0xf1, 0x0],
        [0x1, 'b', 0x1, 0x5, 0xf2, 0x0],
        [0x1, 't', 0x4, 0x5, 0xf3, 0x0],
        [0x1, 't', 0x2, 0x5, 0xf4, 0x0],
        [0x1, 't', 0x1, 0x5, 0xf5, 0x0],
        [0x1, 'b', 0x1, 0x5, 0xf6, 0x0],
        [0x1, 't', 0x3, 0x5, 0xf7, 0x0],
        [0x1, 'b', 0x2, 0x5, 0xf8, 0x0],
        [0x1, 't', 0x5, 0x5, 0xf9, 0x0],
        [0x1, 't', 0x2, 0x5, 0xfa, 0x0],
        [0x1, 't', 0x4, 0x5, 0xfb, 0x0],
        [0x1, 'b', 0x1, 0x5, 0xfc, 0x0],
        [0x1, 't', 0x4, 0x5, 0xfd, 0x0],
        [0x1, 't', 0x1, 0x5, 0xfe, 0x0],
        [0x1, 't', 0x3, 0x5, 0xff, 0x0],
        [0x1, 't', 0x5, 0x5, 0x100, 0x0],
        [0x1, 'b', 0x2, 0x5, 0x101, 0x0],
        [0x1, 't', 0x4, 0x5, 0x102, 0x0],
        [0x1, 'b', 0x3, 0x5, 0x103, 0x0],
        [0x1, 't', 0x5, 0x5, 0x104, 0x0],
        [0x1, 'b', 0x0, 0x5, 0x105, 0x0],
        [0x1, 't', 0x3, 0x5, 0x106, 0x0],
        [0x1, 't', 0x4, 0x5, 0x107, 0x0],
        [0x1, 't', 0x2, 0x5, 0x108, 0x0],
        [0x1, 'b', 0x1, 0x5, 0x109, 0x0],
        [0x1, 'b', 0x2, 0x5, 0x10a, 0x0],
        [0x1, 't', 0x3, 0x5, 0x10b, 0x0],
        [0x1, 't', 0x4, 0x5, 0x10c, 0x0],
        [0x1, 't', 0x0, 0x5, 0x10d, 0x0],
        [0x1, 't', 0x5, 0x5, 0x10e, 0x0],
        [0x1, 't', 0x3, 0x5, 0x10f, 0x0],
        [0x1, 't', 0x4, 0x5, 0x110, 0x0],
        [0x1, 't', 0x1, 0x5, 0x111, 0x0],
        [0x1, 'b', 0x2, 0x5, 0x112, 0x0],
        [0x1, 't', 0x1, 0x5, 0x113, 0x0],
        [0x1, 't', 0x4, 0x5, 0x114, 0x0],
        [0x1, 'b', 0x1, 0x5, 0x115, 0x0],
        [0x1, 'b', 0x2, 0x5, 0x116, 0x0],
        [0x1, 't', 0x1, 0x5, 0x117, 0x0],
        [0x1, 't', 0x4, 0x5, 0x118, 0x0],
        [0x1, 't', 0x2, 0x5, 0x119, 0x0],
        [0x1, 't', 0x5, 0x5, 0x11a, 0x0],
        [0x1, 'b', 0x2, 0x5, 0x11b, 0x0],
        [0x1, 't', 0x1, 0x5, 0x11c, 0x0],
        [0x1, 'b', 0x3, 0x5, 0x11d, 0x0],
        [0x1, 't', 0x4, 0x5, 0x11e, 0x0],
        [0x1, 't', 0x0, 0x5, 0x11f, 0x0],
        [0x1, 't', 0x5, 0x5, 0x120, 0x0],
        [0x1, 't', 0x2, 0x5, 0x121, 0x0],
        [0x1, 'b', 0x1, 0x5, 0x122, 0x0],
        [0x1, 't', 0x4, 0x5, 0x124, 0x0],
        [0x1, 't', 0x2, 0x5, 0x123, 0x0],
        [0x1, 'b', 0x2, 0x5, 0x125, 0x0],
        [0x1, 't', 0x1, 0x5, 0x126, 0x0],
        [0x1, 't', 0x3, 0x5, 0x127, 0x0],
        [0x1, 't', 0x5, 0x5, 0x128, 0x0],
        [0x1, 'b', 0x0, 0x5, 0x129, 0x0],
        [0x1, 'b', 0x3, 0x5, 0x12a, 0x0],
        [0x1, 't', 0x4, 0x5, 0x12b, 0x0],
        [0x1, 't', 0x2, 0x5, 0x12c, 0x0],
        [0x1, 't', 0x4, 0x5, 0x12d, 0x0],
        [0x1, 'b', 0x0, 0x5, 0x12e, 0x0],
        [0x1, 'b', 0x2, 0x5, 0x12f, 0x0],
        [0x1, 't', 0x1, 0x6, 0x12f, 0x0],
        [0x1, 't', 0x2, 0x7, 0x12f, 0x0],
        [0x1, 't', 0x1, 0x5, 0x130, 0x0],
        [0x1, 't', 0x3, 0x6, 0x130, 0x0],
        [0x1, 't', 0x4, 0x7, 0x130, 0x0],
        [0x1, 't', 0x5, 0x8, 0x12f, 0x0],
        [0x1, 'b', 0x1, 0x8, 0x130, 0x0],
        [0x1, 'b', 0x2, 0x9, 0x130, 0x0],
        [0x1, 'b', 0x3, 0xc, 0x12f, 0x0],
        [0x1, 'b', 0x3, 0x11, 0x130, 0x0],
        [0x1, 't', 0x1, 0x9, 0x12f, 0x0],
        [0x1, 't', 0x1, 0xf, 0x130, 0x0],
        [0x1, 't', 0x1, 0xd, 0x12f, 0x0],
        [0x1, 't', 0x3, 0xa, 0x12f, 0x0],
        [0x1, 't', 0x3, 0xe, 0x130, 0x0],
        [0x1, 't', 0x4, 0xa, 0x130, 0x0],
        [0x1, 't', 0x5, 0xb, 0x130, 0x0],
        [0x1, 't', 0x5, 0xe, 0x12f, 0x0],
        [0x1, 't', 0x5, 0x10, 0x130, 0x0],
        [0x1, 't', 0x5, 0xd, 0x130, 0x0],
        [0x1, 't', 0x2, 0xc, 0x130, 0x0],
        [0x1, 't', 0x1, 0xb, 0x12f, 0x0],
        [0x1, 'b', 0x3, 0xf, 0x12f, 0x0],
        [0x1, 'b', 0x0, 0x10, 0x12f, 0x0],
        [0x1, 't', 0x3, 0x11, 0x12f, 0x0],
        [0x1, 't', 0x4, 0x12, 0x12f, 0x0],
        [0x1, 't', 0x2, 0x13, 0x12f, 0x0],
        [0x1, 't', 0x1, 0x14, 0x12f, 0x0],
        [0x1, 'b', 0x1, 0x15, 0x12f, 0x0],
        [0x1, 't', 0x2, 0x16, 0x12f, 0x0],
        [0x1, 't', 0x4, 0x17, 0x12f, 0x0],
        [0x1, 'b', 0x3, 0x18, 0x12f, 0x0],
        [0x1, 't', 0x5, 0x19, 0x12f, 0x0],
        [0x1, 't', 0x1, 0x1a, 0x12f, 0x0],
        [0x1, 't', 0x2, 0x1b, 0x12f, 0x0],
        [0x1, 't', 0x4, 0x1c, 0x12f, 0x0],
        [0x1, 'b', 0x0, 0x12, 0x130, 0x0],
        [0x1, 't', 0x2, 0x13, 0x130, 0x0],
        [0x1, 't', 0x5, 0x14, 0x130, 0x0],
        [0x1, 'b', 0x2, 0x15, 0x130, 0x0],
        [0x1, 't', 0x4, 0x16, 0x130, 0x0],
        [0x1, 't', 0x2, 0x17, 0x130, 0x0],
        [0x1, 't', 0x1, 0x18, 0x130, 0x0],
        [0x1, 't', 0x3, 0x19, 0x130, 0x0],
        [0x1, 't', 0x0, 0x1b, 0x130, 0x0],
        [0x1, 't', 0x5, 0x1a, 0x130, 0x0],
        [0x1, 'b', 0x2, 0x1c, 0x130, 0x0],
        [0x1, 't', 0x1, 0x1d, 0x130, 0x0],
        [0x1, 'b', 0x1, 0x1d, 0x12f, 0x0],
        [0x1, 'b', 0x2, 0x1e, 0x12f, 0x0],
        [0x1, 't', 0x4, 0x1f, 0x12f, 0x0],
        [0x1, 't', 0x0, 0x20, 0x12f, 0x0],
        [0x1, 't', 0x5, 0x21, 0x12f, 0x0],
        [0x1, 't', 0x2, 0x22, 0x12f, 0x0],
        [0x1, 't', 0x4, 0x23, 0x12f, 0x0],
        [0x1, 't', 0x1, 0x24, 0x12f, 0x0],
        [0x1, 'b', 0x3, 0x25, 0x12f, 0x0],
        [0x1, 't', 0x2, 0x20, 0x130, 0x0],
        [0x1, 't', 0x4, 0x1e, 0x130, 0x0],
        [0x1, 't', 0x1, 0x1f, 0x130, 0x0],
        [0x1, 'b', 0x1, 0x21, 0x130, 0x0],
        [0x1, 't', 0x2, 0x23, 0x130, 0x0],
        [0x1, 't', 0x5, 0x22, 0x130, 0x0],
        [0x1, 'b', 0x2, 0x24, 0x130, 0x0],
        [0x1, 't', 0x5, 0x25, 0x130, 0x0],
        [0x1, 't', 0x1, 0x26, 0x130, 0x0],
        [0x1, 'b', 0x1, 0x28, 0x12f, 0x0],
        [0x1, 't', 0x3, 0x27, 0x12f, 0x0],
        [0x1, 't', 0x3, 0x2a, 0x130, 0x0],
        [0x1, 't', 0x5, 0x26, 0x12f, 0x0],
        [0x1, 't', 0x5, 0x27, 0x130, 0x0],
        [0x1, 't', 0x5, 0x29, 0x12f, 0x0],
        [0x1, 't', 0x4, 0x29, 0x130, 0x0],
        [0x1, 't', 0x4, 0x2c, 0x12f, 0x0],
        [0x1, 'b', 0x2, 0x28, 0x130, 0x0],
        [0x1, 'b', 0x2, 0x2b, 0x12f, 0x0],
        [0x1, 't', 0x1, 0x2a, 0x12f, 0x0],
        [0x1, 't', 0x1, 0x2b, 0x130, 0x0],
        [0x1, 't', 0x5, 0x2c, 0x130, 0x0],
        [0x1, 'b', 0x1, 0x2d, 0x12f, 0x0],
        [0x1, 't', 0x2, 0x2d, 0x130, 0x0],
        [0x1, 't', 0x2, 0x2e, 0x12f, 0x0],
        [0x1, 't', 0x4, 0x2f, 0x12f, 0x0],
        [0x1, 'b', 0x0, 0x30, 0x12f, 0x0],
        [0x1, 't', 0x5, 0x31, 0x12f, 0x0],
        [0x1, 't', 0x2, 0x32, 0x12f, 0x0],
        [0x1, 't', 0x1, 0x33, 0x12f, 0x0],
        [0x1, 't', 0x4, 0x34, 0x12f, 0x0],
        [0x1, 't', 0x5, 0x2e, 0x130, 0x0],
        [0x1, 't', 0x2, 0x2f, 0x130, 0x0],
        [0x1, 't', 0x5, 0x30, 0x130, 0x0],
        [0x1, 't', 0x1, 0x31, 0x130, 0x0],
        [0x1, 't', 0x2, 0x32, 0x130, 0x0],
        [0x1, 'b', 0x1, 0x35, 0x12f, 0x0],
        [0x1, 'b', 0x2, 0x33, 0x130, 0x0],
        [0x1, 't', 0x5, 0x34, 0x130, 0x0],
        [0x1, 't', 0x3, 0x35, 0x130, 0x0],
        [0x1, 'b', 0x2, 0x36, 0x12f, 0x0],
        [0x1, 't', 0x5, 0x36, 0x130, 0x0],
        [0x1, 't', 0x5, 0x37, 0x12f, 0x0],
        [0x1, 't', 0x3, 0x38, 0x12f, 0x0],
        [0x1, 't', 0x4, 0x39, 0x12f, 0x0],
        [0x1, 't', 0x5, 0x3a, 0x12f, 0x0],
        [0x1, 'b', 0x1, 0x37, 0x130, 0x0],
        [0x1, 't', 0x2, 0x38, 0x130, 0x0],
        [0x1, 't', 0x0, 0x39, 0x130, 0x0],
        [0x1, 't', 0x3, 0x3a, 0x130, 0x0],
        [0x1, 't', 0x3, 0x3f, 0x130, 0x0],
        [0x1, 't', 0x3, 0x3b, 0x12f, 0x0],
        [0x1, 't', 0x4, 0x3b, 0x130, 0x0],
        [0x1, 't', 0x5, 0x3c, 0x12f, 0x0],
        [0x1, 't', 0x0, 0x3c, 0x130, 0x0],
        [0x1, 't', 0x0, 0x42, 0x12f, 0x0],
        [0x1, 't', 0x0, 0x46, 0x130, 0x0],
        [0x1, 't', 0x3, 0x3d, 0x130, 0x0],
        [0x1, 't', 0x3, 0x43, 0x12f, 0x0],
        [0x1, 't', 0x3, 0x49, 0x130, 0x0],
        [0x1, 't', 0x3, 0x4c, 0x12f, 0x0],
        [0x1, 't', 0x3, 0x4e, 0x130, 0x0],
        [0x1, 't', 0x1, 0x3d, 0x12f, 0x0],
        [0x1, 't', 0x1, 0x49, 0x12f, 0x0],
        [0x1, 't', 0x1, 0x4f, 0x12f, 0x0],
        [0x1, 'b', 0x2, 0x3e, 0x130, 0x0],
        [0x1, 'b', 0x2, 0x46, 0x12f, 0x0],
        [0x1, 't', 0x5, 0x3e, 0x12f, 0x0],
        [0x1, 't', 0x5, 0x44, 0x12f, 0x0],
        [0x1, 't', 0x5, 0x47, 0x130, 0x0],
        [0x1, 't', 0x5, 0x4d, 0x130, 0x0],
        [0x1, 't', 0x5, 0x4b, 0x12f, 0x0],
        [0x1, 't', 0x5, 0x40, 0x130, 0x0],
        [0x1, 't', 0x5, 0x41, 0x12f, 0x0],
        [0x1, 't', 0x5, 0x50, 0x12f, 0x0],
        [0x1, 't', 0x1, 0x4c, 0x130, 0x0],
        [0x1, 't', 0x3, 0x3f, 0x12f, 0x0],
        [0x1, 't', 0x5, 0x52, 0x130, 0x0],
        [0x1, 'b', 0x2, 0x41, 0x130, 0x0],
        [0x1, 't', 0x1, 0x40, 0x12f, 0x0],
        [0x1, 't', 0x1, 0x44, 0x130, 0x0],
        [0x1, 't', 0x2, 0x45, 0x130, 0x0],
        [0x1, 't', 0x4, 0x45, 0x12f, 0x0],
        [0x1, 't', 0x5, 0x42, 0x130, 0x0],
        [0x1, 't', 0x0, 0x43, 0x130, 0x0],
        [0x1, 'b', 0x2, 0x48, 0x130, 0x0],
        [0x1, 't', 0x0, 0x47, 0x12f, 0x0],
        [0x1, 't', 0x4, 0x48, 0x12f, 0x0],
        [0x1, 't', 0x4, 0x4a, 0x130, 0x0],
        [0x1, 't', 0x2, 0x4a, 0x12f, 0x0],
        [0x1, 't', 0x3, 0x4b, 0x130, 0x0],
        [0x1, 't', 0x1, 0x4d, 0x12f, 0x0],
        [0x1, 't', 0x4, 0x4e, 0x12f, 0x0],
        [0x1, 't', 0x4, 0x4f, 0x130, 0x0],
        [0x1, 't', 0x2, 0x50, 0x130, 0x0],
        [0x1, 'b', 0x1, 0x51, 0x130, 0x0],
        [0x1, 't', 0x2, 0x51, 0x12f, 0x0],
        [0x1, 't', 0x5, 0x52, 0x12f, 0x0],
        [0x1, 't', 0x1, 0x53, 0x12f, 0x0],
        [0x1, 'b', 0x2, 0x53, 0x130, 0x0],
        [0x1, 't', 0x1, 0x54, 0x130, 0x0],
        [0x1, 't', 0x4, 0x54, 0x12f, 0x0],
        [0x1, 't', 0x5, 0x55, 0x130, 0x0],
        [0x1, 't', 0x3, 0x55, 0x12f, 0x0],
        [0x1, 'b', 0x2, 0x56, 0x130, 0x0],
        [0x1, 't', 0x1, 0x56, 0x12f, 0x0],
        [0x1, 'b', 0x3, 0x57, 0x12f, 0x0],
        [0x1, 't', 0x4, 0x57, 0x130, 0x0],
        [0x1, 't', 0x4, 0x58, 0x12f, 0x0],
        [0x1, 't', 0x0, 0x58, 0x130, 0x0],
        [0x1, 'b', 0x1, 0x59, 0x12f, 0x0],
        [0x1, 't', 0x3, 0x59, 0x130, 0x0],
        [0x1, 't', 0x3, 0x5a, 0x12f, 0x0],
        [0x1, 't', 0x4, 0x5a, 0x130, 0x0],
        [0x1, 't', 0x4, 0x5b, 0x12f, 0x0],
        [0x1, 't', 0x0, 0x5b, 0x130, 0x0],
        [0x1, 'b', 0x2, 0x5c, 0x12f, 0x0],
        [0x1, 't', 0x4, 0x5c, 0x130, 0x0],
        [0x1, 't', 0x5, 0x5d, 0x12f, 0x0],
        [0x1, 't', 0x0, 0x5d, 0x130, 0x0],
        [0x1, 'b', 0x3, 0x5e, 0x12f, 0x0],
        [0x1, 'b', 0x0, 0x5e, 0x130, 0x0],
        [0x1, 'b', 0x0, 0x5f, 0x12f, 0x0],
        [0x1, 't', 0x2, 0x5f, 0x130, 0x0],
        [0x1, 'f', 0x1, 0x5, 0x97, 0x1],
        [0x1, 'f', 0x2, 0x5, 0x99, 0x1],
        [0x1, 'f', 0x0, 0x5, 0x98, 0x1],
        [0x1, 'f', 0x0, 0x5, 0x93, 0x1],
        [0x1, 'f', 0x0, 0x5, 0x90, 0x1],
        [0x1, 'f', 0x0, 0x5, 0x8c, 0x1],
        [0x1, 'f', 0x1, 0x5, 0x95, 0x1],
        [0x1, 'f', 0x1, 0x5, 0x92, 0x1],
        [0x1, 'f', 0x1, 0x5, 0x8f, 0x1],
        [0x1, 'f', 0x1, 0x5, 0x8d, 0x1],
        [0x1, 'f', 0x2, 0x5, 0x96, 0x1],
        [0x1, 'f', 0x2, 0x5, 0x94, 0x1],
        [0x1, 'f', 0x2, 0x5, 0x91, 0x1],
        [0x1, 'f', 0x2, 0x5, 0x8e, 0x1],
        [0x1, 'f', 0x2, 0x5, 0x8b, 0x1],
        [0x1, 'f', 0x2, 0x5, 0x88, 0x1],
        [0x1, 'f', 0x2, 0x5, 0x85, 0x1],
        [0x1, 'f', 0x2, 0x5, 0x83, 0x1],
        [0x1, 'f', 0x2, 0x5, 0x7f, 0x1],
        [0x1, 'f', 0x2, 0x5, 0x7d, 0x1],
        [0x1, 'f', 0x1, 0x5, 0x8a, 0x1],
        [0x1, 'f', 0x1, 0x5, 0x87, 0x1],
        [0x1, 'f', 0x1, 0x5, 0x84, 0x1],
        [0x1, 'f', 0x1, 0x5, 0x82, 0x1],
        [0x1, 'f', 0x1, 0x5, 0x80, 0x1],
        [0x1, 'f', 0x1, 0x5, 0x7e, 0x1],
        [0x1, 'f', 0x1, 0x5, 0x7c, 0x1],
        [0x1, 'f', 0x0, 0x5, 0x81, 0x1],
        [0x1, 'f', 0x0, 0x5, 0x86, 0x1],
        [0x1, 'f', 0x0, 0x5, 0x89, 0x1],
        [0x1, 'f', 0x0, 0x5, 0x7b, 0x1],
        [0x1, 'f', 0x1, 0x5, 0x7a, 0x1],
        [0x1, 'f', 0x1, 0x5, 0x78, 0x1],
        [0x1, 'f', 0x1, 0x5, 0x75, 0x1],
        [0x1, 'f', 0x1, 0x5, 0x73, 0x1],
        [0x1, 'f', 0x1, 0x5, 0x6f, 0x1],
        [0x1, 'f', 0x1, 0x5, 0x6c, 0x1],
        [0x1, 'f', 0x2, 0x5, 0x79, 0x1],
        [0x1, 'f', 0x2, 0x5, 0x76, 0x1],
        [0x1, 'f', 0x2, 0x5, 0x74, 0x1],
        [0x1, 'f', 0x2, 0x5, 0x71, 0x1],
        [0x1, 'f', 0x2, 0x5, 0x6e, 0x1],
        [0x1, 'f', 0x0, 0x5, 0x77, 0x1],
        [0x1, 'f', 0x0, 0x5, 0x72, 0x1],
        [0x1, 'f', 0x0, 0x5, 0x70, 0x1],
        [0x1, 'f', 0x0, 0x5, 0x6d, 0x1],
        [0x1, 'f', 0x1, 0x5, 0x6a, 0x1],
        [0x1, 'f', 0x1, 0x5, 0x67, 0x1],
        [0x1, 'f', 0x1, 0x5, 0x64, 0x1],
        [0x1, 'f', 0x1, 0x5, 0x61, 0x1],
        [0x1, 'f', 0x1, 0x5, 0x5f, 0x1],
        [0x1, 'f', 0x2, 0x5, 0x6b, 0x1],
        [0x1, 'f', 0x2, 0x5, 0x69, 0x1],
        [0x1, 'f', 0x2, 0x5, 0x66, 0x1],
        [0x1, 'f', 0x2, 0x5, 0x63, 0x1],
        [0x1, 'f', 0x2, 0x5, 0x60, 0x1],
        [0x1, 'f', 0x2, 0x5, 0x5e, 0x1],
        [0x1, 'f', 0x0, 0x5, 0x68, 0x1],
        [0x1, 'f', 0x0, 0x5, 0x65, 0x1],
        [0x1, 'f', 0x0, 0x5, 0x62, 0x1],
        [0x1, 'f', 0x0, 0x5, 0x5d, 0x1],
        [0x1, 'f', 0x1, 0x5, 0x5c, 0x1],
        [0x1, 'f', 0x1, 0x5, 0x59, 0x1],
        [0x1, 'f', 0x1, 0x5, 0x56, 0x1],
        [0x1, 'f', 0x1, 0x5, 0x53, 0x1],
        [0x1, 'f', 0x1, 0x5, 0x50, 0x1],
        [0x1, 'f', 0x1, 0x5, 0x4e, 0x1],
        [0x1, 'f', 0x2, 0x5, 0x5a, 0x1],
        [0x1, 'f', 0x2, 0x5, 0x58, 0x1],
        [0x1, 'f', 0x2, 0x5, 0x55, 0x1],
        [0x1, 'f', 0x2, 0x5, 0x52, 0x1],
        [0x1, 'f', 0x2, 0x5, 0x4f, 0x1],
        [0x1, 'f', 0x2, 0x5, 0x4d, 0x1],
        [0x1, 'f', 0x2, 0x5, 0x4b, 0x1],
        [0x1, 'f', 0x2, 0x5, 0x48, 0x1],
        [0x1, 'f', 0x0, 0x5, 0x5b, 0x1],
        [0x1, 'f', 0x0, 0x5, 0x57, 0x1],
        [0x1, 'f', 0x0, 0x5, 0x54, 0x1],
        [0x1, 'f', 0x0, 0x5, 0x51, 0x1],
        [0x1, 'f', 0x0, 0x5, 0x4c, 0x1],
        [0x1, 'f', 0x0, 0x5, 0x4a, 0x1],
        [0x1, 'f', 0x1, 0x5, 0x49, 0x1],
        [0x1, 'f', 0x1, 0x5, 0x47, 0x1],
        [0x1, 'f', 0x1, 0x5, 0x44, 0x1],
        [0x1, 'f', 0x1, 0x5, 0x42, 0x1],
        [0x1, 'f', 0x1, 0x5, 0x3e, 0x1],
        [0x1, 'f', 0x1, 0x5, 0x3b, 0x1],
        [0x1, 'f', 0x1, 0x5, 0x38, 0x1],
        [0x1, 'f', 0x1, 0x5, 0x35, 0x1],
        [0x1, 'f', 0x1, 0x5, 0x32, 0x1],
        [0x1, 'f', 0x2, 0x5, 0x46, 0x1],
        [0x1, 'f', 0x2, 0x5, 0x43, 0x1],
        [0x1, 'f', 0x2, 0x5, 0x41, 0x1],
        [0x1, 'f', 0x2, 0x5, 0x3f, 0x1],
        [0x1, 'f', 0x2, 0x5, 0x3c, 0x1],
        [0x1, 'f', 0x2, 0x5, 0x39, 0x1],
        [0x1, 'f', 0x2, 0x5, 0x36, 0x1],
        [0x1, 'f', 0x2, 0x5, 0x33, 0x1],
        [0x1, 'f', 0x0, 0x5, 0x45, 0x1],
        [0x1, 'f', 0x0, 0x5, 0x40, 0x1],
        [0x1, 'f', 0x0, 0x5, 0x3d, 0x1],
        [0x1, 'f', 0x0, 0x5, 0x3a, 0x1],
        [0x1, 'f', 0x0, 0x5, 0x37, 0x1],
        [0x1, 'f', 0x0, 0x5, 0x34, 0x1],
        [0x1, 'f', 0x0, 0x5, 0x31, 0x1],
        [0x1, 'f', 0x0, 0x5, 0x2d, 0x1],
        [0x1, 'f', 0x0, 0x5, 0x2a, 0x1],
        [0x1, 'f', 0x0, 0x5, 0x26, 0x1],
        [0x1, 'f', 0x0, 0x5, 0x22, 0x1],
        [0x1, 'f', 0x0, 0x5, 0x1f, 0x1],
        [0x1, 'f', 0x1, 0x5, 0x30, 0x1],
        [0x1, 'f', 0x1, 0x5, 0x2c, 0x1],
        [0x1, 'f', 0x1, 0x5, 0x29, 0x1],
        [0x1, 'f', 0x1, 0x5, 0x25, 0x1],
        [0x1, 'f', 0x1, 0x5, 0x21, 0x1],
        [0x1, 'f', 0x1, 0x5, 0x1d, 0x1],
        [0x1, 'f', 0x2, 0x5, 0x1e, 0x1],
        [0x1, 'f', 0x2, 0x5, 0x20, 0x1],
        [0x1, 'f', 0x2, 0x5, 0x23, 0x1],
        [0x1, 'f', 0x2, 0x5, 0x27, 0x1],
        [0x1, 'f', 0x2, 0x5, 0x2e, 0x1],
        [0x1, 'f', 0x2, 0x5, 0x2b, 0x1],
        [0x1, 'f', 0x1, 0x5, 0x2f, 0x1],
        [0x1, 'f', 0x0, 0x5, 0x28, 0x1],
        [0x1, 'f', 0x0, 0x5, 0x24, 0x1],
        [0x1, 'f', 0x0, 0x5, 0x1c, 0x1],
        [0x1, 'f', 0x1, 0x5, 0x19, 0x1],
        [0x1, 'f', 0x1, 0x5, 0x16, 0x1],
        [0x1, 'f', 0x1, 0x5, 0x14, 0x1],
        [0x1, 'f', 0x1, 0x5, 0x10, 0x1],
        [0x1, 'f', 0x1, 0x5, 0xd, 0x1],
        [0x1, 'f', 0x1, 0x5, 0xa, 0x1],
        [0x1, 'f', 0x2, 0x5, 0x1b, 0x1],
        [0x1, 'f', 0x2, 0x5, 0x18, 0x1],
        [0x1, 'f', 0x2, 0x5, 0x15, 0x1],
        [0x1, 'f', 0x2, 0x5, 0x13, 0x1],
        [0x1, 'f', 0x2, 0x5, 0xf, 0x1],
        [0x1, 'f', 0x2, 0x5, 0xc, 0x1],
        [0x1, 'f', 0x2, 0x5, 0x9, 0x1],
        [0x1, 'f', 0x0, 0x5, 0x1a, 0x1],
        [0x1, 'f', 0x0, 0x5, 0x17, 0x1],
        [0x1, 'f', 0x0, 0x5, 0xe, 0x1],
        [0x1, 'f', 0x0, 0x5, 0xb, 0x1],
        [0x1, 'f', 0x0, 0x5, 0x11, 0x1],
        [0x1, 'f', 0x1, 0x5, 0x12, 0x1],
        [0x1, 'f', 0x1, 0x5, 0x8, 0x1],
        [0x1, 'f', 0x0, 0x5, 0x7, 0x1],
        [0x1, 'f', 0x1, 0x5, 0x6, 0x1],
        [0x1, 'f', 0x0, 0x5, 0x5, 0x1],
        [0x1, 'f', 0x1, 0x6, 0x5, 0x1],
        [0x1, 'f', 0x2, 0x7, 0x5, 0x1],
        [0x1, 'f', 0x0, 0x8, 0x5, 0x1],
        [0x1, 'f', 0x1, 0x9, 0x5, 0x1],
        [0x1, 'f', 0x1, 0xc, 0x5, 0x1],
        [0x1, 'f', 0x1, 0xf, 0x5, 0x1],
        [0x1, 'f', 0x1, 0x11, 0x5, 0x1],
        [0x1, 'f', 0x1, 0x16, 0x5, 0x1],
        [0x1, 'f', 0x1, 0x1a, 0x5, 0x1],
        [0x1, 'f', 0x2, 0xa, 0x5, 0x1],
        [0x1, 'f', 0x2, 0xd, 0x5, 0x1],
        [0x1, 'f', 0x2, 0x10, 0x5, 0x1],
        [0x1, 'f', 0x2, 0x12, 0x5, 0x1],
        [0x1, 'f', 0x2, 0x15, 0x5, 0x1],
        [0x1, 'f', 0x2, 0x17, 0x5, 0x1],
        [0x1, 'f', 0x2, 0x19, 0x5, 0x1],
        [0x1, 'f', 0x2, 0x1b, 0x5, 0x1],
        [0x1, 'f', 0x0, 0xb, 0x5, 0x1],
        [0x1, 'f', 0x0, 0xe, 0x5, 0x1],
        [0x1, 'f', 0x0, 0x13, 0x5, 0x1],
        [0x1, 'f', 0x0, 0x18, 0x5, 0x1],
        [0x1, 'f', 0x0, 0x1c, 0x5, 0x1],
        [0x1, 'f', 0x1, 0x14, 0x5, 0x1],
        [0x1, 'f', 0x1, 0x1d, 0x5, 0x1],
        [0x1, 'f', 0x1, 0x20, 0x5, 0x1],
        [0x1, 'f', 0x1, 0x23, 0x5, 0x1],
        [0x1, 'f', 0x1, 0x26, 0x5, 0x1],
        [0x1, 'f', 0x1, 0x29, 0x5, 0x1],
        [0x1, 'f', 0x1, 0x2d, 0x5, 0x1],
        [0x1, 'f', 0x2, 0x1e, 0x5, 0x1],
        [0x1, 'f', 0x2, 0x21, 0x5, 0x1],
        [0x1, 'f', 0x2, 0x24, 0x5, 0x1],
        [0x1, 'f', 0x2, 0x27, 0x5, 0x1],
        [0x1, 'f', 0x2, 0x2a, 0x5, 0x1],
        [0x1, 'f', 0x2, 0x2c, 0x5, 0x1],
        [0x1, 'f', 0x2, 0x2e, 0x5, 0x1],
        [0x1, 'f', 0x0, 0x2b, 0x5, 0x1],
        [0x1, 'f', 0x0, 0x28, 0x5, 0x1],
        [0x1, 'f', 0x0, 0x25, 0x5, 0x1],
        [0x1, 'f', 0x0, 0x22, 0x5, 0x1],
        [0x1, 'f', 0x0, 0x1f, 0x5, 0x1],
        [0x1, 'f', 0x0, 0x2f, 0x5, 0x1],
        [0x1, 'f', 0x1, 0x30, 0x5, 0x1],
        [0x1, 'f', 0x1, 0x33, 0x5, 0x1],
        [0x1, 'f', 0x1, 0x35, 0x5, 0x1],
        [0x1, 'f', 0x1, 0x39, 0x5, 0x1],
        [0x1, 'f', 0x1, 0x3c, 0x5, 0x1],
        [0x1, 'f', 0x1, 0x3f, 0x5, 0x1],
        [0x1, 'f', 0x1, 0x41, 0x5, 0x1],
        [0x1, 'f', 0x2, 0x40, 0x5, 0x1],
        [0x1, 'f', 0x2, 0x3e, 0x5, 0x1],
        [0x1, 'f', 0x2, 0x3b, 0x5, 0x1],
        [0x1, 'f', 0x2, 0x38, 0x5, 0x1],
        [0x1, 'f', 0x2, 0x34, 0x5, 0x1],
        [0x1, 'f', 0x2, 0x31, 0x5, 0x1],
        [0x1, 'f', 0x2, 0x36, 0x5, 0x1],
        [0x1, 'f', 0x0, 0x32, 0x5, 0x1],
        [0x1, 'f', 0x0, 0x37, 0x5, 0x1],
        [0x1, 'f', 0x0, 0x3a, 0x5, 0x1],
        [0x1, 'f', 0x0, 0x3d, 0x5, 0x1],
        [0x1, 'f', 0x0, 0x42, 0x5, 0x1],
        [0x1, 'f', 0x1, 0x43, 0x5, 0x1],
        [0x1, 'f', 0x1, 0x46, 0x5, 0x1],
        [0x1, 'f', 0x1, 0x48, 0x5, 0x1],
        [0x1, 'f', 0x1, 0x4b, 0x5, 0x1],
        [0x1, 'f', 0x1, 0x4f, 0x5, 0x1],
        [0x1, 'f', 0x2, 0x44, 0x5, 0x1],
        [0x1, 'f', 0x2, 0x47, 0x5, 0x1],
        [0x1, 'f', 0x2, 0x4a, 0x5, 0x1],
        [0x1, 'f', 0x2, 0x4c, 0x5, 0x1],
        [0x1, 'f', 0x2, 0x4e, 0x5, 0x1],
        [0x1, 'f', 0x0, 0x45, 0x5, 0x1],
        [0x1, 'f', 0x0, 0x49, 0x5, 0x1],
        [0x1, 'f', 0x0, 0x4d, 0x5, 0x1],
        [0x1, 'f', 0x0, 0x50, 0x5, 0x1],
        [0x1, 'f', 0x1, 0x51, 0x5, 0x1],
        [0x1, 'f', 0x1, 0x54, 0x5, 0x1],
        [0x1, 'f', 0x1, 0x57, 0x5, 0x1],
        [0x1, 'f', 0x1, 0x59, 0x5, 0x1],
        [0x1, 'f', 0x1, 0x5c, 0x5, 0x1],
        [0x1, 'f', 0x1, 0x5e, 0x5, 0x1],
        [0x1, 'f', 0x0, 0x52, 0x5, 0x1],
        [0x1, 'f', 0x2, 0x53, 0x5, 0x1],
        [0x1, 'f', 0x2, 0x55, 0x5, 0x1],
        [0x1, 'f', 0x2, 0x58, 0x5, 0x1],
        [0x1, 'f', 0x2, 0x5a, 0x5, 0x1],
        [0x1, 'f', 0x2, 0x5d, 0x5, 0x1],
        [0x1, 'f', 0x2, 0x5f, 0x5, 0x1],
        [0x1, 'f', 0x0, 0x56, 0x5, 0x1],
        [0x1, 'f', 0x0, 0x5b, 0x5, 0x1],
        [0x1, 'f', 0x2, 0x6, 0x99, 0x1],
        [0x1, 'f', 0x1, 0x6, 0x98, 0x1],
        [0x1, 't', 0x1, 0x5d, 0x12d, 0x0],
        [0x1, 't', 0x3, 0x5e, 0x12e, 0x0],
        [0x1, 't', 0x5, 0x5f, 0x12e, 0x0],
        [0x1, 't', 0x5, 0x5d, 0x12e, 0x0],
        [0x1, 'b', 0x3, 0x5c, 0x12e, 0x0],
        [0x1, 't', 0x1, 0x5b, 0x12e, 0x0],
        [0x1, 't', 0x5, 0x5a, 0x12e, 0x0],
        [0x1, 'b', 0x2, 0x5c, 0x12d, 0x0],
        [0x1, 't', 0x1, 0x5b, 0x12d, 0x0],
        [0x1, 't', 0x2, 0x5a, 0x12d, 0x0],
        [0x1, 'b', 0x2, 0x59, 0x12e, 0x0],
        [0x1, 't', 0x4, 0x59, 0x12d, 0x0],
        [0x1, 't', 0x1, 0x58, 0x12e, 0x0],
        [0x1, 't', 0x2, 0x58, 0x12d, 0x0],
        [0x1, 't', 0x3, 0x57, 0x12e, 0x0],
        [0x1, 't', 0x4, 0x57, 0x12b, 0x0],
        [0x1, 't', 0x4, 0x56, 0x12e, 0x0],
        [0x1, 't', 0x1, 0x55, 0x12e, 0x0],
        [0x1, 't', 0x5, 0x55, 0x12d, 0x0],
        [0x1, 'b', 0x2, 0x54, 0x12e, 0x0],
        [0x1, 't', 0x5, 0x53, 0x12e, 0x0],
        [0x1, 't', 0x1, 0x52, 0x12e, 0x0],
        [0x1, 't', 0x5, 0x51, 0x12e, 0x0],
        [0x1, 't', 0x2, 0x50, 0x12e, 0x0],
        [0x1, 't', 0x4, 0x4f, 0x12e, 0x0],
        [0x1, 't', 0x2, 0x4e, 0x12e, 0x0],
        [0x1, 'b', 0x1, 0x4d, 0x12e, 0x0],
        [0x1, 'b', 0x2, 0x4c, 0x12e, 0x0],
        [0x1, 't', 0x2, 0x4b, 0x12e, 0x0],
        [0x1, 't', 0x4, 0x4a, 0x12e, 0x0],
        [0x1, 'b', 0x1, 0x49, 0x12e, 0x0],
        [0x1, 't', 0x2, 0x48, 0x12e, 0x0],
        [0x1, 't', 0x4, 0x47, 0x12e, 0x0],
        [0x1, 'b', 0x3, 0x46, 0x12e, 0x0],
        [0x1, 't', 0x1, 0x45, 0x12e, 0x0],
        [0x1, 't', 0x2, 0x44, 0x12e, 0x0],
        [0x1, 't', 0x5, 0x43, 0x12e, 0x0],
        [0x1, 'b', 0x1, 0x42, 0x12e, 0x0],
        [0x1, 't', 0x2, 0x41, 0x12e, 0x0],
        [0x1, 't', 0x4, 0x40, 0x12e, 0x0],
        [0x1, 'b', 0x3, 0x3f, 0x12e, 0x0],
        [0x1, 't', 0x5, 0x3e, 0x12e, 0x0],
        [0x1, 'b', 0x1, 0x3d, 0x12e, 0x0],
        [0x1, 't', 0x3, 0x3c, 0x12e, 0x0],
        [0x1, 't', 0x4, 0x3b, 0x12e, 0x0],
        [0x1, 'b', 0x2, 0x3a, 0x12e, 0x0],
        [0x1, 't', 0x5, 0x39, 0x12e, 0x0],
        [0x1, 't', 0x1, 0x38, 0x12e, 0x0],
        [0x1, 't', 0x3, 0x37, 0x12e, 0x0],
        [0x1, 't', 0x4, 0x36, 0x12e, 0x0],
        [0x1, 't', 0x1, 0x35, 0x12e, 0x0],
        [0x1, 't', 0x5, 0x34, 0x12e, 0x0],
        [0x1, 't', 0x2, 0x33, 0x12e, 0x0],
        [0x1, 't', 0x4, 0x32, 0x12e, 0x0],
        [0x1, 't', 0x2, 0x31, 0x12e, 0x0],
        [0x1, 'b', 0x1, 0x30, 0x12e, 0x0],
        [0x1, 't', 0x3, 0x2f, 0x12e, 0x0],
        [0x1, 't', 0x4, 0x2e, 0x12e, 0x0],
        [0x1, 't', 0x1, 0x2d, 0x12e, 0x0],
        [0x1, 't', 0x2, 0x2c, 0x12e, 0x0],
        [0x1, 't', 0x5, 0x2b, 0x12e, 0x0],
        [0x1, 't', 0x2, 0x2a, 0x12e, 0x0],
        [0x1, 't', 0x1, 0x29, 0x12e, 0x0],
        [0x1, 't', 0x4, 0x28, 0x12e, 0x0],
        [0x1, 'b', 0x2, 0x27, 0x12e, 0x0],
        [0x1, 't', 0x5, 0x26, 0x12e, 0x0],
        [0x1, 't', 0x1, 0x25, 0x12e, 0x0],
        [0x1, 't', 0x2, 0x24, 0x12e, 0x0],
        [0x1, 't', 0x5, 0x23, 0x12e, 0x0],
        [0x1, 't', 0x0, 0x22, 0x12e, 0x0],
        [0x1, 't', 0x3, 0x21, 0x12e, 0x0],
        [0x1, 't', 0x4, 0x20, 0x12e, 0x0],
        [0x1, 'b', 0x1, 0x1f, 0x12e, 0x0],
        [0x1, 't', 0x2, 0x1e, 0x12e, 0x0],
        [0x1, 't', 0x4, 0x1d, 0x12e, 0x0],
        [0x1, 't', 0x2, 0x1c, 0x12e, 0x0],
        [0x1, 't', 0x5, 0x1b, 0x12e, 0x0],
        [0x1, 'b', 0x3, 0x1a, 0x12e, 0x0],
        [0x1, 't', 0x1, 0x19, 0x12e, 0x0],
        [0x1, 't', 0x4, 0x18, 0x12e, 0x0],
        [0x1, 't', 0x2, 0x17, 0x12e, 0x0],
        [0x1, 't', 0x1, 0x16, 0x12e, 0x0],
        [0x1, 't', 0x5, 0x15, 0x12e, 0x0],
        [0x1, 't', 0x2, 0x14, 0x12e, 0x0],
        [0x1, 't', 0x4, 0x13, 0x12e, 0x0],
        [0x1, 'b', 0x1, 0x12, 0x12e, 0x0],
        [0x1, 't', 0x5, 0x11, 0x12e, 0x0],
        [0x1, 't', 0x3, 0x10, 0x12e, 0x0],
        [0x1, 't', 0x1, 0xf, 0x12e, 0x0],
        [0x1, 't', 0x5, 0xe, 0x12e, 0x0],
        [0x1, 't', 0x3, 0xd, 0x12e, 0x0],
        [0x1, 't', 0x4, 0xc, 0x12e, 0x0],
        [0x1, 't', 0x1, 0xb, 0x12e, 0x0],
        [0x1, 't', 0x2, 0xa, 0x12e, 0x0],
        [0x1, 't', 0x4, 0x9, 0x12e, 0x0],
        [0x1, 'b', 0x3, 0x8, 0x12e, 0x0],
        [0x1, 't', 0x5, 0x8, 0x12e, 0x0],
        [0x1, 't', 0x5, 0x7, 0x12e, 0x0],
        [0x1, 'b', 0x2, 0x6, 0x12e, 0x0],
        [0x1, 't', 0x1, 0x6, 0x12d, 0x0],
        [0x1, 't', 0x4, 0x6, 0x12c, 0x0],
        [0x1, 't', 0x2, 0x6, 0x12b, 0x0],
        [0x1, 'b', 0x0, 0x6, 0x12a, 0x0],
        [0x1, 't', 0x5, 0x6, 0x129, 0x0],
        [0x1, 't', 0x2, 0x6, 0x128, 0x0],
        [0x1, 't', 0x0, 0x6, 0x127, 0x0],
        [0x1, 'b', 0x2, 0x6, 0x126, 0x0],
        [0x1, 't', 0x5, 0x6, 0x125, 0x0],
        [0x1, 't', 0x1, 0x6, 0x124, 0x0],
        [0x1, 'b', 0x0, 0x6, 0x123, 0x0],
        [0x1, 't', 0x2, 0x6, 0x122, 0x0],
        [0x1, 't', 0x5, 0x6, 0x121, 0x0],
        [0x1, 't', 0x1, 0x6, 0x120, 0x0],
        [0x1, 't', 0x4, 0x6, 0x11f, 0x0],
        [0x1, 't', 0x2, 0x6, 0x11e, 0x0],
        [0x1, 't', 0x5, 0x6, 0x11d, 0x0],
        [0x1, 't', 0x2, 0x6, 0x11c, 0x0],
        [0x1, 'b', 0x0, 0x6, 0x11b, 0x0],
        [0x1, 't', 0x2, 0x6, 0x11a, 0x0],
        [0x1, 't', 0x5, 0x6, 0x119, 0x0],
        [0x1, 'b', 0x2, 0x6, 0x118, 0x0],
        [0x1, 't', 0x5, 0x6, 0x117, 0x0],
        [0x1, 't', 0x1, 0x6, 0x116, 0x0],
        [0x1, 't', 0x4, 0x6, 0x115, 0x0],
        [0x1, 't', 0x3, 0x6, 0x114, 0x0],
        [0x1, 't', 0x5, 0x6, 0x113, 0x0],
        [0x1, 'b', 0x0, 0x6, 0x112, 0x0],
        [0x1, 't', 0x5, 0x6, 0x111, 0x0],
        [0x1, 't', 0x1, 0x6, 0x110, 0x0],
        [0x1, 't', 0x4, 0x6, 0x10f, 0x0],
        [0x1, 'b', 0x3, 0x6, 0x10e, 0x0],
        [0x1, 't', 0x5, 0x6, 0x10d, 0x0],
        [0x1, 't', 0x1, 0x6, 0x10c, 0x0],
        [0x1, 't', 0x4, 0x6, 0x10b, 0x0],
        [0x1, 't', 0x1, 0x6, 0x10a, 0x0],
        [0x1, 't', 0x3, 0x6, 0x109, 0x0],
        [0x1, 't', 0x4, 0x6, 0x108, 0x0],
        [0x1, 'b', 0x2, 0x6, 0x107, 0x0],
        [0x1, 't', 0x5, 0x6, 0x106, 0x0],
        [0x1, 't', 0x3, 0x6, 0x105, 0x0],
        [0x1, 't', 0x0, 0x6, 0x104, 0x0],
        [0x1, 't', 0x5, 0x6, 0x103, 0x0],
        [0x1, 't', 0x1, 0x6, 0x102, 0x0],
        [0x1, 't', 0x3, 0x6, 0x101, 0x0],
        [0x1, 't', 0x4, 0x6, 0xff, 0x0],
        [0x1, 't', 0x3, 0x6, 0xfe, 0x0],
        [0x1, 't', 0x5, 0x6, 0xfd, 0x0],
        [0x1, 'b', 0x2, 0x6, 0xfc, 0x0],
        [0x1, 't', 0x5, 0x6, 0xfb, 0x0],
        [0x1, 't', 0x1, 0x6, 0xfa, 0x0],
        [0x1, 't', 0x3, 0x6, 0xf9, 0x0],
        [0x1, 't', 0x4, 0x6, 0xf8, 0x0],
        [0x1, 'b', 0x3, 0x6, 0xf7, 0x0],
        [0x1, 't', 0x5, 0x6, 0xf6, 0x0],
        [0x1, 't', 0x3, 0x6, 0xf5, 0x0],
        [0x1, 't', 0x5, 0x6, 0xf4, 0x0],
        [0x1, 't', 0x0, 0x6, 0xf3, 0x0],
        [0x1, 't', 0x4, 0x6, 0xf2, 0x0],
        [0x1, 't', 0x3, 0x6, 0xf1, 0x0],
        [0x1, 't', 0x5, 0x6, 0xf0, 0x0],
        [0x1, 'b', 0x0, 0x6, 0xef, 0x0],
        [0x1, 't', 0x3, 0x6, 0xee, 0x0],
        [0x1, 't', 0x4, 0x6, 0xed, 0x0],
        [0x1, 't', 0x1, 0x6, 0xec, 0x0],
        [0x1, 't', 0x5, 0x6, 0xeb, 0x0],
        [0x1, 'b', 0x2, 0x6, 0xea, 0x0],
        [0x1, 't', 0x2, 0x6, 0xe9, 0x0],
        [0x1, 't', 0x4, 0x6, 0xe8, 0x0],
        [0x1, 'b', 0x3, 0x6, 0xe7, 0x0],
        [0x1, 't', 0x5, 0x6, 0xe6, 0x0],
        [0x1, 't', 0x1, 0x6, 0xe5, 0x0],
        [0x1, 't', 0x2, 0x6, 0xe4, 0x0],
        [0x1, 't', 0x5, 0x6, 0xe3, 0x0],
        [0x1, 'b', 0x2, 0x6, 0xe2, 0x0],
        [0x1, 't', 0x4, 0x6, 0xe1, 0x0],
        [0x1, 't', 0x0, 0x6, 0xe0, 0x0],
        [0x1, 't', 0x2, 0x6, 0xdf, 0x0],
        [0x1, 't', 0x0, 0x6, 0xde, 0x0],
        [0x1, 'b', 0x2, 0x6, 0xdd, 0x0],
        [0x1, 't', 0x4, 0x6, 0xdc, 0x0],
        [0x1, 'b', 0x3, 0x6, 0xdb, 0x0],
        [0x1, 't', 0x5, 0x6, 0xda, 0x0],
        [0x1, 't', 0x0, 0x6, 0xd9, 0x0],
        [0x1, 't', 0x3, 0x6, 0xd8, 0x0],
        [0x1, 'b', 0x0, 0x6, 0xd7, 0x0],
        [0x1, 't', 0x4, 0x6, 0xd6, 0x0],
        [0x1, 't', 0x2, 0x6, 0xd5, 0x0],
        [0x1, 't', 0x0, 0x6, 0xd4, 0x0],
        [0x1, 't', 0x2, 0x6, 0xd3, 0x0],
        [0x1, 'b', 0x3, 0x6, 0xd2, 0x0],
        [0x1, 't', 0x0, 0x6, 0xd1, 0x0],
        [0x1, 't', 0x5, 0x6, 0xcf, 0x0],
        [0x1, 't', 0x2, 0x6, 0xd0, 0x0],
        [0x1, 't', 0x0, 0x6, 0xce, 0x0],
        [0x1, 't', 0x2, 0x6, 0xcd, 0x0],
        [0x1, 't', 0x2, 0x6, 0xcb, 0x0],
        [0x1, 'b', 0x0, 0x6, 0xca, 0x0],
        [0x1, 't', 0x3, 0x6, 0xc9, 0x0],
        [0x1, 't', 0x4, 0x6, 0xc7, 0x0],
        [0x1, 't', 0x0, 0x6, 0xc6, 0x0],
        [0x1, 't', 0x2, 0x6, 0xc5, 0x0],
        [0x1, 't', 0x4, 0x6, 0xc4, 0x0],
        [0x1, 't', 0x1, 0x6, 0xc3, 0x0],
        [0x1, 't', 0x3, 0x6, 0xc2, 0x0],
        [0x1, 't', 0x4, 0x6, 0xc0, 0x0],
        [0x1, 't', 0x2, 0x6, 0xbf, 0x0],
        [0x1, 'b', 0x0, 0x6, 0xbe, 0x0],
        [0x1, 't', 0x3, 0x6, 0xbd, 0x0],
        [0x1, 't', 0x4, 0x6, 0xbb, 0x0],
        [0x1, 'b', 0x0, 0x6, 0xba, 0x0],
        [0x1, 't', 0x2, 0x6, 0xb9, 0x0],
        [0x1, 't', 0x4, 0x6, 0xb8, 0x0],
        [0x1, 't', 0x2, 0x6, 0xb7, 0x0],
        [0x1, 't', 0x0, 0x6, 0xb6, 0x0],
        [0x1, 'b', 0x2, 0x6, 0xb5, 0x0],
        [0x1, 't', 0x5, 0x6, 0xb4, 0x0],
        [0x1, 't', 0x2, 0x6, 0xb3, 0x0],
        [0x1, 't', 0x0, 0x6, 0xb2, 0x0],
        [0x1, 't', 0x2, 0x6, 0xb1, 0x0],
        [0x1, 't', 0x4, 0x6, 0xb0, 0x0],
        [0x1, 'b', 0x2, 0x6, 0xaf, 0x0],
        [0x1, 't', 0x1, 0x6, 0xae, 0x0],
        [0x1, 't', 0x5, 0x6, 0xad, 0x0],
        [0x1, 't', 0x2, 0x6, 0x100, 0x0],
        [0x1, 't', 0x4, 0x6, 0xcc, 0x0],
        [0x1, 't', 0x4, 0x6, 0xc8, 0x0],
        [0x1, 't', 0x2, 0x6, 0xc1, 0x0],
        [0x1, 't', 0x2, 0x6, 0xbc, 0x0],
        [0x1, 'f', 0x1, 0x6, 0x96, 0x1],
        [0x1, 'f', 0x2, 0x6, 0x97, 0x1],
        [0x1, 'f', 0x2, 0x6, 0x95, 0x1],
        [0x1, 'f', 0x1, 0x6, 0x94, 0x1],
        [0x1, 'f', 0x2, 0x6, 0x93, 0x1],
        [0x1, 'f', 0x2, 0x6, 0x91, 0x1],
        [0x1, 'f', 0x2, 0x6, 0x8f, 0x1],
        [0x1, 'f', 0x1, 0x6, 0x92, 0x1],
        [0x1, 'f', 0x1, 0x6, 0x90, 0x1],
        [0x1, 'f', 0x1, 0x6, 0x8e, 0x1],
        [0x1, 'f', 0x2, 0x6, 0x8d, 0x1],
        [0x1, 'f', 0x2, 0x6, 0x8b, 0x1],
        [0x1, 'f', 0x2, 0x6, 0x89, 0x1],
        [0x1, 'f', 0x2, 0x6, 0x87, 0x1],
        [0x1, 'f', 0x2, 0x6, 0x85, 0x1],
        [0x1, 'f', 0x1, 0x6, 0x8c, 0x1],
        [0x1, 'f', 0x1, 0x6, 0x8a, 0x1],
        [0x1, 'f', 0x1, 0x6, 0x88, 0x1],
        [0x1, 'f', 0x1, 0x6, 0x86, 0x1],
        [0x1, 'f', 0x1, 0x6, 0x84, 0x1],
        [0x1, 'f', 0x2, 0x6, 0x83, 0x1],
        [0x1, 'f', 0x2, 0x6, 0x81, 0x1],
        [0x1, 'f', 0x2, 0x6, 0x7f, 0x1],
        [0x1, 'f', 0x2, 0x6, 0x7d, 0x1],
        [0x1, 'f', 0x2, 0x6, 0x7b, 0x1],
        [0x1, 'f', 0x2, 0x6, 0x79, 0x1],
        [0x1, 'f', 0x1, 0x6, 0x82, 0x1],
        [0x1, 'f', 0x1, 0x6, 0x80, 0x1],
        [0x1, 'f', 0x1, 0x6, 0x7e, 0x1],
        [0x1, 'f', 0x1, 0x6, 0x7c, 0x1],
        [0x1, 'f', 0x1, 0x6, 0x7a, 0x1],
        [0x1, 'f', 0x1, 0x6, 0x78, 0x1],
        [0x1, 'f', 0x2, 0x6, 0x77, 0x1],
        [0x1, 'f', 0x2, 0x6, 0x75, 0x1],
        [0x1, 'f', 0x2, 0x6, 0x73, 0x1],
        [0x1, 'f', 0x2, 0x6, 0x71, 0x1],
        [0x1, 'f', 0x2, 0x6, 0x6f, 0x1],
        [0x1, 'f', 0x2, 0x6, 0x6d, 0x1],
        [0x1, 'f', 0x1, 0x6, 0x76, 0x1],
        [0x1, 'f', 0x1, 0x6, 0x74, 0x1],
        [0x1, 'f', 0x1, 0x6, 0x72, 0x1],
        [0x1, 'f', 0x1, 0x6, 0x70, 0x1],
        [0x1, 'f', 0x1, 0x6, 0x6e, 0x1],
        [0x1, 'f', 0x1, 0x6, 0x6c, 0x1],
        [0x1, 'f', 0x1, 0x6, 0x6a, 0x1],
        [0x1, 'f', 0x1, 0x6, 0x68, 0x1],
        [0x1, 'f', 0x2, 0x6, 0x6b, 0x1],
        [0x1, 'f', 0x2, 0x6, 0x69, 0x1],
        [0x1, 'f', 0x2, 0x6, 0x67, 0x1],
        [0x1, 'f', 0x2, 0x6, 0x65, 0x1],
        [0x1, 'f', 0x2, 0x6, 0x63, 0x1],
        [0x1, 'f', 0x2, 0x6, 0x61, 0x1],
        [0x1, 'f', 0x2, 0x6, 0x5f, 0x1],
        [0x1, 'f', 0x2, 0x6, 0x5d, 0x1],
        [0x1, 'f', 0x2, 0x6, 0x5b, 0x1],
        [0x1, 'f', 0x1, 0x6, 0x66, 0x1],
        [0x1, 'f', 0x1, 0x6, 0x64, 0x1],
        [0x1, 'f', 0x1, 0x6, 0x62, 0x1],
        [0x1, 'f', 0x1, 0x6, 0x60, 0x1],
        [0x1, 'f', 0x1, 0x6, 0x5e, 0x1],
        [0x1, 'f', 0x1, 0x6, 0x5c, 0x1],
        [0x1, 'f', 0x1, 0x6, 0x5a, 0x1],
        [0x1, 'f', 0x1, 0x6, 0x58, 0x1],
        [0x1, 'f', 0x1, 0x6, 0x56, 0x1],
        [0x1, 'f', 0x2, 0x6, 0x59, 0x1],
        [0x1, 'f', 0x2, 0x6, 0x57, 0x1],
        [0x1, 'f', 0x2, 0x6, 0x55, 0x1],
        [0x1, 'f', 0x2, 0x6, 0x53, 0x1],
        [0x1, 'f', 0x2, 0x6, 0x51, 0x1],
        [0x1, 'f', 0x2, 0x6, 0x4f, 0x1],
        [0x1, 'f', 0x2, 0x6, 0x4d, 0x1],
        [0x1, 'f', 0x1, 0x6, 0x54, 0x1],
        [0x1, 'f', 0x1, 0x6, 0x52, 0x1],
        [0x1, 'f', 0x1, 0x6, 0x50, 0x1],
        [0x1, 'f', 0x1, 0x6, 0x4e, 0x1],
        [0x1, 'f', 0x1, 0x6, 0x4c, 0x1],
        [0x1, 'f', 0x2, 0x6, 0x4b, 0x1],
        [0x1, 'f', 0x2, 0x6, 0x49, 0x1],
        [0x1, 'f', 0x2, 0x6, 0x47, 0x1],
        [0x1, 'f', 0x2, 0x6, 0x45, 0x1],
        [0x1, 'f', 0x2, 0x6, 0x43, 0x1],
        [0x1, 'f', 0x2, 0x6, 0x41, 0x1],
        [0x1, 'f', 0x1, 0x6, 0x4a, 0x1],
        [0x1, 'f', 0x1, 0x6, 0x48, 0x1],
        [0x1, 'f', 0x1, 0x6, 0x46, 0x1],
        [0x1, 'f', 0x1, 0x6, 0x44, 0x1],
        [0x1, 'f', 0x1, 0x6, 0x42, 0x1],
        [0x1, 'f', 0x1, 0x6, 0x40, 0x1],
        [0x1, 'f', 0x2, 0x6, 0x3f, 0x1],
        [0x1, 'f', 0x2, 0x6, 0x3d, 0x1],
        [0x1, 'f', 0x2, 0x6, 0x3b, 0x1],
        [0x1, 'f', 0x2, 0x6, 0x39, 0x1],
        [0x1, 'f', 0x2, 0x6, 0x37, 0x1],
        [0x1, 'f', 0x2, 0x6, 0x35, 0x1],
        [0x1, 'f', 0x2, 0x6, 0x33, 0x1],
        [0x1, 'f', 0x1, 0x6, 0x3e, 0x1],
        [0x1, 'f', 0x1, 0x6, 0x3c, 0x1],
        [0x1, 'f', 0x1, 0x6, 0x3a, 0x1],
        [0x1, 'f', 0x1, 0x6, 0x38, 0x1],
        [0x1, 'f', 0x1, 0x6, 0x36, 0x1],
        [0x1, 'f', 0x1, 0x6, 0x34, 0x1],
        [0x1, 'f', 0x1, 0x6, 0x32, 0x1],
        [0x1, 'f', 0x2, 0x6, 0x31, 0x1],
        [0x1, 'f', 0x2, 0x6, 0x2f, 0x1],
        [0x1, 'f', 0x2, 0x6, 0x2d, 0x1],
        [0x1, 'f', 0x2, 0x6, 0x2b, 0x1],
        [0x1, 'f', 0x2, 0x6, 0x29, 0x1],
        [0x1, 'f', 0x2, 0x6, 0x27, 0x1],
        [0x1, 'f', 0x1, 0x6, 0x30, 0x1],
        [0x1, 'f', 0x1, 0x6, 0x2e, 0x1],
        [0x1, 'f', 0x1, 0x6, 0x2c, 0x1],
        [0x1, 'f', 0x1, 0x6, 0x2a, 0x1],
        [0x1, 'f', 0x1, 0x6, 0x28, 0x1],
        [0x1, 'f', 0x1, 0x6, 0x26, 0x1],
        [0x1, 'f', 0x2, 0x6, 0x25, 0x1],
        [0x1, 'f', 0x2, 0x6, 0x23, 0x1],
        [0x1, 'f', 0x2, 0x6, 0x21, 0x1],
        [0x1, 'f', 0x2, 0x6, 0x1f, 0x1],
        [0x1, 'f', 0x2, 0x6, 0x1d, 0x1],
        [0x1, 'f', 0x2, 0x6, 0x1b, 0x1],
        [0x1, 'f', 0x1, 0x6, 0x24, 0x1],
        [0x1, 'f', 0x1, 0x6, 0x22, 0x1],
        [0x1, 'f', 0x1, 0x6, 0x20, 0x1],
        [0x1, 'f', 0x1, 0x6, 0x1e, 0x1],
        [0x1, 'f', 0x1, 0x6, 0x1c, 0x1],
        [0x1, 'f', 0x1, 0x6, 0x1a, 0x1],
        [0x1, 'f', 0x2, 0x6, 0x19, 0x1],
        [0x1, 'f', 0x2, 0x6, 0x17, 0x1],
        [0x1, 'f', 0x2, 0x6, 0x15, 0x1],
        [0x1, 'f', 0x2, 0x6, 0x13, 0x1],
        [0x1, 'f', 0x2, 0x6, 0x11, 0x1],
        [0x1, 'f', 0x2, 0x6, 0xf, 0x1],
        [0x1, 'f', 0x1, 0x6, 0x18, 0x1],
        [0x1, 'f', 0x1, 0x6, 0x16, 0x1],
        [0x1, 'f', 0x1, 0x6, 0x14, 0x1],
        [0x1, 'f', 0x1, 0x6, 0x12, 0x1],
        [0x1, 'f', 0x1, 0x6, 0x10, 0x1],
        [0x1, 'f', 0x2, 0x6, 0xd, 0x1],
        [0x1, 'f', 0x2, 0x6, 0xb, 0x1],
        [0x1, 'f', 0x2, 0x6, 0x9, 0x1],
        [0x1, 'f', 0x2, 0x6, 0x7, 0x1],
        [0x1, 'f', 0x1, 0x6, 0xe, 0x1],
        [0x1, 'f', 0x1, 0x6, 0xc, 0x1],
        [0x1, 'f', 0x1, 0x6, 0xa, 0x1],
        [0x1, 'f', 0x1, 0x6, 0x8, 0x1],
        [0x1, 'f', 0x1, 0x6, 0x6, 0x1],
        [0x1, 'f', 0x1, 0x8, 0x6, 0x1],
        [0x1, 'f', 0x2, 0x7, 0x6, 0x1],
        [0x1, 'f', 0x2, 0x9, 0x6, 0x1],
        [0x1, 'f', 0x2, 0xb, 0x6, 0x1],
        [0x1, 'f', 0x2, 0xd, 0x6, 0x1],
        [0x1, 'f', 0x2, 0xf, 0x6, 0x1],
        [0x1, 'f', 0x1, 0xa, 0x6, 0x1],
        [0x1, 'f', 0x1, 0xc, 0x6, 0x1],
        [0x1, 'f', 0x1, 0xe, 0x6, 0x1],
        [0x1, 'f', 0x1, 0x10, 0x6, 0x1],
        [0x1, 'f', 0x1, 0x12, 0x6, 0x1],
        [0x1, 'f', 0x1, 0x14, 0x6, 0x1],
        [0x1, 'f', 0x1, 0x16, 0x6, 0x1],
        [0x1, 'f', 0x1, 0x18, 0x6, 0x1],
        [0x1, 'f', 0x1, 0x1a, 0x6, 0x1],
        [0x1, 'f', 0x2, 0x11, 0x6, 0x1],
        [0x1, 'f', 0x2, 0x13, 0x6, 0x1],
        [0x1, 'f', 0x2, 0x15, 0x6, 0x1],
        [0x1, 'f', 0x2, 0x17, 0x6, 0x1],
        [0x1, 'f', 0x2, 0x19, 0x6, 0x1],
        [0x1, 'f', 0x2, 0x1b, 0x6, 0x1],
        [0x1, 'f', 0x2, 0x1d, 0x6, 0x1],
        [0x1, 'f', 0x2, 0x1f, 0x6, 0x1],
        [0x1, 'f', 0x2, 0x21, 0x6, 0x1],
        [0x1, 'f', 0x1, 0x1c, 0x6, 0x1],
        [0x1, 'f', 0x1, 0x1e, 0x6, 0x1],
        [0x1, 'f', 0x1, 0x20, 0x6, 0x1],
        [0x1, 'f', 0x1, 0x22, 0x6, 0x1],
        [0x1, 'f', 0x2, 0x43, 0x6, 0x1],
        [0x1, 'f', 0x2, 0x45, 0x6, 0x1],
        [0x1, 'f', 0x2, 0x47, 0x6, 0x1],
        [0x1, 'f', 0x2, 0x49, 0x6, 0x1],
        [0x1, 'f', 0x2, 0x4b, 0x6, 0x1],
        [0x1, 'f', 0x1, 0x44, 0x6, 0x1],
        [0x1, 'f', 0x1, 0x46, 0x6, 0x1],
        [0x1, 'f', 0x1, 0x48, 0x6, 0x1],
        [0x1, 'f', 0x1, 0x4a, 0x6, 0x1],
        [0x1, 'f', 0x1, 0x4c, 0x6, 0x1],
        [0x1, 'f', 0x2, 0x4d, 0x6, 0x1],
        [0x1, 'f', 0x2, 0x4f, 0x6, 0x1],
        [0x1, 'f', 0x2, 0x51, 0x6, 0x1],
        [0x1, 'f', 0x2, 0x53, 0x6, 0x1],
        [0x1, 'f', 0x2, 0x55, 0x6, 0x1],
        [0x1, 'f', 0x1, 0x4e, 0x6, 0x1],
        [0x1, 'f', 0x1, 0x50, 0x6, 0x1],
        [0x1, 'f', 0x1, 0x52, 0x6, 0x1],
        [0x1, 'f', 0x1, 0x54, 0x6, 0x1],
        [0x1, 'f', 0x1, 0x56, 0x6, 0x1],
        [0x1, 'f', 0x2, 0x57, 0x6, 0x1],
        [0x1, 'f', 0x2, 0x59, 0x6, 0x1],
        [0x1, 'f', 0x2, 0x5b, 0x6, 0x1],
        [0x1, 'f', 0x2, 0x5d, 0x6, 0x1],
        [0x1, 'f', 0x1, 0x58, 0x6, 0x1],
        [0x1, 'f', 0x1, 0x5a, 0x6, 0x1],
        [0x1, 'f', 0x1, 0x5c, 0x6, 0x1],
        [0x1, 'f', 0x1, 0x5e, 0x6, 0x1],
        [0x1, 'f', 0x2, 0x5f, 0x6, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x7, 0x1],
        [0x1, 'f', 0x1, 0x53, 0x7, 0x1],
        [0x1, 'f', 0x1, 0x51, 0x7, 0x1],
        [0x1, 'f', 0x1, 0x4f, 0x7, 0x1],
        [0x1, 'f', 0x1, 0x4d, 0x7, 0x1],
        [0x1, 'f', 0x1, 0x4b, 0x7, 0x1],
        [0x1, 'f', 0x1, 0x49, 0x7, 0x1],
        [0x1, 'f', 0x1, 0x47, 0x7, 0x1],
        [0x1, 'f', 0x1, 0x45, 0x7, 0x1],
        [0x1, 'f', 0x1, 0x21, 0x7, 0x1],
        [0x1, 'f', 0x1, 0x1f, 0x7, 0x1],
        [0x1, 'f', 0x1, 0x1d, 0x7, 0x1],
        [0x1, 'f', 0x1, 0x1b, 0x7, 0x1],
        [0x1, 'f', 0x1, 0x19, 0x7, 0x1],
        [0x1, 'f', 0x1, 0x17, 0x7, 0x1],
        [0x1, 'f', 0x1, 0x15, 0x7, 0x1],
        [0x1, 'f', 0x1, 0x13, 0x7, 0x1],
        [0x1, 'f', 0x1, 0x11, 0x7, 0x1],
        [0x1, 'f', 0x1, 0xf, 0x7, 0x1],
        [0x1, 'f', 0x1, 0xd, 0x7, 0x1],
        [0x1, 'f', 0x1, 0xb, 0x7, 0x1],
        [0x1, 'f', 0x1, 0x9, 0x7, 0x1],
        [0x1, 'f', 0x1, 0x7, 0x7, 0x1],
        [0x1, 's', 0x0, 0x7, 0x8, 0x1],
        [0x1, 't', 0x4, 0x7, 0xae, 0x0],
        [0x1, 't', 0x5, 0x7, 0xaf, 0x0],
        [0x1, 't', 0x4, 0x7, 0xb0, 0x0],
        [0x1, 'b', 0x2, 0x7, 0xb1, 0x0],
        [0x1, 't', 0x3, 0x5e, 0x12d, 0x0],
        [0x1, 'b', 0x3, 0x5f, 0x12d, 0x0],
        [0x1, 't', 0x4, 0x60, 0x12d, 0x0],
        [0x1, 't', 0x1, 0x61, 0x12d, 0x0],
        [0x1, 't', 0x2, 0x62, 0x12d, 0x0],
        [0x1, 't', 0x4, 0x63, 0x12d, 0x0],
        [0x1, 't', 0x2, 0x64, 0x12d, 0x0],
        [0x1, 't', 0x4, 0x60, 0x130, 0x0],
        [0x1, 't', 0x2, 0x60, 0x12e, 0x0],
        [0x1, 't', 0x2, 0x61, 0x130, 0x0],
        [0x1, 't', 0x2, 0x60, 0x12f, 0x0],
        [0x1, 't', 0x5, 0x61, 0x12f, 0x0],
        [0x1, 't', 0x5, 0x62, 0x130, 0x0],
        [0x1, 'b', 0x2, 0x61, 0x12e, 0x0],
        [0x1, 'b', 0x2, 0x63, 0x130, 0x0],
        [0x1, 't', 0x1, 0x62, 0x12f, 0x0],
        [0x1, 't', 0x4, 0x62, 0x12e, 0x0],
        [0x1, 't', 0x4, 0x63, 0x12f, 0x0],
        [0x1, 't', 0x4, 0x64, 0x130, 0x0],
        [0x1, 't', 0x5, 0x63, 0x12e, 0x0],
        [0x1, 't', 0x5, 0x65, 0x12f, 0x0],
        [0x1, 't', 0x2, 0x64, 0x12f, 0x0],
        [0x1, 't', 0x0, 0x64, 0x12e, 0x0],
        [0x1, 't', 0x0, 0x65, 0x130, 0x0],
        [0x1, 't', 0x4, 0x66, 0x130, 0x0],
        [0x1, 'f', 0x0, 0x5e, 0x7, 0x1],
        [0x1, 'f', 0x1, 0x5d, 0x7, 0x1],
        [0x1, 'f', 0x1, 0x5c, 0x7, 0x1],
        [0x1, 'f', 0x0, 0x5b, 0x7, 0x1],
        [0x1, 'f', 0x1, 0x5a, 0x7, 0x1],
        [0x1, 'f', 0x1, 0x59, 0x7, 0x1],
        [0x1, 'f', 0x0, 0x58, 0x7, 0x1],
        [0x1, 'f', 0x1, 0x57, 0x7, 0x1],
        [0x1, 'f', 0x1, 0x56, 0x7, 0x1],
        [0x1, 'f', 0x1, 0x55, 0x7, 0x1],
        [0x1, 'f', 0x0, 0x54, 0x7, 0x1],
        [0x1, 'f', 0x1, 0x52, 0x7, 0x1],
        [0x1, 'f', 0x0, 0x50, 0x7, 0x1],
        [0x1, 'f', 0x1, 0x4e, 0x7, 0x1],
        [0x1, 'f', 0x0, 0x4c, 0x7, 0x1],
        [0x1, 'f', 0x1, 0x4a, 0x7, 0x1],
        [0x1, 'f', 0x0, 0x48, 0x7, 0x1],
        [0x1, 'f', 0x0, 0x46, 0x7, 0x1],
        [0x1, 'f', 0x1, 0x44, 0x7, 0x1],
        [0x1, 'f', 0x1, 0x20, 0x7, 0x1],
        [0x1, 'f', 0x0, 0x1e, 0x7, 0x1],
        [0x1, 'f', 0x1, 0x1c, 0x7, 0x1],
        [0x1, 'f', 0x0, 0x1a, 0x7, 0x1],
        [0x1, 'f', 0x1, 0x18, 0x7, 0x1],
        [0x1, 'f', 0x0, 0x16, 0x7, 0x1],
        [0x1, 'f', 0x1, 0x14, 0x7, 0x1],
        [0x1, 'f', 0x0, 0x12, 0x7, 0x1],
        [0x1, 'f', 0x1, 0x10, 0x7, 0x1],
        [0x1, 'f', 0x0, 0xe, 0x7, 0x1],
        [0x1, 'f', 0x1, 0xc, 0x7, 0x1],
        [0x1, 'f', 0x0, 0xa, 0x7, 0x1],
        [0x1, 'f', 0x1, 0x8, 0x7, 0x1],
        [0x1, 's', 0x1, 0x7, 0x9, 0x1],
        [0x1, 'f', 0x0, 0x5f, 0x98, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x97, 0x1],
        [0x1, 'f', 0x0, 0x5f, 0xb, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0xc, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0xe, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x13, 0x1],
        [0x1, 'f', 0x0, 0x5f, 0xf, 0x1],
        [0x1, 'f', 0x0, 0x5f, 0x14, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x15, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x1a, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x25, 0x1],
        [0x1, 'f', 0x0, 0x5f, 0x2c, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x32, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x34, 0x1],
        [0x1, 'f', 0x0, 0x5f, 0x35, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x36, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x3e, 0x1],
        [0x1, 'f', 0x0, 0x5f, 0x37, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x40, 0x1],
        [0x1, 'f', 0x0, 0x5f, 0x3a, 0x1],
        [0x1, 'f', 0x0, 0x5f, 0x3d, 0x1],
        [0x1, 'f', 0x0, 0x5f, 0x44, 0x1],
        [0x1, 'f', 0x0, 0x5f, 0x48, 0x1],
        [0x1, 'f', 0x0, 0x5f, 0x4e, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x73, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x75, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x80, 0x1],
        [0x1, 'f', 0x0, 0x5f, 0x55, 0x1],
        [0x1, 'f', 0x0, 0x5f, 0x5b, 0x1],
        [0x1, 'f', 0x0, 0x5f, 0x5f, 0x1],
        [0x1, 'f', 0x0, 0x5f, 0x72, 0x1],
        [0x1, 'f', 0x2, 0x5f, 0x71, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x77, 0x1],
        [0x1, 'f', 0x0, 0x5f, 0x78, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x79, 0x1],
        [0x1, 'f', 0x0, 0x5f, 0x7f, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x82, 0x1],
        [0x1, 'f', 0x0, 0x5f, 0x83, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x84, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x88, 0x1],
        [0x1, 'f', 0x0, 0x5f, 0x89, 0x1],
        [0x1, 'f', 0x0, 0x5f, 0x8f, 0x1],
        [0x1, 'f', 0x0, 0x5f, 0x93, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x8a, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x90, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0xa, 0x1],
        [0x1, 'f', 0x0, 0x5f, 0x8, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x9, 0x1],
        [0x1, 'f', 0x0, 0x5f, 0xd, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x10, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x11, 0x1],
        [0x1, 'f', 0x0, 0x5f, 0x12, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x2d, 0x1],
        [0x1, 'f', 0x0, 0x5f, 0x33, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x38, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x39, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x3b, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x3c, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x3f, 0x1],
        [0x1, 'f', 0x0, 0x5f, 0x41, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x42, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x43, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x45, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x46, 0x1],
        [0x1, 'f', 0x0, 0x5f, 0x47, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x49, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x4a, 0x1],
        [0x1, 'f', 0x0, 0x5f, 0x4b, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x4c, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x4d, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x4f, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x50, 0x1],
        [0x1, 'f', 0x0, 0x5f, 0x51, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x52, 0x1],
        [0x1, 'f', 0x0, 0x5f, 0x53, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x54, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x56, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x58, 0x1],
        [0x1, 'f', 0x0, 0x5f, 0x57, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x59, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x5a, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x5c, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x5d, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x5e, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x60, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x61, 0x1],
        [0x1, 'f', 0x0, 0x5f, 0x62, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x63, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x64, 0x1],
        [0x1, 'f', 0x0, 0x5f, 0x65, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x66, 0x1],
        [0x1, 'f', 0x0, 0x5f, 0x67, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x68, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x69, 0x1],
        [0x1, 'f', 0x0, 0x5f, 0x6a, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x6b, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x6c, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x6d, 0x1],
        [0x1, 'f', 0x0, 0x5f, 0x6e, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x6f, 0x1],
        [0x1, 'f', 0x0, 0x5f, 0x70, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x74, 0x1],
        [0x1, 'f', 0x0, 0x5f, 0x76, 0x1],
        [0x1, 'f', 0x0, 0x5f, 0x7a, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x7b, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x7c, 0x1],
        [0x1, 'f', 0x0, 0x5f, 0x7d, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x7e, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x81, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x85, 0x1],
        [0x1, 'f', 0x0, 0x5f, 0x86, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x87, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x8b, 0x1],
        [0x1, 'f', 0x0, 0x5f, 0x8c, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x8d, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x8e, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x92, 0x1],
        [0x1, 'f', 0x0, 0x5f, 0x91, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x94, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x95, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x96, 0x1],
        [0x1, 'f', 0x1, 0x5f, 0x99, 0x1],
        [0x1, 'cs', 0x0, 0x40, 0x9, 0x1],
        [0x1, 'cs', 0x1, 0x40, 0xa, 0x1],
        [0x1, 'cs', 0x2, 0x40, 0x10, 0x1],
        [0x1, 'cs', 0x2, 0x40, 0x13, 0x1],
        [0x1, 'cs', 0x0, 0x40, 0x14, 0x1],
        [0x1, 'cs', 0x1, 0x40, 0x15, 0x1],
        [0x1, 'cs', 0x2, 0x40, 0x16, 0x1],
        [0x1, 'cs', 0x0, 0x40, 0x17, 0x1],
        [0x1, 'cs', 0x2, 0x40, 0x18, 0x1],
        [0x1, 'cs', 0x1, 0x40, 0x1d, 0x1],
        [0x1, 'cs', 0x2, 0x40, 0x1e, 0x1],
        [0x1, 'cs', 0x3, 0x40, 0x1f, 0x1],
        [0x1, 'cs', 0x0, 0x40, 0x20, 0x1],
        [0x1, 'cs', 0x1, 0x40, 0x21, 0x1],
        [0x1, 'cs', 0x2, 0x40, 0x22, 0x1],
        [0x1, 'cs', 0x0, 0x40, 0x23, 0x1],
        [0x1, 'cs', 0x2, 0x40, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0x41, 0x8, 0x1],
        [0x1, 'cs', 0x1, 0x41, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0x41, 0xa, 0x1],
        [0x1, 'cs', 0x3, 0x41, 0xb, 0x1],
        [0x1, 'cs', 0x1, 0x41, 0x10, 0x1],
        [0x1, 'cs', 0x0, 0x40, 0x11, 0x1],
        [0x1, 'cs', 0x3, 0x41, 0x11, 0x1],
        [0x1, 'cs', 0x2, 0x40, 0x12, 0x1],
        [0x1, 'cs', 0x2, 0x41, 0x12, 0x1],
        [0x1, 'cs', 0x0, 0x41, 0x13, 0x1],
        [0x1, 'cs', 0x1, 0x41, 0x14, 0x1],
        [0x1, 'cs', 0x3, 0x41, 0x15, 0x1],
        [0x1, 'cs', 0x2, 0x41, 0x16, 0x1],
        [0x1, 'cs', 0x3, 0x41, 0x17, 0x1],
        [0x1, 'cs', 0x0, 0x41, 0x18, 0x1],
        [0x1, 'cs', 0x2, 0x41, 0x1d, 0x1],
        [0x1, 'cs', 0x3, 0x41, 0x1e, 0x1],
        [0x1, 'cs', 0x0, 0x41, 0x1f, 0x1],
        [0x1, 'cs', 0x1, 0x41, 0x20, 0x1],
        [0x1, 'cs', 0x2, 0x41, 0x21, 0x1],
        [0x1, 'cs', 0x3, 0x41, 0x22, 0x1],
        [0x1, 'cs', 0x2, 0x3f, 0x9, 0x1],
        [0x1, 'cs', 0x0, 0x3e, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0x3d, 0x9, 0x1],
        [0x1, 'cs', 0x0, 0x3c, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0x3b, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0x3a, 0x9, 0x1],
        [0x1, 'cs', 0x0, 0x39, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0x38, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0x37, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0x36, 0x9, 0x1],
        [0x1, 'cs', 0x0, 0x35, 0x9, 0x1],
        [0x1, 'cs', 0x0, 0x33, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0x34, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0x32, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0x30, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0x31, 0x9, 0x1],
        [0x1, 'cs', 0x0, 0x2f, 0x9, 0x1],
        [0x1, 'cs', 0x0, 0x2d, 0x9, 0x1],
        [0x1, 'cs', 0x0, 0x2b, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0x2e, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0x2c, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0x2a, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0x29, 0x9, 0x1],
        [0x1, 'cs', 0x0, 0x28, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0x27, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0x26, 0x9, 0x1],
        [0x1, 'cs', 0x0, 0x25, 0x9, 0x1],
        [0x1, 'cs', 0x0, 0x3f, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0x41, 0x7, 0x1],
        [0x1, 'cs', 0x3, 0x40, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0x3e, 0x8, 0x1],
        [0x1, 'cs', 0x3, 0x3d, 0x8, 0x1],
        [0x1, 'cs', 0x1, 0x3e, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0x3f, 0x7, 0x1],
        [0x1, 'cs', 0x0, 0x40, 0x6, 0x1],
        [0x1, 'cs', 0x3, 0x41, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0x3f, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0x3e, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0x3d, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0x3c, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0x3b, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0x3d, 0x7, 0x1],
        [0x1, 'cs', 0x0, 0x3c, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0x3c, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0x3b, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0x3b, 0x8, 0x1],
        [0x1, 'cs', 0x1, 0x3a, 0x8, 0x1],
        [0x1, 'cs', 0x1, 0x39, 0x6, 0x1],
        [0x1, 'cs', 0x1, 0x37, 0x7, 0x1],
        [0x1, 'cs', 0x0, 0x38, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0x3a, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0x3a, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0x39, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0x38, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0x37, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0x39, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0x38, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0x37, 0x8, 0x1],
        [0x1, 'cs', 0x0, 0x36, 0x8, 0x1],
        [0x1, 'cs', 0x0, 0x32, 0x7, 0x1],
        [0x1, 'cs', 0x0, 0x35, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0x36, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0x36, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0x35, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0x34, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0x34, 0x6, 0x1],
        [0x1, 'cs', 0x1, 0x34, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0x35, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0x33, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0x33, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0x33, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0x32, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0x32, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0x31, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0x31, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0x31, 0x6, 0x1],
        [0x1, 'cs', 0x0, 0x2e, 0x7, 0x1],
        [0x1, 'cs', 0x1, 0x30, 0x8, 0x1],
        [0x1, 'cs', 0x1, 0x2c, 0x7, 0x1],
        [0x1, 'cs', 0x1, 0x29, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0x30, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0x30, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0x2f, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0x2f, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0x2f, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0x2e, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0x2d, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0x2d, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0x2d, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0x2e, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0x2c, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0x2c, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0x2b, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0x2b, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0x2b, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0x2a, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0x2a, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0x2a, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0x29, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0x29, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0x28, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0x28, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0x28, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0x27, 0x8, 0x1],
        [0x1, 'cs', 0x0, 0x27, 0x7, 0x1],
        [0x1, 'cs', 0x1, 0x26, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0x27, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0x26, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0x25, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0x26, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0x25, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0x25, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0x25, 0xa, 0x1],
        [0x1, 'cs', 0x2, 0x26, 0xa, 0x1],
        [0x1, 'cs', 0x0, 0x26, 0xb, 0x1],
        [0x1, 'cs', 0x0, 0x26, 0x11, 0x1],
        [0x1, 'cs', 0x1, 0x25, 0x12, 0x1],
        [0x1, 'cs', 0x0, 0x26, 0x13, 0x1],
        [0x1, 'cs', 0x2, 0x25, 0xb, 0x1],
        [0x1, 'cs', 0x2, 0x25, 0x10, 0x1],
        [0x1, 'cs', 0x2, 0x25, 0x11, 0x1],
        [0x1, 'cs', 0x2, 0x26, 0x12, 0x1],
        [0x1, 'cs', 0x2, 0x25, 0x13, 0x1],
        [0x1, 'cs', 0x3, 0x26, 0x10, 0x1],
        [0x1, 'cs', 0x0, 0x25, 0x15, 0x1],
        [0x1, 'cs', 0x0, 0x26, 0x16, 0x1],
        [0x1, 'cs', 0x0, 0x26, 0x18, 0x1],
        [0x1, 'cs', 0x2, 0x25, 0x14, 0x1],
        [0x1, 'cs', 0x2, 0x26, 0x14, 0x1],
        [0x1, 'cs', 0x2, 0x26, 0x15, 0x1],
        [0x1, 'cs', 0x1, 0x25, 0x17, 0x1],
        [0x1, 'cs', 0x3, 0x25, 0x16, 0x1],
        [0x1, 'cs', 0x3, 0x26, 0x17, 0x1],
        [0x1, 'cs', 0x2, 0x25, 0x18, 0x1],
        [0x1, 'cs', 0x0, 0x26, 0x1e, 0x1],
        [0x1, 'cs', 0x0, 0x26, 0x20, 0x1],
        [0x1, 'cs', 0x0, 0x25, 0x1f, 0x1],
        [0x1, 'cs', 0x1, 0x26, 0x22, 0x1],
        [0x1, 'cs', 0x1, 0x25, 0x1d, 0x1],
        [0x1, 'cs', 0x2, 0x26, 0x1d, 0x1],
        [0x1, 'cs', 0x2, 0x25, 0x1e, 0x1],
        [0x1, 'cs', 0x2, 0x26, 0x1f, 0x1],
        [0x1, 'cs', 0x2, 0x25, 0x20, 0x1],
        [0x1, 'cs', 0x3, 0x26, 0x21, 0x1],
        [0x1, 'cs', 0x3, 0x26, 0x23, 0x1],
        [0x1, 'cs', 0x2, 0x25, 0x21, 0x1],
        [0x1, 'cs', 0x2, 0x24, 0x8, 0x1],
        [0x1, 'cs', 0x0, 0x24, 0xb, 0x1],
        [0x1, 'cs', 0x0, 0x23, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0x24, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0x24, 0xa, 0x1],
        [0x1, 'cs', 0x2, 0x23, 0xa, 0x1],
        [0x1, 'cs', 0x1, 0x21, 0x8, 0x1],
        [0x1, 'cs', 0x3, 0x22, 0x9, 0x1],
        [0x1, 'cs', 0x3, 0x23, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0x22, 0x8, 0x1],
        [0x1, 'cs', 0x0, 0x24, 0x7, 0x1],
        [0x1, 'cs', 0x1, 0x22, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0x23, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0x23, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0x24, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0x44, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0x42, 0xa, 0x1],
        [0x1, 'cs', 0x3, 0x42, 0x9, 0x1],
        [0x1, 'cs', 0x0, 0x43, 0x9, 0x1],
        [0x1, 'cs', 0x0, 0x42, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0x43, 0x8, 0x1],
        [0x1, 'cs', 0x1, 0x44, 0x8, 0x1],
        [0x1, 'cs', 0x1, 0x42, 0xb, 0x1],
        [0x1, 'cs', 0x2, 0x43, 0xa, 0x1],
        [0x1, 'cs', 0x0, 0x42, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0x42, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0x43, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0x45, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0x3f, 0x20, 0x1],
        [0x1, 'cs', 0x2, 0x3e, 0x22, 0x1],
        [0x1, 'cs', 0x2, 0x3c, 0x23, 0x1],
        [0x1, 'cs', 0x3, 0x3b, 0x23, 0x1],
        [0x1, 'cs', 0x0, 0x3d, 0x23, 0x1],
        [0x1, 'cs', 0x0, 0x3f, 0x22, 0x1],
        [0x1, 'cs', 0x2, 0x3f, 0x21, 0x1],
        [0x1, 'cs', 0x2, 0x3f, 0x23, 0x1],
        [0x1, 'cs', 0x2, 0x3e, 0x23, 0x1],
        [0x1, 'cs', 0x2, 0x3a, 0x24, 0x1],
        [0x1, 'cs', 0x1, 0x3b, 0x24, 0x1],
        [0x1, 'cs', 0x1, 0x3e, 0x24, 0x1],
        [0x1, 'cs', 0x2, 0x3c, 0x24, 0x1],
        [0x1, 'cs', 0x2, 0x3d, 0x22, 0x1],
        [0x1, 'cs', 0x3, 0x3e, 0x21, 0x1],
        [0x1, 'cs', 0x3, 0x3f, 0x24, 0x1],
        [0x1, 'cs', 0x3, 0x3d, 0x24, 0x1],
        [0x1, 'cs', 0x0, 0x2a, 0x24, 0x1],
        [0x1, 'cs', 0x1, 0x27, 0x24, 0x1],
        [0x1, 'cs', 0x2, 0x29, 0x24, 0x1],
        [0x1, 'cs', 0x3, 0x27, 0x23, 0x1],
        [0x1, 'cs', 0x3, 0x28, 0x24, 0x1],
        [0x1, 'cs', 0x3, 0x2b, 0x24, 0x1],
        [0x1, 'cs', 0x1, 0x28, 0x23, 0x1],
        [0x1, 'cs', 0x2, 0x29, 0x23, 0x1],
        [0x1, 'cs', 0x2, 0x28, 0x22, 0x1],
        [0x1, 'cs', 0x2, 0x27, 0x22, 0x1],
        [0x1, 'cs', 0x2, 0x27, 0x21, 0x1],
        [0x1, 'cs', 0x2, 0x27, 0x20, 0x1],
        [0x1, 'cs', 0x0, 0x28, 0x21, 0x1],
        [0x1, 'cs', 0x2, 0x29, 0x22, 0x1],
        [0x1, 'cs', 0x1, 0x2c, 0x24, 0x1],
        [0x1, 'cs', 0x3, 0x2b, 0x23, 0x1],
        [0x1, 'cs', 0x2, 0x2a, 0x23, 0x1],
        [0x1, 'cs', 0x0, 0x25, 0x22, 0x1],
        [0x1, 'cs', 0x3, 0x3b, 0x1e, 0x1],
        [0x1, 'cs', 0x0, 0x3c, 0x1d, 0x1],
        [0x1, 'cs', 0x2, 0x3c, 0x1c, 0x1],
        [0x1, 'cs', 0x3, 0x3c, 0x1b, 0x1],
        [0x1, 'cs', 0x0, 0x3c, 0x1a, 0x1],
        [0x1, 'cs', 0x2, 0x36, 0x19, 0x1],
        [0x1, 'cs', 0x2, 0x30, 0x19, 0x1],
        [0x1, 'cs', 0x2, 0x2a, 0x1a, 0x1],
        [0x1, 'cs', 0x0, 0x37, 0x19, 0x1],
        [0x1, 'cs', 0x2, 0x3b, 0x1a, 0x1],
        [0x1, 'cs', 0x0, 0x2b, 0x1a, 0x1],
        [0x1, 'cs', 0x1, 0x2a, 0x1b, 0x1],
        [0x1, 'cs', 0x2, 0x2a, 0x1c, 0x1],
        [0x1, 'cs', 0x2, 0x2b, 0x1e, 0x1],
        [0x1, 'cs', 0x0, 0x2a, 0x1d, 0x1],
        [0x1, 'cs', 0x0, 0x36, 0x18, 0x1],
        [0x1, 'cs', 0x0, 0x30, 0x18, 0x1],
        [0x1, 'cs', 0x2, 0x36, 0x17, 0x1],
        [0x1, 'cs', 0x2, 0x30, 0x17, 0x1],
        [0x1, 'cs', 0x2, 0x3f, 0x16, 0x1],
        [0x1, 'cs', 0x2, 0x3f, 0x15, 0x1],
        [0x1, 'cs', 0x2, 0x27, 0x15, 0x1],
        [0x1, 'cs', 0x3, 0x39, 0x12, 0x1],
        [0x1, 'cs', 0x2, 0x38, 0x12, 0x1],
        [0x1, 'cs', 0x3, 0x33, 0x15, 0x1],
        [0x1, 'cs', 0x0, 0x33, 0x14, 0x1],
        [0x1, 'cs', 0x2, 0x33, 0x13, 0x1],
        [0x1, 'cs', 0x3, 0x33, 0x12, 0x1],
        [0x1, 'cs', 0x2, 0x3f, 0x10, 0x1],
        [0x1, 'cs', 0x2, 0x3f, 0xa, 0x1],
        [0x1, 'cs', 0x2, 0x38, 0xd, 0x1],
        [0x1, 'cs', 0x3, 0x39, 0xd, 0x1],
        [0x1, 'cs', 0x1, 0x2d, 0x12, 0x1],
        [0x1, 'cs', 0x2, 0x2f, 0x12, 0x1],
        [0x1, 'cs', 0x2, 0x2e, 0x12, 0x1],
        [0x1, 'cs', 0x0, 0x2e, 0xd, 0x1],
        [0x1, 'cs', 0x2, 0x2d, 0xd, 0x1],
        [0x1, 'cs', 0x2, 0x27, 0xa, 0x1],
        [0x1, 'cs', 0x2, 0x27, 0x10, 0x1],
        [0x1, 'cs', 0x2, 0x2f, 0x11, 0x1],
        [0x1, 'a', 0x0, 0x33, 0xf, 0x1],
        [0x1, 'a', 0x1, 0x35, 0xe, 0x1],
        [0x1, 'a', 0x1, 0x31, 0xe, 0x1],
        [0x1, 'de', 0x8, 0x37, 0xf, 0x0],
        [0x1, 'de', 0x9, 0x30, 0x1c, 0x0],
        [0x1, 'de', 0xa, 0x3a, 0x1a, 0x0],
        [0x1, 'de', 0xb, 0x3b, 0x1d, 0x0],
        [0x1, 'de', 0xb, 0x37, 0x22, 0x0],
        [0x1, 'de', 0xa, 0x30, 0x21, 0x0],
        [0x1, 'de', 0x9, 0x29, 0x20, 0x0],
        [0x1, 'de', 0x9, 0x38, 0x18, 0x0],
        [0x1, 'de', 0x9, 0x3e, 0x10, 0x0],
        [0x1, 'de', 0x9, 0x2d, 0xb, 0x0],
        [0x1, 'de', 0x9, 0x2c, 0x11, 0x0],
        [0x1, 'de', 0xa, 0x2c, 0xd, 0x0],
        [0x1, 'de', 0xa, 0x3a, 0xd, 0x0],
        [0x1, 'de', 0xa, 0x3f, 0x1f, 0x0],
        [0x1, 'de', 0x8, 0x3c, 0x1e, 0x0],
        [0x1, 'de', 0x8, 0x2b, 0x1a, 0x0],
        [0x1, 'de', 0xa, 0x2b, 0x1d, 0x0],
        [0x1, 'de', 0xa, 0x35, 0x1d, 0x0],
        [0x1, 'de', 0xa, 0x35, 0x18, 0x0],
        [0x1, 'de', 0x9, 0x35, 0x13, 0x0],
        [0x1, 'de', 0xb, 0x31, 0x13, 0x0],
        [0x1, 'de', 0xa, 0x27, 0x1a, 0x0],
        [0x1, 'de', 0x9, 0x2e, 0x18, 0x0],
        [0x1, 'de', 0x9, 0x3e, 0xa, 0x0],
        [0x1, 'de', 0x8, 0x28, 0xe, 0x0],
        [0x1, 'de', 0x20, 0x37, 0x23, 0x0],
        [0x1, 'de', 0x20, 0x3c, 0x21, 0x0],
        [0x1, 'de', 0x20, 0x3f, 0x1c, 0x0],
        [0x1, 'de', 0x20, 0x3f, 0x18, 0x0],
        [0x1, 'de', 0x20, 0x3a, 0x16, 0x0],
        [0x1, 'de', 0x20, 0x3b, 0x11, 0x0],
        [0x1, 'de', 0x20, 0x3f, 0xd, 0x0],
        [0x1, 'de', 0x20, 0x3b, 0xa, 0x0],
        [0x1, 'de', 0x20, 0x38, 0xc, 0x0],
        [0x1, 'de', 0x20, 0x34, 0x11, 0x0],
        [0x1, 'de', 0x20, 0x33, 0xe, 0x0],
        [0x1, 'de', 0x20, 0x27, 0xc, 0x0],
        [0x1, 'de', 0x20, 0x27, 0x12, 0x0],
        [0x1, 'de', 0x20, 0x29, 0x19, 0x0],
        [0x1, 'de', 0x20, 0x27, 0x1e, 0x0],
        [0x1, 'de', 0x20, 0x32, 0x1d, 0x0],
        [0x1, 'de', 0x20, 0x2b, 0x22, 0x0],
        [0x1, 'de', 0x20, 0x2f, 0x22, 0x0],
        [0x1, 'de', 0x1f, 0x36, 0x21, 0x0],
        [0x1, 'de', 0x1f, 0x3b, 0x18, 0x0],
        [0x1, 'de', 0x1f, 0x3f, 0x13, 0x0],
        [0x1, 'de', 0x1f, 0x2f, 0xf, 0x0],
        [0x1, 'de', 0x1f, 0x2b, 0x11, 0x0],
        [0x1, 'de', 0x1f, 0x27, 0x1b, 0x0],
        [0x1, 'de', 0x1f, 0x30, 0x1b, 0x0],
        [0x1, 'de', 0x1f, 0x39, 0x1b, 0x0],
        [0x1, 'de', 0x20, 0x2c, 0x1b, 0x0],
        [0x1, 'd', 0x0, 0xc, 0xd, 0x1],
        [0x1, 'd', 0x0, 0x59, 0xd, 0x1],
        [0x1, 'd', 0x1, 0x5b, 0x15, 0x1],
        [0x1, 'd', 0x1, 0xa, 0x16, 0x1],
        [0x1, 'f', 0x2, 0x59, 0x12, 0x1],
        [0x1, 'f', 0x0, 0x58, 0x13, 0x1],
        [0x1, 'g', 0x1, 0x55, 0x16, 0x1],
        [0x1, 's', 0x1, 0x5a, 0x1d, 0x1],
        [0x1, 's', 0x1, 0x5c, 0xf, 0x1],
        [0x1, 's', 0x0, 0x5b, 0x1f, 0x1],
        [0x1, 's', 0x2, 0x5a, 0x26, 0x1],
        [0x1, 's', 0x0, 0x5b, 0x2a, 0x1],
        [0x1, 's', 0x0, 0x5a, 0x31, 0x1],
        [0x1, 'f', 0x1, 0x56, 0x2b, 0x1],
        [0x1, 'f', 0x0, 0x51, 0x2d, 0x1],
        [0x1, 'f', 0x2, 0x42, 0x2c, 0x1],
        [0x1, 'f', 0x2, 0x37, 0x31, 0x1],
        [0x1, 'f', 0x1, 0x36, 0x32, 0x1],
        [0x1, 'f', 0x2, 0x2b, 0x2d, 0x1],
        [0x1, 'f', 0x2, 0x1f, 0x30, 0x1],
        [0x1, 'f', 0x1, 0x1b, 0x27, 0x1],
        [0x1, 'f', 0x1, 0x50, 0x2e, 0x1],
        [0x1, 'f', 0x1, 0x45, 0x30, 0x1],
        [0x1, 'g', 0x0, 0x50, 0x28, 0x1],
        [0x1, 'g', 0x2, 0x51, 0x28, 0x1],
        [0x1, 's', 0x2, 0x4d, 0x27, 0x1],
        [0x1, 's', 0x0, 0x44, 0x2b, 0x1],
        [0x1, 's', 0x2, 0x39, 0x29, 0x1],
        [0x1, 's', 0x1, 0x38, 0x2a, 0x1],
        [0x1, 's', 0x1, 0x28, 0x29, 0x1],
        [0x1, 's', 0x2, 0x30, 0x30, 0x1],
        [0x1, 'f', 0x2, 0x11, 0xc, 0x1],
        [0x1, 'f', 0x0, 0xd, 0x1f, 0x1],
        [0x1, 'f', 0x1, 0xe, 0x20, 0x1],
        [0x1, 's', 0x0, 0xf, 0x1b, 0x1],
        [0x1, 's', 0x0, 0xd, 0x27, 0x1],
        [0x1, 'f', 0x2, 0xb, 0x11, 0x1],
        [0x1, 'f', 0x1, 0xc, 0x12, 0x1],
        [0x1, 'g', 0x2, 0xc, 0x19, 0x1],
        [0x1, 'f', 0x0, 0x10, 0x2d, 0x1],
        [0x1, 'f', 0x1, 0x11, 0x2e, 0x1],
        [0x1, 's', 0x1, 0x4a, 0x30, 0x1],
        [0x1, 's', 0x1, 0x14, 0x2f, 0x1],
        [0x1, 'g', 0x0, 0x3a, 0x3b, 0x1],
        [0x1, 'g', 0x0, 0x2e, 0x48, 0x1],
        [0x1, 'g', 0x0, 0x45, 0x4f, 0x1],
        [0x1, 'g', 0x0, 0x48, 0x4a, 0x1],
        [0x1, 'g', 0x0, 0x1a, 0x58, 0x1],
        [0x1, 'g', 0x0, 0x14, 0x4a, 0x1],
        [0x1, 'g', 0x0, 0x1c, 0x43, 0x1],
        [0x1, 'g', 0x0, 0x31, 0x56, 0x1],
        [0x1, 'g', 0x0, 0x4d, 0x5a, 0x1],
        [0x1, 'g', 0x0, 0x57, 0x48, 0x1],
        [0x1, 'g', 0x0, 0xe, 0x55, 0x1],
        [0x1, 'g', 0x1, 0x55, 0x61, 0x1],
        [0x1, 'g', 0x1, 0x44, 0x68, 0x1],
        [0x1, 'g', 0x1, 0x3f, 0x5b, 0x1],
        [0x1, 'g', 0x1, 0x27, 0x5a, 0x1],
        [0x1, 'g', 0x1, 0x22, 0x63, 0x1],
        [0x1, 'g', 0x1, 0x11, 0x67, 0x1],
        [0x1, 'g', 0x2, 0x4d, 0x3c, 0x1],
        [0x1, 'g', 0x2, 0x13, 0x38, 0x1],
        [0x1, 'g', 0x2, 0x27, 0x3c, 0x1],
        [0x1, 'g', 0x2, 0x57, 0x39, 0x1],
        [0x1, 'f', 0x0, 0x9, 0x3e, 0x1],
        [0x1, 'f', 0x0, 0xc, 0x51, 0x1],
        [0x1, 'f', 0x0, 0x1a, 0x3b, 0x1],
        [0x1, 'f', 0x0, 0x23, 0x35, 0x1],
        [0x1, 'f', 0x0, 0x2c, 0x3a, 0x1],
        [0x1, 'f', 0x0, 0x58, 0x3e, 0x1],
        [0x1, 'f', 0x0, 0x5b, 0x52, 0x1],
        [0x1, 'f', 0x0, 0x54, 0x55, 0x1],
        [0x1, 'f', 0x0, 0x4f, 0x45, 0x1],
        [0x1, 'f', 0x0, 0x40, 0x47, 0x1],
        [0x1, 'f', 0x0, 0x3e, 0x53, 0x1],
        [0x1, 'f', 0x0, 0x22, 0x51, 0x1],
        [0x1, 'f', 0x0, 0x27, 0x47, 0x1],
        [0x1, 'f', 0x0, 0x36, 0x5e, 0x1],
        [0x1, 'f', 0x1, 0x51, 0x46, 0x1],
        [0x1, 'f', 0x1, 0x5b, 0x48, 0x1],
        [0x1, 'f', 0x1, 0x8, 0x5b, 0x1],
        [0x1, 'f', 0x1, 0xe, 0x51, 0x1],
        [0x1, 'f', 0x1, 0x1d, 0x4f, 0x1],
        [0x1, 'f', 0x1, 0xd, 0x41, 0x1],
        [0x1, 'f', 0x1, 0x2e, 0x61, 0x1],
        [0x1, 'f', 0x1, 0x2b, 0x49, 0x1],
        [0x1, 'f', 0x1, 0x3c, 0x45, 0x1],
        [0x1, 'f', 0x1, 0x46, 0x60, 0x1],
        [0x1, 'f', 0x1, 0x3a, 0x54, 0x1],
        [0x1, 's', 0x1, 0x38, 0x4c, 0x1],
        [0x1, 's', 0x1, 0x55, 0x4a, 0x1],
        [0x1, 's', 0x0, 0x48, 0x47, 0x1],
        [0x1, 's', 0x0, 0x29, 0x3e, 0x1],
        [0x1, 's', 0x0, 0x3c, 0x3d, 0x1],
        [0x1, 's', 0x0, 0x14, 0x42, 0x1],
        [0x1, 's', 0x0, 0x2f, 0x53, 0x1],
        [0x1, 's', 0x0, 0x1d, 0x56, 0x1],
        [0x1, 's', 0x0, 0x4e, 0x5c, 0x1],
        [0x1, 's', 0x0, 0x3e, 0x66, 0x1],
        [0x1, 's', 0x0, 0x12, 0x5f, 0x1],
        [0x1, 's', 0x2, 0x40, 0x65, 0x1],
        [0x1, 's', 0x2, 0x4e, 0x54, 0x1],
        [0x1, 's', 0x2, 0x31, 0x53, 0x1],
        [0x1, 's', 0x2, 0xf, 0x4c, 0x1],
        [0x1, 's', 0x2, 0x15, 0x54, 0x1],
        [0x1, 'f', 0x1, 0x1a, 0x5e, 0x1],
        [0x1, 'f', 0x2, 0x17, 0x60, 0x1],
        [0x1, 'f', 0x2, 0x19, 0x48, 0x1],
        [0x1, 'f', 0x2, 0x55, 0x4d, 0x1],
        [0x1, 'f', 0x2, 0x4f, 0x5f, 0x1],
        [0x1, 'f', 0x2, 0x33, 0x41, 0x1],
        [0x1, 'f', 0x2, 0x45, 0x3c, 0x1],
        [0x1, 'f', 0x1, 0x19, 0x69, 0x1],
        [0x1, 's', 0x1, 0x12, 0x44, 0x1],
        [0x1, 's', 0x0, 0x37, 0x4c, 0x1],
        [0x1, 's', 0x0, 0x4a, 0x3b, 0x1],
        [0x1, 'f', 0x1, 0x2e, 0x8e, 0x1],
        [0x1, 'f', 0x1, 0x13, 0x8c, 0x1],
        [0x1, 'f', 0x1, 0x4d, 0x89, 0x1],
        [0x1, 'f', 0x0, 0x4b, 0x89, 0x1],
        [0x1, 'f', 0x0, 0x37, 0x8a, 0x1],
        [0x1, 'f', 0x0, 0x21, 0x7f, 0x1],
        [0x1, 'f', 0x0, 0x4c, 0x79, 0x1],
        [0x1, 'f', 0x0, 0x37, 0x79, 0x1],
        [0x1, 'f', 0x0, 0xd, 0x7b, 0x1],
        [0x1, 'f', 0x0, 0x12, 0x8d, 0x1],
        [0x1, 'f', 0x0, 0x28, 0x89, 0x1],
        [0x1, 'f', 0x2, 0x4c, 0x8e, 0x1],
        [0x1, 'f', 0x2, 0x39, 0x8c, 0x1],
        [0x1, 'f', 0x2, 0x27, 0x8a, 0x1],
        [0x1, 'f', 0x2, 0x10, 0x8f, 0x1],
        [0x1, 'f', 0x2, 0x1d, 0x83, 0x1],
        [0x1, 'f', 0x0, 0x46, 0x96, 0x1],
        [0x1, 'f', 0x0, 0x1c, 0x92, 0x1],
        [0x1, 'f', 0x0, 0xc, 0x84, 0x1],
        [0x1, 'f', 0x0, 0x5a, 0x81, 0x1],
        [0x1, 'f', 0x1, 0x57, 0x83, 0x1],
        [0x1, 'f', 0x0, 0x5b, 0x8f, 0x1],
        [0x1, 'f', 0x2, 0x57, 0x91, 0x1],
        [0x1, 'f', 0x1, 0x59, 0x8d, 0x1],
        [0x1, 'f', 0x1, 0x3f, 0x82, 0x1],
        [0x1, 'f', 0x1, 0x4b, 0x7a, 0x1],
        [0x1, 'f', 0x1, 0x34, 0x7c, 0x1],
        [0x1, 'f', 0x1, 0x22, 0x7f, 0x1],
        [0x1, 'f', 0x1, 0xe, 0x7b, 0x1],
        [0x1, 'f', 0x1, 0x18, 0x7a, 0x1],
        [0x1, 'f', 0x0, 0x53, 0x6c, 0x1],
        [0x1, 'f', 0x0, 0x59, 0x76, 0x1],
        [0x1, 'f', 0x0, 0x38, 0x6b, 0x1],
        [0x1, 'f', 0x0, 0x26, 0x71, 0x1],
        [0x1, 'f', 0x0, 0x10, 0x6e, 0x1],
        [0x1, 'f', 0x1, 0x50, 0x69, 0x1],
        [0x1, 'f', 0x1, 0x52, 0x6d, 0x1],
        [0x1, 'f', 0x1, 0x57, 0x76, 0x1],
        [0x1, 'f', 0x1, 0x3b, 0x6e, 0x1],
        [0x1, 'f', 0x1, 0x1d, 0x6f, 0x1],
        [0x1, 'f', 0x2, 0x1c, 0x70, 0x1],
        [0x1, 'f', 0x2, 0x46, 0x70, 0x1],
        [0x1, 'f', 0x2, 0x2a, 0x6f, 0x1],
        [0x1, 's', 0x0, 0x44, 0x9d, 0x1],
        [0x1, 's', 0x0, 0x51, 0x9e, 0x1],
        [0x1, 's', 0x0, 0x19, 0xac, 0x1],
        [0x1, 's', 0x0, 0x16, 0xa1, 0x1],
        [0x1, 's', 0x0, 0x23, 0x98, 0x1],
        [0x1, 's', 0x0, 0x42, 0x90, 0x1],
        [0x1, 's', 0x0, 0x57, 0x91, 0x1],
        [0x1, 's', 0x0, 0x56, 0x91, 0x1],
        [0x1, 's', 0x0, 0x54, 0x87, 0x1],
        [0x1, 's', 0x0, 0x45, 0x85, 0x1],
        [0x1, 's', 0x0, 0x54, 0x7a, 0x1],
        [0x1, 's', 0x0, 0x44, 0x79, 0x1],
        [0x1, 's', 0x0, 0x30, 0x7c, 0x1],
        [0x1, 's', 0x0, 0x1a, 0x81, 0x1],
        [0x1, 's', 0x0, 0x9, 0x7f, 0x1],
        [0x1, 's', 0x0, 0xb, 0x90, 0x1],
        [0x1, 's', 0x0, 0x9, 0x6d, 0x1],
        [0x1, 's', 0x0, 0x23, 0x65, 0x1],
        [0x1, 's', 0x0, 0x2f, 0x6d, 0x1],
        [0x1, 's', 0x0, 0x3a, 0x6f, 0x1],
        [0x1, 's', 0x0, 0x54, 0x6e, 0x1],
        [0x1, 's', 0x0, 0x1c, 0x72, 0x1],
        [0x1, 's', 0x1, 0x1e, 0x74, 0x1],
        [0x1, 's', 0x1, 0x2e, 0x70, 0x1],
        [0x1, 's', 0x1, 0x51, 0x6f, 0x1],
        [0x1, 's', 0x1, 0x46, 0x7b, 0x1],
        [0x1, 's', 0x1, 0x31, 0x7f, 0x1],
        [0x1, 's', 0x1, 0x42, 0x86, 0x1],
        [0x1, 's', 0x1, 0x43, 0x90, 0x1],
        [0x1, 's', 0x1, 0x26, 0x98, 0x1],
        [0x1, 's', 0x1, 0x15, 0xa4, 0x1],
        [0x1, 's', 0x1, 0xc, 0x93, 0x1],
        [0x1, 's', 0x1, 0x18, 0x82, 0x1],
        [0x1, 's', 0x1, 0xc, 0x7d, 0x1],
        [0x1, 's', 0x1, 0x41, 0x9e, 0x1],
        [0x1, 's', 0x1, 0x53, 0xa7, 0x1],
        [0x1, 's', 0x1, 0x41, 0xa7, 0x1],
        [0x1, 's', 0x1, 0x2f, 0xa4, 0x1],
        [0x1, 's', 0x1, 0x38, 0xa8, 0x1],
        [0x1, 's', 0x2, 0x36, 0xa9, 0x1],
        [0x1, 's', 0x2, 0x58, 0xaa, 0x1],
        [0x1, 's', 0x2, 0x5b, 0xa2, 0x1],
        [0x1, 's', 0x2, 0x4f, 0x95, 0x1],
        [0x1, 's', 0x2, 0x4b, 0x90, 0x1],
        [0x1, 's', 0x2, 0x39, 0x96, 0x1],
        [0x1, 's', 0x2, 0x2f, 0x8f, 0x1],
        [0x1, 's', 0x2, 0x1f, 0x91, 0x1],
        [0x1, 's', 0x2, 0x24, 0x8a, 0x1],
        [0x1, 's', 0x2, 0xa, 0xa3, 0x1],
        [0x1, 's', 0x2, 0x16, 0x8e, 0x1],
        [0x1, 'g', 0x2, 0x4e, 0x84, 0x1],
        [0x1, 'g', 0x1, 0x30, 0x87, 0x1],
        [0x1, 'g', 0x2, 0x10, 0x88, 0x1],
        [0x1, 'g', 0x0, 0x3e, 0x5c, 0x1],
        [0x1, 'g', 0x2, 0x46, 0x50, 0x1],
        [0x1, 'g', 0x2, 0xf, 0x56, 0x1],
        [0x1, 'g', 0x2, 0x2f, 0x4b, 0x1],
        [0x1, 'g', 0x2, 0x24, 0x59, 0x1],
        [0x1, 'g', 0x2, 0x50, 0x5a, 0x1],
        [0x1, 'f', 0x1, 0x27, 0x76, 0x1],
        [0x1, 'd', 0x2, 0x54, 0x36, 0x1],
        [0x1, 'd', 0x2, 0x10, 0x36, 0x1],
        [0x1, 'de', 0x7, 0xd, 0xd, 0x0],
        [0x1, 'de', 0x5, 0x10, 0x1c, 0x0],
        [0x1, 'de', 0x5, 0x9, 0x19, 0x0],
        [0x1, 'de', 0x5, 0x22, 0x29, 0x0],
        [0x1, 'de', 0x4, 0x1c, 0x28, 0x0],
        [0x1, 'de', 0x6, 0x1f, 0x2f, 0x0],
        [0x1, 'de', 0x6, 0xc, 0x27, 0x0],
        [0x1, 'de', 0x4, 0x10, 0x2f, 0x0],
        [0x1, 'de', 0x4, 0x7, 0x2e, 0x0],
        [0x1, 'de', 0x6, 0x7, 0x21, 0x0],
        [0x1, 'de', 0x6, 0x28, 0x2a, 0x0],
        [0x1, 'de', 0x7, 0x14, 0x30, 0x0],
        [0x1, 'de', 0x7, 0x1d, 0x3b, 0x0],
        [0x1, 'de', 0x6, 0x1b, 0x3a, 0x0],
        [0x1, 'de', 0x6, 0xf, 0x36, 0x0],
        [0x1, 'de', 0x5, 0xc, 0x42, 0x0],
        [0x1, 'de', 0x5, 0x25, 0x35, 0x0],
        [0x1, 'de', 0x4, 0xa, 0x3f, 0x0],
        [0x1, 'de', 0x7, 0x31, 0x30, 0x0],
        [0x1, 'de', 0x7, 0x25, 0x3f, 0x0],
        [0x1, 'de', 0x6, 0x21, 0x44, 0x0],
        [0x1, 'de', 0x6, 0x38, 0x34, 0x0],
        [0x1, 'de', 0x5, 0x3b, 0x3a, 0x0],
        [0x1, 'de', 0x6, 0x30, 0x3a, 0x0],
        [0x1, 'de', 0x4, 0x35, 0x3f, 0x0],
        [0x1, 'de', 0x4, 0x43, 0x2c, 0x0],
        [0x1, 'de', 0x5, 0x46, 0x31, 0x0],
        [0x1, 'de', 0x5, 0x52, 0x37, 0x0],
        [0x1, 'de', 0x5, 0x4f, 0x29, 0x0],
        [0x1, 'de', 0x5, 0x5b, 0x1d, 0x0],
        [0x1, 'de', 0x7, 0x5b, 0x2b, 0x0],
        [0x1, 'de', 0x6, 0x55, 0x2c, 0x0],
        [0x1, 'de', 0x6, 0x4a, 0x3c, 0x0],
        [0x1, 'de', 0x6, 0x5a, 0x8, 0x0],
        [0x1, 'de', 0x5, 0x5b, 0xf, 0x0],
        [0x1, 'de', 0x4, 0x57, 0x14, 0x0],
        [0x1, 'de', 0x7, 0x5d, 0xb, 0x0],
        [0x1, 'de', 0x6, 0x5b, 0x15, 0x0],
        [0x1, 'de', 0x6, 0x55, 0x23, 0x0],
        [0x1, 'de', 0x5, 0x5d, 0x3a, 0x0],
        [0x1, 'de', 0x5, 0x57, 0x3f, 0x0],
        [0x1, 'de', 0x7, 0x4d, 0x3e, 0x0],
        [0x1, 'de', 0x6, 0x44, 0x3d, 0x0],
        [0x1, 'de', 0x5, 0x5a, 0x49, 0x0],
        [0x1, 'de', 0x4, 0x57, 0x47, 0x0],
        [0x1, 'de', 0x7, 0x50, 0x47, 0x0],
        [0x1, 'de', 0x7, 0x53, 0x4d, 0x0],
        [0x1, 'de', 0x7, 0x59, 0x53, 0x0],
        [0x1, 'de', 0x4, 0x47, 0x50, 0x0],
        [0x1, 'de', 0x4, 0x47, 0x46, 0x0],
        [0x1, 'de', 0x5, 0x3f, 0x48, 0x0],
        [0x1, 'de', 0x4, 0x36, 0x4b, 0x0],
        [0x1, 'de', 0x5, 0x2c, 0x53, 0x0],
        [0x1, 'de', 0x5, 0x2a, 0x4a, 0x0],
        [0x1, 'de', 0x5, 0xf, 0x51, 0x0],
        [0x1, 'de', 0x4, 0x1d, 0x50, 0x0],
        [0x1, 'de', 0x4, 0x25, 0x5a, 0x0],
        [0x1, 'de', 0x4, 0x7, 0x4b, 0x0],
        [0x1, 'de', 0x6, 0x16, 0x4a, 0x0],
        [0x1, 'de', 0x6, 0x2b, 0x5f, 0x0],
        [0x1, 'de', 0x6, 0x39, 0x55, 0x0],
        [0x1, 'de', 0x6, 0x13, 0x5e, 0x0],
        [0x1, 'de', 0x6, 0x9, 0x5c, 0x0],
        [0x1, 'de', 0x5, 0x1a, 0x59, 0x0],
        [0x1, 'de', 0x5, 0x1f, 0x70, 0x0],
        [0x1, 'de', 0x5, 0x36, 0x6c, 0x0],
        [0x1, 'de', 0x5, 0x37, 0x5f, 0x0],
        [0x1, 'de', 0x5, 0x23, 0x68, 0x0],
        [0x1, 'de', 0x5, 0xd, 0x6e, 0x0],
        [0x1, 'de', 0x7, 0x1b, 0x6b, 0x0],
        [0x1, 'de', 0x7, 0x2f, 0x63, 0x0],
        [0x1, 'de', 0x7, 0xb, 0x68, 0x0],
        [0x1, 'de', 0x7, 0x9, 0x6f, 0x0],
        [0x1, 'de', 0x7, 0x28, 0x72, 0x0],
        [0x1, 'de', 0x7, 0x1c, 0x75, 0x0],
        [0x1, 'de', 0x7, 0x2f, 0x71, 0x0],
        [0x1, 'de', 0x7, 0x3f, 0x68, 0x0],
        [0x1, 'de', 0x4, 0x40, 0x5c, 0x0],
        [0x1, 'de', 0x6, 0x56, 0x61, 0x0],
        [0x1, 'de', 0x5, 0x4c, 0x5b, 0x0],
        [0x1, 'de', 0x5, 0x55, 0x56, 0x0],
        [0x1, 'de', 0x6, 0x4e, 0x53, 0x0],
        [0x1, 'de', 0x6, 0x47, 0x61, 0x0],
        [0x1, 'de', 0x4, 0x45, 0x69, 0x0],
        [0x1, 'de', 0x4, 0x4f, 0x68, 0x0],
        [0x1, 'de', 0x4, 0x56, 0x6d, 0x0],
        [0x1, 'de', 0x4, 0x56, 0x76, 0x0],
        [0x1, 'de', 0x5, 0x46, 0x71, 0x0],
        [0x1, 'de', 0x6, 0x45, 0x79, 0x0],
        [0x1, 'de', 0x6, 0x4c, 0x7a, 0x0],
        [0x1, 'de', 0x7, 0x57, 0x82, 0x0],
        [0x1, 'de', 0x4, 0x54, 0x7b, 0x0],
        [0x1, 'de', 0x4, 0x39, 0x79, 0x0],
        [0x1, 'de', 0x5, 0x35, 0x7d, 0x0],
        [0x1, 'de', 0x5, 0x3e, 0x83, 0x0],
        [0x1, 'de', 0x6, 0x43, 0x8f, 0x0],
        [0x1, 'de', 0x5, 0x4d, 0x8f, 0x0],
        [0x1, 'de', 0x5, 0x55, 0x88, 0x0],
        [0x1, 'de', 0x6, 0x57, 0x93, 0x0],
        [0x1, 'de', 0x6, 0x5c, 0x8c, 0x0],
        [0x1, 'de', 0x4, 0x5d, 0x7f, 0x0],
        [0x1, 'de', 0x5, 0x5d, 0x6a, 0x0],
        [0x1, 'de', 0x5, 0x2d, 0x90, 0x0],
        [0x1, 'de', 0x4, 0x29, 0x8b, 0x0],
        [0x1, 'de', 0x4, 0x36, 0x8a, 0x0],
        [0x1, 'de', 0x6, 0x1d, 0x91, 0x0],
        [0x1, 'de', 0x6, 0x1d, 0x84, 0x0],
        [0x1, 'de', 0x6, 0x23, 0x7f, 0x0],
        [0x1, 'de', 0x6, 0x40, 0x8e, 0x0],
        [0x1, 'de', 0x5, 0x17, 0x83, 0x0],
        [0x1, 'de', 0x5, 0x9, 0x86, 0x0],
        [0x1, 'de', 0x6, 0xb, 0x79, 0x0],
        [0x1, 'de', 0x4, 0x1a, 0x79, 0x0],
        [0x1, 'de', 0x23, 0x3a, 0x96, 0x0],
        [0x1, 'de', 0x21, 0x30, 0x9c, 0x0],
        [0x1, 'de', 0x21, 0x19, 0x9e, 0x0],
        [0x1, 'de', 0x21, 0x24, 0x9a, 0x0],
        [0x1, 'de', 0x22, 0x9, 0x9a, 0x0],
        [0x1, 'de', 0x22, 0xd, 0x94, 0x0],
        [0x1, 'de', 0x22, 0x15, 0x8e, 0x0],
        [0x1, 'de', 0x22, 0x26, 0x8b, 0x0],
        [0x1, 'de', 0x22, 0x2f, 0x90, 0x0],
        [0x1, 'de', 0x22, 0x44, 0x8e, 0x0],
        [0x1, 'de', 0x24, 0x46, 0x87, 0x0],
        [0x1, 'de', 0x24, 0x40, 0x84, 0x0],
        [0x1, 'de', 0x24, 0x56, 0x86, 0x0],
        [0x1, 'de', 0x24, 0x5a, 0x8d, 0x0],
        [0x1, 'de', 0x24, 0x5d, 0x83, 0x0],
        [0x1, 'de', 0x24, 0x5b, 0x7d, 0x0],
        [0x1, 'de', 0x24, 0x4c, 0x7b, 0x0],
        [0x1, 'de', 0x21, 0x52, 0x7a, 0x0],
        [0x1, 'de', 0x23, 0x38, 0x7a, 0x0],
        [0x1, 'de', 0x23, 0x28, 0x77, 0x0],
        [0x1, 'de', 0x23, 0x11, 0x70, 0x0],
        [0x1, 'de', 0x23, 0x25, 0x66, 0x0],
        [0x1, 'de', 0x21, 0x12, 0x61, 0x0],
        [0x1, 'de', 0x22, 0xa, 0x53, 0x0],
        [0x1, 'de', 0x21, 0x13, 0x49, 0x0],
        [0x1, 'de', 0x21, 0xa, 0x3c, 0x0],
        [0x1, 'de', 0x23, 0x18, 0x3c, 0x0],
        [0x1, 'de', 0x24, 0xe, 0x2d, 0x0],
        [0x1, 'de', 0x24, 0x15, 0x2a, 0x0],
        [0x1, 'de', 0x23, 0x8, 0x20, 0x0],
        [0x1, 'de', 0x21, 0x9, 0x18, 0x0],
        [0x1, 'de', 0x23, 0x23, 0x1b, 0x0],
        [0x1, 'de', 0x21, 0x38, 0x23, 0x0],
        [0x1, 'de', 0x24, 0x35, 0x24, 0x0],
        [0x1, 'de', 0x21, 0x2d, 0x23, 0x0],
        [0x1, 'de', 0x23, 0x35, 0x27, 0x0],
        [0x1, 'de', 0x24, 0x39, 0x1e, 0x0],
        [0x1, 'de', 0x21, 0x56, 0x6c, 0x0],
        [0x1, 'de', 0x21, 0x44, 0x70, 0x0],
        [0x1, 'de', 0x21, 0x31, 0x6d, 0x0],
        [0x1, 'de', 0x21, 0x2e, 0x5f, 0x0],
        [0x1, 'de', 0x21, 0x5a, 0x4c, 0x0],
        [0x1, 'de', 0x24, 0x4c, 0x53, 0x0],
        [0x1, 'de', 0x24, 0x46, 0x48, 0x0],
        [0x1, 'de', 0x24, 0x4e, 0x3f, 0x0],
        [0x1, 'de', 0x24, 0x5a, 0x40, 0x0],
        [0x1, 'de', 0x24, 0x3c, 0x46, 0x0],
        [0x1, 'de', 0x23, 0x4b, 0x5a, 0x0],
        [0x1, 'de', 0x23, 0x51, 0x3a, 0x0],
        [0x1, 'de', 0x23, 0x5b, 0x33, 0x0],
        [0x1, 'de', 0x23, 0x5d, 0x38, 0x0],
        [0x1, 'de', 0x23, 0x3d, 0x3c, 0x0],
        [0x1, 'de', 0x23, 0x42, 0x2e, 0x0],
        [0x1, 'de', 0x21, 0x5a, 0x13, 0x0],
        [0x1, 'de', 0x22, 0x5c, 0x9, 0x0],
        [0x1, 'de', 0x23, 0x4b, 0x27, 0x0],
        [0x1, 'de', 0x23, 0x43, 0x2a, 0x0],
        [0x1, 'de', 0x23, 0x5d, 0x25, 0x0],
        [0x1, 'de', 0x24, 0x59, 0x1c, 0x0],
        [0x1, 'de', 0x24, 0x2a, 0x3d, 0x0],
        [0x1, 'de', 0x21, 0x31, 0x32, 0x0],
        [0x1, 'de', 0x21, 0x2c, 0x4b, 0x0],
        [0x1, 'de', 0x21, 0x2e, 0x55, 0x0],
        [0x1, 'de', 0x21, 0x40, 0x54, 0x0],
        [0x1, 'de', 0x21, 0x38, 0x5e, 0x0],
        [0x1, 'de', 0x21, 0x19, 0x5a, 0x0],
        [0x1, 'de', 0x21, 0x1f, 0x45, 0x0],
        [0x1, 'de', 0x23, 0x22, 0x36, 0x0],
        [0x1, 'de', 0x23, 0x1d, 0x2f, 0x0],
        [0x1, 'de', 0x24, 0x2a, 0x29, 0x0],
        [0x1, 'de', 0x24, 0x1d, 0x22, 0x0],
        [0x1, 'de', 0x23, 0x14, 0x37, 0x0],
        [0x1, 'de', 0x23, 0xe, 0x34, 0x0],
        [0x1, 's', 0x2, 0xc, 0xab, 0x1],
        [0x1, 'r', 0x14, 0xbc, 0x0],
        [0x1, 'r', 0x15, 0xbc, 0x0],
        [0x1, 'r', 0x16, 0xbc, 0x0],
        [0x1, 'r', 0x17, 0xbc, 0x0],
        [0x1, 'r', 0x18, 0xbc, 0x0],
        [0x1, 'r', 0x19, 0xbd, 0x0],
        [0x1, 'r', 0x18, 0xbd, 0x0],
        [0x1, 'r', 0x17, 0xbd, 0x0],
        [0x1, 'r', 0x16, 0xbd, 0x0],
        [0x1, 'r', 0x15, 0xbd, 0x0],
        [0x1, 'r', 0x14, 0xbd, 0x0],
        [0x1, 'r', 0x13, 0xbd, 0x0],
        [0x1, 'r', 0x13, 0xbe, 0x0],
        [0x1, 'r', 0x13, 0xbf, 0x0],
        [0x1, 'r', 0x14, 0xbf, 0x0],
        [0x1, 'r', 0x15, 0xbf, 0x0],
        [0x1, 'r', 0x16, 0xbf, 0x0],
        [0x1, 'r', 0x18, 0xbf, 0x0],
        [0x1, 'r', 0x17, 0xbf, 0x0],
        [0x1, 'r', 0x19, 0xbf, 0x0],
        [0x1, 'r', 0x19, 0xbe, 0x0],
        [0x1, 'r', 0x18, 0xbe, 0x0],
        [0x1, 'r', 0x17, 0xbe, 0x0],
        [0x1, 'r', 0x16, 0xbe, 0x0],
        [0x1, 'r', 0x15, 0xbe, 0x0],
        [0x1, 'r', 0x14, 0xbe, 0x0],
        [0x1, 'r', 0x1a, 0xbe, 0x0],
        [0x1, 'r', 0x1a, 0xbf, 0x0],
        [0x1, 'r', 0x18, 0xc1, 0x0],
        [0x1, 'r', 0x17, 0xc1, 0x0],
        [0x1, 'r', 0x16, 0xc1, 0x0],
        [0x1, 'r', 0x14, 0xc0, 0x0],
        [0x1, 'r', 0x15, 0xc0, 0x0],
        [0x1, 'r', 0x16, 0xc0, 0x0],
        [0x1, 'r', 0x17, 0xc0, 0x0],
        [0x1, 'r', 0x18, 0xc0, 0x0],
        [0x1, 'r', 0x19, 0xc0, 0x0],
        [0x1, 'r', 0x35, 0xc7, 0x0],
        [0x1, 'r', 0x34, 0xc8, 0x0],
        [0x1, 'r', 0x36, 0xc7, 0x0],
        [0x1, 'r', 0x37, 0xc7, 0x0],
        [0x1, 'r', 0x37, 0xc8, 0x0],
        [0x1, 'r', 0x36, 0xc8, 0x0],
        [0x1, 'r', 0x35, 0xc8, 0x0],
        [0x1, 'r', 0x33, 0xc8, 0x0],
        [0x1, 'r', 0x38, 0xc8, 0x0],
        [0x1, 'r', 0x37, 0xc9, 0x0],
        [0x1, 'r', 0x36, 0xc9, 0x0],
        [0x1, 'r', 0x37, 0xca, 0x0],
        [0x1, 'r', 0x36, 0xcb, 0x0],
        [0x1, 'r', 0x36, 0xcc, 0x0],
        [0x1, 'r', 0x36, 0xca, 0x0],
        [0x1, 'r', 0x35, 0xca, 0x0],
        [0x1, 'r', 0x34, 0xca, 0x0],
        [0x1, 'r', 0x35, 0xc9, 0x0],
        [0x1, 'r', 0x34, 0xc9, 0x0],
        [0x1, 'r', 0x33, 0xc9, 0x0],
        [0x1, 'r', 0x33, 0xca, 0x0],
        [0x1, 'r', 0x32, 0xca, 0x0],
        [0x1, 'r', 0x32, 0xc9, 0x0],
        [0x1, 'r', 0x38, 0xc9, 0x0],
        [0x1, 'r', 0x35, 0xcb, 0x0],
        [0x1, 'r', 0x34, 0xcb, 0x0],
        [0x1, 'r', 0x33, 0xcb, 0x0],
        [0x1, 'r', 0x38, 0xca, 0x0],
        [0x1, 'r', 0x37, 0xcb, 0x0],
        [0x1, 'r', 0x35, 0xcc, 0x0],
        [0x1, 'r', 0x34, 0xcc, 0x0],
        [0x1, 'r', 0x37, 0xcc, 0x0],
        [0x1, 'r', 0x38, 0xcb, 0x0],
        [0x1, 'r', 0x38, 0xf4, 0x0],
        [0x1, 'r', 0x36, 0xf6, 0x0],
        [0x1, 'r', 0x32, 0xf8, 0x0],
        [0x1, 'r', 0x30, 0xf8, 0x0],
        [0x1, 'r', 0x2b, 0xf8, 0x0],
        [0x1, 'r', 0x2d, 0xee, 0x0],
        [0x1, 'r', 0x2c, 0xee, 0x0],
        [0x1, 'r', 0x2b, 0xee, 0x0],
        [0x1, 'r', 0x2e, 0xee, 0x0],
        [0x1, 'r', 0x2f, 0xee, 0x0],
        [0x1, 'r', 0x30, 0xee, 0x0],
        [0x1, 'r', 0x31, 0xee, 0x0],
        [0x1, 'r', 0x32, 0xee, 0x0],
        [0x1, 'r', 0x33, 0xee, 0x0],
        [0x1, 'r', 0x34, 0xee, 0x0],
        [0x1, 'r', 0x35, 0xee, 0x0],
        [0x1, 'r', 0x36, 0xef, 0x0],
        [0x1, 'r', 0x35, 0xf0, 0x0],
        [0x1, 'r', 0x35, 0xef, 0x0],
        [0x1, 'r', 0x34, 0xef, 0x0],
        [0x1, 'r', 0x33, 0xef, 0x0],
        [0x1, 'r', 0x32, 0xef, 0x0],
        [0x1, 'r', 0x31, 0xef, 0x0],
        [0x1, 'r', 0x30, 0xef, 0x0],
        [0x1, 'r', 0x2f, 0xef, 0x0],
        [0x1, 'r', 0x2e, 0xef, 0x0],
        [0x1, 'r', 0x2d, 0xef, 0x0],
        [0x1, 'r', 0x2c, 0xef, 0x0],
        [0x1, 'r', 0x2b, 0xef, 0x0],
        [0x1, 'r', 0x2a, 0xef, 0x0],
        [0x1, 'r', 0x29, 0xf0, 0x0],
        [0x1, 'r', 0x2a, 0xf0, 0x0],
        [0x1, 'r', 0x2b, 0xf0, 0x0],
        [0x1, 'r', 0x2c, 0xf0, 0x0],
        [0x1, 'r', 0x2d, 0xf0, 0x0],
        [0x1, 'r', 0x2e, 0xf0, 0x0],
        [0x1, 'r', 0x2f, 0xf0, 0x0],
        [0x1, 'r', 0x30, 0xf0, 0x0],
        [0x1, 'r', 0x31, 0xf0, 0x0],
        [0x1, 'r', 0x32, 0xf0, 0x0],
        [0x1, 'r', 0x33, 0xf0, 0x0],
        [0x1, 'r', 0x34, 0xf0, 0x0],
        [0x1, 'r', 0x36, 0xf0, 0x0],
        [0x1, 'r', 0x37, 0xf0, 0x0],
        [0x1, 'r', 0x38, 0xf1, 0x0],
        [0x1, 'r', 0x37, 0xf1, 0x0],
        [0x1, 'r', 0x36, 0xf1, 0x0],
        [0x1, 'r', 0x35, 0xf1, 0x0],
        [0x1, 'r', 0x34, 0xf1, 0x0],
        [0x1, 'r', 0x33, 0xf1, 0x0],
        [0x1, 'r', 0x31, 0xf1, 0x0],
        [0x1, 'r', 0x32, 0xf1, 0x0],
        [0x1, 'r', 0x30, 0xf1, 0x0],
        [0x1, 'r', 0x2f, 0xf1, 0x0],
        [0x1, 'r', 0x2e, 0xf1, 0x0],
        [0x1, 'r', 0x2d, 0xf1, 0x0],
        [0x1, 'r', 0x2c, 0xf1, 0x0],
        [0x1, 'r', 0x2b, 0xf1, 0x0],
        [0x1, 'r', 0x2a, 0xf1, 0x0],
        [0x1, 'r', 0x29, 0xf1, 0x0],
        [0x1, 'r', 0x28, 0xf2, 0x0],
        [0x1, 'r', 0x29, 0xf2, 0x0],
        [0x1, 'r', 0x2a, 0xf2, 0x0],
        [0x1, 'r', 0x2b, 0xf2, 0x0],
        [0x1, 'r', 0x2c, 0xf2, 0x0],
        [0x1, 'r', 0x2d, 0xf2, 0x0],
        [0x1, 'r', 0x2e, 0xf2, 0x0],
        [0x1, 'r', 0x2f, 0xf2, 0x0],
        [0x1, 'r', 0x30, 0xf2, 0x0],
        [0x1, 'r', 0x31, 0xf2, 0x0],
        [0x1, 'r', 0x32, 0xf2, 0x0],
        [0x1, 'r', 0x33, 0xf2, 0x0],
        [0x1, 'r', 0x34, 0xf2, 0x0],
        [0x1, 'r', 0x35, 0xf2, 0x0],
        [0x1, 'r', 0x36, 0xf2, 0x0],
        [0x1, 'r', 0x37, 0xf2, 0x0],
        [0x1, 'r', 0x38, 0xf2, 0x0],
        [0x1, 'r', 0x38, 0xf3, 0x0],
        [0x1, 'r', 0x37, 0xf3, 0x0],
        [0x1, 'r', 0x36, 0xf3, 0x0],
        [0x1, 'r', 0x35, 0xf3, 0x0],
        [0x1, 'r', 0x34, 0xf3, 0x0],
        [0x1, 'r', 0x33, 0xf3, 0x0],
        [0x1, 'r', 0x32, 0xf3, 0x0],
        [0x1, 'r', 0x31, 0xf3, 0x0],
        [0x1, 'r', 0x30, 0xf3, 0x0],
        [0x1, 'r', 0x2f, 0xf3, 0x0],
        [0x1, 'r', 0x2e, 0xf3, 0x0],
        [0x1, 'r', 0x2d, 0xf3, 0x0],
        [0x1, 'r', 0x2c, 0xf3, 0x0],
        [0x1, 'r', 0x2b, 0xf3, 0x0],
        [0x1, 'r', 0x2a, 0xf3, 0x0],
        [0x1, 'r', 0x29, 0xf3, 0x0],
        [0x1, 'r', 0x28, 0xf3, 0x0],
        [0x1, 'r', 0x28, 0xf4, 0x0],
        [0x1, 'r', 0x29, 0xf4, 0x0],
        [0x1, 'r', 0x2b, 0xf4, 0x0],
        [0x1, 'r', 0x2c, 0xf4, 0x0],
        [0x1, 'r', 0x2d, 0xf4, 0x0],
        [0x1, 'r', 0x2e, 0xf4, 0x0],
        [0x1, 'r', 0x2f, 0xf4, 0x0],
        [0x1, 'r', 0x30, 0xf4, 0x0],
        [0x1, 'r', 0x31, 0xf4, 0x0],
        [0x1, 'r', 0x32, 0xf4, 0x0],
        [0x1, 'r', 0x33, 0xf4, 0x0],
        [0x1, 'r', 0x34, 0xf4, 0x0],
        [0x1, 'r', 0x35, 0xf4, 0x0],
        [0x1, 'r', 0x36, 0xf4, 0x0],
        [0x1, 'r', 0x37, 0xf4, 0x0],
        [0x1, 'r', 0x2a, 0xf4, 0x0],
        [0x1, 'r', 0x28, 0xf5, 0x0],
        [0x1, 'r', 0x29, 0xf5, 0x0],
        [0x1, 'r', 0x2a, 0xf5, 0x0],
        [0x1, 'r', 0x2b, 0xf5, 0x0],
        [0x1, 'r', 0x2c, 0xf5, 0x0],
        [0x1, 'r', 0x2d, 0xf5, 0x0],
        [0x1, 'r', 0x2e, 0xf5, 0x0],
        [0x1, 'r', 0x2f, 0xf5, 0x0],
        [0x1, 'r', 0x30, 0xf5, 0x0],
        [0x1, 'r', 0x31, 0xf5, 0x0],
        [0x1, 'r', 0x32, 0xf5, 0x0],
        [0x1, 'r', 0x33, 0xf5, 0x0],
        [0x1, 'r', 0x34, 0xf6, 0x0],
        [0x1, 'r', 0x34, 0xf5, 0x0],
        [0x1, 'r', 0x35, 0xf5, 0x0],
        [0x1, 'r', 0x36, 0xf5, 0x0],
        [0x1, 'r', 0x37, 0xf5, 0x0],
        [0x1, 'r', 0x35, 0xf6, 0x0],
        [0x1, 'r', 0x33, 0xf6, 0x0],
        [0x1, 'r', 0x32, 0xf6, 0x0],
        [0x1, 'r', 0x31, 0xf6, 0x0],
        [0x1, 'r', 0x30, 0xf6, 0x0],
        [0x1, 'r', 0x2f, 0xf6, 0x0],
        [0x1, 'r', 0x2d, 0xf6, 0x0],
        [0x1, 'r', 0x2e, 0xf6, 0x0],
        [0x1, 'r', 0x2c, 0xf6, 0x0],
        [0x1, 'r', 0x2b, 0xf6, 0x0],
        [0x1, 'r', 0x2a, 0xf6, 0x0],
        [0x1, 'r', 0x29, 0xf6, 0x0],
        [0x1, 'r', 0x2a, 0xf7, 0x0],
        [0x1, 'r', 0x2b, 0xf7, 0x0],
        [0x1, 'r', 0x2c, 0xf7, 0x0],
        [0x1, 'r', 0x2d, 0xf7, 0x0],
        [0x1, 'r', 0x2e, 0xf7, 0x0],
        [0x1, 'r', 0x2f, 0xf7, 0x0],
        [0x1, 'r', 0x30, 0xf7, 0x0],
        [0x1, 'r', 0x32, 0xf7, 0x0],
        [0x1, 'r', 0x33, 0xf7, 0x0],
        [0x1, 'r', 0x34, 0xf7, 0x0],
        [0x1, 'r', 0x35, 0xf7, 0x0],
        [0x1, 'r', 0x36, 0xf7, 0x0],
        [0x1, 'r', 0x31, 0xf7, 0x0],
        [0x1, 'r', 0x31, 0xf8, 0x0],
        [0x1, 'r', 0x2f, 0xf8, 0x0],
        [0x1, 'r', 0x2e, 0xf8, 0x0],
        [0x1, 'r', 0x2d, 0xf8, 0x0],
        [0x1, 'r', 0x33, 0xf8, 0x0],
        [0x1, 'r', 0x37, 0xf6, 0x1],
        [0x1, 'r', 0x37, 0xf7, 0x1],
        [0x1, 'r', 0x38, 0xf7, 0x1],
        [0x1, 'r', 0x38, 0xf8, 0x1],
        [0x1, 'r', 0x5f, 0x10e, 0x1],
        [0x1, 'r', 0x5d, 0x10e, 0x1],
        [0x1, 'r', 0x5e, 0x10e, 0x1],
        [0x1, 'r', 0x5f, 0x10f, 0x1],
        [0x1, 'r', 0x5e, 0x10f, 0x1],
        [0x1, 'r', 0x5d, 0x10f, 0x1],
        [0x1, 'r', 0x5e, 0x11a, 0x1],
        [0x1, 'r', 0x5d, 0x11a, 0x1],
        [0x1, 'r', 0x5d, 0x119, 0x1],
        [0x1, 'r', 0x5c, 0x119, 0x1],
        [0x1, 'r', 0x5c, 0x118, 0x1],
        [0x1, 'r', 0x5b, 0x118, 0x1],
        [0x1, 'r', 0x5a, 0x117, 0x1],
        [0x1, 'r', 0x5f, 0x113, 0x1],
        [0x1, 'r', 0x5f, 0x112, 0x1],
        [0x1, 'r', 0x5f, 0x111, 0x1],
        [0x1, 'r', 0x5f, 0x110, 0x1],
        [0x1, 'r', 0x5e, 0x112, 0x1],
        [0x1, 'r', 0x5e, 0x111, 0x1],
        [0x1, 'r', 0x5e, 0x110, 0x1],
        [0x1, 'r', 0x5d, 0x110, 0x1],
        [0x1, 'r', 0x5d, 0x111, 0x1],
        [0x1, 'r', 0x5d, 0x112, 0x1],
        [0x1, 'r', 0x5c, 0x111, 0x1],
        [0x1, 'r', 0x5c, 0x110, 0x1],
        [0x1, 'r', 0x5c, 0x10e, 0x1],
        [0x1, 'r', 0x5c, 0x10f, 0x1],
        [0x1, 'r', 0x5c, 0x10d, 0x1],
        [0x1, 'r', 0x5a, 0x10d, 0x1],
        [0x1, 'r', 0x5b, 0x10d, 0x1],
        [0x1, 'r', 0x5b, 0x10f, 0x1],
        [0x1, 'r', 0x5b, 0x10e, 0x1],
        [0x1, 'r', 0x5f, 0x116, 0x1],
        [0x1, 'r', 0x5f, 0x115, 0x1],
        [0x1, 'r', 0x5f, 0x114, 0x1],
        [0x1, 'r', 0x5e, 0x114, 0x1],
        [0x1, 'r', 0x5e, 0x113, 0x1],
        [0x1, 'r', 0x5d, 0x113, 0x1],
        [0x1, 'r', 0x5c, 0x112, 0x1],
        [0x1, 'r', 0x5c, 0x113, 0x1],
        [0x1, 'r', 0x5b, 0x113, 0x1],
        [0x1, 'r', 0x5a, 0x113, 0x1],
        [0x1, 'r', 0x59, 0x112, 0x1],
        [0x1, 'r', 0x5a, 0x112, 0x1],
        [0x1, 'r', 0x59, 0x113, 0x1],
        [0x1, 'r', 0x58, 0x112, 0x1],
        [0x1, 'r', 0x58, 0x111, 0x1],
        [0x1, 'r', 0x56, 0x110, 0x1],
        [0x1, 'r', 0x55, 0x10f, 0x1],
        [0x1, 'r', 0x56, 0x10f, 0x1],
        [0x1, 'r', 0x57, 0x110, 0x1],
        [0x1, 'r', 0x37, 0xf8, 0x1],
        [0x1, 'r', 0x36, 0xf8, 0x1],
        [0x1, 'r', 0x38, 0xf9, 0x1],
        [0x1, 'r', 0x37, 0xf9, 0x1],
        [0x1, 'r', 0x37, 0xfa, 0x1],
        [0x1, 'r', 0x38, 0xfa, 0x1],
        [0x1, 'r', 0x39, 0xfa, 0x1],
        [0x1, 'r', 0x39, 0xf9, 0x1],
        [0x1, 'r', 0x3b, 0xfa, 0x1],
        [0x1, 'r', 0x3a, 0xfa, 0x1],
        [0x1, 'r', 0x3c, 0xfa, 0x1],
        [0x1, 'r', 0x3d, 0xfb, 0x1],
        [0x1, 'r', 0x3c, 0xfb, 0x1],
        [0x1, 'r', 0x3e, 0xfb, 0x1],
        [0x1, 'r', 0x3e, 0xfc, 0x1],
        [0x1, 'r', 0x3f, 0xfc, 0x1],
        [0x1, 'r', 0x3a, 0xfb, 0x1],
        [0x1, 'r', 0x39, 0xfb, 0x1],
        [0x1, 'r', 0x38, 0xfb, 0x1],
        [0x1, 'r', 0x3a, 0xfc, 0x1],
        [0x1, 'r', 0x39, 0xfc, 0x1],
        [0x1, 'r', 0x39, 0xfd, 0x1],
        [0x1, 'r', 0x3a, 0xfd, 0x1],
        [0x1, 'r', 0x3a, 0xfe, 0x1],
        [0x1, 'r', 0x3b, 0xff, 0x1],
        [0x1, 'r', 0x3a, 0xff, 0x1],
        [0x1, 'r', 0x39, 0xfe, 0x1],
        [0x1, 'r', 0x38, 0xfc, 0x1],
        [0x1, 'r', 0x37, 0xfb, 0x1],
        [0x1, 'r', 0x3c, 0xff, 0x1],
        [0x1, 'r', 0x3d, 0xff, 0x1],
        [0x1, 'r', 0x3d, 0x100, 0x1],
        [0x1, 'r', 0x3c, 0x100, 0x1],
        [0x1, 'r', 0x3e, 0x100, 0x1],
        [0x1, 'r', 0x3e, 0x101, 0x1],
        [0x1, 'r', 0x3d, 0x101, 0x1],
        [0x1, 'r', 0x40, 0xfd, 0x1],
        [0x1, 'r', 0x40, 0xfe, 0x1],
        [0x1, 'r', 0x41, 0xfe, 0x1],
        [0x1, 'r', 0x3d, 0xfa, 0x1],
        [0x1, 'r', 0x40, 0xfc, 0x1],
        [0x1, 'r', 0x41, 0xfd, 0x1],
        [0x1, 'r', 0x42, 0xfe, 0x1],
        [0x1, 'r', 0x41, 0xff, 0x1],
        [0x1, 'r', 0x40, 0xff, 0x1],
        [0x1, 'r', 0x40, 0x100, 0x1],
        [0x1, 'r', 0x41, 0x100, 0x1],
        [0x1, 'r', 0x41, 0x101, 0x1],
        [0x1, 'r', 0x40, 0x101, 0x1],
        [0x1, 'r', 0x3f, 0x101, 0x1],
        [0x1, 'r', 0x3e, 0x102, 0x1],
        [0x1, 'r', 0x3f, 0x102, 0x1],
        [0x1, 'r', 0x40, 0x102, 0x1],
        [0x1, 'r', 0x42, 0xff, 0x1],
        [0x1, 'r', 0x42, 0x100, 0x1],
        [0x1, 'r', 0x42, 0x101, 0x1],
        [0x1, 'r', 0x42, 0x102, 0x1],
        [0x1, 'r', 0x41, 0x102, 0x1],
        [0x1, 'r', 0x43, 0x102, 0x1],
        [0x1, 'r', 0x43, 0x101, 0x1],
        [0x1, 'r', 0x43, 0x103, 0x1],
        [0x1, 'r', 0x42, 0x103, 0x1],
        [0x1, 'r', 0x41, 0x103, 0x1],
        [0x1, 'r', 0x38, 0xf6, 0x1],
        [0x1, 'r', 0x38, 0xf5, 0x1],
        [0x1, 'r', 0x44, 0x102, 0x1],
        [0x1, 'r', 0x44, 0x103, 0x1],
        [0x1, 'r', 0x44, 0x104, 0x1],
        [0x1, 'r', 0x45, 0x104, 0x1],
        [0x1, 'r', 0x45, 0x105, 0x1],
        [0x1, 'r', 0x46, 0x105, 0x1],
        [0x1, 'r', 0x47, 0x105, 0x1],
        [0x1, 'r', 0x43, 0x104, 0x1],
        [0x1, 'r', 0x59, 0x10d, 0x1],
        [0x1, 'r', 0x59, 0x10c, 0x1],
        [0x1, 'r', 0x5a, 0x10c, 0x1],
        [0x1, 'r', 0x52, 0x10b, 0x1],
        [0x1, 'r', 0x53, 0x10b, 0x1],
        [0x1, 'r', 0x50, 0x10a, 0x1],
        [0x1, 'r', 0x51, 0x10a, 0x1],
        [0x1, 'r', 0x51, 0x10b, 0x1],
        [0x1, 'r', 0x4f, 0x10a, 0x1],
        [0x1, 'r', 0x4e, 0x109, 0x1],
        [0x1, 'r', 0x4d, 0x109, 0x1],
        [0x1, 'r', 0x4c, 0x108, 0x1],
        [0x1, 'r', 0x4b, 0x108, 0x1],
        [0x1, 'r', 0x4b, 0x107, 0x1],
        [0x1, 'r', 0x4a, 0x107, 0x1],
        [0x1, 'r', 0x4a, 0x106, 0x1],
        [0x1, 'r', 0x48, 0x106, 0x1],
        [0x1, 'r', 0x49, 0x106, 0x1],
        [0x1, 'r', 0x47, 0x106, 0x1],
        [0x1, 'r', 0x55, 0x10e, 0x1],
        [0x1, 'r', 0x54, 0x10e, 0x1],
        [0x1, 'r', 0x54, 0x10d, 0x1],
        [0x1, 'r', 0x53, 0x10d, 0x1],
        [0x1, 'r', 0x52, 0x10d, 0x1],
        [0x1, 'r', 0x51, 0x10d, 0x1],
        [0x1, 'r', 0x51, 0x10c, 0x1],
        [0x1, 'r', 0x52, 0x10c, 0x1],
        [0x1, 'r', 0x53, 0x10c, 0x1],
        [0x1, 'r', 0x50, 0x10c, 0x1],
        [0x1, 'r', 0x50, 0x10b, 0x1],
        [0x1, 'r', 0x4f, 0x10b, 0x1],
        [0x1, 'r', 0x4e, 0x10a, 0x1],
        [0x1, 'r', 0x4c, 0x109, 0x1],
        [0x1, 'r', 0x4b, 0x106, 0x1],
        [0x1, 'r', 0x5a, 0x118, 0x1],
        [0x1, 'r', 0x59, 0x118, 0x1],
        [0x1, 'r', 0x59, 0x117, 0x1],
        [0x1, 'r', 0x58, 0x117, 0x1],
        [0x1, 'r', 0x58, 0x116, 0x1],
        [0x1, 'r', 0x57, 0x115, 0x1],
        [0x1, 'r', 0x56, 0x114, 0x1],
        [0x1, 'r', 0x56, 0x113, 0x1],
        [0x1, 'r', 0x56, 0x112, 0x1],
        [0x1, 'r', 0x56, 0x111, 0x1],
        [0x1, 'r', 0x55, 0x111, 0x1],
        [0x1, 'r', 0x55, 0x110, 0x1],
        [0x1, 'r', 0x55, 0x112, 0x1],
        [0x1, 'r', 0x56, 0x115, 0x1],
        [0x1, 'r', 0x57, 0x116, 0x1],
        [0x1, 'r', 0x54, 0x10f, 0x1],
        [0x1, 'r', 0x53, 0x10e, 0x1],
        [0x1, 'r', 0x57, 0x111, 0x1],
        [0x1, 'r', 0x5b, 0x112, 0x1],
        [0x1, 'r', 0x59, 0x111, 0x1],
        [0x1, 'r', 0x58, 0x110, 0x1],
        [0x1, 'r', 0x5b, 0x119, 0x1],
        [0x1, 'r', 0x5c, 0x11a, 0x1],
        [0x1, 'r', 0x58, 0x118, 0x1],
        [0x1, 'r', 0x57, 0x117, 0x1],
        [0x1, 'r', 0x55, 0x113, 0x1],
        [0x1, 'r', 0x54, 0x111, 0x1],
        [0x1, 'r', 0x54, 0x110, 0x1],
        [0x1, 'r', 0x53, 0x10f, 0x1],
        [0x1, 'r', 0x52, 0x10e, 0x1],
        [0x1, 'r', 0x54, 0x10b, 0x0],
        [0x1, 'r', 0x55, 0x10b, 0x0],
        [0x1, 'r', 0x4c, 0x106, 0x0],
        [0x1, 'r', 0x4d, 0x106, 0x0],
        [0x1, 'r', 0x58, 0x10c, 0x0],
        [0x1, 'r', 0x4e, 0x106, 0x0],
        [0x1, 'r', 0x4f, 0x106, 0x0],
        [0x1, 'r', 0x50, 0x106, 0x0],
        [0x1, 'r', 0x50, 0x107, 0x0],
        [0x1, 'r', 0x51, 0x107, 0x0],
        [0x1, 'r', 0x52, 0x107, 0x0],
        [0x1, 'r', 0x53, 0x107, 0x0],
        [0x1, 'r', 0x54, 0x107, 0x0],
        [0x1, 'r', 0x55, 0x107, 0x0],
        [0x1, 'r', 0x58, 0x106, 0x0],
        [0x1, 'r', 0x59, 0x106, 0x0],
        [0x1, 'r', 0x5a, 0x106, 0x0],
        [0x1, 'r', 0x57, 0x106, 0x0],
        [0x1, 'r', 0x56, 0x106, 0x0],
        [0x1, 'r', 0x56, 0x107, 0x0],
        [0x1, 'r', 0x57, 0x107, 0x0],
        [0x1, 'r', 0x5b, 0x106, 0x0],
        [0x1, 'r', 0x5f, 0x106, 0x0],
        [0x1, 'r', 0x5e, 0x106, 0x0],
        [0x1, 'r', 0x56, 0x10b, 0x0],
        [0x1, 'r', 0x57, 0x10b, 0x0],
        [0x1, 'r', 0x57, 0x10c, 0x0],
        [0x1, 'r', 0x56, 0x10c, 0x0],
        [0x1, 'r', 0x4a, 0xbd, 0x0],
        [0x1, 'r', 0x4b, 0xbd, 0x0],
        [0x1, 'r', 0x4c, 0xbd, 0x0],
        [0x1, 'r', 0x4d, 0xbd, 0x0],
        [0x1, 'r', 0x4e, 0xbe, 0x0],
        [0x1, 'r', 0x4d, 0xbe, 0x0],
        [0x1, 'r', 0x4b, 0xbe, 0x0],
        [0x1, 'r', 0x4c, 0xbe, 0x0],
        [0x1, 'r', 0x4a, 0xbe, 0x0],
        [0x1, 'r', 0x49, 0xbe, 0x0],
        [0x1, 'r', 0x4e, 0xbf, 0x0],
        [0x1, 'r', 0x4c, 0xbf, 0x0],
        [0x1, 'r', 0x4d, 0xbf, 0x0],
        [0x1, 'r', 0x4b, 0xbf, 0x0],
        [0x1, 'r', 0x4a, 0xbf, 0x0],
        [0x1, 'r', 0x4e, 0xc0, 0x0],
        [0x1, 'r', 0x4d, 0xc0, 0x0],
        [0x1, 'r', 0x4c, 0xc0, 0x0],
        [0x1, 'r', 0x4b, 0xc0, 0x0],
        [0x1, 'r', 0x4a, 0xc0, 0x0],
        [0x1, 'r', 0x49, 0xbf, 0x0],
        [0x1, 'f', 0x1, 0x60, 0x16, 0x1],
        [0x1, 's', 0x1, 0x61, 0x16, 0x1],
        [0x1, 'f', 0x1, 0x62, 0x16, 0x1],
        [0x1, 's', 0x0, 0x63, 0x16, 0x1],
        [0x1, 's', 0x1, 0x64, 0x15, 0x1],
        [0x1, 's', 0x1, 0x60, 0x31, 0x1],
        [0x1, 's', 0x1, 0x64, 0x32, 0x1],
        [0x1, 's', 0x0, 0x63, 0x31, 0x1],
        [0x1, 's', 0x0, 0x61, 0x31, 0x1],
        [0x1, 'f', 0x1, 0x62, 0x31, 0x1],
        [0x1, 'r', 0x46, 0xda, 0x0],
        [0x1, 'r', 0x47, 0xda, 0x0],
        [0x1, 'r', 0x48, 0xda, 0x0],
        [0x1, 'r', 0x49, 0xda, 0x0],
        [0x1, 'r', 0x4a, 0xdb, 0x0],
        [0x1, 'r', 0x49, 0xdb, 0x0],
        [0x1, 'r', 0x48, 0xdb, 0x0],
        [0x1, 'r', 0x47, 0xdb, 0x0],
        [0x1, 'r', 0x46, 0xdb, 0x0],
        [0x1, 'r', 0x49, 0xdc, 0x0],
        [0x1, 'r', 0x48, 0xdc, 0x0],
        [0x1, 'r', 0x47, 0xdc, 0x0],
        [0x1, 'r', 0x48, 0xdd, 0x0],
        [0x1, 'r', 0x47, 0xdd, 0x0],
        [0x1, 'r', 0x46, 0xdd, 0x0],
        [0x1, 'r', 0x45, 0xdd, 0x0],
        [0x1, 'r', 0x44, 0xdd, 0x0],
        [0x1, 'r', 0x46, 0xdc, 0x0],
        [0x1, 'r', 0x45, 0xdc, 0x0],
        [0x1, 'r', 0x45, 0xdb, 0x0],
        [0x1, 'r', 0x44, 0xdc, 0x0],
        [0x1, 'r', 0x49, 0xdd, 0x0],
        [0x1, 'r', 0x49, 0xde, 0x0],
        [0x1, 'r', 0x47, 0xde, 0x0],
        [0x1, 'r', 0x48, 0xde, 0x0],
        [0x1, 'r', 0x4a, 0xdd, 0x0],
        [0x1, 'r', 0x4a, 0xdc, 0x0],
        [0x1, 'r', 0x4b, 0xdc, 0x0],
        [0x1, 'r', 0x4b, 0xdd, 0x0],
        [0x1, 'r', 0x46, 0xde, 0x0],
        [0x1, 'r', 0x45, 0xde, 0x0],
        [0x1, 'r', 0x1d, 0xd9, 0x0],
        [0x1, 'r', 0x1e, 0xd9, 0x0],
        [0x1, 'r', 0x1f, 0xd9, 0x0],
        [0x1, 'r', 0x20, 0xd9, 0x0],
        [0x1, 'r', 0x1f, 0xdb, 0x0],
        [0x1, 'r', 0x1e, 0xdb, 0x0],
        [0x1, 'r', 0x1d, 0xdb, 0x0],
        [0x1, 'r', 0x1b, 0xdb, 0x0],
        [0x1, 'r', 0x19, 0xdb, 0x0],
        [0x1, 'r', 0x1a, 0xdb, 0x0],
        [0x1, 'r', 0x1c, 0xdb, 0x0],
        [0x1, 'r', 0x1a, 0xda, 0x0],
        [0x1, 'r', 0x1b, 0xda, 0x0],
        [0x1, 'r', 0x1c, 0xda, 0x0],
        [0x1, 'r', 0x1d, 0xda, 0x0],
        [0x1, 'r', 0x1e, 0xda, 0x0],
        [0x1, 'r', 0x1c, 0xd9, 0x0],
        [0x1, 'r', 0x1a, 0xd9, 0x0],
        [0x1, 'r', 0x1b, 0xd9, 0x0],
        [0x1, 'r', 0x1c, 0xd8, 0x0],
        [0x1, 'r', 0x1d, 0xd8, 0x0],
        [0x1, 'r', 0x1e, 0xd8, 0x0],
        [0x1, 'r', 0x1f, 0xda, 0x0],
        [0x1, 'r', 0x20, 0xda, 0x0],
        [0x1, 'r', 0x1f, 0xd8, 0x0],
        [0x1, 'r', 0x1f, 0xdd, 0x0],
        [0x1, 'r', 0x1f, 0xdc, 0x0],
        [0x1, 'r', 0x1e, 0xdc, 0x0],
        [0x1, 'r', 0x1d, 0xdc, 0x0],
        [0x1, 'r', 0x1c, 0xdc, 0x0],
        [0x1, 'r', 0x1b, 0xdc, 0x0],
        [0x1, 'r', 0x1a, 0xdc, 0x0],
        [0x1, 'r', 0x19, 0xda, 0x0],
        [0x1, 'r', 0x1b, 0xdd, 0x0],
        [0x1, 'r', 0x1c, 0xdd, 0x0],
        [0x1, 'r', 0x1d, 0xdd, 0x0],
        [0x1, 'r', 0x1e, 0xdd, 0x0],
        [0x1, 'r', 0x20, 0xdc, 0x0],
        [0x1, 'r', 0x20, 0xdb, 0x0],
        [0x1, 'r', 0x21, 0xda, 0x0],
        [0x1, 'r', 0x21, 0xdb, 0x0],
        [0x1, 'r', 0x4b, 0xee, 0x0],
        [0x1, 'r', 0x4c, 0xee, 0x0],
        [0x1, 'r', 0x4d, 0xef, 0x0],
        [0x1, 'r', 0x4c, 0xef, 0x0],
        [0x1, 'r', 0x4b, 0xef, 0x0],
        [0x1, 'r', 0x4a, 0xef, 0x0],
        [0x1, 'r', 0x4c, 0xf0, 0x0],
        [0x1, 'r', 0x4d, 0xf0, 0x0],
        [0x1, 'r', 0x4e, 0xf0, 0x0],
        [0x1, 'r', 0x4d, 0xf1, 0x0],
        [0x1, 'r', 0x4c, 0xf1, 0x0],
        [0x1, 'r', 0x4b, 0xf1, 0x0],
        [0x1, 'r', 0x4b, 0xf0, 0x0],
        [0x1, 'r', 0x4a, 0xf0, 0x0],
        [0x1, 'r', 0x4e, 0xef, 0x0],
        [0x1, 'r', 0x4d, 0xee, 0x0],
        [0x1, 'r', 0x12, 0xfd, 0x0],
        [0x1, 'r', 0x13, 0xfc, 0x0],
        [0x1, 'r', 0x14, 0xfc, 0x0],
        [0x1, 'r', 0x15, 0xfd, 0x0],
        [0x1, 'r', 0x17, 0xfe, 0x0],
        [0x1, 'r', 0x14, 0xfe, 0x0],
        [0x1, 'r', 0x13, 0xfe, 0x0],
        [0x1, 'r', 0x16, 0xfe, 0x0],
        [0x1, 'r', 0x12, 0xfe, 0x0],
        [0x1, 'r', 0x13, 0xfd, 0x0],
        [0x1, 'r', 0x14, 0xfd, 0x0],
        [0x1, 'r', 0x15, 0xfe, 0x0],
        [0x1, 'r', 0x16, 0xfd, 0x0],
        [0x1, 'r', 0x15, 0xff, 0x0],
        [0x1, 'r', 0x14, 0xff, 0x0],
        [0x1, 'r', 0x13, 0xff, 0x0],
        [0x1, 'r', 0x12, 0xff, 0x0],
        [0x1, 'r', 0x11, 0xff, 0x0],
        [0x1, 'r', 0x11, 0xfe, 0x0],
        [0x1, 'r', 0x16, 0xff, 0x0],
        [0x1, 'r', 0x13, 0x100, 0x0],
        [0x1, 'r', 0x14, 0x100, 0x0],
        [0x1, 'r', 0x15, 0x100, 0x0],
        [0x1, 'r', 0x27, 0x10e, 0x0],
        [0x1, 'r', 0x28, 0x10e, 0x0],
        [0x1, 'r', 0x29, 0x10e, 0x0],
        [0x1, 'r', 0x2b, 0x10e, 0x0],
        [0x1, 'r', 0x2c, 0x10e, 0x0],
        [0x1, 'r', 0x2e, 0x10e, 0x0],
        [0x1, 'r', 0x2a, 0x10e, 0x0],
        [0x1, 'r', 0x2d, 0x10e, 0x0],
        [0x1, 'r', 0x2c, 0x10d, 0x0],
        [0x1, 'r', 0x2b, 0x10d, 0x0],
        [0x1, 'r', 0x2a, 0x10d, 0x0],
        [0x1, 'r', 0x28, 0x10d, 0x0],
        [0x1, 'r', 0x29, 0x10d, 0x0],
        [0x1, 'r', 0x2d, 0x10f, 0x0],
        [0x1, 'r', 0x2c, 0x10f, 0x0],
        [0x1, 'r', 0x2b, 0x10f, 0x0],
        [0x1, 'r', 0x2a, 0x10f, 0x0],
        [0x1, 'r', 0x29, 0x10f, 0x0],
        [0x1, 'r', 0x28, 0x10f, 0x0],
        [0x1, 'r', 0x27, 0x10f, 0x0],
        [0x1, 'r', 0x2e, 0x10f, 0x0],
        [0x1, 'r', 0x2d, 0x110, 0x0],
        [0x1, 'r', 0x2c, 0x110, 0x0],
        [0x1, 'r', 0x2b, 0x110, 0x0],
        [0x1, 'r', 0x2a, 0x110, 0x0],
        [0x1, 'r', 0x13, 0x11c, 0x0],
        [0x1, 'r', 0x14, 0x11c, 0x0],
        [0x1, 'r', 0x15, 0x11d, 0x0],
        [0x1, 'r', 0x16, 0x11d, 0x0],
        [0x1, 'r', 0x17, 0x11e, 0x0],
        [0x1, 'r', 0x16, 0x120, 0x0],
        [0x1, 'r', 0x14, 0x120, 0x0],
        [0x1, 'r', 0x12, 0x120, 0x0],
        [0x1, 'r', 0x11, 0x11f, 0x0],
        [0x1, 'r', 0x10, 0x11f, 0x0],
        [0x1, 'r', 0x10, 0x11e, 0x0],
        [0x1, 'r', 0x11, 0x11e, 0x0],
        [0x1, 'r', 0x12, 0x11e, 0x0],
        [0x1, 'r', 0x13, 0x11e, 0x0],
        [0x1, 'r', 0x14, 0x11e, 0x0],
        [0x1, 'r', 0x15, 0x11e, 0x0],
        [0x1, 'r', 0x16, 0x11e, 0x0],
        [0x1, 'r', 0x14, 0x11d, 0x0],
        [0x1, 'r', 0x13, 0x11d, 0x0],
        [0x1, 'r', 0x12, 0x11d, 0x0],
        [0x1, 'r', 0x11, 0x11d, 0x0],
        [0x1, 'r', 0x13, 0x11f, 0x0],
        [0x1, 'r', 0x12, 0x11f, 0x0],
        [0x1, 'r', 0x14, 0x11f, 0x0],
        [0x1, 'r', 0x15, 0x11f, 0x0],
        [0x1, 'r', 0x16, 0x11f, 0x0],
        [0x1, 'r', 0x17, 0x11f, 0x0],
        [0x1, 'r', 0x15, 0x120, 0x0],
        [0x1, 'r', 0x13, 0x120, 0x0],
        [0x1, 'r', 0x11, 0x120, 0x0],
        [0x1, 'r', 0x13, 0x121, 0x0],
        [0x1, 'r', 0x15, 0x121, 0x0],
        [0x1, 'r', 0x16, 0x121, 0x0],
        [0x1, 'r', 0x14, 0x121, 0x0],
        [0x1, 'r', 0x17, 0x120, 0x0],
        [0x1, 'r', 0x18, 0x11f, 0x0],
        [0x1, 'r', 0x18, 0x11e, 0x0],
        [0x1, 'r', 0x17, 0x11d, 0x0],
        [0x1, 'r', 0x42, 0x11e, 0x0],
        [0x1, 'r', 0x40, 0x11f, 0x0],
        [0x1, 'r', 0x3f, 0x11f, 0x0],
        [0x1, 'r', 0x3c, 0x11f, 0x0],
        [0x1, 'r', 0x3b, 0x11d, 0x0],
        [0x1, 'r', 0x3a, 0x11c, 0x0],
        [0x1, 'r', 0x3b, 0x11b, 0x0],
        [0x1, 'r', 0x41, 0x11b, 0x0],
        [0x1, 'r', 0x40, 0x11b, 0x0],
        [0x1, 'r', 0x3f, 0x11b, 0x0],
        [0x1, 'r', 0x3e, 0x11b, 0x0],
        [0x1, 'r', 0x3d, 0x11b, 0x0],
        [0x1, 'r', 0x3c, 0x11b, 0x0],
        [0x1, 'r', 0x3b, 0x11c, 0x0],
        [0x1, 'r', 0x3a, 0x11d, 0x0],
        [0x1, 'r', 0x3c, 0x11e, 0x0],
        [0x1, 'r', 0x3b, 0x11e, 0x0],
        [0x1, 'r', 0x3d, 0x11f, 0x0],
        [0x1, 'r', 0x3e, 0x11f, 0x0],
        [0x1, 'r', 0x3d, 0x11e, 0x0],
        [0x1, 'r', 0x3e, 0x11e, 0x0],
        [0x1, 'r', 0x3f, 0x11e, 0x0],
        [0x1, 'r', 0x40, 0x11e, 0x0],
        [0x1, 'r', 0x41, 0x11e, 0x0],
        [0x1, 'r', 0x43, 0x11d, 0x0],
        [0x1, 'r', 0x42, 0x11d, 0x0],
        [0x1, 'r', 0x41, 0x11d, 0x0],
        [0x1, 'r', 0x40, 0x11d, 0x0],
        [0x1, 'r', 0x3f, 0x11d, 0x0],
        [0x1, 'r', 0x3e, 0x11d, 0x0],
        [0x1, 'r', 0x3d, 0x11d, 0x0],
        [0x1, 'r', 0x3c, 0x11d, 0x0],
        [0x1, 'r', 0x3c, 0x11c, 0x0],
        [0x1, 'r', 0x3d, 0x11c, 0x0],
        [0x1, 'r', 0x3e, 0x11c, 0x0],
        [0x1, 'r', 0x3f, 0x11c, 0x0],
        [0x1, 'r', 0x40, 0x11c, 0x0],
        [0x1, 'r', 0x41, 0x11c, 0x0],
        [0x1, 'r', 0x42, 0x11c, 0x0],
        [0x1, 'r', 0x41, 0x11f, 0x0],
        [0x1, 'r', 0x43, 0x11e, 0x0],
        [0x1, 'p', 0x0, 0xd, 0xbd, 0x1],
        [0x1, 'p', 0x0, 0x20, 0xb8, 0x1],
        [0x1, 'p', 0x0, 0x2f, 0xbf, 0x1],
        [0x1, 'p', 0x0, 0x40, 0xb8, 0x1],
        [0x1, 'p', 0x0, 0x54, 0xc0, 0x1],
        [0x1, 'p', 0x0, 0x4e, 0xcf, 0x1],
        [0x1, 'p', 0x0, 0x3a, 0xd8, 0x1],
        [0x1, 'p', 0x0, 0x29, 0xd3, 0x1],
        [0x1, 'p', 0x0, 0x12, 0xd3, 0x1],
        [0x1, 'p', 0x0, 0xe, 0xe6, 0x1],
        [0x1, 'p', 0x0, 0x1d, 0xed, 0x1],
        [0x1, 'p', 0x0, 0x32, 0xe6, 0x1],
        [0x1, 'p', 0x0, 0x4e, 0xf1, 0x1],
        [0x1, 'p', 0x0, 0x4a, 0x100, 0x1],
        [0x1, 'p', 0x0, 0x44, 0x10a, 0x1],
        [0x1, 'p', 0x0, 0x30, 0x103, 0x1],
        [0x1, 'p', 0x0, 0x1f, 0x107, 0x1],
        [0x1, 'p', 0x0, 0x12, 0x112, 0x1],
        [0x1, 'p', 0x0, 0x21, 0x11b, 0x1],
        [0x1, 'p', 0x0, 0x42, 0x11f, 0x1],
        [0x1, 'p', 0x0, 0x52, 0x123, 0x1],
        [0x1, 'p', 0x0, 0x10, 0x127, 0x1],
        [0x1, 'p', 0x0, 0x2d, 0x126, 0x1],
        [0x1, 'p', 0x0, 0x12, 0xfc, 0x1],
        [0x1, 'p', 0x0, 0x4f, 0xe3, 0x1],
        [0x1, 'p', 0x0, 0x20, 0xc8, 0x1],
        [0x1, 'p', 0x0, 0x40, 0xc8, 0x1],
        [0x1, 's', 0x0, 0x15, 0xc1, 0x1],
        [0x1, 's', 0x1, 0x12, 0xbd, 0x1],
        [0x1, 's', 0x2, 0x1a, 0xbd, 0x1],
        [0x1, 'b', 0x1, 0xf, 0xb5, 0x0],
        [0x1, 'b', 0x2, 0x12, 0xbe, 0x0],
        [0x1, 'b', 0x2, 0x1d, 0xc1, 0x0],
        [0x1, 't', 0x3, 0x10, 0xb6, 0x0],
        [0x1, 't', 0x3, 0xd, 0xc3, 0x0],
        [0x1, 't', 0x4, 0x10, 0xb7, 0x0],
        [0x1, 't', 0x5, 0xa, 0xb8, 0x0],
        [0x1, 't', 0x5, 0x17, 0xb6, 0x0],
        [0x1, 't', 0x4, 0x1e, 0xbb, 0x0],
        [0x1, 't', 0x1, 0x1a, 0xc0, 0x0],
        [0x1, 'b', 0x1, 0x19, 0xbc, 0x0],
        [0x1, 's', 0x1, 0x18, 0xb5, 0x1],
        [0x1, 't', 0x3, 0x21, 0xb7, 0x0],
        [0x1, 'b', 0x1, 0x24, 0xbd, 0x0],
        [0x1, 't', 0x2, 0x23, 0xbe, 0x0],
        [0x1, 'b', 0x3, 0x13, 0xc8, 0x0],
        [0x1, 's', 0x0, 0x1c, 0xc2, 0x1],
        [0x1, 's', 0x1, 0x20, 0xc4, 0x1],
        [0x1, 's', 0x1, 0x24, 0xb7, 0x1],
        [0x1, 's', 0x2, 0x26, 0xb8, 0x1],
        [0x1, 's', 0x2, 0xa, 0xc0, 0x1],
        [0x1, 's', 0x2, 0xc, 0xb7, 0x1],
        [0x1, 's', 0x1, 0xf, 0xc7, 0x1],
        [0x1, 'b', 0x0, 0xc, 0xca, 0x0],
        [0x1, 't', 0x2, 0xd, 0xcb, 0x0],
        [0x1, 't', 0x4, 0x14, 0xc8, 0x0],
        [0x1, 't', 0x4, 0xc, 0xc2, 0x0],
        [0x1, 't', 0x5, 0xf, 0xcd, 0x0],
        [0x1, 't', 0x5, 0x1d, 0xc8, 0x0],
        [0x1, 't', 0x3, 0x1c, 0xc9, 0x0],
        [0x1, 's', 0x2, 0x19, 0xc7, 0x1],
        [0x1, 's', 0x1, 0x16, 0xcc, 0x1],
        [0x1, 'g', 0x2, 0x19, 0xcd, 0x1],
        [0x1, 'b', 0x1, 0x1b, 0xd8, 0x0],
        [0x1, 's', 0x1, 0x19, 0xd9, 0x1],
        [0x1, 's', 0x1, 0x21, 0xd9, 0x1],
        [0x1, 's', 0x2, 0x23, 0xd7, 0x1],
        [0x1, 's', 0x0, 0x20, 0xdd, 0x1],
        [0x1, 't', 0x2, 0x1f, 0xde, 0x0],
        [0x1, 't', 0x4, 0x1a, 0xdd, 0x0],
        [0x1, 'b', 0x3, 0x1b, 0xde, 0x0],
        [0x1, 'b', 0x0, 0x11, 0xd9, 0x0],
        [0x1, 't', 0x3, 0x12, 0xd8, 0x0],
        [0x1, 't', 0x4, 0xd, 0xd7, 0x0],
        [0x1, 't', 0x5, 0x1e, 0xd5, 0x0],
        [0x1, 't', 0x5, 0x18, 0xd0, 0x0],
        [0x1, 's', 0x1, 0xc, 0xd8, 0x1],
        [0x1, 's', 0x2, 0xb, 0xd2, 0x1],
        [0x1, 's', 0x2, 0x22, 0xdf, 0x1],
        [0x1, 'b', 0x2, 0x24, 0xda, 0x0],
        [0x1, 't', 0x4, 0x28, 0xce, 0x0],
        [0x1, 't', 0x5, 0x23, 0xcb, 0x0],
        [0x1, 't', 0x3, 0x27, 0xce, 0x0],
        [0x1, 'b', 0x1, 0x22, 0xcc, 0x0],
        [0x1, 's', 0x1, 0x21, 0xce, 0x1],
        [0x1, 's', 0x1, 0x2a, 0xcb, 0x1],
        [0x1, 's', 0x0, 0x2f, 0xc4, 0x1],
        [0x1, 'b', 0x2, 0x28, 0xc4, 0x0],
        [0x1, 't', 0x4, 0x27, 0xc5, 0x0],
        [0x1, 't', 0x5, 0x2c, 0xbb, 0x0],
        [0x1, 'b', 0x1, 0x2e, 0xb5, 0x0],
        [0x1, 't', 0x2, 0x2f, 0xb6, 0x0],
        [0x1, 'b', 0x0, 0x39, 0xb6, 0x0],
        [0x1, 'b', 0x3, 0x38, 0xb7, 0x0],
        [0x1, 't', 0x4, 0x37, 0xb8, 0x0],
        [0x1, 't', 0x5, 0x3e, 0xc3, 0x0],
        [0x1, 's', 0x1, 0x33, 0xb9, 0x1],
        [0x1, 's', 0x2, 0x3e, 0xb4, 0x1],
        [0x1, 's', 0x2, 0x3d, 0xbc, 0x1],
        [0x1, 's', 0x1, 0x3d, 0xbd, 0x1],
        [0x1, 's', 0x2, 0x30, 0xc3, 0x1],
        [0x1, 'b', 0x1, 0x33, 0xc7, 0x0],
        [0x1, 't', 0x2, 0x34, 0xc7, 0x0],
        [0x1, 't', 0x3, 0x38, 0xcc, 0x0],
        [0x1, 't', 0x4, 0x39, 0xcc, 0x0],
        [0x1, 't', 0x4, 0x33, 0xcc, 0x0],
        [0x1, 's', 0x1, 0x34, 0xcd, 0x1],
        [0x1, 's', 0x2, 0x39, 0xc8, 0x1],
        [0x1, 's', 0x1, 0x38, 0xc7, 0x1],
        [0x1, 'b', 0x0, 0x37, 0xc0, 0x0],
        [0x1, 't', 0x3, 0x38, 0xc1, 0x0],
        [0x1, 't', 0x4, 0x32, 0xbe, 0x0],
        [0x1, 'b', 0x1, 0x4c, 0xbc, 0x0],
        [0x1, 't', 0x2, 0x4b, 0xbc, 0x0],
        [0x1, 't', 0x2, 0x49, 0xc0, 0x0],
        [0x1, 't', 0x4, 0x48, 0xbf, 0x0],
        [0x1, 't', 0x5, 0x4e, 0xc1, 0x0],
        [0x1, 'b', 0x0, 0x4f, 0xc0, 0x0],
        [0x1, 's', 0x2, 0x4f, 0xbe, 0x1],
        [0x1, 's', 0x1, 0x4a, 0xc2, 0x1],
        [0x1, 's', 0x1, 0x48, 0xbb, 0x1],
        [0x1, 's', 0x0, 0x4a, 0xb7, 0x1],
        [0x1, 's', 0x1, 0x4b, 0xb7, 0x1],
        [0x1, 't', 0x2, 0x45, 0xb5, 0x0],
        [0x1, 't', 0x4, 0x46, 0xb6, 0x0],
        [0x1, 't', 0x5, 0x45, 0xb4, 0x0],
        [0x1, 'b', 0x1, 0x41, 0xbd, 0x0],
        [0x1, 'b', 0x2, 0x42, 0xbd, 0x0],
        [0x1, 't', 0x3, 0x40, 0xbc, 0x0],
        [0x1, 't', 0x4, 0x43, 0xc0, 0x0],
        [0x1, 'b', 0x2, 0x55, 0xb7, 0x0],
        [0x1, 't', 0x1, 0x54, 0xb8, 0x0],
        [0x1, 't', 0x4, 0x51, 0xb4, 0x0],
        [0x1, 't', 0x5, 0x59, 0xb4, 0x0],
        [0x1, 't', 0x0, 0x5a, 0xbc, 0x0],
        [0x1, 't', 0x3, 0x59, 0xbe, 0x0],
        [0x1, 's', 0x1, 0x57, 0xbb, 0x1],
        [0x1, 's', 0x2, 0x57, 0xc5, 0x1],
        [0x1, 'b', 0x1, 0x54, 0xc8, 0x0],
        [0x1, 't', 0x2, 0x53, 0xc9, 0x0],
        [0x1, 't', 0x4, 0x57, 0xcf, 0x0],
        [0x1, 's', 0x2, 0x4f, 0xca, 0x1],
        [0x1, 's', 0x1, 0x50, 0xcb, 0x1],
        [0x1, 't', 0x0, 0x47, 0xc8, 0x0],
        [0x1, 'b', 0x2, 0x48, 0xc9, 0x0],
        [0x1, 't', 0x2, 0x41, 0xcd, 0x0],
        [0x1, 't', 0x1, 0x42, 0xce, 0x0],
        [0x1, 't', 0x4, 0x3f, 0xd1, 0x0],
        [0x1, 't', 0x5, 0x49, 0xcb, 0x0],
        [0x1, 's', 0x0, 0x46, 0xcf, 0x1],
        [0x1, 's', 0x1, 0x47, 0xce, 0x1],
        [0x1, 's', 0x2, 0x44, 0xc7, 0x1],
        [0x1, 's', 0x1, 0x40, 0xd5, 0x1],
        [0x1, 't', 0x0, 0x55, 0xd5, 0x0],
        [0x1, 'b', 0x2, 0x54, 0xd4, 0x0],
        [0x1, 't', 0x3, 0x4d, 0xd1, 0x0],
        [0x1, 't', 0x4, 0x53, 0xd8, 0x0],
        [0x1, 't', 0x4, 0x49, 0xd1, 0x0],
        [0x1, 'b', 0x0, 0x56, 0xde, 0x0],
        [0x1, 'b', 0x3, 0x57, 0xdd, 0x0],
        [0x1, 's', 0x1, 0x50, 0xd6, 0x1],
        [0x1, 's', 0x2, 0x57, 0xd8, 0x1],
        [0x1, 's', 0x2, 0x54, 0xe0, 0x1],
        [0x1, 's', 0x1, 0x4d, 0xe3, 0x1],
        [0x1, 't', 0x1, 0x4a, 0xde, 0x0],
        [0x1, 'b', 0x1, 0x45, 0xda, 0x0],
        [0x1, 'b', 0x2, 0x4b, 0xdb, 0x0],
        [0x1, 's', 0x2, 0x4a, 0xda, 0x1],
        [0x1, 's', 0x1, 0x45, 0xdf, 0x1],
        [0x1, 's', 0x1, 0x4d, 0xdd, 0x1],
        [0x1, 'b', 0x1, 0x48, 0xd3, 0x0],
        [0x1, 'b', 0x1, 0x55, 0xe8, 0x0],
        [0x1, 't', 0x2, 0x54, 0xe9, 0x0],
        [0x1, 't', 0x2, 0x4e, 0xee, 0x0],
        [0x1, 'b', 0x1, 0x4d, 0xed, 0x0],
        [0x1, 't', 0x5, 0x57, 0xec, 0x0],
        [0x1, 't', 0x5, 0x4c, 0xe5, 0x0],
        [0x1, 'b', 0x2, 0x4a, 0xf1, 0x0],
        [0x1, 's', 0x0, 0x49, 0xf2, 0x1],
        [0x1, 's', 0x0, 0x51, 0xee, 0x1],
        [0x1, 's', 0x1, 0x52, 0xed, 0x1],
        [0x1, 's', 0x2, 0x48, 0xed, 0x1],
        [0x1, 's', 0x2, 0x4e, 0xf2, 0x1],
        [0x1, 'b', 0x1, 0x42, 0xe6, 0x0],
        [0x1, 'b', 0x2, 0x3e, 0xe5, 0x0],
        [0x1, 't', 0x4, 0x43, 0xe7, 0x0],
        [0x1, 't', 0x4, 0x3e, 0xe4, 0x0],
        [0x1, 't', 0x5, 0x40, 0xe9, 0x0],
        [0x1, 't', 0x2, 0x41, 0xea, 0x0],
        [0x1, 't', 0x2, 0x33, 0xdc, 0x0],
        [0x1, 't', 0x1, 0x32, 0xda, 0x0],
        [0x1, 'b', 0x1, 0x2d, 0xdf, 0x0],
        [0x1, 'b', 0x2, 0x2e, 0xe0, 0x0],
        [0x1, 't', 0x4, 0x31, 0xda, 0x0],
        [0x1, 't', 0x4, 0x2f, 0xe1, 0x0],
        [0x1, 's', 0x1, 0x32, 0xd7, 0x1],
        [0x1, 's', 0x2, 0x33, 0xd5, 0x1],
        [0x1, 's', 0x2, 0x2a, 0xe3, 0x1],
        [0x1, 's', 0x1, 0x2c, 0xe3, 0x1],
        [0x1, 's', 0x1, 0x3c, 0xe6, 0x1],
        [0x1, 's', 0x2, 0x3b, 0xe7, 0x1],
        [0x1, 'b', 0x1, 0x55, 0xfc, 0x0],
        [0x1, 't', 0x2, 0x54, 0xfb, 0x0],
        [0x1, 't', 0x2, 0x4a, 0xfa, 0x0],
        [0x1, 't', 0x0, 0x4b, 0xfb, 0x0],
        [0x1, 'b', 0x0, 0x53, 0xf6, 0x0],
        [0x1, 't', 0x3, 0x52, 0xf7, 0x0],
        [0x1, 't', 0x4, 0x51, 0x103, 0x0],
        [0x1, 't', 0x4, 0x45, 0xf9, 0x0],
        [0x1, 't', 0x5, 0x57, 0xf6, 0x0],
        [0x1, 't', 0x5, 0x4b, 0xfc, 0x0],
        [0x1, 's', 0x1, 0x4f, 0x101, 0x1],
        [0x1, 's', 0x2, 0x4e, 0xf9, 0x1],
        [0x1, 's', 0x2, 0x50, 0x102, 0x1],
        [0x1, 's', 0x1, 0x58, 0xfe, 0x1],
        [0x1, 's', 0x1, 0x55, 0x108, 0x1],
        [0x1, 's', 0x2, 0x59, 0x107, 0x1],
        [0x1, 's', 0x2, 0x57, 0x10d, 0x1],
        [0x1, 's', 0x0, 0x54, 0x10c, 0x1],
        [0x1, 's', 0x2, 0x4c, 0x10b, 0x1],
        [0x1, 's', 0x1, 0x42, 0x105, 0x1],
        [0x1, 's', 0x1, 0x57, 0x112, 0x1],
        [0x1, 's', 0x1, 0x4c, 0x107, 0x1],
        [0x1, 's', 0x1, 0x3b, 0xfb, 0x1],
        [0x1, 's', 0x0, 0x3b, 0xfc, 0x1],
        [0x1, 't', 0x2, 0x56, 0x109, 0x0],
        [0x1, 't', 0x0, 0x4e, 0x10e, 0x0],
        [0x1, 't', 0x2, 0x4f, 0x10f, 0x0],
        [0x1, 't', 0x0, 0x4d, 0x104, 0x0],
        [0x1, 't', 0x3, 0x4e, 0x105, 0x0],
        [0x1, 'b', 0x1, 0x47, 0x108, 0x0],
        [0x1, 'b', 0x1, 0x58, 0x10d, 0x0],
        [0x1, 't', 0x5, 0x54, 0x108, 0x0],
        [0x1, 't', 0x5, 0x4f, 0x105, 0x0],
        [0x1, 't', 0x5, 0x48, 0x109, 0x0],
        [0x1, 't', 0x5, 0x4d, 0x10e, 0x0],
        [0x1, 't', 0x0, 0x57, 0x105, 0x0],
        [0x1, 't', 0x2, 0x56, 0x104, 0x0],
        [0x1, 't', 0x4, 0x54, 0xff, 0x0],
        [0x1, 't', 0x4, 0x44, 0xff, 0x0],
        [0x1, 't', 0x1, 0x43, 0xfe, 0x0],
        [0x1, 't', 0x2, 0x41, 0x106, 0x0],
        [0x1, 't', 0x1, 0x39, 0x104, 0x0],
        [0x1, 't', 0x2, 0x3a, 0x103, 0x0],
        [0x1, 'b', 0x1, 0x3f, 0x100, 0x0],
        [0x1, 'b', 0x1, 0x34, 0xf8, 0x0],
        [0x1, 't', 0x2, 0x35, 0xf8, 0x0],
        [0x1, 's', 0x1, 0x32, 0xfd, 0x1],
        [0x1, 's', 0x2, 0x43, 0x107, 0x1],
        [0x1, 's', 0x2, 0x34, 0xfc, 0x1],
        [0x1, 's', 0x2, 0x47, 0xf4, 0x1],
        [0x1, 'b', 0x0, 0x39, 0xf5, 0x0],
        [0x1, 't', 0x2, 0x3a, 0xf4, 0x0],
        [0x1, 'b', 0x1, 0x35, 0xed, 0x0],
        [0x1, 't', 0x2, 0x36, 0xed, 0x0],
        [0x1, 't', 0x2, 0x29, 0xee, 0x0],
        [0x1, 't', 0x1, 0x2a, 0xed, 0x0],
        [0x1, 't', 0x5, 0x39, 0xeb, 0x0],
        [0x1, 't', 0x5, 0x3c, 0xf6, 0x0],
        [0x1, 't', 0x5, 0x32, 0xfc, 0x0],
        [0x1, 't', 0x1, 0x2a, 0xf8, 0x0],
        [0x1, 'b', 0x1, 0x2b, 0xf9, 0x0],
        [0x1, 'b', 0x3, 0x25, 0xf3, 0x0],
        [0x1, 's', 0x0, 0x32, 0xec, 0x1],
        [0x1, 's', 0x2, 0x27, 0xf7, 0x1],
        [0x1, 's', 0x2, 0x33, 0xeb, 0x1],
        [0x1, 's', 0x2, 0x3c, 0xf3, 0x1],
        [0x1, 's', 0x2, 0x24, 0xf0, 0x1],
        [0x1, 's', 0x2, 0x2b, 0xfe, 0x1],
        [0x1, 's', 0x1, 0x2a, 0xfe, 0x1],
        [0x1, 't', 0x1, 0x26, 0xe9, 0x0],
        [0x1, 't', 0x2, 0x23, 0xeb, 0x0],
        [0x1, 't', 0x4, 0x21, 0xe4, 0x0],
        [0x1, 't', 0x4, 0x21, 0xf5, 0x0],
        [0x1, 't', 0x4, 0x2b, 0xeb, 0x0],
        [0x1, 't', 0x5, 0x2d, 0xf9, 0x0],
        [0x1, 't', 0x5, 0x29, 0xfd, 0x0],
        [0x1, 'b', 0x1, 0x14, 0xe3, 0x0],
        [0x1, 'b', 0x1, 0xe, 0xf0, 0x0],
        [0x1, 't', 0x3, 0x15, 0xe3, 0x0],
        [0x1, 't', 0x3, 0x1b, 0xea, 0x0],
        [0x1, 't', 0x3, 0xf, 0xf1, 0x0],
        [0x1, 't', 0x3, 0xc, 0xe5, 0x0],
        [0x1, 't', 0x4, 0x11, 0xe0, 0x0],
        [0x1, 't', 0x4, 0xb, 0xe7, 0x0],
        [0x1, 't', 0x4, 0x16, 0xee, 0x0],
        [0x1, 't', 0x4, 0xb, 0xef, 0x0],
        [0x1, 't', 0x1, 0x16, 0xf3, 0x0],
        [0x1, 'b', 0x2, 0x17, 0xf2, 0x0],
        [0x1, 's', 0x1, 0x17, 0xee, 0x1],
        [0x1, 's', 0x1, 0x16, 0xe4, 0x1],
        [0x1, 's', 0x2, 0x18, 0xe4, 0x1],
        [0x1, 's', 0x2, 0x15, 0xec, 0x1],
        [0x1, 's', 0x0, 0xd, 0xe4, 0x1],
        [0x1, 's', 0x0, 0x10, 0xf2, 0x1],
        [0x1, 's', 0x1, 0xf, 0xf4, 0x1],
        [0x1, 's', 0x1, 0x22, 0xec, 0x1],
        [0x1, 't', 0x1, 0x1a, 0xf9, 0x0],
        [0x1, 't', 0x1, 0x16, 0x100, 0x0],
        [0x1, 't', 0x2, 0x17, 0xff, 0x0],
        [0x1, 'b', 0x1, 0x11, 0x100, 0x0],
        [0x1, 'b', 0x2, 0x12, 0x100, 0x0],
        [0x1, 's', 0x0, 0x15, 0xfc, 0x1],
        [0x1, 's', 0x2, 0x14, 0xfa, 0x1],
        [0x1, 's', 0x2, 0x17, 0x103, 0x1],
        [0x1, 's', 0x1, 0xd, 0x101, 0x1],
        [0x1, 't', 0x1, 0x1f, 0xfe, 0x0],
        [0x1, 't', 0x2, 0x20, 0xfe, 0x0],
        [0x1, 't', 0x4, 0x1c, 0xfe, 0x0],
        [0x1, 't', 0x4, 0x22, 0x102, 0x0],
        [0x1, 't', 0x0, 0x1d, 0x104, 0x0],
        [0x1, 'b', 0x2, 0x1e, 0x105, 0x0],
        [0x1, 't', 0x0, 0x2b, 0x106, 0x0],
        [0x1, 't', 0x2, 0x2a, 0x107, 0x0],
        [0x1, 't', 0x4, 0x2e, 0x108, 0x0],
        [0x1, 'b', 0x1, 0x27, 0x109, 0x0],
        [0x1, 'b', 0x1, 0x3a, 0x10b, 0x0],
        [0x1, 't', 0x2, 0x39, 0x10c, 0x0],
        [0x1, 't', 0x4, 0x3e, 0x10e, 0x0],
        [0x1, 't', 0x5, 0x34, 0x111, 0x0],
        [0x1, 's', 0x1, 0x34, 0x10d, 0x1],
        [0x1, 's', 0x1, 0x29, 0x110, 0x1],
        [0x1, 's', 0x2, 0x29, 0x112, 0x1],
        [0x1, 't', 0x2, 0x2a, 0x10c, 0x0],
        [0x1, 't', 0x0, 0x2b, 0x10c, 0x0],
        [0x1, 'b', 0x1, 0x2e, 0x110, 0x0],
        [0x1, 'b', 0x1, 0xe, 0x109, 0x0],
        [0x1, 't', 0x2, 0xf, 0x10a, 0x0],
        [0x1, 't', 0x4, 0x13, 0x108, 0x0],
        [0x1, 't', 0x4, 0x1d, 0x107, 0x0],
        [0x1, 't', 0x4, 0xb, 0x10d, 0x0],
        [0x1, 't', 0x1, 0x1d, 0x10f, 0x0],
        [0x1, 'b', 0x2, 0x1c, 0x110, 0x0],
        [0x1, 't', 0x2, 0x18, 0x10b, 0x0],
        [0x1, 't', 0x2, 0x14, 0x117, 0x0],
        [0x1, 't', 0x0, 0x13, 0x116, 0x0],
        [0x1, 't', 0x3, 0xd, 0x116, 0x0],
        [0x1, 'b', 0x0, 0x15, 0x11c, 0x0],
        [0x1, 'b', 0x0, 0x12, 0x121, 0x0],
        [0x1, 't', 0x2, 0x14, 0x11b, 0x0],
        [0x1, 't', 0x2, 0x13, 0x122, 0x0],
        [0x1, 't', 0x4, 0x13, 0x11b, 0x0],
        [0x1, 't', 0x4, 0x14, 0x122, 0x0],
        [0x1, 's', 0x1, 0x10, 0x11d, 0x1],
        [0x1, 's', 0x1, 0x18, 0x120, 0x1],
        [0x1, 's', 0x2, 0x1a, 0x11f, 0x1],
        [0x1, 's', 0x2, 0x10, 0x116, 0x1],
        [0x1, 's', 0x1, 0x15, 0x10c, 0x1],
        [0x1, 's', 0x2, 0x13, 0x10c, 0x1],
        [0x1, 't', 0x0, 0xc, 0x126, 0x0],
        [0x1, 'b', 0x1, 0xd, 0x127, 0x0],
        [0x1, 't', 0x3, 0xd, 0x123, 0x0],
        [0x1, 't', 0x3, 0xa, 0x12b, 0x0],
        [0x1, 't', 0x4, 0xb, 0x11f, 0x0],
        [0x1, 't', 0x4, 0x11, 0x12a, 0x0],
        [0x1, 't', 0x1, 0x1b, 0x126, 0x0],
        [0x1, 'b', 0x2, 0x1a, 0x127, 0x0],
        [0x1, 't', 0x3, 0x21, 0x129, 0x0],
        [0x1, 'b', 0x1, 0x30, 0x116, 0x0],
        [0x1, 'b', 0x0, 0x2e, 0x118, 0x0],
        [0x1, 'b', 0x2, 0x32, 0x118, 0x0],
        [0x1, 't', 0x0, 0x2c, 0x11a, 0x0],
        [0x1, 'b', 0x1, 0x31, 0x11b, 0x0],
        [0x1, 'b', 0x0, 0x33, 0x116, 0x0],
        [0x1, 'b', 0x3, 0x32, 0x117, 0x0],
        [0x1, 'b', 0x3, 0x2c, 0x11c, 0x0],
        [0x1, 'b', 0x0, 0x2f, 0x11c, 0x0],
        [0x1, 'b', 0x2, 0x2a, 0x11b, 0x0],
        [0x1, 't', 0x4, 0x33, 0x115, 0x0],
        [0x1, 'b', 0x1, 0x2c, 0x11e, 0x0],
        [0x1, 'b', 0x2, 0x2e, 0x11e, 0x0],
        [0x1, 'b', 0x1, 0x2a, 0x11d, 0x0],
        [0x1, 'b', 0x3, 0x29, 0x11e, 0x0],
        [0x1, 't', 0x5, 0x2a, 0x11f, 0x0],
        [0x1, 'b', 0x1, 0x2a, 0x116, 0x0],
        [0x1, 'b', 0x2, 0x2b, 0x117, 0x0],
        [0x1, 'b', 0x0, 0x28, 0x118, 0x0],
        [0x1, 't', 0x4, 0x27, 0x11b, 0x0],
        [0x1, 't', 0x4, 0x27, 0x117, 0x0],
        [0x1, 't', 0x5, 0x2b, 0x115, 0x0],
        [0x1, 't', 0x5, 0x2f, 0x11f, 0x0],
        [0x1, 't', 0x4, 0x2e, 0x115, 0x0],
        [0x1, 't', 0x4, 0x2d, 0x122, 0x0],
        [0x1, 't', 0x4, 0x24, 0x11d, 0x0],
        [0x1, 't', 0x3, 0x23, 0x11c, 0x0],
        [0x1, 't', 0x3, 0x24, 0x110, 0x0],
        [0x1, 't', 0x4, 0x23, 0x10f, 0x0],
        [0x1, 't', 0x1, 0x1d, 0x117, 0x0],
        [0x1, 'b', 0x1, 0x20, 0x115, 0x0],
        [0x1, 't', 0x3, 0x1f, 0x116, 0x0],
        [0x1, 'b', 0x2, 0x1c, 0x118, 0x0],
        [0x1, 't', 0x4, 0x1d, 0x11e, 0x0],
        [0x1, 't', 0x5, 0x1c, 0x113, 0x0],
        [0x1, 't', 0x3, 0x25, 0x124, 0x0],
        [0x1, 'b', 0x1, 0x24, 0x123, 0x0],
        [0x1, 'b', 0x0, 0x22, 0x12a, 0x0],
        [0x1, 't', 0x4, 0x1f, 0x124, 0x0],
        [0x1, 't', 0x4, 0x2e, 0x127, 0x0],
        [0x1, 't', 0x4, 0x3b, 0x11f, 0x0],
        [0x1, 'b', 0x1, 0x3a, 0x11e, 0x0],
        [0x1, 's', 0x1, 0x44, 0x11c, 0x1],
        [0x1, 's', 0x2, 0x46, 0x11e, 0x1],
        [0x1, 's', 0x0, 0x43, 0x11c, 0x1],
        [0x1, 't', 0x3, 0x42, 0x11b, 0x0],
        [0x1, 't', 0x1, 0x41, 0x11a, 0x0],
        [0x1, 'b', 0x1, 0x40, 0x120, 0x0],
        [0x1, 't', 0x3, 0x3c, 0x125, 0x0],
        [0x1, 't', 0x1, 0x3d, 0x126, 0x0],
        [0x1, 'b', 0x1, 0x4c, 0x126, 0x0],
        [0x1, 't', 0x5, 0x4b, 0x127, 0x0],
        [0x1, 't', 0x5, 0x38, 0x125, 0x0],
        [0x1, 't', 0x5, 0x3b, 0x119, 0x0],
        [0x1, 't', 0x5, 0x43, 0x123, 0x0],
        [0x1, 'b', 0x0, 0x58, 0x125, 0x0],
        [0x1, 't', 0x2, 0x59, 0x124, 0x0],
        [0x1, 't', 0x2, 0x55, 0x11e, 0x0],
        [0x1, 't', 0x4, 0x58, 0x121, 0x0],
        [0x1, 't', 0x4, 0x4f, 0x11f, 0x0],
        [0x1, 'b', 0x1, 0x54, 0x11d, 0x0],
        [0x1, 't', 0x3, 0x4b, 0x11c, 0x0],
        [0x1, 'b', 0x0, 0x4b, 0x116, 0x0],
        [0x1, 't', 0x3, 0x4a, 0x115, 0x0],
        [0x1, 't', 0x4, 0x51, 0x114, 0x0],
        [0x1, 't', 0x2, 0x41, 0x114, 0x0],
        [0x1, 'b', 0x1, 0x42, 0x113, 0x0],
        [0x1, 'g', 0x0, 0x2d, 0x105, 0x1],
        [0x1, 'g', 0x1, 0x27, 0x102, 0x1],
        [0x1, 'g', 0x0, 0x23, 0xfa, 0x1],
        [0x1, 'g', 0x2, 0x16, 0xf7, 0x1],
        [0x1, 'g', 0x2, 0x1b, 0xe3, 0x1],
        [0x1, 'g', 0x2, 0x3f, 0xda, 0x1],
        [0x1, 'g', 0x1, 0x38, 0xe0, 0x1],
        [0x1, 'g', 0x0, 0x2e, 0xe7, 0x1],
        [0x1, 'g', 0x1, 0x41, 0xf0, 0x1],
        [0x1, 'g', 0x2, 0x43, 0xee, 0x1],
        [0x1, 'g', 0x2, 0x4f, 0xe8, 0x1],
        [0x1, 'g', 0x2, 0x48, 0xfd, 0x1],
        [0x1, 'g', 0x2, 0x3e, 0x108, 0x1],
        [0x1, 'g', 0x2, 0x1c, 0x10b, 0x1],
        [0x1, 'g', 0x2, 0x3a, 0x112, 0x1],
        [0x1, 'de', 0x2, 0xe, 0xb6, 0x0],
        [0x1, 'de', 0x2, 0x18, 0xb6, 0x0],
        [0x1, 'de', 0x0, 0xb, 0xb9, 0x0],
        [0x1, 'de', 0x0, 0xe, 0xc2, 0x0],
        [0x1, 'de', 0x1, 0x19, 0xc4, 0x0],
        [0x1, 'de', 0x3, 0x1f, 0xb7, 0x0],
        [0x1, 'de', 0x0, 0x26, 0xb5, 0x0],
        [0x1, 'de', 0x2, 0x2d, 0xba, 0x0],
        [0x1, 'de', 0x1, 0x26, 0xbf, 0x0],
        [0x1, 'de', 0x0, 0x38, 0xb5, 0x0],
        [0x1, 'de', 0x1, 0x44, 0xb6, 0x0],
        [0x1, 'de', 0x2, 0x50, 0xb5, 0x0],
        [0x1, 'de', 0x3, 0x56, 0xbb, 0x0],
        [0x1, 'de', 0x0, 0x54, 0xc1, 0x0],
        [0x1, 'de', 0x1, 0x52, 0xc9, 0x0],
        [0x1, 'de', 0x2, 0x40, 0xbf, 0x0],
        [0x1, 'de', 0x2, 0x48, 0xc8, 0x0],
        [0x1, 'de', 0x3, 0x40, 0xc9, 0x0],
        [0x1, 'de', 0x2, 0x4c, 0xd1, 0x0],
        [0x1, 'de', 0x3, 0x47, 0xd4, 0x0],
        [0x1, 'de', 0x1, 0x56, 0xd6, 0x0],
        [0x1, 'de', 0x0, 0x39, 0xd0, 0x0],
        [0x1, 'de', 0x0, 0x29, 0xcb, 0x0],
        [0x1, 'de', 0x1, 0xf, 0xce, 0x0],
        [0x1, 'de', 0x2, 0x19, 0xd1, 0x0],
        [0x1, 'de', 0x3, 0x10, 0xda, 0x0],
        [0x1, 'de', 0x3, 0xb, 0xe3, 0x0],
        [0x1, 'de', 0x0, 0x16, 0xe5, 0x0],
        [0x1, 'de', 0x1, 0xf, 0xef, 0x0],
        [0x1, 'de', 0x2, 0x18, 0xee, 0x0],
        [0x1, 'de', 0x3, 0x16, 0xf6, 0x0],
        [0x1, 'de', 0x3, 0xa, 0xfd, 0x0],
        [0x1, 'de', 0x1, 0x12, 0x102, 0x0],
        [0x1, 'de', 0x1, 0x1c, 0x105, 0x0],
        [0x1, 'de', 0x1, 0xe, 0x10b, 0x0],
        [0x1, 'de', 0x0, 0x18, 0x10c, 0x0],
        [0x1, 'de', 0x0, 0xf, 0x116, 0x0],
        [0x1, 'de', 0x2, 0x15, 0x117, 0x0],
        [0x1, 'de', 0x2, 0x1e, 0x110, 0x0],
        [0x1, 'de', 0x2, 0x1d, 0x119, 0x0],
        [0x1, 'de', 0x2, 0xf, 0x11c, 0x0],
        [0x1, 'de', 0x3, 0xc, 0x123, 0x0],
        [0x1, 'de', 0x3, 0x1e, 0x11f, 0x0],
        [0x1, 'de', 0x3, 0x1b, 0x125, 0x0],
        [0x1, 'de', 0x0, 0x19, 0x128, 0x0],
        [0x1, 'de', 0x0, 0xb, 0x12a, 0x0],
        [0x1, 'de', 0x0, 0x8, 0x11e, 0x0],
        [0x1, 'de', 0x2, 0x24, 0x12b, 0x0],
        [0x1, 'de', 0x2, 0x25, 0x118, 0x0],
        [0x1, 'de', 0x3, 0x26, 0x123, 0x0],
        [0x1, 'de', 0x1, 0x30, 0x11f, 0x0],
        [0x1, 'de', 0x1, 0x2e, 0x115, 0x0],
        [0x1, 'de', 0x1, 0x35, 0x116, 0x0],
        [0x1, 'de', 0x3, 0x30, 0x127, 0x0],
        [0x1, 'de', 0x0, 0x39, 0x126, 0x0],
        [0x1, 'de', 0x1, 0x41, 0x122, 0x0],
        [0x1, 'de', 0x1, 0x54, 0x124, 0x0],
        [0x1, 'de', 0x2, 0x4d, 0x127, 0x0],
        [0x1, 'de', 0x2, 0x54, 0x11f, 0x0],
        [0x1, 'de', 0x0, 0x4a, 0x117, 0x0],
        [0x1, 'de', 0x3, 0x41, 0x112, 0x0],
        [0x1, 'de', 0x2, 0x47, 0x10b, 0x0],
        [0x1, 'de', 0x2, 0x41, 0x105, 0x0],
        [0x1, 'de', 0x2, 0x2f, 0x108, 0x0],
        [0x1, 'de', 0x3, 0x2f, 0x102, 0x0],
        [0x1, 'de', 0x3, 0x35, 0xfb, 0x0],
        [0x1, 'de', 0x2, 0x28, 0xfd, 0x0],
        [0x1, 'de', 0x0, 0x23, 0xf4, 0x0],
        [0x1, 'de', 0x0, 0x25, 0xe9, 0x0],
        [0x1, 'de', 0x3, 0x2c, 0xe2, 0x0],
        [0x1, 'de', 0x2, 0x25, 0xdb, 0x0],
        [0x1, 'de', 0x2, 0x36, 0xea, 0x0],
        [0x1, 'de', 0x1, 0x42, 0xea, 0x0],
        [0x1, 'de', 0x2, 0x41, 0xf1, 0x0],
        [0x1, 'de', 0x0, 0x44, 0xf9, 0x0],
        [0x1, 'de', 0x3, 0x4e, 0x101, 0x0],
        [0x1, 'de', 0x2, 0x56, 0xfd, 0x0],
        [0x1, 'de', 0x2, 0x53, 0xf5, 0x0],
        [0x1, 'de', 0x1, 0x52, 0xee, 0x0],
        [0x1, 'de', 0x3, 0x4c, 0xeb, 0x0],
        [0x1, 'de', 0x2, 0x56, 0xe8, 0x0],
        [0x1, 'de', 0x0, 0x56, 0xe0, 0x0],
        [0x1, 'de', 0x2, 0x4c, 0xe2, 0x0],
        [0x1, 'de', 0x2, 0x3d, 0xe4, 0x0],
        [0x1, 'de', 0x2, 0x3a, 0xd9, 0x0],
        [0x1, 'de', 0x0, 0x31, 0xd9, 0x0],
        [0x1, 'de', 0x13, 0xb, 0xb3, 0x0],
        [0x1, 'de', 0x14, 0x11, 0xb4, 0x0],
        [0x1, 'de', 0x16, 0x12, 0xb5, 0x0],
        [0x1, 'de', 0x13, 0x1e, 0xb8, 0x0],
        [0x1, 'de', 0x13, 0x1b, 0xbb, 0x0],
        [0x1, 'de', 0x13, 0x1e, 0xc3, 0x0],
        [0x1, 'de', 0x13, 0x12, 0xc0, 0x0],
        [0x1, 'de', 0x13, 0x2c, 0xb6, 0x0],
        [0x1, 'de', 0x13, 0x31, 0xb6, 0x0],
        [0x1, 'de', 0x13, 0x36, 0xb6, 0x0],
        [0x1, 'de', 0x13, 0x3b, 0xb7, 0x0],
        [0x1, 'de', 0x13, 0x38, 0xba, 0x0],
        [0x1, 'de', 0x13, 0x2e, 0xbc, 0x0],
        [0x1, 'de', 0x13, 0x3a, 0xc1, 0x0],
        [0x1, 'de', 0x13, 0x43, 0xbb, 0x0],
        [0x1, 'de', 0x13, 0x41, 0xc0, 0x0],
        [0x1, 'de', 0x13, 0x47, 0xb4, 0x0],
        [0x1, 'de', 0x13, 0x4e, 0xbb, 0x0],
        [0x1, 'de', 0x13, 0x50, 0xc2, 0x0],
        [0x1, 'de', 0x13, 0x48, 0xc1, 0x0],
        [0x1, 'de', 0x13, 0x52, 0xb6, 0x0],
        [0x1, 'de', 0x13, 0x58, 0xb9, 0x0],
        [0x1, 'de', 0x13, 0x57, 0xbd, 0x0],
        [0x1, 'de', 0x13, 0x56, 0xc5, 0x0],
        [0x1, 'de', 0x13, 0x55, 0xcb, 0x0],
        [0x1, 'de', 0x13, 0x4a, 0xc8, 0x0],
        [0x1, 'de', 0x13, 0x46, 0xca, 0x0],
        [0x1, 'de', 0x13, 0x53, 0xc7, 0x0],
        [0x1, 'de', 0x13, 0x56, 0xd0, 0x0],
        [0x1, 'de', 0x13, 0x54, 0xd6, 0x0],
        [0x1, 'de', 0x13, 0x53, 0xd3, 0x0],
        [0x1, 'de', 0x13, 0x54, 0xd9, 0x0],
        [0x1, 'de', 0x13, 0x4d, 0xd2, 0x0],
        [0x1, 'de', 0x13, 0x47, 0xd2, 0x0],
        [0x1, 'de', 0x13, 0x49, 0xd5, 0x0],
        [0x1, 'de', 0x13, 0x42, 0xcf, 0x0],
        [0x1, 'de', 0x13, 0x42, 0xcc, 0x0],
        [0x1, 'de', 0x13, 0x3e, 0xd1, 0x0],
        [0x1, 'de', 0x13, 0x3f, 0xc9, 0x0],
        [0x1, 'de', 0x13, 0x38, 0xcd, 0x0],
        [0x1, 'de', 0x13, 0x31, 0xc7, 0x0],
        [0x1, 'de', 0x13, 0x32, 0xcd, 0x0],
        [0x1, 'de', 0x13, 0x28, 0xc5, 0x0],
        [0x1, 'de', 0x13, 0x26, 0xc6, 0x0],
        [0x1, 'de', 0x13, 0x28, 0xd0, 0x0],
        [0x1, 'de', 0x13, 0x24, 0xcc, 0x0],
        [0x1, 'de', 0x13, 0x21, 0xcc, 0x0],
        [0x1, 'de', 0x13, 0x1d, 0xca, 0x0],
        [0x1, 'de', 0x13, 0x1b, 0xc8, 0x0],
        [0x1, 'de', 0x13, 0x1a, 0xc1, 0x0],
        [0x1, 'de', 0x13, 0x12, 0xc9, 0x0],
        [0x1, 'de', 0x13, 0x14, 0xc7, 0x0],
        [0x1, 'de', 0x13, 0xc, 0xc4, 0x0],
        [0x1, 'de', 0x13, 0xc, 0xcc, 0x0],
        [0x1, 'de', 0x13, 0xb, 0xc9, 0x0],
        [0x1, 'de', 0x13, 0x17, 0xd0, 0x0],
        [0x1, 'de', 0x13, 0x1f, 0xd6, 0x0],
        [0x1, 'de', 0x13, 0x1a, 0xd7, 0x0],
        [0x1, 'de', 0x13, 0x24, 0xd9, 0x0],
        [0x1, 'de', 0x13, 0x20, 0xdf, 0x0],
        [0x1, 'de', 0x13, 0x1a, 0xdf, 0x0],
        [0x1, 'de', 0x13, 0x12, 0xda, 0x0],
        [0x1, 'de', 0x13, 0xf, 0xd7, 0x0],
        [0x1, 'de', 0x13, 0x11, 0xd4, 0x0],
        [0x1, 'de', 0x13, 0xf, 0xe0, 0x0],
        [0x1, 'de', 0x13, 0x13, 0xe5, 0x0],
        [0x1, 'de', 0x13, 0xa, 0xe6, 0x0],
        [0x1, 'de', 0x13, 0x16, 0xf0, 0x0],
        [0x1, 'de', 0x13, 0xd, 0xee, 0x0],
        [0x1, 'de', 0x13, 0xd, 0xf3, 0x0],
        [0x1, 'de', 0x13, 0x18, 0xf4, 0x0],
        [0x1, 'de', 0x13, 0x18, 0xfa, 0x0],
        [0x1, 'de', 0x13, 0x1c, 0xfd, 0x0],
        [0x1, 'de', 0x13, 0x21, 0xff, 0x0],
        [0x1, 'de', 0x13, 0x22, 0x104, 0x0],
        [0x1, 'de', 0x13, 0x1f, 0x104, 0x0],
        [0x1, 'de', 0x13, 0x26, 0x10b, 0x0],
        [0x1, 'de', 0x13, 0x2c, 0x108, 0x0],
        [0x1, 'de', 0x13, 0x2b, 0x105, 0x0],
        [0x1, 'de', 0x13, 0x10, 0x101, 0x0],
        [0x1, 'de', 0x13, 0x16, 0x102, 0x0],
        [0x1, 'de', 0x13, 0xc, 0xfd, 0x0],
        [0x1, 'de', 0x13, 0x8, 0xf2, 0x0],
        [0x1, 'de', 0x13, 0x8, 0xff, 0x0],
        [0x1, 'de', 0x13, 0xf, 0x108, 0x0],
        [0x1, 'de', 0x13, 0x14, 0x109, 0x0],
        [0x1, 'de', 0x13, 0xc, 0x10f, 0x0],
        [0x1, 'de', 0x13, 0x8, 0x110, 0x0],
        [0x1, 'de', 0x13, 0xd, 0x115, 0x0],
        [0x1, 'de', 0x13, 0x15, 0x115, 0x0],
        [0x1, 'de', 0x13, 0x15, 0x119, 0x0],
        [0x1, 'de', 0x13, 0x1b, 0x11a, 0x0],
        [0x1, 'de', 0x13, 0x1d, 0x116, 0x0],
        [0x1, 'de', 0x13, 0x1d, 0x111, 0x0],
        [0x1, 'de', 0x13, 0x24, 0x10f, 0x0],
        [0x1, 'de', 0x13, 0x8, 0x116, 0x0],
        [0x1, 'de', 0x13, 0xb, 0x11e, 0x0],
        [0x1, 'de', 0x13, 0x11, 0x123, 0x0],
        [0x1, 'de', 0x13, 0xe, 0x126, 0x0],
        [0x1, 'de', 0x13, 0x8, 0x124, 0x0],
        [0x1, 'de', 0x13, 0xc, 0x12c, 0x0],
        [0x1, 'de', 0x13, 0x12, 0x12a, 0x0],
        [0x1, 'de', 0x13, 0x10, 0x12d, 0x0],
        [0x1, 'de', 0x13, 0x1b, 0x128, 0x0],
        [0x1, 'de', 0x13, 0x19, 0x124, 0x0],
        [0x1, 'de', 0x13, 0x17, 0x12d, 0x0],
        [0x1, 'de', 0x13, 0x1c, 0x12d, 0x0],
        [0x1, 'de', 0x13, 0x23, 0x129, 0x0],
        [0x1, 'de', 0x13, 0x25, 0x12d, 0x0],
        [0x1, 'de', 0x13, 0x2b, 0x12d, 0x0],
        [0x1, 'de', 0x13, 0x2e, 0x126, 0x0],
        [0x1, 'de', 0x13, 0x2e, 0x120, 0x0],
        [0x1, 'de', 0x13, 0x28, 0x11f, 0x0],
        [0x1, 'de', 0x13, 0x32, 0x12d, 0x0],
        [0x1, 'de', 0x13, 0x3a, 0x12d, 0x0],
        [0x1, 'de', 0x13, 0x40, 0x12d, 0x0],
        [0x1, 'de', 0x13, 0x47, 0x12d, 0x0],
        [0x1, 'de', 0x13, 0x50, 0x12d, 0x0],
        [0x1, 'de', 0x13, 0x57, 0x12d, 0x0],
        [0x1, 'de', 0x13, 0x56, 0x126, 0x0],
        [0x1, 'de', 0x13, 0x57, 0x122, 0x0],
        [0x1, 'de', 0x13, 0x52, 0x11e, 0x0],
        [0x1, 'de', 0x13, 0x4b, 0x11d, 0x0],
        [0x1, 'de', 0x13, 0x42, 0x124, 0x0],
        [0x1, 'de', 0x13, 0x42, 0x120, 0x0],
        [0x1, 'de', 0x13, 0x3a, 0x120, 0x0],
        [0x1, 'de', 0x13, 0x43, 0x11a, 0x0],
        [0x1, 'de', 0x13, 0x3d, 0x119, 0x0],
        [0x1, 'de', 0x13, 0x3c, 0x127, 0x0],
        [0x1, 'de', 0x13, 0x32, 0x11a, 0x0],
        [0x1, 'de', 0x13, 0x2f, 0x11b, 0x0],
        [0x1, 'de', 0x13, 0x30, 0x119, 0x0],
        [0x1, 'de', 0x13, 0x2c, 0x115, 0x0],
        [0x1, 'de', 0x13, 0x29, 0x11a, 0x0],
        [0x1, 'de', 0x13, 0x26, 0x119, 0x0],
        [0x1, 'de', 0x13, 0x2a, 0x120, 0x0],
        [0x1, 'de', 0x13, 0x34, 0x119, 0x0],
        [0x1, 'de', 0x13, 0x32, 0x113, 0x0],
        [0x1, 'de', 0x13, 0x27, 0x115, 0x0],
        [0x1, 'de', 0x13, 0x26, 0x11c, 0x0],
        [0x1, 'de', 0x13, 0x33, 0x11d, 0x0],
        [0x1, 'de', 0x13, 0x26, 0x116, 0x0],
        [0x1, 'de', 0x13, 0x2f, 0x110, 0x0],
        [0x1, 'de', 0x13, 0x2c, 0x10b, 0x0],
        [0x1, 'de', 0x13, 0x4c, 0x118, 0x0],
        [0x1, 'de', 0x13, 0x4e, 0x110, 0x0],
        [0x1, 'de', 0x13, 0x44, 0x113, 0x0],
        [0x1, 'de', 0x13, 0x46, 0x109, 0x0],
        [0x1, 'de', 0x13, 0x41, 0x107, 0x0],
        [0x1, 'de', 0x13, 0x40, 0x106, 0x0],
        [0x1, 'de', 0x13, 0x3c, 0x10c, 0x0],
        [0x1, 'de', 0x13, 0x38, 0x10a, 0x0],
        [0x1, 'de', 0x13, 0x37, 0x104, 0x0],
        [0x1, 'de', 0x13, 0x3b, 0x102, 0x0],
        [0x1, 'de', 0x13, 0x3e, 0xff, 0x0],
        [0x1, 'de', 0x13, 0x43, 0xfd, 0x0],
        [0x1, 'de', 0x13, 0x45, 0x100, 0x0],
        [0x1, 'de', 0x13, 0x2c, 0xfd, 0x0],
        [0x1, 'de', 0x13, 0x2c, 0xfa, 0x0],
        [0x1, 'de', 0x13, 0x24, 0xf5, 0x0],
        [0x1, 'de', 0x13, 0x27, 0xef, 0x0],
        [0x1, 'de', 0x13, 0x2a, 0xea, 0x0],
        [0x1, 'de', 0x13, 0x25, 0xeb, 0x0],
        [0x1, 'de', 0x13, 0x2d, 0xe2, 0x0],
        [0x1, 'de', 0x13, 0x2e, 0xde, 0x0],
        [0x1, 'de', 0x13, 0x33, 0xda, 0x0],
        [0x1, 'de', 0x13, 0x44, 0xda, 0x0],
        [0x1, 'de', 0x13, 0x4a, 0xe0, 0x0],
        [0x1, 'de', 0x13, 0x4c, 0xda, 0x0],
        [0x1, 'de', 0x13, 0x54, 0xdd, 0x0],
        [0x1, 'de', 0x13, 0x58, 0xdf, 0x0],
        [0x1, 'de', 0x13, 0x4c, 0xe6, 0x0],
        [0x1, 'de', 0x13, 0x56, 0xea, 0x0],
        [0x1, 'de', 0x13, 0x4f, 0xed, 0x0],
        [0x1, 'de', 0x13, 0x4b, 0xf3, 0x0],
        [0x1, 'de', 0x13, 0x51, 0xf5, 0x0],
        [0x1, 'de', 0x13, 0x53, 0xf7, 0x0],
        [0x1, 'de', 0x13, 0x58, 0xf7, 0x0],
        [0x1, 'de', 0x13, 0x54, 0xfe, 0x0],
        [0x1, 'de', 0x13, 0x56, 0xfb, 0x0],
        [0x1, 'de', 0x13, 0x55, 0x104, 0x0],
        [0x1, 'de', 0x13, 0x4f, 0x104, 0x0],
        [0x1, 'de', 0x13, 0x4c, 0xfb, 0x0],
        [0x1, 'de', 0x13, 0x48, 0xfb, 0x0],
        [0x1, 'de', 0x13, 0x45, 0xfb, 0x0],
        [0x1, 'de', 0x13, 0x57, 0x10a, 0x0],
        [0x1, 'de', 0x13, 0x59, 0x10e, 0x0],
        [0x1, 'de', 0x13, 0x57, 0x10f, 0x0],
        [0x1, 'de', 0x13, 0x52, 0x115, 0x0],
        [0x1, 'de', 0x13, 0x57, 0x11c, 0x0],
        [0x1, 'de', 0x13, 0x57, 0xed, 0x0],
        [0x1, 'de', 0x13, 0x58, 0xb3, 0x0],
        [0x1, 'de', 0x13, 0x32, 0xbf, 0x0],
        [0x1, 'de', 0x13, 0x34, 0xdd, 0x0],
        [0x1, 'de', 0x13, 0x22, 0xea, 0x0],
        [0x1, 'de', 0x13, 0x1b, 0xe9, 0x0],
        [0x1, 'de', 0x13, 0x25, 0x125, 0x0],
        [0x1, 'de', 0x1d, 0xd, 0xb5, 0x0],
        [0x1, 'de', 0x1d, 0x8, 0xb4, 0x0],
        [0x1, 'de', 0x1e, 0xd, 0xba, 0x0],
        [0x1, 'de', 0x1f, 0x18, 0xb7, 0x0],
        [0x1, 'de', 0x20, 0x21, 0xb9, 0x0],
        [0x1, 'de', 0x20, 0x25, 0xb6, 0x0],
        [0x1, 'de', 0x1d, 0x2d, 0xb7, 0x0],
        [0x1, 'de', 0x1e, 0x30, 0xb7, 0x0],
        [0x1, 'de', 0x1e, 0x3a, 0xb5, 0x0],
        [0x1, 'de', 0x1e, 0x42, 0xbc, 0x0],
        [0x1, 'de', 0x1e, 0x42, 0xb6, 0x0],
        [0x1, 'de', 0x1d, 0x3f, 0xc4, 0x0],
        [0x1, 'de', 0x1d, 0x36, 0xc2, 0x0],
        [0x1, 'de', 0x1e, 0x4f, 0xbd, 0x0],
        [0x1, 'de', 0x1e, 0x57, 0xb6, 0x0],
        [0x1, 'de', 0x1e, 0x53, 0xb9, 0x0],
        [0x1, 'de', 0x1d, 0x58, 0xbd, 0x0],
        [0x1, 'de', 0x1d, 0x55, 0xca, 0x0],
        [0x1, 'de', 0x1f, 0x52, 0xcb, 0x0],
        [0x1, 'de', 0x20, 0x50, 0xc9, 0x0],
        [0x1, 'de', 0x20, 0x57, 0xd1, 0x0],
        [0x1, 'de', 0x20, 0x53, 0xd6, 0x0],
        [0x1, 'de', 0x1e, 0x58, 0xdc, 0x0],
        [0x1, 'de', 0x1e, 0x4e, 0xe5, 0x0],
        [0x1, 'de', 0x1e, 0x49, 0xdf, 0x0],
        [0x1, 'de', 0x1d, 0x4a, 0xd9, 0x0],
        [0x1, 'de', 0x1d, 0x43, 0xd9, 0x0],
        [0x1, 'de', 0x1e, 0x48, 0xd0, 0x0],
        [0x1, 'de', 0x1e, 0x49, 0xc7, 0x0],
        [0x1, 'de', 0x1e, 0x41, 0xcf, 0x0],
        [0x1, 'de', 0x1d, 0x3f, 0xd2, 0x0],
        [0x1, 'de', 0x1d, 0x32, 0xcc, 0x0],
        [0x1, 'de', 0x1e, 0x29, 0xcd, 0x0],
        [0x1, 'de', 0x1d, 0x23, 0xcd, 0x0],
        [0x1, 'de', 0x1e, 0x1b, 0xca, 0x0],
        [0x1, 'de', 0x1e, 0x14, 0xc9, 0x0],
        [0x1, 'de', 0x1d, 0xa, 0xcb, 0x0],
        [0x1, 'de', 0x1d, 0xe, 0xc4, 0x0],
        [0x1, 'de', 0x1d, 0x18, 0xbb, 0x0],
        [0x1, 'de', 0x1d, 0x1c, 0xdf, 0x0],
        [0x1, 'de', 0x1d, 0x20, 0xd4, 0x0],
        [0x1, 'de', 0x1e, 0x1c, 0xd6, 0x0],
        [0x1, 'de', 0x1f, 0x18, 0xda, 0x0],
        [0x1, 'de', 0x1d, 0x24, 0xdb, 0x0],
        [0x1, 'de', 0x1d, 0x25, 0xd9, 0x0],
        [0x1, 'de', 0x1d, 0x34, 0xd9, 0x0],
        [0x1, 'de', 0x1d, 0x3b, 0xd9, 0x0],
        [0x1, 'de', 0x1d, 0x45, 0xe7, 0x0],
        [0x1, 'de', 0x1d, 0x40, 0xf2, 0x0],
        [0x1, 'de', 0x1e, 0x35, 0xfd, 0x0],
        [0x1, 'de', 0x1e, 0x2d, 0xfa, 0x0],
        [0x1, 'de', 0x1e, 0x3a, 0x105, 0x0],
        [0x1, 'de', 0x1e, 0x49, 0x114, 0x0],
        [0x1, 'de', 0x1e, 0x40, 0x114, 0x0],
        [0x1, 'de', 0x1e, 0x52, 0x11d, 0x0],
        [0x1, 'de', 0x1e, 0x41, 0x125, 0x0],
        [0x1, 'de', 0x1e, 0x38, 0x120, 0x0],
        [0x1, 'de', 0x1e, 0x2d, 0x128, 0x0],
        [0x1, 'de', 0x1e, 0x28, 0x120, 0x0],
        [0x1, 'de', 0x1e, 0x25, 0x11b, 0x0],
        [0x1, 'de', 0x1e, 0x35, 0x118, 0x0],
        [0x1, 'de', 0x1e, 0x29, 0x115, 0x0],
        [0x1, 'de', 0x1d, 0x1c, 0x128, 0x0],
        [0x1, 'de', 0x1d, 0x12, 0x124, 0x0],
        [0x1, 'de', 0x1d, 0x18, 0x11c, 0x0],
        [0x1, 'de', 0x1e, 0xa, 0x127, 0x0],
        [0x1, 'de', 0x1e, 0xa, 0x11e, 0x0],
        [0x1, 'de', 0x1e, 0xf, 0x117, 0x0],
        [0x1, 'de', 0x1e, 0xf, 0x10d, 0x0],
        [0x1, 'de', 0x1e, 0x15, 0x103, 0x0],
        [0x1, 'de', 0x1e, 0xc, 0x100, 0x0],
        [0x1, 'de', 0x1e, 0x1f, 0xf5, 0x0],
        [0x1, 'de', 0x1e, 0xc, 0xf0, 0x0],
        [0x1, 'de', 0x1e, 0x1c, 0xeb, 0x0],
        [0x1, 'de', 0x1e, 0xd, 0xe2, 0x0],
        [0x1, 'de', 0x1e, 0x27, 0xe7, 0x0],
        [0x1, 'de', 0x1e, 0x3d, 0xe2, 0x0],
        [0x1, 'r', 0x60, 0x106, 0x0],
        [0x1, 'r', 0x61, 0x106, 0x0],
        [0x1, 'r', 0x62, 0x106, 0x0],
        [0x1, 'r', 0x61, 0x10e, 0x0],
        [0x1, 'r', 0x61, 0x10f, 0x0],
        [0x1, 'r', 0x61, 0x110, 0x0],
        [0x1, 'r', 0x61, 0x111, 0x0],
        [0x1, 'r', 0x61, 0x112, 0x0],
        [0x1, 'r', 0x61, 0x113, 0x0],
        [0x1, 'r', 0x61, 0x114, 0x0],
        [0x1, 'r', 0x61, 0x115, 0x0],
        [0x1, 'r', 0x61, 0x116, 0x0],
        [0x1, 'r', 0x62, 0x10e, 0x0],
        [0x1, 'r', 0x62, 0x10f, 0x0],
        [0x1, 'r', 0x62, 0x110, 0x0],
        [0x1, 'r', 0x62, 0x111, 0x0],
        [0x1, 'r', 0x62, 0x112, 0x0],
        [0x1, 'r', 0x62, 0x113, 0x0],
        [0x1, 'r', 0x62, 0x114, 0x0],
        [0x1, 'r', 0x62, 0x115, 0x0],
        [0x1, 'r', 0x62, 0x116, 0x0],
        [0x1, 'r', 0x60, 0x11b, 0x0],
        [0x1, 'r', 0x61, 0x11b, 0x0],
        [0x1, 'r', 0x61, 0x11c, 0x0],
        [0x1, 'r', 0x61, 0x11d, 0x0],
        [0x1, 'r', 0x62, 0x11b, 0x0],
        [0x1, 'r', 0x62, 0x11c, 0x0],
        [0x1, 'r', 0x62, 0x11d, 0x0],
        [0x1, 'r', 0x60, 0x10e, 0x0],
        [0x1, 'r', 0x60, 0x10f, 0x0],
        [0x1, 'r', 0x60, 0x110, 0x0],
        [0x1, 'r', 0x60, 0x111, 0x0],
        [0x1, 'r', 0x60, 0x112, 0x0],
        [0x1, 'r', 0x60, 0x113, 0x0],
        [0x1, 'r', 0x60, 0x114, 0x0],
        [0x1, 'r', 0x60, 0x115, 0x0],
        [0x1, 'r', 0x60, 0x116, 0x0],
        [0x1, 'r', 0x2c, 0xf8, 0x0],
        [0x1, 'de', 0x10, 0x5e, 0x122, 0x0],
        [0x1, 'de', 0x10, 0x5e, 0xfc, 0x0],
        [0x1, 'de', 0x10, 0x5e, 0xe4, 0x0],
        [0x1, 'de', 0x11, 0x5e, 0xc8, 0x0],
        [0x1, 'r', 0x5f, 0x11a, 0x1],
        [0x1, 'r', 0x5f, 0x119, 0x1],
        [0x1, 'r', 0x5e, 0x119, 0x1],
        [0x1, 'r', 0x5a, 0x119, 0x1],
        [0x1, 'r', 0x5b, 0x11a, 0x1],
        [0x1, 'r', 0x59, 0x119, 0x1],
        [0x1, 'r', 0x55, 0x114, 0x1],
        [0x1, 'r', 0x55, 0x115, 0x1],
        [0x1, 'r', 0x56, 0x116, 0x1],
        [0x1, 'p', 0x0, 0x55, 0x117, 0x1],
        [0x1, 'r', 0x56, 0x117, 0x1],
        [0x1, 'r', 0x57, 0x118, 0x1],
        [0x1, 'r', 0x60, 0x119, 0x0],
        [0x1, 'r', 0x61, 0x119, 0x0],
        [0x1, 'r', 0x62, 0x119, 0x0],
        [0x1, 'r', 0x62, 0x11a, 0x0],
        [0x1, 'r', 0x61, 0x11a, 0x0],
        [0x1, 'r', 0x60, 0x11a, 0x0],
        [0x1, 'r', 0x44, 0x105, 0x1],
        [0x1, 'fo', 0x1, 0x5e, 0xa8, 0x0],
        [0x1, 'fo', 0x2, 0x5e, 0x97, 0x0],
        [0x1, 'fo', 0x1, 0x5e, 0x8a, 0x0],
        [0x1, 'fo', 0x1, 0x5d, 0x7c, 0x0],
        [0x1, 'fo', 0x1, 0x5e, 0x81, 0x0],
        [0x1, 'fo', 0x1, 0x5d, 0x71, 0x0],
        [0x1, 'fo', 0x1, 0x5e, 0x66, 0x0],
        [0x1, 'fo', 0x1, 0x5e, 0x5d, 0x0],
        [0x1, 'fo', 0x1, 0x5d, 0x5a, 0x0],
        [0x1, 'fo', 0x1, 0x5e, 0x4f, 0x0],
        [0x1, 'fo', 0x1, 0x5e, 0x4c, 0x0],
        [0x1, 'fo', 0x1, 0x5d, 0x46, 0x0],
        [0x1, 'fo', 0x1, 0x5d, 0x3f, 0x0],
        [0x1, 'fo', 0x1, 0x5e, 0x35, 0x0],
        [0x1, 'fo', 0x1, 0x5d, 0xa, 0x0],
        [0x1, 'fo', 0x1, 0x55, 0x8, 0x0],
        [0x1, 'fo', 0x1, 0x5e, 0xc, 0x0],
        [0x1, 'fo', 0x1, 0x42, 0xd, 0x0],
        [0x1, 'fo', 0x1, 0x45, 0x9, 0x0],
        [0x1, 'fo', 0x2, 0x44, 0xe, 0x0],
        [0x1, 'fo', 0x2, 0x42, 0x19, 0x0],
        [0x1, 'fo', 0x2, 0x5c, 0x9, 0x0],
        [0x1, 'fo', 0x2, 0x5e, 0xe, 0x0],
        [0x1, 'fo', 0x2, 0x57, 0x9, 0x0],
        [0x1, 'fo', 0x2, 0x47, 0x9, 0x0],
        [0x1, 'fo', 0x2, 0x5a, 0xc, 0x0],
        [0x1, 'fo', 0x2, 0x5b, 0xd, 0x0],
        [0x1, 'fo', 0x1, 0x4a, 0xc, 0x0],
        [0x1, 'fo', 0x2, 0x48, 0xc, 0x0],
        [0x1, 'fo', 0x2, 0x4b, 0xd, 0x0],
        [0x1, 'fo', 0x2, 0x4a, 0xf, 0x0],
        [0x1, 'fo', 0x2, 0x54, 0xc, 0x0],
        [0x1, 'fo', 0x2, 0x51, 0xe, 0x0],
        [0x1, 'fo', 0x1, 0x54, 0xd, 0x0],
        [0x1, 'fo', 0x1, 0x54, 0x13, 0x0],
        [0x1, 'fo', 0x1, 0xb, 0x9, 0x0],
        [0x1, 'fo', 0x1, 0x7, 0xe, 0x0],
        [0x1, 'fo', 0x1, 0x8, 0x16, 0x0],
        [0x1, 'fo', 0x1, 0x7, 0x22, 0x0],
        [0x1, 'fo', 0x1, 0xc, 0x18, 0x0],
        [0x1, 'fo', 0x2, 0x8, 0x18, 0x0],
        [0x1, 'fo', 0x2, 0x9, 0x15, 0x0],
        [0x1, 'fo', 0x2, 0x1f, 0xa, 0x0],
        [0x1, 'fo', 0x2, 0x21, 0x1b, 0x0],
        [0x1, 'fo', 0x2, 0x9, 0x22, 0x0],
        [0x1, 'fo', 0x2, 0x8, 0x13, 0x0],
        [0x1, 'fo', 0x1, 0xe, 0xa, 0x0],
        [0x1, 'fo', 0x2, 0xd, 0x9, 0x0],
        [0x1, 'fo', 0x2, 0xf, 0xb, 0x0],
        [0x1, 'fo', 0x2, 0x9, 0x9, 0x0],
        [0x1, 'fo', 0x2, 0x9, 0xa, 0x0],
        [0x1, 'fo', 0x2, 0x9, 0xf, 0x0],
        [0x1, 'fo', 0x2, 0xa, 0x17, 0x0],
        [0x1, 'fo', 0x2, 0x22, 0x1d, 0x0],
        [0x1, 'fo', 0x2, 0x1b, 0x12, 0x0],
        [0x1, 'fo', 0x2, 0x19, 0x15, 0x0],
        [0x1, 'fo', 0x2, 0x14, 0x12, 0x0],
        [0x1, 'fo', 0x2, 0x12, 0x15, 0x0],
        [0x1, 'fo', 0x2, 0x1d, 0x9, 0x0],
        [0x1, 'fo', 0x2, 0xd, 0xe, 0x0],
        [0x1, 'fo', 0x2, 0x9, 0x26, 0x0],
        [0x1, 'fo', 0x2, 0x15, 0x27, 0x0],
        [0x1, 'fo', 0x2, 0x54, 0x1a, 0x0],
        [0x1, 'fo', 0x2, 0x4d, 0x19, 0x0],
        [0x1, 'fo', 0x2, 0x56, 0x23, 0x0],
        [0x1, 'fo', 0x1, 0x46, 0x23, 0x0],
        [0x1, 'fo', 0x2, 0x48, 0x24, 0x0],
        [0x1, 'fo', 0x2, 0x49, 0x1f, 0x0],
        [0x1, 'fo', 0x2, 0x59, 0x27, 0x0],
        [0x1, 'fo', 0x2, 0x41, 0x28, 0x0],
        [0x1, 'fo', 0x2, 0x5c, 0x20, 0x0],
        [0x1, 'fo', 0x2, 0x5a, 0x1c, 0x0],
        [0x1, 'de', 0x16, 0x19, 0x10a, 0x0],
        [0x1, 'de', 0x16, 0x11, 0xce, 0x0],
        [0x1, 'de', 0x13, 0x8, 0xb8, 0x0],
        [0x1, 'de', 0x13, 0x16, 0xb7, 0x0],
        [0x1, 'de', 0x13, 0x23, 0xbc, 0x0],
        [0x1, 'de', 0x13, 0x24, 0xc0, 0x0],
        [0x1, 'de', 0x13, 0x32, 0x115, 0x0],
        [0x1, 'de', 0x13, 0x23, 0x117, 0x0],
        [0x1, 't', 0x4, 0x7, 0xb2, 0x0],
        [0x1, 't', 0x1, 0x7, 0xb3, 0x0],
        [0x1, 't', 0x3, 0x7, 0xb4, 0x0],
        [0x1, 't', 0x2, 0x7, 0xb5, 0x0],
        [0x1, 't', 0x5, 0x7, 0xb6, 0x0],
        [0x1, 't', 0x4, 0x7, 0xb7, 0x0],
        [0x1, 't', 0x3, 0x7, 0xb8, 0x0],
        [0x1, 't', 0x4, 0x7, 0xb9, 0x0],
        [0x1, 't', 0x2, 0x7, 0xba, 0x0],
        [0x1, 't', 0x1, 0x7, 0xbb, 0x0],
        [0x1, 't', 0x4, 0x7, 0xbc, 0x0],
        [0x1, 't', 0x3, 0x7, 0xbd, 0x0],
        [0x1, 't', 0x5, 0x7, 0xbe, 0x0],
        [0x1, 't', 0x1, 0x7, 0xbf, 0x0],
        [0x1, 't', 0x3, 0x7, 0xc0, 0x0],
        [0x1, 't', 0x4, 0x7, 0xc1, 0x0],
        [0x1, 't', 0x3, 0x7, 0xc2, 0x0],
        [0x1, 't', 0x5, 0x7, 0xc3, 0x0],
        [0x1, 't', 0x2, 0x7, 0xc4, 0x0],
        [0x1, 't', 0x4, 0x7, 0xc5, 0x0],
        [0x1, 'b', 0x2, 0x7, 0xc6, 0x0],
        [0x1, 't', 0x4, 0x7, 0xc7, 0x0],
        [0x1, 't', 0x2, 0x7, 0xc8, 0x0],
        [0x1, 't', 0x5, 0x7, 0xc9, 0x0],
        [0x1, 't', 0x2, 0x7, 0xca, 0x0],
        [0x1, 't', 0x4, 0x7, 0xcb, 0x0],
        [0x1, 't', 0x2, 0x7, 0xcc, 0x0],
        [0x1, 't', 0x5, 0x7, 0xcd, 0x0],
        [0x1, 't', 0x2, 0x7, 0xce, 0x0],
        [0x1, 't', 0x1, 0x7, 0xcf, 0x0],
        [0x1, 't', 0x4, 0x7, 0xd0, 0x0],
        [0x1, 't', 0x3, 0x7, 0xd1, 0x0],
        [0x1, 't', 0x1, 0x7, 0xd2, 0x0],
        [0x1, 'b', 0x0, 0x7, 0xd3, 0x0],
        [0x1, 't', 0x3, 0x7, 0xd4, 0x0],
        [0x1, 't', 0x4, 0x7, 0xd5, 0x0],
        [0x1, 't', 0x3, 0x7, 0xd6, 0x0],
        [0x1, 't', 0x5, 0x7, 0xd7, 0x0],
        [0x1, 't', 0x5, 0x7, 0xd8, 0x0],
        [0x1, 't', 0x3, 0x7, 0xd9, 0x0],
        [0x1, 't', 0x1, 0x7, 0xda, 0x0],
        [0x1, 't', 0x4, 0x7, 0xdb, 0x0],
        [0x1, 'b', 0x2, 0x7, 0xdc, 0x0],
        [0x1, 't', 0x1, 0x7, 0xdd, 0x0],
        [0x1, 't', 0x2, 0x7, 0xde, 0x0],
        [0x1, 't', 0x4, 0x7, 0xdf, 0x0],
        [0x1, 't', 0x3, 0x7, 0xe0, 0x0],
        [0x1, 't', 0x1, 0x7, 0xe1, 0x0],
        [0x1, 't', 0x4, 0x7, 0xe2, 0x0],
        [0x1, 't', 0x2, 0x7, 0xe3, 0x0],
        [0x1, 't', 0x5, 0x7, 0xe4, 0x0],
        [0x1, 't', 0x3, 0x7, 0xe5, 0x0],
        [0x1, 't', 0x1, 0x7, 0xe6, 0x0],
        [0x1, 't', 0x4, 0x7, 0xe7, 0x0],
        [0x1, 'b', 0x2, 0x7, 0xe8, 0x0],
        [0x1, 't', 0x5, 0x7, 0xe9, 0x0],
        [0x1, 't', 0x1, 0x7, 0xea, 0x0],
        [0x1, 't', 0x3, 0x7, 0xeb, 0x0],
        [0x1, 't', 0x4, 0x7, 0xec, 0x0],
        [0x1, 't', 0x2, 0x7, 0xed, 0x0],
        [0x1, 't', 0x5, 0x7, 0xee, 0x0],
        [0x1, 'b', 0x3, 0x7, 0xef, 0x0],
        [0x1, 't', 0x2, 0x7, 0xf0, 0x0],
        [0x1, 't', 0x1, 0x7, 0xf1, 0x0],
        [0x1, 't', 0x2, 0x7, 0xf2, 0x0],
        [0x1, 't', 0x4, 0x7, 0xf3, 0x0],
        [0x1, 't', 0x3, 0x7, 0xf4, 0x0],
        [0x1, 't', 0x4, 0x7, 0xf5, 0x0],
        [0x1, 't', 0x1, 0x7, 0xf6, 0x0],
        [0x1, 'b', 0x0, 0x7, 0xf7, 0x0],
        [0x1, 't', 0x3, 0x7, 0xf8, 0x0],
        [0x1, 't', 0x5, 0x7, 0xf9, 0x0],
        [0x1, 't', 0x2, 0x7, 0xfa, 0x0],
        [0x1, 't', 0x1, 0x7, 0xfb, 0x0],
        [0x1, 't', 0x4, 0x7, 0xfc, 0x0],
        [0x1, 't', 0x3, 0x7, 0xfd, 0x0],
        [0x1, 't', 0x5, 0x7, 0xfe, 0x0],
        [0x1, 't', 0x1, 0x7, 0xff, 0x0],
        [0x1, 't', 0x4, 0x7, 0x100, 0x0],
        [0x1, 't', 0x1, 0x7, 0x101, 0x0],
        [0x1, 't', 0x2, 0x7, 0x102, 0x0],
        [0x1, 't', 0x5, 0x7, 0x104, 0x0],
        [0x1, 't', 0x3, 0x7, 0x103, 0x0],
        [0x1, 't', 0x1, 0x7, 0x105, 0x0],
        [0x1, 't', 0x3, 0x7, 0x106, 0x0],
        [0x1, 't', 0x4, 0x7, 0x107, 0x0],
        [0x1, 't', 0x1, 0x7, 0x108, 0x0],
        [0x1, 't', 0x2, 0x7, 0x109, 0x0],
        [0x1, 't', 0x5, 0x7, 0x10a, 0x0],
        [0x1, 't', 0x2, 0x7, 0x10b, 0x0],
        [0x1, 't', 0x2, 0x7, 0x10d, 0x0],
        [0x1, 'b', 0x2, 0x7, 0x10c, 0x0],
        [0x1, 't', 0x4, 0x7, 0x10e, 0x0],
        [0x1, 't', 0x1, 0x7, 0x10f, 0x0],
        [0x1, 't', 0x5, 0x7, 0x110, 0x0],
        [0x1, 'b', 0x2, 0x7, 0x111, 0x0],
        [0x1, 't', 0x4, 0x7, 0x112, 0x0],
        [0x1, 't', 0x2, 0x7, 0x113, 0x0],
        [0x1, 't', 0x5, 0x7, 0x114, 0x0],
        [0x1, 't', 0x5, 0x7, 0x115, 0x0],
        [0x1, 't', 0x2, 0x7, 0x116, 0x0],
        [0x1, 't', 0x1, 0x7, 0x117, 0x0],
        [0x1, 't', 0x4, 0x7, 0x118, 0x0],
        [0x1, 'b', 0x1, 0x7, 0x119, 0x0],
        [0x1, 't', 0x3, 0x7, 0x11a, 0x0],
        [0x1, 't', 0x4, 0x7, 0x11b, 0x0],
        [0x1, 't', 0x1, 0x7, 0x11c, 0x0],
        [0x1, 't', 0x3, 0x7, 0x11d, 0x0],
        [0x1, 't', 0x5, 0x7, 0x11e, 0x0],
        [0x1, 't', 0x4, 0x7, 0x120, 0x0],
        [0x1, 't', 0x2, 0x7, 0x11f, 0x0],
        [0x1, 'b', 0x0, 0x7, 0x121, 0x0],
        [0x1, 't', 0x4, 0x7, 0x122, 0x0],
        [0x1, 't', 0x2, 0x7, 0x123, 0x0],
        [0x1, 't', 0x5, 0x7, 0x124, 0x0],
        [0x1, 't', 0x3, 0x7, 0x125, 0x0],
        [0x1, 't', 0x1, 0x7, 0x126, 0x0],
        [0x1, 't', 0x4, 0x7, 0x127, 0x0],
        [0x1, 't', 0x3, 0x7, 0x128, 0x0],
        [0x1, 't', 0x1, 0x7, 0x129, 0x0],
        [0x1, 't', 0x4, 0x7, 0x12a, 0x0],
        [0x1, 't', 0x2, 0x7, 0x12b, 0x0],
        [0x1, 'b', 0x0, 0x7, 0x12c, 0x0],
        [0x1, 't', 0x2, 0x7, 0x12d, 0x0],
        [0x1, 'r', 0xc4, 0x10f, 0x0],
        [0x1, 'r', 0xc7, 0x112, 0x0],
        [0x1, 'r', 0xa7, 0xee, 0x0],
        [0x1, 'r', 0xab, 0xf0, 0x0],
        [0x1, 'r', 0xbd, 0xcf, 0x0],
        [0x1, 'r', 0xc0, 0xd1, 0x0],
        [0x1, 'r', 0xc6, 0x10f, 0x0],
        [0x1, 'r', 0xc5, 0x10f, 0x0],
        [0x1, 'r', 0xc6, 0x110, 0x0],
        [0x1, 'r', 0xc5, 0x110, 0x0],
        [0x1, 'r', 0xc4, 0x110, 0x0],
        [0x1, 'r', 0xc3, 0x110, 0x0],
        [0x1, 'r', 0xc7, 0x110, 0x0],
        [0x1, 'r', 0xc7, 0x111, 0x0],
        [0x1, 'r', 0xc6, 0x111, 0x0],
        [0x1, 'r', 0xc5, 0x111, 0x0],
        [0x1, 'r', 0xc4, 0x111, 0x0],
        [0x1, 'r', 0xc6, 0x112, 0x0],
        [0x1, 'r', 0xc5, 0x112, 0x0],
        [0x1, 'r', 0xc3, 0x111, 0x0],
        [0x1, 'r', 0xc4, 0x112, 0x0],
        [0x1, 'r', 0xc6, 0x113, 0x0],
        [0x1, 'r', 0xc5, 0x113, 0x0],
        [0x1, 'r', 0xc8, 0x112, 0x0],
        [0x1, 'r', 0xc8, 0x111, 0x0],
        [0x1, 'r', 0xc7, 0x113, 0x0],
        [0x1, 'plm', 0x2, 0xc8, 0x110, 0x0],
        [0x1, 'plm', 0x1, 0xc3, 0x10f, 0x0],
        [0x1, 'plm', 0x0, 0xc7, 0x10c, 0x0],
        [0x1, 'plm', 0x0, 0xc1, 0x115, 0x0],
        [0x1, 'plm', 0x1, 0xc7, 0x114, 0x0],
        [0x1, 's', 0x1, 0xc8, 0x113, 0x1],
        [0x1, 's', 0x1, 0xc2, 0x110, 0x1],
        [0x1, 's', 0x2, 0xc1, 0x10e, 0x1],
        [0x1, 'g', 0x2, 0xc1, 0x111, 0x1],
        [0x1, 'g', 0x2, 0xc9, 0x10b, 0x1],
        [0x1, 'm', 0x2, 0xdc, 0x12a, 0x1],
        [0x1, 'm', 0x1, 0xdb, 0x124, 0x1],
        [0x1, 'm', 0x1, 0xd6, 0x129, 0x1],
        [0x1, 'r', 0xa8, 0xee, 0x0],
        [0x1, 'r', 0xa9, 0xee, 0x0],
        [0x1, 'r', 0xaa, 0xee, 0x0],
        [0x1, 'r', 0xab, 0xef, 0x0],
        [0x1, 'r', 0xaa, 0xef, 0x0],
        [0x1, 'r', 0xa9, 0xef, 0x0],
        [0x1, 'r', 0xa8, 0xef, 0x0],
        [0x1, 'r', 0xa7, 0xef, 0x0],
        [0x1, 'r', 0xa6, 0xef, 0x0],
        [0x1, 'r', 0xa6, 0xf0, 0x0],
        [0x1, 'r', 0xa7, 0xf0, 0x0],
        [0x1, 'r', 0xa8, 0xf0, 0x0],
        [0x1, 'r', 0xa9, 0xf0, 0x0],
        [0x1, 'r', 0xaa, 0xf0, 0x0],
        [0x1, 'r', 0xa8, 0xf1, 0x0],
        [0x1, 'r', 0xa9, 0xf1, 0x0],
        [0x1, 'r', 0xaa, 0xf1, 0x0],
        [0x1, 'r', 0xab, 0xf1, 0x0],
        [0x1, 'plm', 0x2, 0xab, 0xee, 0x0],
        [0x1, 'plm', 0x1, 0xa6, 0xee, 0x0],
        [0x1, 'plm', 0x0, 0xa7, 0xed, 0x0],
        [0x1, 'plm', 0x0, 0xab, 0xf2, 0x0],
        [0x1, 'plm', 0x0, 0xa5, 0xf3, 0x0],
        [0x1, 'plm', 0x0, 0xab, 0xeb, 0x0],
        [0x1, 'plm', 0x0, 0xae, 0xf1, 0x0],
        [0x1, 's', 0x1, 0xa5, 0xef, 0x1],
        [0x1, 's', 0x1, 0xac, 0xf1, 0x1],
        [0x1, 's', 0x0, 0xaa, 0xed, 0x1],
        [0x1, 's', 0x1, 0xab, 0xed, 0x1],
        [0x1, 's', 0x2, 0xae, 0xec, 0x1],
        [0x1, 's', 0x2, 0xa2, 0xf1, 0x1],
        [0x1, 's', 0x2, 0xaa, 0xf6, 0x1],
        [0x1, 's', 0x2, 0xa7, 0xeb, 0x1],
        [0x1, 's', 0x2, 0xb0, 0xf3, 0x1],
        [0x1, 'r', 0xbe, 0xcf, 0x0],
        [0x1, 'r', 0xbf, 0xcf, 0x0],
        [0x1, 'r', 0xc0, 0xd0, 0x0],
        [0x1, 'r', 0xbf, 0xd0, 0x0],
        [0x1, 'r', 0xbe, 0xd0, 0x0],
        [0x1, 'r', 0xbd, 0xd0, 0x0],
        [0x1, 'r', 0xbc, 0xd0, 0x0],
        [0x1, 'r', 0xbd, 0xd1, 0x0],
        [0x1, 'r', 0xbe, 0xd1, 0x0],
        [0x1, 'r', 0xbf, 0xd1, 0x0],
        [0x1, 'r', 0xbc, 0xd1, 0x0],
        [0x1, 'r', 0xbe, 0xd2, 0x0],
        [0x1, 'r', 0xbf, 0xd2, 0x0],
        [0x1, 'r', 0xc0, 0xd2, 0x0],
        [0x1, 'plm', 0x2, 0xbd, 0xd2, 0x0],
        [0x1, 'plm', 0x2, 0xc0, 0xcd, 0x0],
        [0x1, 'plm', 0x1, 0xc0, 0xcf, 0x0],
        [0x1, 'plm', 0x0, 0xc1, 0xd2, 0x0],
        [0x1, 'plm', 0x0, 0xbb, 0xd0, 0x0],
        [0x1, 'plm', 0x0, 0xc5, 0xce, 0x0],
        [0x1, 'plm', 0x0, 0xbf, 0xd5, 0x0],
        [0x1, 'plm', 0x0, 0xbe, 0xcc, 0x0],
        [0x1, 's', 0x1, 0xbc, 0xcf, 0x1],
        [0x1, 's', 0x1, 0xbe, 0xd3, 0x1],
        [0x1, 's', 0x2, 0xbc, 0xd5, 0x1],
        [0x1, 's', 0x2, 0xbb, 0xcd, 0x1],
        [0x1, 's', 0x0, 0xc2, 0xd2, 0x1],
        [0x1, 's', 0x0, 0xc6, 0xcf, 0x1],
        [0x1, 's', 0x1, 0xc1, 0xcc, 0x1],
        [0x1, 's', 0x1, 0xc1, 0xd5, 0x1],
        [0x1, 's', 0x2, 0xc6, 0xd4, 0x1],
        [0x1, 's', 0x2, 0xb6, 0xd0, 0x1],
        [0x1, 's', 0x1, 0xcc, 0x10f, 0x1],
        [0x1, 's', 0x0, 0xcb, 0x110, 0x1],
        [0x1, 's', 0x0, 0xbd, 0x113, 0x1],
        [0x1, 's', 0x0, 0xc3, 0x109, 0x1],
        [0x1, 's', 0x2, 0xc4, 0x108, 0x1],
        [0x1, 's', 0x2, 0xba, 0x112, 0x1],
        [0x1, 's', 0x2, 0xc5, 0x118, 0x1],
        [0x1, 's', 0x0, 0xd9, 0x11a, 0x1],
        [0x1, 's', 0x1, 0xd6, 0x11d, 0x1],
        [0x1, 's', 0x1, 0xd6, 0x112, 0x1],
        [0x1, 's', 0x1, 0xcb, 0x11a, 0x1],
        [0x1, 's', 0x1, 0xcd, 0x122, 0x1],
        [0x1, 's', 0x0, 0xcf, 0x124, 0x1],
        [0x1, 's', 0x0, 0xc5, 0x129, 0x1],
        [0x1, 's', 0x0, 0xb8, 0x11f, 0x1],
        [0x1, 's', 0x2, 0xd5, 0x121, 0x1],
        [0x1, 's', 0x2, 0xc4, 0x126, 0x1],
        [0x1, 's', 0x2, 0xbb, 0x11e, 0x1],
        [0x1, 's', 0x1, 0xc0, 0x121, 0x1],
        [0x1, 's', 0x1, 0xbd, 0x12b, 0x1],
        [0x1, 's', 0x0, 0xd5, 0x111, 0x1],
        [0x1, 'g', 0x2, 0xd4, 0x116, 0x1],
        [0x1, 'g', 0x1, 0xc8, 0x120, 0x1],
        [0x1, 'g', 0x2, 0xd7, 0x109, 0x1],
        [0x1, 'g', 0x2, 0xb7, 0x119, 0x1],
        [0x1, 's', 0x0, 0xb2, 0x127, 0x1],
        [0x1, 's', 0x0, 0xa7, 0x119, 0x1],
        [0x1, 's', 0x0, 0xaf, 0x107, 0x1],
        [0x1, 's', 0x1, 0xb0, 0x125, 0x1],
        [0x1, 's', 0x1, 0xa3, 0x11d, 0x1],
        [0x1, 's', 0x1, 0xb1, 0x10a, 0x1],
        [0x1, 's', 0x1, 0xa1, 0x110, 0x1],
        [0x1, 's', 0x2, 0xb9, 0x105, 0x1],
        [0x1, 'c', 0x0, 0xd9, 0x10e, 0x1],
        [0x1, 'c', 0x0, 0xdc, 0x116, 0x1],
        [0x1, 'c', 0x0, 0xd9, 0x11b, 0x1],
        [0x1, 'c', 0x0, 0xdc, 0x11f, 0x1],
        [0x1, 'c', 0x0, 0xd2, 0x124, 0x1],
        [0x1, 'c', 0x0, 0xcd, 0x129, 0x1],
        [0x1, 'c', 0x0, 0xc6, 0x125, 0x1],
        [0x1, 'c', 0x0, 0xd0, 0x11b, 0x1],
        [0x1, 'c', 0x0, 0xc5, 0x11b, 0x1],
        [0x1, 'c', 0x0, 0xbe, 0x121, 0x1],
        [0x1, 'c', 0x0, 0xb7, 0x128, 0x1],
        [0x1, 'c', 0x0, 0xbd, 0x123, 0x1],
        [0x1, 'c', 0x0, 0xb2, 0x11c, 0x1],
        [0x1, 'c', 0x0, 0xd0, 0x109, 0x1],
        [0x1, 'c', 0x0, 0xa9, 0x124, 0x1],
        [0x1, 's', 0x1, 0x9e, 0x126, 0x1],
        [0x1, 's', 0x0, 0x97, 0x129, 0x1],
        [0x1, 's', 0x0, 0x93, 0x120, 0x1],
        [0x1, 'c', 0x0, 0x96, 0x121, 0x1],
        [0x1, 'c', 0x0, 0xa0, 0x11a, 0x1],
        [0x1, 'c', 0x0, 0x92, 0x112, 0x1],
        [0x1, 'c', 0x0, 0xa7, 0x108, 0x1],
        [0x1, 'c', 0x0, 0xa5, 0x10b, 0x1],
        [0x1, 'g', 0x0, 0xbd, 0x101, 0x1],
        [0x1, 'g', 0x1, 0xc5, 0xf8, 0x1],
        [0x1, 'g', 0x2, 0xaa, 0xff, 0x1],
        [0x1, 'g', 0x2, 0xd4, 0xea, 0x1],
        [0x1, 'g', 0x2, 0xbd, 0xe6, 0x1],
        [0x1, 'g', 0x2, 0xad, 0xdd, 0x1],
        [0x1, 'g', 0x1, 0xd2, 0xd6, 0x1],
        [0x1, 's', 0x1, 0x99, 0x101, 0x1],
        [0x1, 's', 0x0, 0x9e, 0xff, 0x1],
        [0x1, 's', 0x0, 0xb8, 0xf8, 0x1],
        [0x1, 's', 0x0, 0xd4, 0xfe, 0x1],
        [0x1, 's', 0x1, 0xcb, 0xf9, 0x1],
        [0x1, 's', 0x2, 0xcc, 0xfc, 0x1],
        [0x1, 's', 0x2, 0xbb, 0xf8, 0x1],
        [0x1, 's', 0x0, 0xce, 0xed, 0x1],
        [0x1, 's', 0x0, 0xc4, 0xe3, 0x1],
        [0x1, 's', 0x0, 0xb5, 0xe4, 0x1],
        [0x1, 's', 0x1, 0xc7, 0xe3, 0x1],
        [0x1, 's', 0x1, 0xd0, 0xee, 0x1],
        [0x1, 's', 0x1, 0xb3, 0xde, 0x1],
        [0x1, 's', 0x1, 0xd5, 0xdf, 0x1],
        [0x1, 's', 0x2, 0xb6, 0xde, 0x1],
        [0x1, 's', 0x2, 0xd3, 0xe2, 0x1],
        [0x1, 's', 0x2, 0xd6, 0xd6, 0x1],
        [0x1, 's', 0x2, 0xc9, 0xd8, 0x1],
        [0x1, 's', 0x2, 0xd7, 0xc0, 0x1],
        [0x1, 's', 0x1, 0xd2, 0xc6, 0x1],
        [0x1, 's', 0x1, 0xc6, 0xc4, 0x1],
        [0x1, 's', 0x2, 0xd0, 0xc7, 0x1],
        [0x1, 's', 0x2, 0xbb, 0xc0, 0x1],
        [0x1, 's', 0x1, 0xb3, 0xc6, 0x1],
        [0x1, 's', 0x2, 0xb1, 0xc5, 0x1],
        [0x1, 's', 0x0, 0xa4, 0xc5, 0x1],
        [0x1, 's', 0x1, 0x9f, 0xc1, 0x1],
        [0x1, 's', 0x1, 0x95, 0xce, 0x1],
        [0x1, 's', 0x1, 0xa4, 0xd1, 0x1],
        [0x1, 's', 0x2, 0xa5, 0xd2, 0x1],
        [0x1, 's', 0x2, 0xa1, 0xbf, 0x1],
        [0x1, 's', 0x1, 0xa2, 0xe0, 0x1],
        [0x1, 's', 0x0, 0x96, 0xec, 0x1],
        [0x1, 's', 0x1, 0x95, 0xef, 0x1],
        [0x1, 's', 0x2, 0x99, 0xec, 0x1],
        [0x1, 's', 0x2, 0xa0, 0xdf, 0x1],
        [0x1, 's', 0x2, 0x97, 0xcf, 0x1],
        [0x1, 's', 0x2, 0x93, 0xdc, 0x1],
        [0x1, 's', 0x2, 0x91, 0x109, 0x1],
        [0x1, 's', 0x2, 0x91, 0x11d, 0x1],
        [0x1, 'c', 0x0, 0x98, 0x10a, 0x1],
        [0x1, 'c', 0x0, 0xb9, 0x10f, 0x1],
        [0x1, 'c', 0x0, 0xd2, 0xfe, 0x1],
        [0x1, 'c', 0x0, 0xd1, 0x100, 0x1],
        [0x1, 'c', 0x0, 0xc6, 0xfe, 0x1],
        [0x1, 'c', 0x0, 0xd5, 0xf6, 0x1],
        [0x1, 'c', 0x0, 0xd8, 0xed, 0x1],
        [0x1, 'c', 0x0, 0xcc, 0xf0, 0x1],
        [0x1, 'c', 0x0, 0xc4, 0xea, 0x1],
        [0x1, 'c', 0x0, 0xbc, 0xee, 0x1],
        [0x1, 'c', 0x0, 0xb6, 0xf5, 0x1],
        [0x1, 'c', 0x0, 0xad, 0xfc, 0x1],
        [0x1, 'c', 0x0, 0x99, 0xf8, 0x1],
        [0x1, 'c', 0x0, 0x9e, 0xe9, 0x1],
        [0x1, 'c', 0x0, 0x93, 0xe6, 0x1],
        [0x1, 'c', 0x0, 0x97, 0xe0, 0x1],
        [0x1, 'c', 0x0, 0x9d, 0xd6, 0x1],
        [0x1, 'c', 0x0, 0xa7, 0xdb, 0x1],
        [0x1, 'c', 0x0, 0xab, 0xd0, 0x1],
        [0x1, 'c', 0x0, 0xb3, 0xdb, 0x1],
        [0x1, 'c', 0x0, 0xb0, 0xe5, 0x1],
        [0x1, 'c', 0x0, 0xc3, 0xdd, 0x1],
        [0x1, 'c', 0x0, 0xcf, 0xde, 0x1],
        [0x1, 'c', 0x0, 0xd6, 0xcf, 0x1],
        [0x1, 'c', 0x0, 0xcd, 0xd2, 0x1],
        [0x1, 'c', 0x0, 0xcc, 0xc4, 0x1],
        [0x1, 'c', 0x0, 0xd6, 0xc4, 0x1],
        [0x1, 'c', 0x0, 0xbe, 0xc7, 0x1],
        [0x1, 'c', 0x0, 0xb8, 0xc2, 0x1],
        [0x1, 'c', 0x0, 0xac, 0xc7, 0x1],
        [0x1, 'c', 0x0, 0xa1, 0xcc, 0x1],
        [0x1, 'c', 0x0, 0x9d, 0xc4, 0x1],
        [0x1, 'c', 0x0, 0x95, 0xc2, 0x1],
        [0x1, 'c', 0x0, 0x93, 0xd0, 0x1],
        [0x1, 'c', 0x0, 0xcf, 0x112, 0x1],
        [0x1, 'c', 0x0, 0xd9, 0x102, 0x1],
        [0x1, 'c', 0x0, 0xc9, 0x104, 0x1],
        [0x1, 'c', 0x0, 0xb2, 0x114, 0x1],
        [0x1, 'c', 0x0, 0xbb, 0x109, 0x1],
        [0x1, 's', 0x1, 0xcc, 0x104, 0x1],
        [0x1, 's', 0x1, 0xd8, 0x104, 0x1],
        [0x1, 's', 0x1, 0xbb, 0xff, 0x1],
        [0x1, 's', 0x2, 0xbd, 0xfe, 0x1],
        [0x1, 's', 0x2, 0xd4, 0x101, 0x1],
        [0x1, 's', 0x2, 0xb6, 0x11e, 0x1],
        [0x1, 's', 0x2, 0xa9, 0x118, 0x1],
        [0x1, 's', 0x2, 0xd9, 0x111, 0x1],
        [0x1, 's', 0x2, 0xd7, 0x11a, 0x1],
        [0x1, 's', 0x2, 0xac, 0x107, 0x1],
        [0x1, 's', 0x2, 0xb0, 0x10b, 0x1],
        [0x1, 's', 0x2, 0xd7, 0xfb, 0x1],
        [0x1, 'fod', 0x1, 0xdd, 0x11a, 0x0],
        [0x1, 'fod', 0x1, 0xde, 0x11c, 0x0],
        [0x1, 'fod', 0x1, 0xdd, 0x122, 0x0],
        [0x1, 'fod', 0x1, 0xde, 0x126, 0x0],
        [0x1, 'fod', 0x1, 0xdd, 0x129, 0x0],
        [0x1, 'fod', 0x1, 0xdf, 0x12a, 0x0],
        [0x1, 'fod', 0x1, 0xde, 0x12c, 0x0],
        [0x1, 'fod', 0x1, 0xda, 0x12d, 0x0],
        [0x1, 'fod', 0x1, 0xd9, 0x12b, 0x0],
        [0x1, 'fod', 0x1, 0xd7, 0x12d, 0x0],
        [0x1, 'fod', 0x1, 0xd4, 0x12c, 0x0],
        [0x1, 'fod', 0x1, 0xce, 0x12c, 0x0],
        [0x1, 'fod', 0x1, 0xd1, 0x12d, 0x0],
        [0x1, 'fod', 0x1, 0xcc, 0x12b, 0x0],
        [0x1, 'fod', 0x1, 0xca, 0x12d, 0x0],
        [0x1, 'fod', 0x1, 0xc7, 0x12d, 0x0],
        [0x1, 'fod', 0x1, 0xde, 0x11a, 0x0],
        [0x1, 'fod', 0x1, 0xcf, 0x12d, 0x0],
        [0x1, 'fod', 0x1, 0xc5, 0x12d, 0x0],
        [0x1, 'fod', 0x1, 0xd7, 0x123, 0x0],
        [0x1, 'fod', 0x1, 0xd8, 0x11e, 0x0],
        [0x1, 'fod', 0x1, 0xd6, 0x124, 0x0],
        [0x1, 'fod', 0x1, 0xd2, 0x121, 0x0],
        [0x1, 'fod', 0x1, 0xd0, 0x126, 0x0],
        [0x1, 'fod', 0x1, 0xd2, 0x12a, 0x0],
        [0x1, 'fod', 0x1, 0xd4, 0x119, 0x0],
        [0x1, 'fod', 0x1, 0xdb, 0x116, 0x0],
        [0x1, 'fod', 0x1, 0xdb, 0x11a, 0x0],
        [0x1, 'fod', 0x1, 0xcd, 0x11e, 0x0],
        [0x1, 'fod', 0x1, 0xca, 0x125, 0x0],
        [0x1, 'fod', 0x1, 0xc6, 0x127, 0x0],
        [0x1, 'fod', 0x2, 0xd5, 0x11a, 0x0],
        [0x1, 'fod', 0x2, 0xd5, 0x123, 0x0],
        [0x1, 'fod', 0x2, 0xd8, 0x121, 0x0],
        [0x1, 'fod', 0x2, 0xdb, 0x121, 0x0],
        [0x1, 'fod', 0x2, 0xda, 0x11d, 0x0],
        [0x1, 'fod', 0x2, 0xdc, 0x11b, 0x0],
        [0x1, 'fod', 0x2, 0xd3, 0x11b, 0x0],
        [0x1, 'fod', 0x2, 0xd7, 0x119, 0x0],
        [0x1, 'fod', 0x2, 0xd9, 0x117, 0x0],
        [0x1, 'fod', 0x2, 0xd0, 0x122, 0x0],
        [0x1, 'fod', 0x2, 0xd3, 0x128, 0x0],
        [0x1, 'fod', 0x2, 0xd7, 0x126, 0x0],
        [0x1, 'fod', 0x2, 0xd4, 0x12a, 0x0],
        [0x1, 'fod', 0x2, 0xcb, 0x126, 0x0],
        [0x1, 'fod', 0x2, 0xcc, 0x120, 0x0],
        [0x1, 'fod', 0x2, 0xc8, 0x126, 0x0],
        [0x1, 'fod', 0x2, 0xc6, 0x129, 0x0],
        [0x1, 'fod', 0x2, 0xca, 0x12b, 0x0],
        [0x1, 'fod', 0x2, 0xc8, 0x12b, 0x0],
        [0x1, 'fod', 0x2, 0xdc, 0x12c, 0x0],
        [0x1, 'fod', 0x2, 0xdc, 0x127, 0x0],
        [0x1, 'fod', 0x2, 0xdc, 0x124, 0x0],
        [0x1, 'fod', 0x2, 0xdb, 0x11f, 0x0],
        [0x1, 'fod', 0x2, 0xd3, 0x120, 0x0],
        [0x1, 'fod', 0x2, 0xd5, 0x11f, 0x0],
        [0x1, 'fod', 0x2, 0xd3, 0x121, 0x0],
        [0x1, 'fod', 0x2, 0xd4, 0x122, 0x0],
        [0x1, 'fod', 0x2, 0xc3, 0x128, 0x0],
        [0x1, 'fod', 0x2, 0xc4, 0x12b, 0x0],
        [0x1, 'fod', 0x2, 0xc2, 0x12c, 0x0],
        [0x1, 'fod', 0x2, 0xc3, 0x12c, 0x0],
        [0x1, 'fod', 0x2, 0xd5, 0x117, 0x0],
        [0x1, 'fod', 0x2, 0xd3, 0x117, 0x0],
        [0x1, 'fod', 0x0, 0xda, 0x122, 0x0],
        [0x1, 'fod', 0x0, 0xd4, 0x126, 0x0],
        [0x1, 'fod', 0x1, 0xd5, 0x127, 0x0],
        [0x1, 'fod', 0x1, 0xd9, 0x124, 0x0],
        [0x1, 'fod', 0x1, 0xda, 0x120, 0x0],
        [0x1, 'fod', 0x1, 0xd2, 0x127, 0x0],
        [0x1, 'fod', 0x1, 0xd5, 0x124, 0x0],
        [0x1, 'fod', 0x1, 0xd4, 0x121, 0x0],
        [0x1, 'fod', 0x1, 0xcd, 0x127, 0x0],
        [0x1, 'fod', 0x2, 0xce, 0x128, 0x0],
        [0x1, 'fod', 0x2, 0xd0, 0x128, 0x0],
        [0x1, 'fod', 0x2, 0xdd, 0x120, 0x0],
        [0x1, 'fod', 0x2, 0xd1, 0x12b, 0x0],
        [0x1, 'fod', 0x2, 0xd3, 0x123, 0x0],
        [0x1, 'fod', 0x1, 0xcb, 0x113, 0x0],
        [0x1, 'fod', 0x1, 0xcc, 0x110, 0x0],
        [0x1, 'fod', 0x2, 0xcd, 0x111, 0x0],
        [0x1, 'fod', 0x2, 0xcc, 0x114, 0x0],
        [0x1, 'fod', 0x2, 0xca, 0x114, 0x0],
        [0x1, 'fod', 0x2, 0xc7, 0x115, 0x0],
        [0x1, 'fod', 0x2, 0xca, 0x111, 0x0],
        [0x1, 'fod', 0x2, 0xc7, 0x10e, 0x0],
        [0x1, 'fod', 0x2, 0xc2, 0x112, 0x0],
        [0x1, 'fod', 0x2, 0xc2, 0x115, 0x0],
        [0x1, 'fod', 0x1, 0xc0, 0x112, 0x0],
        [0x1, 'fod', 0x1, 0xc2, 0x10b, 0x0],
        [0x1, 'fod', 0x2, 0xc2, 0x109, 0x0],
        [0x1, 'fod', 0x2, 0xbe, 0x110, 0x0],
        [0x1, 'fod', 0x2, 0xbf, 0x113, 0x0],
        [0x1, 'fod', 0x2, 0xc3, 0x112, 0x0],
        [0x1, 'fod', 0x2, 0xc8, 0x10f, 0x0],
        [0x1, 'fod', 0x1, 0xa8, 0xf3, 0x0],
        [0x1, 'fod', 0x1, 0xaf, 0xf0, 0x0],
        [0x1, 'fod', 0x1, 0xa9, 0xea, 0x0],
        [0x1, 'fod', 0x1, 0xa2, 0xeb, 0x0],
        [0x1, 'fod', 0x2, 0xa9, 0xec, 0x0],
        [0x1, 'fod', 0x2, 0xab, 0xea, 0x0],
        [0x1, 'fod', 0x2, 0xa5, 0xee, 0x0],
        [0x1, 'fod', 0x2, 0xad, 0xf1, 0x0],
        [0x1, 'fod', 0x2, 0xae, 0xee, 0x0],
        [0x1, 'fod', 0x2, 0xb0, 0xf0, 0x0],
        [0x1, 'fod', 0x2, 0xa9, 0xf4, 0x0],
        [0x1, 'fod', 0x2, 0xa6, 0xf3, 0x0],
        [0x1, 'fod', 0x2, 0xa2, 0xec, 0x0],
        [0x1, 'fod', 0x2, 0xa4, 0xeb, 0x0],
        [0x1, 'fod', 0x2, 0xa2, 0xe9, 0x0],
        [0x1, 'fod', 0x2, 0xa3, 0xec, 0x0],
        [0x1, 'fod', 0x2, 0xae, 0xf2, 0x0],
        [0x1, 'fod', 0x2, 0xab, 0xf3, 0x0],
        [0x1, 'fod', 0x1, 0xc2, 0xce, 0x0],
        [0x1, 'fod', 0x1, 0xbe, 0xd6, 0x0],
        [0x1, 'fod', 0x1, 0xba, 0xce, 0x0],
        [0x1, 'fod', 0x1, 0xc5, 0xcf, 0x0],
        [0x1, 'fod', 0x2, 0xc4, 0xd0, 0x0],
        [0x1, 'fod', 0x2, 0xc6, 0xce, 0x0],
        [0x1, 'fod', 0x2, 0xc6, 0xd0, 0x0],
        [0x1, 'fod', 0x2, 0xc2, 0xcc, 0x0],
        [0x1, 'fod', 0x2, 0xbb, 0xce, 0x0],
        [0x1, 'fod', 0x2, 0xba, 0xcc, 0x0],
        [0x1, 'fod', 0x2, 0xbd, 0xd6, 0x0],
        [0x1, 'fod', 0x2, 0xbd, 0xd5, 0x0],
        [0x1, 'fod', 0x2, 0xc1, 0xd7, 0x0],
        [0x1, 'fod', 0x2, 0xc2, 0xd6, 0x0],
        [0x1, 'fod', 0x2, 0xbb, 0xd7, 0x0],
        [0x1, 'fod', 0x2, 0xc1, 0xd1, 0x0],
        [0x1, 'fod', 0x2, 0xbd, 0xd3, 0x0],
        [0x1, 'fod', 0x2, 0xbb, 0xd1, 0x0],
        [0x1, 'fod', 0x2, 0xbb, 0xcf, 0x0],
        [0x1, 'fod', 0x2, 0xbf, 0xcd, 0x0],
        [0x1, 'fod', 0x2, 0xbd, 0xcb, 0x0],
        [0x1, 'cs', 0x2, 0xe0, 0xb0, 0x1],
        [0x1, 'cs', 0x0, 0xe0, 0xb1, 0x1],
        [0x1, 'cs', 0x3, 0xe0, 0xb2, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0xb3, 0x1],
        [0x1, 'cs', 0x1, 0xe0, 0xb4, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0xb5, 0x1],
        [0x1, 'cs', 0x0, 0xe0, 0xb6, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0xb7, 0x1],
        [0x1, 'cs', 0x0, 0xe0, 0xb8, 0x1],
        [0x1, 'cs', 0x3, 0xe0, 0xb9, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0xba, 0x1],
        [0x1, 'cs', 0x0, 0xe0, 0xbb, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0xbc, 0x1],
        [0x1, 'cs', 0x0, 0xe0, 0xbd, 0x1],
        [0x1, 'cs', 0x1, 0xe0, 0xbe, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0xbf, 0x1],
        [0x1, 'cs', 0x0, 0xe0, 0xc0, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0xc1, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0xc2, 0x1],
        [0x1, 'cs', 0x1, 0xe0, 0xc3, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0xc4, 0x1],
        [0x1, 'cs', 0x0, 0xe0, 0xc5, 0x1],
        [0x1, 'cs', 0x3, 0xe0, 0xc6, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0xc7, 0x1],
        [0x1, 'cs', 0x1, 0xe0, 0xc8, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0xc9, 0x1],
        [0x1, 'cs', 0x3, 0xe0, 0xca, 0x1],
        [0x1, 'cs', 0x0, 0xe0, 0xcb, 0x1],
        [0x1, 'cs', 0x1, 0xe0, 0xcc, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0xcd, 0x1],
        [0x1, 'cs', 0x0, 0xe0, 0xce, 0x1],
        [0x1, 'cs', 0x1, 0xe0, 0xcf, 0x1],
        [0x1, 'cs', 0x3, 0xe0, 0xd0, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0xd1, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0xd2, 0x1],
        [0x1, 'cs', 0x0, 0xdf, 0xd3, 0x1],
        [0x1, 'cs', 0x1, 0xe0, 0xd3, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0xd4, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0xd5, 0x1],
        [0x1, 'cs', 0x1, 0xe0, 0xd6, 0x1],
        [0x1, 'cs', 0x3, 0xe0, 0xd7, 0x1],
        [0x1, 'cs', 0x0, 0xe0, 0xd8, 0x1],
        [0x1, 'cs', 0x1, 0xe0, 0xd9, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0xda, 0x1],
        [0x1, 'cs', 0x3, 0xe0, 0xdb, 0x1],
        [0x1, 'cs', 0x0, 0xdf, 0xd7, 0x1],
        [0x1, 'cs', 0x2, 0xdf, 0xd6, 0x1],
        [0x1, 'cs', 0x2, 0xdf, 0xd4, 0x1],
        [0x1, 'cs', 0x2, 0xdf, 0xd8, 0x1],
        [0x1, 'cs', 0x3, 0xdf, 0xd9, 0x1],
        [0x1, 'cs', 0x0, 0xdf, 0xda, 0x1],
        [0x1, 'cs', 0x0, 0xe0, 0xdc, 0x1],
        [0x1, 'cs', 0x0, 0xe0, 0xde, 0x1],
        [0x1, 'cs', 0x0, 0xdf, 0xd1, 0x1],
        [0x1, 'cs', 0x0, 0xdf, 0xcd, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0xdd, 0x1],
        [0x1, 'cs', 0x2, 0xdf, 0xdb, 0x1],
        [0x1, 'cs', 0x2, 0xdf, 0xdc, 0x1],
        [0x1, 'cs', 0x2, 0xdf, 0xd5, 0x1],
        [0x1, 'cs', 0x2, 0xdf, 0xd2, 0x1],
        [0x1, 'cs', 0x1, 0xdf, 0xb2, 0x1],
        [0x1, 'cs', 0x3, 0xdf, 0xb3, 0x1],
        [0x1, 'cs', 0x3, 0xdf, 0xb5, 0x1],
        [0x1, 'cs', 0x3, 0xdf, 0xb6, 0x1],
        [0x1, 'cs', 0x1, 0xdf, 0xb9, 0x1],
        [0x1, 'cs', 0x2, 0xdf, 0xb8, 0x1],
        [0x1, 'cs', 0x2, 0xdf, 0xba, 0x1],
        [0x1, 'cs', 0x0, 0xdf, 0xb4, 0x1],
        [0x1, 'cs', 0x0, 0xdf, 0xb7, 0x1],
        [0x1, 'cs', 0x2, 0xdf, 0xbb, 0x1],
        [0x1, 'cs', 0x1, 0xdf, 0xbc, 0x1],
        [0x1, 'cs', 0x2, 0xdf, 0xbd, 0x1],
        [0x1, 'cs', 0x2, 0xdf, 0xbe, 0x1],
        [0x1, 'cs', 0x3, 0xdf, 0xbf, 0x1],
        [0x1, 'cs', 0x1, 0xdf, 0xc0, 0x1],
        [0x1, 'cs', 0x2, 0xdf, 0xc1, 0x1],
        [0x1, 'cs', 0x2, 0xdf, 0xc2, 0x1],
        [0x1, 'cs', 0x3, 0xdf, 0xc3, 0x1],
        [0x1, 'cs', 0x1, 0xdf, 0xc4, 0x1],
        [0x1, 'cs', 0x2, 0xdf, 0xc5, 0x1],
        [0x1, 'cs', 0x2, 0xdf, 0xc7, 0x1],
        [0x1, 'cs', 0x2, 0xdf, 0xc6, 0x1],
        [0x1, 'cs', 0x0, 0xdf, 0xc8, 0x1],
        [0x1, 'cs', 0x2, 0xdf, 0xc9, 0x1],
        [0x1, 'cs', 0x0, 0xdf, 0xca, 0x1],
        [0x1, 'cs', 0x3, 0xdf, 0xcb, 0x1],
        [0x1, 'cs', 0x3, 0xdf, 0xcc, 0x1],
        [0x1, 'cs', 0x3, 0xdf, 0xce, 0x1],
        [0x1, 'cs', 0x3, 0xdf, 0xcf, 0x1],
        [0x1, 'cs', 0x3, 0xdf, 0xd0, 0x1],
        [0x1, 'cs', 0x2, 0xdf, 0xdd, 0x1],
        [0x1, 'cs', 0x2, 0xdf, 0xde, 0x1],
        [0x1, 'cs', 0x0, 0xdf, 0xe0, 0x1],
        [0x1, 'cs', 0x0, 0xe0, 0xe4, 0x1],
        [0x1, 'cs', 0x0, 0xe0, 0xe6, 0x1],
        [0x1, 'cs', 0x0, 0xdf, 0xea, 0x1],
        [0x1, 'cs', 0x2, 0xdf, 0xdf, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0xdf, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0xe0, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0xe1, 0x1],
        [0x1, 'cs', 0x1, 0xdf, 0xe2, 0x1],
        [0x1, 'cs', 0x1, 0xe0, 0xe7, 0x1],
        [0x1, 'cs', 0x1, 0xdf, 0xe8, 0x1],
        [0x1, 'cs', 0x3, 0xdf, 0xe1, 0x1],
        [0x1, 'cs', 0x3, 0xe0, 0xe2, 0x1],
        [0x1, 'cs', 0x3, 0xdf, 0xe3, 0x1],
        [0x1, 'cs', 0x3, 0xe0, 0xe3, 0x1],
        [0x1, 'cs', 0x3, 0xdf, 0xe5, 0x1],
        [0x1, 'cs', 0x3, 0xdf, 0xe4, 0x1],
        [0x1, 'cs', 0x3, 0xe0, 0xe5, 0x1],
        [0x1, 'cs', 0x3, 0xdf, 0xe6, 0x1],
        [0x1, 'cs', 0x3, 0xdf, 0xe7, 0x1],
        [0x1, 'cs', 0x3, 0xe0, 0xe8, 0x1],
        [0x1, 'cs', 0x3, 0xe0, 0xe9, 0x1],
        [0x1, 'cs', 0x3, 0xdf, 0xe9, 0x1],
        [0x1, 'cs', 0x3, 0xe0, 0xea, 0x1],
        [0x1, 'cs', 0x3, 0xe0, 0xeb, 0x1],
        [0x1, 'cs', 0x3, 0xdf, 0xeb, 0x1],
        [0x1, 'cs', 0x1, 0xe0, 0xec, 0x1],
        [0x1, 'cs', 0x2, 0xdf, 0xec, 0x1],
        [0x1, 'cs', 0x2, 0xdf, 0xed, 0x1],
        [0x1, 'cs', 0x3, 0xe0, 0xed, 0x1],
        [0x1, 'cs', 0x3, 0xe0, 0xee, 0x1],
        [0x1, 'cs', 0x0, 0xe0, 0xef, 0x1],
        [0x1, 'cs', 0x1, 0xdf, 0xf1, 0x1],
        [0x1, 'cs', 0x0, 0xe0, 0xf3, 0x1],
        [0x1, 'cs', 0x0, 0xdf, 0xf5, 0x1],
        [0x1, 'cs', 0x0, 0xe0, 0xf7, 0x1],
        [0x1, 'cs', 0x2, 0xdf, 0xf0, 0x1],
        [0x1, 'cs', 0x2, 0xdf, 0xef, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0xf0, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0xf1, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0xf2, 0x1],
        [0x1, 'cs', 0x2, 0xdf, 0xf2, 0x1],
        [0x1, 'cs', 0x2, 0xdf, 0xf3, 0x1],
        [0x1, 'cs', 0x2, 0xdf, 0xf4, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0xf4, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0xf5, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0xf6, 0x1],
        [0x1, 'cs', 0x3, 0xdf, 0xee, 0x1],
        [0x1, 'cs', 0x3, 0xdf, 0xf6, 0x1],
        [0x1, 'cs', 0x2, 0xdf, 0xf7, 0x1],
        [0x1, 'cs', 0x1, 0xdf, 0xf9, 0x1],
        [0x1, 'cs', 0x1, 0xe0, 0xfd, 0x1],
        [0x1, 'cs', 0x1, 0xdf, 0x100, 0x1],
        [0x1, 'cs', 0x0, 0xdf, 0xfe, 0x1],
        [0x1, 'cs', 0x0, 0xe0, 0xfa, 0x1],
        [0x1, 'cs', 0x3, 0xdf, 0xf8, 0x1],
        [0x1, 'cs', 0x3, 0xdf, 0xfa, 0x1],
        [0x1, 'cs', 0x3, 0xdf, 0xfc, 0x1],
        [0x1, 'cs', 0x3, 0xdf, 0xff, 0x1],
        [0x1, 'cs', 0x3, 0xdf, 0x101, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0xf8, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0xf9, 0x1],
        [0x1, 'cs', 0x2, 0xdf, 0xfb, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0xfb, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0xfc, 0x1],
        [0x1, 'cs', 0x2, 0xdf, 0xfd, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0xfe, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0xff, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0x100, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0x101, 0x1],
        [0x1, 'cs', 0x0, 0xe0, 0x102, 0x1],
        [0x1, 'cs', 0x0, 0xdf, 0x105, 0x1],
        [0x1, 'cs', 0x0, 0xe0, 0x107, 0x1],
        [0x1, 'cs', 0x0, 0xe0, 0x10a, 0x1],
        [0x1, 'cs', 0x0, 0xe0, 0x110, 0x1],
        [0x1, 'cs', 0x0, 0xdf, 0x10e, 0x1],
        [0x1, 'cs', 0x0, 0xdf, 0x113, 0x1],
        [0x1, 'cs', 0x1, 0xdf, 0x103, 0x1],
        [0x1, 'cs', 0x1, 0xdf, 0x108, 0x1],
        [0x1, 'cs', 0x1, 0xdf, 0x10c, 0x1],
        [0x1, 'cs', 0x1, 0xe0, 0x112, 0x1],
        [0x1, 'cs', 0x2, 0xdf, 0x102, 0x1],
        [0x1, 'cs', 0x2, 0xdf, 0x104, 0x1],
        [0x1, 'cs', 0x2, 0xdf, 0x107, 0x1],
        [0x1, 'cs', 0x2, 0xdf, 0x109, 0x1],
        [0x1, 'cs', 0x2, 0xdf, 0x10b, 0x1],
        [0x1, 'cs', 0x2, 0xdf, 0x10f, 0x1],
        [0x1, 'cs', 0x2, 0xdf, 0x111, 0x1],
        [0x1, 'cs', 0x3, 0xdf, 0x106, 0x1],
        [0x1, 'cs', 0x3, 0xdf, 0x10a, 0x1],
        [0x1, 'cs', 0x3, 0xdf, 0x10d, 0x1],
        [0x1, 'cs', 0x3, 0xdf, 0x110, 0x1],
        [0x1, 'cs', 0x3, 0xdf, 0x112, 0x1],
        [0x1, 'cs', 0x3, 0xe0, 0x113, 0x1],
        [0x1, 'cs', 0x3, 0xe0, 0x111, 0x1],
        [0x1, 'cs', 0x3, 0xe0, 0x10f, 0x1],
        [0x1, 'cs', 0x3, 0xe0, 0x10e, 0x1],
        [0x1, 'cs', 0x3, 0xe0, 0x10d, 0x1],
        [0x1, 'cs', 0x3, 0xe0, 0x10c, 0x1],
        [0x1, 'cs', 0x3, 0xe0, 0x10b, 0x1],
        [0x1, 'cs', 0x3, 0xe0, 0x109, 0x1],
        [0x1, 'cs', 0x3, 0xe0, 0x108, 0x1],
        [0x1, 'cs', 0x3, 0xe0, 0x106, 0x1],
        [0x1, 'cs', 0x3, 0xe0, 0x105, 0x1],
        [0x1, 'cs', 0x3, 0xe0, 0x104, 0x1],
        [0x1, 'cs', 0x3, 0xe0, 0x103, 0x1],
        [0x1, 'cs', 0x2, 0xdf, 0x114, 0x1],
        [0x1, 'cs', 0x1, 0xe0, 0x114, 0x1],
        [0x1, 'cs', 0x1, 0xe0, 0x118, 0x1],
        [0x1, 'cs', 0x1, 0xdf, 0x119, 0x1],
        [0x1, 'cs', 0x1, 0xe0, 0x11e, 0x1],
        [0x1, 'cs', 0x0, 0xdf, 0x118, 0x1],
        [0x1, 'cs', 0x0, 0xdf, 0x11c, 0x1],
        [0x1, 'cs', 0x0, 0xe0, 0x120, 0x1],
        [0x1, 'cs', 0x0, 0xe0, 0x117, 0x1],
        [0x1, 'cs', 0x2, 0xdf, 0x115, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0x115, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0x116, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0x119, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0x11b, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0x11a, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0x11c, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0x11d, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0x11f, 0x1],
        [0x1, 'cs', 0x2, 0xdf, 0x11f, 0x1],
        [0x1, 'cs', 0x2, 0xdf, 0x11d, 0x1],
        [0x1, 'cs', 0x2, 0xdf, 0x11b, 0x1],
        [0x1, 'cs', 0x2, 0xdf, 0x117, 0x1],
        [0x1, 'cs', 0x3, 0xdf, 0x116, 0x1],
        [0x1, 'cs', 0x3, 0xdf, 0x11a, 0x1],
        [0x1, 'cs', 0x3, 0xdf, 0x11e, 0x1],
        [0x1, 'cs', 0x3, 0xdf, 0x121, 0x1],
        [0x1, 'cs', 0x3, 0xe0, 0x121, 0x1],
        [0x1, 'cs', 0x2, 0xdf, 0x120, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0x122, 0x1],
        [0x1, 'cs', 0x1, 0xdf, 0x122, 0x1],
        [0x1, 'cs', 0x0, 0xe0, 0x124, 0x1],
        [0x1, 'cs', 0x0, 0xdf, 0x126, 0x1],
        [0x1, 'cs', 0x0, 0xe0, 0x129, 0x1],
        [0x1, 'cs', 0x0, 0xdf, 0x12b, 0x1],
        [0x1, 'cs', 0x2, 0xdf, 0x123, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0x123, 0x1],
        [0x1, 'cs', 0x2, 0xdf, 0x124, 0x1],
        [0x1, 'cs', 0x2, 0xdf, 0x125, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0x125, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0x126, 0x1],
        [0x1, 'cs', 0x1, 0xe0, 0x127, 0x1],
        [0x1, 'cs', 0x2, 0xdf, 0x127, 0x1],
        [0x1, 'cs', 0x2, 0xdf, 0x128, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0x128, 0x1],
        [0x1, 'cs', 0x2, 0xdf, 0x129, 0x1],
        [0x1, 'cs', 0x2, 0xdf, 0x12a, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0x12a, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0x12b, 0x1],
        [0x1, 'cs', 0x2, 0xdf, 0x12c, 0x1],
        [0x1, 'cs', 0x1, 0xe0, 0x12c, 0x1],
        [0x1, 'cs', 0x0, 0xdf, 0x12d, 0x1],
        [0x1, 'cs', 0x0, 0xe0, 0x12e, 0x1],
        [0x1, 'cs', 0x0, 0xe0, 0x130, 0x1],
        [0x1, 'cs', 0x3, 0xe0, 0x12d, 0x1],
        [0x1, 'cs', 0x3, 0xe0, 0x12f, 0x1],
        [0x1, 'cs', 0x0, 0xdd, 0x12f, 0x1],
        [0x1, 'cs', 0x0, 0xdb, 0x130, 0x1],
        [0x1, 'cs', 0x1, 0xde, 0x130, 0x1],
        [0x1, 'cs', 0x1, 0xde, 0x12e, 0x1],
        [0x1, 'cs', 0x2, 0xdf, 0x12e, 0x1],
        [0x1, 'cs', 0x2, 0xdf, 0x12f, 0x1],
        [0x1, 'cs', 0x2, 0xde, 0x12f, 0x1],
        [0x1, 'cs', 0x2, 0xdf, 0x130, 0x1],
        [0x1, 'cs', 0x2, 0xdd, 0x130, 0x1],
        [0x1, 'cs', 0x2, 0xdc, 0x130, 0x1],
        [0x1, 'cs', 0x2, 0xdc, 0x12f, 0x1],
        [0x1, 'cs', 0x2, 0xdc, 0x12e, 0x1],
        [0x1, 'cs', 0x2, 0xdd, 0x12e, 0x1],
        [0x1, 'cs', 0x2, 0xdb, 0x12f, 0x1],
        [0x1, 'cs', 0x0, 0xd9, 0x12e, 0x1],
        [0x1, 'cs', 0x0, 0xd7, 0x130, 0x1],
        [0x1, 'cs', 0x0, 0xd6, 0x12e, 0x1],
        [0x1, 'cs', 0x1, 0xda, 0x12e, 0x1],
        [0x1, 'cs', 0x1, 0xd9, 0x130, 0x1],
        [0x1, 'cs', 0x1, 0xd7, 0x12e, 0x1],
        [0x1, 'cs', 0x2, 0xdb, 0x12e, 0x1],
        [0x1, 'cs', 0x2, 0xda, 0x12f, 0x1],
        [0x1, 'cs', 0x2, 0xda, 0x130, 0x1],
        [0x1, 'cs', 0x2, 0xd9, 0x12f, 0x1],
        [0x1, 'cs', 0x2, 0xd8, 0x130, 0x1],
        [0x1, 'cs', 0x2, 0xd7, 0x12f, 0x1],
        [0x1, 'cs', 0x2, 0xd8, 0x12f, 0x1],
        [0x1, 'cs', 0x2, 0xd8, 0x12e, 0x1],
        [0x1, 'cs', 0x2, 0xd6, 0x12f, 0x1],
        [0x1, 'cs', 0x2, 0xd6, 0x130, 0x1],
        [0x1, 'cs', 0x0, 0xd4, 0x12e, 0x1],
        [0x1, 'cs', 0x0, 0xd2, 0x12f, 0x1],
        [0x1, 'cs', 0x0, 0xd4, 0x130, 0x1],
        [0x1, 'cs', 0x0, 0xd0, 0x130, 0x1],
        [0x1, 'cs', 0x1, 0xd2, 0x12e, 0x1],
        [0x1, 'cs', 0x1, 0xd0, 0x12f, 0x1],
        [0x1, 'cs', 0x2, 0xd5, 0x12e, 0x1],
        [0x1, 'cs', 0x2, 0xd5, 0x12f, 0x1],
        [0x1, 'cs', 0x2, 0xd5, 0x130, 0x1],
        [0x1, 'cs', 0x2, 0xd4, 0x12f, 0x1],
        [0x1, 'cs', 0x2, 0xd3, 0x130, 0x1],
        [0x1, 'cs', 0x2, 0xd3, 0x12f, 0x1],
        [0x1, 'cs', 0x2, 0xd3, 0x12e, 0x1],
        [0x1, 'cs', 0x2, 0xd1, 0x12e, 0x1],
        [0x1, 'cs', 0x2, 0xd1, 0x12f, 0x1],
        [0x1, 'cs', 0x2, 0xd1, 0x130, 0x1],
        [0x1, 'cs', 0x2, 0xd2, 0x130, 0x1],
        [0x1, 'cs', 0x2, 0xd0, 0x12e, 0x1],
        [0x1, 'cs', 0x0, 0xce, 0x12f, 0x1],
        [0x1, 'cs', 0x0, 0xcb, 0x130, 0x1],
        [0x1, 'cs', 0x0, 0xc8, 0x12f, 0x1],
        [0x1, 'cs', 0x0, 0xc7, 0x130, 0x1],
        [0x1, 'cs', 0x0, 0xc3, 0x130, 0x1],
        [0x1, 'cs', 0x0, 0xbf, 0x12f, 0x1],
        [0x1, 'cs', 0x0, 0xc1, 0x130, 0x1],
        [0x1, 'cs', 0x0, 0xbd, 0x130, 0x1],
        [0x1, 'cs', 0x1, 0xcc, 0x12f, 0x1],
        [0x1, 'cs', 0x0, 0xc5, 0x12e, 0x1],
        [0x1, 'cs', 0x0, 0xca, 0x12e, 0x1],
        [0x1, 'cs', 0x0, 0xbc, 0x12e, 0x1],
        [0x1, 'cs', 0x0, 0xc2, 0x12e, 0x1],
        [0x1, 'cs', 0x1, 0xc5, 0x12f, 0x1],
        [0x1, 'cs', 0x1, 0xc9, 0x130, 0x1],
        [0x1, 'cs', 0x1, 0xc0, 0x12e, 0x1],
        [0x1, 'cs', 0x1, 0xbd, 0x12f, 0x1],
        [0x1, 'cs', 0x1, 0xcd, 0x12e, 0x1],
        [0x1, 'cs', 0x1, 0xbc, 0x130, 0x1],
        [0x1, 'cs', 0x2, 0xcf, 0x12e, 0x1],
        [0x1, 'cs', 0x2, 0xcf, 0x12f, 0x1],
        [0x1, 'cs', 0x2, 0xcf, 0x130, 0x1],
        [0x1, 'cs', 0x2, 0xce, 0x130, 0x1],
        [0x1, 'cs', 0x2, 0xce, 0x12e, 0x1],
        [0x1, 'cs', 0x2, 0xcd, 0x12f, 0x1],
        [0x1, 'cs', 0x2, 0xcc, 0x130, 0x1],
        [0x1, 'cs', 0x2, 0xcd, 0x130, 0x1],
        [0x1, 'cs', 0x2, 0xcc, 0x12e, 0x1],
        [0x1, 'cs', 0x2, 0xcb, 0x12e, 0x1],
        [0x1, 'cs', 0x2, 0xcb, 0x12f, 0x1],
        [0x1, 'cs', 0x2, 0xca, 0x12f, 0x1],
        [0x1, 'cs', 0x2, 0xc9, 0x12f, 0x1],
        [0x1, 'cs', 0x2, 0xc9, 0x12e, 0x1],
        [0x1, 'cs', 0x2, 0xc8, 0x12e, 0x1],
        [0x1, 'cs', 0x2, 0xc7, 0x12e, 0x1],
        [0x1, 'cs', 0x2, 0xc6, 0x12f, 0x1],
        [0x1, 'cs', 0x2, 0xc6, 0x12e, 0x1],
        [0x1, 'cs', 0x2, 0xc7, 0x12f, 0x1],
        [0x1, 'cs', 0x2, 0xc8, 0x130, 0x1],
        [0x1, 'cs', 0x2, 0xca, 0x130, 0x1],
        [0x1, 'cs', 0x2, 0xc5, 0x130, 0x1],
        [0x1, 'cs', 0x2, 0xc6, 0x130, 0x1],
        [0x1, 'cs', 0x2, 0xc4, 0x130, 0x1],
        [0x1, 'cs', 0x2, 0xc4, 0x12f, 0x1],
        [0x1, 'cs', 0x2, 0xc4, 0x12e, 0x1],
        [0x1, 'cs', 0x2, 0xc3, 0x12e, 0x1],
        [0x1, 'cs', 0x2, 0xc3, 0x12f, 0x1],
        [0x1, 'cs', 0x2, 0xc2, 0x12f, 0x1],
        [0x1, 'cs', 0x2, 0xc2, 0x130, 0x1],
        [0x1, 'cs', 0x2, 0xc1, 0x12f, 0x1],
        [0x1, 'cs', 0x2, 0xc1, 0x12e, 0x1],
        [0x1, 'cs', 0x2, 0xc0, 0x12f, 0x1],
        [0x1, 'cs', 0x2, 0xc0, 0x130, 0x1],
        [0x1, 'cs', 0x2, 0xbf, 0x130, 0x1],
        [0x1, 'cs', 0x2, 0xbe, 0x130, 0x1],
        [0x1, 'cs', 0x2, 0xbe, 0x12f, 0x1],
        [0x1, 'cs', 0x2, 0xbd, 0x12e, 0x1],
        [0x1, 'cs', 0x2, 0xbe, 0x12e, 0x1],
        [0x1, 'cs', 0x2, 0xbf, 0x12e, 0x1],
        [0x1, 'cs', 0x2, 0xbc, 0x12f, 0x1],
        [0x1, 'cs', 0x0, 0xba, 0x12f, 0x1],
        [0x1, 'cs', 0x0, 0xb7, 0x130, 0x1],
        [0x1, 'cs', 0x0, 0xb8, 0x12e, 0x1],
        [0x1, 'cs', 0x0, 0xb5, 0x12e, 0x1],
        [0x1, 'cs', 0x0, 0xb0, 0x12e, 0x1],
        [0x1, 'cs', 0x0, 0xb2, 0x12f, 0x1],
        [0x1, 'cs', 0x0, 0xad, 0x130, 0x1],
        [0x1, 'cs', 0x0, 0xaa, 0x12f, 0x1],
        [0x1, 'cs', 0x0, 0xac, 0x12e, 0x1],
        [0x1, 'cs', 0x1, 0xb6, 0x12f, 0x1],
        [0x1, 'cs', 0x1, 0xb2, 0x130, 0x1],
        [0x1, 'cs', 0x1, 0xaf, 0x130, 0x1],
        [0x1, 'cs', 0x1, 0xad, 0x12e, 0x1],
        [0x1, 'cs', 0x1, 0xb9, 0x130, 0x1],
        [0x1, 'cs', 0x1, 0xa9, 0x130, 0x1],
        [0x1, 'cs', 0x3, 0xbb, 0x130, 0x1],
        [0x1, 'cs', 0x3, 0xba, 0x130, 0x1],
        [0x1, 'cs', 0x3, 0xbb, 0x12f, 0x1],
        [0x1, 'cs', 0x3, 0xbb, 0x12e, 0x1],
        [0x1, 'cs', 0x3, 0xba, 0x12e, 0x1],
        [0x1, 'cs', 0x3, 0xb9, 0x12e, 0x1],
        [0x1, 'cs', 0x3, 0xb9, 0x12f, 0x1],
        [0x1, 'cs', 0x3, 0xb8, 0x12f, 0x1],
        [0x1, 'cs', 0x3, 0xb7, 0x12f, 0x1],
        [0x1, 'cs', 0x3, 0xb7, 0x12e, 0x1],
        [0x1, 'cs', 0x3, 0xb6, 0x12e, 0x1],
        [0x1, 'cs', 0x3, 0xb8, 0x130, 0x1],
        [0x1, 'cs', 0x3, 0xb6, 0x130, 0x1],
        [0x1, 'cs', 0x3, 0xb5, 0x130, 0x1],
        [0x1, 'cs', 0x3, 0xb3, 0x130, 0x1],
        [0x1, 'cs', 0x3, 0xb4, 0x130, 0x1],
        [0x1, 'cs', 0x3, 0xb5, 0x12f, 0x1],
        [0x1, 'cs', 0x3, 0xb4, 0x12f, 0x1],
        [0x1, 'cs', 0x3, 0xb3, 0x12f, 0x1],
        [0x1, 'cs', 0x3, 0xb4, 0x12e, 0x1],
        [0x1, 'cs', 0x3, 0xb3, 0x12e, 0x1],
        [0x1, 'cs', 0x3, 0xb2, 0x12e, 0x1],
        [0x1, 'cs', 0x3, 0xb1, 0x12e, 0x1],
        [0x1, 'cs', 0x3, 0xb1, 0x130, 0x1],
        [0x1, 'cs', 0x3, 0xb1, 0x12f, 0x1],
        [0x1, 'cs', 0x3, 0xb0, 0x12f, 0x1],
        [0x1, 'cs', 0x3, 0xb0, 0x130, 0x1],
        [0x1, 'cs', 0x3, 0xae, 0x130, 0x1],
        [0x1, 'cs', 0x3, 0xaf, 0x12f, 0x1],
        [0x1, 'cs', 0x3, 0xae, 0x12f, 0x1],
        [0x1, 'cs', 0x3, 0xad, 0x12f, 0x1],
        [0x1, 'cs', 0x3, 0xac, 0x12f, 0x1],
        [0x1, 'cs', 0x3, 0xab, 0x12f, 0x1],
        [0x1, 'cs', 0x3, 0xaa, 0x130, 0x1],
        [0x1, 'cs', 0x3, 0xab, 0x130, 0x1],
        [0x1, 'cs', 0x3, 0xac, 0x130, 0x1],
        [0x1, 'cs', 0x3, 0xae, 0x12e, 0x1],
        [0x1, 'cs', 0x3, 0xaf, 0x12e, 0x1],
        [0x1, 'cs', 0x3, 0xab, 0x12e, 0x1],
        [0x1, 'cs', 0x3, 0xaa, 0x12e, 0x1],
        [0x1, 'cs', 0x3, 0xa9, 0x12e, 0x1],
        [0x1, 'cs', 0x3, 0xa9, 0x12f, 0x1],
        [0x1, 'cs', 0x0, 0xa8, 0x12e, 0x1],
        [0x1, 'cs', 0x0, 0xa6, 0x12f, 0x1],
        [0x1, 'cs', 0x0, 0xa3, 0x130, 0x1],
        [0x1, 'cs', 0x0, 0xa1, 0x12e, 0x1],
        [0x1, 'cs', 0x0, 0x9f, 0x12f, 0x1],
        [0x1, 'cs', 0x0, 0x98, 0x130, 0x1],
        [0x1, 'cs', 0x0, 0x9b, 0x12f, 0x1],
        [0x1, 'cs', 0x1, 0xa4, 0x12f, 0x1],
        [0x1, 'cs', 0x1, 0xa2, 0x12f, 0x1],
        [0x1, 'cs', 0x1, 0x9e, 0x130, 0x1],
        [0x1, 'cs', 0x1, 0x9c, 0x12e, 0x1],
        [0x1, 'cs', 0x1, 0x99, 0x12e, 0x1],
        [0x1, 'cs', 0x1, 0x9a, 0x130, 0x1],
        [0x1, 'cs', 0x2, 0xa8, 0x130, 0x1],
        [0x1, 'cs', 0x2, 0xa8, 0x12f, 0x1],
        [0x1, 'cs', 0x2, 0xa7, 0x12f, 0x1],
        [0x1, 'cs', 0x2, 0xa7, 0x130, 0x1],
        [0x1, 'cs', 0x2, 0xa6, 0x130, 0x1],
        [0x1, 'cs', 0x2, 0xa5, 0x130, 0x1],
        [0x1, 'cs', 0x2, 0xa4, 0x130, 0x1],
        [0x1, 'cs', 0x2, 0xa5, 0x12f, 0x1],
        [0x1, 'cs', 0x2, 0xa7, 0x12e, 0x1],
        [0x1, 'cs', 0x2, 0xa6, 0x12e, 0x1],
        [0x1, 'cs', 0x2, 0xa5, 0x12e, 0x1],
        [0x1, 'cs', 0x2, 0xa4, 0x12e, 0x1],
        [0x1, 'cs', 0x2, 0xa3, 0x12e, 0x1],
        [0x1, 'cs', 0x2, 0xa2, 0x12e, 0x1],
        [0x1, 'cs', 0x2, 0xa3, 0x12f, 0x1],
        [0x1, 'cs', 0x2, 0xa2, 0x130, 0x1],
        [0x1, 'cs', 0x2, 0xa0, 0x130, 0x1],
        [0x1, 'cs', 0x2, 0x9f, 0x130, 0x1],
        [0x1, 'cs', 0x2, 0xa1, 0x130, 0x1],
        [0x1, 'cs', 0x2, 0xa1, 0x12f, 0x1],
        [0x1, 'cs', 0x2, 0xa0, 0x12f, 0x1],
        [0x1, 'cs', 0x2, 0xa0, 0x12e, 0x1],
        [0x1, 'cs', 0x2, 0x9e, 0x12e, 0x1],
        [0x1, 'cs', 0x2, 0x9f, 0x12e, 0x1],
        [0x1, 'cs', 0x2, 0x9d, 0x12e, 0x1],
        [0x1, 'cs', 0x2, 0x9c, 0x12f, 0x1],
        [0x1, 'cs', 0x2, 0x9d, 0x12f, 0x1],
        [0x1, 'cs', 0x2, 0x9e, 0x12f, 0x1],
        [0x1, 'cs', 0x2, 0x9d, 0x130, 0x1],
        [0x1, 'cs', 0x2, 0x9c, 0x130, 0x1],
        [0x1, 'cs', 0x2, 0x9b, 0x130, 0x1],
        [0x1, 'cs', 0x2, 0x99, 0x130, 0x1],
        [0x1, 'cs', 0x2, 0x99, 0x12f, 0x1],
        [0x1, 'cs', 0x2, 0x9a, 0x12f, 0x1],
        [0x1, 'cs', 0x2, 0x9a, 0x12e, 0x1],
        [0x1, 'cs', 0x2, 0x9b, 0x12e, 0x1],
        [0x1, 'cs', 0x2, 0x98, 0x12f, 0x1],
        [0x1, 'cs', 0x2, 0x98, 0x12e, 0x1],
        [0x1, 'cs', 0x0, 0x97, 0x12e, 0x1],
        [0x1, 'cs', 0x0, 0x95, 0x12f, 0x1],
        [0x1, 'cs', 0x0, 0x91, 0x130, 0x1],
        [0x1, 'cs', 0x0, 0x93, 0x12e, 0x1],
        [0x1, 'cs', 0x0, 0x8f, 0x12f, 0x1],
        [0x1, 'cs', 0x0, 0x8d, 0x12f, 0x1],
        [0x1, 'cs', 0x1, 0x93, 0x130, 0x1],
        [0x1, 'cs', 0x1, 0x91, 0x12e, 0x1],
        [0x1, 'cs', 0x1, 0x8e, 0x12e, 0x1],
        [0x1, 'cs', 0x1, 0x96, 0x130, 0x1],
        [0x1, 'cs', 0x2, 0x97, 0x130, 0x1],
        [0x1, 'cs', 0x2, 0x97, 0x12f, 0x1],
        [0x1, 'cs', 0x2, 0x96, 0x12f, 0x1],
        [0x1, 'cs', 0x2, 0x96, 0x12e, 0x1],
        [0x1, 'cs', 0x2, 0x94, 0x12e, 0x1],
        [0x1, 'cs', 0x2, 0x92, 0x12e, 0x1],
        [0x1, 'cs', 0x2, 0x90, 0x12e, 0x1],
        [0x1, 'cs', 0x2, 0x8d, 0x12e, 0x1],
        [0x1, 'cs', 0x2, 0x8d, 0x130, 0x1],
        [0x1, 'cs', 0x2, 0x8e, 0x130, 0x1],
        [0x1, 'cs', 0x2, 0x8e, 0x12f, 0x1],
        [0x1, 'cs', 0x2, 0x8f, 0x130, 0x1],
        [0x1, 'cs', 0x2, 0x90, 0x130, 0x1],
        [0x1, 'cs', 0x2, 0x90, 0x12f, 0x1],
        [0x1, 'cs', 0x2, 0x94, 0x130, 0x1],
        [0x1, 'cs', 0x2, 0x94, 0x12f, 0x1],
        [0x1, 'cs', 0x2, 0x92, 0x12f, 0x1],
        [0x1, 'cs', 0x2, 0x91, 0x12f, 0x1],
        [0x1, 'cs', 0x2, 0x93, 0x12f, 0x1],
        [0x1, 'cs', 0x2, 0x92, 0x130, 0x1],
        [0x1, 'cs', 0x2, 0x95, 0x130, 0x1],
        [0x1, 'cs', 0x3, 0x95, 0x12e, 0x1],
        [0x1, 'cs', 0x3, 0x8f, 0x12e, 0x1],
        [0x1, 'cs', 0x0, 0x8b, 0x130, 0x1],
        [0x1, 'cs', 0x0, 0x8a, 0x12e, 0x1],
        [0x1, 'cs', 0x1, 0x8b, 0x12e, 0x1],
        [0x1, 'cs', 0x2, 0x8c, 0x12e, 0x1],
        [0x1, 'cs', 0x2, 0x8c, 0x12f, 0x1],
        [0x1, 'cs', 0x2, 0x8b, 0x12f, 0x1],
        [0x1, 'cs', 0x2, 0x8a, 0x12f, 0x1],
        [0x1, 'cs', 0x2, 0x8a, 0x130, 0x1],
        [0x1, 'cs', 0x2, 0x8c, 0x130, 0x1],
        [0x1, 'cs', 0x0, 0x89, 0x130, 0x1],
        [0x1, 'cs', 0x0, 0x87, 0x12f, 0x1],
        [0x1, 'cs', 0x0, 0x85, 0x130, 0x1],
        [0x1, 'cs', 0x1, 0x87, 0x130, 0x1],
        [0x1, 'cs', 0x1, 0x88, 0x12e, 0x1],
        [0x1, 'cs', 0x2, 0x89, 0x12e, 0x1],
        [0x1, 'cs', 0x2, 0x88, 0x12f, 0x1],
        [0x1, 'cs', 0x2, 0x89, 0x12f, 0x1],
        [0x1, 'cs', 0x2, 0x88, 0x130, 0x1],
        [0x1, 'cs', 0x2, 0x86, 0x130, 0x1],
        [0x1, 'cs', 0x2, 0x86, 0x12f, 0x1],
        [0x1, 'cs', 0x2, 0x85, 0x12f, 0x1],
        [0x1, 'cs', 0x2, 0x84, 0x130, 0x1],
        [0x1, 'cs', 0x0, 0x83, 0x12e, 0x1],
        [0x1, 'cs', 0x0, 0x86, 0x12e, 0x1],
        [0x1, 'cs', 0x0, 0x81, 0x130, 0x1],
        [0x1, 'cs', 0x1, 0x82, 0x12f, 0x1],
        [0x1, 'cs', 0x1, 0x84, 0x12e, 0x1],
        [0x1, 'cs', 0x2, 0x87, 0x12e, 0x1],
        [0x1, 'cs', 0x2, 0x85, 0x12e, 0x1],
        [0x1, 'cs', 0x2, 0x84, 0x12f, 0x1],
        [0x1, 'cs', 0x2, 0x83, 0x12f, 0x1],
        [0x1, 'cs', 0x2, 0x82, 0x130, 0x1],
        [0x1, 'cs', 0x2, 0x83, 0x130, 0x1],
        [0x1, 'cs', 0x2, 0x80, 0x130, 0x1],
        [0x1, 'cs', 0x2, 0x81, 0x12f, 0x1],
        [0x1, 'cs', 0x2, 0x82, 0x12e, 0x1],
        [0x1, 'cs', 0x3, 0x7f, 0x130, 0x1],
        [0x1, 'cs', 0x2, 0x84, 0x12d, 0x1],
        [0x1, 'cs', 0x2, 0x85, 0x12d, 0x1],
        [0x1, 'cs', 0x2, 0x86, 0x12d, 0x1],
        [0x1, 'cs', 0x2, 0x87, 0x12d, 0x1],
        [0x1, 'cs', 0x3, 0x83, 0x12d, 0x1],
        [0x1, 'cs', 0x3, 0x88, 0x12d, 0x1],
        [0x1, 'cs', 0x3, 0x88, 0xb2, 0x1],
        [0x1, 'cs', 0x0, 0x88, 0xb7, 0x1],
        [0x1, 'cs', 0x2, 0x88, 0xb6, 0x1],
        [0x1, 'cs', 0x1, 0x88, 0xb5, 0x1],
        [0x1, 'cs', 0x0, 0x88, 0xb3, 0x1],
        [0x1, 'cs', 0x3, 0x88, 0xb4, 0x1],
        [0x1, 'cs', 0x2, 0x87, 0xb7, 0x1],
        [0x1, 'cs', 0x1, 0x87, 0xb6, 0x1],
        [0x1, 'cs', 0x3, 0x87, 0xb4, 0x1],
        [0x1, 'cs', 0x0, 0x86, 0xb7, 0x1],
        [0x1, 'cs', 0x2, 0x85, 0xb7, 0x1],
        [0x1, 'cs', 0x3, 0x85, 0xb6, 0x1],
        [0x1, 'cs', 0x1, 0x84, 0xb7, 0x1],
        [0x1, 'cs', 0x3, 0x83, 0xb7, 0x1],
        [0x1, 'cs', 0x2, 0x87, 0xb5, 0x1],
        [0x1, 'cs', 0x2, 0x86, 0xb6, 0x1],
        [0x1, 'cs', 0x3, 0x86, 0xb5, 0x1],
        [0x1, 'fod', 0x0, 0xd5, 0x12d, 0x0],
        [0x1, 'fod', 0x0, 0xcc, 0x12d, 0x0],
        [0x1, 'fod', 0x1, 0xc4, 0x120, 0x0],
        [0x1, 'fod', 0x1, 0xc6, 0x11b, 0x0],
        [0x1, 'fod', 0x1, 0xbe, 0x120, 0x0],
        [0x1, 'fod', 0x1, 0xbd, 0x128, 0x0],
        [0x1, 'fod', 0x1, 0xc1, 0x125, 0x0],
        [0x1, 'fod', 0x1, 0xb7, 0x124, 0x0],
        [0x1, 'fod', 0x1, 0xba, 0x11f, 0x0],
        [0x1, 'fod', 0x1, 0xbe, 0x122, 0x0],
        [0x1, 'fod', 0x1, 0xda, 0x10f, 0x0],
        [0x1, 'fod', 0x1, 0xdc, 0x10a, 0x0],
        [0x1, 'fod', 0x1, 0xd3, 0x10c, 0x0],
        [0x1, 'fod', 0x1, 0xd2, 0x112, 0x0],
        [0x1, 'fod', 0x1, 0xcd, 0x107, 0x0],
        [0x1, 'fod', 0x1, 0xd8, 0x102, 0x0],
        [0x1, 'fod', 0x2, 0xc9, 0x126, 0x0],
        [0x1, 'fod', 0x2, 0xbe, 0x128, 0x0],
        [0x1, 'fod', 0x2, 0xbc, 0x12b, 0x0],
        [0x1, 'fod', 0x2, 0xba, 0x129, 0x0],
        [0x1, 'fod', 0x2, 0xbc, 0x128, 0x0],
        [0x1, 'fod', 0x2, 0xbd, 0x123, 0x0],
        [0x1, 'fod', 0x2, 0xbd, 0x11e, 0x0],
        [0x1, 'fod', 0x2, 0xbf, 0x11e, 0x0],
        [0x1, 'fod', 0x2, 0xc5, 0x11e, 0x0],
        [0x1, 'fod', 0x2, 0xc3, 0x122, 0x0],
        [0x1, 'fod', 0x2, 0xba, 0x120, 0x0],
        [0x1, 'fod', 0x2, 0xb8, 0x122, 0x0],
        [0x1, 'fod', 0x2, 0xb7, 0x125, 0x0],
        [0x1, 'fod', 0x2, 0xc6, 0x11e, 0x0],
        [0x1, 'fod', 0x2, 0xc4, 0x11b, 0x0],
        [0x1, 'fod', 0x2, 0xc4, 0x119, 0x0],
        [0x1, 'fod', 0x2, 0xc9, 0x118, 0x0],
        [0x1, 'fod', 0x2, 0xcd, 0x11f, 0x0],
        [0x1, 'fod', 0x2, 0xd1, 0x11b, 0x0],
        [0x1, 'fod', 0x2, 0xd4, 0x118, 0x0],
        [0x1, 'fod', 0x2, 0xd1, 0x115, 0x0],
        [0x1, 'fod', 0x2, 0xd9, 0x116, 0x0],
        [0x1, 'fod', 0x2, 0xdb, 0x113, 0x0],
        [0x1, 'fod', 0x2, 0xdc, 0x10f, 0x0],
        [0x1, 'fod', 0x2, 0xdc, 0x10b, 0x0],
        [0x1, 'fod', 0x2, 0xd9, 0x109, 0x0],
        [0x1, 'fod', 0x2, 0xd5, 0x10b, 0x0],
        [0x1, 'fod', 0x2, 0xd0, 0x108, 0x0],
        [0x1, 'fod', 0x2, 0xce, 0x105, 0x0],
        [0x1, 'fod', 0x2, 0xcb, 0x109, 0x0],
        [0x1, 'fod', 0x2, 0xcc, 0x10e, 0x0],
        [0x1, 'fod', 0x2, 0xc4, 0x10b, 0x0],
        [0x1, 'fod', 0x2, 0xd6, 0x105, 0x0],
        [0x1, 'fod', 0x2, 0xd3, 0x104, 0x0],
        [0x1, 'fod', 0x2, 0xda, 0x100, 0x0],
        [0x1, 'fod', 0x2, 0xdb, 0x106, 0x0],
        [0x1, 'fod', 0x2, 0xdc, 0xfd, 0x0],
        [0x1, 'fod', 0x2, 0xd3, 0x101, 0x0],
        [0x1, 'la', 0x3, 0xc6, 0x1b, 0x1],
        [0x1, 'la', 0x3, 0xc9, 0x1e, 0x1],
        [0x1, 'la', 0x3, 0xc8, 0x20, 0x1],
        [0x1, 'la', 0x3, 0xc6, 0x21, 0x1],
        [0x1, 'la', 0x3, 0xc4, 0x21, 0x1],
        [0x1, 'la', 0x3, 0xc2, 0x20, 0x1],
        [0x1, 'la', 0x3, 0xc2, 0x1c, 0x1],
        [0x1, 'la', 0x0, 0xc8, 0x1c, 0x1],
        [0x1, 'la', 0x0, 0xc1, 0x1e, 0x1],
        [0x1, 'la', 0x3, 0xc4, 0x1b, 0x1],
        [0x1, 'la', 0x3, 0xc7, 0x1e, 0x1],
        [0x1, 'la', 0x3, 0xc5, 0x1d, 0x1],
        [0x1, 'la', 0x3, 0xc3, 0x1e, 0x1],
        [0x1, 'la', 0x3, 0xc5, 0x1f, 0x1],
        [0x1, 'la', 0x2, 0xc9, 0x21, 0x1],
        [0x1, 'la', 0x4, 0xca, 0x22, 0x1],
        [0x1, 'la', 0x4, 0xca, 0x23, 0x1],
        [0x1, 'la', 0x4, 0xcb, 0x24, 0x1],
        [0x1, 'la', 0x4, 0xcc, 0x25, 0x1],
        [0x1, 'la', 0x2, 0xcd, 0x26, 0x1],
        [0x1, 'la', 0x5, 0xcd, 0x27, 0x1],
        [0x1, 'la', 0x5, 0xcd, 0x28, 0x1],
        [0x1, 'la', 0x2, 0xce, 0x29, 0x1],
        [0x1, 'la', 0x1, 0xcf, 0x2a, 0x1],
        [0x1, 'la', 0x1, 0xcd, 0x29, 0x1],
        [0x1, 'la', 0x4, 0xd0, 0x2b, 0x1],
        [0x1, 'la', 0x4, 0xd1, 0x2b, 0x1],
        [0x1, 'la', 0x1, 0xd2, 0x2b, 0x1],
        [0x1, 'la', 0x2, 0xd3, 0x2b, 0x1],
        [0x1, 'la', 0x5, 0xd4, 0x2b, 0x1],
        [0x1, 'la', 0x4, 0xd5, 0x2c, 0x1],
        [0x1, 'la', 0x3, 0xdf, 0x36, 0x1],
        [0x1, 'la', 0x3, 0xdd, 0x35, 0x1],
        [0x1, 'la', 0x3, 0xdb, 0x35, 0x1],
        [0x1, 'la', 0x4, 0xda, 0x34, 0x1],
        [0x1, 'la', 0x4, 0xd9, 0x33, 0x1],
        [0x1, 'la', 0x4, 0xd8, 0x33, 0x1],
        [0x1, 'la', 0x1, 0xd7, 0x32, 0x1],
        [0x1, 'la', 0x4, 0xd4, 0x2e, 0x1],
        [0x1, 'la', 0x1, 0xd2, 0x2c, 0x1],
        [0x1, 'la', 0x3, 0xce, 0x32, 0x1],
        [0x1, 're', 0x0, 0xd9, 0x18, 0x1],
        [0x1, 're', 0x0, 0xcf, 0x10, 0x1],
        [0x1, 'de', 0x2c, 0x36, 0xe, 0x0],
        [0x1, 'de', 0x2c, 0x35, 0xd, 0x0],
        [0x1, 'de', 0x2c, 0x33, 0x10, 0x0],
        [0x1, 'de', 0x2c, 0x31, 0xd, 0x0],
        [0x1, 'de', 0x2c, 0x30, 0xe, 0x0],
        [0x1, 'de', 0x15, 0x4e, 0x125, 0x0],
        [0x1, 'cs', 0x0, 0xdd, 0x8, 0x1],
        [0x1, 'cs', 0x0, 0xe0, 0x9, 0x1],
        [0x1, 'cs', 0x1, 0xdf, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0xde, 0x8, 0x1],
        [0x1, 'cs', 0x0, 0xe0, 0x6, 0x1],
        [0x1, 'cs', 0x0, 0xde, 0x5, 0x1],
        [0x1, 'cs', 0x0, 0xdb, 0x7, 0x1],
        [0x1, 'cs', 0x1, 0xdc, 0x5, 0x1],
        [0x1, 'cs', 0x1, 0xd9, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0x5, 0x1],
        [0x1, 'cs', 0x2, 0xdf, 0x5, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0xdf, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0xdf, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0xde, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0xde, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0xdd, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0xdd, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0xdd, 0x5, 0x1],
        [0x1, 'cs', 0x2, 0xdc, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0xdc, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0xdc, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0xdb, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0xdb, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0xdb, 0x5, 0x1],
        [0x1, 'cs', 0x0, 0xda, 0x5, 0x1],
        [0x1, 'cs', 0x0, 0xd8, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0xda, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0xd9, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0xda, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0xda, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0xd9, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0xd9, 0x5, 0x1],
        [0x1, 'cs', 0x1, 0xd7, 0x6, 0x1],
        [0x1, 'cs', 0x1, 0xd5, 0x5, 0x1],
        [0x1, 'cs', 0x0, 0xd6, 0x6, 0x1],
        [0x1, 'cs', 0x0, 0xd8, 0x5, 0x1],
        [0x1, 'cs', 0x0, 0xd5, 0x8, 0x1],
        [0x1, 'cs', 0x0, 0xd3, 0x7, 0x1],
        [0x1, 'cs', 0x0, 0xd1, 0x5, 0x1],
        [0x1, 'cs', 0x0, 0xd0, 0x7, 0x1],
        [0x1, 'cs', 0x0, 0xcf, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0xd8, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0xd8, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0xd7, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0xd7, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0xd6, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0xd6, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0xd7, 0x5, 0x1],
        [0x1, 'cs', 0x2, 0xd6, 0x5, 0x1],
        [0x1, 'cs', 0x2, 0xd5, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0xd5, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0xd4, 0x7, 0x1],
        [0x1, 'cs', 0x1, 0xd3, 0x5, 0x1],
        [0x1, 'cs', 0x1, 0xd1, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0xd4, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0xd3, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0xd2, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0xd1, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0xd2, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0xd2, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0xd4, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0xd4, 0x5, 0x1],
        [0x1, 'cs', 0x2, 0xd3, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0xd2, 0x5, 0x1],
        [0x1, 'cs', 0x2, 0xd1, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0xd0, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0xd0, 0x5, 0x1],
        [0x1, 'cs', 0x2, 0xcf, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0xcf, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0xcf, 0x5, 0x1],
        [0x1, 'cs', 0x2, 0xce, 0x5, 0x1],
        [0x1, 'cs', 0x2, 0xd0, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0xce, 0x6, 0x1],
        [0x1, 'cs', 0x0, 0xcc, 0x8, 0x1],
        [0x1, 'cs', 0x0, 0xcd, 0x6, 0x1],
        [0x1, 'cs', 0x0, 0xcb, 0x5, 0x1],
        [0x1, 'cs', 0x0, 0xca, 0x7, 0x1],
        [0x1, 'cs', 0x0, 0xc7, 0x8, 0x1],
        [0x1, 'cs', 0x0, 0xc8, 0x6, 0x1],
        [0x1, 'cs', 0x0, 0xc5, 0x6, 0x1],
        [0x1, 'cs', 0x0, 0xc3, 0x8, 0x1],
        [0x1, 'cs', 0x0, 0xc2, 0x6, 0x1],
        [0x1, 'cs', 0x1, 0xca, 0x8, 0x1],
        [0x1, 'cs', 0x1, 0xce, 0x7, 0x1],
        [0x1, 'cs', 0x1, 0xc9, 0x5, 0x1],
        [0x1, 'cs', 0x1, 0xc5, 0x8, 0x1],
        [0x1, 'cs', 0x1, 0xc0, 0x7, 0x1],
        [0x1, 'cs', 0x1, 0xc3, 0x5, 0x1],
        [0x1, 'cs', 0x2, 0xcd, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0xcd, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0xce, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0xcc, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0xcc, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0xcc, 0x5, 0x1],
        [0x1, 'cs', 0x2, 0xcd, 0x5, 0x1],
        [0x1, 'cs', 0x2, 0xcb, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0xcb, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0xcb, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0xc9, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0xc8, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0xc8, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0xc9, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0xc9, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0xca, 0x5, 0x1],
        [0x1, 'cs', 0x2, 0xca, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0xc8, 0x5, 0x1],
        [0x1, 'cs', 0x2, 0xc7, 0x5, 0x1],
        [0x1, 'cs', 0x2, 0xc5, 0x5, 0x1],
        [0x1, 'cs', 0x2, 0xc4, 0x5, 0x1],
        [0x1, 'cs', 0x2, 0xc6, 0x5, 0x1],
        [0x1, 'cs', 0x2, 0xc6, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0xc7, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0xc7, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0xc6, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0xc6, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0xc5, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0xc4, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0xc4, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0xc4, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0xc3, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0xc3, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0xc2, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0xc1, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0xc2, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0xc1, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0xc1, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0xc1, 0x5, 0x1],
        [0x1, 'cs', 0x2, 0xc2, 0x5, 0x1],
        [0x1, 'cs', 0x0, 0xc0, 0x5, 0x1],
        [0x1, 'cs', 0x0, 0xbf, 0x8, 0x1],
        [0x1, 'cs', 0x0, 0xbe, 0x6, 0x1],
        [0x1, 'cs', 0x0, 0xbc, 0x7, 0x1],
        [0x1, 'cs', 0x0, 0xba, 0x8, 0x1],
        [0x1, 'cs', 0x0, 0xba, 0x5, 0x1],
        [0x1, 'cs', 0x0, 0xb8, 0x7, 0x1],
        [0x1, 'cs', 0x0, 0xb6, 0x8, 0x1],
        [0x1, 'cs', 0x0, 0xb5, 0x6, 0x1],
        [0x1, 'cs', 0x1, 0xbd, 0x8, 0x1],
        [0x1, 'cs', 0x1, 0xb7, 0x8, 0x1],
        [0x1, 'cs', 0x1, 0xbc, 0x5, 0x1],
        [0x1, 'cs', 0x1, 0xb9, 0x6, 0x1],
        [0x1, 'cs', 0x1, 0xb4, 0x7, 0x1],
        [0x1, 'cs', 0x1, 0xb7, 0x5, 0x1],
        [0x1, 'cs', 0x1, 0xb2, 0x8, 0x1],
        [0x1, 'cs', 0x1, 0xb1, 0x6, 0x1],
        [0x1, 'cs', 0x1, 0xad, 0x7, 0x1],
        [0x1, 'cs', 0x1, 0xab, 0x7, 0x1],
        [0x1, 'cs', 0x0, 0xb1, 0x8, 0x1],
        [0x1, 'cs', 0x0, 0xaf, 0x7, 0x1],
        [0x1, 'cs', 0x0, 0xb3, 0x5, 0x1],
        [0x1, 'cs', 0x0, 0xae, 0x5, 0x1],
        [0x1, 'cs', 0x0, 0xb0, 0x5, 0x1],
        [0x1, 'cs', 0x0, 0xac, 0x8, 0x1],
        [0x1, 'cs', 0x0, 0xaa, 0x8, 0x1],
        [0x1, 'cs', 0x0, 0xa9, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0xc0, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0xc0, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0xbf, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0xbf, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0xbf, 0x5, 0x1],
        [0x1, 'cs', 0x2, 0xbe, 0x5, 0x1],
        [0x1, 'cs', 0x2, 0xbd, 0x5, 0x1],
        [0x1, 'cs', 0x2, 0xbd, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0xbd, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0xbe, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0xbe, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0xbc, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0xbb, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0xbb, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0xbb, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0xbc, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0xbb, 0x5, 0x1],
        [0x1, 'cs', 0x2, 0xba, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0xba, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0xb9, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0xb9, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0xb8, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0xb7, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0xb7, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0xb8, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0xb8, 0x5, 0x1],
        [0x1, 'cs', 0x2, 0xb9, 0x5, 0x1],
        [0x1, 'cs', 0x2, 0xb6, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0xb6, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0xb5, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0xb5, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0xb4, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0xb3, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0xb6, 0x5, 0x1],
        [0x1, 'cs', 0x2, 0xb5, 0x5, 0x1],
        [0x1, 'cs', 0x2, 0xb4, 0x5, 0x1],
        [0x1, 'cs', 0x2, 0xb4, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0xb3, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0xb3, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0xb2, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0xb2, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0xb2, 0x5, 0x1],
        [0x1, 'cs', 0x2, 0xb1, 0x5, 0x1],
        [0x1, 'cs', 0x2, 0xb1, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0xb0, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0xb0, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0xaf, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0xaf, 0x5, 0x1],
        [0x1, 'cs', 0x2, 0xb0, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0xae, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0xaf, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0xad, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0xae, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0xad, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0xae, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0xac, 0x5, 0x1],
        [0x1, 'cs', 0x2, 0xad, 0x5, 0x1],
        [0x1, 'cs', 0x2, 0xac, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0xac, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0xab, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0xaa, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0xaa, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0xaa, 0x5, 0x1],
        [0x1, 'cs', 0x2, 0xab, 0x5, 0x1],
        [0x1, 'cs', 0x2, 0xab, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0xa9, 0x5, 0x1],
        [0x1, 'cs', 0x2, 0xa9, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0xa9, 0x8, 0x1],
        [0x1, 'cs', 0x1, 0xa8, 0x7, 0x1],
        [0x1, 'cs', 0x1, 0xa6, 0x5, 0x1],
        [0x1, 'cs', 0x1, 0xa4, 0x7, 0x1],
        [0x1, 'cs', 0x1, 0xa0, 0x7, 0x1],
        [0x1, 'cs', 0x1, 0x9c, 0x8, 0x1],
        [0x1, 'cs', 0x0, 0xa6, 0x8, 0x1],
        [0x1, 'cs', 0x0, 0xa8, 0x5, 0x1],
        [0x1, 'cs', 0x0, 0xa4, 0x6, 0x1],
        [0x1, 'cs', 0x0, 0xa2, 0x7, 0x1],
        [0x1, 'cs', 0x0, 0x9e, 0x8, 0x1],
        [0x1, 'cs', 0x0, 0x9d, 0x6, 0x1],
        [0x1, 'cs', 0x0, 0xa1, 0x5, 0x1],
        [0x1, 'cs', 0x0, 0x9f, 0x5, 0x1],
        [0x1, 'cs', 0x0, 0x9b, 0x7, 0x1],
        [0x1, 'cs', 0x0, 0x9a, 0x5, 0x1],
        [0x1, 'cs', 0x0, 0x97, 0x7, 0x1],
        [0x1, 'cs', 0x1, 0x99, 0x8, 0x1],
        [0x1, 'cs', 0x1, 0x97, 0x5, 0x1],
        [0x1, 'cs', 0x2, 0xa8, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0xa8, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0xa7, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0xa7, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0xa7, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0xa7, 0x5, 0x1],
        [0x1, 'cs', 0x2, 0xa6, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0xa6, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0xa5, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0xa5, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0xa5, 0x5, 0x1],
        [0x1, 'cs', 0x2, 0xa4, 0x5, 0x1],
        [0x1, 'cs', 0x2, 0xa3, 0x5, 0x1],
        [0x1, 'cs', 0x2, 0xa2, 0x5, 0x1],
        [0x1, 'cs', 0x2, 0xa2, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0xa3, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0xa3, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0xa3, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0xa4, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0xa5, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0xa1, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0xa2, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0xa0, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0x9f, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0x9f, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0x9f, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0xa0, 0x5, 0x1],
        [0x1, 'cs', 0x2, 0xa0, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0xa1, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0xa1, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0x9d, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0x9e, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0x9e, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0x9e, 0x5, 0x1],
        [0x1, 'cs', 0x2, 0x9b, 0x5, 0x1],
        [0x1, 'cs', 0x2, 0x9b, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0x9c, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0x9c, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0x9d, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0x9b, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0x9a, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0x9a, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0x9a, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0x98, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0x99, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0x99, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0x99, 0x5, 0x1],
        [0x1, 'cs', 0x2, 0x98, 0x5, 0x1],
        [0x1, 'cs', 0x2, 0x98, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0x98, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0x97, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0x9d, 0x5, 0x1],
        [0x1, 'cs', 0x1, 0x9c, 0x5, 0x1],
        [0x1, 'cs', 0x0, 0x96, 0x5, 0x1],
        [0x1, 'cs', 0x0, 0x95, 0x7, 0x1],
        [0x1, 'cs', 0x0, 0x93, 0x8, 0x1],
        [0x1, 'cs', 0x0, 0x92, 0x5, 0x1],
        [0x1, 'cs', 0x0, 0x90, 0x7, 0x1],
        [0x1, 'cs', 0x0, 0x8e, 0x5, 0x1],
        [0x1, 'cs', 0x1, 0x93, 0x6, 0x1],
        [0x1, 'cs', 0x1, 0x91, 0x8, 0x1],
        [0x1, 'cs', 0x1, 0x90, 0x5, 0x1],
        [0x1, 'cs', 0x2, 0x94, 0x5, 0x1],
        [0x1, 'cs', 0x2, 0x95, 0x5, 0x1],
        [0x1, 'cs', 0x2, 0x96, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0x96, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0x97, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0x96, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0x95, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0x94, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0x95, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0x94, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0x94, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0x93, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0x93, 0x5, 0x1],
        [0x1, 'cs', 0x2, 0x92, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0x92, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0x92, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0x91, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0x91, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0x91, 0x5, 0x1],
        [0x1, 'cs', 0x2, 0x90, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0x8f, 0x5, 0x1],
        [0x1, 'cs', 0x2, 0x8f, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0x8e, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0x8d, 0x5, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0xa, 0x1],
        [0x1, 'cs', 0x0, 0xe0, 0xb, 0x1],
        [0x1, 'cs', 0x0, 0xe0, 0xd, 0x1],
        [0x1, 'cs', 0x0, 0xe0, 0x11, 0x1],
        [0x1, 'cs', 0x0, 0xe0, 0x13, 0x1],
        [0x1, 'cs', 0x0, 0xe0, 0x16, 0x1],
        [0x1, 'cs', 0x0, 0xe0, 0x18, 0x1],
        [0x1, 'cs', 0x0, 0xe0, 0x1d, 0x1],
        [0x1, 'cs', 0x0, 0xe0, 0x21, 0x1],
        [0x1, 'cs', 0x0, 0xe0, 0x23, 0x1],
        [0x1, 'cs', 0x0, 0xe0, 0x26, 0x1],
        [0x1, 'cs', 0x1, 0xe0, 0xe, 0x1],
        [0x1, 'cs', 0x1, 0xe0, 0x14, 0x1],
        [0x1, 'cs', 0x1, 0xe0, 0x1b, 0x1],
        [0x1, 'cs', 0x1, 0xe0, 0x1f, 0x1],
        [0x1, 'cs', 0x1, 0xe0, 0x24, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0xc, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0xf, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0x10, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0x12, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0x15, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0x17, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0x19, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0x1a, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0x1c, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0x1e, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0x20, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0x22, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0x25, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0x27, 0x1],
        [0x1, 'cs', 0x0, 0xe0, 0x29, 0x1],
        [0x1, 'cs', 0x0, 0xe0, 0x2c, 0x1],
        [0x1, 'cs', 0x0, 0xe0, 0x2e, 0x1],
        [0x1, 'cs', 0x0, 0xe0, 0x34, 0x1],
        [0x1, 'cs', 0x0, 0xe0, 0x39, 0x1],
        [0x1, 'cs', 0x1, 0xe0, 0x2f, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0x28, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0x2a, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0x2b, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0x2d, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0x31, 0x1],
        [0x1, 'cs', 0x1, 0xe0, 0x32, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0x33, 0x1],
        [0x1, 'la', 0x3, 0xe0, 0x36, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0x38, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0x3a, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0x3d, 0x1],
        [0x1, 'cs', 0x0, 0xe0, 0x3c, 0x1],
        [0x1, 'cs', 0x0, 0xe0, 0x40, 0x1],
        [0x1, 'cs', 0x0, 0xe0, 0x42, 0x1],
        [0x1, 'cs', 0x0, 0xe0, 0x46, 0x1],
        [0x1, 'cs', 0x0, 0xe0, 0x4a, 0x1],
        [0x1, 'cs', 0x0, 0xe0, 0x4d, 0x1],
        [0x1, 'cs', 0x1, 0xe0, 0x3e, 0x1],
        [0x1, 'cs', 0x1, 0xe0, 0x44, 0x1],
        [0x1, 'cs', 0x1, 0xe0, 0x48, 0x1],
        [0x1, 'cs', 0x1, 0xe0, 0x4c, 0x1],
        [0x1, 'cs', 0x1, 0xe0, 0x50, 0x1],
        [0x1, 'cs', 0x1, 0xe0, 0x53, 0x1],
        [0x1, 'cs', 0x1, 0xe0, 0x5b, 0x1],
        [0x1, 'cs', 0x1, 0xe0, 0x5f, 0x1],
        [0x1, 'cs', 0x1, 0xe0, 0x61, 0x1],
        [0x1, 'cs', 0x0, 0xe0, 0x55, 0x1],
        [0x1, 'cs', 0x0, 0xe0, 0x58, 0x1],
        [0x1, 'cs', 0x0, 0xe0, 0x5d, 0x1],
        [0x1, 'cs', 0x0, 0xe0, 0x62, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0x3b, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0x3f, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0x41, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0x43, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0x45, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0x47, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0x49, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0x4b, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0x4e, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0x4f, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0x51, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0x52, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0x54, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0x56, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0x57, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0x59, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0x5a, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0x5c, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0x5e, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0x60, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0x63, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0x64, 0x1],
        [0x1, 'cs', 0x0, 0xe0, 0x65, 0x1],
        [0x1, 'cs', 0x1, 0xe0, 0x67, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0x66, 0x1],
        [0x1, 'cs', 0x0, 0xde, 0xa, 0x1],
        [0x1, 'cs', 0x2, 0xdf, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0xde, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0xdd, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0xdf, 0xa, 0x1],
        [0x1, 'cs', 0x2, 0xdf, 0xb, 0x1],
        [0x1, 'cs', 0x2, 0xdf, 0xc, 0x1],
        [0x1, 'cs', 0x3, 0xdf, 0xd, 0x1],
        [0x1, 'cs', 0x3, 0xde, 0xb, 0x1],
        [0x1, 'cs', 0x3, 0xdc, 0x9, 0x1],
        [0x1, 'cs', 0x3, 0xdb, 0x9, 0x1],
        [0x1, 'cs', 0x3, 0xdd, 0xa, 0x1],
        [0x1, 're', 0x2, 0xdb, 0xd, 0x1],
        [0x1, 're', 0x1, 0xda, 0x12, 0x1],
        [0x1, 're', 0x1, 0xd6, 0xd, 0x1],
        [0x1, 'cs', 0x0, 0xdd, 0x14, 0x1],
        [0x1, 'cs', 0x1, 0xdf, 0x12, 0x1],
        [0x1, 'cs', 0x2, 0xde, 0x13, 0x1],
        [0x1, 'cs', 0x2, 0xdf, 0x13, 0x1],
        [0x1, 'cs', 0x2, 0xdf, 0x14, 0x1],
        [0x1, 'cs', 0x2, 0xde, 0x14, 0x1],
        [0x1, 'cs', 0x2, 0xdc, 0x15, 0x1],
        [0x1, 'cs', 0x0, 0xdb, 0x15, 0x1],
        [0x1, 'cs', 0x3, 0xdd, 0x15, 0x1],
        [0x1, 'cs', 0x3, 0xda, 0x15, 0x1],
        [0x1, 'cs', 0x3, 0xde, 0x15, 0x1],
        [0x1, 'cs', 0x3, 0xdc, 0x16, 0x1],
        [0x1, 'cs', 0x3, 0xdb, 0x16, 0x1],
        [0x1, 'cs', 0x3, 0xdd, 0x16, 0x1],
        [0x1, 'cs', 0x0, 0xd3, 0x9, 0x1],
        [0x1, 'cs', 0x1, 0xd3, 0xa, 0x1],
        [0x1, 'cs', 0x1, 0xd2, 0xc, 0x1],
        [0x1, 'cs', 0x0, 0xd3, 0xd, 0x1],
        [0x1, 'cs', 0x2, 0xd2, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0xd2, 0xa, 0x1],
        [0x1, 'cs', 0x2, 0xd2, 0xb, 0x1],
        [0x1, 'cs', 0x2, 0xd4, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0xd2, 0xd, 0x1],
        [0x1, 'cs', 0x2, 0xd3, 0xc, 0x1],
        [0x1, 'cs', 0x2, 0xd3, 0xb, 0x1],
        [0x1, 'cs', 0x2, 0xd3, 0xe, 0x1],
        [0x1, 'cs', 0x2, 0xd4, 0xf, 0x1],
        [0x1, 'cs', 0x2, 0xd2, 0xe, 0x1],
        [0x1, 'cs', 0x3, 0xd3, 0xf, 0x1],
        [0x1, 'cs', 0x3, 0xd5, 0x9, 0x1],
        [0x1, 'cs', 0x3, 0xd4, 0xa, 0x1],
        [0x1, 'cs', 0x3, 0xdf, 0x15, 0x1],
        [0x1, 'cs', 0x3, 0xd1, 0x9, 0x1],
        [0x1, 'la', 0x3, 0xdf, 0x16, 0x1],
        [0x1, 'la', 0x3, 0xdd, 0x17, 0x1],
        [0x1, 'la', 0x3, 0xcf, 0x9, 0x1],
        [0x1, 'la', 0x3, 0xd1, 0xa, 0x1],
        [0x1, 'la', 0x0, 0xd1, 0xc, 0x1],
        [0x1, 'la', 0x4, 0xd1, 0xe, 0x1],
        [0x1, 'la', 0x4, 0xdb, 0x17, 0x1],
        [0x1, 'la', 0x3, 0xd2, 0xf, 0x1],
        [0x1, 'la', 0x3, 0xd9, 0x16, 0x1],
        [0x1, 'la', 0x4, 0xd4, 0x10, 0x1],
        [0x1, 'la', 0x2, 0xd6, 0x13, 0x1],
        [0x1, 'la', 0x4, 0xd5, 0x14, 0x1],
        [0x1, 'la', 0x1, 0xd4, 0x15, 0x1],
        [0x1, 'la', 0x4, 0xd7, 0x12, 0x1],
        [0x1, 'la', 0x2, 0xd8, 0x11, 0x1],
        [0x1, 'la', 0x5, 0xd8, 0x10, 0x1],
        [0x1, 'la', 0x5, 0xd8, 0xf, 0x1],
        [0x1, 'la', 0x1, 0xd9, 0x10, 0x1],
        [0x1, 'la', 0x2, 0xda, 0x10, 0x1],
        [0x1, 'la', 0x2, 0xd8, 0xe, 0x1],
        [0x1, 'la', 0x2, 0xdb, 0x10, 0x1],
        [0x1, 'la', 0x5, 0xdc, 0x10, 0x1],
        [0x1, 'la', 0x5, 0xd8, 0xd, 0x1],
        [0x1, 'la', 0x4, 0xd9, 0xf, 0x1],
        [0x1, 'cs', 0x0, 0xd3, 0x2c, 0x1],
        [0x1, 'cs', 0x1, 0xd4, 0x2d, 0x1],
        [0x1, 'cs', 0x2, 0xd5, 0x2d, 0x1],
        [0x1, 'cs', 0x0, 0xd6, 0x2e, 0x1],
        [0x1, 'cs', 0x2, 0xd7, 0x2e, 0x1],
        [0x1, 'cs', 0x3, 0xd5, 0x2e, 0x1],
        [0x1, 'cs', 0x3, 0xd6, 0x2f, 0x1],
        [0x1, 'cs', 0x3, 0xd6, 0x30, 0x1],
        [0x1, 'cs', 0x3, 0xd8, 0x2e, 0x1],
        [0x1, 'cs', 0x0, 0xd0, 0x14, 0x1],
        [0x1, 'cs', 0x0, 0xd2, 0x15, 0x1],
        [0x1, 'cs', 0x0, 0xd4, 0x17, 0x1],
        [0x1, 'cs', 0x0, 0xd5, 0x19, 0x1],
        [0x1, 'cs', 0x2, 0xd5, 0x18, 0x1],
        [0x1, 'cs', 0x2, 0xd3, 0x16, 0x1],
        [0x1, 'cs', 0x2, 0xd2, 0x14, 0x1],
        [0x1, 'cs', 0x2, 0xd1, 0x15, 0x1],
        [0x1, 'cs', 0x2, 0xd1, 0x14, 0x1],
        [0x1, 'cs', 0x2, 0xd3, 0x15, 0x1],
        [0x1, 'cs', 0x2, 0xd4, 0x16, 0x1],
        [0x1, 'cs', 0x2, 0xd5, 0x17, 0x1],
        [0x1, 'cs', 0x3, 0xd5, 0x1a, 0x1],
        [0x1, 'cs', 0x3, 0xcf, 0x14, 0x1],
        [0x1, 'la', 0x4, 0xc0, 0x21, 0x1],
        [0x1, 'la', 0x4, 0xbf, 0x22, 0x1],
        [0x1, 'la', 0x4, 0xbe, 0x23, 0x1],
        [0x1, 'la', 0x3, 0xbd, 0x25, 0x1],
        [0x1, 'la', 0x3, 0xbc, 0x27, 0x1],
        [0x1, 'la', 0x4, 0xba, 0x28, 0x1],
        [0x1, 'la', 0x4, 0xb9, 0x27, 0x1],
        [0x1, 'la', 0x4, 0xb8, 0x27, 0x1],
        [0x1, 'la', 0x2, 0xb7, 0x27, 0x1],
        [0x1, 'la', 0x1, 0xb6, 0x28, 0x1],
        [0x1, 'la', 0x2, 0xb5, 0x29, 0x1],
        [0x1, 'la', 0x5, 0xb4, 0x29, 0x1],
        [0x1, 'la', 0x5, 0xb3, 0x29, 0x1],
        [0x1, 'la', 0x4, 0xc0, 0x1c, 0x1],
        [0x1, 'la', 0x4, 0xbf, 0x1c, 0x1],
        [0x1, 'la', 0x4, 0xbe, 0x1b, 0x1],
        [0x1, 'la', 0x3, 0xbc, 0x1b, 0x1],
        [0x1, 'la', 0x4, 0xbb, 0x1a, 0x1],
        [0x1, 'la', 0x4, 0xba, 0x19, 0x1],
        [0x1, 'la', 0x4, 0xb9, 0x19, 0x1],
        [0x1, 'la', 0x4, 0xb8, 0x18, 0x1],
        [0x1, 'la', 0x5, 0xb8, 0x17, 0x1],
        [0x1, 'la', 0x2, 0xb8, 0x16, 0x1],
        [0x1, 'la', 0x5, 0xb8, 0x15, 0x1],
        [0x1, 'la', 0x1, 0xb7, 0x14, 0x1],
        [0x1, 'la', 0x5, 0xb6, 0x14, 0x1],
        [0x1, 'la', 0x2, 0xb5, 0x14, 0x1],
        [0x1, 'la', 0x5, 0xb4, 0x14, 0x1],
        [0x1, 'la', 0x2, 0xb3, 0x14, 0x1],
        [0x1, 'la', 0x4, 0xb2, 0x13, 0x1],
        [0x1, 'la', 0x3, 0xb2, 0x11, 0x1],
        [0x1, 'la', 0x3, 0xb0, 0x12, 0x1],
        [0x1, 'cs', 0x0, 0xb1, 0xf, 0x1],
        [0x1, 'cs', 0x0, 0xaf, 0x11, 0x1],
        [0x1, 'cs', 0x0, 0xb4, 0x10, 0x1],
        [0x1, 'cs', 0x0, 0xae, 0x13, 0x1],
        [0x1, 'cs', 0x0, 0xac, 0x14, 0x1],
        [0x1, 'cs', 0x1, 0xaf, 0xf, 0x1],
        [0x1, 'cs', 0x1, 0xac, 0x12, 0x1],
        [0x1, 'cs', 0x1, 0xb5, 0xf, 0x1],
        [0x1, 'cs', 0x2, 0xb3, 0xf, 0x1],
        [0x1, 'cs', 0x2, 0xb1, 0x10, 0x1],
        [0x1, 'cs', 0x2, 0xb0, 0x10, 0x1],
        [0x1, 'cs', 0x2, 0xae, 0x12, 0x1],
        [0x1, 'cs', 0x2, 0xad, 0x13, 0x1],
        [0x1, 'cs', 0x2, 0xac, 0x13, 0x1],
        [0x1, 'cs', 0x2, 0xad, 0x12, 0x1],
        [0x1, 'cs', 0x2, 0xad, 0x11, 0x1],
        [0x1, 'cs', 0x2, 0xae, 0x11, 0x1],
        [0x1, 'cs', 0x2, 0xae, 0x10, 0x1],
        [0x1, 'cs', 0x2, 0xaf, 0x10, 0x1],
        [0x1, 'cs', 0x2, 0xb0, 0xf, 0x1],
        [0x1, 'cs', 0x2, 0xb2, 0xf, 0x1],
        [0x1, 'cs', 0x2, 0xb2, 0x10, 0x1],
        [0x1, 'cs', 0x2, 0xb3, 0x10, 0x1],
        [0x1, 'cs', 0x2, 0xb4, 0xf, 0x1],
        [0x1, 'cs', 0x2, 0xb5, 0x10, 0x1],
        [0x1, 'cs', 0x3, 0xb6, 0x10, 0x1],
        [0x1, 'cs', 0x3, 0xac, 0x15, 0x1],
        [0x1, 'la', 0x1, 0xaf, 0x13, 0x1],
        [0x1, 'la', 0x2, 0xae, 0x14, 0x1],
        [0x1, 'la', 0x2, 0xad, 0x14, 0x1],
        [0x1, 'la', 0x1, 0xb4, 0x11, 0x1],
        [0x1, 'la', 0x2, 0xb5, 0x11, 0x1],
        [0x1, 'la', 0x3, 0xbf, 0x14, 0x1],
        [0x1, 's', 0x0, 0xd9, 0x1e, 0x1],
        [0x1, 's', 0x0, 0xd0, 0x23, 0x1],
        [0x1, 's', 0x0, 0xcc, 0x18, 0x1],
        [0x1, 's', 0x1, 0xda, 0x20, 0x1],
        [0x1, 's', 0x1, 0xcf, 0x22, 0x1],
        [0x1, 's', 0x1, 0xca, 0x17, 0x1],
        [0x1, 's', 0x1, 0xc3, 0x10, 0x1],
        [0x1, 's', 0x2, 0xde, 0x1c, 0x1],
        [0x1, 's', 0x2, 0xd4, 0x26, 0x1],
        [0x1, 's', 0x2, 0xcf, 0x17, 0x1],
        [0x1, 's', 0x2, 0xca, 0xc, 0x1],
        [0x1, 's', 0x2, 0xc3, 0x12, 0x1],
        [0x1, 's', 0x1, 0xbf, 0xc, 0x1],
        [0x1, 's', 0x0, 0xbb, 0x10, 0x1],
        [0x1, 's', 0x2, 0xbc, 0x10, 0x1],
        [0x1, 's', 0x1, 0xba, 0xe, 0x1],
        [0x1, 's', 0x1, 0xc9, 0x10, 0x1],
        [0x1, 'g', 0x1, 0xd8, 0x1f, 0x1],
        [0x1, 'g', 0x0, 0xc8, 0xf, 0x1],
        [0x1, 'g', 0x0, 0xca, 0x28, 0x1],
        [0x1, 'g', 0x0, 0xbd, 0x20, 0x1],
        [0x1, 'g', 0x0, 0xcc, 0x1c, 0x1],
        [0x1, 'g', 0x0, 0xc4, 0x18, 0x1],
        [0x1, 'g', 0x2, 0xc6, 0x25, 0x1],
        [0x1, 's', 0x0, 0xc1, 0x27, 0x1],
        [0x1, 's', 0x0, 0xc9, 0x2d, 0x1],
        [0x1, 'a', 0x0, 0xd2, 0x1d, 0x1],
        [0x1, 'a', 0x0, 0xc8, 0x14, 0x1],
        [0x1, 'cs', 0x0, 0xc8, 0x22, 0x1],
        [0x1, 'cs', 0x0, 0xc1, 0x1b, 0x1],
        [0x1, 'cs', 0x1, 0xcb, 0x1e, 0x1],
        [0x1, 'cs', 0x1, 0xbf, 0x1f, 0x1],
        [0x1, 'cs', 0x2, 0xca, 0x20, 0x1],
        [0x1, 'cs', 0x2, 0xc2, 0x1a, 0x1],
        [0x1, 'cs', 0x2, 0xc0, 0x1b, 0x1],
        [0x1, 'cs', 0x2, 0xc0, 0x20, 0x1],
        [0x1, 'cs', 0x2, 0xcb, 0x1f, 0x1],
        [0x1, 'cs', 0x2, 0xca, 0x1f, 0x1],
        [0x1, 'cs', 0x2, 0xca, 0x1e, 0x1],
        [0x1, 'cs', 0x3, 0xca, 0x1d, 0x1],
        [0x1, 'cs', 0x3, 0xc9, 0x20, 0x1],
        [0x1, 'cs', 0x3, 0xc7, 0x23, 0x1],
        [0x1, 'cs', 0x0, 0xc1, 0x22, 0x1],
        [0x1, 'cs', 0x2, 0xc2, 0x22, 0x1],
        [0x1, 'cs', 0x2, 0xc6, 0x23, 0x1],
        [0x1, 'cs', 0x3, 0xc7, 0x22, 0x1],
        [0x1, 'cs', 0x3, 0xbf, 0x1d, 0x1],
        [0x1, 'cs', 0x0, 0xbf, 0x1e, 0x1],
        [0x1, 'cs', 0x3, 0xbe, 0x1d, 0x1],
        [0x1, 'la', 0x3, 0xb4, 0x45, 0x1],
        [0x1, 'la', 0x3, 0xb6, 0x44, 0x1],
        [0x1, 'la', 0x3, 0xb8, 0x44, 0x1],
        [0x1, 'la', 0x3, 0xba, 0x46, 0x1],
        [0x1, 'la', 0x3, 0xb8, 0x48, 0x1],
        [0x1, 'la', 0x3, 0xb6, 0x48, 0x1],
        [0x1, 'la', 0x3, 0xb4, 0x47, 0x1],
        [0x1, 'cs', 0x0, 0xba, 0x44, 0x1],
        [0x1, 'cs', 0x0, 0xbb, 0x46, 0x1],
        [0x1, 'cs', 0x0, 0xb7, 0x4a, 0x1],
        [0x1, 'cs', 0x0, 0xb2, 0x46, 0x1],
        [0x1, 'cs', 0x2, 0xb6, 0x42, 0x1],
        [0x1, 'cs', 0x2, 0xb6, 0x4a, 0x1],
        [0x1, 'cs', 0x2, 0xb5, 0x49, 0x1],
        [0x1, 'cs', 0x2, 0xb4, 0x4a, 0x1],
        [0x1, 'cs', 0x2, 0xb5, 0x4a, 0x1],
        [0x1, 'la', 0x0, 0xb8, 0x46, 0x1],
        [0x1, 'la', 0x3, 0xb6, 0x46, 0x1],
        [0x1, 'cs', 0x2, 0xb5, 0x43, 0x1],
        [0x1, 'cs', 0x3, 0xb8, 0x43, 0x1],
        [0x1, 'cs', 0x3, 0xb6, 0x43, 0x1],
        [0x1, 'la', 0x4, 0xbb, 0x45, 0x1],
        [0x1, 'la', 0x1, 0xbc, 0x44, 0x1],
        [0x1, 'la', 0x4, 0xbd, 0x44, 0x1],
        [0x1, 'la', 0x2, 0xbe, 0x44, 0x1],
        [0x1, 'la', 0x1, 0xbf, 0x44, 0x1],
        [0x1, 'la', 0x4, 0xc0, 0x44, 0x1],
        [0x1, 'la', 0x2, 0xc1, 0x44, 0x1],
        [0x1, 'la', 0x4, 0xc2, 0x45, 0x1],
        [0x1, 'la', 0x2, 0xc2, 0x46, 0x1],
        [0x1, 'la', 0x5, 0xc3, 0x47, 0x1],
        [0x1, 'la', 0x1, 0xc2, 0x47, 0x1],
        [0x1, 'la', 0x2, 0xc4, 0x48, 0x1],
        [0x1, 'la', 0x4, 0xc4, 0x47, 0x1],
        [0x1, 'la', 0x1, 0xc5, 0x49, 0x1],
        [0x1, 'la', 0x5, 0xc4, 0x49, 0x1],
        [0x1, 'la', 0x5, 0xc6, 0x49, 0x1],
        [0x1, 'la', 0x3, 0xc9, 0x49, 0x1],
        [0x1, 'la', 0x3, 0xcb, 0x48, 0x1],
        [0x1, 'la', 0x4, 0xc7, 0x49, 0x1],
        [0x1, 'la', 0x1, 0xcd, 0x48, 0x1],
        [0x1, 'la', 0x2, 0xce, 0x48, 0x1],
        [0x1, 'la', 0x5, 0xcf, 0x48, 0x1],
        [0x1, 'la', 0x1, 0xd0, 0x48, 0x1],
        [0x1, 'la', 0x1, 0xd1, 0x49, 0x1],
        [0x1, 'la', 0x2, 0xd1, 0x4a, 0x1],
        [0x1, 'la', 0x5, 0xd3, 0x4c, 0x1],
        [0x1, 'la', 0x4, 0xd2, 0x4b, 0x1],
        [0x1, 'la', 0x5, 0xd4, 0x4c, 0x1],
        [0x1, 'la', 0x4, 0xca, 0x4b, 0x1],
        [0x1, 'la', 0x2, 0xcb, 0x4c, 0x1],
        [0x1, 'la', 0x4, 0xcc, 0x4d, 0x1],
        [0x1, 'la', 0x2, 0xcc, 0x4e, 0x1],
        [0x1, 'la', 0x2, 0xcc, 0x4f, 0x1],
        [0x1, 'la', 0x5, 0xcc, 0x50, 0x1],
        [0x1, 'cs', 0x0, 0xca, 0x4a, 0x1],
        [0x1, 'cs', 0x1, 0xcb, 0x4a, 0x1],
        [0x1, 'cs', 0x2, 0xcc, 0x49, 0x1],
        [0x1, 'cs', 0x2, 0xcb, 0x4b, 0x1],
        [0x1, 'cs', 0x3, 0xcc, 0x4c, 0x1],
        [0x1, 'cs', 0x3, 0xcd, 0x49, 0x1],
        [0x1, 'cs', 0x0, 0xcd, 0x4a, 0x1],
        [0x1, 'cs', 0x2, 0xcc, 0x4a, 0x1],
        [0x1, 'cs', 0x2, 0xcc, 0x4b, 0x1],
        [0x1, 'cs', 0x2, 0xce, 0x49, 0x1],
        [0x1, 'cs', 0x3, 0xcf, 0x49, 0x1],
        [0x1, 'cs', 0x2, 0xcd, 0x4c, 0x1],
        [0x1, 'cs', 0x3, 0xcd, 0x4d, 0x1],
        [0x1, 'la', 0x3, 0xb7, 0x42, 0x1],
        [0x1, 'la', 0x4, 0xb7, 0x41, 0x1],
        [0x1, 'la', 0x4, 0xb8, 0x40, 0x1],
        [0x1, 'la', 0x4, 0xb9, 0x3f, 0x1],
        [0x1, 'la', 0x1, 0xb9, 0x3e, 0x1],
        [0x1, 'la', 0x2, 0xb9, 0x3d, 0x1],
        [0x1, 'la', 0x2, 0xb9, 0x3c, 0x1],
        [0x1, 'la', 0x4, 0xba, 0x3b, 0x1],
        [0x1, 'la', 0x1, 0xbb, 0x3a, 0x1],
        [0x1, 'la', 0x2, 0xbb, 0x39, 0x1],
        [0x1, 'la', 0x2, 0xbb, 0x38, 0x1],
        [0x1, 's', 0x0, 0xbf, 0x3c, 0x1],
        [0x1, 's', 0x1, 0xc3, 0x3a, 0x1],
        [0x1, 's', 0x1, 0xc7, 0x2e, 0x1],
        [0x1, 's', 0x2, 0xca, 0x31, 0x1],
        [0x1, 'g', 0x2, 0xc5, 0x37, 0x1],
        [0x1, 'g', 0x1, 0xd5, 0x37, 0x1],
        [0x1, 'g', 0x0, 0xc0, 0x2d, 0x1],
        [0x1, 'g', 0x0, 0xd2, 0x3d, 0x1],
        [0x1, 'g', 0x0, 0xb6, 0x34, 0x1],
        [0x1, 'g', 0x0, 0xb4, 0x23, 0x1],
        [0x1, 'g', 0x0, 0xaf, 0x19, 0x1],
        [0x1, 'g', 0x0, 0xa8, 0x20, 0x1],
        [0x1, 'g', 0x1, 0xb3, 0x1c, 0x1],
        [0x1, 'g', 0x1, 0xa1, 0x10, 0x1],
        [0x1, 'g', 0x2, 0xac, 0xc, 0x1],
        [0x1, 'g', 0x2, 0xa0, 0x19, 0x1],
        [0x1, 'g', 0x2, 0x9d, 0x27, 0x1],
        [0x1, 'g', 0x2, 0xaa, 0x2b, 0x1],
        [0x1, 'g', 0x2, 0xca, 0x43, 0x1],
        [0x1, 'g', 0x2, 0xd9, 0x48, 0x1],
        [0x1, 'g', 0x2, 0xd6, 0x52, 0x1],
        [0x1, 'g', 0x2, 0xc1, 0x56, 0x1],
        [0x1, 'g', 0x2, 0xa8, 0x3c, 0x1],
        [0x1, 'g', 0x2, 0xa5, 0x4e, 0x1],
        [0x1, 'g', 0x2, 0xad, 0x58, 0x1],
        [0x1, 's', 0x0, 0xb9, 0x33, 0x1],
        [0x1, 's', 0x0, 0xaf, 0x2c, 0x1],
        [0x1, 's', 0x0, 0xa5, 0x32, 0x1],
        [0x1, 's', 0x0, 0xa0, 0x20, 0x1],
        [0x1, 's', 0x1, 0xa2, 0x1e, 0x1],
        [0x1, 's', 0x1, 0xb0, 0x1c, 0x1],
        [0x1, 's', 0x1, 0x9a, 0x11, 0x1],
        [0x1, 's', 0x1, 0xb8, 0x31, 0x1],
        [0x1, 's', 0x1, 0xc0, 0x3e, 0x1],
        [0x1, 's', 0x1, 0xd8, 0x3e, 0x1],
        [0x1, 's', 0x1, 0xcc, 0x41, 0x1],
        [0x1, 's', 0x1, 0xd9, 0x4f, 0x1],
        [0x1, 's', 0x1, 0xce, 0x56, 0x1],
        [0x1, 'la', 0x3, 0xd3, 0x45, 0x1],
        [0x1, 'la', 0x4, 0xd7, 0x45, 0x1],
        [0x1, 'la', 0x5, 0xc9, 0x51, 0x1],
        [0x1, 'la', 0x1, 0xcf, 0x53, 0x1],
        [0x1, 'la', 0x3, 0xad, 0x20, 0x1],
        [0x1, 'la', 0x2, 0xb5, 0x2d, 0x1],
        [0x1, 'la', 0x1, 0xb2, 0x26, 0x1],
        [0x1, 'la', 0x1, 0xd5, 0x45, 0x1],
        [0x1, 'la', 0x5, 0xd6, 0x45, 0x1],
        [0x1, 'la', 0x4, 0xd8, 0x44, 0x1],
        [0x1, 'la', 0x0, 0xbf, 0x4e, 0x1],
        [0x1, 'la', 0x3, 0xbf, 0x50, 0x1],
        [0x1, 'la', 0x3, 0xbd, 0x4f, 0x1],
        [0x1, 'g', 0x2, 0x96, 0x1d, 0x1],
        [0x1, 'g', 0x2, 0x9a, 0x43, 0x1],
        [0x1, 'g', 0x2, 0xca, 0x5e, 0x1],
        [0x1, 'g', 0x2, 0x9b, 0x5a, 0x1],
        [0x1, 's', 0x2, 0xd7, 0x50, 0x1],
        [0x1, 's', 0x2, 0xcc, 0x3e, 0x1],
        [0x1, 's', 0x2, 0xda, 0x3c, 0x1],
        [0x1, 's', 0x2, 0xc2, 0x3e, 0x1],
        [0x1, 's', 0x0, 0xd8, 0x56, 0x1],
        [0x1, 's', 0x0, 0xd3, 0x5d, 0x1],
        [0x1, 'la', 0x0, 0xd8, 0x5c, 0x1],
        [0x1, 'la', 0x0, 0x97, 0x60, 0x1],
        [0x1, 'la', 0x1, 0x9b, 0x5f, 0x1],
        [0x1, 'la', 0x4, 0xd6, 0x58, 0x1],
        [0x1, 's', 0x0, 0xcd, 0x63, 0x1],
        [0x1, 's', 0x1, 0xd9, 0x58, 0x1],
        [0x1, 's', 0x1, 0xd5, 0x5e, 0x1],
        [0x1, 's', 0x1, 0xca, 0x61, 0x1],
        [0x1, 's', 0x0, 0xc7, 0x55, 0x1],
        [0x1, 's', 0x0, 0xbe, 0x5d, 0x1],
        [0x1, 's', 0x1, 0xc7, 0x57, 0x1],
        [0x1, 's', 0x1, 0xc0, 0x61, 0x1],
        [0x1, 'la', 0x3, 0xc4, 0x5c, 0x1],
        [0x1, 'la', 0x1, 0xc7, 0x5b, 0x1],
        [0x1, 'la', 0x1, 0xdc, 0x5b, 0x1],
        [0x1, 'la', 0x0, 0xdb, 0x4d, 0x1],
        [0x1, 'la', 0x0, 0xc8, 0x3b, 0x1],
        [0x1, 'la', 0x3, 0xbc, 0x57, 0x1],
        [0x1, 'la', 0x0, 0xb7, 0x5e, 0x1],
        [0x1, 'la', 0x1, 0xbb, 0x53, 0x1],
        [0x1, 'la', 0x1, 0xaf, 0x52, 0x1],
        [0x1, 'la', 0x1, 0xac, 0x5e, 0x1],
        [0x1, 'la', 0x2, 0xb3, 0x4e, 0x1],
        [0x1, 'la', 0x0, 0xa6, 0x57, 0x1],
        [0x1, 'la', 0x3, 0x9f, 0x50, 0x1],
        [0x1, 'la', 0x3, 0xa7, 0xf, 0x1],
        [0x1, 'la', 0x1, 0xa4, 0x11, 0x1],
        [0x1, 'la', 0x1, 0xac, 0x1c, 0x1],
        [0x1, 'la', 0x3, 0x99, 0x18, 0x1],
        [0x1, 'la', 0x4, 0xa4, 0x5b, 0x1],
        [0x1, 'la', 0x4, 0x9c, 0x52, 0x1],
        [0x1, 'la', 0x4, 0x95, 0x5a, 0x1],
        [0x1, 's', 0x0, 0xb2, 0x55, 0x1],
        [0x1, 's', 0x1, 0xb4, 0x55, 0x1],
        [0x1, 's', 0x0, 0xa3, 0x60, 0x1],
        [0x1, 's', 0x0, 0x9f, 0x56, 0x1],
        [0x1, 's', 0x0, 0xb9, 0x4e, 0x1],
        [0x1, 's', 0x1, 0xc2, 0x4b, 0x1],
        [0x1, 's', 0x2, 0xc3, 0x4c, 0x1],
        [0x1, 's', 0x2, 0xb5, 0x4e, 0x1],
        [0x1, 's', 0x2, 0xa1, 0x57, 0x1],
        [0x1, 's', 0x2, 0xa6, 0x61, 0x1],
        [0x1, 's', 0x2, 0xb1, 0x61, 0x1],
        [0x1, 's', 0x0, 0x95, 0x55, 0x1],
        [0x1, 's', 0x1, 0x97, 0x53, 0x1],
        [0x1, 's', 0x1, 0xaf, 0x4a, 0x1],
        [0x1, 's', 0x0, 0xae, 0x48, 0x1],
        [0x1, 'la', 0x3, 0xa8, 0x47, 0x1],
        [0x1, 'la', 0x3, 0xb4, 0x3c, 0x1],
        [0x1, 's', 0x0, 0x9c, 0x3f, 0x1],
        [0x1, 's', 0x0, 0x97, 0x2f, 0x1],
        [0x1, 's', 0x1, 0x9e, 0x40, 0x1],
        [0x1, 's', 0x1, 0xa1, 0x4b, 0x1],
        [0x1, 's', 0x1, 0xa2, 0x33, 0x1],
        [0x1, 's', 0x1, 0xaf, 0x2d, 0x1],
        [0x1, 's', 0x1, 0x98, 0x2f, 0x1],
        [0x1, 's', 0x1, 0x9f, 0x21, 0x1],
        [0x1, 's', 0x1, 0x98, 0x12, 0x1],
        [0x1, 's', 0x0, 0x97, 0xd, 0x1],
        [0x1, 's', 0x0, 0xa6, 0x16, 0x1],
        [0x1, 's', 0x0, 0xaa, 0x3f, 0x1],
        [0x1, 's', 0x2, 0xac, 0x3e, 0x1],
        [0x1, 's', 0x2, 0x9b, 0x3d, 0x1],
        [0x1, 's', 0x2, 0xa7, 0x33, 0x1],
        [0x1, 's', 0x2, 0x96, 0x34, 0x1],
        [0x1, 'la', 0x4, 0xb2, 0x45, 0x1],
        [0x1, 'la', 0x4, 0xb1, 0x44, 0x1],
        [0x1, 'la', 0x3, 0xb0, 0x43, 0x1],
        [0x1, 'la', 0x0, 0xae, 0x43, 0x1],
        [0x1, 'la', 0x1, 0xac, 0x43, 0x1],
        [0x1, 'la', 0x4, 0xab, 0x43, 0x1],
        [0x1, 'la', 0x4, 0xaa, 0x42, 0x1],
        [0x1, 'la', 0x4, 0xa9, 0x42, 0x1],
        [0x1, 'la', 0x1, 0xa8, 0x42, 0x1],
        [0x1, 'la', 0x4, 0xa7, 0x43, 0x1],
        [0x1, 'la', 0x1, 0xa6, 0x43, 0x1],
        [0x1, 'la', 0x4, 0xa5, 0x44, 0x1],
        [0x1, 'la', 0x5, 0xa4, 0x44, 0x1],
        [0x1, 'la', 0x2, 0xa3, 0x44, 0x1],
        [0x1, 'la', 0x5, 0xa2, 0x44, 0x1],
        [0x1, 'la', 0x2, 0xa1, 0x44, 0x1],
        [0x1, 'la', 0x3, 0x99, 0x48, 0x1],
        [0x1, 'la', 0x3, 0xa3, 0x3c, 0x1],
        [0x1, 'la', 0x3, 0xa4, 0x2a, 0x1],
        [0x1, 'la', 0x0, 0x9b, 0x33, 0x1],
        [0x1, 'la', 0x1, 0xa8, 0x2a, 0x1],
        [0x1, 'la', 0x4, 0x9e, 0x30, 0x1],
        [0x1, 'la', 0x4, 0xb2, 0x39, 0x1],
        [0x1, 'la', 0x4, 0x97, 0x45, 0x1],
        [0x1, 'la', 0x2, 0xaa, 0x4a, 0x1],
        [0x1, 'la', 0x2, 0xa0, 0x54, 0x1],
        [0x1, 'la', 0x2, 0xae, 0x5c, 0x1],
        [0x1, 'la', 0x2, 0xbc, 0x5a, 0x1],
        [0x1, 'la', 0x2, 0xd1, 0x54, 0x1],
        [0x1, 'la', 0x2, 0xce, 0x5d, 0x1],
        [0x1, 'la', 0x5, 0x9c, 0x46, 0x1],
        [0x1, 'la', 0x5, 0xa5, 0x39, 0x1],
        [0x1, 'la', 0x5, 0xb6, 0x3a, 0x1],
        [0x1, 'la', 0x5, 0xa6, 0x2c, 0x1],
        [0x1, 'la', 0x1, 0xa3, 0x27, 0x1],
        [0x1, 'la', 0x1, 0x98, 0x35, 0x1],
        [0x1, 'la', 0x1, 0x98, 0x25, 0x1],
        [0x1, 'la', 0x2, 0xa3, 0xd, 0x1],
        [0x1, 'de', 0xc, 0xdb, 0xc, 0x0],
        [0x1, 'de', 0xe, 0xcb, 0xd, 0x0],
        [0x1, 'de', 0xf, 0xdc, 0x13, 0x0],
        [0x1, 'de', 0xc, 0xdf, 0xf, 0x0],
        [0x1, 'de', 0xc, 0xd5, 0xa, 0x0],
        [0x1, 'de', 0x25, 0xd9, 0x13, 0x0],
        [0x1, 'de', 0x26, 0xdc, 0xe, 0x0],
        [0x1, 'de', 0x26, 0xd7, 0xa, 0x0],
        [0x1, 'de', 0x28, 0xd6, 0xe, 0x0],
        [0x1, 'de', 0x28, 0xde, 0x10, 0x0],
        [0x1, 'de', 0x28, 0xd1, 0x12, 0x0],
        [0x1, 'de', 0x25, 0xd4, 0x12, 0x0],
        [0x1, 'de', 0x26, 0xd7, 0x1a, 0x0],
        [0x1, 'de', 0x25, 0xde, 0x19, 0x0],
        [0x1, 'de', 0x28, 0xdd, 0x1d, 0x0],
        [0x1, 'de', 0xc, 0xdc, 0x1b, 0x0],
        [0x1, 'de', 0xd, 0xd5, 0x1b, 0x0],
        [0x1, 'de', 0xe, 0xd7, 0x1e, 0x0],
        [0x1, 'de', 0xf, 0xdb, 0x21, 0x0],
        [0x1, 'de', 0x26, 0xdc, 0x1f, 0x0],
        [0x1, 'de', 0x26, 0xd9, 0x23, 0x0],
        [0x1, 'de', 0x28, 0xdd, 0x22, 0x0],
        [0x1, 'de', 0x27, 0xd7, 0x20, 0x0],
        [0x1, 'de', 0x25, 0xd3, 0x23, 0x0],
        [0x1, 'de', 0xc, 0xdf, 0x26, 0x0],
        [0x1, 'de', 0xd, 0xd5, 0x26, 0x0],
        [0x1, 'de', 0xe, 0xde, 0x2c, 0x0],
        [0x1, 'de', 0xf, 0xd0, 0x21, 0x0],
        [0x1, 'de', 0xf, 0xce, 0x17, 0x0],
        [0x1, 'de', 0xd, 0xcd, 0x1c, 0x0],
        [0x1, 'de', 0xe, 0xd3, 0x17, 0x0],
        [0x1, 'de', 0xe, 0xc9, 0x14, 0x0],
        [0x1, 'de', 0xf, 0xc6, 0x9, 0x0],
        [0x1, 'de', 0xf, 0xc7, 0x10, 0x0],
        [0x1, 'de', 0xc, 0xc2, 0xf, 0x0],
        [0x1, 'de', 0xc, 0xc5, 0x17, 0x0],
        [0x1, 'de', 0x25, 0xcd, 0xd, 0x0],
        [0x1, 'de', 0x27, 0xcc, 0x9, 0x0],
        [0x1, 'de', 0x28, 0xc4, 0xc, 0x0],
        [0x1, 'de', 0x28, 0xc6, 0x12, 0x0],
        [0x1, 'de', 0x25, 0xc0, 0xb, 0x0],
        [0x1, 'de', 0x25, 0xc7, 0x18, 0x0],
        [0x1, 'de', 0x25, 0xd1, 0x18, 0x0],
        [0x1, 'de', 0x27, 0xd1, 0x1e, 0x0],
        [0x1, 'de', 0x27, 0xcc, 0x1f, 0x0],
        [0x1, 'de', 0x27, 0xc0, 0x18, 0x0],
        [0x1, 'de', 0x28, 0xbb, 0x17, 0x0],
        [0x1, 'de', 0x26, 0xbb, 0x12, 0x0],
        [0x1, 'de', 0x27, 0xc0, 0x12, 0x0],
        [0x1, 'de', 0x25, 0xb9, 0xf, 0x0],
        [0x1, 'de', 0xc, 0xbc, 0xf, 0x0],
        [0x1, 'de', 0xd, 0xb9, 0xd, 0x0],
        [0x1, 'de', 0xe, 0xbd, 0x9, 0x0],
        [0x1, 'de', 0xf, 0xbb, 0x16, 0x0],
        [0x1, 'de', 0xf, 0xb4, 0x9, 0x0],
        [0x1, 'de', 0xc, 0xb1, 0xe, 0x0],
        [0x1, 'de', 0xe, 0xad, 0x9, 0x0],
        [0x1, 'de', 0xe, 0xab, 0xf, 0x0],
        [0x1, 'de', 0x28, 0xb6, 0x9, 0x0],
        [0x1, 'de', 0x27, 0xb3, 0xd, 0x0],
        [0x1, 'de', 0x27, 0xaf, 0x9, 0x0],
        [0x1, 'de', 0x28, 0xad, 0xe, 0x0],
        [0x1, 'de', 0x25, 0xa9, 0xb, 0x0],
        [0x1, 'de', 0x25, 0xa3, 0xa, 0x0],
        [0x1, 'de', 0x26, 0xa4, 0xf, 0x0],
        [0x1, 'de', 0x27, 0xaa, 0x14, 0x0],
        [0x1, 'de', 0x28, 0xa0, 0x11, 0x0],
        [0x1, 'de', 0x28, 0x9a, 0xa, 0x0],
        [0x1, 'de', 0x28, 0xa5, 0x17, 0x0],
        [0x1, 'de', 0x28, 0x96, 0x13, 0x0],
        [0x1, 'de', 0x25, 0x9b, 0x10, 0x0],
        [0x1, 'de', 0x27, 0x92, 0xa, 0x0],
        [0x1, 'de', 0xc, 0x9f, 0xc, 0x0],
        [0x1, 'de', 0xd, 0x97, 0x9, 0x0],
        [0x1, 'de', 0xe, 0x96, 0xe, 0x0],
        [0x1, 'de', 0xf, 0x99, 0x13, 0x0],
        [0x1, 'de', 0xd, 0xa1, 0x19, 0x0],
        [0x1, 'de', 0xe, 0xa9, 0x19, 0x0],
        [0x1, 'de', 0xf, 0xb0, 0x19, 0x0],
        [0x1, 'de', 0xc, 0xb4, 0x1d, 0x0],
        [0x1, 'de', 0xc, 0xbc, 0x1f, 0x0],
        [0x1, 'de', 0xe, 0xb5, 0x24, 0x0],
        [0x1, 'de', 0x25, 0xba, 0x21, 0x0],
        [0x1, 'de', 0x26, 0xb7, 0x1a, 0x0],
        [0x1, 'de', 0x27, 0xb1, 0x15, 0x0],
        [0x1, 'de', 0x28, 0xaf, 0x1f, 0x0],
        [0x1, 'de', 0x25, 0xb0, 0x27, 0x0],
        [0x1, 'de', 0x25, 0xa8, 0x22, 0x0],
        [0x1, 'de', 0x26, 0xa2, 0x20, 0x0],
        [0x1, 'de', 0x26, 0xa8, 0x2d, 0x0],
        [0x1, 'de', 0x26, 0xad, 0x2d, 0x0],
        [0x1, 'de', 0x27, 0xa0, 0x23, 0x0],
        [0x1, 'de', 0x28, 0xa1, 0x2a, 0x0],
        [0x1, 'de', 0x28, 0xaa, 0x27, 0x0],
        [0x1, 'de', 0x28, 0xb5, 0x2b, 0x0],
        [0x1, 'de', 0x28, 0x9c, 0x1a, 0x0],
        [0x1, 'de', 0x28, 0x96, 0x20, 0x0],
        [0x1, 'de', 0x25, 0x9f, 0x1a, 0x0],
        [0x1, 'de', 0x25, 0x9b, 0x28, 0x0],
        [0x1, 'de', 0x25, 0x9a, 0x2d, 0x0],
        [0x1, 'de', 0x27, 0x95, 0x2d, 0x0],
        [0x1, 'de', 0x28, 0x96, 0x32, 0x0],
        [0x1, 'de', 0x28, 0xa0, 0x34, 0x0],
        [0x1, 'de', 0x25, 0xa4, 0x34, 0x0],
        [0x1, 'de', 0x26, 0xa8, 0x32, 0x0],
        [0x1, 'de', 0xc, 0xb0, 0x2d, 0x0],
        [0x1, 'de', 0xc, 0xa7, 0x20, 0x0],
        [0x1, 'de', 0xd, 0x9e, 0x20, 0x0],
        [0x1, 'de', 0xe, 0x95, 0x1c, 0x0],
        [0x1, 'de', 0xf, 0xa3, 0x1e, 0x0],
        [0x1, 'de', 0xe, 0x9e, 0x27, 0x0],
        [0x1, 'de', 0xc, 0xab, 0x2b, 0x0],
        [0x1, 'de', 0xc, 0xae, 0x24, 0x0],
        [0x1, 'de', 0xc, 0x97, 0x2b, 0x0],
        [0x1, 'de', 0xd, 0x98, 0x30, 0x0],
        [0x1, 'de', 0xe, 0xa4, 0x31, 0x0],
        [0x1, 'de', 0xf, 0x95, 0x34, 0x0],
        [0x1, 'de', 0xc, 0xae, 0x31, 0x0],
        [0x1, 'de', 0xd, 0xb7, 0x33, 0x0],
        [0x1, 'de', 0xe, 0xba, 0x30, 0x0],
        [0x1, 'de', 0x25, 0xb6, 0x30, 0x0],
        [0x1, 'de', 0x26, 0xbb, 0x34, 0x0],
        [0x1, 'de', 0x27, 0xbc, 0x2b, 0x0],
        [0x1, 'de', 0x25, 0xc8, 0x26, 0x0],
        [0x1, 'de', 0x28, 0xc2, 0x25, 0x0],
        [0x1, 'de', 0x27, 0xc7, 0x2c, 0x0],
        [0x1, 'de', 0x26, 0xc8, 0x31, 0x0],
        [0x1, 'de', 0x25, 0xc4, 0x36, 0x0],
        [0x1, 'de', 0xc, 0xc2, 0x28, 0x0],
        [0x1, 'de', 0xd, 0xca, 0x2d, 0x0],
        [0x1, 'de', 0xe, 0xc6, 0x2f, 0x0],
        [0x1, 'de', 0xf, 0xc6, 0x37, 0x0],
        [0x1, 'de', 0xf, 0xd4, 0x36, 0x0],
        [0x1, 'de', 0xf, 0xd8, 0x3f, 0x0],
        [0x1, 'de', 0xe, 0xd1, 0x3e, 0x0],
        [0x1, 'de', 0xc, 0xdb, 0x3c, 0x0],
        [0x1, 'de', 0xc, 0xce, 0x38, 0x0],
        [0x1, 'de', 0xc, 0xda, 0x48, 0x0],
        [0x1, 'de', 0xc, 0xdf, 0x43, 0x0],
        [0x1, 'de', 0xc, 0xcd, 0x40, 0x0],
        [0x1, 'de', 0xc, 0xc1, 0x3f, 0x0],
        [0x1, 'de', 0xe, 0xd8, 0x50, 0x0],
        [0x1, 'de', 0xe, 0xde, 0x57, 0x0],
        [0x1, 'de', 0x26, 0xd2, 0x35, 0x0],
        [0x1, 'de', 0x25, 0xd2, 0x2f, 0x0],
        [0x1, 'de', 0x25, 0xc8, 0x3f, 0x0],
        [0x1, 'de', 0x25, 0xda, 0x3e, 0x0],
        [0x1, 'de', 0x25, 0xde, 0x3c, 0x0],
        [0x1, 'de', 0x25, 0xcf, 0x46, 0x0],
        [0x1, 'de', 0x26, 0xcb, 0x44, 0x0],
        [0x1, 'de', 0x26, 0xc3, 0x42, 0x0],
        [0x1, 'de', 0x26, 0xda, 0x37, 0x0],
        [0x1, 'de', 0x26, 0xd4, 0x3d, 0x0],
        [0x1, 'de', 0x26, 0xde, 0x46, 0x0],
        [0x1, 'de', 0x26, 0xda, 0x46, 0x0],
        [0x1, 'de', 0x28, 0xde, 0x51, 0x0],
        [0x1, 'de', 0x26, 0xd6, 0x4f, 0x0],
        [0x1, 'de', 0x27, 0xd5, 0x53, 0x0],
        [0x1, 'de', 0x27, 0xcf, 0x4c, 0x0],
        [0x1, 'de', 0x27, 0xd0, 0x56, 0x0],
        [0x1, 'de', 0x27, 0xda, 0x57, 0x0],
        [0x1, 'de', 0x27, 0xde, 0x5d, 0x0],
        [0x1, 'de', 0x27, 0xd8, 0x60, 0x0],
        [0x1, 'de', 0x27, 0xd1, 0x5e, 0x0],
        [0x1, 'de', 0x27, 0xc9, 0x57, 0x0],
        [0x1, 'de', 0x27, 0xc6, 0x52, 0x0],
        [0x1, 'de', 0x27, 0xcf, 0x63, 0x0],
        [0x1, 'de', 0x27, 0xc8, 0x61, 0x0],
        [0x1, 'de', 0x27, 0xca, 0x5c, 0x0],
        [0x1, 'de', 0x25, 0xc2, 0x61, 0x0],
        [0x1, 'de', 0x27, 0xcc, 0x58, 0x0],
        [0x1, 'de', 0x27, 0xbd, 0x5a, 0x0],
        [0x1, 'de', 0x27, 0xc2, 0x51, 0x0],
        [0x1, 'de', 0x27, 0xbc, 0x62, 0x0],
        [0x1, 'de', 0x25, 0xb7, 0x5b, 0x0],
        [0x1, 'de', 0x25, 0xba, 0x50, 0x0],
        [0x1, 'de', 0x25, 0xbf, 0x48, 0x0],
        [0x1, 'de', 0x26, 0xb8, 0x4d, 0x0],
        [0x1, 'de', 0x26, 0xb4, 0x50, 0x0],
        [0x1, 'de', 0x27, 0xad, 0x4b, 0x0],
        [0x1, 'de', 0x28, 0xb2, 0x57, 0x0],
        [0x1, 'de', 0x28, 0xae, 0x5e, 0x0],
        [0x1, 'de', 0x28, 0xc0, 0x5d, 0x0],
        [0x1, 'de', 0x28, 0xa5, 0x5c, 0x0],
        [0x1, 'de', 0x25, 0xa0, 0x59, 0x0],
        [0x1, 'de', 0x26, 0xa1, 0x55, 0x0],
        [0x1, 'de', 0x26, 0xa4, 0x62, 0x0],
        [0x1, 'de', 0x26, 0x97, 0x63, 0x0],
        [0x1, 'de', 0x26, 0x97, 0x55, 0x0],
        [0x1, 'de', 0x28, 0x94, 0x53, 0x0],
        [0x1, 'de', 0x28, 0xa0, 0x4d, 0x0],
        [0x1, 'de', 0x28, 0xa7, 0x4d, 0x0],
        [0x1, 'de', 0x28, 0x99, 0x45, 0x0],
        [0x1, 'de', 0x28, 0x95, 0x4a, 0x0],
        [0x1, 'de', 0x25, 0xa1, 0x40, 0x0],
        [0x1, 'de', 0x25, 0x9a, 0x3d, 0x0],
        [0x1, 'de', 0x27, 0x9d, 0x37, 0x0],
        [0x1, 'de', 0x27, 0xae, 0x40, 0x0],
        [0x1, 'de', 0x27, 0xaf, 0x38, 0x0],
        [0x1, 'de', 0x27, 0x95, 0x43, 0x0],
        [0x1, 'de', 0xc, 0xda, 0x60, 0x0],
        [0x1, 'de', 0xd, 0xd4, 0x5f, 0x0],
        [0x1, 'de', 0xe, 0xcc, 0x55, 0x0],
        [0x1, 'de', 0xf, 0xd7, 0x55, 0x0],
        [0x1, 'de', 0xf, 0xc5, 0x61, 0x0],
        [0x1, 'de', 0xc, 0xc6, 0x57, 0x0],
        [0x1, 'de', 0xe, 0xc4, 0x4d, 0x0],
        [0x1, 'de', 0xd, 0xc2, 0x56, 0x0],
        [0x1, 'de', 0xf, 0xb5, 0x54, 0x0],
        [0x1, 'de', 0xe, 0xb8, 0x4f, 0x0],
        [0x1, 'de', 0xe, 0xbc, 0x5d, 0x0],
        [0x1, 'de', 0xd, 0xb4, 0x57, 0x0],
        [0x1, 'de', 0xd, 0xb2, 0x60, 0x0],
        [0x1, 'de', 0xd, 0xa3, 0x5f, 0x0],
        [0x1, 'de', 0xf, 0xac, 0x58, 0x0],
        [0x1, 'de', 0xf, 0xb0, 0x4b, 0x0],
        [0x1, 'de', 0xe, 0xac, 0x48, 0x0],
        [0x1, 'de', 0xe, 0xa9, 0x52, 0x0],
        [0x1, 'de', 0xd, 0xa4, 0x4e, 0x0],
        [0x1, 'de', 0xd, 0x9e, 0x57, 0x0],
        [0x1, 'de', 0xd, 0x95, 0x56, 0x0],
        [0x1, 'de', 0xf, 0x9a, 0x5b, 0x0],
        [0x1, 'de', 0xf, 0xa0, 0x4a, 0x0],
        [0x1, 'de', 0xe, 0x98, 0x4c, 0x0],
        [0x1, 'de', 0xe, 0x9e, 0x3f, 0x0],
        [0x1, 'de', 0xe, 0x96, 0x3c, 0x0],
        [0x1, 'de', 0xc, 0xa9, 0x3b, 0x0],
        [0x1, 'de', 0xd, 0xad, 0x3d, 0x0],
        [0x1, 'cs', 0x1, 0x8f, 0x68, 0x1],
        [0x1, 'cs', 0x0, 0x8d, 0x66, 0x1],
        [0x1, 'cs', 0x3, 0x8a, 0x66, 0x1],
        [0x1, 'cs', 0x2, 0x8b, 0x66, 0x1],
        [0x1, 'cs', 0x2, 0x8c, 0x66, 0x1],
        [0x1, 'cs', 0x3, 0x8f, 0x6b, 0x1],
        [0x1, 'cs', 0x0, 0x8f, 0x6a, 0x1],
        [0x1, 'cs', 0x2, 0x8f, 0x69, 0x1],
        [0x1, 'cs', 0x2, 0x8e, 0x67, 0x1],
        [0x1, 'cs', 0x0, 0x8e, 0x68, 0x1],
        [0x1, 'cs', 0x2, 0x8d, 0x67, 0x1],
        [0x1, 'cs', 0x3, 0x8e, 0x69, 0x1],
        [0x1, 'cs', 0x3, 0x8c, 0x67, 0x1],
        [0x1, 'cs', 0x3, 0x8d, 0x68, 0x1],
        [0x1, 'la', 0x4, 0x97, 0x17, 0x1],
        [0x1, 'la', 0x4, 0x96, 0x16, 0x1],
        [0x1, 'la', 0x1, 0x95, 0x15, 0x1],
        [0x1, 'la', 0x4, 0x94, 0x15, 0x1],
        [0x1, 'la', 0x2, 0x93, 0x14, 0x1],
        [0x1, 'la', 0x4, 0x93, 0x13, 0x1],
        [0x1, 'la', 0x5, 0x93, 0x12, 0x1],
        [0x1, 'la', 0x1, 0x93, 0x11, 0x1],
        [0x1, 'la', 0x3, 0x90, 0x9, 0x1],
        [0x1, 'la', 0x5, 0x93, 0x10, 0x1],
        [0x1, 'la', 0x2, 0x93, 0xf, 0x1],
        [0x1, 'la', 0x4, 0x93, 0xe, 0x1],
        [0x1, 'la', 0x4, 0x91, 0xb, 0x1],
        [0x1, 'la', 0x5, 0x91, 0xc, 0x1],
        [0x1, 'la', 0x1, 0x92, 0xd, 0x1],
        [0x1, 'la', 0x2, 0x91, 0xd, 0x1],
        [0x1, 'la', 0x3, 0x9b, 0x19, 0x1],
        [0x1, 'la', 0x0, 0x9b, 0x18, 0x1],
        [0x1, 'la', 0x3, 0x99, 0x1a, 0x1],
        [0x1, 'cs', 0x0, 0x97, 0x18, 0x1],
        [0x1, 'cs', 0x0, 0x99, 0x16, 0x1],
        [0x1, 'cs', 0x3, 0x98, 0x16, 0x1],
        [0x1, 'cs', 0x3, 0x9a, 0x16, 0x1],
        [0x1, 'cs', 0x1, 0x9d, 0x1a, 0x1],
        [0x1, 'cs', 0x2, 0x9d, 0x18, 0x1],
        [0x1, 'cs', 0x2, 0x9c, 0x1a, 0x1],
        [0x1, 'cs', 0x2, 0x9a, 0x1c, 0x1],
        [0x1, 'cs', 0x2, 0x97, 0x1a, 0x1],
        [0x1, 'cs', 0x2, 0x98, 0x19, 0x1],
        [0x1, 'cs', 0x2, 0x97, 0x19, 0x1],
        [0x1, 'cs', 0x2, 0x9c, 0x1b, 0x1],
        [0x1, 'cs', 0x2, 0x9d, 0x17, 0x1],
        [0x1, 'cs', 0x2, 0x9d, 0x16, 0x1],
        [0x1, 'cs', 0x3, 0x96, 0x18, 0x1],
        [0x1, 'cs', 0x3, 0x96, 0x17, 0x1],
        [0x1, 'de', 0x26, 0x9b, 0x1d, 0x0],
        [0x1, 'de', 0xc, 0x9d, 0x1b, 0x0],
        [0x1, 'de', 0xe, 0x99, 0x1d, 0x0],
        [0x1, 'de', 0xf, 0x9e, 0x17, 0x0],
        [0x1, 'de', 0xd, 0x9c, 0x15, 0x0],
        [0x1, 'de', 0xd, 0x93, 0x24, 0x0],
        [0x1, 'de', 0xd, 0xa1, 0x38, 0x0],
        [0x1, 'de', 0xd, 0x93, 0x4f, 0x0],
        [0x1, 'de', 0xc, 0x9d, 0x63, 0x0],
        [0x1, 'de', 0xc, 0xac, 0x63, 0x0],
        [0x1, 'la', 0x3, 0x8f, 0x66, 0x1],
        [0x1, 'la', 0x4, 0x95, 0x60, 0x1],
        [0x1, 'la', 0x4, 0x91, 0x66, 0x1],
        [0x1, 'la', 0x1, 0x94, 0x61, 0x1],
        [0x1, 'la', 0x5, 0x94, 0x62, 0x1],
        [0x1, 'cs', 0x3, 0x90, 0x68, 0x1],
        [0x1, 'cs', 0x3, 0x90, 0x67, 0x1],
        [0x1, 'cs', 0x3, 0x91, 0x67, 0x1],
        [0x1, 'cs', 0x3, 0x91, 0x68, 0x1],
        [0x1, 'cs', 0x3, 0x8e, 0x65, 0x1],
        [0x1, 'cs', 0x3, 0x8f, 0x64, 0x1],
        [0x1, 'cs', 0x3, 0x8d, 0x65, 0x1],
        [0x1, 'cs', 0x3, 0x8e, 0x64, 0x1],
        [0x1, 'cs', 0x0, 0x8d, 0x64, 0x1],
        [0x1, 'cs', 0x2, 0x8c, 0x65, 0x1],
        [0x1, 'cs', 0x2, 0x90, 0x69, 0x1],
        [0x1, 'cs', 0x3, 0x92, 0x67, 0x1],
        [0x1, 'cs', 0x3, 0x92, 0x66, 0x1],
        [0x1, 'cs', 0x3, 0x96, 0x5f, 0x1],
        [0x1, 'cs', 0x0, 0x96, 0x61, 0x1],
        [0x1, 'cs', 0x2, 0x97, 0x62, 0x1],
        [0x1, 'cs', 0x0, 0x99, 0x61, 0x1],
        [0x1, 'cs', 0x3, 0x99, 0x60, 0x1],
        [0x1, 'cs', 0x2, 0x95, 0x5f, 0x1],
        [0x1, 's', 0x0, 0xd5, 0x7f, 0x1],
        [0x1, 'plm', 0x1, 0xd6, 0x83, 0x0],
        [0x1, 'plm', 0x1, 0xcf, 0x80, 0x0],
        [0x1, 'plm', 0x0, 0xd0, 0x7f, 0x0],
        [0x1, 's', 0x1, 0xcf, 0x84, 0x1],
        [0x1, 's', 0x2, 0xd0, 0x85, 0x1],
        [0x1, 'plm', 0x0, 0xd9, 0x84, 0x0],
        [0x1, 'plm', 0x2, 0xba, 0x9e, 0x0],
        [0x1, 'plm', 0x0, 0xb8, 0xa0, 0x0],
        [0x1, 's', 0x1, 0xb7, 0x9c, 0x1],
        [0x1, 's', 0x2, 0xba, 0x9f, 0x1],
        [0x1, 'p', 0x0, 0xb6, 0x9d, 0x1],
        [0x1, 'p', 0x0, 0x72, 0xcd, 0x1],
        [0x1, 'plm', 0x1, 0x75, 0xcc, 0x0],
        [0x1, 'plm', 0x0, 0x75, 0xcd, 0x0],
        [0x1, 'plm', 0x2, 0x70, 0xcc, 0x0],
        [0x1, 's', 0x2, 0x72, 0xcf, 0x1],
        [0x1, 's', 0x2, 0x73, 0xcc, 0x1],
        [0x1, 'plm', 0x2, 0x7a, 0x97, 0x0],
        [0x1, 'plm', 0x1, 0x7b, 0x96, 0x0],
        [0x1, 'plm', 0x1, 0x75, 0x97, 0x0],
        [0x1, 's', 0x0, 0x76, 0x96, 0x1],
        [0x1, 's', 0x1, 0x7a, 0x98, 0x1],
        [0x1, 'plm', 0x2, 0x9c, 0x82, 0x0],
        [0x1, 'plm', 0x1, 0x9a, 0x7f, 0x0],
        [0x1, 's', 0x0, 0x99, 0x80, 0x1],
        [0x1, 's', 0x2, 0x98, 0x82, 0x1],
        [0x1, 'p', 0x0, 0x7b, 0x41, 0x1],
        [0x1, 'plm', 0x2, 0x7d, 0x3e, 0x0],
        [0x1, 'plm', 0x1, 0x7c, 0x3e, 0x0],
        [0x1, 'plm', 0x0, 0x78, 0x41, 0x0],
        [0x1, 's', 0x1, 0x7d, 0x3f, 0x1],
        [0x1, 's', 0x1, 0x79, 0x40, 0x1],
        [0x1, 's', 0x2, 0x7a, 0x3e, 0x1],
        [0x1, 'cs', 0x0, 0x8c, 0x6a, 0x1],
        [0x1, 'cs', 0x2, 0x90, 0x6a, 0x1],
        [0x1, 'cs', 0x2, 0x91, 0x69, 0x1],
        [0x1, 'cs', 0x2, 0x90, 0x6b, 0x1],
        [0x1, 'cs', 0x2, 0x8d, 0x6a, 0x1],
        [0x1, 'cs', 0x2, 0x8d, 0x69, 0x1],
        [0x1, 'cs', 0x2, 0x8c, 0x69, 0x1],
        [0x1, 'cs', 0x2, 0x8c, 0x68, 0x1],
        [0x1, 'cs', 0x1, 0x8a, 0x67, 0x1],
        [0x1, 'cs', 0x0, 0x8b, 0x68, 0x1],
        [0x1, 'cs', 0x2, 0x8b, 0x67, 0x1],
        [0x1, 'cs', 0x2, 0x8b, 0x69, 0x1],
        [0x1, 'cs', 0x2, 0x8e, 0x6a, 0x1],
        [0x1, 'cs', 0x2, 0x8e, 0x6b, 0x1],
        [0x1, 'cs', 0x2, 0x8b, 0x65, 0x1],
        [0x1, 'de', 0x13, 0x1b, 0x108, 0x0],
        [0x1, 'la', 0x4, 0x93, 0x63, 0x1],
        [0x1, 'la', 0x1, 0x92, 0x64, 0x1],
        [0x1, 'la', 0x4, 0x91, 0x65, 0x1],
        [0x1, 'cs', 0x1, 0xd7, 0x2f, 0x1],
        [0x1, 'cs', 0x2, 0xd8, 0x2f, 0x1],
        [0x1, 'cs', 0x2, 0xd7, 0x30, 0x1],
        [0x1, 'la', 0x4, 0xd6, 0x2d, 0x1],
        [0x1, 'la', 0x4, 0xd7, 0x2d, 0x1],
        [0x1, 'la', 0x0, 0xd8, 0x2e, 0x1],
        [0x1, 'la', 0x4, 0xd8, 0x30, 0x1],
        [0x1, 'la', 0x4, 0xd8, 0x31, 0x1],
        [0x1, 'la', 0x4, 0xd9, 0x32, 0x1],
        [0x1, 'la', 0x3, 0xd6, 0x31, 0x1],
        [0x1, 'la', 0x4, 0xd3, 0x2d, 0x1],
        [0x1, 'la', 0x3, 0xd5, 0x2f, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0x30, 0x1],
        [0x1, 'plm', 0x2, 0x6f, 0xf3, 0x0],
        [0x1, 'plm', 0x1, 0x6c, 0xf6, 0x0],
        [0x1, 's', 0x1, 0x6e, 0xf3, 0x1],
        [0x1, 's', 0x0, 0x6c, 0xf5, 0x1],
        [0x1, 's', 0x0, 0x79, 0x114, 0x1],
        [0x1, 'plm', 0x2, 0x7a, 0x115, 0x0],
        [0x1, 'plm', 0x2, 0x75, 0x114, 0x0],
        [0x1, 'plm', 0x1, 0x76, 0x115, 0x0],
        [0x1, 's', 0x1, 0x76, 0x116, 0x1],
        [0x1, 'cs', 0x2, 0x42, 0x10, 0x1],
        [0x1, 'cs', 0x3, 0x43, 0x10, 0x1],
        [0x1, 'cs', 0x0, 0x43, 0x11, 0x1],
        [0x1, 'cs', 0x2, 0x42, 0x11, 0x1],
        [0x1, 'cs', 0x3, 0x42, 0x12, 0x1],
        [0x1, 'cs', 0x3, 0x44, 0x11, 0x1],
        [0x1, 'cs', 0x0, 0x24, 0x10, 0x1],
        [0x1, 'cs', 0x2, 0x24, 0x11, 0x1],
        [0x1, 'cs', 0x2, 0x24, 0x12, 0x1],
        [0x1, 'cs', 0x3, 0x23, 0x11, 0x1],
        [0x1, 'cs', 0x3, 0x24, 0x13, 0x1],
        [0x1, 'cs', 0x3, 0x23, 0x12, 0x1],
        [0x1, 'cs', 0x2, 0x42, 0x1e, 0x1],
        [0x1, 'cs', 0x2, 0x42, 0x17, 0x1],
        [0x1, 'cs', 0x3, 0x42, 0x16, 0x1],
        [0x1, 'cs', 0x3, 0x42, 0x1f, 0x1],
        [0x1, 'cs', 0x2, 0x24, 0x1e, 0x1],
        [0x1, 'cs', 0x2, 0x24, 0x17, 0x1],
        [0x1, 'cs', 0x1, 0x24, 0x16, 0x1],
        [0x1, 'cs', 0x2, 0x24, 0x1f, 0x1],
        [0x1, 'cs', 0x3, 0x2a, 0xd, 0x1],
        [0x1, 'cs', 0x0, 0x2b, 0xd, 0x1],
        [0x1, 'cs', 0x2, 0x2c, 0xd, 0x1],
        [0x1, 'cs', 0x3, 0x2a, 0x10, 0x1],
        [0x1, 'cs', 0x3, 0x29, 0x10, 0x1],
        [0x1, 'cs', 0x3, 0x28, 0x10, 0x1],
        [0x1, 'cs', 0x0, 0x2a, 0x13, 0x1],
        [0x1, 'cs', 0x3, 0x2b, 0x13, 0x1],
        [0x1, 'cs', 0x3, 0x2c, 0x13, 0x1],
        [0x1, 'cs', 0x3, 0x2d, 0x13, 0x1],
        [0x1, 'cs', 0x2, 0x2e, 0x13, 0x1],
        [0x1, 'cs', 0x0, 0x2b, 0x16, 0x1],
        [0x1, 'cs', 0x2, 0x2a, 0x16, 0x1],
        [0x1, 'cs', 0x1, 0x29, 0x16, 0x1],
        [0x1, 'cs', 0x0, 0x28, 0x16, 0x1],
        [0x1, 'cs', 0x3, 0x27, 0x11, 0x1],
        [0x1, 'cs', 0x1, 0x2c, 0x1a, 0x1],
        [0x1, 'cs', 0x2, 0x2d, 0x1a, 0x1],
        [0x1, 'cs', 0x3, 0x2e, 0x1a, 0x1],
        [0x1, 'cs', 0x0, 0x2f, 0x1a, 0x1],
        [0x1, 'cs', 0x2, 0x30, 0x1a, 0x1],
        [0x1, 'cs', 0x3, 0x2f, 0x19, 0x1],
        [0x1, 'cs', 0x3, 0x2b, 0x1b, 0x1],
        [0x1, 'cs', 0x1, 0x31, 0x20, 0x1],
        [0x1, 'cs', 0x2, 0x32, 0x20, 0x1],
        [0x1, 'cs', 0x2, 0x33, 0x20, 0x1],
        [0x1, 'cs', 0x2, 0x34, 0x20, 0x1],
        [0x1, 'd', 0x0, 0x33, 0x1d, 0x1],
        [0x1, 'd', 0x1, 0x35, 0x1d, 0x1],
        [0x1, 'd', 0x1, 0x31, 0x1d, 0x1],
        [0x1, 'cs', 0x3, 0x37, 0x1f, 0x1],
        [0x1, 'cs', 0x3, 0x36, 0x20, 0x1],
        [0x1, 'cs', 0x3, 0x2f, 0x1f, 0x1],
        [0x1, 'cs', 0x3, 0x30, 0x20, 0x1],
        [0x1, 'cs', 0x0, 0x33, 0x21, 0x1],
        [0x1, 'cs', 0x2, 0x34, 0x21, 0x1],
        [0x1, 'cs', 0x2, 0x32, 0x21, 0x1],
        [0x1, 'cs', 0x3, 0x38, 0x1e, 0x1],
        [0x1, 'cs', 0x3, 0x38, 0x1f, 0x1],
        [0x1, 'cs', 0x3, 0x2e, 0x1e, 0x1],
        [0x1, 'cs', 0x3, 0x2e, 0x1f, 0x1],
        [0x1, 'cs', 0x1, 0x35, 0x21, 0x1],
        [0x1, 'cs', 0x2, 0x31, 0x21, 0x1],
        [0x1, 'cs', 0x2, 0x35, 0x20, 0x1],
        [0x1, 'cs', 0x0, 0x37, 0x20, 0x1],
        [0x1, 'cs', 0x0, 0x2f, 0x20, 0x1],
        [0x1, 'd', 0x1, 0x36, 0x23, 0x1],
        [0x1, 'fo', 0x2, 0x23, 0xf, 0x0],
        [0x1, 'fo', 0x2, 0x24, 0xc, 0x0],
        [0x1, 'fo', 0x2, 0x43, 0xf, 0x0],
        [0x1, 'cs', 0x3, 0x3c, 0xd, 0x1],
        [0x1, 'cs', 0x2, 0x3b, 0xd, 0x1],
        [0x1, 'cs', 0x1, 0x3a, 0xd, 0x1],
        [0x1, 'cs', 0x3, 0x3e, 0x10, 0x1],
        [0x1, 'cs', 0x0, 0x3d, 0x10, 0x1],
        [0x1, 'cs', 0x3, 0x3c, 0x10, 0x1],
        [0x1, 'cs', 0x3, 0x3f, 0x11, 0x1],
        [0x1, 'cs', 0x2, 0x3c, 0x13, 0x1],
        [0x1, 'cs', 0x1, 0x3b, 0x13, 0x1],
        [0x1, 'cs', 0x3, 0x3a, 0x13, 0x1],
        [0x1, 'cs', 0x2, 0x39, 0x13, 0x1],
        [0x1, 'cs', 0x2, 0x38, 0x13, 0x1],
        [0x1, 'cs', 0x0, 0x37, 0x12, 0x1],
        [0x1, 'cs', 0x2, 0x37, 0x11, 0x1],
        [0x1, 'cs', 0x2, 0x3f, 0x17, 0x1],
        [0x1, 'cs', 0x0, 0x3e, 0x16, 0x1],
        [0x1, 'cs', 0x2, 0x3d, 0x16, 0x1],
        [0x1, 'cs', 0x1, 0x3c, 0x16, 0x1],
        [0x1, 'cs', 0x0, 0x3b, 0x16, 0x1],
        [0x1, 'cs', 0x2, 0x36, 0x1a, 0x1],
        [0x1, 'cs', 0x2, 0x37, 0x1a, 0x1],
        [0x1, 'cs', 0x2, 0x38, 0x1a, 0x1],
        [0x1, 'cs', 0x1, 0x39, 0x1a, 0x1],
        [0x1, 'cs', 0x2, 0x3a, 0x1a, 0x1],
        [0x1, 'cs', 0x2, 0x3b, 0x1b, 0x1],
        [0x1, 'cs', 0x2, 0x44, 0x10, 0x1],
        [0x1, 'cs', 0x2, 0x44, 0xf, 0x1],
        [0x1, 'cs', 0x3, 0x45, 0xf, 0x1],
        [0x1, 'cs', 0x3, 0x46, 0xf, 0x1],
        [0x1, 'cs', 0x3, 0x46, 0xe, 0x1],
        [0x1, 'cs', 0x1, 0x45, 0xe, 0x1],
        [0x1, 'cs', 0x1, 0x45, 0x10, 0x1],
        [0x1, 'cs', 0x2, 0x47, 0xd, 0x1],
        [0x1, 'cs', 0x2, 0x47, 0xe, 0x1],
        [0x1, 'cs', 0x3, 0x48, 0xd, 0x1],
        [0x1, 'cs', 0x3, 0x46, 0x8, 0x1],
        [0x1, 'cs', 0x3, 0x47, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0x48, 0x8, 0x1],
        [0x1, 'cs', 0x0, 0x49, 0x8, 0x1],
        [0x1, 'cs', 0x3, 0x4a, 0x9, 0x1],
        [0x1, 'cs', 0x3, 0x4a, 0x8, 0x1],
        [0x1, 'cs', 0x0, 0x4b, 0x8, 0x1],
        [0x1, 'cs', 0x3, 0x4c, 0x8, 0x1],
        [0x1, 'cs', 0x3, 0x4b, 0x9, 0x1],
        [0x1, 'cs', 0x3, 0x4b, 0xa, 0x1],
        [0x1, 'cs', 0x0, 0x4c, 0xa, 0x1],
        [0x1, 'cs', 0x0, 0x4c, 0x10, 0x1],
        [0x1, 'cs', 0x3, 0x4c, 0xf, 0x1],
        [0x1, 'cs', 0x3, 0x4b, 0x10, 0x1],
        [0x1, 'cs', 0x2, 0x4d, 0xb, 0x1],
        [0x1, 'cs', 0x2, 0x4d, 0xe, 0x1],
        [0x1, 'cs', 0x3, 0x4d, 0xc, 0x1],
        [0x1, 'cs', 0x3, 0x4d, 0xd, 0x1],
        [0x1, 'cs', 0x3, 0x4d, 0xf, 0x1],
        [0x1, 'cs', 0x0, 0x4a, 0x12, 0x1],
        [0x1, 'cs', 0x1, 0x4b, 0x11, 0x1],
        [0x1, 'cs', 0x2, 0x4a, 0x11, 0x1],
        [0x1, 'cs', 0x3, 0x49, 0x13, 0x1],
        [0x1, 'cs', 0x3, 0x43, 0x17, 0x1],
        [0x1, 'cs', 0x0, 0x44, 0x17, 0x1],
        [0x1, 'cs', 0x0, 0x48, 0x14, 0x1],
        [0x1, 'cs', 0x2, 0x49, 0x14, 0x1],
        [0x1, 'cs', 0x2, 0x4a, 0x13, 0x1],
        [0x1, 'cs', 0x2, 0x4a, 0x24, 0x1],
        [0x1, 'cs', 0x2, 0x4d, 0x1b, 0x1],
        [0x1, 'cs', 0x2, 0x4c, 0x1a, 0x1],
        [0x1, 'cs', 0x2, 0x4b, 0x1a, 0x1],
        [0x1, 'cs', 0x0, 0x4a, 0x1a, 0x1],
        [0x1, 'cs', 0x2, 0x4b, 0x19, 0x1],
        [0x1, 'cs', 0x0, 0x4c, 0x19, 0x1],
        [0x1, 'cs', 0x1, 0x4d, 0x17, 0x1],
        [0x1, 'cs', 0x2, 0x4d, 0x10, 0x1],
        [0x1, 'cs', 0x2, 0x4c, 0x11, 0x1],
        [0x1, 'cs', 0x2, 0x4c, 0x18, 0x1],
        [0x1, 'cs', 0x2, 0x4d, 0x18, 0x1],
        [0x1, 'cs', 0x2, 0x4d, 0x19, 0x1],
        [0x1, 'cs', 0x2, 0x4d, 0x1a, 0x1],
        [0x1, 'cs', 0x1, 0x4b, 0x1b, 0x1],
        [0x1, 'cs', 0x3, 0x4c, 0x1b, 0x1],
        [0x1, 'cs', 0x2, 0x43, 0x18, 0x1],
        [0x1, 'cs', 0x2, 0x42, 0x18, 0x1],
        [0x1, 'cs', 0x2, 0x49, 0x1a, 0x1],
        [0x1, 'cs', 0x2, 0x4a, 0x1b, 0x1],
        [0x1, 'cs', 0x2, 0x4a, 0x19, 0x1],
        [0x1, 'cs', 0x2, 0x42, 0x13, 0x1],
        [0x1, 'cs', 0x2, 0x42, 0x14, 0x1],
        [0x1, 'cs', 0x2, 0x42, 0x15, 0x1],
        [0x1, 'cs', 0x2, 0x43, 0x12, 0x1],
        [0x1, 'cs', 0x2, 0x43, 0x16, 0x1],
        [0x1, 'cs', 0x0, 0x4d, 0x24, 0x1],
        [0x1, 'cs', 0x0, 0x4d, 0x20, 0x1],
        [0x1, 'cs', 0x1, 0x4b, 0x23, 0x1],
        [0x1, 'cs', 0x2, 0x4b, 0x24, 0x1],
        [0x1, 'cs', 0x2, 0x4c, 0x24, 0x1],
        [0x1, 'cs', 0x2, 0x4d, 0x23, 0x1],
        [0x1, 'cs', 0x2, 0x4d, 0x22, 0x1],
        [0x1, 'cs', 0x2, 0x4c, 0x23, 0x1],
        [0x1, 'cs', 0x2, 0x4d, 0x21, 0x1],
        [0x1, 'cs', 0x2, 0x4d, 0x1f, 0x1],
        [0x1, 'cs', 0x0, 0x4d, 0x1d, 0x1],
        [0x1, 'cs', 0x0, 0x47, 0x20, 0x1],
        [0x1, 'cs', 0x0, 0x4c, 0x22, 0x1],
        [0x1, 'cs', 0x2, 0x4d, 0x1e, 0x1],
        [0x1, 'cs', 0x2, 0x4d, 0x1c, 0x1],
        [0x1, 'cs', 0x2, 0x4c, 0x1c, 0x1],
        [0x1, 'cs', 0x2, 0x4b, 0x1c, 0x1],
        [0x1, 'cs', 0x2, 0x4c, 0x1d, 0x1],
        [0x1, 'cs', 0x2, 0x4c, 0x21, 0x1],
        [0x1, 'cs', 0x2, 0x46, 0x20, 0x1],
        [0x1, 'cs', 0x2, 0x45, 0x1f, 0x1],
        [0x1, 'cs', 0x0, 0x44, 0x1f, 0x1],
        [0x1, 'cs', 0x2, 0x43, 0x1f, 0x1],
        [0x1, 'cs', 0x2, 0x43, 0x1e, 0x1],
        [0x1, 'cs', 0x2, 0x45, 0x20, 0x1],
        [0x1, 'cs', 0x1, 0x43, 0x20, 0x1],
        [0x1, 'cs', 0x2, 0x44, 0x20, 0x1],
        [0x1, 'cs', 0x2, 0x42, 0x20, 0x1],
        [0x1, 'cs', 0x2, 0x42, 0x21, 0x1],
        [0x1, 'cs', 0x2, 0x43, 0x21, 0x1],
        [0x1, 'cs', 0x2, 0x46, 0x21, 0x1],
        [0x1, 'cs', 0x2, 0x45, 0x21, 0x1],
        [0x1, 'cs', 0x2, 0x44, 0x21, 0x1],
        [0x1, 'cs', 0x0, 0x44, 0x22, 0x1],
        [0x1, 'cs', 0x1, 0x42, 0x23, 0x1],
        [0x1, 'cs', 0x2, 0x43, 0x22, 0x1],
        [0x1, 'cs', 0x2, 0x42, 0x22, 0x1],
        [0x1, 'cs', 0x2, 0x41, 0x23, 0x1],
        [0x1, 'cs', 0x2, 0x40, 0x24, 0x1],
        [0x1, 'cs', 0x2, 0x41, 0x24, 0x1],
        [0x1, 'cs', 0x2, 0x43, 0x23, 0x1],
        [0x1, 'cs', 0x2, 0x42, 0x24, 0x1],
        [0x1, 'cs', 0x2, 0x45, 0x22, 0x1],
        [0x1, 'cs', 0x2, 0x44, 0x23, 0x1],
        [0x1, 'cs', 0x2, 0x4c, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0x4d, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0x4d, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0x4d, 0xa, 0x1],
        [0x1, 'cs', 0x2, 0x4e, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0x4e, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0x4e, 0xa, 0x1],
        [0x1, 'cs', 0x2, 0x4e, 0xb, 0x1],
        [0x1, 'cs', 0x2, 0x4e, 0xc, 0x1],
        [0x1, 'cs', 0x2, 0x4e, 0xd, 0x1],
        [0x1, 'cs', 0x0, 0x4f, 0x9, 0x1],
        [0x1, 'cs', 0x1, 0x4f, 0xb, 0x1],
        [0x1, 'cs', 0x3, 0x4f, 0x8, 0x1],
        [0x1, 'cs', 0x3, 0x4f, 0xa, 0x1],
        [0x1, 'cs', 0x3, 0x4f, 0xc, 0x1],
        [0x1, 'cs', 0x3, 0x50, 0x8, 0x1],
        [0x1, 'cs', 0x1, 0x50, 0xa, 0x1],
        [0x1, 'cs', 0x2, 0x50, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0x50, 0xb, 0x1],
        [0x1, 'cs', 0x2, 0x51, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0x51, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0x51, 0xa, 0x1],
        [0x1, 'cs', 0x2, 0x4e, 0xe, 0x1],
        [0x1, 'cs', 0x2, 0x4f, 0xd, 0x1],
        [0x1, 'cs', 0x2, 0x4e, 0xf, 0x1],
        [0x1, 'cs', 0x2, 0x50, 0xc, 0x1],
        [0x1, 'cs', 0x0, 0x4f, 0xe, 0x1],
        [0x1, 'cs', 0x0, 0x52, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0x52, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0x52, 0xa, 0x1],
        [0x1, 'cs', 0x2, 0x51, 0xb, 0x1],
        [0x1, 'cs', 0x3, 0x50, 0xd, 0x1],
        [0x1, 'cs', 0x1, 0x4e, 0x1e, 0x1],
        [0x1, 'cs', 0x1, 0x4e, 0x22, 0x1],
        [0x1, 'cs', 0x1, 0x4e, 0x1b, 0x1],
        [0x1, 'cs', 0x0, 0x4e, 0x19, 0x1],
        [0x1, 'cs', 0x0, 0x4f, 0x1d, 0x1],
        [0x1, 'cs', 0x0, 0x4f, 0x20, 0x1],
        [0x1, 'cs', 0x0, 0x4f, 0x23, 0x1],
        [0x1, 'cs', 0x2, 0x4e, 0x23, 0x1],
        [0x1, 'cs', 0x2, 0x4e, 0x24, 0x1],
        [0x1, 'cs', 0x2, 0x4f, 0x22, 0x1],
        [0x1, 'cs', 0x2, 0x4e, 0x21, 0x1],
        [0x1, 'cs', 0x2, 0x4f, 0x21, 0x1],
        [0x1, 'cs', 0x2, 0x4e, 0x20, 0x1],
        [0x1, 'cs', 0x2, 0x4e, 0x1f, 0x1],
        [0x1, 'cs', 0x2, 0x4f, 0x1f, 0x1],
        [0x1, 'cs', 0x2, 0x4f, 0x1e, 0x1],
        [0x1, 'cs', 0x2, 0x4e, 0x1d, 0x1],
        [0x1, 'cs', 0x2, 0x4e, 0x1c, 0x1],
        [0x1, 'cs', 0x2, 0x4f, 0x1c, 0x1],
        [0x1, 'cs', 0x2, 0x4f, 0x1b, 0x1],
        [0x1, 'cs', 0x2, 0x4e, 0x1a, 0x1],
        [0x1, 'cs', 0x2, 0x4f, 0x1a, 0x1],
        [0x1, 'cs', 0x2, 0x4e, 0x18, 0x1],
        [0x1, 'cs', 0x2, 0x50, 0x22, 0x1],
        [0x1, 'cs', 0x2, 0x50, 0x21, 0x1],
        [0x1, 'cs', 0x2, 0x50, 0x1f, 0x1],
        [0x1, 'cs', 0x2, 0x50, 0x1e, 0x1],
        [0x1, 'cs', 0x2, 0x50, 0x20, 0x1],
        [0x1, 'cs', 0x2, 0x50, 0x1d, 0x1],
        [0x1, 'cs', 0x2, 0x50, 0x1c, 0x1],
        [0x1, 'cs', 0x2, 0x50, 0x1b, 0x1],
        [0x1, 'cs', 0x0, 0x51, 0x1e, 0x1],
        [0x1, 'cs', 0x1, 0x51, 0x20, 0x1],
        [0x1, 'cs', 0x1, 0x51, 0x1c, 0x1],
        [0x1, 'cs', 0x2, 0x51, 0x1d, 0x1],
        [0x1, 'cs', 0x2, 0x51, 0x1f, 0x1],
        [0x1, 'cs', 0x2, 0x51, 0x21, 0x1],
        [0x1, 'cs', 0x2, 0x52, 0x1e, 0x1],
        [0x1, 'cs', 0x2, 0x52, 0x1f, 0x1],
        [0x1, 'cs', 0x2, 0x52, 0x20, 0x1],
        [0x1, 'cs', 0x0, 0x25, 0x24, 0x1],
        [0x1, 'cs', 0x2, 0x26, 0x24, 0x1],
        [0x1, 'cs', 0x2, 0x25, 0x23, 0x1],
        [0x1, 'cs', 0x2, 0x24, 0x24, 0x1],
        [0x1, 'cs', 0x2, 0x22, 0x23, 0x1],
        [0x1, 'cs', 0x2, 0x23, 0x23, 0x1],
        [0x1, 'cs', 0x2, 0x24, 0x23, 0x1],
        [0x1, 'cs', 0x0, 0x21, 0x22, 0x1],
        [0x1, 'cs', 0x1, 0x23, 0x22, 0x1],
        [0x1, 'cs', 0x2, 0x24, 0x22, 0x1],
        [0x1, 'cs', 0x2, 0x22, 0x22, 0x1],
        [0x1, 'cs', 0x2, 0x24, 0x21, 0x1],
        [0x1, 'cs', 0x2, 0x23, 0x21, 0x1],
        [0x1, 'cs', 0x2, 0x22, 0x21, 0x1],
        [0x1, 'cs', 0x2, 0x21, 0x21, 0x1],
        [0x1, 'cs', 0x2, 0x1f, 0x20, 0x1],
        [0x1, 'cs', 0x1, 0x24, 0x20, 0x1],
        [0x1, 'cs', 0x1, 0x20, 0x20, 0x1],
        [0x1, 'cs', 0x2, 0x23, 0x20, 0x1],
        [0x1, 'cs', 0x2, 0x21, 0x20, 0x1],
        [0x1, 'cs', 0x2, 0x20, 0x21, 0x1],
        [0x1, 'cs', 0x2, 0x21, 0x1f, 0x1],
        [0x1, 'cs', 0x2, 0x22, 0x1f, 0x1],
        [0x1, 'cs', 0x2, 0x23, 0x1f, 0x1],
        [0x1, 'cs', 0x0, 0x22, 0x20, 0x1],
        [0x1, 'cs', 0x2, 0x23, 0x1e, 0x1],
        [0x1, 'cs', 0x1, 0x27, 0x17, 0x1],
        [0x1, 'cs', 0x3, 0x27, 0x16, 0x1],
        [0x1, 'cs', 0x3, 0x24, 0x18, 0x1],
        [0x1, 'cs', 0x3, 0x23, 0x18, 0x1],
        [0x1, 'cs', 0x2, 0x22, 0x17, 0x1],
        [0x1, 'cs', 0x2, 0x23, 0x17, 0x1],
        [0x1, 'cs', 0x2, 0x24, 0x14, 0x1],
        [0x1, 'cs', 0x2, 0x24, 0x15, 0x1],
        [0x1, 'cs', 0x2, 0x23, 0x16, 0x1],
        [0x1, 'cs', 0x2, 0x23, 0x10, 0x1],
        [0x1, 'cs', 0x2, 0x22, 0x10, 0x1],
        [0x1, 'cs', 0x2, 0x21, 0x10, 0x1],
        [0x1, 'cs', 0x0, 0x22, 0x11, 0x1],
        [0x1, 'cs', 0x0, 0x20, 0xf, 0x1],
        [0x1, 'cs', 0x2, 0x1f, 0xe, 0x1],
        [0x1, 'cs', 0x3, 0x1e, 0xd, 0x1],
        [0x1, 'cs', 0x1, 0x21, 0xf, 0x1],
        [0x1, 'cs', 0x1, 0x1f, 0xd, 0x1],
        [0x1, 'cs', 0x2, 0x20, 0xe, 0x1],
        [0x1, 'cs', 0x0, 0x1f, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0x20, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0x19, 0xd, 0x1],
        [0x1, 'cs', 0x0, 0x19, 0xc, 0x1],
        [0x1, 'cs', 0x2, 0x19, 0xb, 0x1],
        [0x1, 'cs', 0x3, 0x19, 0xa, 0x1],
        [0x1, 'cs', 0x0, 0x19, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0x19, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0x1a, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0x1b, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0x1c, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0x1d, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0x1e, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0x1a, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0x1b, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0x1a, 0xa, 0x1],
        [0x1, 'cs', 0x1, 0x1b, 0xa, 0x1],
        [0x1, 'cs', 0x3, 0x1c, 0x9, 0x1],
        [0x1, 'cs', 0x3, 0x19, 0xe, 0x1],
        [0x1, 'cs', 0x0, 0x19, 0xf, 0x1],
        [0x1, 'cs', 0x2, 0x1a, 0xf, 0x1],
        [0x1, 'cs', 0x3, 0x1b, 0x10, 0x1],
        [0x1, 'cs', 0x0, 0x1c, 0x11, 0x1],
        [0x1, 'cs', 0x1, 0x1d, 0x12, 0x1],
        [0x1, 'cs', 0x2, 0x1a, 0x10, 0x1],
        [0x1, 'cs', 0x2, 0x19, 0x10, 0x1],
        [0x1, 'cs', 0x2, 0x1b, 0x11, 0x1],
        [0x1, 'cs', 0x2, 0x1a, 0x11, 0x1],
        [0x1, 'cs', 0x1, 0x1b, 0x12, 0x1],
        [0x1, 'cs', 0x2, 0x1c, 0x12, 0x1],
        [0x1, 'cs', 0x2, 0x1e, 0x13, 0x1],
        [0x1, 'cs', 0x2, 0x1d, 0x13, 0x1],
        [0x1, 'cs', 0x2, 0x18, 0xe, 0x1],
        [0x1, 'cs', 0x2, 0x18, 0xf, 0x1],
        [0x1, 'cs', 0x0, 0x17, 0xe, 0x1],
        [0x1, 'cs', 0x2, 0x18, 0xa, 0x1],
        [0x1, 'cs', 0x2, 0x18, 0xb, 0x1],
        [0x1, 'cs', 0x2, 0x18, 0xc, 0x1],
        [0x1, 'cs', 0x2, 0x18, 0xd, 0x1],
        [0x1, 'cs', 0x1, 0x17, 0xa, 0x1],
        [0x1, 'cs', 0x0, 0x16, 0x8, 0x1],
        [0x1, 'cs', 0x0, 0x16, 0xc, 0x1],
        [0x1, 'cs', 0x1, 0x17, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0x18, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0x18, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0x17, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0x16, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0x16, 0xa, 0x1],
        [0x1, 'cs', 0x2, 0x16, 0xb, 0x1],
        [0x1, 'cs', 0x2, 0x17, 0xb, 0x1],
        [0x1, 'cs', 0x2, 0x17, 0xc, 0x1],
        [0x1, 'cs', 0x2, 0x17, 0xd, 0x1],
        [0x1, 'cs', 0x2, 0x16, 0xd, 0x1],
        [0x1, 'cs', 0x2, 0x15, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0x15, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0x1d, 0x19, 0x1],
        [0x1, 'cs', 0x2, 0x19, 0x18, 0x1],
        [0x1, 'cs', 0x2, 0x1a, 0x19, 0x1],
        [0x1, 'cs', 0x2, 0x1b, 0x19, 0x1],
        [0x1, 'cs', 0x0, 0x1c, 0x19, 0x1],
        [0x1, 'cs', 0x1, 0x19, 0x17, 0x1],
        [0x1, 'cs', 0x2, 0x1a, 0x18, 0x1],
        [0x1, 'cs', 0x0, 0x18, 0x19, 0x1],
        [0x1, 'cs', 0x3, 0x17, 0x18, 0x1],
        [0x1, 'cs', 0x3, 0x18, 0x18, 0x1],
        [0x1, 'cs', 0x3, 0x19, 0x19, 0x1],
        [0x1, 'cs', 0x3, 0x17, 0x19, 0x1],
        [0x1, 'cs', 0x1, 0x16, 0x1a, 0x1],
        [0x1, 'cs', 0x1, 0x1a, 0x1a, 0x1],
        [0x1, 'cs', 0x1, 0x1d, 0x1a, 0x1],
        [0x1, 'cs', 0x2, 0x17, 0x1a, 0x1],
        [0x1, 'cs', 0x2, 0x18, 0x1a, 0x1],
        [0x1, 'cs', 0x2, 0x19, 0x1a, 0x1],
        [0x1, 'cs', 0x2, 0x1b, 0x1a, 0x1],
        [0x1, 'cs', 0x2, 0x1c, 0x1a, 0x1],
        [0x1, 'cs', 0x2, 0x1e, 0x1a, 0x1],
        [0x1, 'cs', 0x2, 0x1d, 0x1b, 0x1],
        [0x1, 'cs', 0x2, 0x1c, 0x1c, 0x1],
        [0x1, 'cs', 0x1, 0x1a, 0x1d, 0x1],
        [0x1, 'cs', 0x0, 0x1c, 0x1b, 0x1],
        [0x1, 'cs', 0x2, 0x1b, 0x1c, 0x1],
        [0x1, 'cs', 0x2, 0x1b, 0x1b, 0x1],
        [0x1, 'cs', 0x2, 0x1a, 0x1c, 0x1],
        [0x1, 'cs', 0x2, 0x1a, 0x1b, 0x1],
        [0x1, 'cs', 0x2, 0x19, 0x1c, 0x1],
        [0x1, 'cs', 0x2, 0x19, 0x1b, 0x1],
        [0x1, 'cs', 0x2, 0x17, 0x1b, 0x1],
        [0x1, 'cs', 0x2, 0x16, 0x1b, 0x1],
        [0x1, 'cs', 0x2, 0x18, 0x1b, 0x1],
        [0x1, 'cs', 0x0, 0x18, 0x1c, 0x1],
        [0x1, 'cs', 0x0, 0x19, 0x20, 0x1],
        [0x1, 'cs', 0x1, 0x18, 0x1e, 0x1],
        [0x1, 'cs', 0x2, 0x19, 0x1f, 0x1],
        [0x1, 'cs', 0x2, 0x19, 0x1e, 0x1],
        [0x1, 'cs', 0x2, 0x19, 0x1d, 0x1],
        [0x1, 'cs', 0x2, 0x18, 0x1d, 0x1],
        [0x1, 'cs', 0x2, 0x17, 0x1d, 0x1],
        [0x1, 'cs', 0x2, 0x1a, 0x21, 0x1],
        [0x1, 'cs', 0x0, 0x1a, 0x22, 0x1],
        [0x1, 'cs', 0x2, 0x1b, 0x23, 0x1],
        [0x1, 'cs', 0x2, 0x16, 0x1c, 0x1],
        [0x1, 'cs', 0x2, 0x17, 0x1c, 0x1],
        [0x1, 'cs', 0x2, 0x18, 0x1f, 0x1],
        [0x1, 'cs', 0x2, 0x18, 0x20, 0x1],
        [0x1, 'cs', 0x2, 0x19, 0x21, 0x1],
        [0x1, 'cs', 0x2, 0x1a, 0x23, 0x1],
        [0x1, 'cs', 0x2, 0x18, 0x21, 0x1],
        [0x1, 'cs', 0x2, 0x19, 0x22, 0x1],
        [0x1, 'cs', 0x1, 0x16, 0x1d, 0x1],
        [0x1, 'cs', 0x1, 0x18, 0x22, 0x1],
        [0x1, 'cs', 0x0, 0x17, 0x23, 0x1],
        [0x1, 'cs', 0x2, 0x19, 0x23, 0x1],
        [0x1, 'cs', 0x2, 0x18, 0x23, 0x1],
        [0x1, 'cs', 0x2, 0x17, 0x22, 0x1],
        [0x1, 'cs', 0x2, 0x17, 0x21, 0x1],
        [0x1, 'cs', 0x0, 0x16, 0x21, 0x1],
        [0x1, 'cs', 0x1, 0x17, 0x20, 0x1],
        [0x1, 'cs', 0x2, 0x16, 0x20, 0x1],
        [0x1, 'cs', 0x2, 0x17, 0x1f, 0x1],
        [0x1, 'cs', 0x2, 0x17, 0x1e, 0x1],
        [0x1, 'cs', 0x2, 0x16, 0x1e, 0x1],
        [0x1, 'cs', 0x2, 0x16, 0x1f, 0x1],
        [0x1, 'cs', 0x1, 0x15, 0x1f, 0x1],
        [0x1, 'cs', 0x0, 0x15, 0x1d, 0x1],
        [0x1, 'cs', 0x2, 0x15, 0x1e, 0x1],
        [0x1, 'cs', 0x2, 0x18, 0x24, 0x1],
        [0x1, 'cs', 0x2, 0x1a, 0x24, 0x1],
        [0x1, 'cs', 0x2, 0x19, 0x24, 0x1],
        [0x1, 'cs', 0x2, 0x1b, 0x24, 0x1],
        [0x1, 'cs', 0x2, 0x1c, 0x24, 0x1],
        [0x1, 'd', 0x2, 0x53, 0x41, 0x1],
        [0x1, 'd', 0x2, 0x10, 0x43, 0x1],
        [0x1, 'g', 0x0, 0xf, 0x11, 0x1],
        [0x1, 's', 0x0, 0x12, 0xd, 0x1],
        [0x1, 's', 0x0, 0x55, 0xb, 0x1],
        [0x1, 'f', 0x0, 0x29, 0x66, 0x1],
        [0x1, 'f', 0x0, 0x2a, 0x7c, 0x1],
        [0x1, 'f', 0x0, 0x40, 0x74, 0x1],
        [0x1, 'f', 0x0, 0x4a, 0x68, 0x1],
        [0x1, 'f', 0x0, 0x46, 0x57, 0x1],
        [0x1, 'f', 0x0, 0x1b, 0x60, 0x1],
        [0x1, 'f', 0x0, 0x16, 0x4f, 0x1],
        [0x1, 'f', 0x0, 0x14, 0x75, 0x1],
        [0x1, 'f', 0x0, 0x1e, 0x89, 0x1],
        [0x1, 'f', 0x0, 0x3b, 0x92, 0x1],
        [0x1, 'f', 0x0, 0x34, 0x93, 0x1],
        [0x1, 'f', 0x0, 0x14, 0x95, 0x1],
        [0x1, 'f', 0x0, 0x24, 0x92, 0x1],
        [0x1, 'f', 0x0, 0x3e, 0x7c, 0x1],
        [0x1, 'g', 0x1, 0x22, 0x79, 0x1],
        [0x1, 'g', 0x1, 0x34, 0x74, 0x1],
        [0x1, 'g', 0x1, 0x4e, 0x74, 0x1],
        [0x1, 'g', 0x1, 0x47, 0x81, 0x1],
        [0x1, 's', 0x0, 0x35, 0x64, 0x1],
        [0x1, 's', 0x0, 0x49, 0x6f, 0x1],
        [0x1, 's', 0x0, 0x4d, 0x7e, 0x1],
        [0x1, 's', 0x0, 0x30, 0x5a, 0x1],
        [0x1, 's', 0x0, 0x13, 0x66, 0x1],
        [0x1, 's', 0x0, 0x12, 0x7f, 0x1],
        [0x1, 's', 0x0, 0x23, 0x9f, 0x1],
        [0x1, 's', 0x0, 0x41, 0x36, 0x1],
        [0x1, 's', 0x0, 0x2c, 0x34, 0x1],
        [0x1, 's', 0x0, 0x1a, 0x33, 0x1],
        [0x1, 'f', 0x1, 0x38, 0x88, 0x1],
        [0x1, 'f', 0x1, 0x29, 0x85, 0x1],
        [0x1, 'f', 0x1, 0x50, 0x78, 0x1],
        [0x1, 'f', 0x1, 0x10, 0x75, 0x1],
        [0x1, 'f', 0x1, 0xd, 0x63, 0x1],
        [0x1, 'f', 0x1, 0x11, 0x59, 0x1],
        [0x1, 'f', 0x1, 0x5a, 0x62, 0x1],
        [0x1, 'f', 0x1, 0x54, 0x5f, 0x1],
        [0x1, 'f', 0x1, 0x10, 0x39, 0x1],
        [0x1, 'f', 0x1, 0x4d, 0x35, 0x1],
        [0x1, 'd', 0x1, 0x30, 0x23, 0x1],
        [0x1, 'de', 0x8, 0x21, 0xd, 0x0],
        [0x1, 'de', 0x8, 0x1e, 0x9, 0x0],
        [0x1, 'de', 0x9, 0x20, 0x1e, 0x0],
        [0x1, 'de', 0xa, 0x1e, 0x19, 0x0],
        [0x1, 'de', 0xa, 0x21, 0x15, 0x0],
        [0x1, 'de', 0x8, 0x1f, 0x22, 0x0],
        [0x1, 'de', 0x8, 0x43, 0x1d, 0x0],
        [0x1, 'de', 0x9, 0x46, 0x16, 0x0],
        [0x1, 'de', 0xa, 0x46, 0x10, 0x0],
        [0x1, 'de', 0xa, 0x4b, 0xb, 0x0],
        [0x1, 'de', 0x8, 0x44, 0xa, 0x0],
        [0x1, 'de', 0x8, 0x4b, 0x1e, 0x0],
        [0x1, 'de', 0xb, 0x47, 0x21, 0x0],
        [0x1, 'de', 0xb, 0x48, 0x19, 0x0],
        [0x1, 'de', 0xb, 0x40, 0x19, 0x0],
        [0x1, 'de', 0xb, 0x34, 0xa, 0x0],
        [0x1, 'de', 0xb, 0x1f, 0xf, 0x0],
        [0x1, 'de', 0x1e, 0x1d, 0xe, 0x0],
        [0x1, 'de', 0x1e, 0x24, 0xf, 0x0],
        [0x1, 'de', 0x1e, 0x22, 0x1d, 0x0],
        [0x1, 'de', 0x1e, 0x1e, 0x1d, 0x0],
        [0x1, 'de', 0x1e, 0x47, 0x1d, 0x0],
        [0x1, 'de', 0x1c, 0x44, 0x19, 0x0],
        [0x1, 'de', 0x1c, 0x4b, 0xf, 0x0],
        [0x1, 'de', 0x1b, 0x43, 0x13, 0x0],
        [0x1, 'de', 0x1d, 0x48, 0xa, 0x0],
        [0x1, 'de', 0x1d, 0x4b, 0x20, 0x0],
        [0x1, 'de', 0x1d, 0x20, 0x14, 0x0],
        [0x1, 'fo', 0x1, 0x27, 0xc, 0x0],
        [0x1, 'fo', 0x1, 0x22, 0xe, 0x0],
        [0x1, 'fo', 0x1, 0x4a, 0x1c, 0x0],
        [0x1, 'fo', 0x2, 0x4a, 0x1d, 0x0],
        [0x1, 'fo', 0x2, 0x45, 0x1e, 0x0],
        [0x1, 'fo', 0x2, 0x4d, 0x16, 0x0],
        [0x1, 'fo', 0x2, 0x4a, 0x15, 0x0],
        [0x1, 'fo', 0x2, 0x4c, 0x12, 0x0],
        [0x1, 'fo', 0x1, 0x4e, 0x11, 0x0],
        [0x1, 'fo', 0x1, 0x1c, 0x13, 0x0],
        [0x1, 'fo', 0x2, 0x1b, 0x18, 0x0],
        [0x1, 'fo', 0x2, 0x18, 0x11, 0x0],
        [0x1, 'fo', 0x2, 0x1d, 0x15, 0x0],
        [0x1, 'fo', 0x1, 0x1b, 0x20, 0x0],
        [0x1, 'fo', 0x2, 0x1e, 0x21, 0x0],
        [0x1, 'fo', 0x1, 0x1d, 0x1c, 0x0],
        [0x1, 'fo', 0x2, 0x1c, 0x1f, 0x0],
        [0x1, 'fo', 0x2, 0x14, 0x18, 0x0],
        [0x1, 'fo', 0x2, 0x14, 0x1a, 0x0],
        [0x1, 'fo', 0x2, 0x17, 0x10, 0x0],
        [0x1, 'fo', 0x2, 0xb, 0x19, 0x0],
        [0x1, 'de', 0x21, 0x1d, 0x16, 0x0],
        [0x1, 'de', 0x22, 0x20, 0x19, 0x0],
        [0x1, 'de', 0x22, 0x1e, 0x12, 0x0],
        [0x1, 'de', 0x21, 0x4e, 0x12, 0x0],
        [0x1, 'de', 0x21, 0x49, 0x23, 0x0],
        [0x1, 'de', 0x24, 0x48, 0x17, 0x0],
        [0x1, 'de', 0x23, 0x19, 0x12, 0x0],
        [0x1, 'd', 0x1, 0x53, 0x29, 0x1],
        [0x1, 'd', 0x1, 0x11, 0x28, 0x1],
        [0x1, 'cs', 0x2, 0xe0, 0x68, 0x1],
        [0x1, 'cs', 0x0, 0xe0, 0x69, 0x1],
        [0x1, 'cs', 0x3, 0xe0, 0x6a, 0x1],
        [0x1, 'la', 0x3, 0xd8, 0x80, 0x1],
        [0x1, 'la', 0x0, 0xd7, 0x7e, 0x1],
        [0x1, 's', 0x0, 0xd8, 0x82, 0x1],
        [0x1, 's', 0x1, 0xd9, 0x81, 0x1],
        [0x1, 's', 0x0, 0xda, 0x80, 0x1],
        [0x1, 's', 0x1, 0xd9, 0x7f, 0x1],
        [0x1, 's', 0x0, 0xd9, 0x7e, 0x1],
        [0x1, 's', 0x1, 0xd9, 0x7d, 0x1],
        [0x1, 's', 0x0, 0xd8, 0x7c, 0x1],
        [0x1, 's', 0x1, 0xd7, 0x7c, 0x1],
        [0x1, 's', 0x0, 0xd6, 0x7c, 0x1],
        [0x1, 's', 0x1, 0xd5, 0x7d, 0x1],
        [0x1, 's', 0x0, 0xd5, 0x7e, 0x1],
        [0x1, 'plm', 0x2, 0xd9, 0x82, 0x0],
        [0x1, 'plm', 0x2, 0xd4, 0x7d, 0x0],
        [0x1, 'p', 0x0, 0xd6, 0x86, 0x1],
        [0x1, 's', 0x1, 0xd3, 0x7e, 0x1],
        [0x1, 'b', 0x1, 0x2d, 0x115, 0x0],
        [0x1, 'b', 0x1, 0x32, 0x11e, 0x0],
        [0x1, 'b', 0x2, 0x33, 0x11c, 0x0],
        [0x1, 'b', 0x1, 0x2f, 0x11f, 0x0],
        [0x1, 'b', 0x0, 0x27, 0x11d, 0x0],
        [0x1, 'b', 0x3, 0x28, 0x11b, 0x0],
        [0x1, 'b', 0x0, 0x34, 0x11b, 0x0],
        [0x1, 'b', 0x1, 0x33, 0x118, 0x0],
        [0x1, 'g', 0x0, 0x2d, 0x10d, 0x1],
        [0x1, 'p', 0x0, 0x37, 0x119, 0x1],
        [0x1, 'b', 0x1, 0x5, 0xac, 0x0],
        [0x1, 'b', 0x2, 0x6, 0xac, 0x0],
        [0x1, 't', 0x5, 0x6, 0xab, 0x0],
        [0x1, 't', 0x1, 0x5, 0xaa, 0x0],
        [0x1, 't', 0x1, 0x5, 0xa4, 0x0],
        [0x1, 't', 0x3, 0x6, 0xa4, 0x0],
        [0x1, 'b', 0x0, 0x6, 0xa5, 0x0],
        [0x1, 't', 0x3, 0x5, 0xa5, 0x0],
        [0x1, 'b', 0x2, 0x6, 0xa6, 0x0],
        [0x1, 't', 0x4, 0x5, 0xa6, 0x0],
        [0x1, 't', 0x4, 0x6, 0xa7, 0x0],
        [0x1, 't', 0x2, 0x6, 0xa8, 0x0],
        [0x1, 't', 0x0, 0x6, 0xa9, 0x0],
        [0x1, 't', 0x4, 0x6, 0xaa, 0x0],
        [0x1, 't', 0x0, 0x5, 0xa7, 0x0],
        [0x1, 't', 0x2, 0x5, 0xa9, 0x0],
        [0x1, 'b', 0x0, 0x5, 0xa8, 0x0],
        [0x1, 's', 0x1, 0x7, 0x99, 0x1],
        [0x1, 's', 0x2, 0x7, 0x97, 0x1],
        [0x1, 'de', 0x5, 0x7, 0x98, 0x0],
        [0x1, 't', 0x1, 0x5, 0x9a, 0x0],
        [0x1, 'b', 0x0, 0x6, 0x9a, 0x0],
        [0x1, 't', 0x2, 0x6, 0x9b, 0x0],
        [0x1, 'b', 0x2, 0x6, 0x9c, 0x0],
        [0x1, 't', 0x2, 0x5, 0x9d, 0x0],
        [0x1, 't', 0x4, 0x5, 0x9b, 0x0],
        [0x1, 'b', 0x0, 0x6, 0x9d, 0x0],
        [0x1, 't', 0x1, 0x5, 0x9c, 0x0],
        [0x1, 't', 0x5, 0x6, 0x9e, 0x0],
        [0x1, 'b', 0x2, 0x6, 0x9f, 0x0],
        [0x1, 'b', 0x0, 0x6, 0xa2, 0x0],
        [0x1, 't', 0x4, 0x6, 0xa3, 0x0],
        [0x1, 't', 0x4, 0x6, 0xa1, 0x0],
        [0x1, 'b', 0x1, 0x6, 0xa0, 0x0],
        [0x1, 'b', 0x2, 0x5, 0xa3, 0x0],
        [0x1, 'b', 0x2, 0x5, 0x9e, 0x0],
        [0x1, 'b', 0x2, 0x5, 0xa1, 0x0],
        [0x1, 't', 0x1, 0x5, 0xa2, 0x0],
        [0x1, 't', 0x1, 0x5, 0xa0, 0x0],
        [0x1, 'b', 0x1, 0x55, 0xb0, 0x0],
        [0x1, 'b', 0x2, 0x53, 0xb2, 0x0],
        [0x1, 's', 0x1, 0x52, 0xb1, 0x1],
        [0x1, 'b', 0x0, 0x4c, 0xac, 0x0],
        [0x1, 'b', 0x3, 0x4c, 0xae, 0x0],
        [0x1, 't', 0x3, 0x49, 0xae, 0x0],
        [0x1, 't', 0x5, 0x48, 0xaf, 0x0],
        [0x1, 't', 0x5, 0x57, 0xad, 0x0],
        [0x1, 'de', 0x2, 0x4c, 0xaf, 0x0],
        [0x1, 'de', 0x3, 0x4d, 0xab, 0x0],
        [0x1, 'de', 0x3, 0x56, 0xb1, 0x0],
        [0x1, 'de', 0x2, 0x47, 0xaf, 0x0],
        [0x1, 's', 0x1, 0x46, 0xae, 0x1],
        [0x1, 'r', 0x30, 0xae, 0x0],
        [0x1, 'r', 0x31, 0xaf, 0x0],
        [0x1, 'r', 0x32, 0xaf, 0x0],
        [0x1, 'r', 0x33, 0xaf, 0x0],
        [0x1, 'r', 0x33, 0xae, 0x0],
        [0x1, 'r', 0x32, 0xae, 0x0],
        [0x1, 'r', 0x31, 0xae, 0x0],
        [0x1, 'r', 0x34, 0xaf, 0x0],
        [0x1, 'r', 0x34, 0xb0, 0x0],
        [0x1, 'r', 0x33, 0xb0, 0x0],
        [0x1, 'r', 0x32, 0xb0, 0x0],
        [0x1, 'r', 0x31, 0xb0, 0x0],
        [0x1, 'r', 0x30, 0xaf, 0x0],
        [0x1, 'r', 0x2f, 0xaf, 0x0],
        [0x1, 'r', 0x30, 0xb0, 0x0],
        [0x1, 'r', 0x45, 0xa3, 0x0],
        [0x1, 'r', 0x46, 0xa3, 0x0],
        [0x1, 'r', 0x47, 0xa3, 0x0],
        [0x1, 'r', 0x49, 0xa3, 0x0],
        [0x1, 'r', 0x48, 0xa3, 0x0],
        [0x1, 'r', 0x49, 0xa4, 0x0],
        [0x1, 'r', 0x48, 0xa4, 0x0],
        [0x1, 'r', 0x47, 0xa4, 0x0],
        [0x1, 'r', 0x46, 0xa4, 0x0],
        [0x1, 'r', 0x45, 0xa4, 0x0],
        [0x1, 'r', 0x44, 0xa4, 0x0],
        [0x1, 'r', 0x44, 0xa5, 0x0],
        [0x1, 'r', 0x45, 0xa5, 0x0],
        [0x1, 'r', 0x46, 0xa5, 0x0],
        [0x1, 'r', 0x47, 0xa5, 0x0],
        [0x1, 'r', 0x48, 0xa5, 0x0],
        [0x1, 'r', 0x4a, 0xa4, 0x0],
        [0x1, 'r', 0x49, 0xa5, 0x0],
        [0x1, 'r', 0x48, 0xa6, 0x0],
        [0x1, 'r', 0x47, 0xa6, 0x0],
        [0x1, 'r', 0x46, 0xa6, 0x0],
        [0x1, 'r', 0x4a, 0xa5, 0x0],
        [0x1, 'r', 0x18, 0xa4, 0x0],
        [0x1, 'r', 0x19, 0xa4, 0x0],
        [0x1, 'r', 0x1b, 0xa4, 0x0],
        [0x1, 'r', 0x1a, 0xa4, 0x0],
        [0x1, 'r', 0x1c, 0xa5, 0x0],
        [0x1, 'r', 0x1a, 0xa5, 0x0],
        [0x1, 'r', 0x1b, 0xa5, 0x0],
        [0x1, 'r', 0x19, 0xa5, 0x0],
        [0x1, 'r', 0x18, 0xa5, 0x0],
        [0x1, 'r', 0x17, 0xa5, 0x0],
        [0x1, 'r', 0x16, 0xa5, 0x0],
        [0x1, 'r', 0x15, 0xa5, 0x0],
        [0x1, 'r', 0x15, 0xa6, 0x0],
        [0x1, 'r', 0x16, 0xa6, 0x0],
        [0x1, 'r', 0x17, 0xa6, 0x0],
        [0x1, 'r', 0x18, 0xa6, 0x0],
        [0x1, 'r', 0x19, 0xa6, 0x0],
        [0x1, 'r', 0x1a, 0xa6, 0x0],
        [0x1, 'r', 0x1b, 0xa6, 0x0],
        [0x1, 'r', 0x1c, 0xa6, 0x0],
        [0x1, 'r', 0x1c, 0xa7, 0x0],
        [0x1, 'r', 0x1a, 0xa7, 0x0],
        [0x1, 'r', 0x19, 0xa7, 0x0],
        [0x1, 'r', 0x18, 0xa7, 0x0],
        [0x1, 'r', 0x17, 0xa7, 0x0],
        [0x1, 'r', 0x16, 0xa7, 0x0],
        [0x1, 'r', 0x1b, 0xa7, 0x0],
        [0x1, 'r', 0x1d, 0xa6, 0x0],
        [0x1, 'r', 0x1d, 0xa7, 0x0],
        [0x1, 'r', 0x1c, 0xa8, 0x0],
        [0x1, 'r', 0x1b, 0xa8, 0x0],
        [0x1, 'r', 0x1a, 0xa8, 0x0],
        [0x1, 'r', 0x19, 0xa8, 0x0],
        [0x1, 'r', 0x18, 0xa8, 0x0],
        [0x1, 'r', 0x17, 0xa8, 0x0],
        [0x1, 'r', 0x1b, 0xa9, 0x0],
        [0x1, 'r', 0x1a, 0xa9, 0x0],
        [0x1, 'r', 0x19, 0xa9, 0x0],
        [0x1, 'r', 0x18, 0xa9, 0x0],
        [0x1, 'r', 0x17, 0xa9, 0x0],
        [0x1, 'r', 0x16, 0xa8, 0x0],
        [0x1, 'r', 0x15, 0xa7, 0x0],
        [0x1, 's', 0x1, 0x34, 0xae, 0x1],
        [0x1, 't', 0x3, 0x32, 0xb1, 0x0],
        [0x1, 't', 0x4, 0x31, 0xb1, 0x0],
        [0x1, 'b', 0x0, 0x2f, 0xae, 0x0],
        [0x1, 'b', 0x0, 0x45, 0xa6, 0x0],
        [0x1, 't', 0x2, 0x44, 0xa6, 0x0],
        [0x1, 't', 0x5, 0x4a, 0xa3, 0x0],
        [0x1, 't', 0x1, 0x49, 0xa2, 0x0],
        [0x1, 's', 0x0, 0x49, 0xa6, 0x1],
        [0x1, 's', 0x2, 0x4c, 0xa5, 0x1],
        [0x1, 'g', 0x2, 0x3b, 0xaf, 0x1],
        [0x1, 'p', 0x0, 0x4e, 0xa8, 0x1],
        [0x1, 'p', 0x0, 0x3d, 0xa2, 0x1],
        [0x1, 'p', 0x0, 0x2a, 0xaa, 0x1],
        [0x1, 'p', 0x0, 0x14, 0xae, 0x1],
        [0x1, 'p', 0x0, 0x10, 0xa0, 0x1],
        [0x1, 'b', 0x1, 0x17, 0xa4, 0x0],
        [0x1, 'b', 0x1, 0x1c, 0xa9, 0x0],
        [0x1, 'b', 0x2, 0x1d, 0xa8, 0x0],
        [0x1, 'b', 0x2, 0x10, 0xaa, 0x0],
        [0x1, 't', 0x1, 0xf, 0xab, 0x0],
        [0x1, 't', 0x5, 0xd, 0xaf, 0x0],
        [0x1, 't', 0x5, 0x13, 0xa6, 0x0],
        [0x1, 't', 0x5, 0x1a, 0xa3, 0x0],
        [0x1, 's', 0x1, 0x1d, 0xa5, 0x1],
        [0x1, 't', 0x5, 0xb, 0xa7, 0x0],
        [0x1, 't', 0x0, 0x1d, 0xb0, 0x0],
        [0x1, 'b', 0x2, 0x1e, 0xaf, 0x0],
        [0x1, 't', 0x2, 0x18, 0xb1, 0x0],
        [0x1, 'b', 0x1, 0x25, 0xae, 0x0],
        [0x1, 'b', 0x0, 0x23, 0xac, 0x0],
        [0x1, 'b', 0x3, 0x25, 0xaa, 0x0],
        [0x1, 't', 0x4, 0x26, 0xa9, 0x0],
        [0x1, 't', 0x4, 0x22, 0xad, 0x0],
        [0x1, 't', 0x5, 0x26, 0xaf, 0x0],
        [0x1, 'b', 0x2, 0x27, 0xad, 0x0],
        [0x1, 't', 0x3, 0x25, 0xb0, 0x0],
        [0x1, 't', 0x4, 0x1e, 0xa8, 0x0],
        [0x1, 's', 0x2, 0x23, 0xb0, 0x1],
        [0x1, 's', 0x1, 0x29, 0xaf, 0x1],
        [0x1, 'b', 0x2, 0x35, 0xb0, 0x0],
        [0x1, 't', 0x5, 0x37, 0xad, 0x0],
        [0x1, 't', 0x5, 0x2d, 0xaa, 0x0],
        [0x1, 'b', 0x1, 0x35, 0xa2, 0x0],
        [0x1, 'b', 0x0, 0x32, 0xa4, 0x0],
        [0x1, 't', 0x2, 0x36, 0xa3, 0x0],
        [0x1, 't', 0x3, 0x31, 0xa5, 0x0],
        [0x1, 't', 0x4, 0x30, 0xa0, 0x0],
        [0x1, 't', 0x4, 0x39, 0xa4, 0x0],
        [0x1, 't', 0x4, 0x42, 0xa2, 0x0],
        [0x1, 'b', 0x1, 0x56, 0xa1, 0x0],
        [0x1, 'b', 0x2, 0x51, 0xa3, 0x0],
        [0x1, 't', 0x3, 0x55, 0xa2, 0x0],
        [0x1, 't', 0x5, 0x51, 0xa2, 0x0],
        [0x1, 't', 0x5, 0x58, 0xa3, 0x0],
        [0x1, 't', 0x1, 0x54, 0xa6, 0x0],
        [0x1, 't', 0x5, 0x48, 0xa0, 0x0],
        [0x1, 't', 0x5, 0x46, 0xaa, 0x0],
        [0x1, 's', 0x1, 0x39, 0xa2, 0x1],
        [0x1, 'b', 0x1, 0x27, 0xa1, 0x0],
        [0x1, 'b', 0x0, 0x22, 0xa4, 0x0],
        [0x1, 'b', 0x2, 0x36, 0xa4, 0x0],
        [0x1, 't', 0x1, 0x3b, 0xa9, 0x0],
        [0x1, 't', 0x3, 0x3c, 0xaa, 0x0],
        [0x1, 't', 0x4, 0x3f, 0xa9, 0x0],
        [0x1, 't', 0x4, 0x3f, 0xae, 0x0],
        [0x1, 't', 0x1, 0x3e, 0xaf, 0x0],
        [0x1, 't', 0x5, 0x28, 0xa2, 0x0],
        [0x1, 't', 0x1, 0x3f, 0xb4, 0x0],
        [0x1, 't', 0x2, 0x40, 0xb3, 0x0],
        [0x1, 't', 0x2, 0x23, 0xa5, 0x0],
        [0x1, 's', 0x1, 0x3f, 0xad, 0x1],
        [0x1, 's', 0x2, 0x28, 0xa5, 0x1],
        [0x1, 'b', 0x0, 0x2e, 0xa9, 0x0],
        [0x1, 'de', 0x16, 0x4a, 0xa8, 0x0],
        [0x1, 'de', 0x16, 0x56, 0xa8, 0x0],
        [0x1, 'de', 0x16, 0x53, 0xaf, 0x0],
        [0x1, 'de', 0x16, 0x4e, 0xaf, 0x0],
        [0x1, 'de', 0x13, 0x48, 0xb0, 0x0],
        [0x1, 'de', 0x13, 0x44, 0xa8, 0x0],
        [0x1, 'de', 0x13, 0x41, 0xa3, 0x0],
        [0x1, 'de', 0x13, 0x4b, 0xa2, 0x0],
        [0x1, 'de', 0x13, 0x50, 0xa2, 0x0],
        [0x1, 'de', 0x13, 0x58, 0x9f, 0x0],
        [0x1, 'de', 0x13, 0x57, 0xa4, 0x0],
        [0x1, 'de', 0x13, 0x3d, 0xb1, 0x0],
        [0x1, 'de', 0x13, 0x3b, 0xac, 0x0],
        [0x1, 'de', 0x13, 0x3b, 0xa7, 0x0],
        [0x1, 'de', 0x13, 0x35, 0xa5, 0x0],
        [0x1, 'de', 0x13, 0x38, 0xa3, 0x0],
        [0x1, 'de', 0x13, 0x33, 0xa1, 0x0],
        [0x1, 'de', 0x13, 0x30, 0xa7, 0x0],
        [0x1, 'de', 0x13, 0x2f, 0xaa, 0x0],
        [0x1, 'de', 0x13, 0x29, 0xa3, 0x0],
        [0x1, 'de', 0x13, 0x25, 0xa1, 0x0],
        [0x1, 'de', 0x13, 0x24, 0xa6, 0x0],
        [0x1, 'de', 0x13, 0x24, 0xab, 0x0],
        [0x1, 'de', 0x13, 0x22, 0xae, 0x0],
        [0x1, 'de', 0x13, 0x28, 0xac, 0x0],
        [0x1, 'de', 0x13, 0x26, 0xb1, 0x0],
        [0x1, 'de', 0x13, 0x2a, 0xb0, 0x0],
        [0x1, 'de', 0x13, 0x35, 0xb2, 0x0],
        [0x1, 'de', 0x13, 0x35, 0xac, 0x0],
        [0x1, 'de', 0x13, 0x40, 0xb5, 0x0],
        [0x1, 'de', 0x13, 0x40, 0xaf, 0x0],
        [0x1, 'de', 0x13, 0x4f, 0xac, 0x0],
        [0x1, 'de', 0x13, 0x1e, 0xaa, 0x0],
        [0x1, 'de', 0x13, 0x11, 0xa8, 0x0],
        [0x1, 'de', 0x13, 0xe, 0xad, 0x0],
        [0x1, 'de', 0x13, 0xc, 0xa2, 0x0],
        [0x1, 'de', 0x13, 0x9, 0xa7, 0x0],
        [0x1, 'de', 0x13, 0x14, 0xa1, 0x0],
        [0x1, 'de', 0x13, 0x1b, 0xa2, 0x0],
        [0x1, 'de', 0x13, 0x53, 0xc3, 0x0],
        [0x1, 'de', 0x2, 0x55, 0xa3, 0x0],
        [0x1, 'de', 0x2, 0x50, 0xa4, 0x0],
        [0x1, 'de', 0x2, 0x54, 0xa9, 0x0],
        [0x1, 'de', 0x2, 0x37, 0xa5, 0x0],
        [0x1, 'de', 0x3, 0x2e, 0xa3, 0x0],
        [0x1, 'de', 0x2, 0x42, 0xa9, 0x0],
        [0x1, 'de', 0x0, 0x3f, 0xaf, 0x0],
        [0x1, 'de', 0x0, 0x22, 0xa4, 0x0],
        [0x1, 'de', 0x0, 0x12, 0xa0, 0x0],
        [0x1, 'de', 0x2, 0x28, 0xa0, 0x0],
        [0x1, 'de', 0x2, 0x35, 0xa0, 0x0],
        [0x1, 'de', 0x2, 0xe, 0xaa, 0x0],
        [0x1, 'de', 0x2, 0x13, 0xaf, 0x0],
        [0x1, 'de', 0x2, 0x17, 0xb0, 0x0],
        [0x1, 'de', 0x5, 0x3c, 0x93, 0x0],
        [0x1, 'de', 0x21, 0x3b, 0xa0, 0x0],
        [0x1, 'de', 0x21, 0x55, 0x9d, 0x0],
        [0x1, 'de', 0x21, 0x1d, 0x8f, 0x0],
        [0x1, 'de', 0x21, 0x3e, 0x8c, 0x0],
        [0x1, 'de', 0x21, 0x2b, 0x7f, 0x0],
        [0x1, 'de', 0x21, 0x12, 0x81, 0x0],
        [0x1, 'de', 0x21, 0x32, 0x86, 0x0],
        [0x1, 'de', 0x21, 0x4f, 0x7f, 0x0],
        [0x1, 'de', 0x21, 0x59, 0x8b, 0x0],
        [0x1, 'b', 0x1, 0x2c, 0x9c, 0x0],
        [0x1, 't', 0x2, 0x2d, 0x9d, 0x0],
        [0x1, 'b', 0x0, 0x4b, 0x9c, 0x0],
        [0x1, 't', 0x3, 0x4c, 0x9d, 0x0],
        [0x1, 't', 0x5, 0x3e, 0x9d, 0x0],
        [0x1, 't', 0x5, 0x4f, 0x9c, 0x0],
        [0x1, 't', 0x5, 0x29, 0x9c, 0x0],
        [0x1, 'b', 0x1, 0x1c, 0x9c, 0x0],
        [0x1, 't', 0x2, 0x1b, 0x9d, 0x0],
        [0x1, 't', 0x4, 0x15, 0x9c, 0x0],
        [0x1, 't', 0x4, 0x38, 0x9f, 0x0],
        [0x1, 'f', 0x1, 0x5e, 0x99, 0x1],
        [0x1, 'f', 0x2, 0x5d, 0x99, 0x1],
        [0x1, 'f', 0x2, 0x63, 0x99, 0x1],
        [0x1, 'f', 0x1, 0x62, 0x99, 0x1],
        [0x1, 'f', 0x0, 0x61, 0x99, 0x1],
        [0x1, 'f', 0x1, 0x60, 0x99, 0x1],
        [0x1, 's', 0x1, 0x7, 0x95, 0x1],
        [0x1, 'de', 0x4, 0x7, 0x96, 0x0],
        [0x1, 'b', 0x3, 0x2b, 0x119, 0x0],
        [0x1, 'de', 0x32, 0x18, 0x27, 0x0],
        [0x1, 'de', 0x32, 0x15, 0x27, 0x0],
        [0x1, 'de', 0x32, 0x16, 0x2b, 0x0],
        [0x1, 'de', 0x32, 0xf, 0x22, 0x0],
        [0x1, 'de', 0x32, 0x12, 0x1a, 0x0],
        [0x1, 'de', 0x32, 0x2c, 0x2a, 0x0],
        [0x1, 'de', 0x32, 0x39, 0x27, 0x0],
        [0x1, 'de', 0x32, 0x3e, 0x2b, 0x0],
        [0x1, 'de', 0x32, 0x4d, 0x2c, 0x0],
        [0x1, 'de', 0x32, 0x47, 0x29, 0x0],
        [0x1, 'de', 0x32, 0x37, 0x27, 0x0],
        [0x1, 'de', 0x32, 0x16, 0x27, 0x0],
        [0x1, 'de', 0x32, 0x14, 0x29, 0x0],
        [0x1, 'de', 0x32, 0x12, 0x15, 0x0],
        [0x1, 'de', 0x32, 0xf, 0x15, 0x0],
        [0x1, 'de', 0x32, 0x12, 0x13, 0x0],
        [0x1, 'de', 0x32, 0x11, 0x11, 0x0],
        [0x1, 'de', 0x32, 0x12, 0xa, 0x0],
        [0x1, 'de', 0x32, 0x12, 0x9, 0x0],
        [0x1, 'de', 0x32, 0x34, 0x29, 0x0],
        [0x1, 'de', 0x32, 0x52, 0x27, 0x0],
        [0x1, 'de', 0x32, 0x56, 0x26, 0x0],
        [0x1, 'de', 0x32, 0x54, 0x1f, 0x0],
        [0x1, 'de', 0x32, 0x56, 0x1e, 0x0],
        [0x1, 'de', 0x32, 0x54, 0x1a, 0x0],
        [0x1, 'de', 0x32, 0x56, 0x17, 0x0],
        [0x1, 'de', 0x32, 0x56, 0xe, 0x0],
        [0x1, 'de', 0x32, 0x1d, 0x2a, 0x0],
        [0x1, 'de', 0x9, 0x4a, 0x25, 0x0],
        [0x1, 'de', 0x9, 0x4c, 0x16, 0x0],
        [0x1, 'de', 0xa, 0x4f, 0x18, 0x0],
        [0x1, 'de', 0xb, 0x4d, 0x11, 0x0],
        [0x1, 'de', 0x24, 0x51, 0x19, 0x0],
        [0x1, 'de', 0x24, 0x50, 0x24, 0x0],
        [0x1, 'de', 0x24, 0x15, 0x24, 0x0],
        [0x1, 'de', 0x1c, 0x17, 0x16, 0x0],
        [0x1, 'de', 0x1c, 0x1b, 0x1f, 0x0],
        [0x1, 'de', 0x1c, 0x45, 0x24, 0x0],
        [0x1, 'de', 0x1c, 0x50, 0x14, 0x0],
        [0x1, 'de', 0x33, 0x18, 0x9b, 0x0],
        [0x1, 'de', 0x33, 0x7, 0x9a, 0x0],
        [0x1, 'de', 0x33, 0xb, 0x9a, 0x0],
        [0x1, 'de', 0x33, 0xc, 0x9c, 0x0],
        [0x1, 'de', 0x33, 0x10, 0x9a, 0x0],
        [0x1, 'de', 0x33, 0x14, 0x9a, 0x0],
        [0x1, 'de', 0x33, 0x17, 0x9a, 0x0],
        [0x1, 'de', 0x33, 0x12, 0x9d, 0x0],
        [0x1, 'de', 0x33, 0x1f, 0x9a, 0x0],
        [0x1, 'de', 0x33, 0x20, 0x9d, 0x0],
        [0x1, 'de', 0x33, 0x56, 0x9a, 0x0],
        [0x1, 'de', 0x33, 0x58, 0x9c, 0x0],
        [0x1, 'de', 0x33, 0x52, 0x9a, 0x0],
        [0x1, 'de', 0x33, 0x50, 0x9a, 0x0],
        [0x1, 'de', 0x33, 0x4d, 0x9a, 0x0],
        [0x1, 'de', 0x33, 0x4a, 0x9a, 0x0],
        [0x1, 'de', 0x33, 0x47, 0x9a, 0x0],
        [0x1, 'de', 0x33, 0x43, 0x9a, 0x0],
        [0x1, 'de', 0x33, 0x3c, 0x9a, 0x0],
        [0x1, 'de', 0x33, 0x39, 0x9a, 0x0],
        [0x1, 'de', 0x33, 0x41, 0x9a, 0x0],
        [0x1, 'de', 0x33, 0x44, 0x9c, 0x0],
        [0x1, 'de', 0x33, 0x3b, 0x9c, 0x0],
        [0x1, 'de', 0x33, 0x37, 0x9a, 0x0],
        [0x1, 'de', 0x33, 0x36, 0x9a, 0x0],
        [0x1, 'de', 0x33, 0x34, 0x9a, 0x0],
        [0x1, 'de', 0x33, 0x37, 0x9b, 0x0],
        [0x1, 'de', 0x33, 0x36, 0x9d, 0x0],
        [0x1, 'de', 0x33, 0x31, 0x9a, 0x0],
        [0x1, 'de', 0x33, 0x2e, 0x9a, 0x0],
        [0x1, 'de', 0x33, 0x2c, 0x9a, 0x0],
        [0x1, 'de', 0x33, 0x2b, 0x9a, 0x0],
        [0x1, 'de', 0x33, 0x29, 0x9a, 0x0],
        [0x1, 'de', 0x33, 0x26, 0x9a, 0x0],
        [0x1, 'de', 0x33, 0x27, 0x9c, 0x0],
        [0x1, 'de', 0x33, 0x22, 0x9a, 0x0],
        [0x1, 'de', 0x5, 0x13, 0x8e, 0x0],
        [0x1, 'de', 0x5, 0x25, 0x93, 0x0],
        [0x1, 'de', 0x7, 0x35, 0x93, 0x0],
        [0x1, 'de', 0x6, 0x45, 0x96, 0x0],
        [0x1, 'de', 0x4, 0x5e, 0x94, 0x0],
        [0x1, 'de', 0x4, 0x42, 0x93, 0x0],
        [0x1, 'de', 0x4, 0xa, 0x91, 0x0],
        [0x1, 'de', 0x4, 0x1c, 0x89, 0x0],
        [0x1, 'de', 0x4, 0xf, 0x89, 0x0],
        [0x1, 'de', 0x4, 0x30, 0x86, 0x0],
        [0x1, 'de', 0x5, 0x43, 0x87, 0x0],
        [0x1, 'de', 0x22, 0x54, 0x9b, 0x0],
        [0x1, 'de', 0x23, 0x46, 0x9c, 0x0],
        [0x1, 'de', 0x23, 0x33, 0x9c, 0x0],
        [0x1, 'de', 0x23, 0x38, 0x9d, 0x0],
        [0x1, 'de', 0x23, 0x41, 0x9f, 0x0],
        [0x1, 'de', 0x23, 0x17, 0x9c, 0x0],
        [0x1, 'de', 0x23, 0xf, 0x9b, 0x0],
        [0x1, 'de', 0x23, 0x8, 0x9b, 0x0],
        [0x1, 'de', 0x21, 0xd, 0x9b, 0x0],
        [0x1, 'de', 0x21, 0x21, 0x9e, 0x0],
        [0x1, 'de', 0x24, 0x4e, 0x9b, 0x0],
        [0x1, 'de', 0x24, 0x57, 0x9d, 0x0],
        [0x1, 'fo', 0x1, 0x49, 0x24, 0x0],
        [0x1, 'fo', 0x1, 0x50, 0x18, 0x0],
        [0x1, 'fo', 0x2, 0x43, 0x24, 0x0],
        [0x1, 'fo', 0x2, 0x2d, 0x24, 0x0],
        [0x1, 'fo', 0x2, 0x35, 0x22, 0x0],
        [0x1, 'fo', 0x1, 0x33, 0x23, 0x0],
        [0x1, 'fo', 0x1, 0x3a, 0x23, 0x0],
        [0x1, 'fo', 0x1, 0x21, 0x23, 0x0],
        [0x1, 'fo', 0x1, 0x1f, 0x21, 0x0],
        [0x1, 'fo', 0x2, 0x1d, 0x24, 0x0],
        [0x1, 'fo', 0x2, 0x38, 0x24, 0x0],
        [0x1, 'fo', 0x2, 0x3c, 0x25, 0x0],
        [0x1, 'fo', 0x2, 0x2d, 0x20, 0x0],
        [0x1, 'fo', 0x2, 0x16, 0x19, 0x0],
        [0x1, 'fo', 0x2, 0x15, 0x23, 0x0],
        [0x1, 'de', 0x34, 0x5a, 0xd0, 0x0],
        [0x1, 'de', 0x12, 0x5e, 0xfa, 0x0],
        [0x1, 'de', 0x11, 0x5f, 0xfd, 0x0],
        [0x1, 'cs', 0x0, 0x8c, 0x5, 0x1],
        [0x1, 'cs', 0x2, 0x8b, 0x5, 0x1],
        [0x1, 'cs', 0x2, 0x8a, 0x5, 0x1],
        [0x1, 'cs', 0x2, 0x8a, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0x8b, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0x8d, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0x8c, 0x6, 0x1],
        [0x1, 'la', 0x3, 0x8f, 0x7, 0x1],
        [0x1, 'la', 0x3, 0x8b, 0x7, 0x1],
        [0x1, 'cs', 0x0, 0x89, 0x7, 0x1],
        [0x1, 'cs', 0x1, 0x8a, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0x89, 0x6, 0x1],
        [0x1, 'cs', 0x2, 0x89, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0x88, 0x7, 0x1],
        [0x1, 'cs', 0x2, 0x8a, 0x9, 0x1],
        [0x1, 'cs', 0x3, 0x8b, 0x9, 0x1],
        [0x1, 'cs', 0x3, 0x88, 0x8, 0x1],
        [0x1, 'cs', 0x3, 0x89, 0x9, 0x1],
        [0x1, 'de', 0x35, 0x5c, 0xa5, 0x0],
        [0x1, 'de', 0x35, 0x5c, 0xb4, 0x0],
        [0x1, 'de', 0x35, 0x5c, 0xbc, 0x0],
        [0x1, 'de', 0x36, 0x5c, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x5b, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x5a, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x59, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x58, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x57, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x56, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x55, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x54, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x53, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x52, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x51, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x50, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x4f, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x4e, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x4d, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x4c, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x4b, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x4a, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x49, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x48, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x46, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x47, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x45, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x44, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x43, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x42, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x41, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x40, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x3f, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x3d, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x3e, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x3c, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x3b, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x39, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x3a, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x38, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x37, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x36, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x35, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x34, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x33, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x32, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x31, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x30, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x2f, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x2e, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x2d, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x2c, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x2b, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x2a, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x29, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x28, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x27, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x25, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x26, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x24, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x23, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x22, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x21, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x20, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x1f, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x1e, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x1d, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x1c, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x1b, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x1a, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x19, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x18, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x17, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x16, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x15, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x14, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x13, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x12, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x11, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x10, 0x99, 0x0],
        [0x1, 'de', 0x36, 0xf, 0x99, 0x0],
        [0x1, 'de', 0x36, 0xe, 0x99, 0x0],
        [0x1, 'de', 0x36, 0xd, 0x99, 0x0],
        [0x1, 'de', 0x36, 0xc, 0x99, 0x0],
        [0x1, 'de', 0x36, 0xb, 0x99, 0x0],
        [0x1, 'de', 0x36, 0xa, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x8, 0x99, 0x0],
        [0x1, 'de', 0x36, 0x9, 0x99, 0x0],
        [0x1, 'de', 0x37, 0x53, 0x8, 0x0],
        [0x1, 'de', 0x37, 0x53, 0x9, 0x0],
        [0x1, 'de', 0x37, 0x53, 0xa, 0x0],
        [0x1, 'de', 0x37, 0x53, 0xb, 0x0],
        [0x1, 'de', 0x37, 0x53, 0xc, 0x0],
        [0x1, 'de', 0x37, 0x53, 0xd, 0x0],
        [0x1, 'de', 0x37, 0x53, 0xe, 0x0],
        [0x1, 'de', 0x37, 0x53, 0xf, 0x0],
        [0x1, 'de', 0x37, 0x53, 0x10, 0x0],
        [0x1, 'de', 0x37, 0x53, 0x11, 0x0],
        [0x1, 'de', 0x37, 0x53, 0x13, 0x0],
        [0x1, 'de', 0x37, 0x53, 0x12, 0x0],
        [0x1, 'de', 0x37, 0x53, 0x14, 0x0],
        [0x1, 'de', 0x37, 0x53, 0x15, 0x0],
        [0x1, 'de', 0x37, 0x53, 0x16, 0x0],
        [0x1, 'de', 0x37, 0x53, 0x17, 0x0],
        [0x1, 'de', 0x37, 0x53, 0x18, 0x0],
        [0x1, 'de', 0x37, 0x53, 0x19, 0x0],
        [0x1, 'de', 0x37, 0x53, 0x1a, 0x0],
        [0x1, 'de', 0x37, 0x53, 0x1b, 0x0],
        [0x1, 'de', 0x37, 0x53, 0x1c, 0x0],
        [0x1, 'de', 0x37, 0x53, 0x1d, 0x0],
        [0x1, 'de', 0x37, 0x53, 0x1e, 0x0],
        [0x1, 'de', 0x37, 0x53, 0x1f, 0x0],
        [0x1, 'de', 0x37, 0x53, 0x20, 0x0],
        [0x1, 'de', 0x37, 0x53, 0x21, 0x0],
        [0x1, 'de', 0x37, 0x53, 0x22, 0x0],
        [0x1, 'de', 0x37, 0x53, 0x24, 0x0],
        [0x1, 'de', 0x37, 0x53, 0x23, 0x0],
        [0x1, 'de', 0x37, 0x53, 0x25, 0x0],
        [0x1, 'de', 0x37, 0x53, 0x26, 0x0],
        [0x1, 'de', 0x37, 0x51, 0x26, 0x0],
        [0x1, 'de', 0x37, 0x52, 0x26, 0x0],
        [0x1, 'de', 0x37, 0x50, 0x26, 0x0],
        [0x1, 'de', 0x37, 0x4f, 0x26, 0x0],
        [0x1, 'de', 0x37, 0x4e, 0x26, 0x0],
        [0x1, 'de', 0x37, 0x4d, 0x26, 0x0],
        [0x1, 'de', 0x37, 0x4c, 0x26, 0x0],
        [0x1, 'de', 0x37, 0x4b, 0x26, 0x0],
        [0x1, 'de', 0x37, 0x49, 0x26, 0x0],
        [0x1, 'de', 0x37, 0x4a, 0x26, 0x0],
        [0x1, 'de', 0x37, 0x48, 0x26, 0x0],
        [0x1, 'de', 0x37, 0x47, 0x26, 0x0],
        [0x1, 'de', 0x37, 0x46, 0x26, 0x0],
        [0x1, 'de', 0x37, 0x44, 0x26, 0x0],
        [0x1, 'de', 0x37, 0x45, 0x26, 0x0],
        [0x1, 'de', 0x37, 0x43, 0x26, 0x0],
        [0x1, 'de', 0x37, 0x42, 0x26, 0x0],
        [0x1, 'de', 0x37, 0x41, 0x26, 0x0],
        [0x1, 'de', 0x37, 0x40, 0x26, 0x0],
        [0x1, 'de', 0x37, 0x3f, 0x26, 0x0],
        [0x1, 'de', 0x37, 0x3e, 0x26, 0x0],
        [0x1, 'de', 0x37, 0x3c, 0x26, 0x0],
        [0x1, 'de', 0x37, 0x3d, 0x26, 0x0],
        [0x1, 'de', 0x37, 0x3b, 0x26, 0x0],
        [0x1, 'de', 0x37, 0x39, 0x26, 0x0],
        [0x1, 'de', 0x37, 0x3a, 0x26, 0x0],
        [0x1, 'de', 0x37, 0x38, 0x26, 0x0],
        [0x1, 'de', 0x37, 0x37, 0x26, 0x0],
        [0x1, 'de', 0x37, 0x36, 0x26, 0x0],
        [0x1, 'de', 0x37, 0x35, 0x26, 0x0],
        [0x1, 'de', 0x37, 0x34, 0x26, 0x0],
        [0x1, 'de', 0x37, 0x33, 0x26, 0x0],
        [0x1, 'de', 0x37, 0x31, 0x26, 0x0],
        [0x1, 'de', 0x37, 0x32, 0x26, 0x0],
        [0x1, 'de', 0x37, 0x30, 0x26, 0x0],
        [0x1, 'de', 0x37, 0x2f, 0x26, 0x0],
        [0x1, 'de', 0x37, 0x2e, 0x26, 0x0],
        [0x1, 'de', 0x37, 0x2d, 0x26, 0x0],
        [0x1, 'de', 0x37, 0x2c, 0x26, 0x0],
        [0x1, 'de', 0x37, 0x2b, 0x26, 0x0],
        [0x1, 'de', 0x37, 0x2a, 0x26, 0x0],
        [0x1, 'de', 0x37, 0x29, 0x26, 0x0],
        [0x1, 'de', 0x37, 0x28, 0x26, 0x0],
        [0x1, 'de', 0x37, 0x27, 0x26, 0x0],
        [0x1, 'de', 0x37, 0x26, 0x26, 0x0],
        [0x1, 'de', 0x37, 0x25, 0x26, 0x0],
        [0x1, 'de', 0x37, 0x24, 0x26, 0x0],
        [0x1, 'de', 0x37, 0x22, 0x26, 0x0],
        [0x1, 'de', 0x37, 0x23, 0x26, 0x0],
        [0x1, 'de', 0x37, 0x21, 0x26, 0x0],
        [0x1, 'de', 0x37, 0x1f, 0x26, 0x0],
        [0x1, 'de', 0x37, 0x20, 0x26, 0x0],
        [0x1, 'de', 0x37, 0x1e, 0x26, 0x0],
        [0x1, 'de', 0x37, 0x1d, 0x26, 0x0],
        [0x1, 'de', 0x37, 0x1c, 0x26, 0x0],
        [0x1, 'de', 0x37, 0x1b, 0x26, 0x0],
        [0x1, 'de', 0x37, 0x1a, 0x26, 0x0],
        [0x1, 'de', 0x37, 0x19, 0x26, 0x0],
        [0x1, 'de', 0x37, 0x18, 0x26, 0x0],
        [0x1, 'de', 0x37, 0x17, 0x26, 0x0],
        [0x1, 'de', 0x37, 0x15, 0x26, 0x0],
        [0x1, 'de', 0x37, 0x16, 0x26, 0x0],
        [0x1, 'de', 0x37, 0x14, 0x26, 0x0],
        [0x1, 'de', 0x37, 0x13, 0x26, 0x0],
        [0x1, 'de', 0x37, 0x13, 0x25, 0x0],
        [0x1, 'de', 0x37, 0x13, 0x24, 0x0],
        [0x1, 'de', 0x37, 0x13, 0x23, 0x0],
        [0x1, 'de', 0x37, 0x13, 0x22, 0x0],
        [0x1, 'de', 0x37, 0x13, 0x21, 0x0],
        [0x1, 'de', 0x37, 0x13, 0x20, 0x0],
        [0x1, 'de', 0x37, 0x13, 0x1f, 0x0],
        [0x1, 'de', 0x37, 0x13, 0x1e, 0x0],
        [0x1, 'de', 0x37, 0x13, 0x1c, 0x0],
        [0x1, 'de', 0x37, 0x13, 0x1d, 0x0],
        [0x1, 'de', 0x37, 0x13, 0x1b, 0x0],
        [0x1, 'de', 0x37, 0x13, 0x1a, 0x0],
        [0x1, 'de', 0x37, 0x13, 0x19, 0x0],
        [0x1, 'de', 0x37, 0x13, 0x18, 0x0],
        [0x1, 'de', 0x37, 0x13, 0x17, 0x0],
        [0x1, 'de', 0x37, 0x13, 0x16, 0x0],
        [0x1, 'de', 0x37, 0x13, 0x15, 0x0],
        [0x1, 'de', 0x37, 0x13, 0x14, 0x0],
        [0x1, 'de', 0x37, 0x13, 0x12, 0x0],
        [0x1, 'de', 0x37, 0x13, 0x13, 0x0],
        [0x1, 'de', 0x37, 0x13, 0x10, 0x0],
        [0x1, 'de', 0x37, 0x13, 0x11, 0x0],
        [0x1, 'de', 0x37, 0x13, 0xf, 0x0],
        [0x1, 'de', 0x37, 0x13, 0xe, 0x0],
        [0x1, 'de', 0x37, 0x13, 0xd, 0x0],
        [0x1, 'de', 0x37, 0x13, 0xc, 0x0],
        [0x1, 'de', 0x37, 0x13, 0xb, 0x0],
        [0x1, 'de', 0x37, 0x13, 0xa, 0x0],
        [0x1, 'de', 0x37, 0x13, 0x9, 0x0],
        [0x1, 'de', 0x37, 0x13, 0x8, 0x0],
        [0x1, 'de', 0x37, 0x54, 0x23, 0x0],
        [0x1, 'de', 0x37, 0x54, 0x20, 0x0],
        [0x1, 'de', 0x37, 0x54, 0x19, 0x0],
        [0x1, 'de', 0x32, 0x54, 0x18, 0x0],
        [0x1, 'de', 0x37, 0x54, 0x14, 0x0],
        [0x1, 'de', 0x37, 0x54, 0x11, 0x0],
        [0x1, 'de', 0x37, 0x54, 0x10, 0x0],
        [0x1, 'de', 0x32, 0x54, 0xf, 0x0],
        [0x1, 'de', 0x37, 0x54, 0x8, 0x0],
        [0x1, 'de', 0x37, 0x54, 0x9, 0x0],
        [0x1, 'de', 0x32, 0x55, 0xb, 0x0],
        [0x1, 'de', 0x37, 0x51, 0x27, 0x0],
        [0x1, 'de', 0x32, 0x53, 0x28, 0x0],
        [0x1, 'de', 0x37, 0x48, 0x27, 0x0],
        [0x1, 'de', 0x37, 0x4a, 0x27, 0x0],
        [0x1, 'de', 0x37, 0x42, 0x27, 0x0],
        [0x1, 'de', 0x37, 0x41, 0x27, 0x0],
        [0x1, 'de', 0x32, 0x43, 0x29, 0x0],
        [0x1, 'de', 0x37, 0x38, 0x27, 0x0],
        [0x1, 'de', 0x37, 0x3a, 0x27, 0x0],
        [0x1, 'de', 0x37, 0x32, 0x27, 0x0],
        [0x1, 'de', 0x32, 0x31, 0x27, 0x0],
        [0x1, 'de', 0x37, 0x2c, 0x27, 0x0],
        [0x1, 'de', 0x37, 0x2a, 0x27, 0x0],
        [0x1, 'de', 0x32, 0x2b, 0x27, 0x0],
        [0x1, 'de', 0x32, 0x29, 0x27, 0x0],
        [0x1, 'de', 0x32, 0x25, 0x27, 0x0],
        [0x1, 'de', 0x37, 0x24, 0x27, 0x0],
        [0x1, 'de', 0x37, 0x20, 0x27, 0x0],
        [0x1, 'de', 0x32, 0x1f, 0x27, 0x0],
        [0x1, 'de', 0x37, 0x17, 0x27, 0x0],
        [0x1, 'de', 0x37, 0x12, 0x25, 0x0],
        [0x1, 'de', 0x32, 0x12, 0x24, 0x0],
        [0x1, 'de', 0x37, 0x12, 0x23, 0x0],
        [0x1, 'de', 0x32, 0x12, 0x22, 0x0],
        [0x1, 'de', 0x37, 0x12, 0x1f, 0x0],
        [0x1, 'de', 0x32, 0x12, 0x1e, 0x0],
        [0x1, 'de', 0x37, 0x12, 0x19, 0x0],
        [0x1, 'de', 0x32, 0x12, 0x18, 0x0],
        [0x1, 'de', 0x37, 0x12, 0x14, 0x0],
        [0x1, 'de', 0x37, 0x12, 0xe, 0x0],
        [0x1, 'de', 0x32, 0x12, 0xf, 0x0],
        [0x1, 'de', 0x37, 0x12, 0x8, 0x0],
        [0x1, 'de', 0x36, 0x5a, 0x9a, 0x0],
        [0x1, 'de', 0x33, 0x59, 0x9a, 0x0],
        [0x1, 'de', 0x36, 0x55, 0x9a, 0x0],
        [0x1, 'de', 0x36, 0x51, 0x9a, 0x0],
        [0x1, 'de', 0x36, 0x4c, 0x9a, 0x0],
        [0x1, 'de', 0x36, 0x46, 0x9a, 0x0],
        [0x1, 'de', 0x36, 0x42, 0x9a, 0x0],
        [0x1, 'de', 0x36, 0x3d, 0x9a, 0x0],
        [0x1, 'de', 0x36, 0x38, 0x9a, 0x0],
        [0x1, 'de', 0x36, 0x35, 0x9a, 0x0],
        [0x1, 'de', 0x36, 0x2d, 0x9a, 0x0],
        [0x1, 'de', 0x36, 0x2a, 0x9a, 0x0],
        [0x1, 'de', 0x36, 0x25, 0x9a, 0x0],
        [0x1, 'de', 0x36, 0x1e, 0x9a, 0x0],
        [0x1, 'de', 0x36, 0x19, 0x9a, 0x0],
        [0x1, 'de', 0x36, 0x11, 0x9a, 0x0],
        [0x1, 'de', 0x36, 0xa, 0x9a, 0x0],
        [0x1, 'de', 0x36, 0x8, 0x9a, 0x0],
        [0x1, 'de', 0x37, 0x14, 0x9, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0x9a, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0x9c, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0x9e, 0x0],
        [0x1, 'de', 0x34, 0x5b, 0x9d, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0x9f, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0xa1, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0xa2, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0xa3, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0xa4, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0xa5, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0xa6, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0xa7, 0x0],
        [0x1, 'de', 0x34, 0x5b, 0xa7, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0xa9, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0xa8, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0xaa, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0xab, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0xad, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0xb0, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0xaf, 0x0],
        [0x1, 'de', 0x35, 0x5c, 0xa9, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0xb2, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0xb3, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0xb4, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0xb5, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0xb7, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0xb8, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0xba, 0x0],
        [0x1, 'de', 0x12, 0x5f, 0xb9, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0xbb, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0xbc, 0x0],
        [0x1, 'de', 0x34, 0x5b, 0xba, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0xbe, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0xc0, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0xc3, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0xc2, 0x0],
        [0x1, 'de', 0x34, 0x5b, 0xc4, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0xc5, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0xc8, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0xc6, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0xc9, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0xca, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0xcb, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0xcc, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0xce, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0xcd, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0xcf, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0xd1, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0xd2, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0xd4, 0x0],
        [0x1, 'de', 0x34, 0x5b, 0xcc, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0xd5, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0xd6, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0xd7, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0xd8, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0xd9, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0xda, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0xdb, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0xdc, 0x0],
        [0x1, 'de', 0x34, 0x5c, 0xd5, 0x0],
        [0x1, 'de', 0x34, 0x5c, 0xce, 0x0],
        [0x1, 'de', 0x34, 0x5c, 0xca, 0x0],
        [0x1, 'de', 0x35, 0x5c, 0xc9, 0x0],
        [0x1, 'de', 0x34, 0x5c, 0xc2, 0x0],
        [0x1, 'de', 0x34, 0x5c, 0xb2, 0x0],
        [0x1, 'de', 0x34, 0x5c, 0xab, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0xdd, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0xde, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0xdf, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0xe1, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0xe4, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0xe3, 0x0],
        [0x1, 'de', 0x34, 0x5c, 0xd9, 0x0],
        [0x1, 'de', 0x35, 0x5c, 0xda, 0x0],
        [0x1, 'de', 0x34, 0x5c, 0xdd, 0x0],
        [0x1, 'de', 0x34, 0x5c, 0xe1, 0x0],
        [0x1, 'de', 0x34, 0x5d, 0xe2, 0x0],
        [0x1, 'de', 0x34, 0x5d, 0xe0, 0x0],
        [0x1, 'de', 0x34, 0x5d, 0xd0, 0x0],
        [0x1, 'de', 0x34, 0x5d, 0xd3, 0x0],
        [0x1, 'de', 0x34, 0x5d, 0xc4, 0x0],
        [0x1, 'de', 0x34, 0x5d, 0xc7, 0x0],
        [0x1, 'de', 0x34, 0x5d, 0xbd, 0x0],
        [0x1, 'de', 0x34, 0x5d, 0xbf, 0x0],
        [0x1, 'de', 0x34, 0x5d, 0xc1, 0x0],
        [0x1, 'de', 0x34, 0x5d, 0xb6, 0x0],
        [0x1, 'de', 0x34, 0x5d, 0xb9, 0x0],
        [0x1, 'de', 0x34, 0x5d, 0xac, 0x0],
        [0x1, 'de', 0x34, 0x5d, 0xae, 0x0],
        [0x1, 'de', 0x34, 0x5d, 0xb1, 0x0],
        [0x1, 'de', 0x34, 0x5d, 0x9b, 0x0],
        [0x1, 'de', 0x34, 0x5d, 0x9d, 0x0],
        [0x1, 'de', 0x34, 0x5d, 0xa0, 0x0],
        [0x1, 'de', 0x34, 0x5c, 0xa2, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0xe5, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0xe7, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0xe8, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0xea, 0x0],
        [0x1, 'de', 0x34, 0x5d, 0xe6, 0x0],
        [0x1, 'de', 0x34, 0x5c, 0xe4, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0xeb, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0xec, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0xed, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0xef, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0xf0, 0x0],
        [0x1, 'de', 0x34, 0x5d, 0xee, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0xf1, 0x0],
        [0x1, 'de', 0x34, 0x5d, 0xf2, 0x0],
        [0x1, 'de', 0x34, 0x5d, 0xf3, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0xf4, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0xf6, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0xf5, 0x0],
        [0x1, 'de', 0x34, 0x5d, 0xf7, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0xf8, 0x0],
        [0x1, 'de', 0x34, 0x5c, 0xeb, 0x0],
        [0x1, 'de', 0x34, 0x5c, 0xf5, 0x0],
        [0x1, 'de', 0x34, 0x5d, 0xf9, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0xfa, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0xfb, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0xfc, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0xfe, 0x0],
        [0x1, 'de', 0x34, 0x5d, 0xfd, 0x0],
        [0x1, 'de', 0x34, 0x5d, 0xff, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0x101, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0x100, 0x0],
        [0x1, 'de', 0x34, 0x5d, 0x102, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0x103, 0x0],
        [0x1, 'de', 0x34, 0x5d, 0x104, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0x107, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0x108, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0x109, 0x0],
        [0x1, 'de', 0x34, 0x5d, 0x10a, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0x10b, 0x0],
        [0x1, 'de', 0x34, 0x5d, 0x10c, 0x0],
        [0x1, 'de', 0x34, 0x5d, 0x10d, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0x114, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0x115, 0x0],
        [0x1, 'de', 0x34, 0x5d, 0x116, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0x117, 0x0],
        [0x1, 'de', 0x34, 0x5d, 0x118, 0x0],
        [0x1, 'de', 0x34, 0x5d, 0x11b, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0x11c, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0x11d, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0x11e, 0x0],
        [0x1, 'de', 0x34, 0x5d, 0x11f, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0x120, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0x121, 0x0],
        [0x1, 'de', 0x34, 0x5d, 0x122, 0x0],
        [0x1, 'de', 0x34, 0x5d, 0x123, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0x124, 0x0],
        [0x1, 'de', 0x34, 0x5d, 0x125, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0x126, 0x0],
        [0x1, 'de', 0x34, 0x5d, 0x127, 0x0],
        [0x1, 'de', 0x34, 0x5d, 0x128, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0x129, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0x12a, 0x0],
        [0x1, 'de', 0x34, 0x5d, 0x12b, 0x0],
        [0x1, 'de', 0x35, 0x5d, 0x12c, 0x0],
        [0x1, 'de', 0x34, 0x5c, 0x12a, 0x0],
        [0x1, 'de', 0x34, 0x5c, 0x125, 0x0],
        [0x1, 'r', 0x5c, 0x106, 0x0],
        [0x1, 'r', 0x5d, 0x106, 0x0],
        [0x1, 'de', 0x34, 0x5d, 0x105, 0x0],
        [0x1, 'cs', 0x0, 0xdf, 0x68, 0x1],
        [0x1, 'cs', 0x2, 0xdf, 0x69, 0x1],
        [0x1, 'cs', 0x2, 0xdf, 0x66, 0x1],
        [0x1, 'cs', 0x2, 0xdf, 0x67, 0x1],
        [0x1, 'la', 0x3, 0x8d, 0x8, 0x1],
        [0x1, 'cs', 0x2, 0x8c, 0x9, 0x1],
        [0x1, 'la', 0x4, 0x8e, 0x9, 0x1],
        [0x1, 'de', 0x4, 0x51, 0x95, 0x0],
        [0x1, 'f', 0x0, 0x53, 0x94, 0x1],
        [0x1, 'f', 0x1, 0x52, 0x95, 0x1],
        [0x1, 'de', 0x22, 0x51, 0x9c, 0x0],
        [0x1, 'de', 0x33, 0x11, 0x9, 0x0],
        [0x1, 'de', 0x36, 0x10, 0x9, 0x0],
        [0x1, 'de', 0x36, 0xf, 0x9, 0x0],
        [0x1, 'cs', 0x3, 0xdf, 0x6a, 0x1],
        [0x1, 'p', 0x0, 0x77, 0x117, 0x1],
        [0x1, 'p', 0x0, 0x6d, 0xf2, 0x1],
        [0x1, 'cs', 0x1, 0x1d, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0x1e, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0x1f, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0x20, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0x21, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0x45, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0x47, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0x46, 0x9, 0x1],
        [0x1, 'cs', 0x1, 0x48, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0x49, 0x9, 0x1],
        [0x1, 'de', 0xa, 0x1f, 0xa, 0x0],
        [0x1, 'de', 0xa, 0x1d, 0xa, 0x0],
        [0x1, 'de', 0xa, 0x2c, 0xa, 0x0],
        [0x1, 'de', 0x4, 0x57, 0xa, 0x0],
        [0x1, 'de', 0x4, 0x56, 0xa, 0x0],
        [0x1, 'de', 0x5, 0x57, 0x9, 0x0],
        [0x1, 'de', 0x5, 0xd, 0xa, 0x0],
        [0x1, 'de', 0x4, 0xe, 0xb, 0x0],
        [0x1, 'de', 0x4, 0x10, 0xa, 0x0],
        [0x1, 'de', 0x4, 0x11, 0xa, 0x0],
        [0x1, 'cs', 0x2, 0x92, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0x94, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0x96, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0x99, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0x9b, 0x9, 0x1],
        [0x1, 'cs', 0x1, 0x95, 0x9, 0x1],
        [0x1, 'cs', 0x1, 0x9a, 0x9, 0x1],
        [0x1, 'cs', 0x3, 0x93, 0x9, 0x1],
        [0x1, 'cs', 0x3, 0x97, 0x9, 0x1],
        [0x1, 'cs', 0x3, 0x98, 0x9, 0x1],
        [0x1, 'cs', 0x3, 0x9c, 0x9, 0x1],
        [0x1, 'cs', 0x3, 0x9d, 0x9, 0x1],
        [0x1, 'cs', 0x3, 0x9e, 0x9, 0x1],
        [0x1, 'cs', 0x3, 0x9f, 0x9, 0x1],
        [0x1, 'cs', 0x3, 0xa0, 0x9, 0x1],
        [0x1, 'cs', 0x0, 0xa1, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0xa2, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0xa3, 0x9, 0x1],
        [0x1, 'cs', 0x1, 0xa4, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0xa5, 0x9, 0x1],
        [0x1, 'cs', 0x3, 0xa6, 0x9, 0x1],
        [0x1, 'cs', 0x3, 0xa8, 0x9, 0x1],
        [0x1, 'cs', 0x3, 0xaa, 0x9, 0x1],
        [0x1, 'cs', 0x1, 0xa9, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0xa7, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0xab, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0xad, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0xac, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0xae, 0x9, 0x1],
        [0x1, 'cs', 0x1, 0xaf, 0x9, 0x1],
        [0x1, 'cs', 0x3, 0xb0, 0x9, 0x1],
        [0x1, 'cs', 0x3, 0xb2, 0x9, 0x1],
        [0x1, 'cs', 0x3, 0xb3, 0x9, 0x1],
        [0x1, 'cs', 0x0, 0xb4, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0xb1, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0xb6, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0xb5, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0xb7, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0xb8, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0xb9, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0xba, 0x9, 0x1],
        [0x1, 'cs', 0x1, 0xbb, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0xbc, 0x9, 0x1],
        [0x1, 'cs', 0x3, 0xbd, 0x9, 0x1],
        [0x1, 'cs', 0x3, 0xbe, 0x9, 0x1],
        [0x1, 'cs', 0x3, 0xbf, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0xc0, 0x9, 0x1],
        [0x1, 'cs', 0x0, 0xc1, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0xc2, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0xc4, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0xc6, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0xc8, 0x9, 0x1],
        [0x1, 'cs', 0x3, 0xc3, 0x9, 0x1],
        [0x1, 'cs', 0x3, 0xc5, 0x9, 0x1],
        [0x1, 'cs', 0x3, 0xc7, 0x9, 0x1],
        [0x1, 'cs', 0x0, 0xc9, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0xca, 0x9, 0x1],
        [0x1, 'cs', 0x2, 0xcb, 0x9, 0x1],
        [0x1, 'cs', 0x3, 0xd0, 0x9, 0x1],
        [0x1, 'cs', 0x3, 0xcf, 0x9, 0x1],
        [0x1, 'cs', 0x3, 0xce, 0x9, 0x1],
        [0x1, 'cs', 0x3, 0xcd, 0x9, 0x1],
        [0x1, 'cs', 0x3, 0xcc, 0x9, 0x1],
        [0x1, 'cs', 0x3, 0xd6, 0x9, 0x1],
        [0x1, 'cs', 0x3, 0xd7, 0x9, 0x1],
        [0x1, 'cs', 0x3, 0xd8, 0x9, 0x1],
        [0x1, 'cs', 0x3, 0xd9, 0x9, 0x1],
        [0x1, 'cs', 0x3, 0xda, 0x9, 0x1],
        [0x1, 'b', 0x0, 0x5, 0x9f, 0x0],
        [0x1, 'b', 0x0, 0x5, 0xab, 0x0],
        [0x2, 'isl', 0x1, 0x7a, 0x3f, 0x0],
        [0x2, 'isl', 0x2, 0x77, 0x115, 0x0],
        [0x2, 'isl', 0x2, 0x6d, 0xf4, 0x0],
        [0x2, 'isl', 0x2, 0x72, 0xcd, 0x0],
        [0x2, 'isl', 0x1, 0x78, 0x96, 0x0],
        [0x2, 'isl', 0x2, 0x9a, 0x81, 0x0],
        [0x2, 'isl', 0x0, 0xb8, 0x9e, 0x0],
        [0x2, 'isl', 0x1, 0xd0, 0x80, 0x0],
        [0x2, 'isl', 0x1, 0xd7, 0x84, 0x0],
        [0x2, 'isl', 0x1, 0xd6, 0x80, 0x0],
        [0x2, 'isl', 0x1, 0xd1, 0x84, 0x0],
        [0x1, 'la', 0x3, 0xd9, 0x14, 0x1],
        [0x1, 'la', 0x1, 0xd7, 0x13, 0x1],
        [0x1, 'la', 0x0, 0xd4, 0x12, 0x1],
        [0x1, 'la', 0x4, 0xd6, 0x12, 0x1],
        [0x1, 'la', 0x4, 0xd8, 0x13, 0x1],
        [0x1, 'la', 0x4, 0xd3, 0x14, 0x1],
        [0x1, 'la', 0x3, 0xd2, 0x13, 0x1],
        [0x1, 'la', 0x3, 0xd7, 0x15, 0x1],
        [0x1, 'la', 0x1, 0xd6, 0x14, 0x1],
        [0x1, 'la', 0x3, 0xd6, 0x16, 0x1],
        [0x1, 'la', 0x3, 0xd6, 0x18, 0x1],
        [0x1, 'la', 0x4, 0xd6, 0x1a, 0x1],
        [0x1, 'la', 0x4, 0xd5, 0x1b, 0x1],
        [0x1, 'la', 0x1, 0xd4, 0x1c, 0x1],
        [0x1, 'la', 0x2, 0xd4, 0x1d, 0x1],
        [0x1, 'la', 0x5, 0xd4, 0x1e, 0x1],
        [0x1, 'la', 0x4, 0xd0, 0x13, 0x1],
        [0x1, 'la', 0x4, 0xcf, 0x13, 0x1],
        [0x1, 'la', 0x1, 0xce, 0x13, 0x1],
        [0x1, 'la', 0x1, 0xcd, 0x13, 0x1],
        [0x1, 'la', 0x2, 0xcc, 0x13, 0x1],
        [0x1, 'la', 0x5, 0xcb, 0x13, 0x1],
        [0x1, 'la', 0x3, 0xd2, 0x11, 0x1]
    ],
    COUNTER = 0x0,
    SPRITE = {
        'GROUND': ['#133A2B', '#042b30'],
        'SNOW_GROUND': ['#EBF2F0', '#136167'],
        'CRAFT_LOADING': ['#4EB687', '#187484'],
        'BROWN_LIFE': ['#664516', '#13474C'],
        'SAND_COLOR': ['#FCEFBB', '#0F4D48'],
        'SAND_SHOVEL_CO': ['#C1AA7E', '#0F423D'],
        'GRD_SHOVEL_CO': ['#594837', '#163A3A'],
        'ICE_SHOVEL_CO': ['#A5D6D6', '#539CA0'],
        'WATER_3_COLOR': ['#0B6A84', '#09373F'],
        'WATER_2_COLOR': ['#2A8B9B', '#0F464C'],
        'WATER_1_COLOR': ['#A9D6D3', '#115E60'],
        'FLOAM_COLOR': ['#ECF7F9', '#539CA0'],
        'WEAPON_LOADING': ['#FFF', '#FFF'],
        'HELMET_LOADING': ['#FFF', '#FFF'],
        'SWIM_COLOR': ['#1C9BA4', '#00272F'],
        'LAVA_GROUND': ['#2D2017', '#031C1E'],
        'DAY': 0x0,
        'NIGHT': 0x1,
        'DRAGON_DEN_X': 0x8fc,
        'DRAGON_DEN_Y': 0x8f2,
        'FLAKES_NUMBER': 0x22,
        'FLAKES_SIZES': 0x5,
        'SAND_NUMBER': 0x44,
        'ASHES_NUMBER': 0x22,
        'ASHES_SIZES': 0x5,
        'SMOG': 0x1,
        'SMOG_PUSH': 0.6,
        'SMOG_SPEED': 0.25,
        'STEP_SPACE': 0x32,
        'TRAIL_SPACE': 0xa,
        'SWIM_SPACE': 0x4b,
        'GHOST_BUBBLES': 0x14,
        'BUBBLES_SIZES': 0x5,
        'SWORD': COUNTER++,
        'PICK': COUNTER++,
        'FUR': COUNTER++,
        'PICK_GOLD': COUNTER++,
        'PICK_DIAMOND': COUNTER++,
        'SWORD_GOLD': COUNTER++,
        'SWORD_DIAMOND': COUNTER++,
        'HAND': COUNTER++,
        'PICK_WOOD': COUNTER++,
        'PIRATE_SWORD': COUNTER++,
        'EARMUFFS': COUNTER++,
        'COAT': COUNTER++,
        'WOOD_SPEAR': COUNTER++,
        'SPEAR': COUNTER++,
        'GOLD_SPEAR': COUNTER++,
        'DIAMOND_SPEAR': COUNTER++,
        'DRAGON_SPEAR': COUNTER++,
        'LAVA_SPEAR': COUNTER++,
        'CRAB_SPEAR': COUNTER++,
        'REIDITE_SWORD': COUNTER++,
        'DIAMOND_PROTECTION': COUNTER++,
        'AMETHYST_PROTECTION': COUNTER++,
        'REIDITE_PROTECTION': COUNTER++,
        'EXPLORER_HAT': COUNTER++,
        'PIRATE_HAT': COUNTER++,
        'STONE_HELMET': COUNTER++,
        'GOLD_HELMET': COUNTER++,
        'DIAMOND_HELMET': COUNTER++,
        'BOOK': COUNTER++,
        'BAG': COUNTER++,
        'SWORD_AMETHYST': COUNTER++,
        'PICK_AMETHYST': COUNTER++,
        'PICK_REIDITE': COUNTER++,
        'AMETHYST_SPEAR': COUNTER++,
        'REIDITE_SPEAR': COUNTER++,
        'HAMMER': COUNTER++,
        'HAMMER_GOLD': COUNTER++,
        'HAMMER_DIAMOND': COUNTER++,
        'HAMMER_AMETHYST': COUNTER++,
        'HAMMER_REIDITE': COUNTER++,
        'CAP_SCARF': COUNTER++,
        'CHRISTMAS_HAT': COUNTER++,
        'ELF_HAT': COUNTER++,
        'AMETHYST_HELMET': COUNTER++,
        'REIDITE_HELMET': COUNTER++,
        'SUPER_HAMMER': COUNTER++,
        'SHOVEL': COUNTER++,
        'SUPER_DIVING_SUIT': COUNTER++,
        'DIVING_MASK': COUNTER++,
        'WATERING_CAN_FULL': COUNTER++,
        'SHOVEL_GOLD': COUNTER++,
        'SHOVEL_DIAMOND': COUNTER++,
        'SHOVEL_AMETHYST': COUNTER++,
        'PITCHFORK': COUNTER++,
        'PITCHFORK2': COUNTER++,
        'SPANNER': COUNTER++,
        'MACHETE': COUNTER++,
        'SWORD_WOOD': COUNTER++,
        'WOOD_HELMET': COUNTER++,
        'DRAGON_HELMET': COUNTER++,
        'LAVA_HELMET': COUNTER++,
        'CROWN_CRAB': COUNTER++,
        'DRAGON_SWORD': COUNTER++,
        'LAVA_SWORD': COUNTER++,
        'WOOD_BOW': COUNTER++,
        'STONE_BOW': COUNTER++,
        'GOLD_BOW': COUNTER++,
        'DIAMOND_BOW': COUNTER++,
        'AMETHYST_BOW': COUNTER++,
        'REIDITE_BOW': COUNTER++,
        'DRAGON_BOW': COUNTER++,
        'WOOD_SHIELD': COUNTER++,
        'STONE_SHIELD': COUNTER++,
        'GOLD_SHIELD': COUNTER++,
        'DIAMOND_SHIELD': COUNTER++,
        'AMETHYST_SHIELD': COUNTER++,
        'REIDITE_SHIELD': COUNTER++,
        'CROWN_GREEN': COUNTER++,
        'CROWN_ORANGE': COUNTER++,
        'CROWN_BLUE': COUNTER++,
        'TURBAN1': COUNTER++,
        'TURBAN2': COUNTER++,
        'PILOT_HELMET': COUNTER++,
        'HOOD': COUNTER++,
        'PEASANT': COUNTER++,
        'WINTER_HOOD': COUNTER++,
        'WINTER_PEASANT': COUNTER++,
        'FLOWER_HAT': COUNTER++,
        'FUR_HAT': COUNTER++,
        'SADDLE': COUNTER++,
        'WITCH': COUNTER++,
        'NIMBUS': COUNTER++,
        'WAND1': COUNTER++,
        'WAND2': COUNTER++,
        'FIREFLY_ITEM': COUNTER++,
        'WOOD_ARROW': COUNTER++,
        'STONE_ARROW': COUNTER++,
        'GOLD_ARROW': COUNTER++,
        'DIAMOND_ARROW': COUNTER++,
        'AMETHYST_ARROW': COUNTER++,
        'REIDITE_ARROW': COUNTER++,
        'DRAGON_ARROW': COUNTER++,
        'STONES': COUNTER++,
        'TREE': COUNTER++,
        'PLANT': COUNTER++,
        'GOLD': COUNTER++,
        'DIAMOND': COUNTER++,
        'WOOD_FIRE': COUNTER++,
        'WORKBENCH': COUNTER++,
        'PLANT_SEED': COUNTER++,
        'MEAT': COUNTER++,
        'COOKED_MEAT': COUNTER++,
        'BIG_FIRE_WOOD': COUNTER++,
        'FURNACE_OFF': COUNTER++,
        'PAPER': COUNTER++,
        'AMETHYST': COUNTER++,
        'AMETHYST_WALL': COUNTER++,
        'AMETHYST_SPIKE': COUNTER++,
        'DOOR_AMETHYST_CLOSE': COUNTER++,
        'BRIDGE': COUNTER++,
        'SAND': COUNTER++,
        'BOTTLE_FULL': COUNTER++,
        'BOTTLE_EMPTY': COUNTER++,
        'KRAKEN_SKIN': COUNTER++,
        'WATERING_CAN': COUNTER++,
        'FLOUR': COUNTER++,
        'WHEAT_SEED': COUNTER++,
        'COOKIE': COUNTER++,
        'WILD_WHEAT': COUNTER++,
        'WINDMILL': COUNTER++,
        'CAKE': COUNTER++,
        'FOODFISH': COUNTER++,
        'FOODFISH_COOKED': COUNTER++,
        'SCALES': COUNTER++,
        'INV_GROUND': COUNTER++,
        'PLOT': COUNTER++,
        'INV_ICE': COUNTER++,
        'INV_BREAD': COUNTER++,
        'BREAD_OVEN_OFF': COUNTER++,
        'INV_SANDWICH': COUNTER++,
        'FUR_WINTER': COUNTER++,
        'BLUE_CORD': COUNTER++,
        'LOCK': COUNTER++,
        'DRAGON_HEART': COUNTER++,
        'LAVA_HEART': COUNTER++,
        'RESURRECTION': COUNTER++,
        'EMERALD_MACHINE': COUNTER++,
        'EXTRACTOR_MACHINE_STONE': COUNTER++,
        'EXTRACTOR_MACHINE_GOLD': COUNTER++,
        'EXTRACTOR_MACHINE_DIAMOND': COUNTER++,
        'EXTRACTOR_MACHINE_AMETHYST': COUNTER++,
        'EXTRACTOR_MACHINE_REIDITE': COUNTER++,
        'LOCKPICK': COUNTER++,
        'TOTEM': COUNTER++,
        'SPIKE': COUNTER++,
        'CORD': COUNTER++,
        'WALL': COUNTER++,
        'STONE_WALL': COUNTER++,
        'GOLD_WALL': COUNTER++,
        'DIAMOND_WALL': COUNTER++,
        'DOOR_WOOD_CLOSE': COUNTER++,
        'CHEST': COUNTER++,
        'STONE_SPIKE': COUNTER++,
        'GOLD_SPIKE': COUNTER++,
        'DIAMOND_SPIKE': COUNTER++,
        'DOOR_STONE_CLOSE': COUNTER++,
        'DOOR_GOLD_CLOSE': COUNTER++,
        'DOOR_DIAMOND_CLOSE': COUNTER++,
        'FUR_WOLF': COUNTER++,
        'INV_GEMME_BLUE': COUNTER++,
        'INV_GEMME_GREEN': COUNTER++,
        'INV_GEMME_ORANGE': COUNTER++,
        'INV_SPECIAL_FUR': COUNTER++,
        'INV_SPECIAL_FUR_2': COUNTER++,
        'INV_BUCKET_FULL': COUNTER++,
        'INV_BUCKET_EMPTY': COUNTER++,
        'WELL_EMPTY': COUNTER++,
        'SIGN': COUNTER++,
        'DRAGON_CUBE': COUNTER++,
        'DRAGON_ORB': COUNTER++,
        'LAVA_CUBE': COUNTER++,
        'LAVA_ORB': COUNTER++,
        'PLANT_PUMPKIN': COUNTER++,
        'PUMPKIN': COUNTER++,
        'ROOF': COUNTER++,
        'PLANT_GARLIC': COUNTER++,
        'GARLIC': COUNTER++,
        'PLANT_THORNBUSH': COUNTER++,
        'THORNBUSH': COUNTER++,
        'BANDAGE': COUNTER++,
        'INV_CRAB_STICK': COUNTER++,
        'INV_CRAB_LOOT': COUNTER++,
        'BED': COUNTER++,
        'SUGAR_CAN': COUNTER++,
        'INV_CANDY': COUNTER++,
        'GARLAND': COUNTER++,
        'REIDITE': COUNTER++,
        'MAGMA': COUNTER++,
        'PLANT_CARROT': COUNTER++,
        'CARROT': COUNTER++,
        'PLANT_TOMATO': COUNTER++,
        'TOMATO': COUNTER++,
        'PLANT_WATERMELON': COUNTER++,
        'WATERMELON': COUNTER++,
        'PLANT_ALOE_VERA': COUNTER++,
        'ALOE_VERA_GROWN': COUNTER++,
        'WOOD_DOOR_SPIKE': COUNTER++,
        'STONE_DOOR_SPIKE': COUNTER++,
        'GOLD_DOOR_SPIKE': COUNTER++,
        'DIAMOND_DOOR_SPIKE': COUNTER++,
        'AMETHYST_DOOR_SPIKE': COUNTER++,
        'REIDITE_WALL': COUNTER++,
        'REIDITE_DOOR': COUNTER++,
        'REIDITE_SPIKE': COUNTER++,
        'REIDITE_DOOR_SPIKE': COUNTER++,
        'WOOD_TOWER': COUNTER++,
        'PENGUIN_FEATHER': COUNTER++,
        'BOAT': COUNTER++,
        'SLED': COUNTER++,
        'BOAT_WAVE': COUNTER++,
        'SLED_WAVE': COUNTER++,
        'MOUNT_BOAR': COUNTER++,
        'BOAR_STEP': COUNTER++,
        'CRAB_STICK': COUNTER++,
        'CRAB_LOOT': COUNTER++,
        'CRAB_BOSS': COUNTER++,
        'BABY_DRAGON': COUNTER++,
        'BABY_LAVA': COUNTER++,
        'CRAB_STEP': COUNTER++,
        'HAWK': COUNTER++,
        'PLANE': COUNTER++,
        'HAWK_FEATHER': COUNTER++,
        'VULTURE': COUNTER++,
        'ALOE_VERA': COUNTER++,
        'VULTURE_FEATHER': COUNTER++,
        'EMERALD': COUNTER++,
        'FUR_BOAR': COUNTER++,
        'DECORATION': COUNTER++,
        'FOD': COUNTER++,
        'FIREFLY': COUNTER++,
        'HURT_FIREFLY': COUNTER++,
        'SPELL': COUNTER++,
        'BABY_MAMMOTH': COUNTER++,
        'BABY_MAMMOTH_STEP': COUNTER++,
        'CRATE': COUNTER++,
        'SEED': COUNTER++,
        'INV_DRAGON_ORB': COUNTER++,
        'INV_LAVA_ORB': COUNTER++,
        'CRAFT_SWORD': COUNTER++,
        'BODY': COUNTER++,
        'CRAFT_PICK': COUNTER++,
        'CRAFT_PICK_DIAMOND': COUNTER++,
        'INV_PICK_GOLD': COUNTER++,
        'MINIMAP': COUNTER++,
        'SPIDER': COUNTER++,
        'INV_SWORD': COUNTER++,
        'CRAFT_WORK': COUNTER++,
        'CRAFT_STONE_WALL': COUNTER++,
        'RABBIT': COUNTER++,
        'CRAFT_GOLD_WALL': COUNTER++,
        'WEB': COUNTER++,
        'GAUGES': COUNTER++,
        'CRAFT_DOOR_WOOD_CLOSE': COUNTER++,
        'CHEST_PLANT': COUNTER++,
        'CHEST_GOLD': COUNTER++,
        'CHEST_DIAMOND': COUNTER++,
        'CHEST_PICK_GOLD': COUNTER++,
        'CHEST_FIRE': COUNTER++,
        'CHEST_PICK_WOOD': COUNTER++,
        'CHEST_MEAT': COUNTER++,
        'CHEST_BIG_FIRE': COUNTER++,
        'INV_PLANT': COUNTER++,
        'LEADERBOARD': COUNTER++,
        'HURT': COUNTER++,
        'COLD': COUNTER++,
        'HUNGER': COUNTER++,
        'GROUND_FIRE': COUNTER++,
        'COUNTER': COUNTER++,
        'CRAFT_SEED': COUNTER++,
        'HERB': COUNTER++,
        'HAND_SHADOW': COUNTER++,
        'PLANT_MINI': COUNTER++,
        'FIRE': COUNTER++,
        'HALO_FIRE': COUNTER++,
        'CRAFT_SWORD_GOLD': COUNTER++,
        'CRAFT_SWORD_DIAMOND': COUNTER++,
        'INV_SWORD_GOLD': COUNTER++,
        'INV_SWORD_DIAMOND': COUNTER++,
        'FRUIT': COUNTER++,
        'CRAFT_PICK_GOLD': COUNTER++,
        'INV_PICK_DIAMOND': COUNTER++,
        'INV_GOLD': COUNTER++,
        'INV_DIAMOND': COUNTER++,
        'WOLF': COUNTER++,
        'INV_MEAT': COUNTER++,
        'GEAR2': COUNTER++,
        'CRAFT_FIRE': COUNTER++,
        'INV_BANDAGE': COUNTER++,
        'CRAFT_BANDAGE': COUNTER++,
        'INV_CORD': COUNTER++,
        'YOUR_SCORE': COUNTER++,
        'TREE_BRANCH': COUNTER++,
        'HEAL': COUNTER++,
        'INV_FIRE': COUNTER++,
        'INV_WORK': COUNTER++,
        'INV_SEED': COUNTER++,
        'INV_PICK': COUNTER++,
        'INV_PICK_WOOD': COUNTER++,
        'CRAFT_PICK_WOOD': COUNTER++,
        'INV_STONE': COUNTER++,
        'INV_WOOD': COUNTER++,
        'INV_WALL': COUNTER++,
        'CRAFT_WALL': COUNTER++,
        'INV_SPIKE': COUNTER++,
        'CRAFT_SPIKE': COUNTER++,
        'WHEAT_MOB': COUNTER++,
        'HURT_RABBIT': COUNTER++,
        'INV_COOKED_MEAT': COUNTER++,
        'GEAR': COUNTER++,
        'CRAFT_COOKED_MEAT': COUNTER++,
        'HURT_WOLF': COUNTER++,
        'CRAFT_BIG_FIRE': COUNTER++,
        'INV_BIG_FIRE': COUNTER++,
        'INV_STONE_WALL': COUNTER++,
        'INV_GOLD_WALL': COUNTER++,
        'INV_DIAMOND_WALL': COUNTER++,
        'CRAFT_DIAMOND_WALL': COUNTER++,
        'HURT_SPIDER': COUNTER++,
        'EMPTY_SLOT': COUNTER++,
        'INV_DOOR_WOOD_CLOSE': COUNTER++,
        'DOOR_WOOD_OPEN': COUNTER++,
        'INV_CHEST': COUNTER++,
        'CRAFT_CHEST': COUNTER++,
        'CHEST_SLOT': COUNTER++,
        'CHEST_SWORD': COUNTER++,
        'CHEST_PICK': COUNTER++,
        'CHEST_STONE': COUNTER++,
        'CHEST_WOOD': COUNTER++,
        'CHEST_PICK_DIAMOND': COUNTER++,
        'CHEST_SWORD_GOLD': COUNTER++,
        'CHEST_SWORD_DIAMOND': COUNTER++,
        'CHEST_WORK': COUNTER++,
        'CHEST_SEED': COUNTER++,
        'CHEST_WALL': COUNTER++,
        'CHEST_SPIKE': COUNTER++,
        'CHEST_COOKED_MEAT': COUNTER++,
        'CHEST_BANDAGE': COUNTER++,
        'CHEST_CORD': COUNTER++,
        'CHEST_STONE_WALL': COUNTER++,
        'CHEST_GOLD_WALL': COUNTER++,
        'CHEST_DIAMOND_WALL': COUNTER++,
        'CHEST_DOOR_WOOD_CLOSE': COUNTER++,
        'CHEST_WORKBENCH': COUNTER++,
        'CHEST_CHEST': COUNTER++,
        'CRAFT_STONE_SPIKE': COUNTER++,
        'INV_STONE_SPIKE': COUNTER++,
        'INV_GOLD_SPIKE': COUNTER++,
        'CRAFT_GOLD_SPIKE': COUNTER++,
        'INV_DIAMOND_SPIKE': COUNTER++,
        'CRAFT_DIAMOND_SPIKE': COUNTER++,
        'CHEST_PLUS': COUNTER++,
        'CRAFT_BAG': COUNTER++,
        'INV_FUR': COUNTER++,
        'INV_EARMUFFS': COUNTER++,
        'CRAFT_EARMUFFS': COUNTER++,
        'CRAFT_DOOR_STONE_CLOSE': COUNTER++,
        'INV_DOOR_STONE_CLOSE': COUNTER++,
        'DOOR_STONE_OPEN': COUNTER++,
        'CRAFT_DOOR_GOLD_CLOSE': COUNTER++,
        'INV_DOOR_GOLD_CLOSE': COUNTER++,
        'DOOR_GOLD_OPEN': COUNTER++,
        'CRAFT_DOOR_DIAMOND_CLOSE': COUNTER++,
        'INV_DOOR_DIAMOND_CLOSE': COUNTER++,
        'DOOR_DIAMOND_OPEN': COUNTER++,
        'CRAFT_COAT': COUNTER++,
        'INV_COAT': COUNTER++,
        'CHEST_STONE_SPIKE': COUNTER++,
        'CHEST_GOLD_SPIKE': COUNTER++,
        'CHEST_DIAMOND_SPIKE': COUNTER++,
        'CHEST_BAG': COUNTER++,
        'CHEST_FUR': COUNTER++,
        'CHEST_EARMUFFS': COUNTER++,
        'CHEST_DOOR_STONE_CLOSE': COUNTER++,
        'CHEST_DOOR_GOLD_CLOSE': COUNTER++,
        'CHEST_DOOR_DIAMOND_CLOSE': COUNTER++,
        'CHEST_COAT': COUNTER++,
        'INV_BAG': COUNTER++,
        'INV_FUR_WOLF': COUNTER++,
        'CHEST_FUR_WOLF': COUNTER++,
        'INV_SPEAR': COUNTER++,
        'CRAFT_SPEAR': COUNTER++,
        'CHEST_SPEAR': COUNTER++,
        'INV_GOLD_SPEAR': COUNTER++,
        'CRAFT_GOLD_SPEAR': COUNTER++,
        'CHEST_GOLD_SPEAR': COUNTER++,
        'INV_WOOD_SPEAR': COUNTER++,
        'CRAFT_WOOD_SPEAR': COUNTER++,
        'CHEST_WOOD_SPEAR': COUNTER++,
        'INV_DIAMOND_SPEAR': COUNTER++,
        'CRAFT_DIAMOND_SPEAR': COUNTER++,
        'CHEST_DIAMOND_SPEAR': COUNTER++,
        'FURNACE_ON': COUNTER++,
        'INV_FURNACE': COUNTER++,
        'CRAFT_FURNACE': COUNTER++,
        'CHEST_FURNACE': COUNTER++,
        'FURNACE_SLOT': COUNTER++,
        'FURNACE_BUTTON': COUNTER++,
        'FIR': COUNTER++,
        'STONES_WINTER': COUNTER++,
        'GOLD_WINTER': COUNTER++,
        'DIAMOND_WINTER': COUNTER++,
        'GROUND_FIRE_WINTER': COUNTER++,
        'INV_AMETHYST': COUNTER++,
        'FOX': COUNTER++,
        'INV_EXPLORER_HAT': COUNTER++,
        'CRAFT_EXPLORER_HAT': COUNTER++,
        'CHEST_EXPLORER_HAT': COUNTER++,
        'INV_PIRATE_HAT': COUNTER++,
        'CRAFT_PIRATE_HAT': COUNTER++,
        'CHEST_PIRATE_HAT': COUNTER++,
        'INV_PILOT_HELMET': COUNTER++,
        'CRAFT_PILOT_HELMET': COUNTER++,
        'CHEST_PILOT_HELMET': COUNTER++,
        'INV_STONE_HELMET': COUNTER++,
        'CRAFT_STONE_HELMET': COUNTER++,
        'CHEST_STONE_HELMET': COUNTER++,
        'INV_GOLD_HELMET': COUNTER++,
        'CRAFT_GOLD_HELMET': COUNTER++,
        'CHEST_GOLD_HELMET': COUNTER++,
        'INV_DIAMOND_HELMET': COUNTER++,
        'CRAFT_DIAMOND_HELMET': COUNTER++,
        'CHEST_DIAMOND_HELMET': COUNTER++,
        'INV_BOOK': COUNTER++,
        'CRAFT_BOOK': COUNTER++,
        'CHEST_BOOK': COUNTER++,
        'INV_PAPER': COUNTER++,
        'CRAFT_PAPER': COUNTER++,
        'CHEST_PAPER': COUNTER++,
        'HERB_WINTER': COUNTER++,
        'BEAR': COUNTER++,
        'CHEST_AMETHYST': COUNTER++,
        'SNOW': COUNTER++,
        'DRAGON_GROUND': COUNTER++,
        'DRAGON': COUNTER++,
        'LAVA_DRAGON': COUNTER++,
        'WING_LEFT': COUNTER++,
        'WING_RIGHT': COUNTER++,
        'LAVA_WING_LEFT': COUNTER++,
        'LAVA_WING_RIGHT': COUNTER++,
        'INV_SWORD_AMETHYST': COUNTER++,
        'CRAFT_SWORD_AMETHYST': COUNTER++,
        'CHEST_SWORD_AMETHYST': COUNTER++,
        'INV_PICK_AMETHYST': COUNTER++,
        'CHEST_PICK_AMETHYST': COUNTER++,
        'CRAFT_PICK_AMETHYST': COUNTER++,
        'HURT_FOX': COUNTER++,
        'HURT_BEAR': COUNTER++,
        'HURT_DRAGON': COUNTER++,
        'HURT_LAVA_DRAGON': COUNTER++,
        'SLOT_NUMBER': COUNTER++,
        'HURT_WING_LEFT': COUNTER++,
        'HURT_WING_RIGHT': COUNTER++,
        'HURT_LAVA_WING_LEFT': COUNTER++,
        'HURT_LAVA_WING_RIGHT': COUNTER++,
        'FLAKES': COUNTER++,
        'DESERT': COUNTER++,
        'INV_AMETHYST_SPEAR': COUNTER++,
        'CRAFT_AMETHYST_SPEAR': COUNTER++,
        'CHEST_AMETHYST_SPEAR': COUNTER++,
        'SNOW_STEP': COUNTER++,
        'LAVA_STEP': COUNTER++,
        'INV_HAMMER': COUNTER++,
        'CRAFT_HAMMER': COUNTER++,
        'CHEST_HAMMER': COUNTER++,
        'INV_HAMMER_GOLD': COUNTER++,
        'CRAFT_HAMMER_GOLD': COUNTER++,
        'CHEST_HAMMER_GOLD': COUNTER++,
        'INV_HAMMER_DIAMOND': COUNTER++,
        'CRAFT_HAMMER_DIAMOND': COUNTER++,
        'CHEST_HAMMER_DIAMOND': COUNTER++,
        'INV_HAMMER_AMETHYST': COUNTER++,
        'CRAFT_HAMMER_AMETHYST': COUNTER++,
        'CHEST_HAMMER_AMETHYST': COUNTER++,
        'INV_HAMMER_REIDITE': COUNTER++,
        'CRAFT_HAMMER_REIDITE': COUNTER++,
        'CHEST_HAMMER_REIDITE': COUNTER++,
        'INV_AMETHYST_WALL': COUNTER++,
        'CRAFT_AMETHYST_WALL': COUNTER++,
        'CHEST_AMETHYST_WALL': COUNTER++,
        'INV_AMETHYST_SPIKE': COUNTER++,
        'CRAFT_AMETHYST_SPIKE': COUNTER++,
        'CHEST_AMETHYST_SPIKE': COUNTER++,
        'CRAFT_DOOR_AMETHYST_CLOSE': COUNTER++,
        'INV_DOOR_AMETHYST_CLOSE': COUNTER++,
        'DOOR_AMETHYST_OPEN': COUNTER++,
        'CHEST_DOOR_AMETHYST_CLOSE': COUNTER++,
        'INV_CAP_SCARF': COUNTER++,
        'CRAFT_CAP_SCARF': COUNTER++,
        'CHEST_CAP_SCARF': COUNTER++,
        'INV_FUR_WINTER': COUNTER++,
        'CHEST_FUR_WINTER': COUNTER++,
        'SLOT_NUMBER': COUNTER++,
        'DOOR_WOOD_OPEN_WINTER': COUNTER++,
        'DOOR_STONE_OPEN_WINTER': COUNTER++,
        'DOOR_GOLD_OPEN_WINTER': COUNTER++,
        'DOOR_DIAMOND_OPEN_WINTER': COUNTER++,
        'DOOR_AMETHYST_OPEN_WINTER': COUNTER++,
        'INV_BLUE_CORD': COUNTER++,
        'CHEST_BLUE_CORD': COUNTER++,
        'CRAFT_BLUE_CORD': COUNTER++,
        'BIGMAP': COUNTER++,
        'SHOW_SPECTATORS': COUNTER++,
        'INV_LOCK': COUNTER++,
        'CRAFT_LOCK': COUNTER++,
        'CHEST_LOCK': COUNTER++,
        'INV_DRAGON_HEART': COUNTER++,
        'CHEST_DRAGON_HEART': COUNTER++,
        'INV_LAVA_HEART': COUNTER++,
        'CHEST_LAVA_HEART': COUNTER++,
        'RECONNECT': COUNTER++,
        'RESURRECTION_GROUND': COUNTER++,
        'RESURRECTION_HOLE': COUNTER++,
        'RESURRECTION_ROTATE': COUNTER++,
        'INV_RESURRECTION': COUNTER++,
        'CRAFT_RESURRECTION': COUNTER++,
        'CHEST_RESURRECTION': COUNTER++,
        'INV_LOCKPICK': COUNTER++,
        'CRAFT_LOCKPICK': COUNTER++,
        'CHEST_LOCKPICK': COUNTER++,
        'KEY': COUNTER++,
        'PADLOCK': COUNTER++,
        'DELAY_WEAPON': COUNTER++,
        'LOCKED': COUNTER++,
        'PADLOCK_ON_CHEST': COUNTER++,
        'BUBBLES': COUNTER++,
        'INV_AMETHYST_HELMET': COUNTER++,
        'CRAFT_AMETHYST_HELMET': COUNTER++,
        'CHEST_AMETHYST_HELMET': COUNTER++,
        'SPECIAL_ITEMS': COUNTER++,
        'POINTS': COUNTER++,
        'AUTO_FEED': COUNTER++,
        'BANDAGE_ACTIVATED': COUNTER++,
        'STOP_REGENERATION': COUNTER++,
        'STOP_REGENERATION_BLIZZARD': COUNTER++,
        'INV_SUPER_HAMMER': COUNTER++,
        'CRAFT_SUPER_HAMMER': COUNTER++,
        'CHEST_SUPER_HAMMER': COUNTER++,
        'INV_TOTEM': COUNTER++,
        'CHEST_TOTEM': COUNTER++,
        'CRAFT_TOTEM': COUNTER++,
        'TEAM_BUTTON': COUNTER++,
        'MANAGE_TEAM_BUTTON': COUNTER++,
        'ICON_MEMBER': COUNTER++,
        'ICON_LEADER': COUNTER++,
        'FULL_TEAM_BUTTON': COUNTER++,
        'SHOW_TEAM_BUTTON': COUNTER++,
        'DELAY_TEAM': COUNTER++,
        'INV_DRAGON_SWORD': COUNTER++,
        'CRAFT_DRAGON_SWORD': COUNTER++,
        'CHEST_DRAGON_SWORD': COUNTER++,
        'INV_LAVA_SWORD': COUNTER++,
        'CRAFT_LAVA_SWORD': COUNTER++,
        'CHEST_LAVA_SWORD': COUNTER++,
        'INV_WOOD_BOW': COUNTER++,
        'CRAFT_WOOD_BOW': COUNTER++,
        'CHEST_WOOD_BOW': COUNTER++,
        'INV_STONE_BOW': COUNTER++,
        'CRAFT_STONE_BOW': COUNTER++,
        'CHEST_STONE_BOW': COUNTER++,
        'INV_GOLD_BOW': COUNTER++,
        'CRAFT_GOLD_BOW': COUNTER++,
        'CHEST_GOLD_BOW': COUNTER++,
        'INV_DIAMOND_BOW': COUNTER++,
        'CRAFT_DIAMOND_BOW': COUNTER++,
        'CHEST_DIAMOND_BOW': COUNTER++,
        'INV_AMETHYST_BOW': COUNTER++,
        'CRAFT_AMETHYST_BOW': COUNTER++,
        'CHEST_AMETHYST_BOW': COUNTER++,
        'INV_REIDITE_BOW': COUNTER++,
        'CRAFT_REIDITE_BOW': COUNTER++,
        'CHEST_REIDITE_BOW': COUNTER++,
        'INV_DRAGON_BOW': COUNTER++,
        'CRAFT_DRAGON_BOW': COUNTER++,
        'CHEST_DRAGON_BOW': COUNTER++,
        'CHEST_DRAGON_ORB': COUNTER++,
        'CHEST_LAVA_ORB': COUNTER++,
        'SHOP': COUNTER++,
        'CURSED_SWORD': COUNTER++,
        'INV_CURSED_SWORD': COUNTER++,
        'CRAFT_CURSED_SWORD': COUNTER++,
        'CHEST_CURSED_SWORD': COUNTER++,
        'ITEM1': COUNTER++,
        'ITEM2': COUNTER++,
        'ITEM3': COUNTER++,
        'ITEM4': COUNTER++,
        'SAND_BORDER': COUNTER++,
        'SAND_STEP': COUNTER++,
        'OCEAN': COUNTER++,
        'CRAFT_BRIDGE': COUNTER++,
        'INV_BRIDGE': COUNTER++,
        'CHEST_BRIDGE': COUNTER++,
        'LACK': COUNTER++,
        'OXYGEN': COUNTER++,
        'INV_SAND': COUNTER++,
        'CHEST_SAND': COUNTER++,
        'CRAFT_BOTTLE_EMPTY': COUNTER++,
        'INV_BOTTLE_EMPTY': COUNTER++,
        'INV_BOTTLE_FULL': COUNTER++,
        'CHEST_BOTTLE_EMPTY': COUNTER++,
        'CHEST_BOTTLE_FULL': COUNTER++,
        'INV_SHOVEL': COUNTER++,
        'CHEST_SHOVEL': COUNTER++,
        'CRAFT_SHOVEL': COUNTER++,
        'LAKE_DEEP': COUNTER++,
        'LAKE': COUNTER++,
        'LAKE_EDGE': COUNTER++,
        'SHINGLE': COUNTER++,
        'DRIED_PLANT': COUNTER++,
        'INV_KRAKEN_SKIN': COUNTER++,
        'CHEST_KRAKEN_SKIN': COUNTER++,
        'INV_WATERING_CAN': COUNTER++,
        'CRAFT_WATERING_CAN': COUNTER++,
        'CHEST_WATERING_CAN': COUNTER++,
        'INV_FLOUR': COUNTER++,
        'CHEST_FLOUR': COUNTER++,
        'INV_WHEAT_SEED': COUNTER++,
        'CRAFT_WHEAT_SEED': COUNTER++,
        'CHEST_WHEAT_SEED': COUNTER++,
        'INV_COOKIE': COUNTER++,
        'CRAFT_COOKIE': COUNTER++,
        'CHEST_COOKIE': COUNTER++,
        'KRAKEN': COUNTER++,
        'DRIED_WHEAT': COUNTER++,
        'INV_WILD_WHEAT': COUNTER++,
        'CHEST_WILD_WHEAT': COUNTER++,
        'WINDMILL_WINGS': COUNTER++,
        'WINDMILL_HEAD': COUNTER++,
        'CRAFT_WINDMILL': COUNTER++,
        'INV_WINDMILL': COUNTER++,
        'CHEST_WINDMILL': COUNTER++,
        'INV_SUPER_DIVING_SUIT': COUNTER++,
        'CRAFT_SUPER_DIVING_SUIT': COUNTER++,
        'CHEST_SUPER_DIVING_SUIT': COUNTER++,
        'INV_DIVING_MASK': COUNTER++,
        'CRAFT_DIVING_MASK': COUNTER++,
        'CHEST_DIVING_MASK': COUNTER++,
        'INV_WATERING_CAN_FULL': COUNTER++,
        'CHEST_WATERING_CAN_FULL': COUNTER++,
        'CRAFT_WATERING_CAN_FULL': COUNTER++,
        'WINDMILL_CASES': COUNTER++,
        'EXTRACTOR_CASES': COUNTER++,
        'WINDMILL_WHEAT_SEED': COUNTER++,
        'WINDMILL_FLOUR': COUNTER++,
        'INV_CAKE': COUNTER++,
        'CRAFT_CAKE': COUNTER++,
        'CHEST_CAKE': COUNTER++,
        'INV_FOODFISH': COUNTER++,
        'CHEST_FOODFISH': COUNTER++,
        'INV_FOODFISH_COOKED': COUNTER++,
        'CHEST_FOODFISH_COOKED': COUNTER++,
        'CRAFT_FOODFISH_COOKED': COUNTER++,
        'DELAY_DRINK': COUNTER++,
        'WHEAT_SEED_DRIED': COUNTER++,
        'HEART_SYMBOL_HUD': COUNTER++,
        'COLD_SYMBOL_HUD': COUNTER++,
        'FOOD_SYMBOL_HUD': COUNTER++,
        'WATER_SYMBOL_HUD': COUNTER++,
        'PIRANHA': COUNTER++,
        'INV_SCALES': COUNTER++,
        'CHEST_SCALES': COUNTER++,
        'CAVE_STONES': COUNTER++,
        'HERB_CAVE': COUNTER++,
        'WATERBLOCK': COUNTER++,
        'SHADOW_CAVE_STONES': COUNTER++,
        'CAVE_STEP': COUNTER++,
        'DELAY_SPIKE': COUNTER++,
        'CHEST_GROUND': COUNTER++,
        'CHEST_PLOT': COUNTER++,
        'CRAFT_PLOT': COUNTER++,
        'INV_PLOT': COUNTER++,
        'CHEST_ICE': COUNTER++,
        'HURT_KRAKEN': COUNTER++,
        'HURT_PIRANHA': COUNTER++,
        'CHEST_BREAD': COUNTER++,
        'CRAFT_BREAD': COUNTER++,
        'TREASURE_CHEST': COUNTER++,
        'ISLAND': COUNTER++,
        'PALM': COUNTER++,
        'WAVE_ONE': COUNTER++,
        'WAVE_TWO': COUNTER++,
        'ISLAND_BLOCK': COUNTER++,
        'HURT_TREASURE_CHEST': COUNTER++,
        'ISLAND_STEP': COUNTER++,
        'INV_SHOVEL_GOLD': COUNTER++,
        'CRAFT_SHOVEL_GOLD': COUNTER++,
        'CHEST_SHOVEL_GOLD': COUNTER++,
        'INV_SHOVEL_DIAMOND': COUNTER++,
        'CHEST_SHOVEL_DIAMOND': COUNTER++,
        'CRAFT_SHOVEL_DIAMOND': COUNTER++,
        'INV_SHOVEL_AMETHYST': COUNTER++,
        'CRAFT_SHOVEL_AMETHYST': COUNTER++,
        'CHEST_SHOVEL_AMETHYST': COUNTER++,
        'RECIPE_BUTTON': COUNTER++,
        'INV_SPANNER': COUNTER++,
        'CHEST_SPANNER': COUNTER++,
        'CRAFT_SPANNER': COUNTER++,
        'INV_MACHETE': COUNTER++,
        'CHEST_MACHETE': COUNTER++,
        'CRAFT_MACHETE': COUNTER++,
        'CRAFT_BOTTLE_FULL': COUNTER++,
        'BREAD_OVEN_ON': COUNTER++,
        'INV_BREAD_OVEN': COUNTER++,
        'CRAFT_BREAD_OVEN': COUNTER++,
        'CHEST_BREAD_OVEN': COUNTER++,
        'BREAD_LIGHT_UP': COUNTER++,
        'BREAD_LIGHT_DOWN': COUNTER++,
        'BREAD_OVEN_UI': COUNTER++,
        'BREAD_OVEN_WOOD': COUNTER++,
        'BREAD_OVEN_BREAD': COUNTER++,
        'CLOCK': COUNTER++,
        'ARROW_CLOCK': COUNTER++,
        'OPTION_BUTTON': COUNTER++,
        'DEAD_BOX': COUNTER++,
        'HURT_DEAD_BOX': COUNTER++,
        'CRAFT_SANDWICH': COUNTER++,
        'CHEST_SANDWICH': COUNTER++,
        'INV_DRAGON_HELMET': COUNTER++,
        'CHEST_DRAGON_HELMET': COUNTER++,
        'CRAFT_DRAGON_HELMET': COUNTER++,
        'INV_LAVA_HELMET': COUNTER++,
        'CHEST_LAVA_HELMET': COUNTER++,
        'CRAFT_LAVA_HELMET': COUNTER++,
        'INV_WITCH': COUNTER++,
        'CHEST_WITCH': COUNTER++,
        'CRAFT_WITCH': COUNTER++,
        'INV_NIMBUS': COUNTER++,
        'CHEST_NIMBUS': COUNTER++,
        'CRAFT_NIMBUS': COUNTER++,
        'INV_WAND1': COUNTER++,
        'CHEST_WAND1': COUNTER++,
        'CRAFT_WAND1': COUNTER++,
        'INV_WAND2': COUNTER++,
        'CHEST_WAND2': COUNTER++,
        'CRAFT_WAND2': COUNTER++,
        'DRAGON_SWORD_HALO': COUNTER++,
        'INV_DRAGON_CUBE': COUNTER++,
        'CHEST_DRAGON_CUBE': COUNTER++,
        'INV_LAVA_CUBE': COUNTER++,
        'CHEST_LAVA_CUBE': COUNTER++,
        'QUEST_BUTTON': COUNTER++,
        'INV_CROWN_GREEN': COUNTER++,
        'CHEST_CROWN_GREEN': COUNTER++,
        'CRAFT_CROWN_GREEN': COUNTER++,
        'CHEST_GEMME_GREEN': COUNTER++,
        'INV_CROWN_ORANGE': COUNTER++,
        'CHEST_CROWN_ORANGE': COUNTER++,
        'CRAFT_CROWN_ORANGE': COUNTER++,
        'CHEST_GEMME_ORANGE': COUNTER++,
        'INV_CROWN_BLUE': COUNTER++,
        'CHEST_CROWN_BLUE': COUNTER++,
        'CHEST_GEMME_BLUE': COUNTER++,
        'INV_HOOD': COUNTER++,
        'CRAFT_HOOD': COUNTER++,
        'CHEST_HOOD': COUNTER++,
        'CRAFT_CROWN_BLUE': COUNTER++,
        'INV_PEASANT': COUNTER++,
        'CRAFT_PEASANT': COUNTER++,
        'CHEST_PEASANT': COUNTER++,
        'CHEST_SPECIAL_FUR': COUNTER++,
        'CHEST_SPECIAL_FUR_2': COUNTER++,
        'INV_WINTER_PEASANT': COUNTER++,
        'CRAFT_WINTER_PEASANT': COUNTER++,
        'CHEST_WINTER_PEASANT': COUNTER++,
        'INV_WINTER_HOOD': COUNTER++,
        'CRAFT_WINTER_HOOD': COUNTER++,
        'CHEST_WINTER_HOOD': COUNTER++,
        'SOUND_BUTTON_ON': COUNTER++,
        'SOUND_BUTTON_OFF': COUNTER++,
        'CRAFT_BUCKET_FULL': COUNTER++,
        'CRAFT_BUCKET_EMPTY': COUNTER++,
        'CHEST_BUCKET_FULL': COUNTER++,
        'CHEST_BUCKET_EMPTY': COUNTER++,
        'WELL_FULL': COUNTER++,
        'INV_WELL': COUNTER++,
        'CHEST_WELL': COUNTER++,
        'CRAFT_WELL': COUNTER++,
        'DELAY_HELMET': COUNTER++,
        'GLOVES_HOOD': COUNTER++,
        'DELAY_WALL': COUNTER++,
        'MARKET_BUTTON': COUNTER++,
        'ACCESSORY': COUNTER++,
        'MARKET_BGD': COUNTER++,
        'DEAD_BOX_UI': COUNTER++,
        'CRAFT_SIGN': COUNTER++,
        'INV_SIGN': COUNTER++,
        'CHEST_SIGN': COUNTER++,
        'SYMBOLS': COUNTER++,
        'SIGN_BUTTON': COUNTER++,
        'TREE_WEB1': COUNTER++,
        'TREE_WEB2': COUNTER++,
        'TREE_BRANCH_WEB1': COUNTER++,
        'TREE_BRANCH_WEB2': COUNTER++,
        'INV_PUMPKIN_SEED': COUNTER++,
        'CRAFT_PUMPKIN_SEED': COUNTER++,
        'CHEST_PUMPKIN_SEED': COUNTER++,
        'PUMPKIN_SEED_MOB': COUNTER++,
        'PLANT_PUMPKIN_DRIED': COUNTER++,
        'DRIED_PUMPKIN': COUNTER++,
        'INV_PUMPKIN': COUNTER++,
        'CHEST_PUMPKIN': COUNTER++,
        'HALO_FIRE_PUMPKIN': COUNTER++,
        'GROUND_FIRE_PUMPKIN': COUNTER++,
        'MINIMAP_CTX': COUNTER++,
        'BIGMAP_CTX': COUNTER++,
        'ZOMBIE_BODY': COUNTER++,
        'ZOMBIE_HEAD': COUNTER++,
        'ZOMBIE_HAND': COUNTER++,
        'ZOMBIE_HURT': COUNTER++,
        'ZOMBIE_HUNGER': COUNTER++,
        'ZOMBIE_HEAL': COUNTER++,
        'INV_WOOD_HELMET': COUNTER++,
        'CRAFT_WOOD_HELMET': COUNTER++,
        'CHEST_WOOD_HELMET': COUNTER++,
        'INV_SWORD_WOOD': COUNTER++,
        'CRAFT_SWORD_WOOD': COUNTER++,
        'CHEST_SWORD_WOOD': COUNTER++,
        'ZOMBIE_PLAYER': COUNTER++,
        'VAMPIRE': COUNTER++,
        'INV_GARLIC_SEED': COUNTER++,
        'CRAFT_GARLIC_SEED': COUNTER++,
        'CHEST_GARLIC_SEED': COUNTER++,
        'GARLIC_SEED_MOB': COUNTER++,
        'PLANT_GARLIC_DRIED': COUNTER++,
        'DRIED_GARLIC': COUNTER++,
        'INV_GARLIC': COUNTER++,
        'CHEST_GARLIC': COUNTER++,
        'INV_ROOF': COUNTER++,
        'CRAFT_ROOF': COUNTER++,
        'CHEST_ROOF': COUNTER++,
        'INV_THORNBUSH_SEED': COUNTER++,
        'CRAFT_THORNBUSH_SEED': COUNTER++,
        'CHEST_THORNBUSH_SEED': COUNTER++,
        'THORNBUSH_SEED_MOB': COUNTER++,
        'PLANT_THORNBUSH_DRIED': COUNTER++,
        'INV_THORNBUSH': COUNTER++,
        'CHEST_THORNBUSH': COUNTER++,
        'CRAFT_THORNBUSH': COUNTER++,
        'ROOFS': COUNTER++,
        'GIFT': COUNTER++,
        'TREE_SNOW1': COUNTER++,
        'TREE_SNOW2': COUNTER++,
        'TREE_BRANCH_SNOW1': COUNTER++,
        'TREE_BRANCH_SNOW2': COUNTER++,
        'HURT_GIFT': COUNTER++,
        'INV_PIRATE_SWORD': COUNTER++,
        'CRAFT_PIRATE_SWORD': COUNTER++,
        'CHEST_PIRATE_SWORD': COUNTER++,
        'CHEST_SUGAR_CAN': COUNTER++,
        'CRAFT_SUGAR_CAN': COUNTER++,
        'INV_SUGAR_CAN': COUNTER++,
        'INV_FERRERO': COUNTER++,
        'CHEST_FERRERO': COUNTER++,
        'CHEST_CANDY': COUNTER++,
        'DRIED_THORNBUSH': COUNTER++,
        'INV_GARLAND': COUNTER++,
        'CHEST_GARLAND': COUNTER++,
        'GARLANDS': COUNTER++,
        'GARLANDS_LIGHT': COUNTER++,
        'INV_DRAGON_SPEAR': COUNTER++,
        'CHEST_DRAGON_SPEAR': COUNTER++,
        'CRAFT_DRAGON_SPEAR': COUNTER++,
        'INV_LAVA_SPEAR': COUNTER++,
        'CHEST_LAVA_SPEAR': COUNTER++,
        'CRAFT_LAVA_SPEAR': COUNTER++,
        'INV_CHRISTMAS_HAT': COUNTER++,
        'CHEST_CHRISTMAS_HAT': COUNTER++,
        'INV_ELF_HAT': COUNTER++,
        'CHEST_ELF_HAT': COUNTER++,
        'ROBOT_SKIN': COUNTER++,
        'VERIFIED': COUNTER++,
        'CRAB_ATTACK': COUNTER++,
        'CRAB': COUNTER++,
        'HURT_CRAB': COUNTER++,
        'HURT_CRAB_CLAW_LEFT': COUNTER++,
        'HURT_CRAB_CLAW_RIGHT': COUNTER++,
        'HEAL_CRAB': COUNTER++,
        'HEAL_CRAB_CLAW_LEFT': COUNTER++,
        'HEAL_CRAB_CLAW_RIGHT': COUNTER++,
        'CRAB_CLAW_LEFT': COUNTER++,
        'CRAB_CLAW_RIGHT': COUNTER++,
        'CRAB_CLAW_LEFT_ATTACK': COUNTER++,
        'CRAB_CLAW_RIGHT_ATTACK': COUNTER++,
        'CHEST_CRAB_STICK': COUNTER++,
        'CHEST_CRAB_SPEAR': COUNTER++,
        'CRAFT_CRAB_SPEAR': COUNTER++,
        'INV_CRAB_SPEAR': COUNTER++,
        'FISH1': COUNTER++,
        'FISH2': COUNTER++,
        'HURT_FISH1': COUNTER++,
        'HURT_FISH2': COUNTER++,
        'CHEST_CRAB_LOOT': COUNTER++,
        'INV_BED': COUNTER++,
        'CHEST_BED': COUNTER++,
        'CRAFT_BED': COUNTER++,
        'INV_CROWN_CRAB': COUNTER++,
        'CHEST_CROWN_CRAB': COUNTER++,
        'CRAFT_CROWN_CRAB': COUNTER++,
        'BED_TOP': COUNTER++,
        'HURT_RABBIT_SKIN': COUNTER++,
        'COLD_RABBIT_SKIN': COUNTER++,
        'HUNGER_RABBIT_SKIN': COUNTER++,
        'HEAL_RABBIT_SKIN': COUNTER++,
        'FIRE_MOB': COUNTER++,
        'HURT_FIRE_MOB': COUNTER++,
        'GLOVES_DIAMOND_PROTECTION': COUNTER++,
        'INV_DIAMOND_PROTECTION': COUNTER++,
        'CRAFT_DIAMOND_PROTECTION': COUNTER++,
        'CHEST_DIAMOND_PROTECTION': COUNTER++,
        'GLOVES_AMETHYST_PROTECTION': COUNTER++,
        'INV_AMETHYST_PROTECTION': COUNTER++,
        'CRAFT_AMETHYST_PROTECTION': COUNTER++,
        'CHEST_AMETHYST_PROTECTION': COUNTER++,
        'GLOVES_REIDITE_PROTECTION': COUNTER++,
        'INV_REIDITE_PROTECTION': COUNTER++,
        'CRAFT_REIDITE_PROTECTION': COUNTER++,
        'CHEST_REIDITE_PROTECTION': COUNTER++,
        'INV_REIDITE_SWORD': COUNTER++,
        'CRAFT_REIDITE_SWORD': COUNTER++,
        'CHEST_REIDITE_SWORD': COUNTER++,
        'LAVA_SHINGLE': COUNTER++,
        'INV_FLAME': COUNTER++,
        'CHEST_FLAME': COUNTER++,
        'INV_REIDITE': COUNTER++,
        'CHEST_REIDITE': COUNTER++,
        'HERB_LAVA': COUNTER++,
        'LAVA_BUBBLE': COUNTER++,
        'ASHES': COUNTER++,
        'INV_REIDITE_SPEAR': COUNTER++,
        'CRAFT_REIDITE_SPEAR': COUNTER++,
        'CHEST_REIDITE_SPEAR': COUNTER++,
        'INV_REIDITE_HELMET': COUNTER++,
        'CRAFT_REIDITE_HELMET': COUNTER++,
        'CHEST_REIDITE_HELMET': COUNTER++,
        'INV_CARROT_SEED': COUNTER++,
        'CRAFT_CARROT_SEED': COUNTER++,
        'CHEST_CARROT_SEED': COUNTER++,
        'CARROT_SEED_MOB': COUNTER++,
        'PLANT_CARROT_DRIED': COUNTER++,
        'DRIED_CARROT': COUNTER++,
        'INV_CARROT': COUNTER++,
        'CHEST_CARROT': COUNTER++,
        'TOMATO_MINI': COUNTER++,
        'DRIED_TOMATO_MINI': COUNTER++,
        'INV_TOMATO_SEED': COUNTER++,
        'CRAFT_TOMATO_SEED': COUNTER++,
        'CHEST_TOMATO_SEED': COUNTER++,
        'TOMATO_SEED_MOB': COUNTER++,
        'PLANT_TOMATO_DRIED': COUNTER++,
        'DRIED_TOMATO': COUNTER++,
        'INV_TOMATO': COUNTER++,
        'INV_WATERMELON_SEED': COUNTER++,
        'CRAFT_WATERMELON_SEED': COUNTER++,
        'CHEST_WATERMELON_SEED': COUNTER++,
        'WATERMELON_SEED_MOB': COUNTER++,
        'PLANT_WATERMELON_DRIED': COUNTER++,
        'DRIED_WATERMELON': COUNTER++,
        'INV_WATERMELON': COUNTER++,
        'CHEST_WATERMELON': COUNTER++,
        'CHEST_TOMATO': COUNTER++,
        'INV_PITCHFORK': COUNTER++,
        'CHEST_PITCHFORK': COUNTER++,
        'CRAFT_PITCHFORK': COUNTER++,
        'INV_PITCHFORK2': COUNTER++,
        'CHEST_PITCHFORK2': COUNTER++,
        'CRAFT_PITCHFORK2': COUNTER++,
        'INV_ALOE_VERA_SEED': COUNTER++,
        'CRAFT_ALOE_VERA_SEED': COUNTER++,
        'CHEST_ALOE_VERA_SEED': COUNTER++,
        'ALOE_VERA_SEED_MOB': COUNTER++,
        'PLANT_ALOE_VERA_DRIED': COUNTER++,
        'DRIED_ALOE_VERA': COUNTER++,
        'INV_ALOE_VERA': COUNTER++,
        'CHEST_ALOE_VERA': COUNTER++,
        'CACTUS': COUNTER++,
        'CRAFT_WOOD_DOOR_SPIKE': COUNTER++,
        'INV_WOOD_DOOR_SPIKE': COUNTER++,
        'CHEST_WOOD_DOOR_SPIKE': COUNTER++,
        'CRAFT_STONE_DOOR_SPIKE': COUNTER++,
        'INV_STONE_DOOR_SPIKE': COUNTER++,
        'CHEST_STONE_DOOR_SPIKE': COUNTER++,
        'CRAFT_GOLD_DOOR_SPIKE': COUNTER++,
        'INV_GOLD_DOOR_SPIKE': COUNTER++,
        'CHEST_GOLD_DOOR_SPIKE': COUNTER++,
        'CRAFT_DIAMOND_DOOR_SPIKE': COUNTER++,
        'INV_DIAMOND_DOOR_SPIKE': COUNTER++,
        'CHEST_DIAMOND_DOOR_SPIKE': COUNTER++,
        'CRAFT_AMETHYST_DOOR_SPIKE': COUNTER++,
        'INV_AMETHYST_DOOR_SPIKE': COUNTER++,
        'CHEST_AMETHYST_DOOR_SPIKE': COUNTER++,
        'CRAFT_REIDITE_DOOR_SPIKE': COUNTER++,
        'INV_REIDITE_DOOR_SPIKE': COUNTER++,
        'CHEST_REIDITE_DOOR_SPIKE': COUNTER++,
        'CRAFT_REIDITE_DOOR': COUNTER++,
        'INV_REIDITE_DOOR': COUNTER++,
        'CHEST_REIDITE_DOOR': COUNTER++,
        'CRAFT_REIDITE_SPIKE': COUNTER++,
        'INV_REIDITE_SPIKE': COUNTER++,
        'CHEST_REIDITE_SPIKE': COUNTER++,
        'CRAFT_REIDITE_WALL': COUNTER++,
        'INV_REIDITE_WALL': COUNTER++,
        'CHEST_REIDITE_WALL': COUNTER++,
        'INV_PICK_REIDITE': COUNTER++,
        'CHEST_PICK_REIDITE': COUNTER++,
        'CRAFT_PICK_REIDITE': COUNTER++,
        'GOLDEN_HEN': COUNTER++,
        'GOLDEN_CHICKEN': COUNTER++,
        'HURT_GOLDEN_HEN': COUNTER++,
        'HURT_GOLDEN_CHICKEN': COUNTER++,
        'RIVER': COUNTER++,
        'RIVER_DECO': COUNTER++,
        'RIVER_WAVE': COUNTER++,
        'CRAFT_BOAT': COUNTER++,
        'INV_BOAT': COUNTER++,
        'CHEST_BOAT': COUNTER++,
        'CRAFT_SLED': COUNTER++,
        'INV_SLED': COUNTER++,
        'CHEST_SLED': COUNTER++,
        'PENGUIN': COUNTER++,
        'HURT_PENGUIN': COUNTER++,
        'INV_PENGUIN_FEATHER': COUNTER++,
        'CHEST_PENGUIN_FEATHER': COUNTER++,
        'INV_HAWK_FEATHER': COUNTER++,
        'CHEST_HAWK_FEATHER': COUNTER++,
        'INV_VULTURE_FEATHER': COUNTER++,
        'CHEST_VULTURE_FEATHER': COUNTER++,
        'FOG': COUNTER++,
        'BOAR': COUNTER++,
        'BOAR_TAMED': COUNTER++,
        'BOAR_ATTACK': COUNTER++,
        'HURT_BOAR': COUNTER++,
        'INV_SADDLE': COUNTER++,
        'CHEST_SADDLE': COUNTER++,
        'CRAFT_SADDLE': COUNTER++,
        'INV_MOUNT_BOAR': COUNTER++,
        'CHEST_MOUNT_BOAR': COUNTER++,
        'CRAFT_MOUNT_BOAR': COUNTER++,
        'MARKER': COUNTER++,
        'CRAB_BOSS_ATTACK': COUNTER++,
        'CRAB_BOSS': COUNTER++,
        'CRAB_BOSS_TAMED': COUNTER++,
        'HURT_CRAB_BOSS': COUNTER++,
        'HURT_CRAB_BOSS_CLAW_LEFT': COUNTER++,
        'HURT_CRAB_BOSS_CLAW_RIGHT': COUNTER++,
        'CRAB_BOSS_CLAW_LEFT_ATTACK': COUNTER++,
        'CRAB_BOSS_CLAW_LEFT': COUNTER++,
        'CRAB_BOSS_CLAW_LEFT_TAMED': COUNTER++,
        'CRAB_BOSS_CLAW_RIGHT_ATTACK': COUNTER++,
        'CRAB_BOSS_CLAW_RIGHT': COUNTER++,
        'CRAB_BOSS_CLAW_RIGHT_TAMED': COUNTER++,
        'HEAL_CRAB_BOSS': COUNTER++,
        'HEAL_CRAB_BOSS_CLAW_LEFT': COUNTER++,
        'HEAL_CRAB_BOSS_CLAW_RIGHT': COUNTER++,
        'BABY_DRAGON_ATTACK': COUNTER++,
        'BABY_DRAGON': COUNTER++,
        'BABY_DRAGON_TAMED': COUNTER++,
        'BABY_DRAGON_WING_LEFT_ATTACK': COUNTER++,
        'BABY_DRAGON_WING_LEFT': COUNTER++,
        'BABY_DRAGON_WING_LEFT_TAMED': COUNTER++,
        'BABY_DRAGON_WING_RIGHT_ATTACK': COUNTER++,
        'BABY_DRAGON_WING_RIGHT': COUNTER++,
        'BABY_DRAGON_WING_RIGHT_TAMED': COUNTER++,
        'HURT_BABY_DRAGON': COUNTER++,
        'HURT_BABY_DRAGON_WING_LEFT': COUNTER++,
        'HURT_BABY_DRAGON_WING_RIGHT': COUNTER++,
        'INV_BABY_DRAGON': COUNTER++,
        'CHEST_BABY_DRAGON': COUNTER++,
        'CRAFT_BABY_DRAGON': COUNTER++,
        'BABY_LAVA_ATTACK': COUNTER++,
        'BABY_LAVA': COUNTER++,
        'BABY_LAVA_TAMED': COUNTER++,
        'BABY_LAVA_WING_LEFT_ATTACK': COUNTER++,
        'BABY_LAVA_WING_LEFT': COUNTER++,
        'BABY_LAVA_WING_LEFT_TAMED': COUNTER++,
        'BABY_LAVA_WING_RIGHT_ATTACK': COUNTER++,
        'BABY_LAVA_WING_RIGHT': COUNTER++,
        'BABY_LAVA_WING_RIGHT_TAMED': COUNTER++,
        'HURT_BABY_LAVA': COUNTER++,
        'HURT_BABY_LAVA_WING_LEFT': COUNTER++,
        'HURT_BABY_LAVA_WING_RIGHT': COUNTER++,
        'INV_BABY_LAVA': COUNTER++,
        'CHEST_BABY_LAVA': COUNTER++,
        'CRAFT_BABY_LAVA': COUNTER++,
        'HAWK_ATTACK': COUNTER++,
        'HAWK': COUNTER++,
        'HAWK_TAMED': COUNTER++,
        'HAWK_WING_LEFT_ATTACK': COUNTER++,
        'HAWK_WING_LEFT': COUNTER++,
        'HAWK_WING_LEFT_TAMED': COUNTER++,
        'HAWK_WING_RIGHT_ATTACK': COUNTER++,
        'HAWK_WING_RIGHT': COUNTER++,
        'HAWK_WING_RIGHT_TAMED': COUNTER++,
        'HURT_HAWK': COUNTER++,
        'HURT_HAWK_WING_LEFT': COUNTER++,
        'HURT_HAWK_WING_RIGHT': COUNTER++,
        'INV_HAWK': COUNTER++,
        'CHEST_HAWK': COUNTER++,
        'CRAFT_HAWK': COUNTER++,
        'HAWK_GROUND': COUNTER++,
        'HAWK_GROUND_ATTACK': COUNTER++,
        'HURT_HAWK_GROUND': COUNTER++,
        'CRAFT_PLANE': COUNTER++,
        'INV_PLANE': COUNTER++,
        'CHEST_PLANE': COUNTER++,
        'VULTURE_ATTACK': COUNTER++,
        'VULTURE': COUNTER++,
        'VULTURE_TAMED': COUNTER++,
        'VULTURE_WING_LEFT_ATTACK': COUNTER++,
        'VULTURE_WING_LEFT': COUNTER++,
        'VULTURE_WING_LEFT_TAMED': COUNTER++,
        'VULTURE_WING_RIGHT_ATTACK': COUNTER++,
        'VULTURE_WING_RIGHT': COUNTER++,
        'VULTURE_WING_RIGHT_TAMED': COUNTER++,
        'HURT_VULTURE': COUNTER++,
        'HURT_VULTURE_WING_LEFT': COUNTER++,
        'HURT_VULTURE_WING_RIGHT': COUNTER++,
        'INV_VULTURE': COUNTER++,
        'CHEST_VULTURE': COUNTER++,
        'CRAFT_VULTURE': COUNTER++,
        'VULTURE_GROUND': COUNTER++,
        'VULTURE_GROUND_ATTACK': COUNTER++,
        'HURT_VULTURE_GROUND': COUNTER++,
        'INV_TURBAN1': COUNTER++,
        'CRAFT_TURBAN1': COUNTER++,
        'CHEST_TURBAN1': COUNTER++,
        'INV_TURBAN2': COUNTER++,
        'CRAFT_TURBAN2': COUNTER++,
        'CHEST_TURBAN2': COUNTER++,
        'SCORPION': COUNTER++,
        'HURT_SCORPION': COUNTER++,
        'SCORPION_HAND_LEFT': COUNTER++,
        'SCORPION_HAND_RIGHT': COUNTER++,
        'HURT_SCORPION_HAND_LEFT': COUNTER++,
        'HURT_SCORPION_HAND_RIGHT': COUNTER++,
        'SAND_WORM_GROUND': ['#E9CF96', '#144940'],
        'HURT_SAND_WORM0': COUNTER++,
        'SAND_WORM1': COUNTER++,
        'HURT_SAND_WORM1': COUNTER++,
        'SAND_WORM2': COUNTER++,
        'HURT_SAND_WORM2': COUNTER++,
        'INV_CACTUS': COUNTER++,
        'CHEST_CACTUS': COUNTER++,
        'INV_EMERALD': COUNTER++,
        'CHEST_EMERALD': COUNTER++,
        'INV_PITCHFORK_PART': COUNTER++,
        'CHEST_PITCHFORK_PART': COUNTER++,
        'INV_PILOT_GLASSES': COUNTER++,
        'CHEST_PILOT_GLASSES': COUNTER++,
        'INV_FUR_BOAR': COUNTER++,
        'CHEST_FUR_BOAR': COUNTER++,
        'INV_FIREFLY': COUNTER++,
        'CHEST_FIREFLY': COUNTER++,
        'INV_WOOD_ARROW': COUNTER++,
        'CHEST_WOOD_ARROW': COUNTER++,
        'CRAFT_WOOD_ARROW': COUNTER++,
        'INV_STONE_ARROW': COUNTER++,
        'CHEST_STONE_ARROW': COUNTER++,
        'CRAFT_STONE_ARROW': COUNTER++,
        'INV_GOLD_ARROW': COUNTER++,
        'CHEST_GOLD_ARROW': COUNTER++,
        'CRAFT_GOLD_ARROW': COUNTER++,
        'INV_DIAMOND_ARROW': COUNTER++,
        'CHEST_DIAMOND_ARROW': COUNTER++,
        'CRAFT_DIAMOND_ARROW': COUNTER++,
        'INV_AMETHYST_ARROW': COUNTER++,
        'CHEST_AMETHYST_ARROW': COUNTER++,
        'CRAFT_AMETHYST_ARROW': COUNTER++,
        'INV_REIDITE_ARROW': COUNTER++,
        'CHEST_REIDITE_ARROW': COUNTER++,
        'CRAFT_REIDITE_ARROW': COUNTER++,
        'INV_DRAGON_ARROW': COUNTER++,
        'CHEST_DRAGON_ARROW': COUNTER++,
        'CRAFT_DRAGON_ARROW': COUNTER++,
        'INV_SANDWORM_JUICE': COUNTER++,
        'CHEST_SANDWORM_JUICE': COUNTER++,
        'INV_CRAB_BOSS': COUNTER++,
        'CHEST_CRAB_BOSS': COUNTER++,
        'CRAFT_CRAB_BOSS': COUNTER++,
        'EMERALD_MACHINE_GROUND': COUNTER++,
        'EMERALD_MACHINE_HOLE': COUNTER++,
        'EMERALD_MACHINE_ROTATE': COUNTER++,
        'INV_EMERALD_MACHINE': COUNTER++,
        'CRAFT_EMERALD_MACHINE': COUNTER++,
        'CHEST_EMERALD_MACHINE': COUNTER++,
        'EXTRACTOR_MACHINE0_STONE': COUNTER++,
        'INV_EXTRACTOR_MACHINE_STONE': COUNTER++,
        'CRAFT_EXTRACTOR_MACHINE_STONE': COUNTER++,
        'CHEST_EXTRACTOR_MACHINE_STONE': COUNTER++,
        'EXTRACTOR_MACHINE0_GOLD': COUNTER++,
        'INV_EXTRACTOR_MACHINE_GOLD': COUNTER++,
        'CRAFT_EXTRACTOR_MACHINE_GOLD': COUNTER++,
        'CHEST_EXTRACTOR_MACHINE_GOLD': COUNTER++,
        'EXTRACTOR_MACHINE0_DIAMOND': COUNTER++,
        'INV_EXTRACTOR_MACHINE_DIAMOND': COUNTER++,
        'CRAFT_EXTRACTOR_MACHINE_DIAMOND': COUNTER++,
        'CHEST_EXTRACTOR_MACHINE_DIAMOND': COUNTER++,
        'EXTRACTOR_MACHINE0_AMETHYST': COUNTER++,
        'INV_EXTRACTOR_MACHINE_AMETHYST': COUNTER++,
        'CRAFT_EXTRACTOR_MACHINE_AMETHYST': COUNTER++,
        'CHEST_EXTRACTOR_MACHINE_AMETHYST': COUNTER++,
        'EXTRACTOR_MACHINE0_REIDITE': COUNTER++,
        'INV_EXTRACTOR_MACHINE_REIDITE': COUNTER++,
        'CRAFT_EXTRACTOR_MACHINE_REIDITE': COUNTER++,
        'CHEST_EXTRACTOR_MACHINE_REIDITE': COUNTER++,
        'MAMMOTH': COUNTER++,
        'HURT_MAMMOTH': COUNTER++,
        'BABY_MAMMOTH': COUNTER++,
        'BABY_MAMMOTH_TAMED': COUNTER++,
        'BABY_MAMMOTH_ATTACK': COUNTER++,
        'HURT_BABY_MAMMOTH': COUNTER++,
        'INV_BABY_MAMMOTH': COUNTER++,
        'CHEST_BABY_MAMMOTH': COUNTER++,
        'CRAFT_BABY_MAMMOTH': COUNTER++,
        'INV_FLOWER_HAT': COUNTER++,
        'CRAFT_FLOWER_HAT': COUNTER++,
        'CHEST_FLOWER_HAT': COUNTER++,
        'INV_FUR_HAT': COUNTER++,
        'CRAFT_FUR_HAT': COUNTER++,
        'CHEST_FUR_HAT': COUNTER++,
        'INV_FUR_MAMMOTH': COUNTER++,
        'CHEST_FUR_MAMMOTH': COUNTER++,
        'CRAFT_WOOD_TOWER': COUNTER++,
        'INV_WOOD_TOWER': COUNTER++,
        'CHEST_WOOD_TOWER': COUNTER++,
        'CRAFT_WOOD_SHIELD': COUNTER++,
        'INV_WOOD_SHIELD': COUNTER++,
        'CHEST_WOOD_SHIELD': COUNTER++,
        'CRAFT_STONE_SHIELD': COUNTER++,
        'INV_STONE_SHIELD': COUNTER++,
        'CHEST_STONE_SHIELD': COUNTER++,
        'CRAFT_GOLD_SHIELD': COUNTER++,
        'INV_GOLD_SHIELD': COUNTER++,
        'CHEST_GOLD_SHIELD': COUNTER++,
        'CRAFT_DIAMOND_SHIELD': COUNTER++,
        'INV_DIAMOND_SHIELD': COUNTER++,
        'CHEST_DIAMOND_SHIELD': COUNTER++,
        'CRAFT_AMETHYST_SHIELD': COUNTER++,
        'INV_AMETHYST_SHIELD': COUNTER++,
        'CHEST_AMETHYST_SHIELD': COUNTER++,
        'CRAFT_REIDITE_SHIELD': COUNTER++,
        'INV_REIDITE_SHIELD': COUNTER++,
        'CHEST_REIDITE_SHIELD': COUNTER++
    },
    COUNTER = 0x0,
    CRAFT = {
        'FIRE': COUNTER++,
        'BIG_FIRE': COUNTER++,
        'FURNACE': COUNTER++,
        'WORKBENCH': COUNTER++,
        'PICK_WOOD': COUNTER++,
        'PICK': COUNTER++,
        'PICK_GOLD': COUNTER++,
        'PICK_DIAMOND': COUNTER++,
        'PICK_AMETHYST': COUNTER++,
        'PICK_REIDITE': COUNTER++,
        'HAMMER': COUNTER++,
        'HAMMER_GOLD': COUNTER++,
        'HAMMER_DIAMOND': COUNTER++,
        'HAMMER_AMETHYST': COUNTER++,
        'HAMMER_REIDITE': COUNTER++,
        'SUPER_HAMMER': COUNTER++,
        'SHOVEL': COUNTER++,
        'SHOVEL_GOLD': COUNTER++,
        'SHOVEL_DIAMOND': COUNTER++,
        'SHOVEL_AMETHYST': COUNTER++,
        'WATERING_CAN': COUNTER++,
        'WATERING_CAN_FULL': COUNTER++,
        'PITCHFORK': COUNTER++,
        'PITCHFORK2': COUNTER++,
        'BOOK': COUNTER++,
        'WOOD_SPEAR': COUNTER++,
        'SPEAR': COUNTER++,
        'GOLD_SPEAR': COUNTER++,
        'DIAMOND_SPEAR': COUNTER++,
        'AMETHYST_SPEAR': COUNTER++,
        'REIDITE_SPEAR': COUNTER++,
        'DRAGON_SPEAR': COUNTER++,
        'LAVA_SPEAR': COUNTER++,
        'CRAB_SPEAR': COUNTER++,
        'SWORD_WOOD': COUNTER++,
        'SWORD': COUNTER++,
        'SWORD_GOLD': COUNTER++,
        'SWORD_DIAMOND': COUNTER++,
        'SWORD_AMETHYST': COUNTER++,
        'REIDITE_SWORD': COUNTER++,
        'SEED': COUNTER++,
        'WHEAT_SEED': COUNTER++,
        'PUMPKIN_SEED': COUNTER++,
        'GARLIC_SEED': COUNTER++,
        'THORNBUSH_SEED': COUNTER++,
        'CARROT_SEED': COUNTER++,
        'TOMATO_SEED': COUNTER++,
        'WATERMELON_SEED': COUNTER++,
        'ALOE_VERA_SEED': COUNTER++,
        'COOKED_MEAT': COUNTER++,
        'FOODFISH_COOKED': COUNTER++,
        'BREAD': COUNTER++,
        'COOKIE': COUNTER++,
        'CAKE': COUNTER++,
        'BANDAGE': COUNTER++,
        'WALL': COUNTER++,
        'STONE_WALL': COUNTER++,
        'GOLD_WALL': COUNTER++,
        'DIAMOND_WALL': COUNTER++,
        'AMETHYST_WALL': COUNTER++,
        'REIDITE_WALL': COUNTER++,
        'WOOD_DOOR': COUNTER++,
        'STONE_DOOR': COUNTER++,
        'GOLD_DOOR': COUNTER++,
        'DIAMOND_DOOR': COUNTER++,
        'AMETHYST_DOOR': COUNTER++,
        'REIDITE_DOOR': COUNTER++,
        'SPIKE': COUNTER++,
        'STONE_SPIKE': COUNTER++,
        'GOLD_SPIKE': COUNTER++,
        'DIAMOND_SPIKE': COUNTER++,
        'AMETHYST_SPIKE': COUNTER++,
        'REIDITE_SPIKE': COUNTER++,
        'WOOD_DOOR_SPIKE': COUNTER++,
        'STONE_DOOR_SPIKE': COUNTER++,
        'GOLD_DOOR_SPIKE': COUNTER++,
        'DIAMOND_DOOR_SPIKE': COUNTER++,
        'AMETHYST_DOOR_SPIKE': COUNTER++,
        'REIDITE_DOOR_SPIKE': COUNTER++,
        'CHEST': COUNTER++,
        'EXPLORER_HAT': COUNTER++,
        'PIRATE_HAT': COUNTER++,
        'PILOT_HELMET': COUNTER++,
        'EARMUFFS': COUNTER++,
        'COAT': COUNTER++,
        'CAP_SCARF': COUNTER++,
        'FUR_HAT': COUNTER++,
        'WOOD_HELMET': COUNTER++,
        'STONE_HELMET': COUNTER++,
        'GOLD_HELMET': COUNTER++,
        'DIAMOND_HELMET': COUNTER++,
        'AMETHYST_HELMET': COUNTER++,
        'REIDITE_HELMET': COUNTER++,
        'DIVING_MASK': COUNTER++,
        'SUPER_DIVING_SUIT': COUNTER++,
        'DIAMOND_PROTECTION': COUNTER++,
        'AMETHYST_PROTECTION': COUNTER++,
        'REIDITE_PROTECTION': COUNTER++,
        'TURBAN1': COUNTER++,
        'TURBAN2': COUNTER++,
        'BAG': COUNTER++,
        'PAPER': COUNTER++,
        'BLUE_CORD': COUNTER++,
        'LOCK': COUNTER++,
        'LOCKPICK': COUNTER++,
        'TOTEM': COUNTER++,
        'BRIDGE': COUNTER++,
        'ROOF': COUNTER++,
        'WOOD_TOWER': COUNTER++,
        'PLOT': COUNTER++,
        'BOTTLE_EMPTY': COUNTER++,
        'BOTTLE_FULL': COUNTER++,
        'BOTTLE_FULL_2': COUNTER++,
        'BOTTLE_FULL_3': COUNTER++,
        'WINDMILL': COUNTER++,
        'RESURRECTION': COUNTER++,
        'EMERALD_MACHINE': COUNTER++,
        'EXTRACTOR_MACHINE_STONE': COUNTER++,
        'EXTRACTOR_MACHINE_GOLD': COUNTER++,
        'EXTRACTOR_MACHINE_DIAMOND': COUNTER++,
        'EXTRACTOR_MACHINE_AMETHYST': COUNTER++,
        'EXTRACTOR_MACHINE_REIDITE': COUNTER++,
        'SPANNER': COUNTER++,
        'MACHETE': COUNTER++,
        'BREAD_OVEN': COUNTER++,
        'SANDWICH': COUNTER++,
        'DRAGON_HELMET': COUNTER++,
        'LAVA_HELMET': COUNTER++,
        'CROWN_CRAB': COUNTER++,
        'DRAGON_SWORD': COUNTER++,
        'LAVA_SWORD': COUNTER++,
        'WOOD_BOW': COUNTER++,
        'WOOD_ARROW': COUNTER++,
        'STONE_BOW': COUNTER++,
        'STONE_ARROW': COUNTER++,
        'GOLD_BOW': COUNTER++,
        'GOLD_ARROW': COUNTER++,
        'DIAMOND_BOW': COUNTER++,
        'DIAMOND_ARROW': COUNTER++,
        'AMETHYST_BOW': COUNTER++,
        'AMETHYST_ARROW': COUNTER++,
        'REIDITE_BOW': COUNTER++,
        'REIDITE_ARROW': COUNTER++,
        'DRAGON_BOW': COUNTER++,
        'DRAGON_ARROW': COUNTER++,
        'WOOD_SHIELD': COUNTER++,
        'STONE_SHIELD': COUNTER++,
        'GOLD_SHIELD': COUNTER++,
        'DIAMOND_SHIELD': COUNTER++,
        'AMETHYST_SHIELD': COUNTER++,
        'REIDITE_SHIELD': COUNTER++,
        'CROWN_GREEN': COUNTER++,
        'CROWN_ORANGE': COUNTER++,
        'CROWN_BLUE': COUNTER++,
        'HOOD': COUNTER++,
        'PEASANT': COUNTER++,
        'WINTER_HOOD': COUNTER++,
        'WINTER_PEASANT': COUNTER++,
        'BUCKET_FULL': COUNTER++,
        'BUCKET_EMPTY': COUNTER++,
        'WELL': COUNTER++,
        'SIGN': COUNTER++,
        'BED': COUNTER++,
        'BOAT': COUNTER++,
        'SLED': COUNTER++,
        'SADDLE': COUNTER++,
        'PLANE': COUNTER++,
        'WITCH': COUNTER++,
        'WAND1': COUNTER++,
        'WAND2': COUNTER++,
        'NIMBUS': COUNTER++
    },
    COUNTER = 0x0,
    INV = {
        'SWORD': COUNTER++,
        'PICK': COUNTER++,
        'FUR': COUNTER++,
        'PICK_GOLD': COUNTER++,
        'PICK_DIAMOND': COUNTER++,
        'SWORD_GOLD': COUNTER++,
        'SWORD_DIAMOND': COUNTER++,
        'HAND': COUNTER++,
        'PICK_WOOD': COUNTER++,
        'PIRATE_SWORD': COUNTER++,
        'EARMUFFS': COUNTER++,
        'COAT': COUNTER++,
        'WOOD_SPEAR': COUNTER++,
        'SPEAR': COUNTER++,
        'GOLD_SPEAR': COUNTER++,
        'DIAMOND_SPEAR': COUNTER++,
        'DRAGON_SPEAR': COUNTER++,
        'LAVA_SPEAR': COUNTER++,
        'CRAB_SPEAR': COUNTER++,
        'REIDITE_SWORD': COUNTER++,
        'DIAMOND_PROTECTION': COUNTER++,
        'AMETHYST_PROTECTION': COUNTER++,
        'REIDITE_PROTECTION': COUNTER++,
        'EXPLORER_HAT': COUNTER++,
        'PIRATE_HAT': COUNTER++,
        'STONE_HELMET': COUNTER++,
        'GOLD_HELMET': COUNTER++,
        'DIAMOND_HELMET': COUNTER++,
        'BOOK': COUNTER++,
        'BAG': COUNTER++,
        'SWORD_AMETHYST': COUNTER++,
        'PICK_AMETHYST': COUNTER++,
        'PICK_REIDITE': COUNTER++,
        'AMETHYST_SPEAR': COUNTER++,
        'REIDITE_SPEAR': COUNTER++,
        'HAMMER': COUNTER++,
        'HAMMER_GOLD': COUNTER++,
        'HAMMER_DIAMOND': COUNTER++,
        'HAMMER_AMETHYST': COUNTER++,
        'HAMMER_REIDITE': COUNTER++,
        'CAP_SCARF': COUNTER++,
        'CHRISTMAS_HAT': COUNTER++,
        'ELF_HAT': COUNTER++,
        'AMETHYST_HELMET': COUNTER++,
        'REIDITE_HELMET': COUNTER++,
        'SUPER_HAMMER': COUNTER++,
        'SHOVEL': COUNTER++,
        'SUPER_DIVING_SUIT': COUNTER++,
        'DIVING_MASK': COUNTER++,
        'WATERING_CAN_FULL': COUNTER++,
        'SHOVEL_GOLD': COUNTER++,
        'SHOVEL_DIAMOND': COUNTER++,
        'SHOVEL_AMETHYST': COUNTER++,
        'PITCHFORK': COUNTER++,
        'PITCHFORK2': COUNTER++,
        'SPANNER': COUNTER++,
        'MACHETE': COUNTER++,
        'SWORD_WOOD': COUNTER++,
        'WOOD_HELMET': COUNTER++,
        'DRAGON_HELMET': COUNTER++,
        'LAVA_HELMET': COUNTER++,
        'CROWN_CRAB': COUNTER++,
        'DRAGON_SWORD': COUNTER++,
        'LAVA_SWORD': COUNTER++,
        'WOOD_BOW': COUNTER++,
        'STONE_BOW': COUNTER++,
        'GOLD_BOW': COUNTER++,
        'DIAMOND_BOW': COUNTER++,
        'AMETHYST_BOW': COUNTER++,
        'REIDITE_BOW': COUNTER++,
        'DRAGON_BOW': COUNTER++,
        'WOOD_SHIELD': COUNTER++,
        'STONE_SHIELD': COUNTER++,
        'GOLD_SHIELD': COUNTER++,
        'DIAMOND_SHIELD': COUNTER++,
        'AMETHYST_SHIELD': COUNTER++,
        'REIDITE_SHIELD': COUNTER++,
        'CROWN_GREEN': COUNTER++,
        'CROWN_ORANGE': COUNTER++,
        'CROWN_BLUE': COUNTER++,
        'TURBAN1': COUNTER++,
        'TURBAN2': COUNTER++,
        'PILOT_HELMET': COUNTER++,
        'HOOD': COUNTER++,
        'PEASANT': COUNTER++,
        'WINTER_HOOD': COUNTER++,
        'WINTER_PEASANT': COUNTER++,
        'FLOWER_HAT': COUNTER++,
        'FUR_HAT': COUNTER++,
        'SADDLE': COUNTER++,
        'WITCH': COUNTER++,
        'NIMBUS': COUNTER++,
        'WAND1': COUNTER++,
        'WAND2': COUNTER++,
        'FIREFLY': COUNTER++,
        'WOOD_ARROW': COUNTER++,
        'STONE_ARROW': COUNTER++,
        'GOLD_ARROW': COUNTER++,
        'DIAMOND_ARROW': COUNTER++,
        'AMETHYST_ARROW': COUNTER++,
        'REIDITE_ARROW': COUNTER++,
        'DRAGON_ARROW': COUNTER++,
        'STONE': COUNTER++,
        'WOOD': COUNTER++,
        'PLANT': COUNTER++,
        'GOLD': COUNTER++,
        'DIAMOND': COUNTER++,
        'FIRE': COUNTER++,
        'WORKBENCH': COUNTER++,
        'SEED': COUNTER++,
        'MEAT': COUNTER++,
        'COOKED_MEAT': COUNTER++,
        'BIG_FIRE': COUNTER++,
        'FURNACE': COUNTER++,
        'PAPER': COUNTER++,
        'AMETHYST': COUNTER++,
        'AMETHYST_WALL': COUNTER++,
        'AMETHYST_SPIKE': COUNTER++,
        'AMETHYST_DOOR': COUNTER++,
        'BRIDGE': COUNTER++,
        'SAND': COUNTER++,
        'BOTTLE_FULL': COUNTER++,
        'BOTTLE_EMPTY': COUNTER++,
        'KRAKEN_SKIN': COUNTER++,
        'WATERING_CAN': COUNTER++,
        'FLOUR': COUNTER++,
        'WHEAT_SEED': COUNTER++,
        'COOKIE': COUNTER++,
        'WILD_WHEAT': COUNTER++,
        'WINDMILL': COUNTER++,
        'CAKE': COUNTER++,
        'FOODFISH': COUNTER++,
        'FOODFISH_COOKED': COUNTER++,
        'SCALES': COUNTER++,
        'GROUND': COUNTER++,
        'PLOT': COUNTER++,
        'ICE': COUNTER++,
        'BREAD': COUNTER++,
        'BREAD_OVEN': COUNTER++,
        'SANDWICH': COUNTER++,
        'FUR_WINTER': COUNTER++,
        'BLUE_CORD': COUNTER++,
        'LOCK': COUNTER++,
        'DRAGON_HEART': COUNTER++,
        'LAVA_HEART': COUNTER++,
        'RESURRECTION': COUNTER++,
        'EMERALD_MACHINE': COUNTER++,
        'EXTRACTOR_MACHINE_STONE': COUNTER++,
        'EXTRACTOR_MACHINE_GOLD': COUNTER++,
        'EXTRACTOR_MACHINE_DIAMOND': COUNTER++,
        'EXTRACTOR_MACHINE_AMETHYST': COUNTER++,
        'EXTRACTOR_MACHINE_REIDITE': COUNTER++,
        'LOCKPICK': COUNTER++,
        'TOTEM': COUNTER++,
        'SPIKE': COUNTER++,
        'CORD': COUNTER++,
        'WALL': COUNTER++,
        'STONE_WALL': COUNTER++,
        'GOLD_WALL': COUNTER++,
        'DIAMOND_WALL': COUNTER++,
        'WOOD_DOOR': COUNTER++,
        'CHEST': COUNTER++,
        'STONE_SPIKE': COUNTER++,
        'GOLD_SPIKE': COUNTER++,
        'DIAMOND_SPIKE': COUNTER++,
        'STONE_DOOR': COUNTER++,
        'GOLD_DOOR': COUNTER++,
        'DIAMOND_DOOR': COUNTER++,
        'FUR_WOLF': COUNTER++,
        'GEMME_GREEN': COUNTER++,
        'GEMME_ORANGE': COUNTER++,
        'GEMME_BLUE': COUNTER++,
        'SPECIAL_FUR': COUNTER++,
        'SPECIAL_FUR_2': COUNTER++,
        'BUCKET_FULL': COUNTER++,
        'BUCKET_EMPTY': COUNTER++,
        'WELL': COUNTER++,
        'SIGN': COUNTER++,
        'DRAGON_CUBE': COUNTER++,
        'DRAGON_ORB': COUNTER++,
        'LAVA_CUBE': COUNTER++,
        'LAVA_ORB': COUNTER++,
        'PUMPKIN_SEED': COUNTER++,
        'PUMPKIN': COUNTER++,
        'ROOF': COUNTER++,
        'GARLIC_SEED': COUNTER++,
        'GARLIC': COUNTER++,
        'THORNBUSH_SEED': COUNTER++,
        'THORNBUSH': COUNTER++,
        'BANDAGE': COUNTER++,
        'CRAB_STICK': COUNTER++,
        'CRAB_LOOT': COUNTER++,
        'BED': COUNTER++,
        'SUGAR_CAN': COUNTER++,
        'CANDY': COUNTER++,
        'GARLAND': COUNTER++,
        'REIDITE': COUNTER++,
        'FLAME': COUNTER++,
        'CARROT_SEED': COUNTER++,
        'CARROT': COUNTER++,
        'TOMATO_SEED': COUNTER++,
        'TOMATO': COUNTER++,
        'WATERMELON_SEED': COUNTER++,
        'WATERMELON': COUNTER++,
        'ALOE_VERA_SEED': COUNTER++,
        'ALOE_VERA': COUNTER++,
        'WOOD_DOOR_SPIKE': COUNTER++,
        'STONE_DOOR_SPIKE': COUNTER++,
        'GOLD_DOOR_SPIKE': COUNTER++,
        'DIAMOND_DOOR_SPIKE': COUNTER++,
        'AMETHYST_DOOR_SPIKE': COUNTER++,
        'REIDITE_WALL': COUNTER++,
        'REIDITE_DOOR': COUNTER++,
        'REIDITE_SPIKE': COUNTER++,
        'REIDITE_DOOR_SPIKE': COUNTER++,
        'WOOD_TOWER': COUNTER++,
        'PENGUIN_FEATHER': COUNTER++,
        'BOAT': COUNTER++,
        'SLED': COUNTER++,
        'MOUNT_BOAR': COUNTER++,
        'CRAB_BOSS': COUNTER++,
        'BABY_DRAGON': COUNTER++,
        'BABY_LAVA': COUNTER++,
        'HAWK': COUNTER++,
        'PLANE': COUNTER++,
        'HAWK_FEATHER': COUNTER++,
        'VULTURE_FEATHER': COUNTER++,
        'CACTUS': COUNTER++,
        'EMERALD': COUNTER++,
        'PITCHFORK_PART': COUNTER++,
        'PILOT_GLASSES': COUNTER++,
        'FUR_BOAR': COUNTER++,
        'SANDWORM_JUICE': COUNTER++,
        'BABY_MAMMOTH': COUNTER++,
        'FUR_MAMMOTH': COUNTER++
    },
    CATEGORY = {
        'TOOLS': 0x0,
        'WEAPONS': 0x1,
        'CLOTHES': 0x2,
        'FOODS': 0x3,
        'Utils': 0x4,
        'BASES': 0x5
    },
    INV_INFOS = [];
INV_INFOS[INV['WOOD']] = {
    'name': 'Wood',
    'img': SPRITE['INV_WOOD'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['STONE']] = {
    'name': 'Stone',
    'img': SPRITE['INV_STONE'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['GOLD']] = {
    'name': 'Gold',
    'img': SPRITE['INV_GOLD'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['DIAMOND']] = {
    'name': 'Diamond',
    'img': SPRITE['INV_DIAMOND'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['AMETHYST']] = {
    'name': 'Amethyst',
    'img': SPRITE['INV_AMETHYST'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['FUR']] = {
    'name': 'Rabbit\x20fur',
    'img': SPRITE['INV_FUR'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['FUR_WOLF']] = {
    'name': 'Wolf\x20fur',
    'img': SPRITE['INV_FUR_WOLF'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['FUR_BOAR']] = {
    'name': 'Boar\x20fur',
    'img': SPRITE['INV_FUR_BOAR'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['FIREFLY']] = {
    'name': 'Firefly',
    'img': SPRITE['INV_FIREFLY'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['WOOD_ARROW']] = {
    'name': 'Wood\x20arrow',
    'img': SPRITE['INV_WOOD_ARROW'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['STONE_ARROW']] = {
    'name': 'Stone\x20arrow',
    'img': SPRITE['INV_STONE_ARROW'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['GOLD_ARROW']] = {
    'name': 'Gold\x20arrow',
    'img': SPRITE['INV_GOLD_ARROW'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['DIAMOND_ARROW']] = {
    'name': 'Diamond\x20arrow',
    'img': SPRITE['INV_DIAMOND_ARROW'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['AMETHYST_ARROW']] = {
    'name': 'Amethyst\x20arrow',
    'img': SPRITE['INV_AMETHYST_ARROW'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['REIDITE_ARROW']] = {
    'name': 'Reidite\x20arrow',
    'img': SPRITE['INV_REIDITE_ARROW'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['DRAGON_ARROW']] = {
    'name': 'Dragon\x20arrow',
    'img': SPRITE['INV_DRAGON_ARROW'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['FUR_WINTER']] = {
    'name': 'Winter\x20fur',
    'img': SPRITE['INV_FUR_WINTER'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['FUR_MAMMOTH']] = {
    'name': 'Fur\x20mammoth',
    'img': SPRITE['INV_FUR_MAMMOTH'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['CORD']] = {
    'name': 'Web',
    'img': SPRITE['INV_CORD'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['MEAT']] = {
    'name': 'Meat',
    'img': SPRITE['INV_MEAT'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['FOODFISH']] = {
    'name': 'Fish',
    'img': SPRITE['INV_FOODFISH'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['KRAKEN_SKIN']] = {
    'name': 'Kraken\x20skin',
    'img': SPRITE['INV_KRAKEN_SKIN'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['SCALES']] = {
    'name': 'Piranha\x20scales',
    'img': SPRITE['INV_SCALES'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['ICE']] = {
    'name': 'Ice',
    'img': SPRITE['INV_ICE'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['SAND']] = {
    'name': 'Sand',
    'img': SPRITE['INV_SAND'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['GROUND']] = {
    'name': 'Dirt',
    'img': SPRITE['INV_GROUND'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['PLANT']] = {
    'name': 'Berrie',
    'img': SPRITE['INV_PLANT'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['FLOUR']] = {
    'name': 'Flour',
    'img': SPRITE['INV_FLOUR'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['WILD_WHEAT']] = {
    'name': 'Flour',
    'img': SPRITE['INV_WILD_WHEAT'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['SPECIAL_FUR']] = {
    'name': 'Special\x20fur\x20peasant',
    'img': SPRITE['INV_SPECIAL_FUR'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['SPECIAL_FUR_2']] = {
    'name': 'Special\x20fur\x20hood',
    'img': SPRITE['INV_SPECIAL_FUR_2'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['PUMPKIN']] = {
    'name': 'Pumpkin',
    'img': SPRITE['INV_PUMPKIN'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['GARLIC']] = {
    'name': 'Garlic',
    'img': SPRITE['INV_GARLIC'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['THORNBUSH']] = {
    'name': 'Thornbush',
    'img': SPRITE['INV_THORNBUSH'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['CARROT']] = {
    'name': 'Carrot',
    'img': SPRITE['INV_CARROT'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['TOMATO']] = {
    'name': 'Tomato',
    'img': SPRITE['INV_TOMATO'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['WATERMELON']] = {
    'name': 'Watermelon',
    'img': SPRITE['INV_WATERMELON'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['ALOE_VERA']] = {
    'name': 'Aloe\x20Vera',
    'img': SPRITE['INV_ALOE_VERA'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['PENGUIN_FEATHER']] = {
    'name': 'Penguin\x20Feather',
    'img': SPRITE['INV_PENGUIN_FEATHER'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['HAWK_FEATHER']] = {
    'name': 'Hawk\x20Feather',
    'img': SPRITE['INV_HAWK_FEATHER'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['VULTURE_FEATHER']] = {
    'name': 'Vulture\x20Feather',
    'img': SPRITE['INV_VULTURE_FEATHER'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['CACTUS']] = {
    'name': 'Cactus',
    'img': SPRITE['INV_CACTUS'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['PILOT_GLASSES']] = {
    'name': 'Cactus',
    'img': SPRITE['INV_PILOT_GLASSES'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['PITCHFORK_PART']] = {
    'name': 'Pitchfork\x20Part',
    'img': SPRITE['INV_PITCHFORK_PART'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['SANDWORM_JUICE']] = {
    'name': 'Emerald\x20Machine',
    'img': SPRITE['INV_SANDWORM_JUICE'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['EMERALD']] = {
    'name': 'Emerald',
    'img': SPRITE['INV_EMERALD'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['CHRISTMAS_HAT']] = {
    'name': 'Christmas\x20Hat',
    'img': SPRITE['INV_CHRISTMAS_HAT'],
    'recycle': 0x0
}, INV_INFOS[INV['ELF_HAT']] = {
    'name': 'Elf\x20Hat',
    'img': SPRITE['INV_ELF_HAT'],
    'recycle': 0x0
}, INV_INFOS[INV['GARLAND']] = {
    'name': 'Garland',
    'img': SPRITE['INV_GARLAND'],
    'recycle': 0x0,
    'grid': 0x0
}, INV_INFOS[INV['CANDY']] = {
    'name': 'Candy',
    'img': SPRITE['INV_CANDY'],
    'recycle': 0x0
}, INV_INFOS[INV['SUGAR_CAN']] = {
    'name': 'Sugar\x20Cane',
    'img': SPRITE['INV_SUGAR_CAN'],
    'recycle': 0x0
}, INV_INFOS[INV['PIRATE_SWORD']] = {
    'name': 'Pirate\x20Sword',
    'img': SPRITE['INV_PIRATE_SWORD'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['CRAB_STICK']] = {
    'name': 'Crab\x20Stick',
    'img': SPRITE['INV_CRAB_STICK'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['REIDITE']] = {
    'name': 'Reidite',
    'img': SPRITE['INV_REIDITE'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['FLAME']] = {
    'name': 'Flame',
    'img': SPRITE['INV_FLAME'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['FIRE']] = {
    'name': 'Campfire',
    'img': SPRITE['CRAFT_FIRE'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['BED']] = {
    'name': 'Bed',
    'img': SPRITE['CRAFT_BED'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['WORKBENCH']] = {
    'name': 'Workbench',
    'img': SPRITE['CRAFT_WORK'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['SWORD']] = {
    'name': 'Stone\x20sword',
    'img': SPRITE['CRAFT_SWORD'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['PICK']] = {
    'name': 'Stone\x20pick',
    'img': SPRITE['CRAFT_PICK'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['SEED']] = {
    'name': 'Berries\x20bush',
    'img': SPRITE['CRAFT_SEED'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['PICK_GOLD']] = {
    'name': 'Gold\x20pick',
    'img': SPRITE['CRAFT_PICK_GOLD'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['PICK_DIAMOND']] = {
    'name': 'Diamond\x20pick',
    'img': SPRITE['CRAFT_PICK_DIAMOND'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['SWORD_WOOD']] = {
    'name': 'Wood\x20sword',
    'img': SPRITE['CRAFT_SWORD_WOOD'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['SWORD_GOLD']] = {
    'name': 'Gold\x20sword',
    'img': SPRITE['CRAFT_SWORD_GOLD'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['SWORD_DIAMOND']] = {
    'name': 'Diamond\x20sword',
    'img': SPRITE['CRAFT_SWORD_DIAMOND'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['PICK_WOOD']] = {
    'name': 'Wood\x20pick',
    'img': SPRITE['CRAFT_PICK_WOOD'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['WALL']] = {
    'name': 'Wood\x20wall',
    'img': SPRITE['CRAFT_WALL'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['SPIKE']] = {
    'name': 'Wood\x20spike',
    'img': SPRITE['CRAFT_SPIKE'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['COOKED_MEAT']] = {
    'name': 'Cooked\x20meat',
    'img': SPRITE['CRAFT_COOKED_MEAT'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['BIG_FIRE']] = {
    'name': 'Big\x20campfire',
    'img': SPRITE['CRAFT_BIG_FIRE'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['BANDAGE']] = {
    'name': 'Bandage',
    'img': SPRITE['CRAFT_BANDAGE'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['STONE_WALL']] = {
    'name': 'Stone\x20wall',
    'img': SPRITE['CRAFT_STONE_WALL'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['GOLD_WALL']] = {
    'name': 'Gold\x20wall',
    'img': SPRITE['CRAFT_GOLD_WALL'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['DIAMOND_WALL']] = {
    'name': 'Diamond\x20wall',
    'img': SPRITE['CRAFT_DIAMOND_WALL'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['WOOD_DOOR']] = {
    'name': 'Wood\x20door',
    'img': SPRITE['CRAFT_DOOR_WOOD_CLOSE'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['CHEST']] = {
    'name': 'Chest',
    'img': SPRITE['CRAFT_CHEST'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['STONE_SPIKE']] = {
    'name': 'Stone\x20spike',
    'img': SPRITE['CRAFT_STONE_SPIKE'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['GOLD_SPIKE']] = {
    'name': 'Gold\x20spike',
    'img': SPRITE['CRAFT_GOLD_SPIKE'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['DIAMOND_SPIKE']] = {
    'name': 'Diamond\x20spike',
    'img': SPRITE['CRAFT_DIAMOND_SPIKE'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['STONE_DOOR']] = {
    'name': 'Stone\x20door',
    'img': SPRITE['CRAFT_DOOR_STONE_CLOSE'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['GOLD_DOOR']] = {
    'name': 'Gold\x20door',
    'img': SPRITE['CRAFT_DOOR_GOLD_CLOSE'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['DIAMOND_DOOR']] = {
    'name': 'Diamond\x20door',
    'img': SPRITE['CRAFT_DOOR_DIAMOND_CLOSE'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['EARMUFFS']] = {
    'name': 'Chapka',
    'img': SPRITE['CRAFT_EARMUFFS'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['COAT']] = {
    'name': 'Big\x20Chapka',
    'img': SPRITE['CRAFT_COAT'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['WOOD_SPEAR']] = {
    'name': 'Wood\x20spear',
    'img': SPRITE['CRAFT_WOOD_SPEAR'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['SPEAR']] = {
    'name': 'Stone\x20spear',
    'img': SPRITE['CRAFT_SPEAR'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['GOLD_SPEAR']] = {
    'name': 'Gold\x20spear',
    'img': SPRITE['CRAFT_GOLD_SPEAR'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['DIAMOND_SPEAR']] = {
    'name': 'Diamond\x20spear',
    'img': SPRITE['CRAFT_DIAMOND_SPEAR'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['DRAGON_SPEAR']] = {
    'name': 'Dragon\x20spear',
    'img': SPRITE['CRAFT_DRAGON_SPEAR'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['LAVA_SPEAR']] = {
    'name': 'Dragon\x20spear',
    'img': SPRITE['CRAFT_LAVA_SPEAR'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['CRAB_SPEAR']] = {
    'name': 'Crab\x20spear',
    'img': SPRITE['CRAFT_CRAB_SPEAR'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['CRAB_LOOT']] = {
    'name': 'Crab\x20loot',
    'img': SPRITE['INV_CRAB_LOOT'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['FURNACE']] = {
    'name': 'Furnace',
    'img': SPRITE['CRAFT_FURNACE'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['EXPLORER_HAT']] = {
    'name': 'Explorer\x20hat',
    'img': SPRITE['CRAFT_EXPLORER_HAT'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['PIRATE_HAT']] = {
    'name': 'Pirate\x20hat',
    'img': SPRITE['CRAFT_PIRATE_HAT'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['FLOWER_HAT']] = {
    'name': 'Flower\x20hat',
    'img': SPRITE['CRAFT_FLOWER_HAT'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['FUR_HAT']] = {
    'name': 'Fur\x20hat',
    'img': SPRITE['CRAFT_FUR_HAT'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['WOOD_HELMET']] = {
    'name': 'Wood\x20helmet',
    'img': SPRITE['CRAFT_WOOD_HELMET'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['STONE_HELMET']] = {
    'name': 'Stone\x20helmet',
    'img': SPRITE['CRAFT_STONE_HELMET'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['GOLD_HELMET']] = {
    'name': 'Gold\x20helmet',
    'img': SPRITE['CRAFT_GOLD_HELMET'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['DIAMOND_HELMET']] = {
    'name': 'Diamond\x20helmet',
    'img': SPRITE['CRAFT_DIAMOND_HELMET'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['BOOK']] = {
    'name': 'Book',
    'img': SPRITE['CRAFT_BOOK'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['PAPER']] = {
    'name': 'Paper',
    'img': SPRITE['CRAFT_PAPER'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['BAG']] = {
    'name': 'Bag',
    'img': SPRITE['CRAFT_BAG'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['SWORD_AMETHYST']] = {
    'name': 'Amethyst\x20sword',
    'img': SPRITE['CRAFT_SWORD_AMETHYST'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['PICK_AMETHYST']] = {
    'name': 'Amethyst\x20pick',
    'img': SPRITE['CRAFT_PICK_AMETHYST'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['AMETHYST_SPEAR']] = {
    'name': 'Amethyst\x20spear',
    'img': SPRITE['CRAFT_AMETHYST_SPEAR'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['HAMMER']] = {
    'name': 'Stone\x20hammer',
    'img': SPRITE['CRAFT_HAMMER'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['HAMMER_GOLD']] = {
    'name': 'Gold\x20hammer',
    'img': SPRITE['CRAFT_HAMMER_GOLD'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['HAMMER_DIAMOND']] = {
    'name': 'Diamond\x20hammer',
    'img': SPRITE['CRAFT_HAMMER_DIAMOND'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['HAMMER_AMETHYST']] = {
    'name': 'Amethyst\x20hammer',
    'img': SPRITE['CRAFT_HAMMER_AMETHYST'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['HAMMER_REIDITE']] = {
    'name': 'Reidite\x20hammer',
    'img': SPRITE['CRAFT_HAMMER_REIDITE'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['AMETHYST_WALL']] = {
    'name': 'Amethyst\x20wall',
    'img': SPRITE['CRAFT_AMETHYST_WALL'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['AMETHYST_SPIKE']] = {
    'name': 'Amethyst\x20spike',
    'img': SPRITE['CRAFT_AMETHYST_SPIKE'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['AMETHYST_DOOR']] = {
    'name': 'Amethyst\x20door',
    'img': SPRITE['CRAFT_DOOR_AMETHYST_CLOSE'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['CAP_SCARF']] = {
    'name': 'Cap\x20&\x20scarf',
    'img': SPRITE['CRAFT_CAP_SCARF'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['BLUE_CORD']] = {
    'name': 'Blue\x20cord',
    'img': SPRITE['CRAFT_BLUE_CORD'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['LOCK']] = {
    'name': 'Lock',
    'img': SPRITE['CRAFT_LOCK'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['RESURRECTION']] = {
    'name': 'Resurrection',
    'img': SPRITE['CRAFT_RESURRECTION'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['LOCKPICK']] = {
    'name': 'Lockpick',
    'img': SPRITE['CRAFT_LOCKPICK'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['TOTEM']] = {
    'name': 'Totem',
    'img': SPRITE['CRAFT_TOTEM'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['AMETHYST_HELMET']] = {
    'name': 'Amethyst\x20helmet',
    'img': SPRITE['CRAFT_AMETHYST_HELMET'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['SUPER_HAMMER']] = {
    'name': 'Super\x20hammer',
    'img': SPRITE['CRAFT_SUPER_HAMMER'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['BRIDGE']] = {
    'name': 'Bridge',
    'img': SPRITE['CRAFT_BRIDGE'],
    'grid': 0x1,
    'recycle': 0x1
}, INV_INFOS[INV['WOOD_TOWER']] = {
    'name': 'Wood\x20Tower',
    'img': SPRITE['CRAFT_WOOD_TOWER'],
    'grid': 0x1,
    'recycle': 0x1
}, INV_INFOS[INV['BOTTLE_FULL']] = {
    'name': 'Bottle\x20full',
    'img': SPRITE['CRAFT_BOTTLE_FULL'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['BOTTLE_EMPTY']] = {
    'name': 'Bottle\x20empty',
    'img': SPRITE['CRAFT_BOTTLE_EMPTY'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['SHOVEL']] = {
    'name': 'Stone\x20shovel',
    'img': SPRITE['CRAFT_SHOVEL'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['WATERING_CAN']] = {
    'name': 'Watering\x20can',
    'img': SPRITE['CRAFT_WATERING_CAN'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['WHEAT_SEED']] = {
    'name': 'Wheat',
    'img': SPRITE['CRAFT_WHEAT_SEED'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['COOKIE']] = {
    'name': 'Cookie',
    'img': SPRITE['CRAFT_COOKIE'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['WINDMILL']] = {
    'name': 'Windmill',
    'img': SPRITE['CRAFT_WINDMILL'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['SUPER_DIVING_SUIT']] = {
    'name': 'Super\x20diving\x20suit',
    'img': SPRITE['CRAFT_SUPER_DIVING_SUIT'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['DIVING_MASK']] = {
    'name': 'Diving\x20mask',
    'img': SPRITE['CRAFT_DIVING_MASK'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['WATERING_CAN_FULL']] = {
    'name': 'Watering\x20can\x20full',
    'img': SPRITE['CRAFT_WATERING_CAN_FULL'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['CAKE']] = {
    'name': 'Cake',
    'img': SPRITE['CRAFT_CAKE'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['FOODFISH_COOKED']] = {
    'name': 'Foodfish\x20cooked',
    'img': SPRITE['CRAFT_FOODFISH_COOKED'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['PLOT']] = {
    'name': 'Plot',
    'img': SPRITE['CRAFT_PLOT'],
    'grid': 0x1,
    'recycle': 0x1
}, INV_INFOS[INV['BREAD']] = {
    'name': 'Bread',
    'img': SPRITE['CRAFT_BREAD'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['BOTTLE_FULL_2']] = {
    'name': 'Bottle\x20full\x20(with\x20ice)',
    'img': SPRITE['CRAFT_BOTTLE_FULL_2'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['BOTTLE_FULL_3']] = {
    'name': 'Bottle\x20full\x20(with\x20well)',
    'img': SPRITE['CRAFT_BOTTLE_FULL_3'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['SHOVEL_GOLD']] = {
    'name': 'Gold\x20shovel',
    'img': SPRITE['CRAFT_SHOVEL_GOLD'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['SHOVEL_DIAMOND']] = {
    'name': 'Diamond\x20shovel',
    'img': SPRITE['CRAFT_SHOVEL_DIAMOND'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['SHOVEL_AMETHYST']] = {
    'name': 'Amethyst\x20shovel',
    'img': SPRITE['CRAFT_SHOVEL_AMETHYST'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['SPANNER']] = {
    'name': 'Spanner',
    'img': SPRITE['CRAFT_SPANNER'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['MACHETE']] = {
    'name': 'Machete',
    'img': SPRITE['CRAFT_MACHETE'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['BREAD_OVEN']] = {
    'name': 'Bread\x20oven',
    'img': SPRITE['CRAFT_BREAD_OVEN'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['SANDWICH']] = {
    'name': 'Sandwich',
    'img': SPRITE['CRAFT_SANDWICH'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['DRAGON_HELMET']] = {
    'name': 'Dragon\x20helmet',
    'img': SPRITE['CRAFT_DRAGON_HELMET'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['LAVA_HELMET']] = {
    'name': 'Dragon\x20helmet',
    'img': SPRITE['CRAFT_LAVA_HELMET'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['WITCH']] = {
    'name': 'Witch',
    'img': SPRITE['CRAFT_WITCH'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['NIMBUS']] = {
    'name': 'Nimbus',
    'img': SPRITE['CRAFT_NIMBUS'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['WAND1']] = {
    'name': 'Wand1',
    'img': SPRITE['CRAFT_WAND1'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['WAND2']] = {
    'name': 'Wand2',
    'img': SPRITE['CRAFT_WAND2'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['DRAGON_SWORD']] = {
    'name': 'Dragon\x20sword',
    'img': SPRITE['CRAFT_DRAGON_SWORD'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['LAVA_SWORD']] = {
    'name': 'Dragon\x20sword',
    'img': SPRITE['CRAFT_LAVA_SWORD'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['WOOD_SHIELD']] = {
    'name': 'Wood\x20shield',
    'img': SPRITE['CRAFT_WOOD_SHIELD'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['STONE_SHIELD']] = {
    'name': 'Stone\x20shield',
    'img': SPRITE['CRAFT_STONE_SHIELD'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['GOLD_SHIELD']] = {
    'name': 'Gold\x20shield',
    'img': SPRITE['CRAFT_GOLD_SHIELD'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['DIAMOND_SHIELD']] = {
    'name': 'Diamond\x20shield',
    'img': SPRITE['CRAFT_DIAMOND_SHIELD'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['AMETHYST_SHIELD']] = {
    'name': 'Amethyst\x20shield',
    'img': SPRITE['CRAFT_AMETHYST_SHIELD'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['REIDITE_SHIELD']] = {
    'name': 'Reidite\x20shield',
    'img': SPRITE['CRAFT_REIDITE_SHIELD'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['WOOD_BOW']] = {
    'name': 'Wood\x20bow',
    'img': SPRITE['CRAFT_WOOD_BOW'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['STONE_BOW']] = {
    'name': 'Stone\x20bow',
    'img': SPRITE['CRAFT_STONE_BOW'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['GOLD_BOW']] = {
    'name': 'Gold\x20bow',
    'img': SPRITE['CRAFT_GOLD_BOW'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['DIAMOND_BOW']] = {
    'name': 'Diamond\x20bow',
    'img': SPRITE['CRAFT_DIAMOND_BOW'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['AMETHYST_BOW']] = {
    'name': 'Amethyst\x20bow',
    'img': SPRITE['CRAFT_AMETHYST_BOW'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['REIDITE_BOW']] = {
    'name': 'Reidite\x20bow',
    'img': SPRITE['CRAFT_REIDITE_BOW'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['DRAGON_BOW']] = {
    'name': 'Dragon\x20bow',
    'img': SPRITE['CRAFT_DRAGON_BOW'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['CROWN_GREEN']] = {
    'name': 'Crown\x20of\x20life',
    'img': SPRITE['CRAFT_CROWN_GREEN'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['GEMME_GREEN']] = {
    'name': 'Gem\x20of\x20life',
    'img': SPRITE['INV_GEMME_GREEN'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['DRAGON_ORB']] = {
    'name': 'Orb\x20of\x20the\x20dragon',
    'img': SPRITE['INV_DRAGON_ORB'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['LAVA_ORB']] = {
    'name': 'Orb\x20of\x20the\x20dragon',
    'img': SPRITE['INV_LAVA_ORB'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['DRAGON_CUBE']] = {
    'name': 'Cube\x20of\x20the\x20dragon',
    'img': SPRITE['INV_DRAGON_CUBE'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['LAVA_CUBE']] = {
    'name': 'Cube\x20of\x20the\x20dragon',
    'img': SPRITE['INV_LAVA_CUBE'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['CROWN_ORANGE']] = {
    'name': 'Crown\x20of\x20luck',
    'img': SPRITE['CRAFT_CROWN_ORANGE'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['GEMME_ORANGE']] = {
    'name': 'Gem\x20of\x20luck',
    'img': SPRITE['INV_GEMME_ORANGE'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['CROWN_BLUE']] = {
    'name': 'Crown\x20of\x20the\x20angel',
    'img': SPRITE['CRAFT_CROWN_BLUE'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['GEMME_BLUE']] = {
    'name': 'Gem\x20of\x20the\x20angel',
    'img': SPRITE['INV_GEMME_BLUE'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['DRAGON_HEART']] = {
    'name': 'Dragon\x20heart',
    'img': SPRITE['INV_DRAGON_HEART'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['LAVA_HEART']] = {
    'name': 'Lava\x20heart',
    'img': SPRITE['INV_LAVA_HEART'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['HOOD']] = {
    'name': 'Hood',
    'img': SPRITE['CRAFT_HOOD'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['PEASANT']] = {
    'name': 'Peasant',
    'img': SPRITE['CRAFT_PEASANT'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['WINTER_PEASANT']] = {
    'name': 'Winter\x20peasant',
    'img': SPRITE['CRAFT_WINTER_PEASANT'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['WINTER_HOOD']] = {
    'name': 'Winter\x20hood',
    'img': SPRITE['CRAFT_WINTER_HOOD'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['BUCKET_FULL']] = {
    'name': 'Bucket\x20full',
    'img': SPRITE['CRAFT_BUCKET_FULL'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['BUCKET_EMPTY']] = {
    'name': 'Bucket\x20empty',
    'img': SPRITE['CRAFT_BUCKET_EMPTY'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['WELL']] = {
    'name': 'Well',
    'img': SPRITE['CRAFT_WELL'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['SIGN']] = {
    'name': 'Sign',
    'img': SPRITE['CRAFT_SIGN'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['PUMPKIN_SEED']] = {
    'name': 'Pumpkin\x20Seed',
    'img': SPRITE['CRAFT_PUMPKIN_SEED'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['GARLIC_SEED']] = {
    'name': 'Garlic\x20Seed',
    'img': SPRITE['CRAFT_GARLIC_SEED'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['THORNBUSH_SEED']] = {
    'name': 'Thorbushes\x20Seed',
    'img': SPRITE['CRAFT_THORNBUSH_SEED'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['ROOF']] = {
    'name': 'Roof',
    'img': SPRITE['CRAFT_ROOF'],
    'grid': 0x1,
    'recycle': 0x1
}, INV_INFOS[INV['CROWN_CRAB']] = {
    'name': 'Crab\x20Crown',
    'img': SPRITE['CRAFT_CROWN_CRAB'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['CARROT_SEED']] = {
    'name': 'Carrot\x20Seed',
    'img': SPRITE['CRAFT_CARROT_SEED'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['TOMATO_SEED']] = {
    'name': 'Tomato\x20Seed',
    'img': SPRITE['CRAFT_TOMATO_SEED'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['WATERMELON_SEED']] = {
    'name': 'Watermelon\x20Seed',
    'img': SPRITE['CRAFT_WATERMELON_SEED'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['ALOE_VERA_SEED']] = {
    'name': 'Aloe\x20Vera\x20Seed',
    'img': SPRITE['CRAFT_ALOE_VERA_SEED'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['TURBAN1']] = {
    'name': 'Cap',
    'img': SPRITE['CRAFT_TURBAN1'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['TURBAN2']] = {
    'name': 'Turban',
    'img': SPRITE['CRAFT_TURBAN2'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['PILOT_HELMET']] = {
    'name': 'Pilot\x20Helmet',
    'img': SPRITE['CRAFT_PILOT_HELMET'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['EMERALD_MACHINE']] = {
    'name': 'Emerald\x20Machine',
    'img': SPRITE['CRAFT_EMERALD_MACHINE'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['EXTRACTOR_MACHINE_STONE']] = {
    'name': 'Emerald\x20Machine',
    'img': SPRITE['CRAFT_EXTRACTOR_MACHINE_STONE'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['EXTRACTOR_MACHINE_GOLD']] = {
    'name': 'Emerald\x20Machine',
    'img': SPRITE['CRAFT_EXTRACTOR_MACHINE_GOLD'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['EXTRACTOR_MACHINE_DIAMOND']] = {
    'name': 'Emerald\x20Machine',
    'img': SPRITE['CRAFT_EXTRACTOR_MACHINE_DIAMOND'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['EXTRACTOR_MACHINE_AMETHYST']] = {
    'name': 'Emerald\x20Machine',
    'img': SPRITE['CRAFT_EXTRACTOR_MACHINE_AMETHYST'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['EXTRACTOR_MACHINE_REIDITE']] = {
    'name': 'Emerald\x20Machine',
    'img': SPRITE['CRAFT_EXTRACTOR_MACHINE_REIDITE'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['PITCHFORK']] = {
    'name': 'Pitchfork',
    'img': SPRITE['CRAFT_PITCHFORK'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['WOOD_DOOR_SPIKE']] = {
    'name': 'Wood\x20Door\x20Spike',
    'img': SPRITE['CRAFT_WOOD_DOOR_SPIKE'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['STONE_DOOR_SPIKE']] = {
    'name': 'Stone\x20Door\x20Spike',
    'img': SPRITE['CRAFT_STONE_DOOR_SPIKE'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['GOLD_DOOR_SPIKE']] = {
    'name': 'Gold\x20Door\x20Spike',
    'img': SPRITE['CRAFT_GOLD_DOOR_SPIKE'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['DIAMOND_DOOR_SPIKE']] = {
    'name': 'Diamond\x20Door\x20Spike',
    'img': SPRITE['CRAFT_DIAMOND_DOOR_SPIKE'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['AMETHYST_DOOR_SPIKE']] = {
    'name': 'Amethyst\x20Door\x20Spike',
    'img': SPRITE['CRAFT_AMETHYST_DOOR_SPIKE'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['DIAMOND_PROTECTION']] = {
    'name': 'Diamond\x20Fire\x20Protection\x20',
    'img': SPRITE['CRAFT_DIAMOND_PROTECTION'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['AMETHYST_PROTECTION']] = {
    'name': 'Amethyst\x20Fire\x20Protection\x20',
    'img': SPRITE['CRAFT_AMETHYST_PROTECTION'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['REIDITE_PROTECTION']] = {
    'name': 'Amethyst\x20Fire\x20Protection\x20',
    'img': SPRITE['CRAFT_REIDITE_PROTECTION'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['REIDITE_SWORD']] = {
    'name': 'Reidite\x20Sword',
    'img': SPRITE['CRAFT_REIDITE_SWORD'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['REIDITE_SPEAR']] = {
    'name': 'Reidite\x20Spear',
    'img': SPRITE['CRAFT_REIDITE_SPEAR'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['REIDITE_HELMET']] = {
    'name': 'Reidite\x20Helmet',
    'img': SPRITE['CRAFT_REIDITE_HELMET'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['REIDITE_DOOR_SPIKE']] = {
    'name': 'Reidite\x20Door\x20Spike',
    'img': SPRITE['CRAFT_REIDITE_DOOR_SPIKE'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['REIDITE_DOOR']] = {
    'name': 'Reidite\x20Door',
    'img': SPRITE['CRAFT_REIDITE_DOOR'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['REIDITE_SPIKE']] = {
    'name': 'Reidite\x20Spike',
    'img': SPRITE['CRAFT_REIDITE_SPIKE'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['REIDITE_WALL']] = {
    'name': 'Reidite\x20Wall',
    'img': SPRITE['CRAFT_REIDITE_WALL'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['PICK_REIDITE']] = {
    'name': 'Reidite\x20pick',
    'img': SPRITE['CRAFT_PICK_REIDITE'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['BOAT']] = {
    'name': 'Boat',
    'img': SPRITE['CRAFT_BOAT'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['SLED']] = {
    'name': 'Sled',
    'img': SPRITE['CRAFT_SLED'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['SADDLE']] = {
    'name': 'Saddle',
    'img': SPRITE['CRAFT_SADDLE'],
    'grid': 0x0,
    'recycle': 0x1
}, INV_INFOS[INV['MOUNT_BOAR']] = {
    'name': 'Mount\x20Boar',
    'img': SPRITE['CRAFT_MOUNT_BOAR'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['CRAB_BOSS']] = {
    'name': 'Mount\x20King\x20Crab',
    'img': SPRITE['CRAFT_CRAB_BOSS'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['BABY_DRAGON']] = {
    'name': 'Mount\x20Baby\x20Dragon',
    'img': SPRITE['CRAFT_BABY_DRAGON'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['BABY_LAVA']] = {
    'name': 'Mount\x20Baby\x20Lava',
    'img': SPRITE['CRAFT_BABY_LAVA'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['HAWK']] = {
    'name': 'Mount\x20Hawk',
    'img': SPRITE['CRAFT_HAWK'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['PLANE']] = {
    'name': 'Plane',
    'img': SPRITE['CRAFT_PLANE'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['PITCHFORK2']] = {
    'name': 'Pitchfork\x202',
    'img': SPRITE['CRAFT_PITCHFORK2'],
    'grid': 0x0,
    'recycle': 0x0
}, INV_INFOS[INV['BABY_MAMMOTH']] = {
    'name': 'Baby\x20Mammoth',
    'img': SPRITE['CRAFT_BABY_MAMMOTH'],
    'grid': 0x0,
    'recycle': 0x0
};
var OLD_RECIPES = undefined,
    RECIPES = [{
        'r': [
            [INV['WOOD'], 0x19],
            [INV['STONE'], 0x5]
        ],
        'w': 0x0,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['FIRE'],
        'id2': INV['FIRE'],
        'time': 0x1 / 0x5,
        't': CATEGORY['Utils']
    }, {
        'r': [
            [INV['FIRE'], 0x1],
            [INV['WOOD'], 0x23],
            [INV['STONE'], 0xa]
        ],
        'w': 0x0,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['BIG_FIRE'],
        'id2': INV['BIG_FIRE'],
        'time': 0x1 / 0x5,
        't': CATEGORY['Utils']
    }, {
        'r': [
            [INV['WOOD'], 0x96],
            [INV['STONE'], 0x32],
            [INV['GOLD'], 0xf]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['FURNACE'],
        'id2': INV['FURNACE'],
        'time': 0x1 / 0x14,
        't': CATEGORY['Utils']
    }, {
        'r': [
            [INV['WOOD'], 0x14],
            [INV['STONE'], 0xa]
        ],
        'w': 0x0,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['WORKBENCH'],
        'id2': INV['WORKBENCH'],
        'time': 0x1 / 0x6,
        't': CATEGORY['Utils']
    }, {
        'r': [
            [INV['WOOD'], 0xa]
        ],
        'w': 0x0,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['PICK_WOOD'],
        'id2': INV['PICK_WOOD'],
        'time': 0x1 / 0x3,
        't': CATEGORY['TOOLS']
    }, {
        'r': [
            [INV['PICK_WOOD'], 0x1],
            [INV['WOOD'], 0x32],
            [INV['STONE'], 0xf]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['PICK'],
        'id2': INV['PICK'],
        'time': 0x1 / 0x8,
        't': CATEGORY['TOOLS']
    }, {
        'r': [
            [INV['WOOD'], 0x28],
            [INV['GOLD'], 0x14],
            [INV['STONE'], 0x1e],
            [INV['PICK'], 0x1]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['PICK_GOLD'],
        'id2': INV['PICK_GOLD'],
        'time': 0x1 / 0xc,
        't': CATEGORY['TOOLS']
    }, {
        'r': [
            [INV['DIAMOND'], 0x14],
            [INV['GOLD'], 0x32],
            [INV['STONE'], 0x50],
            [INV['PICK_GOLD'], 0x1]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['PICK_DIAMOND'],
        'id2': INV['PICK_DIAMOND'],
        'time': 0x1 / 0x14,
        't': CATEGORY['TOOLS']
    }, {
        'r': [
            [INV['DIAMOND'], 0x28],
            [INV['GOLD'], 0x3c],
            [INV['AMETHYST'], 0x1e],
            [INV['PICK_DIAMOND'], 0x1]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['PICK_AMETHYST'],
        'id2': INV['PICK_AMETHYST'],
        'time': 0x1 / 0x3c,
        't': CATEGORY['TOOLS']
    }, {
        'r': [
            [INV['AMETHYST'], 0x1e],
            [INV['DIAMOND'], 0x28],
            [INV['REIDITE'], 0x1e],
            [INV['PICK_AMETHYST'], 0x1]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['PICK_REIDITE'],
        'id2': INV['PICK_REIDITE'],
        'time': 0x1 / 0x5a,
        't': CATEGORY['TOOLS']
    }, {
        'r': [
            [INV['WOOD'], 0x5a],
            [INV['STONE'], 0x32]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['HAMMER'],
        'id2': INV['HAMMER'],
        'time': 0x1 / 0xa,
        't': CATEGORY['TOOLS']
    }, {
        'r': [
            [INV['WOOD'], 0xa0],
            [INV['STONE'], 0x78],
            [INV['GOLD'], 0x50],
            [INV['HAMMER'], 0x1]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['HAMMER_GOLD'],
        'id2': INV['HAMMER_GOLD'],
        'time': 0x1 / 0xf,
        't': CATEGORY['TOOLS']
    }, {
        'r': [
            [INV['DIAMOND'], 0x50],
            [INV['STONE'], 0xc8],
            [INV['GOLD'], 0x96],
            [INV['HAMMER_GOLD'], 0x1]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['HAMMER_DIAMOND'],
        'id2': INV['HAMMER_DIAMOND'],
        'time': 0x1 / 0x14,
        't': CATEGORY['TOOLS']
    }, {
        'r': [
            [INV['DIAMOND'], 0xa0],
            [INV['AMETHYST'], 0x3c],
            [INV['GOLD'], 0xfa],
            [INV['HAMMER_DIAMOND'], 0x1]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['HAMMER_AMETHYST'],
        'id2': INV['HAMMER_AMETHYST'],
        'time': 0x1 / 0x3c,
        't': CATEGORY['TOOLS']
    }, {
        'r': [
            [INV['AMETHYST'], 0xa0],
            [INV['REIDITE'], 0x3c],
            [INV['DIAMOND'], 0xfa],
            [INV['HAMMER_AMETHYST'], 0x1]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['HAMMER_REIDITE'],
        'id2': INV['HAMMER_REIDITE'],
        'time': 0x1 / 0x5a,
        't': CATEGORY['TOOLS']
    }, {
        'r': [
            [INV['HAMMER_REIDITE'], 0x1],
            [INV['BOTTLE_FULL'], 0x1],
            [INV['KRAKEN_SKIN'], 0x1],
            [INV['SCALES'], 0xa],
            [INV['AMETHYST'], 0x14]
        ],
        'w': 0x1,
        'f': 0x1,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['SUPER_HAMMER'],
        'id2': INV['SUPER_HAMMER'],
        'time': 0x1 / 0x78,
        't': CATEGORY['TOOLS']
    }, {
        'r': [
            [INV['WOOD'], 0x1e],
            [INV['STONE'], 0xf]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['SHOVEL'],
        'id2': INV['SHOVEL'],
        'time': 0x1 / 0x5,
        't': CATEGORY['TOOLS']
    }, {
        'r': [
            [INV['SHOVEL'], 0x1],
            [INV['GOLD'], 0x14],
            [INV['STONE'], 0x1e],
            [INV['WOOD'], 0x28]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['SHOVEL_GOLD'],
        'id2': INV['SHOVEL_GOLD'],
        'time': 0x1 / 0xa,
        't': CATEGORY['TOOLS']
    }, {
        'r': [
            [INV['SHOVEL_GOLD'], 0x1],
            [INV['DIAMOND'], 0x14],
            [INV['GOLD'], 0x32],
            [INV['STONE'], 0x50]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['SHOVEL_DIAMOND'],
        'id2': INV['SHOVEL_DIAMOND'],
        'time': 0x1 / 0x14,
        't': CATEGORY['TOOLS']
    }, {
        'r': [
            [INV['SHOVEL_DIAMOND'], 0x1],
            [INV['GOLD'], 0x3c],
            [INV['AMETHYST'], 0x1e],
            [INV['DIAMOND'], 0x28]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['SHOVEL_AMETHYST'],
        'id2': INV['SHOVEL_AMETHYST'],
        'time': 0x1 / 0x28,
        't': CATEGORY['TOOLS']
    }, {
        'r': [
            [INV['WOOD'], 0x32]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['WATERING_CAN'],
        'id2': INV['WATERING_CAN'],
        'time': 0x1 / 0x5,
        't': CATEGORY['TOOLS']
    }, {
        'r': [
            [INV['WATERING_CAN'], 0x1]
        ],
        'w': 0x0,
        'f': 0x0,
        'o': 0x1,
        'e': 0x0,
        'id': CRAFT['WATERING_CAN_FULL'],
        'id2': INV['WATERING_CAN_FULL'],
        'time': 0x1 / 0x5,
        't': CATEGORY['TOOLS']
    }, {
        'r': [
            [INV['WOOD'], 0x64],
            [INV['STONE'], 0x32]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['PITCHFORK'],
        'id2': INV['PITCHFORK'],
        'time': 0x1 / 0xa,
        't': CATEGORY['TOOLS']
    }, {
        'r': [
            [INV['PITCHFORK'], 0x1],
            [INV['PITCHFORK_PART'], 0x1]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['PITCHFORK2'],
        'id2': INV['PITCHFORK2'],
        'time': 0x1 / 0x3c,
        't': CATEGORY['TOOLS']
    }, {
        'r': [
            [INV['PAPER'], 0x4],
            [INV['CORD'], 0x4],
            [INV['FUR_WOLF'], 0x4]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['BOOK'],
        'id2': INV['BOOK'],
        'time': 0x1 / 0xf,
        't': CATEGORY['TOOLS']
    }, {
        'r': [
            [INV['WOOD'], 0x28]
        ],
        'w': 0x0,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['WOOD_SPEAR'],
        'id2': INV['WOOD_SPEAR'],
        'time': 0x1 / 0x5,
        't': CATEGORY['WEAPONS']
    }, {
        'r': [
            [INV['WOOD_SPEAR'], 0x1],
            [INV['WOOD'], 0x3c],
            [INV['STONE'], 0xa]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['SPEAR'],
        'id2': INV['SPEAR'],
        'time': 0x1 / 0xa,
        't': CATEGORY['WEAPONS']
    }, {
        'r': [
            [INV['WOOD'], 0x50],
            [INV['GOLD'], 0x1e],
            [INV['STONE'], 0x1e],
            [INV['SPEAR'], 0x1]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['GOLD_SPEAR'],
        'id2': INV['GOLD_SPEAR'],
        't': CATEGORY['WEAPONS'],
        'time': 0x1 / 0x14
    }, {
        'r': [
            [INV['WOOD'], 0xc8],
            [INV['DIAMOND'], 0x28],
            [INV['GOLD'], 0x3c],
            [INV['GOLD_SPEAR'], 0x1]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['DIAMOND_SPEAR'],
        'id2': INV['DIAMOND_SPEAR'],
        'time': 0x1 / 0x1e,
        't': CATEGORY['WEAPONS']
    }, {
        'r': [
            [INV['AMETHYST'], 0x28],
            [INV['DIAMOND'], 0x50],
            [INV['GOLD'], 0x5a],
            [INV['DIAMOND_SPEAR'], 0x1]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['AMETHYST_SPEAR'],
        'id2': INV['AMETHYST_SPEAR'],
        'time': 0x1 / 0x3c,
        't': CATEGORY['WEAPONS']
    }, {
        'r': [
            [INV['REIDITE'], 0x28],
            [INV['AMETHYST'], 0x50],
            [INV['DIAMOND'], 0x5a],
            [INV['AMETHYST_SPEAR'], 0x1]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['REIDITE_SPEAR'],
        'id2': INV['REIDITE_SPEAR'],
        'time': 0x1 / 0x5a,
        't': CATEGORY['WEAPONS']
    }, {
        'r': [
            [INV['BLUE_CORD'], 0x14],
            [INV['DRAGON_ORB'], 0x1],
            [INV['AMETHYST'], 0x64],
            [INV['DRAGON_HEART'], 0x3]
        ],
        'w': 0x1,
        'f': 0x1,
        'o': 0x1,
        'e': 0x0,
        'id': CRAFT['DRAGON_SPEAR'],
        'id2': INV['DRAGON_SPEAR'],
        'time': 0x1 / 0x78,
        't': CATEGORY['WEAPONS']
    }, {
        'r': [
            [INV['DRAGON_SPEAR'], 0x1],
            [INV['LAVA_ORB'], 0x1],
            [INV['REIDITE'], 0x64],
            [INV['LAVA_HEART'], 0x2]
        ],
        'w': 0x1,
        'f': 0x1,
        'o': 0x1,
        'e': 0x0,
        'id': CRAFT['LAVA_SPEAR'],
        'id2': INV['LAVA_SPEAR'],
        'time': 0x1 / 0xc8,
        't': CATEGORY['WEAPONS']
    }, {
        'r': [
            [INV['WOOD_SPEAR'], 0x1],
            [INV['CRAB_LOOT'], 0x5],
            [INV['CORD'], 0x6]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['CRAB_SPEAR'],
        'id2': INV['CRAB_SPEAR'],
        'time': 0x1 / 0x1e,
        't': CATEGORY['WEAPONS']
    }, {
        'r': [
            [INV['WOOD'], 0x1e]
        ],
        'w': 0x0,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['SWORD_WOOD'],
        'id2': INV['SWORD_WOOD'],
        'time': 0x1 / 0x5,
        't': CATEGORY['WEAPONS']
    }, {
        'r': [
            [INV['WOOD'], 0x32],
            [INV['STONE'], 0x19],
            [INV['SWORD_WOOD'], 0x1]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['SWORD'],
        'id2': INV['SWORD'],
        'time': 0x1 / 0xa,
        't': CATEGORY['WEAPONS']
    }, {
        'r': [
            [INV['WOOD'], 0x3c],
            [INV['GOLD'], 0x28],
            [INV['STONE'], 0x32],
            [INV['SWORD'], 0x1]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['SWORD_GOLD'],
        'id2': INV['SWORD_GOLD'],
        'time': 0x1 / 0x14,
        't': CATEGORY['WEAPONS']
    }, {
        'r': [
            [INV['DIAMOND'], 0x28],
            [INV['GOLD'], 0x3c],
            [INV['STONE'], 0x50],
            [INV['SWORD_GOLD'], 0x1]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['SWORD_DIAMOND'],
        'id2': INV['SWORD_DIAMOND'],
        'time': 0x1 / 0x1e,
        't': CATEGORY['WEAPONS']
    }, {
        'r': [
            [INV['DIAMOND'], 0x3c],
            [INV['GOLD'], 0x64],
            [INV['AMETHYST'], 0x28],
            [INV['SWORD_DIAMOND'], 0x1]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['SWORD_AMETHYST'],
        'id2': INV['SWORD_AMETHYST'],
        'time': 0x1 / 0x3c,
        't': CATEGORY['WEAPONS']
    }, {
        'r': [
            [INV['DIAMOND'], 0x64],
            [INV['AMETHYST'], 0x50],
            [INV['REIDITE'], 0x28],
            [INV['SWORD_AMETHYST'], 0x1]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['REIDITE_SWORD'],
        'id2': INV['REIDITE_SWORD'],
        'time': 0x1 / 0x5a,
        't': CATEGORY['WEAPONS']
    }, {
        'r': [
            [INV['PLANT'], 0x3]
        ],
        'w': 0x0,
        'f': 0x1,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['SEED'],
        'id2': INV['SEED'],
        'time': 0x1 / 0x5,
        't': CATEGORY['FOODS']
    }, {
        'r': [
            [INV['WILD_WHEAT'], 0x3]
        ],
        'w': 0x0,
        'f': 0x1,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['WHEAT_SEED'],
        'id2': INV['WHEAT_SEED'],
        'time': 0x1 / 0x5,
        't': CATEGORY['FOODS']
    }, {
        'r': [
            [INV['PUMPKIN'], 0x8]
        ],
        'w': 0x0,
        'f': 0x1,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['PUMPKIN_SEED'],
        'id2': INV['PUMPKIN_SEED'],
        'time': 0x1 / 0x5,
        't': CATEGORY['FOODS']
    }, {
        'r': [
            [INV['GARLIC'], 0x8]
        ],
        'w': 0x0,
        'f': 0x1,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['GARLIC_SEED'],
        'id2': INV['GARLIC_SEED'],
        'time': 0x1 / 0x5,
        't': CATEGORY['FOODS']
    }, {
        'r': [
            [INV['THORNBUSH'], 0x8]
        ],
        'w': 0x0,
        'f': 0x1,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['THORNBUSH_SEED'],
        'id2': INV['THORNBUSH_SEED'],
        'time': 0x1 / 0x5,
        't': CATEGORY['FOODS']
    }, {
        'r': [
            [INV['CARROT'], 0x8]
        ],
        'w': 0x0,
        'f': 0x1,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['CARROT_SEED'],
        'id2': INV['CARROT_SEED'],
        'time': 0x1 / 0x5,
        't': CATEGORY['FOODS']
    }, {
        'r': [
            [INV['TOMATO'], 0x8]
        ],
        'w': 0x0,
        'f': 0x1,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['TOMATO_SEED'],
        'id2': INV['TOMATO_SEED'],
        'time': 0x1 / 0x5,
        't': CATEGORY['FOODS']
    }, {
        'r': [
            [INV['WATERMELON'], 0x10]
        ],
        'w': 0x0,
        'f': 0x1,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['WATERMELON_SEED'],
        'id2': INV['WATERMELON_SEED'],
        'time': 0x1 / 0x5,
        't': CATEGORY['FOODS']
    }, {
        'r': [
            [INV['ALOE_VERA'], 0x10]
        ],
        'w': 0x0,
        'f': 0x1,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['ALOE_VERA_SEED'],
        'id2': INV['ALOE_VERA_SEED'],
        'time': 0x1 / 0x5,
        't': CATEGORY['FOODS']
    }, {
        'r': [
            [INV['MEAT'], 0x1]
        ],
        'w': 0x0,
        'f': 0x1,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['COOKED_MEAT'],
        'id2': INV['COOKED_MEAT'],
        'time': 0x1 / 0x5,
        't': CATEGORY['FOODS']
    }, {
        'r': [
            [INV['FOODFISH'], 0x1]
        ],
        'w': 0x0,
        'f': 0x1,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['FOODFISH_COOKED'],
        'id2': INV['FOODFISH_COOKED'],
        'time': 0x1 / 0x3,
        't': CATEGORY['FOODS']
    }, {
        'r': [
            [INV['FLOUR'], 0x3]
        ],
        'w': 0x0,
        'f': 0x1,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['BREAD'],
        'id2': INV['BREAD'],
        'time': 0x1 / 0x3,
        't': CATEGORY['FOODS']
    }, {
        'r': [
            [INV['FLOUR'], 0x3],
            [INV['PLANT'], 0x1]
        ],
        'w': 0x0,
        'f': 0x1,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['COOKIE'],
        'id2': INV['COOKIE'],
        'time': 0x1 / 0x3,
        't': CATEGORY['FOODS']
    }, {
        'r': [
            [INV['FLOUR'], 0x5],
            [INV['PLANT'], 0x2],
            [INV['ICE'], 0x2]
        ],
        'w': 0x0,
        'f': 0x1,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['CAKE'],
        'id2': INV['CAKE'],
        'time': 0x1 / 0x5,
        't': CATEGORY['FOODS']
    }, {
        'r': [
            [INV['CORD'], 0x2]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['BANDAGE'],
        'id2': INV['BANDAGE'],
        'time': 0x1 / 0x5,
        't': CATEGORY['Utils']
    }, {
        'r': [
            [INV['WOOD'], 0x14]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['WALL'],
        'id2': INV['WALL'],
        'time': 0x1 / 0x5,
        't': CATEGORY['BASES']
    }, {
        'r': [
            [INV['WALL'], 0x1],
            [INV['STONE'], 0x11]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['STONE_WALL'],
        'id2': INV['STONE_WALL'],
        'time': 0x1 / 0x5,
        't': CATEGORY['BASES']
    }, {
        'r': [
            [INV['STONE_WALL'], 0x1],
            [INV['GOLD'], 0xe]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['GOLD_WALL'],
        'id2': INV['GOLD_WALL'],
        'time': 0x1 / 0x5,
        't': CATEGORY['BASES']
    }, {
        'r': [
            [INV['GOLD_WALL'], 0x1],
            [INV['DIAMOND'], 0xb]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['DIAMOND_WALL'],
        'id2': INV['DIAMOND_WALL'],
        'time': 0x1 / 0x5,
        't': CATEGORY['BASES']
    }, {
        'r': [
            [INV['DIAMOND_WALL'], 0x1],
            [INV['AMETHYST'], 0x8]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['AMETHYST_WALL'],
        'id2': INV['AMETHYST_WALL'],
        'time': 0x1 / 0x5,
        't': CATEGORY['BASES']
    }, {
        'r': [
            [INV['AMETHYST_WALL'], 0x1],
            [INV['REIDITE'], 0x5]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['REIDITE_WALL'],
        'id2': INV['REIDITE_WALL'],
        'time': 0x1 / 0x5,
        't': CATEGORY['BASES']
    }, {
        'r': [
            [INV['WOOD'], 0x1e]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['WOOD_DOOR'],
        'id2': INV['WOOD_DOOR'],
        'time': 0x1 / 0x8,
        't': CATEGORY['BASES']
    }, {
        'r': [
            [INV['WOOD_DOOR'], 0x1],
            [INV['STONE'], 0x1b]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['STONE_DOOR'],
        'id2': INV['STONE_DOOR'],
        'time': 0x1 / 0x8,
        't': CATEGORY['BASES']
    }, {
        'r': [
            [INV['STONE_DOOR'], 0x1],
            [INV['GOLD'], 0x18]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['GOLD_DOOR'],
        'id2': INV['GOLD_DOOR'],
        'time': 0x1 / 0x8,
        't': CATEGORY['BASES']
    }, {
        'r': [
            [INV['GOLD_DOOR'], 0x1],
            [INV['DIAMOND'], 0x15]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['DIAMOND_DOOR'],
        'id2': INV['DIAMOND_DOOR'],
        'time': 0x1 / 0x8,
        't': CATEGORY['BASES']
    }, {
        'r': [
            [INV['DIAMOND_DOOR'], 0x1],
            [INV['AMETHYST'], 0x12]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['AMETHYST_DOOR'],
        'id2': INV['AMETHYST_DOOR'],
        'time': 0x1 / 0x8,
        't': CATEGORY['BASES']
    }, {
        'r': [
            [INV['AMETHYST_DOOR'], 0x1],
            [INV['REIDITE'], 0xf]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['REIDITE_DOOR'],
        'id2': INV['REIDITE_DOOR'],
        'time': 0x1 / 0x8,
        't': CATEGORY['BASES']
    }, {
        'r': [
            [INV['WALL'], 0x1],
            [INV['WOOD'], 0x28],
            [INV['STONE'], 0x1e]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['SPIKE'],
        'id2': INV['SPIKE'],
        'time': 0x1 / 0x14,
        't': CATEGORY['BASES']
    }, {
        'r': [
            [INV['STONE_WALL'], 0x1],
            [INV['STONE'], 0x46]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['STONE_SPIKE'],
        'id2': INV['STONE_SPIKE'],
        'time': 0x1 / 0x14,
        't': CATEGORY['BASES']
    }, {
        'r': [
            [INV['GOLD_WALL'], 0x1],
            [INV['GOLD'], 0x28],
            [INV['STONE'], 0x1e]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['GOLD_SPIKE'],
        'id2': INV['GOLD_SPIKE'],
        'time': 0x1 / 0x14,
        't': CATEGORY['BASES']
    }, {
        'r': [
            [INV['DIAMOND_WALL'], 0x1],
            [INV['DIAMOND'], 0x28],
            [INV['STONE'], 0x1e]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['DIAMOND_SPIKE'],
        'id2': INV['DIAMOND_SPIKE'],
        'time': 0x1 / 0x14,
        't': CATEGORY['BASES']
    }, {
        'r': [
            [INV['AMETHYST_WALL'], 0x1],
            [INV['AMETHYST'], 0x28],
            [INV['STONE'], 0x1e]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['AMETHYST_SPIKE'],
        'id2': INV['AMETHYST_SPIKE'],
        'time': 0x1 / 0x14,
        't': CATEGORY['BASES']
    }, {
        'r': [
            [INV['REIDITE_WALL'], 0x1],
            [INV['REIDITE'], 0x28],
            [INV['GOLD'], 0x1e]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['REIDITE_SPIKE'],
        'id2': INV['REIDITE_SPIKE'],
        'time': 0x1 / 0x14,
        't': CATEGORY['BASES']
    }, {
        'r': [
            [INV['WOOD_DOOR'], 0x1],
            [INV['WOOD'], 0x50],
            [INV['STONE'], 0x3c]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['WOOD_DOOR_SPIKE'],
        'id2': INV['WOOD_DOOR_SPIKE'],
        'time': 0x1 / 0x14,
        't': CATEGORY['BASES']
    }, {
        'r': [
            [INV['STONE_DOOR'], 0x1],
            [INV['STONE'], 0x8c]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['STONE_DOOR_SPIKE'],
        'id2': INV['STONE_DOOR_SPIKE'],
        'time': 0x1 / 0x14,
        't': CATEGORY['BASES']
    }, {
        'r': [
            [INV['GOLD_DOOR'], 0x1],
            [INV['GOLD'], 0x50],
            [INV['STONE'], 0x3c]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['GOLD_DOOR_SPIKE'],
        'id2': INV['GOLD_DOOR_SPIKE'],
        'time': 0x1 / 0x14,
        't': CATEGORY['BASES']
    }, {
        'r': [
            [INV['DIAMOND_DOOR'], 0x1],
            [INV['DIAMOND'], 0x50],
            [INV['STONE'], 0x3c]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['DIAMOND_DOOR_SPIKE'],
        'id2': INV['DIAMOND_DOOR_SPIKE'],
        'time': 0x1 / 0x14,
        't': CATEGORY['BASES']
    }, {
        'r': [
            [INV['AMETHYST_DOOR'], 0x1],
            [INV['AMETHYST'], 0x50],
            [INV['STONE'], 0x3c]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['AMETHYST_DOOR_SPIKE'],
        'id2': INV['AMETHYST_DOOR_SPIKE'],
        'time': 0x1 / 0x14,
        't': CATEGORY['BASES']
    }, {
        'r': [
            [INV['REIDITE_DOOR'], 0x1],
            [INV['REIDITE'], 0x50],
            [INV['GOLD'], 0x3c]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['REIDITE_DOOR_SPIKE'],
        'id2': INV['REIDITE_DOOR_SPIKE'],
        'time': 0x1 / 0x14,
        't': CATEGORY['BASES']
    }, {
        'r': [
            [INV['WOOD'], 0x19],
            [INV['GOLD'], 0x2]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['CHEST'],
        'id2': INV['CHEST'],
        'time': 0x1 / 0x5,
        't': CATEGORY['Utils']
    }, {
        'r': [
            [INV['PAPER'], 0x1],
            [INV['FUR'], 0x1],
            [INV['CORD'], 0x2]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['EXPLORER_HAT'],
        'id2': INV['EXPLORER_HAT'],
        'time': 0x1 / 0x5,
        't': CATEGORY['CLOTHES']
    }, {
        'r': [
            [INV['PAPER'], 0x5],
            [INV['PENGUIN_FEATHER'], 0x14],
            [INV['BLUE_CORD'], 0x5],
            [INV['FUR'], 0x5]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['PIRATE_HAT'],
        'id2': INV['PIRATE_HAT'],
        'time': 0x1 / 0x1e,
        't': CATEGORY['CLOTHES']
    }, {
        'r': [
            [INV['PILOT_GLASSES'], 0x1],
            [INV['HAWK_FEATHER'], 0x8],
            [INV['VULTURE_FEATHER'], 0x8],
            [INV['PENGUIN_FEATHER'], 0x8],
            [INV['CORD'], 0x6]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['PILOT_HELMET'],
        'id2': INV['PILOT_HELMET'],
        'time': 0x1 / 0x3c,
        't': CATEGORY['CLOTHES']
    }, {
        'r': [
            [INV['FUR'], 0x1],
            [INV['CORD'], 0x2]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['EARMUFFS'],
        'id2': INV['EARMUFFS'],
        'time': 0x1 / 0x5,
        't': CATEGORY['CLOTHES']
    }, {
        'r': [
            [INV['EARMUFFS'], 0x1],
            [INV['FUR_WOLF'], 0x5],
            [INV['CORD'], 0x4]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['COAT'],
        'id2': INV['COAT'],
        'time': 0x1 / 0xc,
        't': CATEGORY['CLOTHES']
    }, {
        'r': [
            [INV['COAT'], 0x1],
            [INV['FUR_WINTER'], 0x5],
            [INV['BLUE_CORD'], 0x4]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['CAP_SCARF'],
        'id2': INV['CAP_SCARF'],
        'time': 0x1 / 0x1e,
        't': CATEGORY['CLOTHES']
    }, {
        'r': [
            [INV['CAP_SCARF'], 0x1],
            [INV['FUR_WINTER'], 0x5],
            [INV['FUR_MAMMOTH'], 0xa],
            [INV['BLUE_CORD'], 0x4]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['FUR_HAT'],
        'id2': INV['FUR_HAT'],
        'time': 0x1 / 0x32,
        't': CATEGORY['CLOTHES']
    }, {
        'r': [
            [INV['WOOD'], 0x32]
        ],
        'w': 0x0,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['WOOD_HELMET'],
        'id2': INV['WOOD_HELMET'],
        'time': 0x1 / 0x5,
        't': CATEGORY['CLOTHES']
    }, {
        'r': [
            [INV['STONE'], 0x4b],
            [INV['WOOD'], 0x4b],
            [INV['WOOD_HELMET'], 0x1]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['STONE_HELMET'],
        'id2': INV['STONE_HELMET'],
        'time': 0x1 / 0xa,
        't': CATEGORY['CLOTHES']
    }, {
        'r': [
            [INV['STONE'], 0x5a],
            [INV['WOOD'], 0x5a],
            [INV['GOLD'], 0x5a],
            [INV['STONE_HELMET'], 0x1]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['GOLD_HELMET'],
        'id2': INV['GOLD_HELMET'],
        'time': 0x1 / 0x14,
        't': CATEGORY['CLOTHES']
    }, {
        'r': [
            [INV['STONE'], 0x64],
            [INV['GOLD'], 0x64],
            [INV['DIAMOND'], 0x64],
            [INV['GOLD_HELMET'], 0x1]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['DIAMOND_HELMET'],
        'id2': INV['DIAMOND_HELMET'],
        'time': 0x1 / 0x1e,
        't': CATEGORY['CLOTHES']
    }, {
        'r': [
            [INV['AMETHYST'], 0x50],
            [INV['GOLD'], 0x96],
            [INV['DIAMOND'], 0x78],
            [INV['DIAMOND_HELMET'], 0x1]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['AMETHYST_HELMET'],
        'id2': INV['AMETHYST_HELMET'],
        'time': 0x1 / 0x3c,
        't': CATEGORY['CLOTHES']
    }, {
        'r': [
            [INV['REIDITE'], 0x50],
            [INV['DIAMOND'], 0x96],
            [INV['AMETHYST'], 0x78],
            [INV['AMETHYST_HELMET'], 0x1]
        ],
        'w': 0x1,
        'f': 0x1,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['REIDITE_HELMET'],
        'id2': INV['REIDITE_HELMET'],
        'time': 0x1 / 0x5a,
        't': CATEGORY['CLOTHES']
    }, {
        'r': [
            [INV['SCALES'], 0x2],
            [INV['DIAMOND'], 0x28],
            [INV['CORD'], 0x4]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['DIVING_MASK'],
        'id2': INV['DIVING_MASK'],
        'time': 0x1 / 0x14,
        't': CATEGORY['CLOTHES']
    }, {
        'r': [
            [INV['DIVING_MASK'], 0x1],
            [INV['GOLD'], 0x50],
            [INV['KRAKEN_SKIN'], 0x1],
            [INV['AMETHYST'], 0x14]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['SUPER_DIVING_SUIT'],
        'id2': INV['SUPER_DIVING_SUIT'],
        'time': 0x1 / 0x5a,
        't': CATEGORY['CLOTHES']
    }, {
        'r': [
            [INV['FLAME'], 0x5],
            [INV['DIAMOND'], 0x32],
            [INV['BLUE_CORD'], 0x5]
        ],
        'w': 0x1,
        'f': 0x1,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['DIAMOND_PROTECTION'],
        'id2': INV['DIAMOND_PROTECTION'],
        'time': 0x1 / 0x14,
        't': CATEGORY['CLOTHES']
    }, {
        'r': [
            [INV['DIAMOND_PROTECTION'], 0x1],
            [INV['FLAME'], 0xa],
            [INV['AMETHYST'], 0x32]
        ],
        'w': 0x1,
        'f': 0x1,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['AMETHYST_PROTECTION'],
        'id2': INV['AMETHYST_PROTECTION'],
        'time': 0x1 / 0x3c,
        't': CATEGORY['CLOTHES']
    }, {
        'r': [
            [INV['AMETHYST_PROTECTION'], 0x1],
            [INV['FLAME'], 0xf],
            [INV['AMETHYST'], 0x32],
            [INV['REIDITE'], 0x32]
        ],
        'w': 0x1,
        'f': 0x1,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['REIDITE_PROTECTION'],
        'id2': INV['REIDITE_PROTECTION'],
        'time': 0x1 / 0x5a,
        't': CATEGORY['CLOTHES']
    }, {
        'r': [
            [INV['CORD'], 0x4],
            [INV['FUR_BOAR'], 0x2]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['TURBAN1'],
        'id2': INV['TURBAN1'],
        'time': 0x1 / 0xf,
        't': CATEGORY['CLOTHES']
    }, {
        'r': [
            [INV['TURBAN1'], 0x1],
            [INV['CORD'], 0x6],
            [INV['FUR_BOAR'], 0x4],
            [INV['VULTURE_FEATHER'], 0xc],
            [INV['PENGUIN_FEATHER'], 0x4]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['TURBAN2'],
        'id2': INV['TURBAN2'],
        'time': 0x1 / 0x96,
        't': CATEGORY['CLOTHES']
    }, {
        'r': [
            [INV['CORD'], 0x6],
            [INV['FUR_WOLF'], 0x5]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['BAG'],
        'id2': INV['BAG'],
        'time': 0x1 / 0xf,
        't': CATEGORY['CLOTHES']
    }, {
        'r': [
            [INV['WOOD'], 0x14]
        ],
        'w': 0x0,
        'f': 0x1,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['PAPER'],
        'id2': INV['PAPER'],
        'time': 0x1 / 0x3,
        't': CATEGORY['Utils']
    }, {
        'r': [
            [INV['DIAMOND'], 0x1],
            [INV['CORD'], 0x1]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['BLUE_CORD'],
        'id2': INV['BLUE_CORD'],
        'time': 0x1 / 0x3,
        't': CATEGORY['Utils']
    }, {
        'r': [
            [INV['GOLD'], 0xa]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['LOCK'],
        'id2': INV['LOCK'],
        'time': 0x1 / 0x5,
        't': CATEGORY['Utils']
    }, {
        'r': [
            [INV['GOLD'], 0xfa]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['LOCKPICK'],
        'id2': INV['LOCKPICK'],
        'time': 0x1 / 0x3c,
        't': CATEGORY['Utils']
    }, {
        'r': [
            [INV['WOOD'], 0x32]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['TOTEM'],
        'id2': INV['TOTEM'],
        'time': 0x1 / 0xa,
        't': CATEGORY['Utils']
    }, {
        'r': [
            [INV['WOOD'], 0xf]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['BRIDGE'],
        'id2': INV['BRIDGE'],
        'time': 0x1 / 0x5,
        't': CATEGORY['Utils']
    }, {
        'r': [
            [INV['WOOD'], 0x1e]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['ROOF'],
        'id2': INV['ROOF'],
        'time': 0x1 / 0x5,
        't': CATEGORY['Utils']
    }, {
        'r': [
            [INV['WOOD'], 0x78]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['WOOD_TOWER'],
        'id2': INV['WOOD_TOWER'],
        'time': 0x1 / 0xf,
        't': CATEGORY['Utils']
    }, {
        'r': [
            [INV['WOOD'], 0x14],
            [INV['GROUND'], 0xf]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['PLOT'],
        'id2': INV['PLOT'],
        'time': 0x1 / 0x5,
        't': CATEGORY['Utils']
    }, {
        'r': [
            [INV['SAND'], 0x19]
        ],
        'w': 0x1,
        'f': 0x1,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['BOTTLE_EMPTY'],
        'id2': INV['BOTTLE_EMPTY'],
        'time': 0x1 / 0x5,
        't': CATEGORY['FOODS']
    }, {
        'r': [
            [INV['BOTTLE_EMPTY'], 0x1]
        ],
        'w': 0x0,
        'f': 0x0,
        'o': 0x1,
        'e': 0x0,
        'id': CRAFT['BOTTLE_FULL'],
        'id2': INV['BOTTLE_FULL'],
        'time': 0x1 / 0x5,
        't': CATEGORY['FOODS']
    }, {
        'r': [
            [INV['ICE'], 0x14],
            [INV['BOTTLE_EMPTY'], 0x1]
        ],
        'w': 0x0,
        'f': 0x1,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['BOTTLE_FULL_2'],
        'id2': INV['BOTTLE_FULL'],
        'time': 0x1 / 0xa,
        't': CATEGORY['FOODS']
    }, {
        'r': [
            [INV['BOTTLE_EMPTY'], 0x1]
        ],
        'w': 0x0,
        'f': 0x0,
        'o': 0x0,
        'e': 0x1,
        'id': CRAFT['BOTTLE_FULL_3'],
        'id2': INV['BOTTLE_FULL'],
        'time': 0x1 / 0x3,
        't': CATEGORY['FOODS']
    }, {
        'r': [
            [INV['WOOD'], 0x3c],
            [INV['STONE'], 0x14],
            [INV['CORD'], 0x2]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['WINDMILL'],
        'id2': INV['WINDMILL'],
        'time': 0x1 / 0xa,
        't': CATEGORY['Utils']
    }, {
        'r': [
            [INV['DIAMOND'], 0x28],
            [INV['STONE'], 0x2d]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['RESURRECTION'],
        'id2': INV['RESURRECTION'],
        'time': 0x1 / 0x14,
        't': CATEGORY['Utils']
    }, {
        'r': [
            [INV['RESURRECTION'], 0x1],
            [INV['EMERALD'], 0x28],
            [INV['SANDWORM_JUICE'], 0x1]
        ],
        'w': 0x1,
        'f': 0x1,
        'o': 0x1,
        'e': 0x0,
        'id': CRAFT['EMERALD_MACHINE'],
        'id2': INV['EMERALD_MACHINE'],
        'time': 0x1 / 0xc8,
        't': CATEGORY['Utils']
    }, {
        'r': [
            [INV['WOOD'], 0x32],
            [INV['STONE'], 0x64]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['EXTRACTOR_MACHINE_STONE'],
        'id2': INV['EXTRACTOR_MACHINE_STONE'],
        'time': 0x1 / 0x5a,
        't': CATEGORY['Utils']
    }, {
        'r': [
            [INV['STONE'], 0x3c],
            [INV['GOLD'], 0x78]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['EXTRACTOR_MACHINE_GOLD'],
        'id2': INV['EXTRACTOR_MACHINE_GOLD'],
        'time': 0x1 / 0x5a,
        't': CATEGORY['Utils']
    }, {
        'r': [
            [INV['GOLD'], 0x46],
            [INV['DIAMOND'], 0x8c]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['EXTRACTOR_MACHINE_DIAMOND'],
        'id2': INV['EXTRACTOR_MACHINE_DIAMOND'],
        'time': 0x1 / 0x5a,
        't': CATEGORY['Utils']
    }, {
        'r': [
            [INV['DIAMOND'], 0x50],
            [INV['AMETHYST'], 0xa0]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['EXTRACTOR_MACHINE_AMETHYST'],
        'id2': INV['EXTRACTOR_MACHINE_AMETHYST'],
        'time': 0x1 / 0x5a,
        't': CATEGORY['Utils']
    }, {
        'r': [
            [INV['AMETHYST'], 0x5a],
            [INV['REIDITE'], 0xb4]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['EXTRACTOR_MACHINE_REIDITE'],
        'id2': INV['EXTRACTOR_MACHINE_REIDITE'],
        'time': 0x1 / 0x5a,
        't': CATEGORY['Utils']
    }, {
        'r': [
            [INV['STONE'], 0x46]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['SPANNER'],
        'id2': INV['SPANNER'],
        'time': 0x1 / 0xa,
        't': CATEGORY['TOOLS']
    }, {
        'r': [
            [INV['STONE'], 0x46],
            [INV['WOOD'], 0x32]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['MACHETE'],
        'id2': INV['MACHETE'],
        'time': 0x1 / 0xa,
        't': CATEGORY['TOOLS']
    }, {
        'r': [
            [INV['WOOD'], 0x28],
            [INV['STONE'], 0x28]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['BREAD_OVEN'],
        'id2': INV['BREAD_OVEN'],
        'time': 0x1 / 0xa,
        't': CATEGORY['Utils']
    }, {
        'r': [
            [INV['BREAD'], 0x1],
            [INV['COOKED_MEAT'], 0x1]
        ],
        'w': 0x0,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['SANDWICH'],
        'id2': INV['SANDWICH'],
        'time': 0x1 / 0x3,
        't': CATEGORY['FOODS']
    }, {
        'r': [
            [INV['BLUE_CORD'], 0x1e],
            [INV['DRAGON_CUBE'], 0x1],
            [INV['AMETHYST'], 0x96],
            [INV['DRAGON_HEART'], 0x3]
        ],
        'w': 0x1,
        'f': 0x1,
        'o': 0x1,
        'e': 0x0,
        'id': CRAFT['DRAGON_HELMET'],
        'id2': INV['DRAGON_HELMET'],
        'time': 0x1 / 0x78,
        't': CATEGORY['CLOTHES']
    }, {
        'r': [
            [INV['DRAGON_HELMET'], 0x1],
            [INV['LAVA_CUBE'], 0x1],
            [INV['REIDITE'], 0x96],
            [INV['LAVA_HEART'], 0x2]
        ],
        'w': 0x1,
        'f': 0x1,
        'o': 0x1,
        'e': 0x0,
        'id': CRAFT['LAVA_HELMET'],
        'id2': INV['LAVA_HELMET'],
        'time': 0x1 / 0xb4,
        't': CATEGORY['CLOTHES']
    }, {
        'r': [
            [INV['GOLD_HELMET'], 0x1],
            [INV['CRAB_LOOT'], 0xa],
            [INV['CRAB_STICK'], 0xa],
            [INV['CORD'], 0xa]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['CROWN_CRAB'],
        'id2': INV['CROWN_CRAB'],
        'time': 0x1 / 0x3c,
        't': CATEGORY['CLOTHES']
    }, {
        'r': [
            [INV['BLUE_CORD'], 0x14],
            [INV['DRAGON_ORB'], 0x1],
            [INV['AMETHYST'], 0x96],
            [INV['DRAGON_HEART'], 0x3]
        ],
        'w': 0x1,
        'f': 0x1,
        'o': 0x1,
        'e': 0x0,
        'id': CRAFT['DRAGON_SWORD'],
        'id2': INV['DRAGON_SWORD'],
        'time': 0x1 / 0x78,
        't': CATEGORY['WEAPONS']
    }, {
        'r': [
            [INV['DRAGON_SWORD'], 0x1],
            [INV['LAVA_ORB'], 0x1],
            [INV['REIDITE'], 0x96],
            [INV['LAVA_HEART'], 0x2]
        ],
        'w': 0x1,
        'f': 0x1,
        'o': 0x1,
        'e': 0x0,
        'id': CRAFT['LAVA_SWORD'],
        'id2': INV['LAVA_SWORD'],
        'time': 0x1 / 0xb4,
        't': CATEGORY['WEAPONS']
    }, {
        'r': [
            [INV['WOOD'], 0x64],
            [INV['CORD'], 0x4]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['WOOD_BOW'],
        'id2': INV['WOOD_BOW'],
        'time': 0x1 / 0x14,
        't': CATEGORY['WEAPONS']
    }, {
        'r': [
            [INV['WOOD'], 0x1e]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['WOOD_ARROW'],
        'id2': INV['WOOD_ARROW'],
        'time': 0x1 / 0x5,
        't': CATEGORY['WEAPONS']
    }, {
        'r': [
            [INV['STONE'], 0xc8],
            [INV['CORD'], 0x8],
            [INV['PENGUIN_FEATHER'], 0x4],
            [INV['WOOD_BOW'], 0x1]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['STONE_BOW'],
        'id2': INV['STONE_BOW'],
        'time': 0x1 / 0x19,
        't': CATEGORY['WEAPONS']
    }, {
        'r': [
            [INV['STONE'], 0x14],
            [INV['HAWK_FEATHER'], 0x1]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['STONE_ARROW'],
        'id2': INV['STONE_ARROW'],
        'time': 0x1 / 0x5,
        't': CATEGORY['WEAPONS']
    }, {
        'r': [
            [INV['GOLD'], 0xc8],
            [INV['CORD'], 0xc],
            [INV['HAWK_FEATHER'], 0x4],
            [INV['PENGUIN_FEATHER'], 0x4],
            [INV['STONE_BOW'], 0x1]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['GOLD_BOW'],
        'id2': INV['GOLD_BOW'],
        'time': 0x1 / 0x1e,
        't': CATEGORY['WEAPONS']
    }, {
        'r': [
            [INV['GOLD'], 0x14],
            [INV['PENGUIN_FEATHER'], 0x1]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['GOLD_ARROW'],
        'id2': INV['GOLD_ARROW'],
        'time': 0x1 / 0xa,
        't': CATEGORY['WEAPONS']
    }, {
        'r': [
            [INV['DIAMOND'], 0xc8],
            [INV['BLUE_CORD'], 0xa],
            [INV['HAWK_FEATHER'], 0x8],
            [INV['PENGUIN_FEATHER'], 0x8],
            [INV['GOLD_BOW'], 0x1]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['DIAMOND_BOW'],
        'id2': INV['DIAMOND_BOW'],
        'time': 0x1 / 0x23,
        't': CATEGORY['WEAPONS']
    }, {
        'r': [
            [INV['DIAMOND'], 0xa],
            [INV['PENGUIN_FEATHER'], 0x1]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['DIAMOND_ARROW'],
        'id2': INV['DIAMOND_ARROW'],
        'time': 0x1 / 0xa,
        't': CATEGORY['WEAPONS']
    }, {
        'r': [
            [INV['AMETHYST'], 0xc8],
            [INV['BLUE_CORD'], 0xa],
            [INV['PENGUIN_FEATHER'], 0x8],
            [INV['VULTURE_FEATHER'], 0x8],
            [INV['DIAMOND_BOW'], 0x1]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['AMETHYST_BOW'],
        'id2': INV['AMETHYST_BOW'],
        'time': 0x1 / 0x28,
        't': CATEGORY['WEAPONS']
    }, {
        'r': [
            [INV['AMETHYST'], 0xa],
            [INV['VULTURE_FEATHER'], 0x1]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['AMETHYST_ARROW'],
        'id2': INV['AMETHYST_ARROW'],
        'time': 0x1 / 0xf,
        't': CATEGORY['WEAPONS']
    }, {
        'r': [
            [INV['REIDITE'], 0xc8],
            [INV['BLUE_CORD'], 0xa],
            [INV['KRAKEN_SKIN'], 0x1],
            [INV['AMETHYST_BOW'], 0x1]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['REIDITE_BOW'],
        'id2': INV['REIDITE_BOW'],
        'time': 0x1 / 0x2d,
        't': CATEGORY['WEAPONS']
    }, {
        'r': [
            [INV['REIDITE'], 0xa],
            [INV['VULTURE_FEATHER'], 0x1],
            [INV['FLAME'], 0x1]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['REIDITE_ARROW'],
        'id2': INV['REIDITE_ARROW'],
        'time': 0x1 / 0xf,
        't': CATEGORY['WEAPONS']
    }, {
        'r': [
            [INV['EMERALD'], 0xc8],
            [INV['BLUE_CORD'], 0xa],
            [INV['DRAGON_ORB'], 0x1],
            [INV['REIDITE_BOW'], 0x1]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['DRAGON_BOW'],
        'id2': INV['DRAGON_BOW'],
        'time': 0x1 / 0x32,
        't': CATEGORY['WEAPONS']
    }, {
        'r': [
            [INV['EMERALD'], 0xa],
            [INV['SANDWORM_JUICE'], 0x1]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['DRAGON_ARROW'],
        'id2': INV['DRAGON_ARROW'],
        'time': 0x1 / 0x14,
        't': CATEGORY['WEAPONS']
    }, {
        'r': [
            [INV['WOOD'], 0x64]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['WOOD_SHIELD'],
        'id2': INV['WOOD_SHIELD'],
        'time': 0x1 / 0x19,
        't': CATEGORY['WEAPONS']
    }, {
        'r': [
            [INV['WOOD_SHIELD'], 0x1],
            [INV['STONE'], 0x64],
            [INV['WOOD'], 0x32]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['STONE_SHIELD'],
        'id2': INV['STONE_SHIELD'],
        'time': 0x1 / 0x28,
        't': CATEGORY['WEAPONS']
    }, {
        'r': [
            [INV['STONE_SHIELD'], 0x1],
            [INV['GOLD'], 0x32],
            [INV['STONE'], 0x32],
            [INV['WOOD'], 0x32]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['GOLD_SHIELD'],
        'id2': INV['GOLD_SHIELD'],
        'time': 0x1 / 0x32,
        't': CATEGORY['WEAPONS']
    }, {
        'r': [
            [INV['GOLD_SHIELD'], 0x1],
            [INV['DIAMOND'], 0x32],
            [INV['GOLD'], 0x32],
            [INV['STONE'], 0x32]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['DIAMOND_SHIELD'],
        'id2': INV['DIAMOND_SHIELD'],
        'time': 0x1 / 0x46,
        't': CATEGORY['WEAPONS']
    }, {
        'r': [
            [INV['DIAMOND_SHIELD'], 0x1],
            [INV['AMETHYST'], 0x32],
            [INV['DIAMOND'], 0x32],
            [INV['GOLD'], 0x32]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['AMETHYST_SHIELD'],
        'id2': INV['AMETHYST_SHIELD'],
        'time': 0x1 / 0x5a,
        't': CATEGORY['WEAPONS']
    }, {
        'r': [
            [INV['AMETHYST_SHIELD'], 0x1],
            [INV['REIDITE'], 0x32],
            [INV['AMETHYST'], 0x32],
            [INV['DIAMOND'], 0x32]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['REIDITE_SHIELD'],
        'id2': INV['REIDITE_SHIELD'],
        'time': 0x1 / 0x78,
        't': CATEGORY['WEAPONS']
    }, {
        'r': [
            [INV['GEMME_GREEN'], 0x1],
            [INV['GOLD'], 0xc8]
        ],
        'w': 0x1,
        'f': 0x1,
        'o': 0x1,
        'e': 0x0,
        'id': CRAFT['CROWN_GREEN'],
        'id2': INV['CROWN_GREEN'],
        'time': 0x1 / 0x3c,
        't': CATEGORY['CLOTHES']
    }, {
        'r': [
            [INV['GEMME_ORANGE'], 0x1],
            [INV['GOLD'], 0xc8]
        ],
        'w': 0x1,
        'f': 0x1,
        'o': 0x1,
        'e': 0x0,
        'id': CRAFT['CROWN_ORANGE'],
        'id2': INV['CROWN_ORANGE'],
        'time': 0x1 / 0x3c,
        't': CATEGORY['CLOTHES']
    }, {
        'r': [
            [INV['GEMME_BLUE'], 0x1],
            [INV['GOLD'], 0xc8],
            [INV['DRAGON_HEART'], 0x1]
        ],
        'w': 0x1,
        'f': 0x1,
        'o': 0x1,
        'e': 0x0,
        'id': CRAFT['CROWN_BLUE'],
        'id2': INV['CROWN_BLUE'],
        'time': 0x1 / 0x3c,
        't': CATEGORY['CLOTHES']
    }, {
        'r': [
            [INV['FUR_WOLF'], 0xa],
            [INV['FUR'], 0x5],
            [INV['CORD'], 0x6]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['HOOD'],
        'id2': INV['HOOD'],
        'time': 0x1 / 0xa,
        't': CATEGORY['CLOTHES']
    }, {
        'r': [
            [INV['FUR'], 0x3],
            [INV['CORD'], 0x2]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['PEASANT'],
        'id2': INV['PEASANT'],
        'time': 0x1 / 0xa,
        't': CATEGORY['CLOTHES']
    }, {
        'r': [
            [INV['HOOD'], 0x1],
            [INV['SPECIAL_FUR_2'], 0x1],
            [INV['FUR_WINTER'], 0xf],
            [INV['BLUE_CORD'], 0x5],
            [INV['PENGUIN_FEATHER'], 0x8]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['WINTER_HOOD'],
        'id2': INV['WINTER_HOOD'],
        'time': 0x1 / 0x3c,
        't': CATEGORY['CLOTHES']
    }, {
        'r': [
            [INV['PEASANT'], 0x1],
            [INV['SPECIAL_FUR'], 0x1],
            [INV['FUR_WINTER'], 0xa],
            [INV['BLUE_CORD'], 0x5],
            [INV['PENGUIN_FEATHER'], 0x8]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['WINTER_PEASANT'],
        'id2': INV['WINTER_PEASANT'],
        'time': 0x1 / 0x3c,
        't': CATEGORY['CLOTHES']
    }, {
        'r': [
            [INV['BUCKET_EMPTY'], 0x1]
        ],
        'w': 0x0,
        'f': 0x0,
        'o': 0x1,
        'e': 0x0,
        'id': CRAFT['BUCKET_FULL'],
        'id2': INV['BUCKET_FULL'],
        'time': 0x1 / 0x5,
        't': CATEGORY['TOOLS']
    }, {
        'r': [
            [INV['WOOD'], 0x14],
            [INV['CORD'], 0x1]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['BUCKET_EMPTY'],
        'id2': INV['BUCKET_EMPTY'],
        'time': 0x1 / 0x5,
        't': CATEGORY['TOOLS']
    }, {
        'r': [
            [INV['STONE'], 0x64],
            [INV['GROUND'], 0x1e]
        ],
        'w': 0x1,
        'f': 0x1,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['WELL'],
        'id2': INV['WELL'],
        'time': 0x1 / 0xa,
        't': CATEGORY['Utils']
    }, {
        'r': [
            [INV['WOOD'], 0x14]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['SIGN'],
        'id2': INV['SIGN'],
        'time': 0x1 / 0x5,
        't': CATEGORY['Utils']
    }, {
        'r': [
            [INV['WOOD'], 0x64],
            [INV['STONE'], 0x32],
            [INV['FUR'], 0x5],
            [INV['FUR_WOLF'], 0x5],
            [INV['CORD'], 0x6]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['BED'],
        'id2': INV['BED'],
        'time': 0x1 / 0x14,
        't': CATEGORY['Utils']
    }, {
        'r': [
            [INV['WOOD'], 0xfa],
            [INV['BLUE_CORD'], 0xa],
            [INV['FUR_WINTER'], 0x2],
            [INV['SCALES'], 0x2]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['BOAT'],
        'id2': INV['BOAT'],
        'time': 0x1 / 0x32,
        't': CATEGORY['Utils']
    }, {
        'r': [
            [INV['WOOD'], 0xfa],
            [INV['CORD'], 0xa],
            [INV['FUR_WINTER'], 0x2],
            [INV['PENGUIN_FEATHER'], 0x8]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['SLED'],
        'id2': INV['SLED'],
        'time': 0x1 / 0x32,
        't': CATEGORY['Utils']
    }, {
        'r': [
            [INV['CORD'], 0xa],
            [INV['FUR_WOLF'], 0x6],
            [INV['FUR'], 0x4],
            [INV['SAND'], 0x32]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['SADDLE'],
        'id2': INV['SADDLE'],
        'time': 0x1 / 0x14,
        't': CATEGORY['Utils']
    }, {
        'r': [
            [INV['WOOD'], 0xfa],
            [INV['CORD'], 0xa],
            [INV['PAPER'], 0xa],
            [INV['HAWK_FEATHER'], 0x8]
        ],
        'w': 0x1,
        'f': 0x0,
        'o': 0x0,
        'e': 0x0,
        'id': CRAFT['PLANE'],
        'id2': INV['PLANE'],
        'time': 0x1 / 0x32,
        't': CATEGORY['Utils']
    }],
    COUNTER = 0x12c;
TEXT = {
    'YOU_CANNOT_JOIN': COUNTER++,
    'KICKED': COUNTER++,
    'KEY_ALREADY': COUNTER++,
    'KEY_WRONG': COUNTER++,
    'OLD_VERSION': COUNTER++,
    'NO_MORE_RESOURCES': COUNTER++,
    'SURVIVED_1DAY': COUNTER++,
    'SURVIVED': COUNTER++,
    'DAYS': COUNTER++,
    'DEAD_SAD': COUNTER++,
    'SPAM_ME': COUNTER++,
    'SPAM_ME2': COUNTER++,
    'EMPTY': COUNTER++,
    'INV_FULL': COUNTER++,
    'DEAD': COUNTER++,
    'WRONG_TOOL': COUNTER++,
    'JOIN_TEAM': COUNTER++,
    'YOU_DEAD': COUNTER++,
    'JOINED_TEAM': COUNTER++,
    'TEAM_DESTROYED': COUNTER++,
    'LEFT_TEAM': COUNTER++,
    'LEFT_TEAM2': COUNTER++,
    'TOKEN': COUNTER++,
    'CHOOSE': COUNTER++,
    'PLAYERS': COUNTER++,
    'TOTAL_PLAYERS': COUNTER++,
    'TOTAL_MODE': COUNTER++,
    'COMMING_SOON': COUNTER++,
    'BACK_TO_THE_GAME': COUNTER++,
    'TWITTER': COUNTER++,
    'FACEBOOK': COUNTER++,
    'KIT_NEXT': COUNTER++,
    'POINTS': COUNTER++,
    'SCORE': COUNTER++,
    'KILL': COUNTER++,
    'DAYS_SURVIVED': COUNTER++,
    'MODE_FREE': COUNTER++,
    'MODE_GRID': COUNTER++,
    'NEW_VERSION': COUNTER++,
    'WRONG_PASSWORD': COUNTER++,
    'TEMPEST_OFF': COUNTER++,
    'TEMPEST_ON': COUNTER++,
    'BLIZZARD_OFF': COUNTER++,
    'BLIZZARD_ON': COUNTER++
};
var set_english = function() {
        LANG[INV['EXTRACTOR_MACHINE_STONE']] = ['Stone\x20Extractor', 'Can\x20produce\x20stone\x20with\x20wood', 'It\x20takes\x2010\x20seconds\x20to\x20drill\x20Stone', 'Durability:\x202000'], LANG[INV['EXTRACTOR_MACHINE_GOLD']] = ['Gold\x20Extractor', 'Can\x20produce\x20gold\x20with\x20wood', 'It\x20takes\x2010\x20seconds\x20to\x20drill\x20Gold', 'Durability:\x202000'], LANG[INV['EXTRACTOR_MACHINE_DIAMOND']] = ['Diamond\x20Extractor', 'Can\x20produce\x20diamond\x20with\x20wood', 'It\x20takes\x2010\x20seconds\x20to\x20drill\x20Diamond', 'Durability:\x202000'], LANG[INV['EXTRACTOR_MACHINE_AMETHYST']] = ['Amethyst\x20Extractor', 'Can\x20produce\x20amethyst\x20with\x20wood', 'It\x20takes\x2010\x20seconds\x20to\x20drill\x20Amethyst', 'Durability:\x202000'], LANG[INV['EXTRACTOR_MACHINE_REIDITE']] = ['Reidite\x20Extractor', 'Can\x20produce\x20reidite\x20with\x20wood', 'It\x20takes\x2010\x20seconds\x20to\x20drill\x20Reidite', 'Durability:\x202000'], LANG[INV['REIDITE_SHIELD']] = ['Reidite\x20Shield', 'A\x20must\x20for\x20the\x20pros\x20of\x20the\x20getaway', 'You\x20can\x20not\x20attack\x20when\x20you\x20use\x20it', 'Damage:\x206', 'Players\x20Defense:\x206'], LANG[INV['AMETHYST_SHIELD']] = ['Amethyst\x20Shield', 'Because\x20you\x20know\x20how\x20to\x20run\x20away\x20in\x20style', 'You\x20can\x20not\x20attack\x20when\x20you\x20use\x20it', 'Damage:\x205', 'Players\x20Defense:\x205'], LANG[INV['DIAMOND_SHIELD']] = ['Diamond\x20Shield', 'Run\x20or\x20attack,\x20you\x27ve\x20obviously\x20made\x20your\x20choice.', 'You\x20can\x20not\x20attack\x20when\x20you\x20use\x20it', 'Damage:\x204', 'Players\x20Defense:\x204'], LANG[INV['GOLD_SHIELD']] = ['Gold\x20Shield', 'When\x20it\x27s\x20golden,\x20it\x27s\x20always\x20better.', 'You\x20can\x20not\x20attack\x20when\x20you\x20use\x20it', 'Damage:\x203', 'Players\x20Defense:\x203'], LANG[INV['STONE_SHIELD']] = ['Stone\x20Shield', 'Protects\x20you\x20a\x20bit\x20more', 'You\x20can\x20not\x20attack\x20when\x20you\x20use\x20it', 'Damage:\x202', 'Players\x20Defense:\x202'], LANG[INV['WOOD_SHIELD']] = ['Wood\x20Shield', 'Protects\x20you\x20a\x20bit', 'You\x20can\x20not\x20attack\x20when\x20you\x20use\x20it', 'Damage:\x201', 'Players\x20Defense:\x201'], LANG[INV['MACHETE']] = ['Machete', 'You\x20gather\x20more\x20from\x20mob\x20boxes', 'Useless\x20to\x20attack\x20mobs', 'Damage\x20against\x20Players:\x205'], LANG[INV['WOOD_TOWER']] = ['Tower', 'Allows\x20you\x20to\x20shoot\x20over\x20walls\x20with\x20a\x20bow', 'Does\x20not\x20allow\x20to\x20pass\x20through\x20roofs'], LANG[INV['DRAGON_ARROW']] = ['Dragon\x20Arrow', 'Must\x20be\x20used\x20with\x20a\x20Dragon\x20Bow', 'Damage:\x2045', 'Mobs\x20Damage:\x201200', 'Building\x20Damage:\x2045'], LANG[INV['DRAGON_BOW']] = ['Dragon\x20Bow', 'Also\x20called\x20the\x20One-Shot-Monster', 'Requiers\x20arrows\x20to\x20be\x20used'], LANG[INV['REIDITE_ARROW']] = ['Reidite\x20Arrow', 'Must\x20be\x20used\x20with\x20a\x20Reidite\x20or\x20a\x20Dragon\x20Bow', 'Damage:\x2040', 'Mobs\x20Damage:\x20900', 'Building\x20Damage:\x2040'], LANG[INV['REIDITE_BOW']] = ['Reidite\x20Bow', 'Makes\x20the\x20most\x20terrifying\x20monster\x20cry.', 'Requiers\x20any\x20arrows,\x20except\x20dragon\x20arrows,\x20to\x20be\x20used'], LANG[INV['AMETHYST_ARROW']] = ['Amethyst\x20Arrow', 'Must\x20be\x20used\x20with\x20Amethyst,\x20Reidite\x20or\x20Dragon\x20Bow', 'Damage:\x2035', 'Mobs\x20Damage:\x20600', 'Building\x20Damage:\x2035'], LANG[INV['AMETHYST_BOW']] = ['Amethyst\x20Bow', 'It\x27s\x20super\x20efficient!', 'Requiers\x20any\x20arrows,\x20except\x20dragon\x20and\x20reidite\x20arrows,\x20to\x20be\x20used'], LANG[INV['DIAMOND_ARROW']] = ['Diamond\x20Arrow', 'Must\x20be\x20used\x20with\x20Diamond,\x20Amethyst,\x20Reidite\x20or\x20Dragon\x20Bow', 'Damage:\x2030', 'Mobs\x20Damage:\x20300', 'Building\x20Damage:\x2030'], LANG[INV['DIAMOND_BOW']] = ['Diamond\x20Bow', 'Like\x20a\x20Robin\x20Wood\x20who\x20would\x20keep\x20the\x20diamonds', 'Requiers\x20wood,\x20stone,\x20gold\x20or\x20diamond\x20arrows\x20to\x20be\x20used'], LANG[INV['GOLD_ARROW']] = ['Gold\x20Arrow', 'Must\x20be\x20used\x20with\x20a\x20Bow,\x20except\x20a\x20wooden\x20and\x20stone\x20one', 'Damage:\x2025', 'Mobs\x20Damage:\x20200', 'Building\x20Damage:\x2025'], LANG[INV['GOLD_BOW']] = ['Gold\x20Bow', 'When\x20it\x27s\x20golden,\x20it\x27s\x20better.', 'Requiers\x20wood,\x20stone\x20or\x20gold\x20arrows\x20to\x20be\x20used'], LANG[INV['STONE_ARROW']] = ['Stone\x20Arrow', 'Must\x20be\x20used\x20with\x20a\x20Bow,\x20except\x20a\x20wooden\x20one', 'Damage:\x2020', 'Mobs\x20Damage:\x20100', 'Building\x20Damage:\x2020'], LANG[INV['STONE_BOW']] = ['Stone\x20Bow', 'Like\x20Robin\x20Wood', 'Requiers\x20wood\x20and\x20stone\x20arrows\x20to\x20be\x20used'], LANG[INV['WOOD_ARROW']] = ['Wood\x20Arrow', 'Must\x20be\x20used\x20with\x20any\x20bow', 'Damage:\x2015', 'Mobs\x20Damage:\x2020', 'Building\x20Damage:\x2015'], LANG[INV['WOOD_BOW']] = ['Wood\x20Bow', 'A\x20little\x20bow\x20that\x20does\x20not\x20do\x20many\x20damages.', 'Requiers\x20wood\x20arrows\x20to\x20be\x20used'], LANG[INV['EMERALD_MACHINE']] = ['Emerald\x20Machine', 'Allows\x20to\x20automatically\x20generate\x20score\x20points.', 'Be\x20careful,\x20you\x20can\x20only\x20build\x20one.', 'Once\x20placed\x20your\x20soul\x20is\x20connected\x20to\x20the\x20machine,\x20if\x20the\x20machine\x20is\x20destroyed,\x20you\x20will\x20die.', 'The\x20machine\x20can\x27t\x20be\x20build\x20in\x20the\x20sea', 'You\x20earn\x20more\x20points\x20in\x20the\x20desert,\x20than\x20in\x20the\x20lava,\x20than\x20in\x20winter,\x20than\x20in\x20the\x20forest.'], LANG[INV['FUR_BOAR']] = ['Boar\x20fur', 'Hakuna\x20Matata,\x20well,\x20he\x20can\x20no\x20longer\x20say\x20it'], LANG[INV['FUR_MAMMOTH']] = ['Mammoth\x20fur', 'Soft\x20and\x20warm.\x20Perfect\x20for\x20a\x20hat.'], LANG[INV['VULTURE_FEATHER']] = ['Vulture\x20Feather', 'From\x20a\x20deadly\x20vulture'], LANG[INV['EMERALD']] = ['Emerald', 'How\x20many\x20golden\x20breads\x20can\x20you\x20get\x20from\x20it?'], LANG[INV['SANDWORM_JUICE']] = ['Sand\x20Worm\x20Juice', 'I\x20don\x27t\x20want\x20to\x20know\x20how\x20you\x20got\x20this.'], LANG[INV['TURBAN1']] = ['Turban', 'Useful\x20to\x20survive\x20in\x20the\x20desert.'], LANG[INV['TURBAN2']] = ['Ninja\x20outfit', 'Essential\x20to\x20survive\x20in\x20the\x20desert'], LANG[INV['PILOT_HELMET']] = ['Pilot\x20Hat', 'Take\x20off\x20and\x20land\x20with\x20flying\x20objects\x20much\x20faster.'], LANG[INV['PILOT_GLASSES']] = ['Pilot\x20Glasses'], LANG[INV['MOUNT_BOAR']] = ['Tamed\x20Boar', 'Fast\x20on\x20lands\x20and\x20slow\x20on\x20water.'], LANG[INV['BABY_MAMMOTH']] = ['Tamed\x20Baby\x20Mammoth', 'Fast\x20on\x20lands\x20and\x20slow\x20on\x20water.'], LANG[INV['CRAB_BOSS']] = ['Tamed\x20Crab\x20Boss', 'Fast\x20on\x20lands\x20and\x20water,\x20and\x20slow\x20on\x20winter.', 'Gives\x20a\x20+10\x20damage\x20bonus\x20of\x20the\x20Crab\x20Spear', 'when\x20holding\x20a\x20Crab\x20Helmet'], LANG[INV['BABY_DRAGON']] = ['Tamed\x20Baby\x20Dragon', 'You\x20can\x20fly\x20with\x20it.', 'Faster\x20than\x20a\x20hawk', 'When\x20you\x20are\x20flying,', '\x20you\x20can\x20only\x20hit\x20people\x20who\x20are\x20flying\x20too'], LANG[INV['BABY_LAVA']] = ['Tamed\x20Baby\x20Lava\x20Dragon', 'You\x20can\x20fly\x20with\x20it.', 'Faster\x20than\x20a\x20baby\x20dragon', 'When\x20you\x20are\x20flying,', '\x20you\x20can\x20only\x20hit\x20people\x20who\x20are\x20flying\x20too'], LANG[INV['HAWK']] = ['Tamed\x20Hawk', 'You\x20can\x20fly\x20with\x20it.', 'When\x20you\x20are\x20flying,', '\x20you\x20can\x20only\x20hit\x20people\x20who\x20are\x20flying\x20too'], LANG[INV['SADDLE']] = ['Saddle', 'Hit\x20a\x20boar\x20with\x20it\x20to\x20tame\x20it.'], LANG[INV['WITCH']] = ['Witch\x20Hat', 'You\x27re\x20a\x20wizard\x20Starvy!'], LANG[INV['NIMBUS']] = ['Nimbus\x202000', 'That\x27s\x20not\x20just\x20a\x20broomstick,\x20Starvy,\x20it\x27s\x20a\x20Nimbus\x202000!', 'Only\x20works\x20with\x20the\x20witch\x20hat.'], LANG[INV['WAND1']] = ['Wand\x20of\x20life', 'Soon\x20we\x20must\x20all\x20choose\x20between\x20what\x20is\x20right\x20and\x20what\x20is\x20easy.', 'You\x20need\x20the\x20witch\x20hat\x20and\x20firefly\x20to\x20cast\x20spell'], LANG[INV['WAND2']] = ['Death\x20Wand', 'The\x20wand\x20of\x20He-Who-Must-Not-Be-Named...\x20Lapa...', 'You\x20need\x20the\x20witch\x20hat\x20and\x20firefly\x20to\x20cast\x20spell'], LANG[INV['FIREFLY']] = ['Firefly', 'They\x20make\x20a\x20cute\x20little\x20squeak.', 'However,\x20you\x20must\x20tear\x20off\x20his\x20wings\x20to\x20make\x20magical\x20projectiles\x20for\x20use\x20with\x20magic\x20wands.'], LANG[INV['PIRATE_HAT']] = ['Pirate\x20hat', 'You\x20are\x20faster\x20with\x20it\x20in\x20a\x20boat', 'Warm\x20outside\x20water\x20and\x20in\x20winter'], LANG[INV['SLED']] = ['Sled', 'You\x20are\x20faster\x20with\x20it\x20in\x20the\x20snow'], LANG[INV['BOAT']] = ['Boat', 'You\x20are\x20faster\x20with\x20it\x20in\x20the\x20water'], LANG[INV['PLANE']] = ['Plane', 'Fly\x20in\x20the\x20forest,\x20ocean\x20and\x20winter', 'Can\x27t\x20fly\x20in\x20desert\x20or\x20lava\x20biome', 'When\x20you\x20are\x20flying,', '\x20you\x20can\x20only\x20hit\x20people\x20who\x20are\x20flying\x20too'], LANG[INV['HAMMER_REIDITE']] = ['Reidite\x20Hammer', 'Useful\x20to\x20destroy\x20buildings', 'Damage:\x206', 'Building\x20Damage:\x2060'], LANG[INV['PENGUIN_FEATHER']] = ['Penguin\x20Feather', 'From\x20a\x20deadly\x20cute\x20penguin.'], LANG[INV['HAWK_FEATHER']] = ['Hawk\x20Feather', 'From\x20a\x20deadly\x20hawk.'], LANG[INV['CACTUS']] = ['Cactus', 'Food\x20:\x2020', 'Water\x20:\x2010'], LANG[INV['ALOE_VERA']] = ['Aloe\x20Vera', 'Allows\x20you\x20to\x20heal\x20a\x20little', 'Heal\x20:\x2030'], LANG[INV['ALOE_VERA_SEED']] = ['Aloe\x20Vera\x20Seed', 'Grows\x20into\x20Aloe\x20Vera'], LANG[INV['WATERMELON']] = ['Watermelon', 'Like\x20a\x20melon,\x20but\x20with\x20water', 'Food\x20:\x2015', 'Water\x20:\x208'], LANG[INV['WATERMELON_SEED']] = ['Watermelon\x20Seed', 'Grows\x20into\x20Watermelon', 'Birth:\x204min', 'Growth:\x20180s', 'Need\x20water:\x203min\x2020s', 'Durability:\x20400', 'Lifetime:\x208\x20days'], LANG[INV['REIDITE_DOOR']] = ['Reidite\x20Door', 'Noboby\x20can\x20destroy\x20it.\x20Except\x20very\x20reckless', 'Damage:\x205', 'On-Hit\x20Damage:\x201', 'Durability:\x204000'], LANG[INV['REIDITE_WALL']] = ['Reidite\x20Wall', 'Better\x20wall\x20in\x20StarveLand', 'Durability:\x204000'], LANG[INV['REIDITE_SPIKE']] = ['Reidite\x20Spike', 'It\x20hurts', 'Damage:\x2060', 'On-Hit\x20Damage:\x205', 'Durability:\x203000'], LANG[INV['REIDITE_DOOR_SPIKE']] = ['Reidite\x20Door\x20Spike', 'Painful\x20and\x20useful\x20at\x20the\x20same\x20time', 'Damage:\x2035', 'On-Hit\x20Damage:\x204', 'Durability:\x202000'], LANG[INV['PICK_REIDITE']] = ['Reidite\x20Pickaxe', 'Can\x20also\x20harvest\x20reidite,\x20better\x20look!', 'Damage:\x206', 'Building\x20Damage:\x201'], LANG[INV['WOOD_DOOR_SPIKE']] = ['Wood\x20Door\x20Spike', 'Can\x20be\x20opened\x20or\x20closed\x20by\x20you\x20or\x20your\x20friends', 'Damage:\x205', 'On-Hit\x20Damage:\x201', 'Durability:\x20100'], LANG[INV['STONE_DOOR_SPIKE']] = ['Stone\x20Door\x20Spike', 'A\x20stronger\x20door\x20is\x20more\x20serious', 'Damage:\x2010', 'On-Hit\x20Damage:\x202', 'Durability:\x20200'], LANG[INV['GOLD_DOOR_SPIKE']] = ['Gold\x20Door\x20Spike', 'Are\x20you\x20rebuilding\x20the\x20\x22el\x20dorado?\x22', 'Damage:\x2015', 'On-Hit\x20Damage:\x202', 'Durability:\x20400'], LANG[INV['DIAMOND_DOOR_SPIKE']] = ['Diamond\x20Door\x20Spike', 'For\x20a\x20shining\x20house', 'Damage:\x2025', 'On-Hit\x20Damage:\x203', 'Durability:\x20800'], LANG[INV['AMETHYST_DOOR_SPIKE']] = ['Amethyst\x20Door\x20Spike', 'Is\x20your\x20house\x20a\x20locked\x20safe?', 'Damage:\x2030', 'On-Hit\x20Damage:\x203', 'Durability:\x201600'], LANG[INV['CARROT']] = ['Carrot', 'Eat\x20it\x20or\x20sell\x20it\x20in\x20exchange\x20for\x20Tomato\x20Seed\x20or\x20Diamond', 'Food\x20:\x2020'], LANG[INV['TOMATO']] = ['Tomato', 'Eat\x20it\x20or\x20sell\x20it\x20in\x20exchange\x20for\x20Thornbush\x20Seed\x20or\x20Amethyst', 'Food\x20:\x2016'], LANG[INV['CARROT_SEED']] = ['Carrot\x20Seed', 'Grows\x20into\x20Carrot', 'Birth:\x204min', 'Growth:\x2030s', 'Need\x20water:\x201min\x2040s', 'Durability:\x20700', 'Lifetime:\x208\x20days'], LANG[INV['TOMATO_SEED']] = ['Tomato\x20Seed', 'Grows\x20into\x20Tomato', 'Birth:\x204min', 'Growth:\x2030s', 'Need\x20water:\x201min\x2040s', 'Durability:\x20700', 'Lifetime:\x208\x20days'], LANG[INV['PITCHFORK']] = ['Pitchfork', 'Perfect\x20for\x20gathering'], LANG[INV['PITCHFORK2']] = ['Golden\x20Pitchfork', 'Essential\x20for\x20a\x20real\x20farmer.'], LANG[INV['PITCHFORK_PART']] = ['Pitchfork\x20Part', 'Shaped\x20by\x20the\x20gods.\x20You\x27ll\x20never\x20be\x20hungry\x20again.'], LANG[INV['EGG0']] = ['Easter\x20Egg', 'Eat\x20it\x20or\x20sell\x20it\x20in\x20exchange\x20for\x20wood\x20or\x20stone', 'Food\x20:\x2012'], LANG[INV['EGG1']] = ['Easter\x20Egg', 'Eat\x20it\x20or\x20sell\x20it\x20in\x20exchange\x20for\x20gold', 'Food\x20:\x2025'], LANG[INV['EGG2']] = ['Easter\x20Egg', 'Eat\x20it\x20or\x20sell\x20it\x20in\x20exchange\x20for\x20diamond', 'Food\x20:\x2050'], LANG[INV['EGG3']] = ['Easter\x20Egg', 'Eat\x20it\x20or\x20sell\x20it\x20in\x20exchange\x20for\x20amethyst', 'Food\x20:\x2075'], LANG[INV['EGG4']] = ['Easter\x20Egg', 'Eat\x20it\x20or\x20sell\x20it\x20in\x20exchange\x20for\x20reidite', 'Food\x20:\x20100'], LANG[INV['LAVA_CUBE']] = ['Lava\x20Cube', 'You\x20feel\x20an\x20immense\x20power\x20emanating\x20from\x20this\x20cube'], LANG[INV['LAVA_ORB']] = ['Lava\x20Orb', 'You\x20feel\x20an\x20immense\x20power\x20emanating\x20from\x20this\x20orb'], LANG[INV['LAVA_SWORD']] = ['Lava\x20Sword', 'Don\x27t\x20be\x20too\x20mean\x20with\x20that.', 'Damage:\x2033', 'Building\x20Damage:\x2011'], LANG[INV['LAVA_SPEAR']] = ['Lava\x20Spear', 'Doing\x20good\x20or\x20doing\x20evil', 'Damage:\x2024', 'Building\x20Damage:\x208'], LANG[INV['LAVA_HEART']] = ['Lava\x20Heart', 'You\x20can\x20feel\x20a\x20strange\x20force.', 'A\x20huge\x20power\x20emanates\x20from\x20it.', 'We\x20must\x20not\x20find\x20the\x20secret.'], LANG[INV['LAVA_HELMET']] = ['Lava\x20Helmet', 'You\x20will\x20conquer\x20the\x20world', 'Players\x20Defense:\x209', 'Animals\x20Defense:\x2030'], LANG[INV['REIDITE_SPEAR']] = ['Reidite\x20Spear', 'Really\x20useful\x20against\x20Lava\x20Monsters', 'Damage:\x2022', 'Building\x20Damage:\x207'], LANG[INV['REIDITE_SWORD']] = ['Reidite\x20Sword', 'Really\x20useful\x20against\x20Lava\x20Monsters', 'Damage:\x2030', 'Building\x20Damage:\x2010'], LANG[INV['FLAME']] = ['Flame', 'It\x27s\x20hot!'], LANG[INV['DIAMOND_PROTECTION']] = ['Diamond\x20Protection', 'You\x20can\x20survive\x20longer\x20in\x20lava', 'Cools\x20down\x20in\x20lava\x20biome', 'Players\x20Defense:\x202,\x20Animals\x20Defense:\x208'], LANG[INV['AMETHYST_PROTECTION']] = ['Amethyst\x20Protection', 'You\x20can\x20survive\x20longer\x20in\x20lava', 'Cools\x20down\x20in\x20lava\x20biome', 'Players\x20Defense:\x205,\x20Animals\x20Defense:\x2013'], LANG[INV['REIDITE_PROTECTION']] = ['Reidite\x20Protection', 'You\x20can\x20survive\x20longer\x20in\x20lava', 'Cools\x20down\x20in\x20lava\x20biome', 'Players\x20Defense:\x206,\x20Animals\x20Defense:\x2019'], LANG[INV['REIDITE']] = ['Reidite', 'The\x20ultimate\x20ore'], LANG[INV['DRAGON_CUBE']] = ['Dragon\x20Cube', 'You\x20feel\x20a\x20great\x20power\x20emanating\x20from\x20this\x20cube'], DIE[0x16] = ['This\x20crab,\x20though\x20frightening\x20in\x20nature,\x20pinched\x20your\x20fingertips\x20so\x20hard\x20that\x20you\x20had\x20a\x20heart\x20attack.'], DIE[0x17] = ['The\x20heat\x20makes\x20you\x20suffocate,\x20you\x20can\x20see\x20your\x20skin\x20fall\x20apart.\x20You\x27re\x20charred.\x20The\x20grilled\x20marshmallow\x20has\x20never\x20been\x20so\x20tasty.'], DIE[0x18] = ['Your\x20vital\x20organs\x20melt\x20inside,\x20fortunately\x20the\x20toxic\x20gases\x20that\x20escape\x20from\x20the\x20lava\x20make\x20you\x20faint\x20and\x20you\x20do\x20not\x20feel\x20the\x20excruciating\x20pain\x20of\x20death.'], DIE[0x19] = ['The\x20Will-O\x27-The-Wisp\x20devoured\x20you\x20from\x20the\x20inside\x20with\x20its\x20fiery\x20flames.'], DIE[0x1a] = ['Oh\x20my\x20God,\x20you\x20died\x20in\x20indescribable\x20pain.\x20Even\x20Lapa\x20turned\x20his\x20head\x20not\x20to\x20see\x20this\x20massacre.'], DIE[0x1b] = ['You\x20were\x20trampled\x20by\x20that\x20boar.\x20From\x20now\x20on,\x20your\x20new\x20nickname\x20is\x20\x22the\x20doormat\x22.'], DIE[0x1c] = ['With\x20a\x20force\x20of\x203300\x20newtons,\x20the\x20shock\x20wave\x20from\x20the\x20closing\x20of\x20the\x20crab\x20king\x27s\x20claw\x20made\x20you\x20explode\x20your\x20heart\x20from\x20the\x20inside.\x20In\x20addition,\x20the\x20crab\x20has\x20eaten\x20you\x20by\x20sharing\x20your\x20remains\x20with\x20its\x20other\x20small\x20crabs.\x20All\x20dance\x20in\x20joy\x20around\x20your\x20corpse\x20by\x20performing\x20a\x20singular\x20dance\x20called\x20the\x20\x22crab\x20rave\x22'], DIE[0x1d] = ['Even\x20if\x20it\x20is\x20a\x20baby,\x20under\x20the\x20heat\x20of\x20the\x20flames\x20of\x20this\x20cute\x20dragon,\x20you\x20become\x20a\x20delicious\x20dish.'], DIE[0x1e] = ['Under\x20its\x20cute\x20fake\x20looks,\x20the\x20lava\x20baby\x20dismembers\x20you\x20so\x20quickly\x20that\x20you\x20don\x27t\x20have\x20your\x20life\x20flashes\x20before\x20your\x20eyes.'], DIE[0x1f] = ['The\x20hawk\x20slashed\x20both\x20your\x20eyes\x20out.\x20Terrified,\x20you\x20try\x20to\x20escape\x20by\x20crawling\x20and\x20screaming\x20in\x20pain.\x20Unfortunately\x20the\x20hawk\x20catches\x20you\x20and\x20takes\x20you\x20to\x20distant\x20skies\x20that\x20we\x20already\x20know\x20will\x20never\x20see\x20you\x20again.'], DIE[0x20] = ['Believing\x20you\x20saw\x20an\x20oasis,\x20you\x20dived\x20into\x20this\x20tree\x20that\x20seemed\x20to\x20you\x20to\x20be\x20full\x20of\x20juicy\x20fruit.\x20Unfortunately,\x20these\x20shiny\x20fruits\x20were\x20in\x20fact\x20horribly\x20painful\x20thorns.\x20Now\x20stuck\x20to\x20the\x20cactus,\x20exhausted\x20by\x20the\x20desert,\x20you\x20have\x20fainted\x20forever.'], DIE[0x21] = ['That\x20vulture\x20had\x20been\x20spying\x20on\x20you\x20for\x20a\x20long\x20time.\x20He\x20was\x20waiting\x20for\x20a\x20moment\x20of\x20fragility\x20from\x20you.\x20Once\x20cornered\x20by\x20this\x20harassing\x20desert,\x20barely\x20able\x20to\x20breathe,\x20the\x20vulture\x20twisted\x20on\x20you\x20and\x20in\x20a\x20flash\x20ripped\x20out\x20your\x20last\x20hope.\x20At\x20your\x20last\x20breath,\x20you\x20could\x20still\x20see\x20the\x20vulture\x20plunge\x20his\x20head\x20into\x20what\x20was\x20left\x20of\x20your\x20body\x20to\x20enjoy\x20your\x20entrails.'], DIE[0x22] = ['Out\x20of\x20nowhere,\x20the\x20sand\x20worm\x20devours\x20you\x20in\x20a\x20terrifying\x20howl.\x20But\x20why\x20did\x20Lapa\x20bring\x20such\x20a\x20despicable\x20monster\x20to\x20life?'], DIE[0x23] = ['Exhausted\x20by\x20so\x20much\x20heat.\x20You\x20would\x20like\x20to\x20cry,\x20but\x20the\x20sand\x20quickly\x20dries\x20your\x20tears.\x20You\x20suffocate,\x20sand\x20enters\x20your\x20mouth,\x20the\x20thumping\x20sound\x20of\x20the\x20sandstorm\x20will\x20be\x20the\x20last\x20thing\x20you\x20will\x20hear...\x20Next\x20time,\x20use\x20a\x20turban\x20or\x20protect\x20yourself\x20under\x20a\x20roof'], DIE[0x24] = ['You\x20feel\x20weak,\x20your\x20vision\x20becomes\x20blurry,\x20you\x20can\x20feel\x20the\x20darkness\x20invading\x20your\x20body.\x20Your\x20soul\x20flies\x20away\x20and\x20leaves\x20behind\x20a\x20lifeless\x20body.\x20Your\x20emerald\x20machine\x20has\x20been\x20destroyed.'], DIE[0x25] = ['You\x20hear\x20\x22Avada\x20Kedavra!\x22\x20before\x20you\x20turn\x20to\x20ashes.'], DIE[0x26] = ['You\x20died\x20crushed\x20by\x20an\x20angry\x20baby\x20mammoth.'], DIE[0x27] = ['You\x20were\x20skewered\x20by\x20a\x20mammoth.\x20In\x20the\x20violence\x20of\x20the\x20animal\x27s\x20charge,\x20your\x20heart\x20was\x20left\x20hanging\x20on\x20the\x20tip\x20of\x20the\x20tusk.\x20You\x20could\x20still\x20see\x20your\x20heart\x20beating\x20in\x20the\x20open\x20air\x20before\x20losing\x20your\x20life\x20crushed\x20by\x20the\x20mammoth\x27s\x20feet\x20for\x20good.\x20Notice\x20that\x20under\x20the\x20pressure\x20of\x20the\x20crushing\x20your\x20eyes\x20have\x20been\x20exorbed\x20and\x20that\x20the\x20penguins\x20use\x20the\x20frozen\x20eyes\x20of\x20the\x20starvers\x20as\x20a\x20balloon\x20to\x20distract\x20themselves.'], DIE[0x28] = ['The\x20blizzard\x20storm\x20is\x20so\x20intense\x20that\x20your\x20frostbite\x20causes\x20necrosis\x20of\x20all\x20your\x20limbs.\x20Next\x20time\x20protect\x20yourself\x20with\x20a\x20roof\x20or\x20with\x20warmer\x20clothes.'], LANG[INV['CRAB_STICK']] = ['Crab\x20sticks', 'Oh,\x20yeah?\x20Is\x20there\x20crab\x20in\x20the\x20crab\x20sticks?', 'Food:\x2020'], LANG[TEXT['TEMPEST_ON']] = 'A\x20sandstorm\x20is\x20approaching\x20in\x20a\x20few\x20seconds.', LANG[TEXT['TEMPEST_OFF']] = 'The\x20sandstorm\x20will\x20soon\x20stop.', LANG[TEXT['BLIZZARD_ON']] = 'A\x20blizzard\x20is\x20approaching\x20in\x20a\x20few\x20seconds.', LANG[TEXT['BLIZZARD_OFF']] = 'The\x20blizzard\x20will\x20soon\x20stop.', LANG[TEXT['BACK_TO_THE_GAME']] = '\x20BACK\x20TO\x20THE\x20GAME', LANG[TEXT['TWITTER']] = '\x20Share\x20on\x20Twitter', LANG[TEXT['FACEBOOK']] = '\x20Share\x20on\x20Facebook', LANG[TEXT['KIT_NEXT']] = 'You\x20can\x20buy\x20items\x20on\x20the\x20shop\x20in\x20the\x20next\x20game\x20with\x20your\x20points', LANG[TEXT['POINTS']] = 'points', LANG[TEXT['SCORE']] = 'Score', LANG[TEXT['KILL']] = 'Kill', LANG[TEXT['DAYS_SURVIVED']] = 'Days\x20survived', LANG[TEXT['MODE_FREE']] = 'Building\x20method:\x20Free.\x20Press\x20G\x20to\x20change', LANG[TEXT['MODE_GRID']] = 'Building\x20method:\x20Grid.\x20Press\x20G\x20to\x20change', LANG[INV['CRAB_LOOT']] = ['Crab\x20Claw', 'Crab\x20claws\x20can\x20also\x20be\x20eaten', 'Food:\x2010'], LANG[INV['CRAB_SPEAR']] = ['Crab\x20Spear', 'Allow\x20you\x20to\x20calm\x20crabs,\x20and\x20heal\x20them', 'Gives\x20a\x20+10\x20damages\x20bonus\x20when\x20holding\x20it\x20with', 'a\x20Crab\x20Helmet\x20on\x20a\x20Crab\x20King', 'Damage:\x2014', 'Building\x20Damage:\x204'], LANG[INV['CROWN_CRAB']] = ['Crab\x20Helmet', 'You\x20are\x20the\x20king\x20of\x20crabs!', 'Crabs\x20follow\x20you', 'They\x20can\x27t\x20hit\x20you\x20and\x20you\x20can\x27t\x20hit\x20them', 'Players\x20Defense:\x205', 'Animals\x20Defense:\x2019'], LANG[INV['BED']] = ['Bed', 'Relax\x20in\x20this\x20confortable\x20bed', 'You\x20are\x20less\x20cold,\x20less\x20thirsty,\x20and\x20less\x20hungry', 'You\x20will\x20be\x20cured\x20faster', 'Durability:\x20400'], document['getElementById']('typequest')['innerHTML'] = 'Chrono\x20Quests', document['getElementById']('timeremainingquest')['innerHTML'] = 'Time\x20Remaining', document['getElementById']('constraintquest')['innerHTML'] = '\x20Constraints', document['getElementById']('claim_rewards')['innerHTML'] = '\x20Claim\x20rewards', document['getElementById']('rewardquest')['innerHTML'] = '\x20Reward', document['getElementById']('killdragon_1')['innerHTML'] = '\x20Collect\x201\x20dragon\x20heart\x20inside\x20the\x20cave', document['getElementById']('amethyst_2')['innerHTML'] = '\x20Gather\x201\x20amethyst', document['getElementById']('survive20min_3')['innerHTML'] = 'Survive\x20without\x20losing\x20life', document['getElementById']('treasure_chest_4')['innerHTML'] = '\x20Open\x205\x20treasure\x20chests', document['getElementById']('dont_hit_5')['innerHTML'] = '\x20Be\x20peaceful', document['getElementById']('bread_6')['innerHTML'] = '100\x20bread\x20in\x20winter,\x20alone,\x20without\x20come\x20back', document['getElementById']('winter_7')['innerHTML'] = '\x20After\x201\x20day,\x20survive\x20in\x20winter';
        for (var _0xc46697 = 0x0; _0xc46697 < 0x7; _0xc46697++) document['getElementById']('claim_reward_' + _0xc46697)['innerHTML'] = 'CLAIM\x20REWARD!';
        document['getElementById']('quit_chronoquest')['innerHTML'] = '\x20QUIT', LANG[INV['HAND']] = ['Hand'], LANG[INV['GROUND']] = ['Dirt', 'Dirty!'], LANG[INV['SAND']] = ['Sand', 'I\x20got\x20it\x20in\x20my\x20eyes!'], LANG[INV['WOOD']] = ['Wood', 'You\x20can\x27t\x20get\x20enough\x20of\x20it!'], LANG[INV['STONE']] = ['Stone', 'Also\x20called\x20a\x20rock'], LANG[INV['GOLD']] = ['Gold', 'Be\x20generous,\x20give\x20it\x20to\x20others'], LANG[INV['DIAMOND']] = ['Diamond', 'What\x20will\x20you\x20make\x20with\x20it?'], LANG[INV['AMETHYST']] = ['Amethyst', 'It\x27s\x20Mauve\x20like\x20Lapa'], LANG[INV['FLOUR']] = ['Flour', 'Used\x20in\x20cooking'], LANG[INV['COOKIE']] = ['Cookie', 'A\x20sumptuous\x20grandmother\x27s\x20cookie', 'Food:\x2050'], LANG[INV['CAKE']] = ['A\x20cake', 'Dream\x20cake\x20for\x20the\x20gourmets', 'Food:\x20100'], LANG[INV['MEAT']] = ['Raw\x20meat', 'You\x20can\x20cook\x20it\x20with\x20a\x20fire', 'Causes\x20food\x20poisoning:\x2010', 'Food:\x2015'], LANG[INV['COOKED_MEAT']] = ['Cooked\x20meat', 'A\x20rare\x20steak,\x20please', 'Food:\x2035'], LANG[INV['FOODFISH']] = ['Raw\x20fish', 'I\x20think\x20it\x27s\x20still\x20alive', 'Causes\x20food\x20poisoning:\x2010', 'Food:\x2018'], LANG[INV['FOODFISH_COOKED']] = ['Cooked\x20fish', 'With\x20lemon\x20it\x27s\x20perfect', 'Food:\x2035'], LANG[INV['BREAD']] = ['Bread', 'An\x20excellent\x20French\x20bread', 'It\x27s\x20the\x20currency\x20used\x20in\x20the\x20market', 'Food:\x2015'], LANG[INV['SANDWICH']] = ['Sandwich', 'Tastes\x20like\x20Krabby\x20Patty', 'Food:\x20100'], LANG[INV['CANDY']] = ['Candies', 'Only\x20for\x20children!', 'Food:\x2020'], LANG[INV['SUGAR_CAN']] = ['Sugar\x20cane', 'Taste\x20it,\x20it\x27s\x20delicious', 'Food:\x20100'], LANG[INV['GARLAND']] = ['Garland', 'Perfect\x20decoration\x20for\x20roofs'], LANG[INV['SEED']] = ['Berries\x20Seed', 'Grows\x20into\x20Berry', 'Birth:\x202min', 'Growth:\x2055s', 'Need\x20water:\x203min\x2020s', 'Durability:\x20700', 'Lifetime:\x208\x20days'], LANG[INV['PLANT']] = ['Berry', 'Berry\x20tasty!', 'Food:\x2010'], LANG[INV['WHEAT_SEED']] = ['Wheat\x20Seed', 'Grows\x20into\x20Wheat', 'Birth:\x202min', 'Growth:\x2016s', 'Need\x20water:\x202min', 'Durability:\x20700', 'Lifetime:\x208\x20days'], LANG[INV['WILD_WHEAT']] = ['Wild\x20Wheat', 'Turns\x20into\x20Flour\x20when\x20placed\x20in\x20Windmill'], LANG[INV['PUMPKIN_SEED']] = ['Pumpkin\x20Seed', 'Grows\x20into\x20pumpkin', 'Birth:\x202min\x2040s', 'Growth:\x202min', 'Need\x20water:\x202min', 'Durability:\x20700', 'Lifetime:\x208\x20days'], LANG[INV['PUMPKIN']] = ['Pumpkin', 'It\x20reminds\x20me\x20of\x20Halloween', 'Food:\x2030'], LANG[INV['GARLIC_SEED']] = ['Garlic\x20Seed', 'Very\x20dangerous\x20for\x20vampires', 'Damage:\x2020', 'Birth:\x204min', 'Growth:\x201min\x2010s', 'Need\x20water:\x201min\x2040s', 'Durability:\x20700', 'Lifetime:\x208\x20days'], LANG[INV['GARLIC']] = ['Garlic', 'Reduces\x20cold', 'Food:\x2014', 'Effect:\x201'], LANG[INV['THORNBUSH_SEED']] = ['Thorn\x20bush\x20Seed', 'Can\x20damage\x20your\x20enemies', 'Damage:\x2020', 'Birth:\x204min', 'Growth:\x2015s', 'Need\x20water:\x203min', 'Durability:\x201000', 'Lifetime:\x208\x20days'], LANG[INV['THORNBUSH']] = ['Thorn\x20bush', 'It\x20stings!'], LANG[INV['PLOT']] = ['Plot', 'Seriously,\x20use\x20it', 'With\x20this\x20GMO\x20fertilizer\x20your\x20plants', 'will\x20growth\x20really\x20faster\x20and\x20need\x20less\x20water', 'Durability:\x202000'], LANG[INV['ICE']] = ['Ice', 'Useful\x20for\x20making\x20cakes\x20and\x20water'], LANG[INV['SPANNER']] = ['Wrench', 'To\x20repair\x20doors,\x20walls\x20and\x20spike', 'Damage:\x202'], LANG[INV['FUR_WOLF']] = ['Wolf\x20Fur', 'Puppy?\x20But\x20where\x20is\x20Puppy?!'], LANG[INV['FUR']] = ['Rabbit\x20Fur', 'That\x20rabbit\x20was\x20so\x20cute...'], LANG[INV['SPECIAL_FUR']] = ['Pure\x20Fur', 'You\x27re\x20a\x20bread\x20factory'], LANG[INV['SPECIAL_FUR_2']] = ['Dark\x20Fur', 'You\x20get\x20ready\x20to\x20do\x20something\x20wrong'], LANG[INV['FUR_WINTER']] = ['Winter\x20Fur', 'These\x20animals\x20just\x20wanted\x20a\x20hug...'], LANG[INV['SCALES']] = ['Scales', 'It\x20smells\x20like\x20fish!'], LANG[INV['KRAKEN_SKIN']] = ['Kraken\x20Skin', 'Weren\x27t\x20you\x20too\x20scared?'], LANG[INV['FIRE']] = ['Firecamp', 'Warm\x20you\x20up!', 'Durability:\x20150', 'Lifetime:\x202min'], LANG[INV['BIG_FIRE']] = ['Big\x20Firecamp', 'Warm\x20you\x20up\x20more\x20time!', 'Durability:\x20400', 'Lifetime:\x206min'], LANG[INV['WORKBENCH']] = ['Workbench', 'Very\x20useful\x20to\x20craft\x20all\x20kinds\x20of\x20objects'], LANG[INV['CORD']] = ['Cord', 'Used\x20in\x20crafting\x20Hats\x20and\x20Bag'], LANG[INV['BLUE_CORD']] = ['Diamond\x20Cord', 'Used\x20in\x20crafting\x20Special\x20Hats'], LANG[INV['CHEST']] = ['Chest', 'Allows\x20you\x20to\x20store\x20items', 'Durability:\x20500'], LANG[INV['SWORD_WOOD']] = ['Wood\x20Sword', 'Does\x20that\x20work?', 'Damage:\x2012', 'Building\x20Damage:\x204'], LANG[INV['SWORD']] = ['Stone\x20Sword', 'Be\x20nice\x20to\x20others', 'Damage:\x2019', 'Building\x20Damage:\x206'], LANG[INV['SWORD_GOLD']] = ['Gold\x20Sword', 'King\x20of\x20the\x20forest', 'Damage:\x2022', 'Building\x20Damage:\x207'], LANG[INV['SWORD_DIAMOND']] = ['Diamond\x20Sword', 'You\x20can\x20feel\x20the\x20power', 'Damage:\x2024', 'Building\x20Damage:\x208'], LANG[INV['PIRATE_SWORD']] = ['Pirate\x20Sword', 'Ayyyyy!', 'Better\x20range\x20than\x20a\x20normal\x20sword', 'Damage:\x2024', 'Building\x20Damage:\x208'], LANG[INV['SWORD_AMETHYST']] = ['Amethyst\x20Sword', 'Mauve\x20is\x20the\x20most\x20beautiful\x20color\x20of\x20the\x20world', 'Damage:\x2027', 'Building\x20Damage:\x209'], LANG[INV['DRAGON_SWORD']] = ['Dragon\x20Sword', 'No\x20mercy!', 'Damage:\x2030', 'Building\x20Damage:\x2010'], LANG[INV['DRAGON_SPEAR']] = ['Dragon\x20Spear', 'Kill\x20them\x20all!', 'Damage:\x2022', 'Building\x20Damage:\x207'], LANG[INV['PICK_WOOD']] = ['Wood\x20Pickaxe', 'Can\x20harvest\x20only\x20stone\x20and\x20wood', 'Damage:\x201'], LANG[INV['PICK']] = ['Stone\x20Pickaxe', 'Can\x20harvest\x20wood,\x20stone\x20and\x20gold', 'Damage:\x202'], LANG[INV['PICK_GOLD']] = ['Gold\x20Pickaxe', 'Can\x20also\x20harvest\x20diamond', 'Damage:\x203', 'Building\x20Damage:\x201'], LANG[INV['PICK_DIAMOND']] = ['Diamond\x20Pickaxe', 'Can\x20also\x20harvest\x20amethyst', 'Damage:\x204', 'Building\x20Damage:\x201'], LANG[INV['PICK_AMETHYST']] = ['Amethyst\x20Pickaxe', 'Can\x20also\x20harvest\x20reidite,\x20looks\x20fancy!', 'Damage:\x205', 'Building\x20Damage:\x201'], LANG[INV['HAMMER']] = ['Stone\x20Hammer', 'Useful\x20to\x20destroy\x20buildings', 'Doesn\x27t\x20work\x20well\x20on\x20diamond\x20or\x20amethyst', 'Damage:\x202', 'Building\x20Damage:\x2020'], LANG[INV['HAMMER_GOLD']] = ['Gold\x20Hammer', 'Useful\x20to\x20destroy\x20buildings', 'Doesn\x27t\x20work\x20well\x20on\x20amethyst', 'Damage:\x203', 'Building\x20Damage:\x2030'], LANG[INV['HAMMER_DIAMOND']] = ['Diamond\x20Hammer', 'Useful\x20to\x20destroy\x20buildings', 'Damage:\x204', 'Building\x20Damage:\x2040'], LANG[INV['HAMMER_AMETHYST']] = ['Amethyst\x20Hammer', 'Useful\x20to\x20destroy\x20buildings', 'Damage:\x205', 'Building\x20Damage:\x2050'], LANG[INV['SUPER_HAMMER']] = ['Super\x20Hammer', 'Have\x20you\x20planned\x20to\x20destroy\x20the\x20world?', 'Damage:\x2012', 'Building\x20Damage:\x2070'], LANG[INV['WOOD_SPEAR']] = ['Wood\x20Spear', 'Like\x20a\x20wooden\x20stick,\x20but\x20it\x20stings.', 'Damage:\x2010', 'Building\x20Damage:\x203'], LANG[INV['SPEAR']] = ['Stone\x20Spear', 'The\x20beginning\x20of\x20evolution!', 'Damage:\x2014', 'Building\x20Damage:\x204'], LANG[INV['GOLD_SPEAR']] = ['Gold\x20Spear', 'Careful,\x20it\x20stings!', 'Damage:\x2015', 'Buildings\x20Damage:\x205'], LANG[INV['DIAMOND_SPEAR']] = ['Diamond\x20Spear', 'You\x27re\x20ready\x20to\x20kill\x20a\x20dragon', 'Damage:\x2017', 'Buildings\x20Damage:\x205'], LANG[INV['AMETHYST_SPEAR']] = ['Amethyst\x20Spear', 'Dragons\x20no\x20longer\x20frighten\x20you', 'Damage:\x2018', 'Buildings\x20Damage:\x206'], LANG[INV['SHOVEL']] = ['Stone\x20Shovel', 'Dig\x20the\x20ground\x20to\x20gather\x20dirt,\x20ice,\x20and\x20sand', 'You\x20can\x20also\x20gather\x20minerals', 'Damage:\x202'], LANG[INV['SHOVEL_GOLD']] = ['Gold\x20Shovel', 'Dig\x20the\x20ground\x20to\x20gather\x20dirt,\x20ice,\x20and\x20sand', 'You\x20can\x20also\x20gather\x20minerals', 'Damage:\x203', 'Buildings\x20Damage:\x201'], LANG[INV['SHOVEL_DIAMOND']] = ['Diamond\x20Shovel', 'Dig\x20the\x20ground\x20to\x20gather\x20dirt,\x20ice,\x20and\x20sand', 'You\x20can\x20also\x20gather\x20minerals', 'Damage:\x204', 'Buildings\x20Damage:\x201'], LANG[INV['SHOVEL_AMETHYST']] = ['Amethyst\x20Shovel', 'Dig\x20the\x20ground\x20to\x20gather\x20dirt,\x20ice,\x20and\x20sand', 'You\x20can\x20also\x20gather\x20minerals', 'Damage:\x205', 'Buildings\x20Damage:\x201'], LANG[INV['WOOD_HELMET']] = ['Wood\x20Helmet', 'Better\x20than\x20nothing', 'Players\x20Defense:\x201', 'Animals\x20Defense:\x204'], LANG[INV['STONE_HELMET']] = ['Stone\x20Helmet', 'You\x27re\x20ready\x20for\x20battle!', 'Players\x20Defense:\x202', 'Animals\x20Defense:\x208'], LANG[INV['GOLD_HELMET']] = ['Gold\x20Helmet', 'AKA\x20the\x20helmet\x20of\x20the\x20savages', 'Players\x20Defense:\x204', 'Animals\x20Defense:\x2013'], LANG[INV['DIAMOND_HELMET']] = ['Diamond\x20Helmet', 'Don\x27t\x20brag\x20too\x20much', 'Players\x20Defense:\x205', 'Animals\x20Defense:\x2019'], LANG[INV['AMETHYST_HELMET']] = ['Amethyst\x20Helmet', 'You\x27re\x20no\x20longer\x20afraid\x20of\x20anything', 'Players\x20Defense:\x206', 'Animals\x20Defense:\x2023'], LANG[INV['REIDITE_HELMET']] = ['Reidite\x20Helmet', 'You\x20no\x20longer\x20feel\x20pain', 'Players\x20Defense:\x207', 'Animals\x20Defense:\x2025'], LANG[INV['DRAGON_HELMET']] = ['Dragon\x20Helmet', 'You\x20will\x20conquer\x20the\x20world', 'Players\x20Defense:\x208', 'Animals\x20Defense:\x2027'], LANG[INV['EXPLORER_HAT']] = ['Explorer\x20hat', 'Animals\x20won\x27t\x20pay\x20attention\x20to\x20you', 'but\x20don\x27t\x20make\x20noises!', 'Warm\x20outside\x20water\x20and\x20in\x20winter', 'You\x20also\x20calm\x20down\x20aggressive\x20monsters\x20twice\x20as\x20fast'], LANG[INV['CHRISTMAS_HAT']] = ['Christmas\x20Hat', 'Oh,\x20oh,\x20oh,\x20Merry\x20Christmas', 'Warm\x20outside\x20water\x20and\x20in\x20winter'], LANG[INV['ELF_HAT']] = ['Elf\x20Hat', 'Don\x27t\x20let\x20yourself\x20be\x20exploited,\x20you\x20little\x20snow\x20elf!', 'Warm\x20outside\x20water\x20and\x20in\x20winter'], LANG[INV['HOOD']] = ['Hood', 'You\x27re\x20a\x20rogue', 'You\x20can\x20steal\x20someone\x20only\x20if', '1)\x20It\x27s\x20night', '2)\x20You\x27re\x20not\x20wearing\x20anything', '3)\x20If\x20you\x20haven\x27t\x20been\x20touched\x20for\x20eight\x20seconds', '4)\x20You\x20are\x20not\x20close\x20a\x20fire', '5)\x20Your\x20target\x20doesn\x27t\x20wear\x20a\x20peasant\x20outfit', 'Warm\x20outside\x20water\x20and\x20in\x20winter'], LANG[INV['EARMUFFS']] = ['Earmuffs', 'Some\x20kind\x20of\x20little\x20chapka.', 'Warm\x20outside\x20water\x20and\x20in\x20winter'], LANG[INV['COAT']] = ['Chapka', 'Also\x20called\x20a\x20coat.', 'Warmer\x20outside\x20water\x20and\x20in\x20winter'], LANG[INV['CAP_SCARF']] = ['Winter\x20Scarf\x20and\x20Cap', 'Very\x20comfortable', 'Very\x20Warm'], LANG[INV['FUR_HAT']] = ['Mammoth\x20fur\x20hat', 'The\x20best\x20blizzard\x20protection', 'Very\x20Warm'], LANG[INV['PEASANT']] = ['Peasant', 'Your\x20plants\x20grow\x20faster', 'Warm\x20outside\x20water\x20and\x20in\x20winter'], LANG[INV['WINTER_HOOD']] = ['Winter\x20Hood', 'You\x20can\x20steal\x20someone\x20only\x20if', '-\x20It\x27s\x20night', '-\x20You\x27re\x20not\x20wearing\x20anything', '-\x20If\x20you\x20haven\x27t\x20been\x20touched\x20for\x20four\x20seconds', '-\x20You\x20are\x20not\x20close\x20a\x20fire', '-\x20Your\x20target\x20doesn\x27t\x20wear\x20a\x20winter\x20peasant\x20outfit', 'Warm\x20outside\x20water\x20and\x20in\x20winter'], LANG[INV['WINTER_PEASANT']] = ['Winter\x20Peasant', 'Your\x20plants\x20grow\x20faster', 'Warm\x20outside\x20water\x20and\x20in\x20winter'], LANG[INV['DIVING_MASK']] = ['Diving\x20Mask', 'You\x20are\x20fast\x20in\x20the\x20water', 'Warm\x20in\x20water', 'Players\x20Defense:\x202,\x20Animals\x20Defense:\x208'], LANG[INV['SUPER_DIVING_SUIT']] = ['Super\x20Diving\x20Mask', 'You\x20are\x20very\x20fast\x20in\x20the\x20water', 'Warm\x20in\x20water', 'Players\x20Defense:\x204,\x20Animals\x20Defense:\x2016'], LANG[INV['DRAGON_ORB']] = ['Dragon\x20Orb', 'You\x20feel\x20a\x20great\x20power\x20emanating\x20from\x20this\x20orb'], LANG[INV['DRAGON_HEART']] = ['Dragon\x20Heart', 'Turns\x20you\x20into\x20a\x20Ghost\x20on\x20Death!', 'You\x20are\x20a\x20ghost\x20for\x2060\x20seconds', 'Find\x20a\x20resurrection\x20stone'], LANG[INV['GEMME_GREEN']] = ['Green\x20Gemstone', 'You\x20didn\x27t\x20cheat,\x20promise?'], LANG[INV['GEMME_ORANGE']] = ['Orange\x20Gemstone', 'Only\x20a\x20real\x20pirate\x20can\x20find\x20it!'], LANG[INV['GEMME_BLUE']] = ['Blue\x20Gemstone', 'For\x20too\x20kind\x20people'], LANG[INV['CROWN_GREEN']] = ['Green\x20Crown', 'You\x20heal\x20yourself\x20very\x20quickly', 'Heal\x20over\x20time:\x2040', 'Players\x20Defense:\x204,\x20Animals\x20Defense:\x2016'], LANG[INV['CROWN_ORANGE']] = ['Orange\x20Crown', 'You\x20suddenly\x20feel\x20very\x20lucky', 'Players\x20Defense:\x204,\x20Animals\x20Defense:\x2016'], LANG[INV['CROWN_BLUE']] = ['Blue\x20Crown', 'Once\x20you\x27re\x20dead,\x20you\x27ll\x20become\x20a\x20ghost', 'Though\x20you\x20will\x20lose\x20your\x20weapon', 'Players\x20Defense:\x204,\x20Animals\x20Defense:\x2016'], LANG[INV['BUCKET_FULL']] = ['Bucket', 'Useful\x20to\x20fill\x20a\x20well', 'One\x20bucket\x20is\x20equivalent\x20to\x20twelve\x20bottles'], LANG[INV['BUCKET_EMPTY']] = ['Empty\x20Bucket', 'You\x20need\x20to\x20fill\x20this\x20bucket\x20near\x20a\x20water\x20source'], LANG[INV['BOTTLE_FULL']] = ['Bottle', 'Allows\x20you\x20to\x20drink\x20water\x20anywhere', 'Water:\x2050'], LANG[INV['BOTTLE_EMPTY']] = ['Empty\x20Bottle', 'You\x20can\x20fill\x20this\x20bottle\x20near\x20a\x20water\x20source'], LANG[INV['WATERING_CAN']] = ['Empty\x20Watering\x20Can', 'You\x20must\x20fill\x20it\x20with\x20a\x20water\x20source\x20to\x20use\x20it'], LANG[INV['WATERING_CAN_FULL']] = ['Watering\x20Can', 'Allows\x20watering\x20of\x20plants', 'Damage:\x201'], LANG[INV['BAG']] = ['Bag', 'More\x20space\x20for\x20your\x20items!'], LANG[INV['PAPER']] = ['Paper', 'Used\x20in\x20book-crafting'], LANG[INV['BOOK']] = ['Book', 'Allows\x20to\x20considerably\x20reduce\x20the\x20time\x20of\x20crafting', 'Must\x20be\x20wearing\x20to\x20work', 'Damage:\x201'], LANG[INV['BANDAGE']] = ['Bandage', 'Recover\x20more\x20quickly\x20your\x20life', 'Heal\x20over\x20time:\x2030', 'Effect:\x205'], LANG[INV['LOCK']] = ['Lock', 'Allow\x20you\x20to\x20lock\x20your\x20chest'], LANG[INV['LOCKPICK']] = ['Lock-pick', 'Allows\x20you\x20to\x20unlock\x20one\x20chest'], LANG[INV['TOTEM']] = ['Totem', 'Allow\x20you\x20to\x20create\x20a\x20team', 'Share\x20doors\x20and\x20chests', 'Harmful\x20building\x20won\x27t\x20hurt\x20your\x20friend'], LANG[INV['BRIDGE']] = ['Bridge', 'Very\x20useful\x20on\x20water', 'It\x20allows\x20you\x20to\x20drink\x20without\x20drowning', 'Walk\x20faster\x20in\x20water'], LANG[INV['SIGN']] = ['Sign', 'Leave\x20a\x20message\x20to\x20others', 'Durability:\x20200'], LANG[INV['ROOF']] = ['Roof', 'Hides\x20you\x20a\x20little\x20and\x20warms\x20you!', 'Also\x20protects\x20you\x20against\x20sand\x20storm'], LANG[INV['WELL']] = ['Well', 'Allows\x20bottle\x20filling', 'Durability:\x201000'], LANG[INV['WALL']] = ['Wood\x20Wall', 'It\x27s\x20just\x20a\x20wall', 'Durability:\x201000'], LANG[INV['STONE_WALL']] = ['Stone\x20Wall', 'It\x27s\x20a\x20little\x20more\x20serious.', 'Durability:\x201500'], LANG[INV['GOLD_WALL']] = ['Gold\x20Wall', 'Gold\x20on\x20your\x20walls?\x20It\x27s\x20kind\x20of\x20flashy.', 'Durability:\x202000'], LANG[INV['DIAMOND_WALL']] = ['Diamond\x20Wall', 'So\x20shiny,\x20watch\x20your\x20eyes', 'Durability:\x202500'], LANG[INV['AMETHYST_WALL']] = ['Amethyst\x20Wall', 'You\x20must\x20be\x20very\x20scared\x20to\x20go\x20out!', 'Durability:\x203500'], LANG[INV['SPIKE']] = ['Wood\x20Spike', 'Can\x20damage\x20your\x20enemies', 'Damage:\x2010,\x20On-Hit\x20Damage:\x202', 'Durability:\x20150'], LANG[INV['STONE_SPIKE']] = ['Stone\x20Spike', 'I\x20wouldn\x27t\x20want\x20to\x20be\x20your\x20enemy.', 'Damage:\x2020', 'On-Hit\x20Damage:\x203', 'Durability:\x20300'], LANG[INV['GOLD_SPIKE']] = ['Gold\x20Spike', 'You\x27re\x20so\x20cruel.', 'Damage:\x2030', 'On-Hit\x20Damage:\x203', 'Durability:\x20600'], LANG[INV['DIAMOND_SPIKE']] = ['Diamond\x20Spike', 'You\x20don\x27t\x20like\x20to\x20have\x20company.', 'Damage:\x2040', 'On-Hit\x20Damage:\x204', 'Durability:\x201200'], LANG[INV['AMETHYST_SPIKE']] = ['Amethyst\x20Spike', 'What\x20the\x20hell\x20did\x20your\x20neighbors\x20do\x20to\x20you?', 'Damage:\x2050', 'On-Hit\x20Damage:\x204', 'Durability:\x202400'], LANG[INV['WOOD_DOOR']] = ['Wood\x20Door', 'Can\x20be\x20opened\x20or\x20closed\x20by\x20you\x20or\x20your\x20friends', 'Durability:\x201000'], LANG[INV['STONE_DOOR']] = ['Stone\x20Door', 'A\x20stronger\x20door\x20is\x20more\x20serious', 'Durability:\x201500'], LANG[INV['GOLD_DOOR']] = ['Gold\x20Door', 'Are\x20you\x20rebuilding\x20the\x20\x22el\x20dorado?\x22', 'Durability:\x202000'], LANG[INV['DIAMOND_DOOR']] = ['Diamond\x20Door', 'For\x20a\x20shining\x20house', 'Durability:\x202500'], LANG[INV['AMETHYST_DOOR']] = ['Amethyst\x20Door', 'Is\x20your\x20house\x20a\x20locked\x20safe?', 'Durability:\x203500'], LANG[INV['FURNACE']] = ['Furnace', 'Warms\x20you\x20up', 'It\x20consumes\x20wood\x20all\x205\x20seconds', 'Durability:\x201000'], LANG[INV['WINDMILL']] = ['Windmill', 'Can\x20produce\x20flour\x20from\x20wheat', 'It\x20takes\x205\x20seconds\x20to\x20make\x20Flour', 'Returns\x20points\x20when\x20working', 'Durability:\x202000'], LANG[INV['BREAD_OVEN']] = ['Bread\x20Oven', 'Allows\x20bread\x20to\x20be\x20made\x20from\x20flour', 'It\x20takes\x2010\x20seconds\x20to\x20make\x20bread', 'Returns\x20points\x20when\x20working', 'Durability:\x202000'], LANG[INV['RESURRECTION']] = ['Resurrection\x20stone', 'It\x27s\x20magic', 'Resurrect\x20you\x20if\x20you\x27re\x20a\x20ghost', 'You\x20will\x20lose\x20your\x20weapon', 'Durability:\x20200'], LANG[TEXT['YOU_CANNOT_JOIN']] = 'You\x20cannot\x20join\x20this\x20server', LANG[TEXT['KICKED']] = 'Kicked:\x20', LANG[TEXT['KEY_ALREADY']] = 'Your\x20key\x20is\x20already\x20used\x20by\x20someone\x20else', LANG[TEXT['KEY_WRONG']] = 'Your\x20key\x20is\x20wrong', LANG[TEXT['OLD_VERSION']] = 'You\x20have\x20an\x20old\x20version,\x20you\x20need\x20to\x20clear\x20your\x20cache', LANG[TEXT['NEW_VERSION']] = 'Your\x20client\x20version\x20is\x20too\x20recent\x20for\x20this\x20server.\x20The\x20server\x20is\x20being\x20updated', LANG[TEXT['WRONG_PASSWORD']] = 'Wrong\x20password!\x20To\x20enter\x20a\x20password:\x20https://starve.io/?password=...', LANG[TEXT['NO_MORE_RESOURCES']] = 'There\x20are\x20no\x20more\x20new\x20resources', LANG[TEXT['SURVIVED_1DAY']] = 'You\x20survived\x201\x20day', LANG[TEXT['SURVIVED']] = 'You\x20survived\x20', LANG[TEXT['DAYS']] = '\x20days', LANG[TEXT['DEAD_SAD']] = 'You\x20are\x20dead\x20;-;', LANG[TEXT['SPAM_ME']] = 'Server\x20cannot\x20find\x20spawn\x20location!\x20Spam\x20the\x20play\x20button!', LANG[TEXT['SPAM_ME2']] = 'Server\x20is\x20full!\x20Spam\x20the\x20play\x20button!', LANG[TEXT['EMPTY']] = 'Resource\x20is\x20empty', LANG[TEXT['INV_FULL']] = 'Inventory\x20is\x20full\x20(right-click\x20to\x20empty\x20items)', LANG[TEXT['DEAD']] = '\x20is\x20dead', LANG[TEXT['WRONG_TOOL']] = 'This\x20is\x20not\x20the\x20right\x20tool', LANG[TEXT['JOIN_TEAM']] = 'You\x20joined\x20a\x20team', LANG[TEXT['YOU_DEAD']] = 'You\x20are\x20dead', LANG[TEXT['JOINED_TEAM']] = '\x20joined\x20the\x20team', LANG[TEXT['TEAM_DESTROYED']] = 'Your\x20team\x20was\x20destroyed', LANG[TEXT['LEFT_TEAM']] = 'You\x20left\x20the\x20team', LANG[TEXT['LEFT_TEAM2']] = '\x20left\x20the\x20team', LANG[TEXT['TOKEN']] = 'Someone\x20stole\x20your\x20token\x20:>', LANG[TEXT['CHOOSE']] = 'Choose\x20a\x20server', LANG[TEXT['PLAYERS']] = 'players', LANG[TEXT['TOTAL_PLAYERS']] = 'total\x20players', LANG[TEXT['TOTAL_MODE']] = 'players\x20on\x20this\x20mode', LANG[TEXT['COMMING_SOON']] = 'Coming\x20soon...', document['getElementById']('nickname_input')['placeholder'] = 'Nickname', DIE[0x0] = ['You\x20were\x20killed\x20for\x20no\x20reason'], DIE[0x1] = ['You\x20starved\x20to\x20death,\x20as\x20the\x20name\x20of\x20the\x20game\x20implies'], DIE[0x2] = ['You\x20froze\x20to\x20death.\x20So\x20sad', 'You\x20got\x20hypothermia.\x20Next\x20time,\x20try\x20sitting\x20by\x20a\x20fire\x20instead.'], DIE[0x3] = ['A\x20player\x20killed\x20you\x20whilst\x20telling\x20you\x20to\x20\x27git\x20gud.\x27', 'You\x20got\x20murdered\x20by\x20a\x20player.\x20Don\x27t\x20worry,\x20that\x20player\x20will\x20die\x20too,\x20eventually.'], DIE[0x4] = ['You\x20stayed\x20too\x20close\x20to\x20the\x20fire\x20and\x20burnt\x20to\x20death.\x20Bad\x20idea.', 'You\x20died\x20to\x20a\x20fire.\x20Fires\x20hurt\x20you.\x20Go\x20write\x20a\x20story\x20about\x20it.'], DIE[0x5] = ['Your\x20body\x20will\x20become\x20a\x20nest\x20for\x20spider\x20eggs', 'A\x20spider\x20killed\x20you.\x20At\x20least\x20it\x20wasn\x27t\x20a\x20rabbit.'], DIE[0x6] = ['The\x20wolf\x20won\x27t\x20starve\x20anymore\x20after\x20eating\x20you', 'They\x20aren\x27t\x20dogs.\x20Wolves\x20don\x27t\x20like\x20being\x20pet.'], DIE[0x7] = ['The\x20fox\x20was\x20too\x20quick\x20for\x20you', 'The\x20fox\x20turned\x20you\x20into\x20a\x20box.\x20Since\x20when\x20do\x20animals\x20have\x20magic\x20powers?'], DIE[0x8] = ['The\x20bear\x20only\x20wanted\x20a\x20hug.', 'The\x20bear\x20was\x20too\x20much\x20to\x20bare.\x20I\x27m\x20not\x20sorry.'], DIE[0x9] = ['You\x20were\x20burnt\x20to\x20a\x20crisp\x20by\x20a\x20dragon.\x20So\x20sad.', 'You\x20got\x20flattened\x20by\x20a\x20dragon.\x20Getting\x20squished\x20is\x20a\x20horrible\x20way\x20to\x20die.'], DIE[0xa] = ['You\x20jumped\x20into\x20a\x20spike\x20wall.\x20Not\x20a\x20good\x20idea...', 'You\x20got\x20killed\x20by\x20a\x20spike\x20wall.\x20Most\x20people\x20are\x20sensible\x20enough\x20not\x20to\x20touch\x20pointy\x20things.'], DIE[0xb] = ['Even\x20the\x20ghost\x20can\x20die.', 'You\x20failed\x20to\x20be\x20resurrected.\x20This\x20is\x20a\x20game,\x20so\x20you\x20go\x20to\x20life\x20after\x20you\x20die,\x20so...'], DIE[0xc] = ['A\x20bacterium\x20from\x20your\x20raw\x20food\x20killed\x20you.\x20This\x20game\x20is\x20definitely\x20too\x20hard.', 'You\x20killed\x20the\x20raw\x20food.\x20It\x20killed\x20you\x20too.'], DIE[0xd] = ['You\x20died\x20of\x20thirst.\x20Better\x20drink\x20your\x20own\x20piss.'], DIE[0xe] = ['Did\x20you\x20know\x20starver\x27s\x20mouths\x20are\x20always\x20below\x20water\x20when\x20swimming?\x20Now\x20you\x20know.'], DIE[0xf] = ['Do\x20not\x20worry,\x20the\x20piranha\x20finds\x20you\x20tasty.', 'Fun\x20fact:\x20Pirahnas\x20eat\x20people.\x20Including\x20you.'], DIE[0x10] = ['LapaMauve\x20does\x20not\x20plan\x20that\x20you\x20can\x20kill\x20the\x20kraken', 'A\x20kraken\x20krak-ed\x20your\x20skull.'], DIE[0x11] = ['Your\x20skin\x27s\x20falling\x20apart,\x20the\x20sun\x20killed\x20you.'], DIE[0x12] = ['Garlic\x20stored\x20in\x20your\x20pockets\x20boiled\x20your\x20brain.'], DIE[0x13] = ['As\x20a\x20vampire,\x20don\x27t\x20stand\x20near\x20the\x20garlic\x20cloves.'], DIE[0x14] = ['You\x20ate\x20garlic\x20as\x20a\x20vampire,\x20what\x20did\x20you\x20expect?'], DIE[0x15] = ['Your\x20body\x20wraps\x20itself\x20in\x20thornbushes.\x20As\x20you\x20try\x20to\x20escape,\x20your\x20skin\x20comes\x20off\x20and\x20your\x20heart\x20stops\x20beating.'], ZOMBIE_GRUMBLE = 'Uuunnnggg', ZOMBIE_GRUMBLES = ['Uuunnnggg...\x20I\x27m\x20starving', 'Need\x20your\x20brain\x20Uuunnnggg...', 'Fresh\x20meat\x20here...\x20Uuunnnggg', 'Uuunnnggg...\x20You\x20are\x20tasty', 'Uuunnnggg...', 'Eat...\x20uuunnnggg...', 'I\x20can\x20smell\x20blood...\x20Uuunnnggg'];
    },
    set_russian = function() {
        LANG[INV['DRAGON_CUBE']] = ['You\x20feel\x20a\x20great\x20power\x20emanating\x20from\x20this\x20orb'], DIE[0x16] = ['This\x20crab,\x20though\x20frightening\x20in\x20nature,\x20pinched\x20your\x20fingertips\x20so\x20hard\x20that\x20you\x20had\x20a\x20heart\x20attack.'], LANG[INV['CRAB_STICK']] = ['Crab\x20sticks', 'Oh,\x20yeah?\x20Is\x20there\x20crab\x20in\x20the\x20crab\x20sticks?', 'Food:\x2020'], LANG[TEXT['BACK_TO_THE_GAME']] = '\x20BACK\x20TO\x20THE\x20GAME', LANG[TEXT['TWITTER']] = '\x20Share\x20on\x20Twitter', LANG[TEXT['FACEBOOK']] = '\x20Share\x20on\x20Facebook', LANG[TEXT['KIT_NEXT']] = 'You\x20can\x20buy\x20items\x20on\x20the\x20shop\x20in\x20the\x20next\x20game\x20with\x20your\x20points', LANG[TEXT['POINTS']] = 'points', LANG[TEXT['SCORE']] = 'Score', LANG[TEXT['KILL']] = 'Kill', LANG[TEXT['DAYS_SURVIVED']] = 'Days\x20survived', LANG[TEXT['MODE_FREE']] = 'Building\x20method:\x20Free.\x20Press\x20G\x20to\x20change', LANG[TEXT['MODE_GRID']] = 'Building\x20method:\x20Grid.\x20Press\x20G\x20to\x20change', LANG[INV['CRAB_LOOT']] = ['Crab\x20Claw', 'Crab\x20claws\x20can\x20also\x20be\x20eaten', 'Food:\x2010'], LANG[INV['CRAB_SPEAR']] = ['Crab\x20Spear', 'Allow\x20you\x20to\x20calm\x20crabs,\x20and\x20heal\x20them', 'Damage:\x2014', 'Building\x20Damage:\x204'], LANG[INV['CROWN_CRAB']] = ['Crab\x20Helmet', 'You\x20are\x20the\x20king\x20of\x20crabs!', 'Crabs\x20follow\x20you', 'They\x20can\x27t\x20hit\x20you\x20and\x20you\x20can\x27t\x20hit\x20them', 'Players\x20Defense:\x204', 'Animals\x20Defense:\x2013'], LANG[INV['BED']] = ['Bed', 'Relax\x20in\x20this\x20confortable\x20bed', 'You\x20are\x20less\x20cold,\x20less\x20thirsty,\x20and\x20less\x20hungry', 'You\x20will\x20be\x20cured\x20faster', 'Durability:\x20400'], document['getElementById']('typequest')['innerHTML'] = 'Chrono\x20Quests', document['getElementById']('timeremainingquest')['innerHTML'] = 'Time\x20Remaining', document['getElementById']('constraintquest')['innerHTML'] = '\x20Constraints', document['getElementById']('claim_rewards')['innerHTML'] = '\x20Claim\x20rewards', document['getElementById']('rewardquest')['innerHTML'] = '\x20Reward', document['getElementById']('killdragon_1')['innerHTML'] = '\x20Collect\x201\x20dragon\x20heart', document['getElementById']('amethyst_2')['innerHTML'] = '\x20Gather\x201\x20amethyst', document['getElementById']('survive20min_3')['innerHTML'] = 'Survive\x20without\x20losing\x20life', document['getElementById']('treasure_chest_4')['innerHTML'] = '\x20Open\x205\x20treasure\x20chests', document['getElementById']('dont_hit_5')['innerHTML'] = '\x20Be\x20peaceful', document['getElementById']('bread_6')['innerHTML'] = '\x20Collect\x20100\x20bread\x20in\x20deep\x20winter', document['getElementById']('winter_7')['innerHTML'] = '\x20After\x201\x20day,\x20survive\x20in\x20winter';
        for (var _0x5c4d87 = 0x0; _0x5c4d87 < 0x7; _0x5c4d87++) document['getElementById']('claim_reward_' + _0x5c4d87)['innerHTML'] = 'CLAIM\x20REWARD!';
        document['getElementById']('quit_chronoquest')['innerHTML'] = '\x20QUIT', LANG[INV['HAND']] = ['Рука'], LANG[INV['GROUND']] = ['Земля', 'Грязно!'], LANG[INV['SAND']] = ['Песок', 'Он\x20в\x20моих\x20глазах!'], LANG[INV['WOOD']] = ['Дерево', 'Постоянно\x20нужно\x20больше!'], LANG[INV['STONE']] = ['Камень', 'Твердый'], LANG[INV['GOLD']] = ['Золото', 'Будьте\x20щедры,\x20давайте\x20его\x20другим'], LANG[INV['DIAMOND']] = ['Алмаз', 'Что\x20вы\x20создадите\x20с\x20помощью\x20него?'], LANG[INV['AMETHYST']] = ['Аметист', 'Он\x20сиреневый,\x20как\x20Lapa'], LANG[INV['FLOUR']] = ['Мука', 'Используется\x20в\x20готовке'], LANG[INV['COOKIE']] = ['Печенье', 'Превосходное\x20бабушкино\x20печенье', 'Еда:\x2050'], LANG[INV['CAKE']] = ['Торт', 'Торт\x20мечты\x20для\x20гурманов', 'Еда:\x20100'], LANG[INV['MEAT']] = ['Сырое\x20Мясо', 'Ты\x20можешь\x20пожарить\x20его\x20с\x20помощью\x20огня', 'Вызывает\x20отравление:\x2010', 'Еда:\x2015'], LANG[INV['COOKED_MEAT']] = ['Жареное\x20Мясо', 'Превосходный\x20стейк,\x20пожалуйста', 'Еда:\x2035'], LANG[INV['FOODFISH']] = ['Сырая\x20Рыба', 'Я\x20думаю\x20она\x20всё\x20ещё\x20жива', 'Вызывает\x20отравление:\x2010', 'Еда:\x2018'], LANG[INV['FOODFISH_COOKED']] = ['Жареная\x20рыба', 'С\x20лимоном\x20она\x20прекрасна', 'Еда:\x2035'], LANG[INV['BREAD']] = ['Хлеб', 'Прекрасный\x20французский\x20хлеб', 'Это\x20валюта,\x20используемая\x20на\x20рынке', 'Еда:\x2015'], LANG[INV['SANDWICH']] = ['Бутерброд', 'На\x20вкус\x20как\x20Крабсбургер', 'Еда:\x20100'], LANG[INV['CANDY']] = ['Конфеты', 'Только\x20для\x20детей!', 'Еда:\x2020'], LANG[INV['SUGAR_CAN']] = ['Сахарная\x20Трость', 'Попробуйте\x20это,\x20это\x20вкусно', 'Еда:\x20100'], LANG[INV['GARLAND']] = ['Гирлянда', 'Прекрасная\x20декорация\x20для\x20крыши'], LANG[INV['SEED']] = ['Семя\x20Ягоды', 'Вырастает\x20в\x20ягоды', 'Рождение:\x202мин', 'Рост:\x2055сек', 'Нужна\x20вода:\x203мин\x2020сек', 'Прочность:\x20700', 'Продолжительность:\x208\x20дней'], LANG[INV['PLANT']] = ['Ягода', 'Ягода\x20вкусная!', 'Еда:\x2010'], LANG[INV['WHEAT_SEED']] = ['Пшеничное\x20Семя', 'Вырастает\x20в\x20пшеницу', 'Рождение:\x202мин', 'Рост:\x2016сек', 'Нужна\x20вода:\x202мин', 'Прочность:\x20700', 'Продолжительность:\x208\x20дней'], LANG[INV['WILD_WHEAT']] = ['Дикая\x20Пшеница', 'Перемалывается\x20в\x20муку,\x20когда\x20помещается\x20в\x20мельницу'], LANG[INV['PUMPKIN_SEED']] = ['Семена\x20Тыквы', 'Вырастает\x20в\x20тыкву', 'Рождение:\x202мин\x2040сек', 'Рост:\x202мин', 'Нужна\x20вода:\x202мин', 'Прочность:\x20700', 'Продолжительность:\x208\x20дней'], LANG[INV['PUMPKIN']] = ['Тыква', 'Это\x20напоминает\x20мне\x20Хеллоуин', 'Еда:\x2030'], LANG[INV['GARLIC_SEED']] = ['Семена\x20Чеснока', 'Очень\x20опасно\x20для\x20вампиров', 'Урон:\x2020', 'Рождение:\x204мин', 'Рост:\x204\x20мин', 'Нужна\x20вода:\x201мин\x2040сек', 'Прочность:\x20700', 'Продолжительность:\x208\x20дней'], LANG[INV['GARLIC']] = ['Чеснок', 'Лечит\x20и\x20снижает\x20получаемый\x20холод', 'Еда:\x2014', 'Лечит:\x2030', 'Эффект:\x201'], LANG[INV['THORNBUSH_SEED']] = ['Семена\x20Колючего\x20Куста', 'Может\x20нанести\x20урон\x20врагам', 'Урон:\x2020', 'Рождение:\x204мин', 'Рост:\x2015сек', 'Нужна\x20вода:\x203мин', 'Прочность:\x201000', 'Продолжительность:\x208\x20дней'], LANG[INV['THORNBUSH']] = ['Колючий\x20Куст', 'Это\x20больно!'], LANG[INV['PLOT']] = ['Грядка', 'Серьезно,\x20используйте\x20это.', 'С\x20этим\x20ГМО\x20удобрением\x20ваши\x20растения', 'будут\x20расти\x20быстрее\x20и\x20потребуют\x20меньше\x20воды', 'Прочность:\x202000'], LANG[INV['ICE']] = ['Лёд', 'Используется\x20для\x20изготовления\x20тортов\x20и\x20воды'], LANG[INV['SPANNER']] = ['Гаечный\x20Ключ', 'Для\x20починки\x20дверей,\x20стен,\x20колючек', 'Урон:\x202'], LANG[INV['FUR_WOLF']] = ['Шкура\x20Волка', 'Щенок?\x20Но\x20где\x20же\x20Щенок?!'], LANG[INV['FUR']] = ['Шкура\x20Зайца', 'Этот\x20кролик\x20был\x20таким\x20милым...'], LANG[INV['SPECIAL_FUR']] = ['Чистая\x20Шкура', 'Вы\x20-\x20фабрика\x20хлеба'], LANG[INV['SPECIAL_FUR_2']] = ['Чёрная\x20Шкура', 'Вы\x20готовы\x20делать\x20зло.'], LANG[INV['FUR_WINTER']] = ['Зимняя\x20Шкура', 'Эти\x20животные\x20просто\x20хотели\x20обнять\x20тебя...'], LANG[INV['SCALES']] = ['Чешуя', 'Она\x20пахнет\x20рыбой!'], LANG[INV['KRAKEN_SKIN']] = ['Шкура\x20Кракена', 'Вы\x20не\x20испугались?'], LANG[INV['FIRE']] = ['Костёр', 'Согрейтесь!', 'Прочность:\x20150', 'Продолжительность:\x202мин'], LANG[INV['BIG_FIRE']] = ['Большой\x20Костёр', 'Согрейтесь\x20больше!', 'Прочность:\x20400', 'Продолжительность:\x206мин'], LANG[INV['WORKBENCH']] = ['Верстак', 'Необходим\x20для\x20создания\x20многих\x20предметов'], LANG[INV['CORD']] = ['Нить', 'Используется\x20в\x20изготовлении\x20Шапок\x20и\x20Рюкзака'], LANG[INV['BLUE_CORD']] = ['Алмазная\x20Нить', 'Используется\x20в\x20изготовлении\x20специальных\x20шапок'], LANG[INV['CHEST']] = ['Сундук', 'Позволяет\x20хранить\x20предметы', 'Прочность:\x20500'], LANG[INV['SWORD_WOOD']] = ['Деревянный\x20Меч', 'Это\x20работает?', 'Урон:\x2012', 'Урон\x20по\x20строениям:\x204'], LANG[INV['SWORD']] = ['Каменный\x20Меч', 'Будьте\x20добры\x20к\x20другим', 'Урон:\x2019', 'Урон\x20по\x20строениям:\x206'], LANG[INV['SWORD_GOLD']] = ['Золотой\x20Меч', 'Король\x20леса', 'Урон:\x2022', 'Урон\x20по\x20строениям:\x207'], LANG[INV['SWORD_DIAMOND']] = ['Алмазный\x20Меч', 'Ты\x20можешь\x20почувствовать\x20силу', 'Урон:\x2024', 'Урон\x20по\x20строениям:\x208'], LANG[INV['PIRATE_SWORD']] = ['Пиратский\x20Меч', 'Aррррр!', 'Дальность\x20атаки\x20больше\x20чем\x20у\x20нормального\x20меча', 'Урон:\x2024', 'Урон\x20по\x20строениям:\x208'], LANG[INV['SWORD_AMETHYST']] = ['Аметистовый\x20Меч', 'Сиреневый\x20-\x20самый\x20красивый\x20цвет\x20в\x20мире', 'Урон:\x2027', 'Урон\x20по\x20строениям:\x209'], LANG[INV['DRAGON_SWORD']] = ['Меч\x20Дракона', 'Без\x20пощады!', 'Урон:\x2030', 'Урон\x20по\x20строениям:\x2010'], LANG[INV['DRAGON_SPEAR']] = ['Копьё\x20Дракона', 'Убивай\x20всех!', 'Урон:\x2022', 'Урон\x20по\x20строениям:\x206'], LANG[INV['PICK_WOOD']] = ['Деревянная\x20Кирка', 'Может\x20добывать\x20только\x20дерево\x20и\x20камень', 'Урон:\x201'], LANG[INV['PICK']] = ['Каменная\x20Кирка', 'Может\x20добывать\x20дерево,\x20камень\x20и\x20золото', 'Урон:\x202'], LANG[INV['PICK_GOLD']] = ['Золотая\x20Кирка', 'Также\x20может\x20добывать\x20алмазы', 'Урон:\x203', 'Урон\x20по\x20строениям:\x201'], LANG[INV['PICK_DIAMOND']] = ['Алмазная\x20Кирка', 'Можно\x20добывать\x20всё', 'Урон:\x204', 'Урон\x20по\x20строениям:\x201'], LANG[INV['PICK_AMETHYST']] = ['Аметистовая\x20Кирка', 'Можно\x20добывать\x20всё,\x20ещё\x20и\x20выглядит\x20красиво!', 'Урон:\x205', 'Урон\x20по\x20строениям:\x201'], LANG[INV['HAMMER']] = ['Каменный\x20молот', 'Используется\x20для\x20разрушения\x20зданий', 'Плохо\x20разрушает\x20алмазные\x20и\x20аметистовые\x20здания', 'Урон:\x202', 'Урон\x20по\x20строениям:\x2020'], LANG[INV['HAMMER_GOLD']] = ['Золотой\x20Молот', 'Используется\x20для\x20разрушения\x20зданий', 'Плохо\x20разрушает\x20аметистовые\x20здания', 'Урон:\x203', 'Урон\x20по\x20строениям:\x2030'], LANG[INV['HAMMER_DIAMOND']] = ['Алмазный\x20Молот', 'Используется\x20для\x20разрушения\x20зданий', 'Урон:\x204', 'Урон\x20по\x20строениям:\x2040'], LANG[INV['HAMMER_AMETHYST']] = ['Аметистовый\x20Молот', 'Используется\x20для\x20разрушения\x20зданий', 'Урон:\x205', 'Урон\x20по\x20строениям:\x2050'], LANG[INV['SUPER_HAMMER']] = ['Супер\x20Молот', 'У\x20вас\x20есть\x20планы\x20разрушить\x20мир?', 'Урон:\x2012', 'Урон\x20по\x20строениям:\x2070'], LANG[INV['WOOD_SPEAR']] = ['Деревянное\x20Копьё', 'Выглядит\x20как\x20деревянная\x20палочка,\x20но\x20делает\x20больно.', 'Урон:\x2010', 'Урон\x20по\x20строениям:\x202'], LANG[INV['SPEAR']] = ['Каменное\x20Копьё', 'Начало\x20эволюции!', 'Урон:\x2014', 'Урон\x20по\x20строениям:\x204'], LANG[INV['GOLD_SPEAR']] = ['Золотое\x20Копьё', 'Осторожно,\x20это\x20больно!', 'Урон:\x2015', 'Урон\x20по\x20строениям:\x205'], LANG[INV['DIAMOND_SPEAR']] = ['Алмазное\x20Копьё', 'Вы\x20готовы\x20убивать\x20дракона.', 'Урон:\x2017', 'Урон\x20по\x20строениям:\x205'], LANG[INV['AMETHYST_SPEAR']] = ['Аметистовое\x20Копьё', 'Драконы\x20больше\x20не\x20пугают\x20вас', 'Урон:\x2018', 'Урон\x20по\x20строениям:\x206'], LANG[INV['SHOVEL']] = ['Каменная\x20Лопата', 'Копайте\x20землю,\x20чтобы\x20получить\x20грязь,\x20лед\x20и\x20песок', 'Так\x20же\x20вы\x20можете\x20получить\x20ресурсы', 'Урон:\x202'], LANG[INV['SHOVEL_GOLD']] = ['Золотая\x20Лопата', 'Копайте\x20землю,\x20чтобы\x20получить\x20грязь,\x20лед\x20и\x20песок', 'Так\x20же\x20вы\x20можете\x20получить\x20ресурсы', 'Урон:\x203', 'Урон\x20по\x20строениям:\x201'], LANG[INV['SHOVEL_DIAMOND']] = ['Алмазная\x20Лопата', 'Копайте\x20землю,\x20чтобы\x20получить\x20грязь,\x20лед\x20и\x20песок', 'Так\x20же\x20вы\x20можете\x20получить\x20ресурсы', 'Урон:\x204', 'Урон\x20по\x20строениям:\x201'], LANG[INV['SHOVEL_AMETHYST']] = ['Аметистовая\x20Лопата', 'Копайте\x20землю,\x20чтобы\x20получить\x20грязь,\x20лед\x20и\x20песок', 'Так\x20же\x20вы\x20можете\x20получить\x20ресурсы', 'Урон:\x205', 'Урон\x20по\x20стреониям:\x201'], LANG[INV['WOOD_HELMET']] = ['Деревянный\x20Шлем', 'Лучше\x20чем\x20ничего', 'Защита\x20от\x20игроков:\x201', 'Защита\x20от\x20животных:\x204'], LANG[INV['STONE_HELMET']] = ['Каменный\x20Шлем', 'Вы\x20готовы\x20к\x20битве!', 'Защита\x20от\x20игроков:\x202', 'Защита\x20от\x20животных:\x208'], LANG[INV['GOLD_HELMET']] = ['Золотой\x20Шлем', 'Также\x20известен\x20как\x20шлем\x20жестоких\x20людей', 'Защита\x20от\x20игроков:\x204', 'Защита\x20от\x20животных:\x2013'], LANG[INV['DIAMOND_HELMET']] = ['Алмазный\x20Шлем', 'Не\x20слишком\x20хвастайтесь', 'Защита\x20от\x20игроков:\x205', 'Защита\x20от\x20животных:\x2019'], LANG[INV['AMETHYST_HELMET']] = ['Аметистовый\x20Шлем', 'Ты\x20больше\x20ничего\x20не\x20боишься', 'Защита\x20от\x20игроков:\x206', 'Защита\x20от\x20животных:\x2023'], LANG[INV['DRAGON_HELMET']] = ['Шлем\x20Дракона', 'Ты\x20покоришь\x20мир', 'Защита\x20от\x20игроков:\x208', 'Защита\x20от\x20животных:\x2027'], LANG[INV['EXPLORER_HAT']] = ['Шапка\x20Исследователя', 'Животные\x20не\x20обращают\x20на\x20вас\x20внимания', 'но\x20не\x20шумите!', 'Защищает\x20от\x20холода\x20вне\x20воды.'], LANG[INV['CHRISTMAS_HAT']] = ['Рождественская\x20Шапка', 'Ох-хо-хо,\x20Счастливого\x20Рождества', 'Защищает\x20от\x20холода\x20вне\x20воды.'], LANG[INV['ELF_HAT']] = ['Шапка\x20Эльфа', 'Не\x20позволяйте\x20себе\x20эксплуатироваться,\x20ведь\x20вы\x20маленький\x20снежный\x20эльф!', 'Защищает\x20от\x20холода\x20вне\x20воды.'], LANG[INV['HOOD']] = ['Капюшон', 'Вы\x20разбойник', 'Вы\x20можете\x20украсть\x20что-то,\x20если', '1)\x20Ночь', '2)\x20Вы\x20ничего\x20не\x20носите', '3)Если\x20вас\x20не\x20тронули\x20в\x20течение\x20восьми\x20секунд', '4)\x20Вы\x20не\x20рядом\x20с\x20огнём', '5)\x20Вы\x20не\x20можете\x20ничего\x20украсть\x20у\x20крестьянской\x20туники', 'Защищает\x20от\x20холода\x20вне\x20воды.'], LANG[INV['EARMUFFS']] = ['Теплые\x20Наушники', 'Какая-то\x20маленькая\x20шапка.', 'Защищает\x20от\x20холода\x20вне\x20воды.'], LANG[INV['COAT']] = ['Шапка', 'Так\x20же\x20называется\x20пальтом.', 'Защищает\x20от\x20холода\x20вне\x20воды.'], LANG[INV['CAP_SCARF']] = ['Зимний\x20Шарф\x20и\x20Шапка', 'Очень\x20комфортно', 'Очень\x20тепло'], LANG[INV['PEASANT']] = ['Крестьянская\x20Туника', 'Ваши\x20растения\x20растут\x20быстрее', 'Защищает\x20от\x20холода\x20вне\x20воды.'], LANG[INV['WINTER_HOOD']] = ['Зимний\x20Капюшон', 'Вы\x20можете\x20украсть\x20что-то,\x20если', '-\x20Ночь', '-\x20Вы\x20ничего\x20не\x20носите', '-\x20Если\x20вас\x20не\x20тронули\x20в\x20течение\x20четырёх\x20секунд', '-\x20Вы\x20не\x20рядом\x20с\x20огнём', '-\x20Вы\x20не\x20можете\x20ничего\x20украсть\x20у\x20крестьянской\x20туники', 'Защищает\x20от\x20холода\x20вне\x20воды.'], LANG[INV['WINTER_PEASANT']] = ['Зимняя\x20Крестьянская\x20Туника', 'Ваши\x20растения\x20растут\x20быстрее', 'Защищает\x20от\x20холода\x20вне\x20воды.'], LANG[INV['DIVING_MASK']] = ['Акваланг', 'Вы\x20быстрее\x20передвигаетесь\x20по\x20воде', 'Тепло\x20в\x20воде', 'Защита\x20от\x20игроков:\x202,\x20Защита\x20от\x20животных:\x208'], LANG[INV['SUPER_DIVING_SUIT']] = ['Супер\x20Акваланг', 'Вы\x20очень\x20быстро\x20передвигаетесь\x20по\x20воде', 'Тепло\x20в\x20воде', 'Защита\x20от\x20игроков:\x204,\x20Защита\x20от\x20животных:\x2016'], LANG[INV['DRAGON_ORB']] = ['Шар\x20Дракона', 'Даётся\x20за\x20квест'], LANG[INV['DRAGON_HEART']] = ['Сердце\x20Дракона', 'Превращает\x20вас\x20в\x20призрака\x20после\x20смерти!', 'Вы\x20призрак\x20на\x2060\x20секунд', 'Найдите\x20камень\x20воскрешения'], LANG[INV['GEMME_GREEN']] = ['Зелёный\x20Драгоценный\x20Камень', 'Вы\x20без\x20читов,\x20правильно?'], LANG[INV['GEMME_ORANGE']] = ['Оранжевый\x20Драгоценный\x20Камень', 'Только\x20настоящий\x20пират\x20найдёт\x20это!'], LANG[INV['GEMME_BLUE']] = ['Синий\x20Драгоценный\x20Камень', 'Для\x20очень\x20добрых\x20людей'], LANG[INV['CROWN_GREEN']] = ['Зеленая\x20корона', 'Вы\x20лечите\x20себя\x20очень\x20быстро', 'Лечит:\x2040', 'Защита\x20от\x20игроков:\x204,\x20Защита\x20от\x20животных:\x2016'], LANG[INV['CROWN_ORANGE']] = ['Оранжевая\x20Корона', 'Вам\x20очень\x20повезло', 'Защита\x20от\x20игроков:\x204,\x20Защита\x20от\x20животных:\x2016'], LANG[INV['CROWN_BLUE']] = ['Синяя\x20Корона', 'Как\x20только\x20вы\x20умрёте,\x20вы\x20станете\x20призраком', 'Но\x20вы\x20потеряете\x20своё\x20оружие', 'Защита\x20от\x20игроков:\x204,\x20Защита\x20от\x20животных:\x2016'], LANG[INV['BUCKET_FULL']] = ['Ведро', 'Используется\x20для\x20заполнения\x20колодца', 'Одно\x20ведро\x20равняется\x20двенадцати\x20бутылкам'], LANG[INV['BUCKET_EMPTY']] = ['Пустое\x20ведро', 'Вам\x20надо\x20заполнить\x20это\x20ведро\x20возле\x20воды'], LANG[INV['BOTTLE_FULL']] = ['Бутылка', 'Позволяет\x20пить\x20воду\x20в\x20любом\x20месте', 'Вода:\x2050'], LANG[INV['BOTTLE_EMPTY']] = ['Пустая\x20бутылка', 'Вы\x20можете\x20заполнить\x20бутылку\x20возле\x20воды'], LANG[INV['WATERING_CAN']] = ['Пустая\x20Лейка', 'Вы\x20можете\x20заполнить\x20лейку\x20возле\x20воды'], LANG[INV['WATERING_CAN_FULL']] = ['Лейка', 'Позволяет\x20поливать\x20растения', 'Урон:\x201'], LANG[INV['BAG']] = ['Рюкзак', 'Больше\x20места\x20для\x20ваших\x20предметов!'], LANG[INV['PAPER']] = ['Бумага', 'Используется\x20при\x20создании\x20книги'], LANG[INV['BOOK']] = ['Книга', 'Сокращает\x20время\x20изготовления\x20предметов', 'Должно\x20быть\x20одето\x20для\x20работы', 'Урон:\x201'], LANG[INV['BANDAGE']] = ['Бинт', 'Восстанавливает\x20ваше\x20здоровье\x20быстрее', 'Лечит:\x2030', 'Эффект:\x205'], LANG[INV['LOCK']] = ['Замок', 'Позволяет\x20вам\x20закрыть\x20ваш\x20сундук'], LANG[INV['LOCKPICK']] = ['Ключ', 'Даёт\x20вам\x20открыть\x20один\x20запертый\x20сундук'], LANG[INV['TOTEM']] = ['Тотем', 'Позволяет\x20вам\x20создать\x20команду', 'Совместное\x20использование\x20дверей\x20и\x20сундуков', 'Вредное\x20здание\x20не\x20повредит\x20вашего\x20друга'], LANG[INV['BRIDGE']] = ['Мост', 'Очень\x20полезно\x20на\x20воде', 'Позволяет\x20вам\x20пить\x20без\x20потери\x20воздуха', 'Передвигаетесь\x20быстрее\x20по\x20воде'], LANG[INV['SIGN']] = ['Табличка', 'Оставьте\x20сообщение\x20другим', 'Прочность:\x20200'], LANG[INV['ROOF']] = ['Крыша', 'Немного\x20скрывает\x20вас\x20и\x20согревает!'], LANG[INV['WELL']] = ['Колодец', 'Позволяет\x20заполнить\x20бутылку', 'Прочность:\x201000'], LANG[INV['WALL']] = ['Деревянная\x20Стена', 'Это\x20просто\x20стена', 'Прочность:\x201000'], LANG[INV['STONE_WALL']] = ['Каменная\x20Стена', 'Это\x20немного\x20посерьезнее.', 'Прочность:\x201500'], LANG[INV['GOLD_WALL']] = ['Золотая\x20Стена', 'Золото\x20на\x20ваших\x20стенах?\x20Она\x20ослепляет.', 'Прочность:\x202000'], LANG[INV['DIAMOND_WALL']] = ['Алмазная\x20Стена', 'Очень\x20блестит,\x20следите\x20за\x20вашими\x20глазами', 'Прочность:\x202500'], LANG[INV['AMETHYST_WALL']] = ['Аметистовая\x20стена', 'Вы\x20должны\x20быть\x20слишком\x20напуганы,\x20чтобы\x20уйти!', 'Прочность:\x203500'], LANG[INV['SPIKE']] = ['Деревянная\x20Стена\x20с\x20Шипами', 'Может\x20наносить\x20урон\x20врагам', 'Урон:\x2010,\x20Урон\x20за\x20один\x20удар:\x202', 'Прочность:\x20150'], LANG[INV['STONE_SPIKE']] = ['Каменная\x20Стена\x20с\x20Шипами', 'Я\x20не\x20хотел\x20бы\x20быть\x20вашим\x20врагом', 'Урон:\x2020', 'Урон\x20за\x20один\x20удар:\x203', 'Прочность:\x20300'], LANG[INV['GOLD_SPIKE']] = ['Золотая\x20Стена\x20с\x20Шипами', 'Вы\x20очень\x20жестоки.', 'Урон:\x2030', 'Урон\x20за\x20один\x20удар:\x203', 'Прочность:\x20600'], LANG[INV['DIAMOND_SPIKE']] = ['Алмазная\x20Стена\x20с\x20Шипами', 'Вам\x20не\x20нравится\x20иметь\x20компанию.', 'Урон:\x2040', 'Урон\x20за\x20один\x20удар:\x204', 'Прочность:\x201200'], LANG[INV['AMETHYST_SPIKE']] = ['Аметистовая\x20Стена\x20с\x20Шипами', 'Какого\x20черта,\x20что\x20ваши\x20соседи\x20сделали\x20с\x20вами?', 'Урон:\x2050', 'Урон\x20за\x20один\x20удар:\x204', 'Прочность:\x202400'], LANG[INV['WOOD_DOOR']] = ['Деревянная\x20Дверь', 'Может\x20быть\x20открыта\x20и\x20закрыта\x20вами\x20или\x20друзьями', 'Прочность:\x201000'], LANG[INV['STONE_DOOR']] = ['Каменная\x20Дверь', 'Более\x20серьезная\x20и\x20сильная\x20дверь', 'Прочность:\x201500'], LANG[INV['GOLD_DOOR']] = ['Золотая\x20Дверь', 'Вы\x20перестраиваете\x20\x22Эль\x20Дорадо?\x22', 'Прочность:\x202000'], LANG[INV['DIAMOND_DOOR']] = ['Алмазная\x20Дверь', 'Для\x20роскошного\x20дома', 'Прочность:\x202500'], LANG[INV['AMETHYST_DOOR']] = ['Аметистовая\x20Дверь', 'Ваш\x20дом\x20в\x20безопасности?', 'Прочность:\x203000'], LANG[INV['FURNACE']] = ['Печь', 'Согревает', 'Тратит\x20дерево\x20каждые\x205\x20секунд', 'Прочность:\x201000'], LANG[INV['WINDMILL']] = ['Мельница', 'Может\x20сделать\x20муку\x20из\x20пшеницы', 'Требует\x205\x20секунд\x20для\x20получения\x20муки', 'Даёт\x20очки\x20при\x20работе', 'Прочность:\x202000'], LANG[INV['BREAD_OVEN']] = ['Хлебная\x20Печь', 'Позволяет\x20готовить\x20хлеб\x20из\x20муки', 'Требует\x2010\x20секунд\x20для\x20получения\x20хлеба', 'Даёт\x20очки\x20при\x20работе', 'Прочность:\x202000'], LANG[INV['RESURRECTION']] = ['Камень\x20Воскрешения', 'Это\x20магия', 'Воскрешает\x20вас,\x20если\x20вы\x20призрак', 'Вы\x20потеряете\x20своё\x20оружие', 'Прочность:\x20200'], LANG[TEXT['YOU_CANNOT_JOIN']] = 'Вы\x20не\x20можете\x20зайти\x20на\x20этот\x20сервер', LANG[TEXT['KICKED']] = 'Выгнаны:\x20', LANG[TEXT['KEY_ALREADY']] = 'Ваш\x20ключ\x20уже\x20используется\x20кем-то', LANG[TEXT['KEY_WRONG']] = 'Ваш\x20ключ\x20неправильный', LANG[TEXT['OLD_VERSION']] = 'У\x20вас\x20старая\x20версия,\x20вам\x20нужно\x20очистить\x20кеш', LANG[TEXT['NO_MORE_RESOURCES']] = 'Ресурсов\x20больше\x20нет', LANG[TEXT['SURVIVED_1DAY']] = 'Вы\x20выжили\x201\x20день', LANG[TEXT['SURVIVED']] = 'Вы\x20выжили\x20', LANG[TEXT['DAYS']] = '\x20дней', LANG[TEXT['DEAD_SAD']] = 'Вы\x20умерли\x20;-;', LANG[TEXT['SPAM_ME']] = 'Сервер\x20не\x20может\x20найти\x20точку\x20спавна!\x20Спамьте\x20кнопку\x20играть!', LANG[TEXT['SPAM_ME2']] = 'Сервер\x20заполнен!\x20Спамьте\x20кнопку\x20играть!', LANG[TEXT['EMPTY']] = 'Ресурсы\x20закончились', LANG[TEXT['INV_FULL']] = 'Инвентарь\x20заполнен\x20(правая\x20кнопка\x20мыши\x20для\x20удаления\x20предметов)', LANG[TEXT['DEAD']] = '\x20умер', LANG[TEXT['WRONG_TOOL']] = 'Это\x20не\x20тот\x20инструмент', LANG[TEXT['JOIN_TEAM']] = 'Вы\x20вошли\x20в\x20команду', LANG[TEXT['YOU_DEAD']] = 'Вы\x20умерли', LANG[TEXT['JOINED_TEAM']] = '\x20вошёл\x20в\x20команду', LANG[TEXT['TEAM_DESTROYED']] = 'Ваша\x20команда\x20была\x20разрушена', LANG[TEXT['LEFT_TEAM']] = 'Вы\x20покинули\x20команду', LANG[TEXT['LEFT_TEAM2']] = '\x20покинул\x20команду', LANG[TEXT['TOKEN']] = 'Кто-то\x20использует\x20ваш\x20токен\x20:>', LANG[TEXT['CHOOSE']] = 'Выберите\x20сервер', LANG[TEXT['PLAYERS']] = 'игроков', LANG[TEXT['TOTAL_PLAYERS']] = 'игроков\x20всего', LANG[TEXT['TOTAL_MODE']] = 'игроков\x20в\x20этом\x20режиме', LANG[TEXT['COMMING_SOON']] = 'Скоро...', document['getElementById']('nickname_input')['placeholder'] = 'Имя', DIE[0x0] = ['Вы\x20были\x20убиты\x20без\x20причины'], DIE[0x1] = ['Вы\x20умерли\x20от\x20голода,\x20как\x20название\x20игры\x20подразумевает\x20это'], DIE[0x2] = ['Вы\x20замерзли\x20до\x20смерти.\x20Так\x20грустно', 'У\x20вас\x20гипотермия.\x20В\x20следующий\x20раз,\x20постарайтесь\x20быть\x20рядом\x20с\x20огнём.'], DIE[0x3] = ['Игрок\x20убил\x20тебя\x20и\x20сказал\x20\x27стань\x20лучше.\x27', 'Ты\x20был\x20убит\x20игроком.\x20Не\x20волнуйся,\x20этот\x20игрок\x20тоже\x20умрёт,\x20в\x20конце\x20концов.'], DIE[0x4] = ['Вы\x20стояли\x20слишком\x20близко\x20к\x20огню\x20и\x20сгорели.\x20Плохая\x20идея.', 'Ты\x20умер\x20от\x20огня,\x20он\x20причинил\x20вам\x20боль.\x20Напишите\x20историю\x20насчёт\x20этого.'], DIE[0x5] = ['Ваше\x20тело\x20станет\x20гнездом\x20для\x20яиц\x20паука', 'Паук\x20убил\x20вас.\x20По\x20крайней\x20мере\x20это\x20был\x20не\x20кролик.'], DIE[0x6] = ['Волк\x20больше\x20не\x20будет\x20голодать\x20после\x20того,\x20как\x20наелся\x20вами', 'Они\x20не\x20собаки.\x20Волки\x20не\x20любят\x20ласкаться.'], DIE[0x7] = ['Лиса\x20была\x20слишком\x20быстрой\x20для\x20вас', 'Лиса\x20превратила\x20тебя\x20в\x20ящик.\x20С\x20каких\x20пор\x20животные\x20обладают\x20магическими\x20способностями?'], DIE[0x8] = ['Медведь\x20просто\x20хотел\x20обнять\x20тебя.', 'Медведь\x20был\x20слишком\x20грустным.\x20Мне\x20не\x20жаль.'], DIE[0x9] = ['Вы\x20были\x20сожжены\x20драконом.\x20Так\x20грустно.', 'Вы\x20были\x20сплющены\x20драконом.\x20Быть\x20раздавленным\x20-\x20это\x20ужасный\x20способ\x20умереть.'], DIE[0xa] = ['Вы\x20прыгнули\x20в\x20стену\x20с\x20шипами.\x20Плохая\x20идея...', 'Вы\x20были\x20убиты\x20стеной\x20с\x20шипами.\x20Большинство\x20людей\x20достаточно\x20разумны,\x20чтобы\x20не\x20касаться\x20острых\x20вещей.'], DIE[0xb] = ['Даже\x20призрак\x20может\x20умереть.', 'Вы\x20не\x20смогли\x20воскреснуть.\x20Это\x20игра,\x20и\x20вы\x20можете\x20возвращаться\x20к\x20жизни\x20после\x20смерти,\x20так\x20что...'], DIE[0xc] = ['Бактерия\x20из\x20вашей\x20сырой\x20пищи\x20убила\x20вас.\x20Эта\x20игра\x20безусловно\x20сложна.', 'Вы\x20убили\x20сырую\x20пищу.\x20Она\x20тоже\x20тебя\x20убила.'], DIE[0xd] = ['Вы\x20умерли\x20от\x20жажды.\x20Лучше\x20пить\x20собственную\x20мочу.'], DIE[0xe] = ['Знаешь\x20ли\x20ты,\x20что\x20у\x20голодающих\x20рот\x20всегда\x20под\x20водой,\x20когда\x20они\x20плавают?\x20Теперь\x20ты\x20знаешь.'], DIE[0xf] = ['Не\x20волнуйся,\x20пиранья\x20сочла\x20тебя\x20вкусным.', 'Веселый\x20факт:\x20Пираньи\x20едят\x20людей.\x20В\x20том\x20числе\x20тебя.'], DIE[0x10] = ['LapaMauve\x20не\x20планировал,\x20что\x20ты\x20убьёшь\x20кракена', 'Крак!\x20Кракен\x20сломал\x20твой\x20череп.'], DIE[0x11] = ['Твоя\x20кожа\x20разваливается,\x20солнце\x20убило\x20тебя'], DIE[0x12] = ['Чеснок,\x20хранящийся\x20в\x20твоих\x20карманах\x20сварил\x20твой\x20мозг.'], DIE[0x13] = ['Не\x20стоит\x20стоять\x20рядом\x20с\x20чесночным\x20зубком,\x20когда\x20вы\x20вампир.'], DIE[0x14] = ['Вы\x20вампир,\x20Вы\x20ели\x20чеснок,\x20чего\x20вы\x20ожидали?'], DIE[0x15] = ['Ваше\x20тело\x20застревает\x20в\x20шипах,\x20когда\x20вы\x20пытаетесь\x20убежать,\x20ваша\x20кожа\x20отрывается,\x20и\x20ваше\x20сердце\x20перестает\x20биться.'], ZOMBIE_GRUMBLE = 'Uuunnnggg', ZOMBIE_GRUMBLES = ['Uuunnnggg...\x20Я\x20голоден', 'Нужны\x20твои\x20мозги\x20Uuunnnggg...', 'Свежее\x20мясо\x20здесь...\x20Uuunnnggg', 'Uuunnnggg...\x20Ты\x20вкусный', 'Uuunnnggg...', 'Еда…\x20Uuunnnggg...', 'Я\x20чувствую\x20запах\x20крови...\x20Uuunnnggg'];
    },
    set_portuguese = function() {
        LANG[INV['DRAGON_CUBE']] = ['You\x20feel\x20a\x20great\x20power\x20emanating\x20from\x20this\x20orb'], DIE[0x16] = ['This\x20crab,\x20though\x20frightening\x20in\x20nature,\x20pinched\x20your\x20fingertips\x20so\x20hard\x20that\x20you\x20had\x20a\x20heart\x20attack.'], LANG[INV['CRAB_STICK']] = ['Crab\x20sticks', 'Oh,\x20yeah?\x20Is\x20there\x20crab\x20in\x20the\x20crab\x20sticks?', 'Food:\x2020'], LANG[TEXT['BACK_TO_THE_GAME']] = '\x20BACK\x20TO\x20THE\x20GAME', LANG[TEXT['TWITTER']] = '\x20Share\x20on\x20Twitter', LANG[TEXT['FACEBOOK']] = '\x20Share\x20on\x20Facebook', LANG[TEXT['KIT_NEXT']] = 'You\x20can\x20buy\x20items\x20on\x20the\x20shop\x20in\x20the\x20next\x20game\x20with\x20your\x20points', LANG[TEXT['POINTS']] = 'points', LANG[TEXT['SCORE']] = 'Score', LANG[TEXT['KILL']] = 'Kill', LANG[TEXT['DAYS_SURVIVED']] = 'Days\x20survived', LANG[TEXT['MODE_FREE']] = 'Building\x20method:\x20Free.\x20Press\x20G\x20to\x20change', LANG[TEXT['MODE_GRID']] = 'Building\x20method:\x20Grid.\x20Press\x20G\x20to\x20change', LANG[INV['CRAB_LOOT']] = ['Crab\x20Claw', 'Crab\x20claws\x20can\x20also\x20be\x20eaten', 'Food:\x2010'], LANG[INV['CRAB_SPEAR']] = ['Crab\x20Spear', 'Allow\x20you\x20to\x20calm\x20crabs,\x20and\x20heal\x20them', 'Damage:\x2014', 'Building\x20Damage:\x204'], LANG[INV['CROWN_CRAB']] = ['Crab\x20Helmet', 'You\x20are\x20the\x20king\x20of\x20crabs!', 'Crabs\x20follow\x20you', 'They\x20can\x27t\x20hit\x20you\x20and\x20you\x20can\x27t\x20hit\x20them', 'Players\x20Defense:\x204', 'Animals\x20Defense:\x2013'], LANG[INV['BED']] = ['Bed', 'Relax\x20in\x20this\x20confortable\x20bed', 'You\x20are\x20less\x20cold,\x20less\x20thirsty,\x20and\x20less\x20hungry', 'You\x20will\x20be\x20cured\x20faster', 'Durability:\x20400'], document['getElementById']('typequest')['innerHTML'] = 'Chrono\x20Quests', document['getElementById']('timeremainingquest')['innerHTML'] = 'Time\x20Remaining', document['getElementById']('constraintquest')['innerHTML'] = '\x20Constraints', document['getElementById']('claim_rewards')['innerHTML'] = '\x20Claim\x20rewards', document['getElementById']('rewardquest')['innerHTML'] = '\x20Reward', document['getElementById']('killdragon_1')['innerHTML'] = '\x20Collect\x201\x20dragon\x20heart', document['getElementById']('amethyst_2')['innerHTML'] = '\x20Gather\x201\x20amethyst', document['getElementById']('survive20min_3')['innerHTML'] = 'Survive\x20without\x20losing\x20life', document['getElementById']('treasure_chest_4')['innerHTML'] = '\x20Open\x205\x20treasure\x20chests', document['getElementById']('dont_hit_5')['innerHTML'] = '\x20Be\x20peaceful', document['getElementById']('bread_6')['innerHTML'] = '\x20Collect\x20100\x20bread\x20in\x20deep\x20winter', document['getElementById']('winter_7')['innerHTML'] = '\x20After\x201\x20day,\x20survive\x20in\x20winter';
        for (var _0x3ba4ae = 0x0; _0x3ba4ae < 0x7; _0x3ba4ae++) document['getElementById']('claim_reward_' + _0x3ba4ae)['innerHTML'] = 'CLAIM\x20REWARD!';
        document['getElementById']('quit_chronoquest')['innerHTML'] = '\x20QUIT', LANG[INV['HAND']] = ['mão'], LANG[INV['GROUND']] = ['terra', 'está\x20sujo!'], LANG[INV['SAND']] = ['areia', 'entrou\x20nos\x20meus\x20olhos!'], LANG[INV['WOOD']] = ['madeira', 'você\x20não\x20pode\x20pegar\x20o\x20suficiente\x20disso!'], LANG[INV['STONE']] = ['pedra', 'também\x20chamado\x20rocha'], LANG[INV['GOLD']] = ['ouro', 'seja\x20generoso,\x20dê\x20para\x20outros'], LANG[INV['DIAMOND']] = ['diamante', 'o\x20que\x20você\x20irá\x20fazer\x20com\x20isso?'], LANG[INV['AMETHYST']] = ['ametista', 'é\x20mauve\x20como\x20lapa'], LANG[INV['FLOUR']] = ['farinha', 'usada\x20na\x20cozinha'], LANG[INV['COOKIE']] = ['biscoito', 'biscoito\x20da\x20vovó', 'comida:\x2050'], LANG[INV['CAKE']] = ['bolo', 'bolo\x20dos\x20sonhos\x20para\x20gourmets', 'comida:\x20100'], LANG[INV['MEAT']] = ['carne\x20crua', 'você\x20pode\x20cozinhar\x20na\x20fogueira', 'envenenamento\x20por\x20comida:\x2010', 'comida:\x2015'], LANG[INV['COOKED_MEAT']] = ['carne\x20assada', 'um\x20mal\x20passado,\x20por\x20favor', 'comida:\x2035'], LANG[INV['FOODFISH']] = ['peixe\x20cru', 'eu\x20acho\x20que\x20ainda\x20está\x20vivo', 'causa\x20envenenamento\x20por\x20comida:\x2010', 'comida:\x2018'], LANG[INV['FOODFISH_COOKED']] = ['peixe\x20assado', 'com\x20limão\x20é\x20perfeito', 'comida:\x2035'], LANG[INV['BREAD']] = ['pão', 'um\x20excelente\x20pão\x20francês', 'é\x20a\x20moeda\x20do\x20mercado', 'comida:\x2015'], LANG[INV['SANDWICH']] = ['sanduíche', 'saboroso\x20com\x20rissol\x20de\x20krabby', 'comida:\x20100'], LANG[INV['CANDY']] = ['doces', 'apenas\x20para\x20crianças!', 'comida:\x20100'], LANG[INV['SUGAR_CAN']] = ['cana-de-açúcar', 'prove,\x20é\x20delicioso!', 'comida:\x20100'], LANG[INV['GARLAND']] = ['pisca-pisca', 'decoração\x20perfeita\x20de\x20telhado'], LANG[INV['SEED']] = ['sementes\x20de\x20berries', 'cresce\x20como\x20berrie', 'nasce\x20em:\x202min', 'cresce\x20em:\x2055s', 'precisa\x20de\x20água\x20em:\x203min\x2020s', 'durabilidade:\x20700', 'tempo\x20de\x20vida:\x208\x20dias'], LANG[INV['PLANT']] = ['berry', 'Berry\x20saborosa!', 'comida:\x2010'], LANG[INV['WHEAT_SEED']] = ['semente\x20de\x20trigo', 'cresce\x20como\x20trigo', 'nasce\x20em:\x202min', 'cresce\x20em:\x2016s', 'precisa\x20de\x20água\x20em:\x202min', 'durabilidade:\x20700', 'tempo\x20de\x20vida:\x208\x20days'], LANG[INV['WILD_WHEAT']] = ['planta\x20selvagem', 'vira\x20farinha\x20quando\x20coloca\x20em\x20um\x20moinho\x20de\x20vento'], LANG[INV['PUMPKIN_SEED']] = ['semente\x20de\x20abóbora', 'cresce\x20como\x20abóbora', 'nasce\x20em:\x202min\x2040s', 'cresce\x20em:\x202min', 'precisa\x20de\x20água\x20em:\x202min', 'durabilidade:\x20700', 'tempo\x20de\x20vida:\x208\x20dias'], LANG[INV['PUMPKIN']] = ['abóbora', 'é\x20a\x20lembrança\x20do\x20halloween', 'comida:\x2030'], LANG[INV['GARLIC_SEED']] = ['semente\x20de\x20alho', 'muito\x20perigoso\x20para\x20vampiros', 'dano:\x2020', 'nassce:\x204min', 'cresce\x20em:\x201min\x2010s', 'precisa\x20de\x20água\x20em:\x201min\x2040s', 'durabilidade:\x20700', 'tempo\x20de\x20vida:\x208\x20dias'], LANG[INV['GARLIC']] = ['alho', 'cura\x20você\x20e\x20reduz\x20o\x20frio', 'comida:\x2014', 'cura\x20ao\x20longo\x20do\x20tempo:\x2030', 'efeito:\x201'], LANG[INV['THORNBUSH_SEED']] = ['semente\x20de\x20mato\x20de\x20espinhos', 'pode\x20dar\x20dano\x20nos\x20seus\x20inimigos', 'dano:\x2020', 'nasce\x20em:\x204min', 'cresce\x20em:\x2015s', 'precisa\x20de\x20água\x20em:\x203min', 'durabilidade:\x201000', 'tempo\x20de\x20vida:\x208\x20days'], LANG[INV['THORNBUSH']] = ['mato\x20de\x20espinhos', 'pica!'], LANG[INV['PLOT']] = ['pote', 'sério,\x20use\x20isso', 'com\x20esse\x20GMO\x20fertilize\x20suas\x20plantas', 'vai\x20crescer\x20mais\x20rápido\x20e\x20com\x20menos\x20água', 'durabilidade:\x202000'], LANG[INV['ICE']] = ['gelo', 'útil\x20para\x20fazer\x20bolo\x20e\x20água'], LANG[INV['SPANNER']] = ['chave\x20inglesa', 'para\x20reparar\x20portas,\x20muros\x20e\x20muros\x20com\x20espinho', 'dano:\x202'], LANG[INV['FUR_WOLF']] = ['pele\x20de\x20lobo', 'cachorro?\x20mas\x20onde\x20está\x20o\x20cachorro?!'], LANG[INV['FUR']] = ['pele\x20de\x20coelho', 'o\x20coelho\x20era\x20tão\x20fofo...'], LANG[INV['SPECIAL_FUR']] = ['pele\x20pura', 'você\x20é\x20uma\x20fábrica\x20de\x20pão'], LANG[INV['SPECIAL_FUR_2']] = ['pele\x20negra', 'você\x20está\x20pronto\x20para\x20fazer\x20algo\x20errado'], LANG[INV['FUR_WINTER']] = ['pele\x20de\x20inverno', 'ele\x20só\x20queria\x20um\x20abraço'], LANG[INV['SCALES']] = ['escala', 'é\x20pequeno\x20como\x20peixe!'], LANG[INV['KRAKEN_SKIN']] = ['pele\x20do\x20kraken', 'você\x20não\x20está\x20com\x20medo?'], LANG[INV['FIRE']] = ['fogueira', 'esquenta\x20você!', 'durabilidade:\x20150', 'tempo\x20de\x20vida:\x202min'], LANG[INV['BIG_FIRE']] = ['fogueira\x20grande', 'te\x20esquenta\x20por\x20mais\x20tempo!', 'durabilidade:\x20400', 'tempo\x20de\x20vida:\x206min'], LANG[INV['WORKBENCH']] = ['mesa\x20de\x20trabalho', 'muito\x20útil\x20para\x20fazer\x20todos\x20os\x20objetos'], LANG[INV['CORD']] = ['linha', 'usada\x20para\x20fazer\x20chapéus\x20e\x20mochila'], LANG[INV['BLUE_CORD']] = ['linha\x20de\x20diamante', 'usada\x20para\x20fazer\x20chapéus\x20especiais'], LANG[INV['CHEST']] = ['baú', 'permite\x20que\x20você\x20guarde\x20itens', 'durabilidade:\x20500'], LANG[INV['SWORD_WOOD']] = ['espada\x20de\x20madeira', 'isso\x20funciona?', 'dano:\x2012', 'dano\x20em\x20construções:\x204'], LANG[INV['SWORD']] = ['espada\x20de\x20pedra', 'seja\x20legal\x20com\x20outros', 'dano:\x2019', 'dano\x20em\x20construções:\x206'], LANG[INV['SWORD_GOLD']] = ['espada\x20de\x20ouro', 'rei\x20da\x20floresta', 'dano:\x2022', 'dano\x20em\x20construções:\x207'], LANG[INV['SWORD_DIAMOND']] = ['espada\x20de\x20diamante', 'você\x20pode\x20sentir\x20o\x20poder', 'dano:\x2024', 'dano\x20em\x20construções:\x208'], LANG[INV['PIRATE_SWORD']] = ['espada\x20de\x20pirata', 'AYYYYY!', 'alcança\x20mais\x20distância\x20que\x20a\x20espada\x20normal', 'dano:\x2024', 'dano\x20em\x20construções:\x208'], LANG[INV['SWORD_AMETHYST']] = ['espada\x20de\x20ametista', 'mauve\x20é\x20a\x20cor\x20mais\x20bonita\x20do\x20mundo', 'dano:\x2027', 'dano\x20em\x20construções:\x209'], LANG[INV['DRAGON_SWORD']] = ['espada\x20do\x20dragão', 'sem\x20piedade!', 'dano:\x2030', 'dano\x20em\x20construções:\x2010'], LANG[INV['DRAGON_SPEAR']] = ['lança\x20do\x20dragão', 'mate\x20todos\x20eles!', 'dano:\x2022', 'dano\x20em\x20construções:\x206'], LANG[INV['PICK_WOOD']] = ['picareta\x20de\x20madeira', 'pode\x20coletar\x20apenas\x20madeira\x20e\x20pedra', 'dano:\x201'], LANG[INV['PICK_STONE']] = ['picareta\x20de\x20pedra', 'pode\x20coletar\x20madeira,\x20pedra\x20e\x20ouro', 'dano:\x202'], LANG[INV['PICK_GOLD']] = ['picareta\x20de\x20ouro', 'pode\x20coletar\x20diamante', 'dano:\x203', 'dano\x20em\x20construções:\x201'], LANG[INV['PICK_DIAMOND']] = ['picareta\x20de\x20diamante', 'pode\x20coletar\x20tudo', 'dano:\x204', 'dano\x20em\x20construções:\x201'], LANG[INV['PICK_AMETHYST']] = ['picareta\x20de\x20ametista', 'pode\x20coletar\x20tudo,\x20parece\x20fantastico!', 'dano:\x205', 'dano\x20em\x20construções:\x201'], LANG[INV['HAMMER']] = ['martelo\x20de\x20pedra', 'útil\x20para\x20destruir\x20construções', 'não\x20funciona\x20bem\x20no\x20diamante\x20e\x20na\x20ametista', 'dano:\x202', 'dano\x20em\x20construções:\x2020'], LANG[INV['HAMMER_GOLD']] = ['martelo\x20de\x20ouro', 'útil\x20para\x20destruir\x20construções', 'não\x20funciona\x20bem\x20na\x20ametista', 'dano:\x203', 'dano\x20em\x20construções:\x2030'], LANG[INV['HAMMER_DIAMOND']] = ['martelo\x20de\x20diamante', 'útil\x20para\x20destruir\x20construções', 'dano:\x204', 'dano\x20em\x20construções:\x2040'], LANG[INV['HAMMER_AMETHYST']] = ['martelo\x20de\x20ametista', 'útil\x20para\x20destruir\x20construções', 'dano:\x205', 'dano\x20em\x20construções:\x2050'], LANG[INV['SUPER_HAMMER']] = ['super\x20martelo', 'você\x20planeja\x20destruir\x20o\x20mundo?', 'dano:\x2012', 'dano\x20em\x20construções:\x2070'], LANG[INV['WOOD_SPEAR']] = ['lança\x20de\x20madeira', 'parece\x20um\x20graveto\x20de\x20madeira\x20mas\x20pica.', 'dano:\x2010', 'dano\x20em\x20construções:\x202'], LANG[INV['SPEAR']] = ['lança\x20de\x20pedra', 'o\x20começo\x20da\x20evolução!', 'dano:\x2014', 'dano\x20em\x20construções:\x204'], LANG[INV['GOLD_SPEAR']] = ['lança\x20de\x20ouro', 'cuidado,\x20pica!', 'dano:\x2015', 'dano\x20em\x20construções:\x205'], LANG[INV['DIAMOND_SPEAR']] = ['lança\x20de\x20diamante', 'você\x20está\x20pronto\x20para\x20matar\x20um\x20dragão', 'Dano:\x2017', 'dano\x20em\x20construções:\x205'], LANG[INV['AMETHYST_SPEAR']] = ['lança\x20de\x20ametista', 'dragões\x20não\x20te\x20amedrontam', 'Dano:\x2018', 'dano\x20em\x20construções:\x206'], LANG[INV['SHOVEL']] = ['pá\x20de\x20pedral', 'cave\x20o\x20chão\x20para\x20pegar\x20terra,\x20areia\x20e\x20gelo', 'você\x20também\x20pode\x20pegar\x20minerais', 'dano:\x202'], LANG[INV['SHOVEL_GOLD']] = ['pá\x20de\x20ouro', 'cave\x20o\x20chão\x20para\x20pegar\x20terra,\x20areia\x20e\x20gelo', 'você\x20também\x20pode\x20pegar\x20minerais', 'dano:\x203', 'dano\x20em\x20construções:\x201'], LANG[INV['SHOVEL_DIAMOND']] = ['pá\x20de\x20diamante', 'cave\x20o\x20chão\x20para\x20pegar\x20terra,\x20areia\x20e\x20gelo', 'você\x20também\x20pode\x20pegar\x20minerais', 'dano:\x204', 'dano\x20em\x20construções:\x201'], LANG[INV['SHOVEL_AMETHYST']] = ['pá\x20de\x20ametista', 'cave\x20o\x20chão\x20para\x20pegar\x20terra,\x20areia\x20e\x20gelo', 'você\x20também\x20pode\x20pegar\x20minerais', 'dano:\x205', 'dano\x20em\x20construções:\x201'], LANG[INV['WOOD_HELMET']] = ['capacete\x20de\x20madeira', 'melhor\x20que\x20nada', 'defesa\x20de\x20jogadores:\x201', 'defesa\x20de\x20animais:\x204'], LANG[INV['STONE_HELMET']] = ['capacete\x20de\x20pedra', 'você\x20está\x20pronto\x20para\x20a\x20batalha!', 'defesa\x20de\x20jogadores:\x202', 'Animals\x20Defense:\x208'], LANG[INV['GOLD_HELMET']] = ['capacete\x20de\x20ouro', 'AKA\x20o\x20capacete\x20dos\x20selvagens', 'defesa\x20de\x20jogadores:\x204', 'defesa\x20de\x20animais:\x2013'], LANG[INV['DIAMOND_HELMET']] = ['capacete\x20de\x20diamante', 'não\x20se\x20precipite\x20tanto', 'defesa\x20de\x20jogadores:\x205', 'defesa\x20de\x20animais:\x2019'], LANG[INV['AMETHYST_HELMET']] = ['capacete\x20de\x20ametista', 'você\x20não\x20tem\x20medo\x20de\x20mais\x20nada', 'defesa\x20de\x20jogadores:\x206', 'defesa\x20de\x20animais:\x2023'], LANG[INV['DRAGON_HELMET']] = ['capacete\x20do\x20dragão', 'você\x20vai\x20conquistar\x20o\x20mundo', 'defesa\x20de\x20jogadores:\x208', 'defesa\x20de\x20animais:\x2027'], LANG[INV['EXPLORER_HAT']] = ['chapéu\x20de\x20explorador', 'animais\x20não\x20vão\x20te\x20atacar', 'mas\x20não\x20faça\x20barulho!', 'quente\x20fora\x20da\x20água'], LANG[INV['CHRISTMAS_HAT']] = ['gorro\x20de\x20natal', 'Oh,\x20oh,\x20oh,\x20feliz\x20natal', 'quente\x20fora\x20da\x20água\x20e\x20neve'], LANG[INV['ELF_HAT']] = ['chapéu\x20de\x20elfo', 'não\x20deixe-se\x20ser\x20explorado,\x20seu\x20pequeno\x20elfo\x20de\x20neve!', 'quente\x20fora\x20da\x20água\x20e\x20neve'], LANG[INV['HOOD']] = ['capuz', 'você\x20é\x20um\x20trapaceiro', 'você\x20pode\x20roubar\x20alguém\x20apenas\x20se', '1)\x20é\x20de\x20noite', '2)você\x20não\x20está\x20segurando\x20nada', '3)\x20se\x20você\x20n\x20foi\x20tocado\x20por\x205\x20segundos', '4)\x20você\x20não\x20está\x20perto\x20de\x20uma\x20fogueira', '5)\x20seu\x20alvo\x20não\x20está\x20com\x20equipamento\x20camponês', 'quente\x20fora\x20da\x20água\x20e\x20na\x20neve'], LANG[INV['EARMUFFS']] = ['protetor\x20de\x20orelhas', 'algum\x20tipo\x20de\x20chapka\x20pequena.', 'quente\x20fora\x20da\x20água\x20e\x20neve'], LANG[INV['COAT']] = ['Chapka', 'também\x20chamado\x20de\x20casaco.', 'esquenta\x20fora\x20da\x20água\x20e\x20na\x20neve', 'muito\x20quente'], LANG[INV['CAP_SCARF']] = ['Chapéu\x20de\x20inverno', 'Muito\x20confortável', 'Muito\x20quente'], LANG[INV['PEASANT']] = ['túnica', 'suas\x20plantas\x20crescem\x20rápido', 'quente\x20fora\x20da\x20água\x20e\x20na\x20neve'], LANG[INV['WINTER_HOOD']] = ['capuz\x20de\x20inferno', 'você\x20só\x20pode\x20roubar\x20alguém\x20se', 'é\x20de\x20noite', '-você\x20não\x20está\x20segurando\x20nada', '-\x20se\x20você\x20não\x20foi\x20tocado\x20por\x204\x20segundos', '-\x20você\x20não\x20está\x20perto\x20de\x20uma\x20fogueira', '-seu\x20alvo\x20não\x20está\x20com\x20equipamento\x20de\x20camponês\x20de\x20inverno', 'esquenta\x20fora\x20da\x20água\x20e\x20na\x20neve'], LANG[INV['WINTER_PEASANT']] = ['camponês\x20de\x20inverno', 'suas\x20plantas\x20crescem\x20rápido', 'quente\x20fora\x20da\x20água\x20e\x20na\x20neve'], LANG[INV['DIVING_MASK']] = ['máscara\x20de\x20mergulho', 'você\x20é\x20rápido\x20na\x20água', 'quente\x20na\x20água', 'defesa\x20de\x20jogadores:\x202,\x20defesa\x20de\x20animais:\x208'], LANG[INV['SUPER_DIVING_SUIT']] = ['super\x20máscara\x20de\x20mergulho', 'você\x20é\x20muito\x20rápido\x20na\x20água', 'quente\x20na\x20água', 'defesa\x20de\x20jogadores:\x204,\x20defesa\x20de\x20animais:\x2016'], LANG[INV['DRAGON_ORB']] = ['esfera\x20do\x20dragão', 'dado\x20na\x20questt'], LANG[INV['DRAGON_HEART']] = ['coração\x20de\x20dragão', 'torna\x20você\x20num\x20fantasmas\x20na\x20morte!', 'você\x20é\x20um\x20fantasma\x20por\x2060\x20segundos', 'ache\x20uma\x20pedra\x20da\x20ressurreição'], LANG[INV['GEMME_GREEN']] = ['pedra\x20verde', 'você\x20não\x20vai\x20trapacear,\x20promete?'], LANG[INV['GEMME_ORANGE']] = ['pedra\x20laranja', 'apenas\x20um\x20pirata\x20de\x20verdade\x20pode\x20achar-lo!'], LANG[INV['GEMME_BLUE']] = ['pedra\x20azul', 'para\x20pessoas\x20muito\x20gentis'], LANG[INV['CROWN_GREEN']] = ['coroa\x20verde', 'você\x20se\x20regenera\x20muito\x20rápido', 'regenera\x20ao\x20longo\x20do\x20tempo:\x2040', 'defesa\x20de\x20jogadores:\x204,\x20defesa\x20de\x20animais:\x2016'], LANG[INV['CROWN_ORANGE']] = ['coroa\x20laranja', 'de\x20repente\x20você\x20se\x20sente\x20muito\x20sortudo', 'defesa\x20de\x20jogadores:\x204,\x20defesa\x20de\x20animais:\x2016'], LANG[INV['CROWN_BLUE']] = ['coroa\x20azul', 'quando\x20você\x20morrer,\x20você\x20vira\x20um\x20fantasma', 'você\x20perderá\x20sua\x20arma', 'defesa\x20de\x20jogadores:\x204,\x20defesa\x20de\x20animais:\x2016'], LANG[INV['BUCKET_FULL']] = ['balde', 'útil\x20para\x20encher\x20um\x20poço', 'um\x20balde\x20equivale\x20a\x20doze\x20garrafas'], LANG[INV['BUCKET_EMPTY']] = ['balde\x20vazio', 'você\x20precisa\x20encher\x20esse\x20balde\x20perto\x20de\x20uma\x20fonte\x20de\x20água'], LANG[INV['BOTTLE_FULL']] = ['garrafa', 'permite\x20que\x20você\x20beba\x20água\x20em\x20qualquer\x20lugar', 'água:\x2050'], LANG[INV['BOTTLE_EMPTY']] = ['garrafa\x20vazia', 'você\x20pode\x20encher\x20essa\x20garrafa\x20perto\x20de\x20uma\x20fonte\x20de\x20água'], LANG[INV['WATERING_CAN']] = ['regador\x20vazio', 'você\x20deve\x20enche-lo\x20com\x20uma\x20fonte\x20de\x20água\x20para\x20usa-lo'], LANG[INV['WATERING_CAN_FULL']] = ['regador', 'permite\x20regar\x20as\x20plantas', 'dano:\x201'], LANG[INV['BAG']] = ['mochila', 'mais\x20espaço\x20para\x20seus\x20itens!'], LANG[INV['PAPER']] = ['papel', 'usado\x20para\x20fazer\x20o\x20livro'], LANG[INV['BOOK']] = ['livro', 'permite\x20reduzir\x20consideradamente\x20o\x20tempo\x20de\x20construções', 'mas\x20precisa\x20está\x20equipado\x20para\x20fucionar', 'dano:\x201'], LANG[INV['BANDAGE']] = ['bandagem', 'recupera\x20sua\x20vida\x20mais\x20rapidamente', 'Heal\x20over\x20time:\x2030', 'Effect:\x205'], LANG[INV['LOCK']] = ['fechadura', 'permite\x20você\x20trancar\x20seu\x20baú'], LANG[INV['LOCKPICK']] = ['chave', 'permite\x20destrancar\x20um\x20baú'], LANG[INV['TOTEM']] = ['Totem', 'permite\x20você\x20criar\x20um\x20time', 'compartilha\x20portas\x20e\x20baús', 'edifício\x20prejudicial\x20não\x20quer\x20machucar\x20seu\x20amigo'], LANG[INV['BRIDGE']] = ['ponte', 'muito\x20útil\x20na\x20água', 'permite\x20você\x20beber\x20sem\x20se\x20afogar', 'anda\x20rápido\x20na\x20água'], LANG[INV['SIGN']] = ['placa', 'deixe\x20uma\x20mensagem\x20para\x20outros', 'durabilidade:\x20200'], LANG[INV['ROOF']] = ['telhado', 'esconde\x20você\x20um\x20pouco\x20e\x20te\x20esquenta!'], LANG[INV['WELL']] = ['poço', 'permite\x20encher\x20garrafas', 'durabilidade:\x201000'], LANG[INV['WALL']] = ['muro\x20de\x20madeira', 'você\x20sabia\x20que\x20o\x20muro\x20dança?', 'durabilidade:\x201000'], LANG[INV['STONE_WALL']] = ['muro\x20de\x20pedra', 'é\x20um\x20pocu\x20mais\x20sério.', 'durabilidade:\x201500'], LANG[INV['GOLD_WALL']] = ['muro\x20de\x20ouro', 'ouro\x20nos\x20seus\x20muros?\x20é\x20muito\x20chamativo.', 'durabilidade:\x202000'], LANG[INV['DIAMOND_WALL']] = ['muro\x20de\x20diamante', 'tão\x20brilhoso,\x20veja\x20seus\x20olhos', 'durabilidade:\x202500'], LANG[INV['AMETHYST_WALL']] = ['muro\x20de\x20ametista', 'você\x20está\x20muito\x20assustado\x20de\x20sair!', 'durabilidade:\x203000'], LANG[INV['SPIKE']] = ['espiga\x20de\x20madeira', 'pode\x20dar\x20dano\x20nos\x20seus\x20inimigos', 'dano:\x2010,\x20dano\x20no\x20acerto:\x202', 'durabilidade:\x20150'], LANG[INV['STONE_SPIKE']] = ['espiga\x20de\x20pedra', 'eu\x20não\x20quero\x20ser\x20seu\x20inimigo.', 'dano:\x2020', 'dano\x20no\x20acerto:\x203', 'durabilidade:\x20300'], LANG[INV['GOLD_SPIKE']] = ['espiga\x20de\x20ouro', 'você\x20é\x20tão\x20cruel.', 'dano:\x2030', 'dano\x20no\x20acerto:\x203', 'durabilidade:\x20600'], LANG[INV['DIAMOND_SPIKE']] = ['espiga\x20de\x20diamante', 'você\x20não\x20gosta\x20de\x20ter\x20companhia.', 'dano:\x2040', 'dano\x20no\x20acerto:\x204', 'durabilidade:\x201200'], LANG[INV['AMETHYST_SPIKE']] = ['espiga\x20de\x20ametista', 'o\x20que\x20diabos\x20seu\x20vizinhos\x20fizeram\x20para\x20você?', 'dano:\x2050', 'dano\x20no\x20acerto:\x204', 'durabilidade:\x202400'], LANG[INV['WOOD_DOOR']] = ['porta\x20de\x20madeira', 'pode\x20ser\x20aberta\x20ou\x20fechada\x20por\x20você\x20ou\x20seus\x20amigos', 'durabilidade:\x201000'], LANG[INV['STONE_DOOR']] = ['porta\x20de\x20pedra', 'uma\x20porta\x20mais\x20forte\x20é\x20mais\x20sério', 'durabilidade:\x201500'], LANG[INV['GOLD_DOOR']] = ['porta\x20de\x20ouro', 'você\x20está\x20re-construindo\x20o\x20el\x20dorado?', 'durabilidade:\x202000'], LANG[INV['DIAMOND_DOOR']] = ['porta\x20de\x20diamante', 'para\x20uma\x20casa\x20brilhante', 'durabilidade:\x202500'], LANG[INV['AMETHYST_DOOR']] = ['porta\x20de\x20ametista', 'é\x20a\x20sua\x20casa\x20um\x20lugar\x20trancado\x20seguro?', 'durabilidade:\x203500'], LANG[INV['FURNACE']] = ['fornalha', 'esquenta\x20você', 'consumi\x20madeira\x20em\x20todo\x205\x20segundos', 'durabilidade:\x201000'], LANG[INV['WINDMILL']] = ['moinho\x20de\x20vento', 'pode\x20produzir\x20farinha\x20do\x20trigo', 'demora\x205\x20segundos\x20para\x20fazer\x20farinha', 'dá\x20pontos\x20ao\x20trabalhar', 'durabilidade:\x202000'], LANG[INV['BREAD_OVEN']] = ['forno\x20de\x20pão', 'permite\x20fazer\x20pão\x20feito\x20de\x20farinha', 'demora\x2010\x20segundos\x20para\x20fazer\x20pão', 'dá\x20pontos\x20ao\x20trabalhar', 'durabilidade:\x202000'], LANG[INV['RESURRECTION']] = ['pedra\x20da\x20ressurreição', 'é\x20mágico', 'te\x20ressuscita\x20se\x20você\x20for\x20um\x20fantasmas', 'você\x20vai\x20perder\x20sua\x20arma', 'durabilidade\x20200:\x20200'], LANG[TEXT['YOU_CANNOT_JOIN']] = 'você\x20não\x20pode\x20entrar\x20no\x20servidor', LANG[TEXT['KICKED']] = 'kickado:\x20', LANG[TEXT['KEY_ALREADY']] = 'sua\x20chave\x20está\x20em\x20uso\x20por\x20outra\x20pessoa', LANG[TEXT['KEY_WRONG']] = 'sua\x20chave\x20está\x20errada', LANG[TEXT['OLD_VERSION']] = 'você\x20tem\x20uma\x20versão\x20velha,\x20limpe\x20seu\x20cache', LANG[TEXT['NO_MORE_RESOURCES']] = 'não\x20tem\x20mais\x20recursos', LANG[TEXT['SURVIVED_1DAY']] = 'você\x20sobreviveu\x201\x20dia', LANG[TEXT['SURVIVED']] = 'você\x20sobreviveu\x20', LANG[TEXT['DAYS']] = '\x20dias', LANG[TEXT['DEAD_SAD']] = 'você\x20está\x20morto\x20;-;', LANG[TEXT['SPAM_ME']] = 'servidor\x20não\x20pôde\x20achar\x20um\x20local\x20de\x20spawn!\x20spam\x20o\x20botão\x20de\x20play!', LANG[TEXT['SPAM_ME2']] = 'servidor\x20está\x20cheio!\x20spam\x20o\x20botão\x20de\x20play!', LANG[TEXT['EMPTY']] = 'não\x20tem\x20recursos', LANG[TEXT['INV_FULL']] = 'inventário\x20está\x20cheio\x20(botão\x20direito\x20para\x20deletar\x20itens)', LANG[TEXT['DEAD']] = '\x20está\x20morto', LANG[TEXT['WRONG_TOOL']] = 'essa\x20não\x20é\x20a\x20ferramenta\x20certa', LANG[TEXT['JOIN_TEAM']] = 'você\x20entrou\x20no\x20time', LANG[TEXT['YOU_DEAD']] = 'você\x20está\x20morto', LANG[TEXT['JOINED_TEAM']] = 'entrou\x20no\x20time', LANG[TEXT['TEAM_DESTROYED']] = 'seu\x20time\x20foi\x20destruido', LANG[TEXT['LEFT_TEAM']] = 'você\x20saiu\x20do\x20time', LANG[TEXT['LEFT_TEAM2']] = '\x20saiu\x20do\x20time', LANG[TEXT['TOKEN']] = 'alguém\x20roubou\x20sua\x20ficha\x20:>', LANG[TEXT['CHOOSE']] = 'escolha\x20um\x20servidor', LANG[TEXT['PLAYERS']] = 'jogadores', LANG[TEXT['TOTAL_PLAYERS']] = 'jogadores\x20totais', LANG[TEXT['TOTAL_MODE']] = 'jogadores\x20nesse\x20modo', LANG[TEXT['COMMING_SOON']] = 'Coming\x20soon...', document['getElementById']('nickname_input')['placeholder'] = 'Apelido', DIE[0x0] = ['você\x20morreu\x20sem\x20motivo'], DIE[0x1] = ['você\x20morreu\x20de\x20fome,\x20como\x20o\x20jogo\x20diz'], DIE[0x2] = ['você\x20morreu\x20de\x20frio.\x20tão\x20triste', 'você\x20pegou\x20hipotermia\x20na\x20próxima\x20vez,\x20tente\x20sentar\x20numa\x20fogueira\x20em\x20vez\x20disso.'], DIE[0x3] = ['um\x20jogador\x20te\x20matou\x20dizendo\x20a\x20você\x20para\x20matar..\x27', 'você\x20foi\x20morto\x20por\x20um\x20jogador.\x20não\x20se\x20preocupe,\x20aquele\x20jogador\x20morrerá\x20também,\x20eventualmente.'], DIE[0x4] = ['você\x20ficou\x20muito\x20perto\x20de\x20uma\x20fogueira\x20e\x20queimou\x20até\x20a\x20morte.\x20má\x20ideia.', 'você\x20morreu\x20por\x20um\x20incêndio.\x20fogueira\x20te\x20machuca.\x20vá\x20escrever\x20uma\x20história\x20sobre\x20isso.'], DIE[0x5] = ['seu\x20corpo\x20vai\x20virar\x20um\x20ninho\x20para\x20ovos\x20de\x20aranhas', 'uma\x20aranha\x20te\x20matou.\x20pelo\x20menos\x20não\x20era\x20um\x20coelho.'], DIE[0x6] = ['o\x20lobo\x20não\x20vão\x20morrer\x20de\x20fome\x20depois\x20te\x20te\x20comer', 'eles\x20não\x20são\x20cachorros.\x20lobos\x20não\x20gostam\x20de\x20ser\x20que\x20nem\x20animais\x20de\x20estimação.'], DIE[0x7] = ['a\x20raposa\x20era\x20muito\x20rápida\x20para\x20você', 'a\x20raposa\x20te\x20tornou\x20uma\x20caixa.\x20desde\x20quando\x20os\x20animais\x20tem\x20poderes\x20mágicos?'], DIE[0x8] = ['o\x20urso\x20só\x20queria\x20um\x20abraço.', '\x20o\x20urso\x20era\x20muito\x20nu.\x20eu\x20não\x20sinto\x20muito.'], DIE[0x9] = ['você\x20foi\x20queimado\x20por\x20um\x20dragão.\x20tão\x20triste..', 'você\x20foi\x20esmagado\x20por\x20um\x20dragão..\x20ser\x20esmagado\x20é\x20uma\x20maneira\x20horrível\x20de\x20morrer.'], DIE[0xa] = ['você\x20pulou\x20em\x20um\x20muro\x20com\x20espinhos.\x20não\x20é\x20uma\x20boa\x20ideia...', 'você\x20foi\x20morto\x20por\x20um\x20muro\x20com\x20espinhos.\x20muitas\x20pessoas\x20são\x20sensíveis\x20o\x20bastante\x20para\x20não\x20tocar\x20em\x20coisas\x20pontudas.'], DIE[0xb] = ['até\x20fantasmas\x20podem\x20morrer.', 'você\x20falhou\x20para\x20ser\x20ressuscitado.\x20This\x20is\x20a\x20game,\x20so\x20you\x20go\x20to\x20life\x20after\x20you\x20die,\x20so...'], DIE[0xc] = ['uma\x20bactéria\x20da\x20sua\x20comida\x20crua\x20te\x20matou\x20esse\x20jogo\x20é\x20definitivamente\x20muito\x20díficil.', 'você\x20matou\x20a\x20carne\x20crua.\x20a\x20carne\x20crua\x20te\x20matou\x20também.'], DIE[0xd] = ['você\x20morreu\x20de\x20sede.\x20melhor\x20beber\x20sua\x20própria\x20urina.'], DIE[0xe] = ['você\x20sabia\x20que\x20você\x20morre\x20afogado?\x20agora\x20você\x20sabe.'], DIE[0xf] = ['não\x20se\x20preocupe,\x20as\x20piranhas\x20acham\x20você\x20saboroso.', 'fato\x20engraçado:\x20Piranhas\x20comem\x20pessoas.\x20incluindo\x20você.'], DIE[0x10] = ['LapaMauve\x20não\x20planeja\x20você\x20matar\x20o\x20kraken', 'um\x20kraken\x20comeu\x20seu\x20esqueleto.'], DIE[0x11] = ['sua\x20pele\x20caindo\x20aos\x20pedaços,\x20o\x20sol\x20te\x20matou.'], DIE[0x12] = ['o\x20alho\x20amarzenado\x20em\x20seus\x20bolsos\x20ferveu\x20seu\x20cérebro.'], DIE[0x13] = ['como\x20vampiro,\x20não\x20chegue\x20perto\x20do\x20alho.'], DIE[0x14] = ['você\x20comeu\x20alho\x20como\x20vampiro,\x20o\x20que\x20você\x20esperava?'], DIE[0x15] = ['seu\x20corpo\x20se\x20enroscou\x20nos\x20espinhos.\x20quando\x20você\x20tenta\x20escapar,\x20sua\x20pele\x20sai\x20e\x20seu\x20coração\x20para\x20de\x20bater.'], ZOMBIE_GRUMBLE = 'Uuunnnggg', ZOMBIE_GRUMBLES = ['Uuunnnggg...\x20estou\x20morrendo\x20de\x20fome', 'preciso\x20do\x20seu\x20cerébro\x20Uuunnnggg...', 'carne\x20fresca\x20aqui...\x20Uuunnnggg', 'Uuunnnggg...\x20você\x20parece\x20saboroso', 'Uuunnnggg...', 'Eat...\x20uuunnnggg...', 'consigo\x20sentir\x20o\x20cheiro\x20de\x20sangue...\x20Uuunnnggg'];
    },
    set_spanish = function() {
        LANG[INV['DRAGON_CUBE']] = ['You\x20feel\x20a\x20great\x20power\x20emanating\x20from\x20this\x20orb'], DIE[0x16] = ['This\x20crab,\x20though\x20frightening\x20in\x20nature,\x20pinched\x20your\x20fingertips\x20so\x20hard\x20that\x20you\x20had\x20a\x20heart\x20attack.'], LANG[INV['CRAB_STICK']] = ['Crab\x20sticks', 'Oh,\x20yeah?\x20Is\x20there\x20crab\x20in\x20the\x20crab\x20sticks?', 'Food:\x2020'], LANG[TEXT['BACK_TO_THE_GAME']] = '\x20BACK\x20TO\x20THE\x20GAME', LANG[TEXT['TWITTER']] = '\x20Share\x20on\x20Twitter', LANG[TEXT['FACEBOOK']] = '\x20Share\x20on\x20Facebook', LANG[TEXT['KIT_NEXT']] = 'You\x20can\x20buy\x20items\x20on\x20the\x20shop\x20in\x20the\x20next\x20game\x20with\x20your\x20points', LANG[TEXT['POINTS']] = 'points', LANG[TEXT['SCORE']] = 'Score', LANG[TEXT['KILL']] = 'Kill', LANG[TEXT['DAYS_SURVIVED']] = 'Days\x20survived', LANG[TEXT['MODE_FREE']] = 'Building\x20method:\x20Free.\x20Press\x20G\x20to\x20change', LANG[TEXT['MODE_GRID']] = 'Building\x20method:\x20Grid.\x20Press\x20G\x20to\x20change', LANG[INV['CRAB_LOOT']] = ['Crab\x20Claw', 'Crab\x20claws\x20can\x20also\x20be\x20eaten', 'Food:\x2010'], LANG[INV['CRAB_SPEAR']] = ['Crab\x20Spear', 'Allow\x20you\x20to\x20calm\x20crabs,\x20and\x20heal\x20them', 'Damage:\x2014', 'Building\x20Damage:\x204'], LANG[INV['CROWN_CRAB']] = ['Crab\x20Helmet', 'You\x20are\x20the\x20king\x20of\x20crabs!', 'Crabs\x20follow\x20you', 'They\x20can\x27t\x20hit\x20you\x20and\x20you\x20can\x27t\x20hit\x20them', 'Players\x20Defense:\x204', 'Animals\x20Defense:\x2013'], LANG[INV['BED']] = ['Bed', 'Relax\x20in\x20this\x20confortable\x20bed', 'You\x20are\x20less\x20cold,\x20less\x20thirsty,\x20and\x20less\x20hungry', 'You\x20will\x20be\x20cured\x20faster', 'Durability:\x20400'], document['getElementById']('typequest')['innerHTML'] = 'Chrono\x20Quests', document['getElementById']('timeremainingquest')['innerHTML'] = 'Time\x20Remaining', document['getElementById']('constraintquest')['innerHTML'] = '\x20Constraints', document['getElementById']('claim_rewards')['innerHTML'] = '\x20Claim\x20rewards', document['getElementById']('rewardquest')['innerHTML'] = '\x20Reward', document['getElementById']('killdragon_1')['innerHTML'] = '\x20Collect\x201\x20dragon\x20heart', document['getElementById']('amethyst_2')['innerHTML'] = '\x20Gather\x201\x20amethyst', document['getElementById']('survive20min_3')['innerHTML'] = 'Survive\x20without\x20losing\x20life', document['getElementById']('treasure_chest_4')['innerHTML'] = '\x20Open\x205\x20treasure\x20chests', document['getElementById']('dont_hit_5')['innerHTML'] = '\x20Be\x20peaceful', document['getElementById']('bread_6')['innerHTML'] = '\x20Collect\x20100\x20bread\x20in\x20deep\x20winter', document['getElementById']('winter_7')['innerHTML'] = '\x20After\x201\x20day,\x20survive\x20in\x20winter';
        for (var _0x5206d2 = 0x0; _0x5206d2 < 0x7; _0x5206d2++) document['getElementById']('claim_reward_' + _0x5206d2)['innerHTML'] = 'CLAIM\x20REWARD!';
        document['getElementById']('quit_chronoquest')['innerHTML'] = '\x20QUIT', LANG[INV['HAND']] = ['Mano'], LANG[INV['GROUND']] = ['Tierra', '¡Tan\x20limpia\x20como\x20mis\x20manos!'], LANG[INV['SAND']] = ['Arena', '¡Tengo\x20arena\x20en\x20mis\x20ojos!'], LANG[INV['WOOD']] = ['Madera', '¡Nunca\x20hay\x20suficiente!'], LANG[INV['STONE']] = ['Piedra', 'También\x20llamada\x20roca.'], LANG[INV['GOLD']] = ['Oro', 'Sé\x20generoso,\x20compártelo\x20con\x20los\x20otros'], LANG[INV['DIAMOND']] = ['Diamante', '¿Que\x20vas\x20a\x20hacer\x20con\x20él?'], LANG[INV['AMETHYST']] = ['Amatista', 'Es\x20Mauve\x20como\x20Lapa'], LANG[INV['FLOUR']] = ['Harina', 'Usada\x20para\x20cocinar.'], LANG[INV['COOKIE']] = ['Galleta', 'Una\x20galleta\x20de\x20la\x20abuelita', 'Comida:\x2050'], LANG[INV['CAKE']] = ['Tarta', '¡Cumpleaños\x20Feliz!', 'Comida:\x20100'], LANG[INV['MEAT']] = ['Carne\x20Cruda', 'Se\x20cocina\x20con\x20fuego', 'Causa\x20veneno.\x2010', 'Comida:\x2015'], LANG[INV['COOKED_MEAT']] = ['Carne\x20Cocinada', 'es\x20la\x20supervivencia\x20del\x20más\x20fuerte\x20:\x27(', 'Comida:\x2035'], LANG[INV['FOODFISH']] = ['Pescado\x20Crudo', 'Creo\x20que\x20sigue\x20vivo', 'Causa\x20veneno\x20de\x20comida:\x2010', 'Comida:\x2018'], LANG[INV['FOODFISH_COOKED']] = ['Pescado\x20Cocinado', 'Con\x20limón\x20sería\x20perfecto', 'Comida:\x2035'], LANG[INV['BREAD']] = ['Pan', '¡Caliente,\x20desde\x20Francia!', 'Es\x20dinero\x20usado\x20en\x20la\x20tienda', 'Comida:\x2015'], LANG[INV['SANDWICH']] = ['Bocadillo', 'Sabe\x20como\x20un\x20Krabby\x20Patty', 'Comida:\x20100'], LANG[INV['CANDY']] = ['Caramelos', '¡Solo\x20para\x20niños/as!', 'Comida:\x20100'], LANG[INV['SUGAR_CAN']] = ['Caña\x20de\x20Azúcar', 'Pruébala,\x20es\x20deliciosa', 'Comida:\x20100'], LANG[INV['GARLAND']] = ['Guirnalda', 'Perfecta\x20para\x20decorar\x20el\x20techo'], LANG[INV['SEED']] = ['Semillas\x20de\x20Bayas', 'Se\x20convierte\x20en\x20bayas', 'Nacimiento:\x202\x20Minutos', 'Crecimiento:\x2055\x20Segundos', 'Necesita\x20agua:\x203\x20Minutos\x2020\x20Segundos', 'Durabilidad:\x20700', 'Tiempo\x20de\x20vida:\x208\x20Días'], LANG[INV['PLANT']] = ['Baya', 'No\x20es\x20venenosa.', 'Comida:\x2010'], LANG[INV['WHEAT_SEED']] = ['Semilla\x20de\x20Trigo', 'Se\x20convierte\x20en\x20Trigo\x20', 'Nacimiento:\x202\x20Minutos', 'Crecimiento:\x2016\x20Segundos', 'Necesita\x20agua:\x202\x20Minutos', 'Durabilidad:\x20700', 'Tiempo\x20de\x20vida:\x208\x20Días'], LANG[INV['WILD_WHEAT']] = ['Trigo\x20Silvestre', 'Se\x20convierte\x20en\x20harina\x20cuando\x20se\x20coloca\x20en\x20un\x20molino'], LANG[INV['PUMPKIN_SEED']] = ['Semilla\x20de\x20Calabaza', 'Crece\x20a\x20Calabazas', 'Nacimiento:\x202\x20Minutos\x2040\x20Segundos', 'Crecimiento:\x202\x20Minutos', 'Necesita\x20agua:\x202\x20Minutos', 'Durabilidad:\x20700', 'Tiempo\x20de\x20vida:\x208\x20Días'], LANG[INV['PUMPKIN']] = ['Calabaza', 'Me\x20recuerda\x20a\x20Halloween', 'Comida:\x2030'], LANG[INV['GARLIC_SEED']] = ['Semilla\x20de\x20Ajo', 'Muy\x20peligroso\x20para\x20vampiros', 'Daño:\x2020', 'Nacimiento:\x204\x20Minutos', 'Crecimiento:\x201\x20Minutos\x2010\x20Segundos', 'Necesita\x20Agua:\x201\x20Minutos\x2040\x20Segundos', 'Durabilidad:\x20700', 'Tiempo\x20de\x20Vida:\x208\x20Días'], LANG[INV['GARLIC']] = ['Ajo', 'Te\x20sana\x20y\x20reduce\x20el\x20frio', 'Comida:\x2014', 'sanación\x20con\x20eliempo:\x2030', 'Efecto:\x201'], LANG[INV['THORNBUSH_SEED']] = ['Semilla\x20de\x20Planta\x20de\x20Espinas', 'Puede\x20dañar\x20a\x20tus\x20enemigos', 'Daño\x20por\x20contacto:\x2020', 'Nacimiento:\x204\x20Minutos', 'Crecimiento:\x2015\x20Segundos', 'Necesita\x20Agua:\x203\x20Minutos', 'Durabilidad:\x201000', 'Tiempo\x20de\x20Vida:\x208\x20Días'], LANG[INV['THORNBUSH']] = ['Planta\x20de\x20Espinas', '¡Te\x20daña!'], LANG[INV['PLOT']] = ['Parcela', 'En\x20serio,\x20úsala', 'Se\x20usa\x20para\x20plantar\x20plantas\x20en\x20invierno\x20o\x20sobre\x20puentes', 'Tus\x20plantas\x20crecerán\x20muy\x20rápido\x20y\x20necesitarán\x20menos\x20agua', 'Durabilidad:\x202000'], LANG[INV['ICE']] = ['Hielo', 'Bueno\x20para\x20hacer\x20tartas\x20y\x20agua'], LANG[INV['SPANNER']] = ['Llave\x20de\x20Reparación', 'Puede\x20reparar\x20paredes,\x20puertas\x20y\x20pinchos', 'Daño:\x202'], LANG[INV['FUR_WOLF']] = ['Pelaje\x20de\x20Lobo', '¿Perrito?\x20¡¿Donde\x20esta\x20el\x20perrito?!'], LANG[INV['FUR']] = ['Pelaje\x20de\x20Conejo', 'El\x20Conejo\x20era\x20muy\x20lindo...'], LANG[INV['SPECIAL_FUR']] = ['Pelaje\x20Puro', '¡Eres\x20una\x20maquina\x20de\x20pan!'], LANG[INV['SPECIAL_FUR_2']] = ['Pelaje\x20Oscuro', '¿Estás\x20listo\x20para\x20hacer\x20algo\x20malo?'], LANG[INV['FUR_WINTER']] = ['Pelaje\x20de\x20Invierno', 'Esos\x20animales\x20solo\x20querían\x20un\x20abrazo...'], LANG[INV['SCALES']] = ['Escamas', '¡Huele\x20a\x20pescado!'], LANG[INV['KRAKEN_SKIN']] = ['Piel\x20del\x20Kraken', '¡¿No\x20tienes\x20mucho\x20miedo?!'], LANG[INV['FIRE']] = ['Fogata', '¡Te\x20calienta!', 'Durabilidad:\x20150', 'Tiempo\x20de\x20vida:\x202\x20Minutos'], LANG[INV['BIG_FIRE']] = ['Fogata\x20Grande', '¡Te\x20calienta\x20por\x20más\x20tiempo!', 'Durabilidad:\x20400', 'Tiempo\x20de\x20Vida:\x206\x20Minutos'], LANG[INV['WORKBENCH']] = ['Mesa\x20de\x20Trabajo', '¡Te\x20sirve\x20mucho\x20para\x20crear\x20cosas\x20de\x20todos\x20tipos!'], LANG[INV['CORD']] = ['Hilo', 'Usado\x20para\x20craftear\x20ropa\x20y\x20mochila'], LANG[INV['BLUE_CORD']] = ['Hilo\x20de\x20Diamante', 'Usado\x20para\x20craftear\x20ropa\x20especial'], LANG[INV['CHEST']] = ['Cofre', 'Te\x20permite\x20guardar\x20cosas,\x20o\x20compartirlas', 'Durabilidad:\x20500'], LANG[INV['SWORD_WOOD']] = ['Espada\x20de\x20Madera', '¿Eso\x20funciona?', 'Daño:\x2012', 'Daño\x20para\x20estructuras:\x204'], LANG[INV['SWORD']] = ['Espada\x20de\x20Piedra', 'Sé\x20bueno\x20con\x20los\x20otros', 'Daño:\x2019', 'Daño\x20para\x20estructuras:\x206'], LANG[INV['SWORD_GOLD']] = ['Espada\x20de\x20Oro', '¡Rey\x20de\x20la\x20selva!', 'Daño:\x2022', 'Daño\x20para\x20estructuras:\x207'], LANG[INV['SWORD_DIAMOND']] = ['Espada\x20de\x20Diamante', 'Puedes\x20sentir\x20el\x20poder', 'Daño:\x2024', 'Daño\x20para\x20estructuras:\x208'], LANG[INV['PIRATE_SWORD']] = ['Espada\x20de\x20Pirata', 'Arrrrr!', '¡Mejor\x20distancia\x20que\x20una\x20espada\x20normal', 'Daño:\x2024', 'Daño\x20para\x20estructuras:\x208'], LANG[INV['SWORD_AMETHYST']] = ['Espada\x20de\x20Amatista', 'Mauve\x20es\x20el\x20mejor\x20color\x20del\x20mundo\x20:3', 'Daño:\x2027', 'Daño\x20para\x20estructuras:\x209'], LANG[INV['DRAGON_SWORD']] = ['Espada\x20del\x20Dragón', '¡Tienes\x20el\x20poder\x20de\x20un\x20Dragón!', 'Daño:\x2030', 'Daño\x20para\x20estructuras:\x2010'], LANG[INV['DRAGON_SPEAR']] = ['Lanza\x20del\x20Dragón', '¡Mátalos\x20a\x20todos!', 'Daño:\x2022', 'Daño\x20para\x20estructuras:\x206'], LANG[INV['PICK_WOOD']] = ['Pico\x20de\x20Madera', 'Solo\x20puede\x20minar\x20madera\x20y\x20piedra', 'Daño:\x201'], LANG[INV['PICK']] = ['Pico\x20de\x20Piedra', 'Puede\x20minar\x20hasta\x20oro', 'Daño:\x202'], LANG[INV['PICK_GOLD']] = ['Pico\x20de\x20Oro', 'Puede\x20minar\x20hasta\x20Diamante', 'Daño:\x203', 'Daño\x20para\x20estructuras:\x201'], LANG[INV['PICK_DIAMOND']] = ['Pico\x20de\x20Diamante', '¡Puede\x20minarlo\x20todo!', 'Daño:\x204', 'Daño\x20para\x20estructuras:\x201'], LANG[INV['PICK_AMETHYST']] = ['Pico\x20de\x20Amatista', '¡Puede\x20minarlo\x20todo,\x20parece\x20fantastico!', 'Daño:\x205', 'Daño\x20para\x20estructuras:\x201'], LANG[INV['HAMMER']] = ['Martillo\x20de\x20Piedra', 'Bueno\x20para\x20destruir\x20estructuras', 'No\x20funciona\x20bien\x20con\x20diamante\x20y\x20amatista', 'Daño:\x202', 'Daño\x20para\x20estructuras:\x2020'], LANG[INV['HAMMER_GOLD']] = ['Martillo\x20de\x20Oro', 'Bueno\x20para\x20destruir\x20estructuras', 'No\x20funciona\x20bien\x20con\x20amatista\x20', 'Daño:\x203', 'Daño\x20para\x20estructuras:\x2030'], LANG[INV['HAMMER_DIAMOND']] = ['Martillo\x20de\x20Diamante', 'Bueno\x20para\x20destruir\x20estructuras', 'Daño:\x204', 'Daño\x20para\x20estructuras:\x2040'], LANG[INV['HAMMER_AMETHYST']] = ['Martillo\x20de\x20Amatista', 'Bueno\x20para\x20destruir\x20estructuras', 'Daño:\x205', 'Daño\x20para\x20estructuras:\x2050'], LANG[INV['SUPER_HAMMER']] = ['Super\x20Martillo', '¿Has\x20planeado\x20destruir\x20el\x20mundo?', 'Daño:\x2012', 'Daño\x20para\x20estructuras:\x2070'], LANG[INV['WOOD_SPEAR']] = ['Lanza\x20de\x20Madera', 'Como\x20un\x20palo\x20de\x20madera,\x20pero\x20mata.', 'Daño:\x2010', 'Daño\x20para\x20estructuras:\x202'], LANG[INV['SPEAR']] = ['Lanza\x20de\x20Piedra', '¡El\x20comienzo\x20de\x20la\x20evolución!', 'Daño:\x2014', 'Daño\x20para\x20estructuras:\x204'], LANG[INV['GOLD_SPEAR']] = ['Lanza\x20de\x20Oro', '¡Cuidado,\x20te\x20hace\x20mucho\x20daño!', 'Daño:\x2015', 'Daño\x20para\x20estructuras:\x205'], LANG[INV['DIAMOND_SPEAR']] = ['Lanza\x20de\x20Diamante', '¡Estas\x20preparado\x20para\x20matar\x20al\x20Dragon!', 'Daño:\x2017', 'Daño\x20para\x20estructuras:\x205'], LANG[INV['AMETHYST_SPEAR']] = ['Lanza\x20de\x20Amatista', 'Los\x20dragones\x20te\x20tienen\x20miedo', 'Daño:\x2018', 'Daño\x20para\x20estructuras:\x206'], LANG[INV['SHOVEL']] = ['Pala\x20de\x20Piedra', 'Cava\x20para\x20conseguir\x20tierra,\x20arena\x20y\x20hielo', 'También\x20puedes\x20conseguir\x20minerales', 'Daño:\x202'], LANG[INV['SHOVEL_GOLD']] = ['Pala\x20de\x20Oro', 'Cava\x20para\x20conseguir\x20tierra,\x20arena\x20y\x20hielo', 'También\x20puedes\x20conseguir\x20minerales', 'Daño:\x203', 'Daño\x20para\x20estructuras:\x201'], LANG[INV['SHOVEL_DIAMOND']] = ['Pala\x20de\x20Diamante', 'Cava\x20para\x20conseguir\x20tierra,\x20arena\x20y\x20hielo', 'También\x20puedes\x20conseguir\x20minerales', 'Daño:\x204', 'Daño\x20para\x20estructuras:\x201'], LANG[INV['SHOVEL_AMETHYST']] = ['Pala\x20de\x20Amatista', 'Cava\x20para\x20conseguir\x20tierra,\x20arena\x20y\x20hielo', 'También\x20puedes\x20conseguir\x20minerales', 'Daño:\x205', 'Daño\x20para\x20estructuras:\x201'], LANG[INV['WOOD_HELMET']] = ['Casco\x20de\x20Madera', '¡Mejor\x20que\x20nada!', 'Protección\x20contra\x20jugadores:\x201', 'Protección\x20contra\x20animales:\x204'], LANG[INV['STONE_HELMET']] = ['Casco\x20de\x20Piedra', '¡Estas\x20listo\x20para\x20la\x20batalla!', 'Protección\x20contra\x20jugadores:\x202', 'Protección\x20contra\x20animales:\x208'], LANG[INV['GOLD_HELMET']] = ['Casco\x20de\x20Oro', 'AKA\x20el\x20casco\x20de\x20los\x20salvajes', 'Protección\x20contra\x20jugadores:\x204', 'Protección\x20contra\x20animales:\x2013'], LANG[INV['DIAMOND_HELMET']] = ['Casco\x20de\x20Diamante', 'No\x20ataques\x20tanto', 'Protección\x20de\x20jugadores:\x205', 'Protección\x20contra\x20animales:\x2019'], LANG[INV['AMETHYST_HELMET']] = ['Casco\x20de\x20Amatista', '¡No\x20tienes\x20miedo\x20de\x20nada!', 'Protección\x20contra\x20jugadores:\x206', 'Protección\x20contra\x20animales:\x2023'], LANG[INV['DRAGON_HELMET']] = ['Casco\x20del\x20Dragón', '¡Vas\x20a\x20dominar\x20el\x20mundo!', 'Protección\x20contra\x20jugadores:\x208', 'Protección\x20contra\x20animales:\x2027'], LANG[INV['EXPLORER_HAT']] = ['Gorro\x20del\x20Explorador', 'Los\x20animales\x20no\x20te\x20atacarán', '¡Pero\x20no\x20ataques!', '\x20Te\x20calienta\x20en\x20el\x20invierno\x20y\x20fuera\x20del\x20agua'], LANG[INV['CHRISTMAS_HAT']] = ['Gorro\x20de\x20Navidad', '¡Ho,\x20ho,\x20ho,\x20feliz\x20Navidad!', 'Te\x20calienta\x20en\x20el\x20invierno\x20y\x20fuera\x20del\x20\x20agua'], LANG[INV['ELF_HAT']] = ['Gorro\x20del\x20Duende', '¡No\x20dejes\x20que\x20te\x20descubren\x20que\x20eres,\x20duende\x20del\x20hielo!', 'Te\x20calienta\x20en\x20el\x20invierno\x20y\x20fuera\x20del\x20agua'], LANG[INV['HOOD']] = ['Capucha', '¡Eres\x20un\x20ladron!', 'Puedes\x20robar\x20de\x20alguien\x20solo\x20si', '1)\x20Es\x20de\x20noche', '2)\x20No\x20tienes\x20nada\x20en\x20tu\x20mano', '3)\x20Si\x20no\x20te\x20han\x20tocado\x20en\x20los\x20\x208\x20segundos\x20anteriores', '4)\x20No\x20estas\x20cerca\x20de\x20una\x20fogata', '5)\x20Si\x20tu\x20objetivo\x20no\x20lleva\x20puesto\x20una\x20gorra\x20de\x20campesino', 'Te\x20calienta\x20en\x20invierno\x20y\x20fuera\x20del\x20agua'], LANG[INV['EARMUFFS']] = ['Orejeras', 'Como\x20un\x20abrigo\x20pequeño.', 'Te\x20calienta\x20en\x20invierno\x20y\x20fuera\x20del\x20agua'], LANG[INV['COAT']] = ['Chapka', 'También\x20llamado\x20abrigo.', 'Te\x20calienta\x20en\x20el\x20invierno\x20y\x20fuera\x20del\x20agua'], LANG[INV['CAP_SCARF']] = ['Gorro\x20y\x20Bufanda\x20', 'Muy\x20cómodo,\x20muy\x20caliente'], LANG[INV['PEASANT']] = ['Gorra\x20de\x20Campesino', 'Tus\x20plantas\x20crecen\x20mas\x20rápido', 'Te\x20Calienta\x20en\x20el\x20invierno\x20y\x20fuera\x20del\x20agua'], LANG[INV['WINTER_HOOD']] = ['Capucha\x20de\x20Invierno', 'Puedes\x20robar\x20de\x20alguien\x20solo\x20si', '1)\x20Es\x20de\x20noche', '2)\x20No\x20tienes\x20nada\x20en\x20tu\x20mano', '3)\x20Si\x20no\x20te\x20han\x20tocado\x20antes\x20de\x208\x20segundos', '4)\x20No\x20estas\x20cerca\x20de\x20un\x20fuego', '5)\x20Si\x20tu\x20objetivo\x20no\x20lleva\x20puesto\x20una\x20Gorra\x20de\x20Campesino', 'Te\x20calienta\x20en\x20invierno\x20y\x20fuera\x20del\x20agua'], LANG[INV['WINTER_PEASANT']] = ['Gorra\x20de\x20Invierno\x20del\x20Campesino', 'Tus\x20plantas\x20crecen\x20aún\x20más\x20rápido', 'Te\x20calienta\x20en\x20invierno\x20y\x20fuera\x20del\x20agua'], LANG[INV['DIVING_MASK']] = ['Máscara\x20de\x20Buceo', 'Eres\x20un\x20tiburón\x20en\x20el\x20agua', 'Calienta\x20en\x20el\x20agua', 'Protección\x20contra\x20jugadores:\x202,\x20Protección\x20contra\x20animales:\x208'], LANG[INV['SUPER_DIVING_SUIT']] = ['Súper\x20Máscara\x20de\x20Buceo', 'Eres\x20muy\x20rápido\x20en\x20agua', 'Calienta\x20en\x20el\x20agua', 'Defensa\x20del\x20Jugador:\x204,\x20Defensa\x20de\x20los\x20animales:\x2016'], LANG[INV['DRAGON_ORB']] = ['Esfera\x20del\x20Dragón', 'Dada\x20en\x20la\x20misión'], LANG[INV['DRAGON_HEART']] = ['Corazón\x20del\x20Dragón', '¡Te\x20convierte\x20en\x20un\x20fantasma\x20cuando\x20mueres!', 'Eres\x20un\x20fantasma\x20por\x2060\x20segundos', 'Encuentra\x20una\x20Piedra\x20de\x20resurreción'], LANG[INV['GEMME_GREEN']] = ['Gema\x20Verde', '¿¿No\x20has\x20hecho\x20trampas,\x20verdad??'], LANG[INV['GEMME_ORANGE']] = ['Gema\x20Naranja', '¡Solo\x20un\x20pirata\x20verdadero\x20lo\x20puede\x20encontrar!'], LANG[INV['GEMME_BLUE']] = ['Gema\x20Azul', 'Para\x20gente\x20muy\x20amable'], LANG[INV['CROWN_GREEN']] = ['Corona\x20Verde', 'Te\x20sanas\x20muy\x20rápido', 'Sanación\x20con\x20el\x20tiempo:\x2040', 'Protección\x20contra\x20jugadores:\x204,\x20Protección\x20contra\x20animales:\x2016'], LANG[INV['CROWN_ORANGE']] = ['Corona\x20Naranja', 'Ahora\x20tienes\x20much\x20suerte', 'Protección\x20contra\x20jugadores:\x204,\x20Protección\x20contra\x20animales:\x2016'], LANG[INV['CROWN_BLUE']] = ['Corona\x20Azul', 'Cuando\x20mueres,\x20te\x20conviertes\x20en\x20un\x20fantasma', 'Pero\x20perderás\x20tu\x20alma', 'Protección\x20contra\x20jugador:\x204,\x20Protección\x20contra\x20animales:\x2016'], LANG[INV['BUCKET_FULL']] = ['Cubo', 'Bueno\x20para\x20rellenar\x20botellas', 'Un\x20cubo\x20es\x20equivalente\x20a\x2012\x20botellas'], LANG[INV['BUCKET_EMPTY']] = ['Cubo\x20Vacío', 'Tienes\x20que\x20llenar\x20este\x20cubo\x20con\x20agua'], LANG[INV['BOTTLE_FULL']] = ['Botella', 'Te\x20permite\x20beber\x20agua\x20donde\x20quieras', 'Agua:\x2050'], LANG[INV['BOTTLE_EMPTY']] = ['Botella\x20Vacia', 'La\x20puedes\x20llenar\x20de\x20agua'], LANG[INV['WATERING_CAN']] = ['Regadera\x20Vacía', 'La\x20tienes\x20que\x20llenar\x20de\x20agua'], LANG[INV['WATERING_CAN_FULL']] = ['Regadera', 'Te\x20permite\x20regar\x20las\x20plantas', 'Daño:\x201'], LANG[INV['BAG']] = ['Mochila', '¡Mas\x20espacio\x20para\x20tus\x20cosas!'], LANG[INV['PAPER']] = ['Hoja', 'Usada\x20para\x20hacer\x20un\x20libro'], LANG[INV['BOOK']] = ['Libro', 'Reduce\x20el\x20tiempo\x20de\x20elaboración', 'Lo\x20tienes\x20que\x20tener\x20en\x20la\x20mano\x20para\x20que\x20funcione', 'Daño:\x201'], LANG[INV['BANDAGE']] = ['Vendaje', 'Recuperas\x20vida\x20mas\x20rapido', 'Sanación\x20tiempo:\x2030', 'Efecto:\x205'], LANG[INV['LOCK']] = ['Cerradura', 'Te\x20permite\x20cerrar\x20tu\x20cofre'], LANG[INV['LOCKPICK']] = ['Llave', 'Te\x20permite\x20abrir\x20un\x20cofre\x20cerrado'], LANG[INV['TOTEM']] = ['Tótem', 'Te\x20permite\x20crear\x20un\x20equipo', 'Compartir\x20puertas\x20y\x20cofres\x20cerrados', 'Tus\x20pinchos\x20no\x20dañan\x20al\x20resto\x20tu\x20equipo'], LANG[INV['BRIDGE']] = ['Puente', 'Muy\x20útil\x20en\x20el\x20agua', 'Te\x20permite\x20beber\x20agua\x20sin\x20tener\x20que\x20ahogarse', 'Puedes\x20nadar\x20más\x20rápido\x20encima\x20del\x20agua'], LANG[INV['SIGN']] = ['Cartel', 'Sirve\x20para\x20dejar\x20un\x20mensage\x20para\x20otros', 'Durabilidad:\x20200'], LANG[INV['ROOF']] = ['Techo', 'Te\x20esconde\x20un\x20poco\x20y\x20te\x20protege\x20del\x20frío'], LANG[INV['WELL']] = ['Fuente', 'Permite\x20rellenar\x20botellas', 'Durabilidad:\x201000'], LANG[INV['WALL']] = ['Pared\x20de\x20Madera', 'Es\x20solo\x20una\x20pared.', 'Durabilidad:\x201000'], LANG[INV['STONE_WALL']] = ['Pared\x20de\x20Piedra', 'Es\x20un\x20poco\x20más\x20serio', 'Durabilidad:\x201500'], LANG[INV['GOLD_WALL']] = ['Pared\x20de\x20Oro', '¿Oro\x20en\x20de\x20tus\x20paredes?\x20Eres\x20rico', 'Durabilidad:\x202000'], LANG[INV['DIAMOND_WALL']] = ['Pared\x20de\x20Diamante', 'Muy\x20brillante,\x20cuidado\x20con\x20tus\x20ojos', 'Durabilidad:\x202500'], LANG[INV['AMETHYST_WALL']] = ['Pared\x20de\x20Amatista', '¡Debes\x20tener\x20mucho\x20miedo\x20de\x20lo\x20que\x20hay\x20fuera!', 'Durabilidad:\x203500'], LANG[INV['SPIKE']] = ['Pincho\x20de\x20Madera', 'Puede\x20dañar\x20a\x20tus\x20enemigos', 'Daño:\x2010,\x20Daño\x20por\x20golpe:\x202', 'Durabilidad:\x20150'], LANG[INV['STONE_SPIKE']] = ['Pincho\x20de\x20Piedra', 'No\x20querría\x20ser\x20tu\x20enemigo.', 'Daño:\x2020', 'Daño\x20por\x20contacto:\x203', 'Durabilidad:\x20300'], LANG[INV['GOLD_SPIKE']] = ['Pincho\x20de\x20Oro', '¡Eres\x20tan\x20cruel!', 'Daño:\x2030', 'Daño\x20por\x20golpe:\x203', 'Durabilidad:\x20600'], LANG[INV['DIAMOND_SPIKE']] = ['Pincho\x20de\x20Diamante', 'No\x20te\x20gusta\x20tener\x20compañía.', 'Daño:\x2040', 'Daño\x20por\x20contacto:\x204', 'Durabilidad:\x201200'], LANG[INV['AMETHYST_SPIKE']] = ['Pincho\x20de\x20Amatista', '¡¿Que\x20demonios\x20te\x20hicieron\x20tus\x20vecinos?!', 'Daño:\x2050', 'Daño\x20por\x20contacto:\x204', 'Durabilidad:\x202400'], LANG[INV['WOOD_DOOR']] = ['Puerta\x20de\x20Madera', 'Puedes\x20abrir\x20y\x20cerrarla\x20', 'Durabilidad:\x201000'], LANG[INV['STONE_DOOR']] = ['Puerta\x20de\x20Piedra', 'Una\x20puerta\x20más\x20buena\x20es\x20más\x20seria', 'Durabilidad:\x201500'], LANG[INV['GOLD_DOOR']] = ['Puerta\x20de\x20Oro', '¿Estas\x20reconstruyendo\x20El\x20Dorado?', 'Durabilidad:\x202000'], LANG[INV['DIAMOND_DOOR']] = ['Puerta\x20de\x20Diamante', 'Para\x20una\x20casa\x20brillante', 'Durabilidad:\x202500'], LANG[INV['AMETHYST_DOOR']] = ['Puerta\x20de\x20Amatista', '¿Tu\x20casa\x20es\x20una\x20caja\x20fuerte?', 'Durabilidad:\x203500'], LANG[INV['FURNACE']] = ['Caldera', 'Te\x20calienta', 'Consume\x201\x20Madera\x20cada\x205\x20segundos', 'Durabilidad:\x201000'], LANG[INV['WINDMILL']] = ['Molino', 'Puede\x20producir\x20harina\x20a\x20partir\x20del\x20trigo', 'Necesita\x205\x20segundos\x20para\x20producir\x20harina', 'Devuelve\x20los\x20puntos\x20que\x20trabaja', 'Durabilidad:\x202000'], LANG[INV['BREAD_OVEN']] = ['Horno\x20de\x20Pan', 'Produce\x20pan\x20de\x20harina', 'Necesita\x2010\x20segundos\x20para\x20producir\x20Pan', 'Devuelve\x20los\x20puntos\x20que\x20trabaja', 'Durabilidad:\x202000'], LANG[INV['RESURRECTION']] = ['Piedra\x20de\x20Resurreción', '¡Es\x20magia!', 'Te\x20resucitacuando\x20eres\x20una\x20fantasma', 'Perderás\x20tu\x20arma', 'Durabilidad:\x20200'], LANG[TEXT['YOU_CANNOT_JOIN']] = 'No\x20puedes\x20unirte\x20a\x20este\x20servidor', LANG[TEXT['KICKED']] = 'Expulsado:\x20', LANG[TEXT['KEY_ALREADY']] = 'Tu\x20llave\x20ya\x20está\x20usada', LANG[TEXT['KEY_WRONG']] = 'Tu\x20llave\x20está\x20mal', LANG[TEXT['OLD_VERSION']] = 'Tienes\x20una\x20versión\x20antigua,\x20limpia\x20tu\x20cache', LANG[TEXT['NO_MORE_RESOURCES']] = 'No\x20hay\x20mas\x20recursos', LANG[TEXT['SURVIVED_1DAY']] = 'Has\x20sobrevivido\x201\x20día', LANG[TEXT['SURVIVED']] = 'Has\x20sobrevivido\x20', LANG[TEXT['DAYS']] = '\x20días', LANG[TEXT['DEAD_SAD']] = 'Estás\x20muerto\x20;-;', LANG[TEXT['SPAM_ME']] = 'No\x20se\x20encuentra\x20un\x20lugar\x20para\x20unirse,\x20¡spamea\x20el\x20botón\x20de\x20jugar!', LANG[TEXT['SPAM_ME2']] = 'El\x20servidor\x20esta\x20lleno,\x20¡spamea\x20el\x20botón\x20de\x20jugar!', LANG[TEXT['EMPTY']] = 'Recurso\x20vacio', LANG[TEXT['INV_FULL']] = '¡Inventario\x20lleno!(Haz\x20click\x20derecho\x20para\x20borrar\x20cosas)\x20', LANG[TEXT['DEAD']] = '\x20está\x20muerto', LANG[TEXT['WRONG_TOOL']] = 'Esta\x20no\x20es\x20la\x20herramienta\x20correcta', LANG[TEXT['JOIN_TEAM']] = 'Te\x20has\x20unido\x20a\x20un\x20equipo', LANG[TEXT['YOU_DEAD']] = 'Estás\x20muerto', LANG[TEXT['JOINED_TEAM']] = '\x20se\x20unió\x20al\x20equipo', LANG[TEXT['TEAM_DESTROYED']] = 'Tu\x20equipo\x20ha\x20sido\x20destruido', LANG[TEXT['LEFT_TEAM']] = 'Has\x20dejado\x20el\x20equipo', LANG[TEXT['LEFT_TEAM2']] = '\x20dejo\x20el\x20equipo\x20', LANG[TEXT['TOKEN']] = 'Alguien\x20te\x20robó\x20tu\x20token\x20:>', LANG[TEXT['CHOOSE']] = 'Elige\x20un\x20servidor', LANG[TEXT['PLAYERS']] = 'jugadores', LANG[TEXT['TOTAL_PLAYERS']] = 'total\x20de\x20jugadores', LANG[TEXT['TOTAL_MODE']] = 'Jugadores\x20en\x20este\x20modo\x20de\x20juego', LANG[TEXT['COMMING_SOON']] = 'Próximamente...', document['getElementById']('nickname_input')['placeholder'] = 'Apodo', DIE[0x0] = ['Has\x20muerto\x20por\x20ninguna\x20razón'], DIE[0x1] = ['Has\x20muerto\x20de\x20hambre,\x20como\x20implica\x20el\x20nombre\x20del\x20juego\x20dice'], DIE[0x2] = ['Te\x20has\x20congelado\x20hasta\x20morir,\x20qué\x20triste', 'Moriste\x20por\x20hipotermia.\x20La\x20próxima\x20quédate\x20cerca\x20de\x20\x20una\x20fogata.'], DIE[0x3] = ['Un\x20jugador\x20te\x20ha\x20matado\x20diciendo\x20que\x20mejores.', 'Fuiste\x20asesinado\x20por\x20un\x20jugador,\x20pero\x20no\x20te\x20preocupes,\x20ese\x20jugador\x20también\x20morirá,\x20eventualmente.'], DIE[0x4] = ['Te\x20has\x20acercado\x20demasiado\x20al\x20fuego,\x20y\x20te\x20has\x20quemado\x20vivo,\x20mala\x20idea.', 'Has\x20muerto\x20por\x20el\x20fuego,\x20el\x20fuego\x20te\x20quema,\x20ve\x20y\x20escribe\x20una\x20historia\x20sobre\x20eso.'], DIE[0x5] = ['Tu\x20cuerpo\x20será\x20un\x20buen\x20nido\x20para\x20los\x20huevos\x20de\x20la\x20arañas', 'Una\x20araña\x20te\x20ha\x20matado,\x20al\x20menos\x20no\x20fué\x20un\x20conejo.'], DIE[0x6] = ['El\x20lobo\x20no\x20tendrá\x20hambre\x20después\x20de\x20comerte.', 'No\x20son\x20perros,\x20no\x20les\x20gusta\x20ser\x20acariciados.'], DIE[0x7] = ['El\x20zorro\x20era\x20demasiado\x20rápido\x20para\x20ti.', 'El\x20zorro\x20te\x20convirtió\x20en\x20una\x20caja.\x20¿Desde\x20cuándo\x20los\x20animales\x20tienen\x20poderes\x20mágicos?'], DIE[0x8] = ['El\x20oso\x20solo\x20quería\x20un\x20abrazo', 'El\x20oso\x20era\x20demasiado\x20para\x20ti.\x20Lo\x20siento.'], DIE[0x9] = ['El\x20dragón\x20te\x20quemó\x20vivo.', 'El\x20dragón\x20te\x20ha\x20aplastado,\x20todos\x20tus\x20huesos\x20ahora\x20son\x20vapor...\x20otro\x20cadaver\x20mas.'], DIE[0xa] = ['Has\x20saltado\x20a\x20una\x20pared\x20de\x20pinchos,\x20mala\x20idea', 'Has\x20muerto\x20por\x20una\x20pared\x20de\x20pinchos.\x20La\x20gente\x20suele\x20ser\x20lo\x20suficientemente\x20sensible\x20para\x20no\x20tocar\x20cosas\x20puntiagudas..'], DIE[0xb] = ['Un\x20fantasma\x20también\x20puede\x20morir.', 'No\x20has\x20revivido\x20a\x20tiempo,\x20asi\x20que\x20eres\x20un\x20fantasma\x20de\x20un\x20fantasma.'], DIE[0xc] = ['Una\x20bacteria\x20te\x20ha\x20matado\x20por\x20comer\x20carne\x20cruda.\x20Este\x20juego\x20es\x20muy\x20difícil.', 'Has\x20matado\x20a\x20la\x20carne\x20cruda.\x20Ella\x20también\x20te\x20ha\x20matado\x20a\x20ti..'], DIE[0xd] = ['Has\x20muerto\x20de\x20sed,\x20mejor\x20bebe\x20tu\x20propia\x20orina.'], DIE[0xe] = ['¿Sabiás\x20que\x20los\x20jugadores\x20tienen\x20su\x20boca\x20debajo\x20del\x20agua?\x20Ahora\x20lo\x20sabes.'], DIE[0xf] = ['No\x20te\x20preocupes,\x20a\x20la\x20piraña\x20le\x20pareciste\x20delicioso.', 'Las\x20pirañas\x20comen\x20a\x20personas,\x20incluyendote\x20a\x20ti\x20también.'], DIE[0x10] = ['LapaMauve\x20no\x20planea\x20que\x20puedas\x20matar\x20al\x20kraken', 'Un\x20Kraken\x20te\x20partió\x20el\x20kra-neo.'], DIE[0x11] = ['Tu\x20piel\x20se\x20cayó,\x20el\x20sol\x20te\x20quemó.'], DIE[0x12] = ['El\x20ajo\x20guardado\x20en\x20tu\x20bolsillo\x20te\x20quemó\x20el\x20cerebro.'], DIE[0x13] = ['Eres\x20un\x20vampiro,\x20no\x20te\x20quedes\x20cerca\x20del\x20ajo.'], DIE[0x14] = ['Has\x20comido\x20un\x20ajo\x20siendo\x20\x20vampiro,¿que\x20esperabas?'], DIE[0x15] = ['Te\x20has\x20quedado\x20atrapado\x20en\x20una\x20planta\x20de\x20espinas.\x20Al\x20intentar\x20escapar,\x20tu\x20piel\x20se\x20cae\x20y\x20entra\x20un\x20pincho\x20en\x20tu\x20corazón.'], ZOMBIE_GRUMBLE = 'Uuunnnggg', ZOMBIE_GRUMBLES = ['Uuunnnggg...\x20Tengo\x20hambre', 'Necesito\x20tu\x20cerebro\x20uuunnnggg...', 'Carne\x20fresca...\x20Uuunnnggg', 'Uuunnnggg...\x20Pareces\x20delicioso', 'Uuunnnggg...', 'Comida...\x20uuunnnggg...', 'Puedo\x20oler\x20sangre...\x20Uuunnnggg'];
    },
    set_german = function() {
        LANG[INV['DRAGON_CUBE']] = ['You\x20feel\x20a\x20great\x20power\x20emanating\x20from\x20this\x20orb'], DIE[0x16] = ['This\x20crab,\x20though\x20frightening\x20in\x20nature,\x20pinched\x20your\x20fingertips\x20so\x20hard\x20that\x20you\x20had\x20a\x20heart\x20attack.'], LANG[INV['CRAB_STICK']] = ['Crab\x20sticks', 'Oh,\x20yeah?\x20Is\x20there\x20crab\x20in\x20the\x20crab\x20sticks?', 'Food:\x2020'], LANG[TEXT['BACK_TO_THE_GAME']] = '\x20BACK\x20TO\x20THE\x20GAME', LANG[TEXT['TWITTER']] = '\x20Share\x20on\x20Twitter', LANG[TEXT['FACEBOOK']] = '\x20Share\x20on\x20Facebook', LANG[TEXT['KIT_NEXT']] = 'You\x20can\x20buy\x20items\x20on\x20the\x20shop\x20in\x20the\x20next\x20game\x20with\x20your\x20points', LANG[TEXT['POINTS']] = 'points', LANG[TEXT['SCORE']] = 'Score', LANG[TEXT['KILL']] = 'Kill', LANG[TEXT['DAYS_SURVIVED']] = 'Days\x20survived', LANG[TEXT['MODE_FREE']] = 'Building\x20method:\x20Free.\x20Press\x20G\x20to\x20change', LANG[TEXT['MODE_GRID']] = 'Building\x20method:\x20Grid.\x20Press\x20G\x20to\x20change', LANG[INV['CRAB_LOOT']] = ['Crab\x20Claw', 'Crab\x20claws\x20can\x20also\x20be\x20eaten', 'Food:\x2010'], LANG[INV['CRAB_SPEAR']] = ['Crab\x20Spear', 'Allow\x20you\x20to\x20calm\x20crabs,\x20and\x20heal\x20them', 'Damage:\x2014', 'Building\x20Damage:\x204'], LANG[INV['CROWN_CRAB']] = ['Crab\x20Helmet', 'You\x20are\x20the\x20king\x20of\x20crabs!', 'Crabs\x20follow\x20you', 'They\x20can\x27t\x20hit\x20you\x20and\x20you\x20can\x27t\x20hit\x20them', 'Players\x20Defense:\x204', 'Animals\x20Defense:\x2013'], LANG[INV['BED']] = ['Bed', 'Relax\x20in\x20this\x20confortable\x20bed', 'You\x20are\x20less\x20cold,\x20less\x20thirsty,\x20and\x20less\x20hungry', 'You\x20will\x20be\x20cured\x20faster', 'Durability:\x20400'], document['getElementById']('typequest')['innerHTML'] = 'Chrono\x20Quests', document['getElementById']('timeremainingquest')['innerHTML'] = 'Time\x20Remaining', document['getElementById']('constraintquest')['innerHTML'] = '\x20Constraints', document['getElementById']('claim_rewards')['innerHTML'] = '\x20Claim\x20rewards', document['getElementById']('rewardquest')['innerHTML'] = '\x20Reward', document['getElementById']('killdragon_1')['innerHTML'] = '\x20Collect\x201\x20dragon\x20heart', document['getElementById']('amethyst_2')['innerHTML'] = '\x20Gather\x201\x20amethyst', document['getElementById']('survive20min_3')['innerHTML'] = 'Survive\x20without\x20losing\x20life', document['getElementById']('treasure_chest_4')['innerHTML'] = '\x20Open\x205\x20treasure\x20chests', document['getElementById']('dont_hit_5')['innerHTML'] = '\x20Be\x20peaceful', document['getElementById']('bread_6')['innerHTML'] = '\x20Collect\x20100\x20bread\x20in\x20deep\x20winter', document['getElementById']('winter_7')['innerHTML'] = '\x20After\x201\x20day,\x20survive\x20in\x20winter';
        for (var _0x472411 = 0x0; _0x472411 < 0x7; _0x472411++) document['getElementById']('claim_reward_' + _0x472411)['innerHTML'] = 'CLAIM\x20REWARD!';
        document['getElementById']('quit_chronoquest')['innerHTML'] = '\x20QUIT', LANG[INV['HAND']] = ['Hand'], LANG[INV['GROUND']] = ['Boden', 'Dreckig!'], LANG[INV['SAND']] = ['Sand', 'Ich\x20habe\x20es\x20in\x20meine\x20Augen\x20bekommen!'], LANG[INV['WOOD']] = ['Holz', 'Du\x20kannst\x20niemals\x20zu\x20viel\x20haben!'], LANG[INV['STONE']] = ['Stein', 'Auch\x20Fels\x20gennant'], LANG[INV['GOLD']] = ['Gold', 'Sei\x20großzügig,\x20gib\x20anderen\x20etwas\x20ab\x20'], LANG[INV['DIAMOND']] = ['Diamant', 'Was\x20wirst\x20du\x20daraus\x20machen?'], LANG[INV['AMETHYST']] = ['Amethyst', 'Es\x20ist\x20Mauve\x20farbend,\x20genauso\x20wie\x20Lapa'], LANG[INV['FLOUR']] = ['Mehl', 'wird\x20fürs\x20Backen\x20gebraucht'], LANG[INV['COOKIE']] = ['Keks', 'Ein\x20prächtiger\x20Keks\x20von\x20Großmutter', 'Essen:\x2050'], LANG[INV['CAKE']] = ['Ein\x20Kuchen', 'Perfekter\x20Kuchen\x20für\x20Gourmets', 'Essen:\x20100'], LANG[INV['MEAT']] = ['rohes\x20Fleisch', 'Du\x20kannst\x20es\x20mit\x20einem\x20Feuer\x20braten', 'verursacht\x20Lebensmittelvergiftung:\x2010', 'Essen:\x2015'], LANG[INV['COOKED_MEAT']] = ['gebratenes\x20Fleisch', 'Einmal\x20blutiges\x20Steak,\x20bitte', 'Essen:\x2035'], LANG[INV['FOODFISH']] = ['roher\x20Fisch', 'Ich\x20glaube\x20es\x20lebt\x20noch', 'verursacht\x20Lebensmittelvergiftung:\x2010', 'Essen:\x2018'], LANG[INV['FOODFISH_COOKED']] = ['gebratener\x20Fisch', 'Mit\x20einer\x20Zitrone\x20ist\x20es\x20perfekt', 'Essen:\x2035'], LANG[INV['BREAD']] = ['Brot', 'Ein\x20vorzügliches\x20französiches\x20Brot', 'Es\x20wird\x20als\x20Währung\x20im\x20Markt\x20benutzt', 'Essen:\x2015'], LANG[INV['SANDWICH']] = ['Sandwich', 'Schmeckt\x20wie\x20Krabbenburger', 'Essen:\x20100'], LANG[INV['CANDY']] = ['Süßigkeiten', 'Nur\x20für\x20Kinder!', 'Essen:\x20100'], LANG[INV['SUGAR_CAN']] = ['Zuckerstange', 'Probier\x20mal,\x20es\x20schmeckt\x20hervorragend', 'Essen:\x20100'], LANG[INV['GARLAND']] = ['Girlande', 'perfekter\x20Schmuck\x20für\x20Dächer'], LANG[INV['SEED']] = ['Beeren\x20Saatgut', 'Wird\x20eine\x20Beere', 'Entstehung:\x202min', 'Wachstum:\x2055s', 'Wasserbedarf:\x203min\x2020s', 'Haltbarkeit:\x20700', 'Lebenszeit:\x208\x20Tage'], LANG[INV['PLANT']] = ['Beere', 'Beeren\x20lecker!', 'Essen:\x2010'], LANG[INV['WHEAT_SEED']] = ['Weizen\x20Saatgut', 'Wird\x20zu\x20Weizen', 'Entstehung:\x202min', 'Wachstum:\x2016s', 'Wasserbedarf:\x202min', 'Haltbarkeit:\x20700', 'Lebenszeit:\x208\x20Tage'], LANG[INV['WILD_WHEAT']] = ['Wildes\x20Weizen', 'Wenn\x20es\x20in\x20eine\x20Windmühle\x20platziert\x20wird,\x20wird\x20es\x20zu\x20Mehl'], LANG[INV['PUMPKIN_SEED']] = ['Kürbis\x20Saatgut', 'Wird\x20zu\x20Kürbis', 'Entstehung:\x202min\x2040s', 'Wachstum:\x202min', 'Wasserbedarf:\x202min', 'Haltbarkeit:\x20700', 'Lebenszeit:\x208\x20Tage'], LANG[INV['PUMPKIN']] = ['Kürbis', 'Es\x20erinnert\x20mich\x20an\x20Halloween', 'Essen:\x2030'], LANG[INV['GARLIC_SEED']] = ['Knoblauch\x20Saatgut', 'Sehr\x20gefährlich\x20für\x20Vampire', 'Schaden:\x2020', 'Entstehung:\x204min', 'Wachstum:\x201min\x2010s', 'Wasserbedarf:\x201min\x2040s', 'Haltbarkeit:\x20700', 'Lebenszeit:\x208\x20Tage'], LANG[INV['GARLIC']] = ['Knoblauch', 'Heilt\x20dich\x20und\x20hält\x20die\x20Kälte\x20fern', 'Essen:\x2014', 'Heilung\x20über\x20Zeit:\x2030', 'Effekt:\x201'], LANG[INV['THORNBUSH_SEED']] = ['Dornenbusch\x20Saatgut', 'Kann\x20deinen\x20Gegnern\x20Schaden\x20zufügen', 'Schaden:\x2020', 'Entstehung:\x204min', 'Wachstum:\x2015s', 'Wasserbedarf:\x203min', 'Haltbarkeit:\x201000', 'Lebenszeit:\x208\x20Tage'], LANG[INV['THORNBUSH']] = ['Dornenbusch', 'Es\x20sticht!'], LANG[INV['PLOT']] = ['Topf', 'Ernsthaft,\x20benutz\x20es', 'Mit\x20diesem\x20GMO\x20dünger\x20deine\x20Pflanzen', 'lässt\x20sie\x20schneller\x20wachsen\x20und\x20reduziert\x20den\x20Wasserverbrauch', 'Haltbarkeit:\x202000'], LANG[INV['ICE']] = ['Eis', 'Nützlich\x20um\x20Kuchen\x20und\x20Wasser\x20herzustellen'], LANG[INV['SPANNER']] = ['Schraubenschlüssel', 'Es\x20kann\x20Wände,\x20Türen\x20und\x20Stacheln\x20reparieren', 'Schaden:\x202'], LANG[INV['FUR_WOLF']] = ['Wolfsfell', 'Welpe?\x20Aber\x20wo\x20ist\x20der\x20Welpe?!'], LANG[INV['FUR']] = ['Hasenfell', 'Der\x20Hase\x20war\x20so\x20süß...'], LANG[INV['SPECIAL_FUR']] = ['Klares\x20Fell', 'Du\x20bist\x20eine\x20Brotfabrik'], LANG[INV['SPECIAL_FUR_2']] = ['Dunkles\x20Fell', 'Du\x20machst\x20dich\x20bereit\x20etwas\x20falsches\x20zu\x20vollführen'], LANG[INV['FUR_WINTER']] = ['Winter\x20Fell', 'Diese\x20Tiere\x20wollten\x20nur\x20eine\x20Umarmung...'], LANG[INV['SCALES']] = ['Schuppen', 'Es\x20riecht\x20wie\x20Fisch!'], LANG[INV['KRAKEN_SKIN']] = ['Kraken\x20Haut', 'Warst\x20du\x20nicht\x20zu\x20ängstlich?'], LANG[INV['FIRE']] = ['Lagerfeuer', 'Wärmt\x20dich!', 'Haltbarkeit:\x20150', 'Lebensdauer:\x202min'], LANG[INV['BIG_FIRE']] = ['Großes\x20Lagerfeuer', 'Wärmt\x20dich\x20länger!', 'Haltbarkeit:\x20400', 'Lebensdauer:\x206min'], LANG[INV['WORKBENCH']] = ['Werkbank', 'Sehr\x20nützlich\x20um\x20allerlei\x20Sachen\x20herzustellen'], LANG[INV['CORD']] = ['Faden', 'Wird\x20benötigt\x20um\x20Mützen\x20und\x20Rucksäcke\x20herzustellen\x20\x20'], LANG[INV['BLUE_CORD']] = ['Diamant\x20Faden', 'Wird\x20für\x20spezielle\x20Mützen\x20gebraucht'], LANG[INV['CHEST']] = ['Truhe', 'Damit\x20kannst\x20du\x20Gegenstände\x20lagern', 'Haltbarkeit:\x20500'], LANG[INV['SWORD_WOOD']] = ['Holzschwert', 'Funktioniert\x20das?', 'Schaden:\x2012', 'Schaden\x20an\x20Gebäuden:\x204'], LANG[INV['SWORD']] = ['Steinschwert', 'Sei\x20nett\x20zu\x20Anderen', 'Schaden:\x2019', 'Schaden\x20an\x20Gebäuden:\x206'], LANG[INV['SWORD_GOLD']] = ['Goldschwert', 'König\x20des\x20Waldes', 'Schaden:\x2022', 'Schaden\x20an\x20Gebäuden:\x207'], LANG[INV['SWORD_DIAMOND']] = ['Diamantschwert', 'Du\x20kannst\x20die\x20Kraft\x20spüren', 'Schaden:\x2024', 'Schaden\x20an\x20Gebäuden:\x208'], LANG[INV['PIRATE_SWORD']] = ['Piratenschwert', 'Ayyyyy!', 'Hat\x20eine\x20höhere\x20Reichweite\x20als\x20ein\x20normales\x20Schwert', 'Schaden:\x2024', 'Schaden\x20an\x20Gebäuden:\x208'], LANG[INV['SWORD_AMETHYST']] = ['Amethystschwert', 'Mauve\x20ist\x20die\x20schönste\x20Farbe\x20der\x20Welt', 'Schaden:\x2027', 'Schaden\x20an\x20Gebäuden:\x209'], LANG[INV['DRAGON_SWORD']] = ['Drachenschwert', 'Keine\x20Gnade!', 'Schaden:\x2030', 'Schaden\x20an\x20Gebäuden:\x2010'], LANG[INV['DRAGON_SPEAR']] = ['Drachenspeer', 'Töte\x20sie\x20alle!', 'Schaden:\x2022', 'Schaden\x20an\x20Gebäuden:\x206'], LANG[INV['PICK_WOOD']] = ['Holzspitzhacke', 'Kann\x20nur\x20Holz\x20und\x20Stein\x20abbauen', 'Schaden:\x201'], LANG[INV['PICK']] = ['Steinspitzhacke', 'Kann\x20Holz,\x20Stein\x20und\x20Gold\x20abbauen', 'Schaden:\x202'], LANG[INV['PICK_GOLD']] = ['Goldspitzhacke', 'Kann\x20auch\x20Diamanten\x20abbauen', 'Schaden:\x203', 'Schaden\x20an\x20Gebäuden:\x201'], LANG[INV['PICK_DIAMOND']] = ['Diamantspitzhacke', 'Kann\x20alles\x20abbauen', 'Schaden:\x204', 'Schaden\x20an\x20Gebäuden:\x201'], LANG[INV['PICK_AMETHYST']] = ['Amethystspitzhacke', 'Kann\x20alles\x20abbauen,\x20sieht\x20außerdem\x20gut\x20aus!', 'Schaden:\x205', 'Schaden\x20an\x20Gebäuden:\x201'], LANG[INV['HAMMER']] = ['Steinhammer', 'Nützlich\x20um\x20Gebäude\x20zu\x20zerstören', 'Funktioniert\x20nicht\x20gut\x20gegen\x20Diamant\x20oder\x20Amethyst', 'Schaden:\x202', 'Schaden\x20an\x20Gebäuden:\x2020'], LANG[INV['HAMMER_GOLD']] = ['Goldhammer', 'Nützlich\x20um\x20Gebäude\x20zu\x20zerstören', 'Funktioniert\x20nicht\x20gut\x20gegen\x20Amethyst', 'Schaden:\x203', 'Schaden\x20an\x20Gebäuden:\x2030'], LANG[INV['HAMMER_DIAMOND']] = ['Diamanthammer', 'Nützlich\x20um\x20Gebäude\x20zu\x20zerstören', 'Schaden:\x204', 'Schaden\x20an\x20Gebäuden:\x2040'], LANG[INV['HAMMER_AMETHYST']] = ['Amethysthammer', 'Nützlich\x20um\x20Gebäude\x20zu\x20zerstören', 'Schaden:\x205', 'Schaden\x20an\x20Gebäuden:\x2050'], LANG[INV['SUPER_HAMMER']] = ['Superhammer', 'Willst\x20du\x20die\x20Welt\x20zerstören?', 'Schaden:\x2012', 'Schaden\x20an\x20Gebäuden:\x2070'], LANG[INV['WOOD_SPEAR']] = ['Holzspeer', 'Wie\x20ein\x20Stock,\x20nur\x20mit\x20dem\x20Unterschied,\x20dass\x20es\x20sticht.', 'Schaden:\x2010', 'Schaden\x20an\x20Gebäuden:\x202'], LANG[INV['SPEAR']] = ['Steinspeer', 'Der\x20Anfang\x20der\x20Evolution!', 'Schaden:\x2014', 'Schaden\x20an\x20Gebäuden:\x204'], LANG[INV['GOLD_SPEAR']] = ['Goldspeer', 'Pass\x20auf,\x20es\x20sticht!', 'Schaden:\x2015', 'Schaden\x20an\x20Gebäuden:\x205'], LANG[INV['DIAMOND_SPEAR']] = ['Diamantspeer', 'Du\x20bist\x20bereit\x20einen\x20Drachen\x20zu\x20töten', 'Schaden:\x2017', 'Schaden\x20an\x20Gebäuden:\x205'], LANG[INV['AMETHYST_SPEAR']] = ['AmethystSpeer', 'Drachen\x20jagen\x20dir\x20keine\x20Angst\x20mehr\x20ein', 'Schaden:\x2018', 'Schaden\x20an\x20Gebäuden:\x206'], LANG[INV['SHOVEL']] = ['Steinschaufel', 'Grab\x20herum\x20um\x20Dreck,\x20Eis\x20und\x20Sand\x20zu\x20bekommen', 'Du\x20kannst\x20auch\x20Mineralien\x20bekommen', 'Schaden:\x202'], LANG[INV['SHOVEL_GOLD']] = ['Goldschaufel', 'Grab\x20herum\x20um\x20Dreck,\x20Eis\x20und\x20Sand\x20zu\x20bekommen', 'Du\x20kannst\x20auch\x20Mineralien\x20bekommen', 'Schaden:\x203', 'Schaden\x20an\x20Gebäuden:\x201'], LANG[INV['SHOVEL_DIAMOND']] = ['Diamantschaufel', 'Grab\x20herum\x20um\x20Dreck,\x20Eis\x20und\x20Sand\x20zu\x20bekommen', 'Du\x20kannst\x20auch\x20Mineralien\x20bekommen', 'Schaden:\x204', 'Schaden\x20an\x20Gebäuden:\x201'], LANG[INV['SHOVEL_AMETHYST']] = ['Amethystschaufel', 'Grab\x20herum\x20um\x20Dreck,\x20Eis\x20und\x20Sand\x20zu\x20bekommen', 'Du\x20kannst\x20auch\x20Mineralien\x20bekommen', 'Schaden:\x205', 'Schaden\x20an\x20Gebäuden:\x201'], LANG[INV['WOOD_HELMET']] = ['Holzhelm', 'Besser\x20als\x20nichts', 'Verteidigung\x20gegen\x20Spieler:\x201', 'Verteidigung\x20gegen\x20Tiere:\x204'], LANG[INV['STONE_HELMET']] = ['Steinhelm', 'Du\x20bist\x20bereit\x20zu\x20kämpfen!', 'Verteidigung\x20gegen\x20Spieler:\x202', 'Verteidigung\x20gegen\x20Tiere:\x208'], LANG[INV['GOLD_HELMET']] = ['Goldhelm', 'AKA\x20Der\x20Helm\x20der\x20Unbarmherzigen', 'Verteidigung\x20gegen\x20Spieler:\x204', 'Verteidigung\x20gegen\x20Tiere:\x2013'], LANG[INV['DIAMOND_HELMET']] = ['Diamanthelm', 'Gib\x20nicht\x20zu\x20viel\x20an', 'Verteidigung\x20gegen\x20Spieler:\x205', 'Verteidigung\x20gegen\x20Tiere:\x2019'], LANG[INV['AMETHYST_HELMET']] = ['Amethysthelm', 'Du\x20musst\x20vor\x20nichts\x20mehr\x20angst\x20haben', 'Verteidigung\x20gegen\x20Spieler:\x206', 'Verteidigung\x20gegen\x20Tiere:\x2023'], LANG[INV['DRAGON_HELMET']] = ['Drachenhelm', 'Du\x20wirst\x20die\x20Welt\x20erobern', 'Verteidigung\x20gegen\x20Spieler:\x208', 'Verteidigung\x20gegen\x20Tiere:\x2027'], LANG[INV['EXPLORER_HAT']] = ['Erkunderhut', 'Tiere\x20beachten\x20dich\x20nicht\x20mehr', 'mach\x20aber\x20keine\x20Geräusche!', 'Hält\x20dich\x20warm\x20außerhalb\x20von\x20Wasser\x20und\x20Winter'], LANG[INV['CHRISTMAS_HAT']] = ['Weihnachtshut', 'Oh,\x20oh,\x20oh,\x20fröhliche\x20Weihnachten', 'Hält\x20dich\x20warm\x20außerhalb\x20von\x20Wasser\x20und\x20Winter'], LANG[INV['ELF_HAT']] = ['Elfenhut', 'Lass\x20dich\x20nicht\x20ausnutzen,\x20du\x20kleiner\x20Schneeelf!', 'Hält\x20dich\x20warm\x20außerhalb\x20von\x20Wasser\x20und\x20Winter'], LANG[INV['HOOD']] = ['Kapuze', 'Du\x20bist\x20ein\x20Schurke', 'Du\x20kannst\x20jemand\x20bestehlen\x20solange:', '1)\x20Es\x20nacht\x20ist', '2)\x20Du\x20nichts\x20trägst', '3)\x20dich\x20niemand\x20für\x20acht\x20Sekunden\x20berührt\x20hat', '4)\x20Du\x20nicht\x20in\x20der\x20Nähe\x20eines\x20Feuers\x20bist', '5)\x20Dein\x20Ziel\x20keine\x20Bauernkleidung\x20trägt', 'Hält\x20dich\x20warm\x20außerhalb\x20von\x20Wasser\x20und\x20Winter'], LANG[INV['EARMUFFS']] = ['Ohrwärmer', 'Eine\x20Art\x20kleiner\x20chapka.', 'Hält\x20dich\x20warm\x20außerhalb\x20von\x20Wasser\x20und\x20Winter'], LANG[INV['COAT']] = ['Chapka', 'Auch\x20Mantel\x20genannt.', 'Hält\x20dich\x20warm\x20außerhalb\x20von\x20Wasser\x20und\x20Winter'], LANG[INV['CAP_SCARF']] = ['Winterschaal\x20und\x20Kappe', 'Sehr\x20angenehm', 'Sehr\x20Warm'], LANG[INV['PEASANT']] = ['Bauer', 'Deine\x20Pflanzen\x20wachsen\x20schneller', 'Hält\x20dich\x20warm\x20außerhalb\x20von\x20Wasser\x20und\x20Winter'], LANG[INV['WINTER_HOOD']] = ['Winterkapuze', 'Du\x20bist\x20ein\x20Wilder\x20Schurke', 'Du\x20kannst\x20jemand\x20bestehlen\x20solange:', '1)\x20Es\x20nacht\x20ist', '2)\x20Du\x20nichts\x20trägst', '3)\x20dich\x20niemand\x20für\x20vier\x20Sekunden\x20berührt\x20hat', '4)\x20Du\x20nicht\x20in\x20der\x20Nähe\x20eines\x20Feuers\x20bist', '5)\x20Dein\x20Ziel\x20keine\x20Winterbauernkleidung\x20trägt', 'Hält\x20dich\x20warm\x20außerhalb\x20von\x20Wasser\x20und\x20Winter'], LANG[INV['WINTER_PEASANT']] = ['Winterbauern', 'Deine\x20Pflanzen\x20wachsen\x20deutlich\x20schneller', 'Hält\x20dich\x20warm\x20außerhalb\x20von\x20Wasser\x20und\x20Winter'], LANG[INV['DIVING_MASK']] = ['Tauchermaske', 'Du\x20bist\x20schneller\x20im\x20Wasser', 'Hält\x20dich\x20warm\x20im\x20Wasser', 'Verteidigung\x20gegen\x20Spieler:\x202,\x20Verteidigung\x20gegen\x20Tiere:\x208'], LANG[INV['SUPER_DIVING_SUIT']] = ['Supertauchermaske', 'Du\x20bist\x20sehr\x20schnell\x20im\x20Wasser', 'Hält\x20dich\x20warm\x20im\x20Wasser', 'Verteidigung\x20gegen\x20Spieler:\x204,\x20Verteidigung\x20gegen\x20Tiere:\x2016'], LANG[INV['DRAGON_ORB']] = ['Drachenkugel', 'Erhalten\x20bei\x20abschließung\x20der\x20Quest'], LANG[INV['DRAGON_HEART']] = ['Drachenherz', 'Verwandelt\x20dich\x20in\x20einen\x20Geist,\x20sobald\x20du\x20stirbst!', 'Du\x20bist\x20für\x2060\x20Sekunden\x20ein\x20Geist', 'Finde\x20ein\x20Wiederbelebungsstein.'], LANG[INV['GEMME_GREEN']] = ['Grüner\x20Edelstein', 'Du\x20hast\x20nicht\x20gemogelt,\x20versprochen?'], LANG[INV['GEMME_ORANGE']] = ['Orangener\x20Edelstein', 'Nur\x20ein\x20echter\x20Pirat\x20findet\x20ihn!'], LANG[INV['GEMME_BLUE']] = ['Blauer\x20Edelstein', 'Für\x20sehr\x20nette\x20Leute'], LANG[INV['CROWN_GREEN']] = ['Grüne\x20Krone', 'Du\x20heilst\x20dich\x20selbst\x20sehr\x20schnell', 'Heilung\x20über\x20Zeit:\x2040', 'Verteidigung\x20gegen\x20Spieler:\x204,\x20Verteidigung\x20gegen\x20Tiere:\x2016'], LANG[INV['CROWN_ORANGE']] = ['Orangene\x20Krone', 'Du\x20fühlst\x20dich\x20plötzlich\x20als\x20hättest\x20du\x20mehr\x20Glück', 'Verteidigung\x20gegen\x20Spieler:\x204,\x20Verteidigung\x20gegen\x20Tiere:\x2016'], LANG[INV['CROWN_BLUE']] = ['Blaue\x20Krone', 'Sobald\x20du\x20stirbst\x20wirst\x20du\x20ein\x20Geist', 'Du\x20wirst\x20allerdings\x20dein\x20Schwert\x20und\x20deine\x20Spitzhacke\x20verlieren', 'Verteidigung\x20gegen\x20Spieler:\x204,\x20Verteidigung\x20gegen\x20Tiere:\x2016'], LANG[INV['BUCKET_FULL']] = ['Eimer', 'Nützlich\x20um\x20einen\x20Brunnen\x20zu\x20füllen', 'Ein\x20Eimer\x20ist\x20vergleichbar\x20mit\x20zwölf\x20Flaschen'], LANG[INV['BUCKET_EMPTY']] = ['Leerer\x20Eimer', 'Du\x20musst\x20den\x20Eimer\x20in\x20der\x20Nähe\x20einer\x20Wasserquelle\x20füllen'], LANG[INV['BOTTLE_FULL']] = ['Flasche', 'Erlaubt\x20dir\x20überall\x20Wasser\x20zu\x20trinken', 'Wasser:\x2050'], LANG[INV['BOTTLE_EMPTY']] = ['Leere\x20Flasche', 'Du\x20musst\x20die\x20Flasche\x20in\x20der\x20Nähe\x20einer\x20Wasserquelle\x20füllen'], LANG[INV['WATERING_CAN']] = ['Leere\x20Gießkanne', 'Du\x20musst\x20es\x20mit\x20einer\x20Wasserquelle\x20füllen'], LANG[INV['WATERING_CAN_FULL']] = ['Gießkanne', 'Erlaubt\x20das\x20wässern\x20von\x20Pflanzen', 'Schaden:\x201'], LANG[INV['BAG']] = ['Rucksack', 'Mehr\x20Platz\x20im\x20Inventar!'], LANG[INV['PAPER']] = ['Papier', 'Wird\x20fürs\x20Büchermachen\x20verwendet'], LANG[INV['BOOK']] = ['Buch', 'Reduziert\x20die\x20benötigte\x20Zeit\x20beim\x20herstellen\x20von\x20Gegenständen', 'Muss\x20in\x20der\x20Hand\x20gehalten\x20werden\x20um\x20den\x20Effekt\x20zu\x20nutzen', 'Schaden:\x201'], LANG[INV['BANDAGE']] = ['Verband', 'Heile\x20dich\x20schneller', 'Heilung\x20über\x20Zeit:\x2030', 'Effekt:\x205'], LANG[INV['LOCK']] = ['Schloss', 'Erlaubt\x20dir\x20deine\x20Truhe\x20zu\x20verschließen'], LANG[INV['LOCKPICK']] = ['Dietrich', 'Erlaubt\x20dir\x20eine\x20verschlossene\x20Truhe\x20zu\x20öffnen'], LANG[INV['TOTEM']] = ['Totem', 'Erlaubt\x20dir\x20ein\x20Team\x20zu\x20gründen', 'Teile\x20Türen\x20und\x20Truhen', 'verletzende\x20Strukturen\x20schaden\x20deinen\x20Freunden\x20nicht\x20mehr'], LANG[INV['BRIDGE']] = ['Brücke', 'Sehr\x20nützlich\x20über\x20Wasser', 'Es\x20erlaubt\x20dir\x20zu\x20trinken\x20ohne\x20zu\x20ertrinken', 'lässt\x20dich\x20schneller\x20auf\x20dem\x20Wasser\x20laufen'], LANG[INV['SIGN']] = ['Schild', 'Hinterlasse\x20eine\x20Nachricht\x20für\x20andere\x20hier', 'Haltbarkeit:\x20200'], LANG[INV['ROOF']] = ['Dach', 'Versteckt\x20dich\x20ein\x20wenig\x20und\x20hält\x20warm\x20dabei!'], LANG[INV['WELL']] = ['Brunnen', 'Erlaubt\x20dir\x20deine\x20Flasche\x20zu\x20füllen,\x20eine\x20mobile\x20Wasserquelle', 'Haltbarkeit:\x201000'], LANG[INV['WALL']] = ['Holzwand', 'Kennst\x20du\x20den\x20Wandtanz?', 'Haltbarkeit:\x201000'], LANG[INV['STONE_WALL']] = ['Steinwand', 'Es\x20sieht\x20ein\x20wenig\x20Ernsthafter\x20aus.', 'Haltbarkeit:\x201500'], LANG[INV['GOLD_WALL']] = ['Goldwand', 'Gold\x20an\x20deiner\x20Wand?\x20Es\x20leuchtet\x20ein\x20wenig.', 'Haltbarkeit:\x202000'], LANG[INV['DIAMOND_WALL']] = ['Diamantwand', 'So\x20leuchtend,\x20pass\x20auf\x20deine\x20Augen\x20auf', 'Haltbarkeit:\x202500'], LANG[INV['AMETHYST_WALL']] = ['Amethystwand', 'Du\x20musst\x20dich\x20wirklich\x20fürchten\x20raus\x20zu\x20gehen!', 'Haltbarkeit:\x203000'], LANG[INV['SPIKE']] = ['Holzstacheln', 'Kann\x20deine\x20Gegner\x20verletzen', 'Schaden:\x2010,\x20Schaden\x20beim\x20Angreifen:\x202', 'Haltbarkeit:\x20150'], LANG[INV['STONE_SPIKE']] = ['Steinstacheln', 'Ich\x20würde\x20lieber\x20nicht\x20dein\x20Gegner\x20sein.', 'Schaden:\x2020', 'Schaden\x20beim\x20Angreifen:\x203', 'Haltbarkeit:\x20300'], LANG[INV['GOLD_SPIKE']] = ['Goldstacheln', 'Du\x20bist\x20grausam.', 'Schaden:\x2030', 'Schaden\x20beim\x20Angreifen:\x203', 'Haltbarkeit:\x20600'], LANG[INV['DIAMOND_SPIKE']] = ['Diamantstacheln', 'Du\x20magst\x20Gesellschaft\x20nicht.', 'Schaden:\x2040', 'Schaden\x20beim\x20Angreifen:\x204', 'Haltbarkeit:\x201200'], LANG[INV['AMETHYST_SPIKE']] = ['Amethyststacheln', 'Was\x20zur\x20Hölle\x20haben\x20deine\x20Nachbarn\x20dir\x20angetan?', 'Schaden:\x2050', 'Schaden\x20beim\x20Angreifen:\x204', 'Haltbarkeit:\x202400'], LANG[INV['WOOD_DOOR']] = ['Holztür', 'Kann\x20von\x20dir\x20oder\x20deinen\x20Freunden\x20geöffnet\x20werden', 'Haltbarkeit:\x201000'], LANG[INV['STONE_DOOR']] = ['Steintür', 'Eine\x20stärkere\x20Tür\x20ist\x20ernsthafter', 'Haltbarkeit:\x201500'], LANG[INV['GOLD_DOOR']] = ['Goldtür', 'Baust\x20du\x20el\x20dorado?', 'Haltbarkeit:\x202000'], LANG[INV['DIAMOND_DOOR']] = ['Diamanttür', 'Für\x20ein\x20scheinendes\x20Haus', 'Haltbarkeit:\x202500'], LANG[INV['AMETHYST_DOOR']] = ['Amethysttür', 'Ist\x20dein\x20Haus\x20ein\x20verschlossener\x20Safe?', 'Haltbarkeit:\x203500'], LANG[INV['FURNACE']] = ['Ofen', 'Wärmt\x20dich', 'Es\x20verbraucht\x20alle\x205\x20Sekunden\x20eine\x20Einheit\x20Holz', 'Haltbarkeit:\x201000'], LANG[INV['WINDMILL']] = ['Windmühle', 'Kann\x20mit\x20Weizen,\x20Mehl\x20herstellen', 'Es\x20braucht\x205\x20Sekunden\x20um\x20Mehl\x20herzustellen', 'Gibt\x20dir\x20Punkte\x20während\x20es\x20arbeitet', 'Haltbarkeit:\x202000'], LANG[INV['BREAD_OVEN']] = ['Brotofen', 'Erlaubt\x20dir\x20mit\x20Mehl,\x20Brot\x20herzustellen', 'Es\x20braucht\x205\x20Sekunden\x20um\x20Brot\x20herzustellen', 'Gibt\x20dir\x20Punkte\x20während\x20es\x20arbeitet', 'Haltbarkeit:\x202000'], LANG[INV['RESURRECTION']] = ['Wiederbelebungsstein', 'Es\x20ist\x20Magie', 'Wiederbelebt\x20dich,\x20wenn\x20du\x20ein\x20Geist\x20bist', 'Du\x20wirst\x20deine\x20Waffe\x20und\x20Spitzhacke\x20verlieren', 'Haltbarkeit:\x20200'], LANG[TEXT['YOU_CANNOT_JOIN']] = 'Du\x20kannst\x20diesem\x20Server\x20nicht\x20beitreten', LANG[TEXT['KICKED']] = 'Gekickt:\x20', LANG[TEXT['KEY_ALREADY']] = 'Dein\x20Schlüssel\x20wurde\x20bereits\x20von\x20jemand\x20anderem\x20benutzt', LANG[TEXT['KEY_WRONG']] = 'Dein\x20Schlüssel\x20ist\x20falsch', LANG[TEXT['OLD_VERSION']] = 'Deine\x20Version\x20ist\x20veraltet,\x20säubere\x20dein\x20Cache', LANG[TEXT['NO_MORE_RESOURCES']] = 'Es\x20gibt\x20keine\x20neuen\x20Ressourcen', LANG[TEXT['SURVIVED_1DAY']] = 'Du\x20hast\x20einen\x20Tag\x20überlebt', LANG[TEXT['SURVIVED']] = 'Du\x20hast\x20überlebt\x20', LANG[TEXT['DAYS']] = '\x20Tage', LANG[TEXT['DEAD_SAD']] = 'Du\x20bist\x20gestorben\x20;-;', LANG[TEXT['SPAM_ME']] = 'Server\x20kann\x20kein\x20Spawnplatz\x20finden!\x20Drücke\x20immer\x20wieder\x20auf\x20spielen!', LANG[TEXT['SPAM_ME2']] = 'Server\x20ist\x20voll!\x20Drücke\x20immer\x20wieder\x20auf\x20spielen!', LANG[TEXT['EMPTY']] = 'Ressource\x20ist\x20leer', LANG[TEXT['INV_FULL']] = 'Dein\x20Inventar\x20ist\x20voll\x20(rechts-klick\x20um\x20Gegenstände\x20zu\x20entfernen)', LANG[TEXT['DEAD']] = '\x20ist\x20gestorben', LANG[TEXT['WRONG_TOOL']] = 'Das\x20ist\x20nicht\x20das\x20richtige\x20Werkzeug', LANG[TEXT['JOIN_TEAM']] = 'Du\x20bist\x20einem\x20Team\x20beigetreten', LANG[TEXT['YOU_DEAD']] = 'Du\x20bist\x20gestorben', LANG[TEXT['JOINED_TEAM']] = '\x20ist\x20dem\x20Team\x20beigetreten', LANG[TEXT['TEAM_DESTROYED']] = 'Dein\x20Team\x20wurde\x20zerstört', LANG[TEXT['LEFT_TEAM']] = 'Du\x20hast\x20das\x20Team\x20verlassen', LANG[TEXT['LEFT_TEAM2']] = '\x20hat\x20das\x20Team\x20verlassen', LANG[TEXT['TOKEN']] = 'Jemand\x20hat\x20dein\x20Token\x20gestohlen\x20:>', LANG[TEXT['CHOOSE']] = 'Suche\x20dir\x20ein\x20Server\x20aus', LANG[TEXT['PLAYERS']] = 'Spieler', LANG[TEXT['TOTAL_PLAYERS']] = 'alle\x20Spieler', LANG[TEXT['TOTAL_MODE']] = 'Spieler\x20in\x20diesem\x20Modus', LANG[TEXT['COMMING_SOON']] = 'Bald\x20verfügbar...', document['getElementById']('nickname_input')['placeholder'] = 'Spitzname', DIE[0x0] = ['Du\x20wurdest\x20ohne\x20Grund\x20getötet'], DIE[0x1] = ['Du\x20bist\x20verhungert,\x20wie\x20der\x20Name\x20des\x20Spiels\x20andeutet'], DIE[0x2] = ['Du\x20bist\x20erfroren.\x20Zu\x20schade', 'Du\x20bist\x20an\x20Unterkühlung\x20gestorben.\x20Versuche\x20nächstes\x20Mal\x20zu\x20einem\x20Feuer\x20zu\x20gehen\x20.'], DIE[0x3] = ['Ein\x20Spieler\x20hat\x20dich\x20getötet,\x20während\x20er\x20dir\x20gesagt\x20hat\x20\x27git\x20gud.\x27', 'Du\x20wurdest\x20von\x20einem\x20Spieler\x20ermordet,\x20mach\x20dir\x20keine\x20Sorgen,\x20er\x20wird\x20wahrscheinlich\x20auch\x20sterben\x20.'], DIE[0x4] = ['Du\x20bist\x20zu\x20nah\x20ans\x20Feuer\x20gegangen\x20und\x20zu\x20tode\x20gebrannt.\x20Schlechte\x20Idee.', 'Du\x20wurdest\x20von\x20einem\x20Feuer\x20umgebracht.\x20Feuer\x20tut\x20weh.\x20Schreib\x20eine\x20Geschichte\x20darüber.'], DIE[0x5] = ['Dein\x20Körper\x20wird\x20zu\x20einem\x20Spinnennest', 'Eine\x20Spinne\x20hat\x20dich\x20getötet.\x20Zumindest\x20war\x20es\x20kein\x20Hase.'], DIE[0x6] = ['Dieser\x20Wolf\x20wird\x20nicht\x20mehr\x20verhungern', 'Sie\x20sind\x20keine\x20Hunde.\x20Wölfe\x20mögen\x20es\x20nicht\x20gestreichelt\x20zu\x20werden.'], DIE[0x7] = ['Der\x20Fuchs\x20war\x20zu\x20schnell\x20für\x20dich', 'Der\x20Fuchs\x20hat\x20dich\x20in\x20eine\x20Box\x20verwandelt.\x20Seit\x20wann\x20haben\x20Tiere\x20magische\x20Kräfte?'], DIE[0x8] = ['Der\x20Bär\x20wollte\x20nur\x20eine\x20Umarmung.', 'Der\x20Bär\x20war\x20zu\x20viel\x20zu\x20ertragen.\x20Es\x20tut\x20mir\x20nicht\x20leid.'], DIE[0x9] = ['Du\x20wurdest\x20von\x20einem\x20Drachen\x20knusprig\x20gebraten.\x20Zu\x20schade.', 'Du\x20wurdest\x20von\x20einem\x20Drachen\x20erdrückt.\x20Zerquetscht\x20zu\x20werden\x20ist\x20ein\x20schrecklicher\x20Weg\x20zu\x20sterben.'], DIE[0xa] = ['Du\x20bist\x20in\x20eine\x20Stachelwand\x20gesprungen.\x20Keine\x20gute\x20Idee...', 'Du\x20wurdest\x20von\x20einer\x20Stachelwand\x20getötet.\x20Die\x20meisten\x20Leute\x20sind\x20sensibel\x20genug\x20keine\x20spitzen\x20Sachen\x20anzufassen.'], DIE[0xb] = ['Sogar\x20Geister\x20können\x20sterben.', 'Du\x20hast\x20es\x20nicht\x20geschafft\x20wiederbelebt\x20zu\x20werden.\x20Das\x20ist\x20ein\x20Spiel,\x20also\x20lebst\x20du\x20nachdem\x20du\x20stirbst...'], DIE[0xc] = ['Ein\x20Bakterium\x20von\x20deinem\x20rohen\x20Fleisch\x20hat\x20dich\x20getötet.\x20Das\x20Spiel\x20ist\x20definitiv\x20zu\x20schwierig.', 'Du\x20hast\x20das\x20rohe\x20Fleisch\x20getötet.\x20Es\x20hat\x20dich\x20ebenfalls\x20getötet.'], DIE[0xd] = ['Du\x20bist\x20verdurstet.\x20Solltest\x20lieber\x20deinen\x20eigenen\x20Urin\x20trinken.'], DIE[0xe] = ['Wusstest\x20du,\x20dass\x20dein\x20Mund\x20beim\x20Schwimmen\x20immer\x20unterm\x20Wasser\x20ist?\x20Jetzt\x20weißt\x20du\x20es.'], DIE[0xf] = ['Mach\x20dir\x20keine\x20Sorge,\x20der\x20Piranha\x20findet\x20dich\x20lecker.', 'Nebenbei:\x20Piranhas\x20essen\x20Menschen.\x20Dich\x20mit\x20eingeschlossen.'], DIE[0x10] = ['LapaMauve\x20plant\x20nicht,\x20dass\x20du\x20den\x20Kraken\x20töten\x20kannst', 'Ein\x20Kraken\x20hat\x20deinen\x20Schädel\x20zertrümmert.'], DIE[0x11] = ['Deine\x20Haut\x20fällt\x20auseinander,\x20die\x20Sonne\x20hat\x20dich\x20umgebracht.'], DIE[0x12] = ['Knoblauch\x20in\x20deiner\x20Tasche\x20hat\x20dein\x20Gehirn\x20gebraten\x20'], DIE[0x13] = ['Stehe\x20als\x20ein\x20Vampir\x20nicht\x20neben\x20den\x20Knoblauchnelken.'], DIE[0x14] = ['Du\x20hast\x20als\x20ein\x20Vampir\x20Knoblauch\x20gegessen,\x20was\x20hast\x20du\x20erwartet?'], DIE[0x15] = ['Dein\x20Körper\x20ist\x20von\x20einem\x20Dornenbusch\x20umgeben.Während\x20du\x20versuchst\x20zu\x20entkommen\x20löst\x20sich\x20deine\x20Haut\x20von\x20deinem\x20Körper\x20und\x20dein\x20Herz\x20hört\x20auf\x20zu\x20schlagen.'], ZOMBIE_GRUMBLE = 'Uuunnnggg', ZOMBIE_GRUMBLES = ['Uuunnnggg...Ich\x20verhungere...', 'Brauche\x20dein\x20Gehirn...\x20Uuunnnggg...', 'Hier\x20gibt\x20es\x20frisches\x20Fleisch...\x20Uuunnnggg', 'Uuunnnggg...Du\x20bist\x20lecker', 'Uuunnnggg...', 'Essen...\x20uuunnnggg...', 'Ich\x20rieche\x20Blut...\x20Uuunnnggg'];
    },
    set_polish = function() {
        LANG[INV['DRAGON_CUBE']] = ['You\x20feel\x20a\x20great\x20power\x20emanating\x20from\x20this\x20orb'], DIE[0x16] = ['This\x20crab,\x20though\x20frightening\x20in\x20nature,\x20pinched\x20your\x20fingertips\x20so\x20hard\x20that\x20you\x20had\x20a\x20heart\x20attack.'], LANG[INV['CRAB_STICK']] = ['Crab\x20sticks', 'Oh,\x20yeah?\x20Is\x20there\x20crab\x20in\x20the\x20crab\x20sticks?', 'Food:\x2020'], LANG[TEXT['BACK_TO_THE_GAME']] = '\x20BACK\x20TO\x20THE\x20GAME', LANG[TEXT['TWITTER']] = '\x20Share\x20on\x20Twitter', LANG[TEXT['FACEBOOK']] = '\x20Share\x20on\x20Facebook', LANG[TEXT['KIT_NEXT']] = 'You\x20can\x20buy\x20items\x20on\x20the\x20shop\x20in\x20the\x20next\x20game\x20with\x20your\x20points', LANG[TEXT['POINTS']] = 'points', LANG[TEXT['SCORE']] = 'Score', LANG[TEXT['KILL']] = 'Kill', LANG[TEXT['DAYS_SURVIVED']] = 'Days\x20survived', LANG[TEXT['MODE_FREE']] = 'Building\x20method:\x20Free.\x20Press\x20G\x20to\x20change', LANG[TEXT['MODE_GRID']] = 'Building\x20method:\x20Grid.\x20Press\x20G\x20to\x20change', LANG[INV['CRAB_LOOT']] = ['Crab\x20Claw', 'Crab\x20claws\x20can\x20also\x20be\x20eaten', 'Food:\x2010'], LANG[INV['CRAB_SPEAR']] = ['Crab\x20Spear', 'Allow\x20you\x20to\x20calm\x20crabs,\x20and\x20heal\x20them', 'Damage:\x2014', 'Building\x20Damage:\x204'], LANG[INV['CROWN_CRAB']] = ['Crab\x20Helmet', 'You\x20are\x20the\x20king\x20of\x20crabs!', 'Crabs\x20follow\x20you', 'They\x20can\x27t\x20hit\x20you\x20and\x20you\x20can\x27t\x20hit\x20them', 'Players\x20Defense:\x204', 'Animals\x20Defense:\x2013'], LANG[INV['BED']] = ['Bed', 'Relax\x20in\x20this\x20confortable\x20bed', 'You\x20are\x20less\x20cold,\x20less\x20thirsty,\x20and\x20less\x20hungry', 'You\x20will\x20be\x20cured\x20faster', 'Durability:\x20400'], document['getElementById']('typequest')['innerHTML'] = 'Chrono\x20Quests', document['getElementById']('timeremainingquest')['innerHTML'] = 'Time\x20Remaining', document['getElementById']('constraintquest')['innerHTML'] = '\x20Constraints', document['getElementById']('claim_rewards')['innerHTML'] = '\x20Claim\x20rewards', document['getElementById']('rewardquest')['innerHTML'] = '\x20Reward', document['getElementById']('killdragon_1')['innerHTML'] = '\x20Collect\x201\x20dragon\x20heart', document['getElementById']('amethyst_2')['innerHTML'] = '\x20Gather\x201\x20amethyst', document['getElementById']('survive20min_3')['innerHTML'] = 'Survive\x20without\x20losing\x20life', document['getElementById']('treasure_chest_4')['innerHTML'] = '\x20Open\x205\x20treasure\x20chests', document['getElementById']('dont_hit_5')['innerHTML'] = '\x20Be\x20peaceful', document['getElementById']('bread_6')['innerHTML'] = '\x20Collect\x20100\x20bread\x20in\x20deep\x20winter', document['getElementById']('winter_7')['innerHTML'] = '\x20After\x201\x20day,\x20survive\x20in\x20winter';
        for (var _0xaaa38a = 0x0; _0xaaa38a < 0x7; _0xaaa38a++) document['getElementById']('claim_reward_' + _0xaaa38a)['innerHTML'] = 'CLAIM\x20REWARD!';
        document['getElementById']('quit_chronoquest')['innerHTML'] = '\x20QUIT', LANG[INV['HAND']] = ['Ręka'], LANG[INV['GROUND']] = ['Ziemia', 'Brudna!'], LANG[INV['SAND']] = ['Piasek', 'Mam\x20go\x20w\x20oczach!'], LANG[INV['WOOD']] = ['Drewno', 'Nie\x20możesz\x20mieć\x20go\x20wystarczająco!'], LANG[INV['STONE']] = ['Kamień', 'Także\x20nazywany\x20skałą'], LANG[INV['GOLD']] = ['Złoto', 'Bądź\x20hojny,\x20daj\x20trochę\x20innym'], LANG[INV['DIAMOND']] = ['Diament', 'Co\x20z\x20nim\x20zrobisz?'], LANG[INV['AMETHYST']] = ['Ametyst', 'Jest\x20Fiołkowy\x20jak\x20Lapa'], LANG[INV['FLOUR']] = ['Mąka', 'Używana\x20w\x20gotowaniu'], LANG[INV['COOKIE']] = ['Ciastko', 'Przepyszne\x20ciasteczko\x20od\x20babci', 'Jedzenie:\x2050'], LANG[INV['CAKE']] = ['Ciasto', 'Raj\x20dla\x20smakoszy', 'Jedzenie:\x20100'], LANG[INV['MEAT']] = ['Surowe\x20mięso', 'Możesz\x20je\x20upiec\x20w\x20ogniu', 'Powoduje\x20zatrucie\x20pokarmowe:\x2010', 'Jedzenie:\x2015'], LANG[INV['COOKED_MEAT']] = ['Pieczone\x20mięso', 'Krwisty\x20stek,\x20proszę', 'Jedzenie:\x2035'], LANG[INV['FOODFISH']] = ['Surowa\x20ryba', 'Myślę,\x20że\x20nadal\x20jest\x20żywa', 'Powoduje\x20zatrucie\x20pokarmowe:\x2010', 'Jedzenie:\x2018'], LANG[INV['FOODFISH_COOKED']] = ['Pieczona\x20ryba', 'Z\x20cytryną\x20jest\x20idealna', '\x20Jedzenie:\x2035'], LANG[INV['BREAD']] = ['Chleb', 'Świetny\x20Francuski\x20chleb', 'Jest\x20walutą\x20używaną\x20w\x20markecie', 'Jedzenie:\x2015'], LANG[INV['SANDWICH']] = ['Kanapka', 'Smakuje\x20jak\x20kraboburger', 'Jedzenie:\x20100'], LANG[INV['CANDY']] = ['Cukierki', 'Tylko\x20dla\x20dzieci!', 'Jedzenie:\x20100'], LANG[INV['SUGAR_CAN']] = ['Laska\x20cukrowa', 'Spróbuj,\x20jest\x20przepyszna', 'Jedzenie:\x20100'], LANG[INV['GARLAND']] = ['Girlanda', 'Idealna\x20do\x20dekorowania\x20dachów'], LANG[INV['SEED']] = ['Nasionko\x20jagody', 'Wyrośnie\x20w\x20jagody', 'Narodziny:\x202min', 'Rośnięcie:\x2055s', 'Podlewanie:\x203min\x2020s', 'Wytrzymałość:\x20700', 'Czas\x20życia:\x208\x20dni'], LANG[INV['PLANT']] = ['Jagody', 'Jagody\x20są\x20pyszne!', 'Jedzenie:\x2010'], LANG[INV['WHEAT_SEED']] = ['Nasiono\x20pszenicy', 'Wyrośnie\x20w\x20pszenicę', 'Narodziny:\x202min', 'Rośnięcie:\x2016s', 'Podlewanie:\x202min', 'Wytrzymałość:\x20700', 'Czas\x20życia:\x208\x20dni'], LANG[INV['WILD_WHEAT']] = ['Pszenica', 'Zamienia\x20się\x20w\x20mąkę\x20jeżeli\x20wrzucisz\x20ją\x20do\x20wiatraka'], LANG[INV['PUMPKIN_SEED']] = ['Nasiono\x20dyni', 'Wyrośnie\x20w\x20dynię', 'Narodziny:\x202min\x2040s', 'Rośnięcie:\x202min', 'Podlewanie:\x202min', 'Wytrzymałość:\x20700', 'Czas\x20życia:\x208\x20dni'], LANG[INV['PUMPKIN']] = ['Dynia', 'Przypomina\x20mi\x20o\x20Halloween', 'Jedzenie:\x2030'], LANG[INV['GARLIC_SEED']] = ['Nasionko\x20czosnku', 'Bardzo\x20niebezpieczne\x20dla\x20wampirów', 'Obrażenia:\x2020', 'Narodziny:\x204min', 'Rośnięcie:\x201min\x2010s', 'Podlewanie:\x201min\x2040s', 'Wytrzymałość:\x20700', 'Czas\x20życia:\x208\x20dni'], LANG[INV['GARLIC']] = ['Czosnek', 'Leczy\x20cię\x20i\x20redukuje\x20zimno', 'Jedzenie:\x2014', 'Uzdrawia\x20z\x20biegiem\x20czasu:\x2030', 'Efekt:\x201'], LANG[INV['THORNBUSH_SEED']] = ['Nasiono\x20kolczastego\x20krzewu', 'Może\x20zranić\x20twoich\x20wrogów', 'Obrażenia:\x2020', 'Narodziny:\x204min', 'Rośnięcie:\x2015s', 'Podlewanie:\x203min', 'Wytrzymałość:\x201000', 'Czas\x20życia:\x208\x20dni'], LANG[INV['THORNBUSH']] = ['Kolczasty\x20krzew', 'Kłuje!'], LANG[INV['PLOT']] = ['Donica', 'Naprawdę,\x20użyj\x20jej', 'Z\x20tym\x20genetycznie\x20modyfikowanym\x20nawozem,\x20twoje\x20rośliny', 'będą\x20rosły\x20znacznie\x20szybciej\x20i\x20będą\x20potrzebować\x20mniej\x20wody', 'Wytrzymałość:\x202000'], LANG[INV['ICE']] = ['Lód', 'Użyteczny\x20do\x20robienia\x20ciast\x20i\x20wody'], LANG[INV['SPANNER']] = ['Klucz\x20mechaniczny', 'Do\x20naprawiania\x20drzwi\x20i\x20kolców', 'Uszkodzenie:\x202'], LANG[INV['FUR_WOLF']] = ['Wilcza\x20skóra', 'Szczeniaczek?\x20Ale\x20gdzie\x20jest\x20szczeniaczek?!'], LANG[INV['FUR']] = ['Skóra\x20królika', 'Ten\x20królik\x20był\x20taki\x20słodziutki...'], LANG[INV['SPECIAL_FUR']] = ['Skóra', 'Jesteś\x20fabryką\x20chleba'], LANG[INV['SPECIAL_FUR_2']] = ['Ciemna\x20skóra', 'Byłeś\x20gotowy\x20zrobić\x20coś\x20złego'], LANG[INV['FUR_WINTER']] = ['Zimowa\x20skóra', 'Te\x20zwierzęta\x20chciały\x20się\x20tylko\x20przytulić...'], LANG[INV['SCALES']] = ['Łuski', 'Pachnie\x20jak\x20ryba!'], LANG[INV['KRAKEN_SKIN']] = ['Skóra\x20krakena', 'Nie\x20byłeś\x20zbyt\x20przestraszony?'], LANG[INV['FIRE']] = ['Ognisko', 'Ociepli\x20cię!', 'Wytrzymałość:\x20150', 'Czas\x20życia:\x202min'], LANG[INV['BIG_FIRE']] = ['Duże\x20ognisko', 'Ociepli\x20cię\x20na\x20dłużej!', 'Wytrzymałość:\x20400', 'Czas\x20życia:\x206min'], LANG[INV['WORKBENCH']] = ['Stół\x20rzemieślniczy', 'Użyteczny\x20do\x20stwarzania\x20przedmiotów'], LANG[INV['CORD']] = ['Nić', 'Używany\x20w\x20tworzeniu\x20czapek\x20i\x20plecaków'], LANG[INV['BLUE_CORD']] = ['Diamentowa\x20nić', 'Używana\x20w\x20tworzeniu\x20specjalnych\x20czapek'], LANG[INV['CHEST']] = ['Skrzynia', 'Pozwala\x20ci\x20na\x20przechowywanie\x20przedmiotów', 'Wytrzymałość:\x20500'], LANG[INV['SWORD_WOOD']] = ['Drewniany\x20miecz', 'To\x20coś\x20działa?', 'Obrażenia:\x2012', 'Obrażenia\x20do\x20budowli:\x204'], LANG[INV['SWORD']] = ['Kamienny\x20miecz', 'Bądź\x20miły\x20dla\x20innych', 'Obrażenia:\x2019', 'Obrażenia\x20do\x20budowli:\x206'], LANG[INV['SWORD_GOLD']] = ['Złoty\x20miecz', 'Król\x20lasu', 'Obrażenia:\x2022', 'Obrażenia\x20do\x20budowli:\x207'], LANG[INV['SWORD_DIAMOND']] = ['Diamentowy\x20miecz', 'Możesz\x20poczuć\x20moc', 'Obrażenia:\x2024', 'Obrażenia\x20do\x20budowli:\x208'], LANG[INV['PIRATE_SWORD']] = ['Piracki\x20miecz', 'Ayyyyy!', 'Dłuższy\x20niż\x20zwykły\x20miecz', 'Obrażenia:\x2024', 'Obrażenia\x20do\x20budowli:\x208'], LANG[INV['SWORD_AMETHYST']] = ['Ametystowy\x20miecz', 'fiołkowy\x20to\x20najpiękniejszy\x20kolor\x20na\x20świecie', 'Damage:\x2027', 'Obrażenia\x20do\x20budowli:\x209'], LANG[INV['DRAGON_SWORD']] = ['Smoczy\x20miecz', 'Bez\x20litości!', 'Obrażenia:\x2030', 'Obrażenia\x20do\x20budowli:\x2010'], LANG[INV['DRAGON_SPEAR']] = ['Smocza\x20włócznia', 'Zabij\x20ich\x20wszystkich!', 'Obrażenia:\x2022', 'Obrażenia\x20do\x20budowli:\x206'], LANG[INV['PICK_WOOD']] = ['Drewniany\x20kilof', 'Może\x20wydobywać\x20tylko\x20kamienie\x20i\x20drewno', 'Obrażenia:\x201'], LANG[INV['PICK']] = ['Kamienny\x20kilof', 'Może\x20wydobywać\x20drewno,\x20kamienie\x20i\x20złoto', 'Obrażenia:\x202'], LANG[INV['PICK_GOLD']] = ['Złoty\x20kilof', 'Może\x20także\x20wydobywać\x20diamenty', 'Obrażenia:\x203', 'Obrażenia\x20do\x20budowli:\x201'], LANG[INV['PICK_DIAMOND']] = ['Diamentowy\x20kilof', 'Może\x20wydobywać\x20wszystko', 'Obrażenia:\x204', 'Obrażenia\x20do\x20budowli:\x201'], LANG[INV['PICK_AMETHYST']] = ['Ametystowy\x20kilof', 'Może\x20wydobywać\x20wszystko.\x20Wygląda\x20fantastycznie!', 'Obrażenia:\x205', 'Obrażenia\x20do\x20budowli:\x201'], LANG[INV['HAMMER']] = ['Kamienny\x20młot', 'Pomocny\x20w\x20niszczeniu\x20budowli', 'Nie\x20działa\x20najlepiej\x20na\x20ametyście', 'Obrażenia:\x202', 'Obrażenia\x20do\x20budowli:\x2020'], LANG[INV['HAMMER_GOLD']] = ['Złoty\x20młot', 'Pomocny\x20w\x20niszczeniu\x20budowli', 'Nie\x20działa\x20najlepiej\x20na\x20ametyście', 'Obrażenia:\x203', 'Obrażenia\x20do\x20budowli:\x2030'], LANG[INV['HAMMER_DIAMOND']] = ['Diamentowy\x20młot', 'Pomocny\x20w\x20niszczeniu\x20budowli', 'Obrażenia:\x204', 'Obrażenia\x20do\x20budowli:\x2040'], LANG[INV['HAMMER_AMETHYST']] = ['Ametystowy\x20młot', 'Pomocny\x20w\x20niszczeniu\x20budowli', 'Obrażenia:\x205', 'Obrażenia\x20do\x20budowli:\x2050'], LANG[INV['SUPER_HAMMER']] = ['Super\x20młot', 'Miałeś\x20kiedyś\x20plan\x20zniszczenia\x20świata?', 'Obrażenia:\x2012', 'Obrażenia\x20do\x20budowli:\x2070'], LANG[INV['WOOD_SPEAR']] = ['Drewniana\x20włócznia', 'Jak\x20patyk,\x20ale\x20kłuje.', 'Obrażenia:\x2010', 'Obrażenia\x20do\x20budowli:\x202'], LANG[INV['SPEAR']] = ['Kamienna\x20włócznia', 'Początek\x20ewolucji!', 'Obrażenia:\x2014', 'Obrażenia\x20do\x20budowli:\x204'], LANG[INV['GOLD_SPEAR']] = ['Złota\x20włócznia', 'Uważaj,\x20kłuje!', 'Obrażenia:\x2015', 'Obrażenia\x20do\x20budowli:\x205'], LANG[INV['DIAMOND_SPEAR']] = ['Diamentowa\x20włócznia', 'Jesteś\x20gotowy,\x20aby\x20zabić\x20smoka', 'Obrażenia:\x2017', 'Obrażenia\x20do\x20budowli:\x205'], LANG[INV['AMETHYST_SPEAR']] = ['Ametystowa\x20włócznia', 'Smoki\x20już\x20nie\x20są\x20dla\x20ciebie\x20zagrożeniem', 'Obrażenia:\x2018', 'Obrażenia\x20do\x20budowli:\x206'], LANG[INV['SHOVEL']] = ['Kamienna\x20łopata', 'Kop\x20w\x20ziemi\x20aby\x20zdobyć\x20ziemię,\x20lód\x20i\x20piasek', 'Możesz\x20także\x20zdobyć\x20minerały', 'Obrażenia:\x202'], LANG[INV['SHOVEL_GOLD']] = ['Złota\x20łopata', 'Kop\x20w\x20ziemi\x20aby\x20zdobyć\x20ziemię,\x20lód\x20i\x20piasek', 'Możesz\x20także\x20zdobyć\x20minerały', 'Obrażenia:\x203', 'Obrażenia\x20do\x20budowli:\x201'], LANG[INV['SHOVEL_DIAMOND']] = ['Diamentowa\x20łopata', 'Kop\x20w\x20ziemi\x20aby\x20zdobyć\x20ziemię,\x20lód\x20i\x20piasek', 'Możesz\x20także\x20zdobyć\x20minerały', 'Obrażenia:\x204', 'Obrażenia\x20do\x20budowli:\x201'], LANG[INV['SHOVEL_AMETHYST']] = ['Ametystowa\x20łopata', 'Kop\x20w\x20ziemi\x20aby\x20zdobyć\x20ziemię,\x20lód\x20i\x20piasek', 'Możesz\x20także\x20zdobyć\x20minerały', 'Obrażenia:\x205', 'Obrażenia\x20do\x20budowli:\x201'], LANG[INV['WOOD_HELMET']] = ['Drewniany\x20hełm', 'Lepsze\x20niż\x20nic', 'Obrona\x20przed\x20graczami:\x201', 'Obrona\x20przed\x20zwierzętami:\x204'], LANG[INV['STONE_HELMET']] = ['Kamienny\x20hełm', 'Jesteś\x20gotowy\x20do\x20bitwy!', 'Obrona\x20przed\x20graczami:\x202', 'Obrona\x20przed\x20zwierzętami:\x208'], LANG[INV['GOLD_HELMET']] = ['Złoty\x20hełm', 'Zwany\x20także\x20hełmem\x20barbarzyńców', 'Obrona\x20przed\x20graczami:\x204', 'Obrona\x20przed\x20zwierzętami:\x2013'], LANG[INV['DIAMOND_HELMET']] = ['Diamentowy\x20hełm', 'Nie\x20przechwalaj\x20się\x20za\x20bardzo', 'Obrona\x20przed\x20graczami:\x205', 'Obrona\x20przed\x20zwierzętami:\x2019'], LANG[INV['AMETHYST_HELMET']] = ['Ametystowy\x20hełm', 'Nie\x20boisz\x20się\x20już\x20niczego', 'Obrona\x20przed\x20graczami:\x206', 'Obrona\x20przed\x20zwierzętami:\x2023'], LANG[INV['DRAGON_HELMET']] = ['Smoczy\x20hełm', 'Zmierzysz\x20się\x20z\x20całym\x20światem', 'Obrona\x20przed\x20graczami:\x208', 'Obrona\x20przed\x20zwierzętami:\x2027'], LANG[INV['EXPLORER_HAT']] = ['Czapka\x20odkrywcy', 'Zwierzęta\x20nie\x20będą\x20zwracały\x20na\x20ciebie\x20uwagi', 'ale\x20nie\x20rób\x20hałasu!', 'Ciepło\x20w\x20i\x20poza\x20zimą'], LANG[INV['CHRISTMAS_HAT']] = ['świąteczna\x20czapka', 'Oh,\x20oh,\x20oh,\x20Wesołych\x20Świąt', 'Ciepło\x20w\x20i\x20poza\x20zimą'], LANG[INV['ELF_HAT']] = ['Czapka\x20elfa', 'Nie\x20pozwól\x20się\x20być\x20wykorzystywanym,\x20mały\x20śnieżny\x20elfie!', 'Ciepło\x20w\x20i\x20poza\x20zimą'], LANG[INV['HOOD']] = ['Kaptur', 'Jesteś\x20łobuzem', 'Możesz\x20coś\x20komuś\x20ukraść\x20jeśli', '-\x20Jest\x20noc', '-\x20Nic\x20przy\x20sobie\x20nie\x20masz', '-\x20Jeżeli\x20nic\x20przez\x20chwilę\x20nie\x20dotykałeś', '-\x20Nie\x20jesteś\x20blisko\x20ognia', '-\x20Twój\x20cel\x20nie\x20jest\x20ubrany\x20w\x20chłopską\x20tunikę', 'Jest\x20ciepło\x20w\x20i\x20poza\x20zimą'], LANG[INV['EARMUFFS']] = ['Nauszniki', 'Jakiś\x20inny\x20rodzaj\x20małej\x20czapki.', 'Ciepło\x20w\x20i\x20poza\x20zimą'], LANG[INV['COAT']] = ['Czapka', 'Także\x20nazywana\x20płaszczem.', 'Ciepła\x20w\x20i\x20poza\x20zimą'], LANG[INV['CAP_SCARF']] = ['Szal\x20i\x20czapka', 'Bardzo\x20wygodna,\x20bardzo\x20ciepła'], LANG[INV['PEASANT']] = ['Chłopska\x20tunika', 'Twoje\x20rośliny\x20rosną\x20szybciej', 'Ciepła\x20w\x20i\x20poza\x20zimą'], LANG[INV['WINTER_HOOD']] = ['Zimowy\x20kaptur', 'Możesz\x20coś\x20komuś\x20ukraść\x20jeśli', '-\x20Jest\x20noc', '-\x20Nic\x20przy\x20sobie\x20nie\x20masz', '-\x20Jeżeli\x20nic\x20przez\x20chwilę\x20nie\x20dotykałeś', '-\x20Nie\x20jesteś\x20blisko\x20ognia', '-\x20Twój\x20cel\x20nie\x20jest\x20ubrany\x20w\x20tunikę\x20zimowego\x20chłopa', 'Jest\x20ciepło\x20w\x20i\x20poza\x20zimą'], LANG[INV['WINTER_PEASANT']] = ['Zimowa\x20chłopska\x20tunika', 'Twoje\x20rośliny\x20rosną\x20szybciej', 'Ciepło\x20w\x20i\x20poza\x20zimą'], LANG[INV['DIVING_MASK']] = ['Maska\x20do\x20nurkowania', 'Jesteś\x20szybki\x20w\x20wodzie', 'Ciepło', 'Obrona\x20przed\x20graczami:\x202,\x20Obrona\x20przed\x20zwierzętami:\x208'], LANG[INV['SUPER_DIVING_SUIT']] = ['Strój\x20głębinowy', 'Jesteś\x20bardzo\x20szybki\x20w\x20wodzie', 'Ciepło\x20ci\x20w\x20wodzie', 'Obrona\x20przed\x20graczami:\x204,\x20Obrona\x20przed\x20zwierzętami:\x2016'], LANG[INV['DRAGON_ORB']] = ['Smocza\x20kula', 'Zdobyta\x20podczas\x20zadania'], LANG[INV['DRAGON_HEART']] = ['Smocze\x20serce', 'Zamienia\x20cię\x20w\x20ducha\x20po\x20śmierci!', 'Jesteś\x20duchem\x20na\x2060\x20sekund', 'Znajdź\x20kamień\x20rezurekcyjny'], LANG[INV['GEMME_GREEN']] = ['Zielony\x20kryształ', 'Nie\x20oszukiwałeś,\x20przysięgasz?'], LANG[INV['GEMME_ORANGE']] = ['Pomarańczowy\x20kryształ', 'Tylko\x20prawdziwy\x20pirat\x20może\x20go\x20znaleźć!'], LANG[INV['GEMME_BLUE']] = ['Niebieski\x20kryształ', 'Dla\x20zbyt\x20miłych\x20ludzi'], LANG[INV['CROWN_GREEN']] = ['Zielona\x20korona', 'Szybko\x20się\x20leczysz', 'Uzdrawia\x20z\x20biegiem\x20czasu:\x2040', 'Obrona\x20przed\x20graczami:\x204,\x20Obrona\x20przed\x20zwierzętami:\x2016'], LANG[INV['CROWN_ORANGE']] = ['Pomarańczowa\x20korona', 'Nagle\x20poczułeś\x20smak\x20szczęścia', 'Obrona\x20przed\x20graczami:\x204,\x20Obrona\x20przed\x20zwierzętami:\x2016'], LANG[INV['CROWN_BLUE']] = ['Niebieska\x20korona', 'Gdy\x20już\x20będziesz\x20martwy,\x20zamienisz\x20się\x20w\x20ducha', 'Przy\x20okazji\x20stracisz\x20swoją\x20broń\x20i\x20kilof', 'Obrona\x20przed\x20graczami:\x204,\x20Obrona\x20przed\x20zwierzętami:\x2016'], LANG[INV['BUCKET_FULL']] = ['Wiadro', 'Również\x20przydatne\x20do\x20napełnienia\x20studni', 'Jedno\x20wiadro\x20jest\x20jak\x20dwanaście\x20butelek'], LANG[INV['BUCKET_EMPTY']] = ['Puste\x20wiadro', 'Musisz\x20napełnić\x20to\x20wiadro\x20wodą'], LANG[INV['BOTTLE_FULL']] = ['Butelka', 'Pozwala\x20pić\x20wodę\x20wszędzie', 'Woda:\x2050'], LANG[INV['BOTTLE_EMPTY']] = ['Pusta\x20butelka', 'Możesz\x20napełnić\x20tą\x20butelkę\x20blisko\x20źródła\x20wody'], LANG[INV['WATERING_CAN']] = ['Pusta\x20konewka', 'Musisz\x20ją\x20napełnić\x20w\x20źródle\x20wody,\x20aby\x20ją\x20użyć'], LANG[INV['WATERING_CAN_FULL']] = ['Konewka', 'Pozwala\x20podlewać\x20rośliny', 'Obrażenia:\x201'], LANG[INV['BAG']] = ['Plecak', 'Więcej\x20miejsca\x20na\x20twoje\x20przedmioty!'], LANG[INV['PAPER']] = ['Papier', 'Używany\x20w\x20tworzeniu\x20książki'], LANG[INV['BOOK']] = ['Książka', 'Pozwala\x20znacznie\x20skrócić\x20wytwarzanie', 'Musisz\x20ją\x20nosić\x20by\x20zadziałała', 'Uszkodzenie\x201'], LANG[INV['BANDAGE']] = ['Bandaż', 'Szybciej\x20zregeneruj\x20życie', 'Uzdrawia\x20z\x20biegiem\x20czasu:\x2030', 'Efekt:\x205'], LANG[INV['LOCK']] = ['Zamek', 'Pozwala\x20ci\x20zamknąć\x20skrzynię'], LANG[INV['LOCKPICK']] = ['Wytrych', 'Pozwala\x20ci\x20odblokować\x20jedną\x20skrzynię'], LANG[INV['TOTEM']] = ['Totem', 'Pozwala\x20ci\x20stworzyć\x20drużynę', 'Dziel\x20się\x20drzwiami\x20i\x20zamkniętymi\x20skrzyniami', 'Szkodliwe\x20budynki\x20nie\x20zranią\x20twoich\x20przyjaciół'], LANG[INV['BRIDGE']] = ['Most', 'Bardzo\x20przydatny\x20w\x20wodzie', 'Pozwala\x20ci\x20pić\x20bez\x20utonięcia', 'Chodzisz\x20szybciej\x20w\x20wodzie'], LANG[INV['SIGN']] = ['Tabliczka', 'Zostaw\x20wiadomość\x20dla\x20innych', 'Wytrzymałość:\x20200'], LANG[INV['ROOF']] = ['Dach', 'Trochę\x20cie\x20ogrzewa\x20i\x20chowa!'], LANG[INV['WELL']] = ['Studnia', 'Umożliwia\x20napełnienie\x20butelki', 'Wytrzymałość:\x201000'], LANG[INV['WALL']] = ['Drewniany\x20mur', 'Znasz\x20taniec\x20ścian?', 'Wytrzymałość:\x201000'], LANG[INV['STONE_WALL']] = ['Kamienny\x20mur', 'Jest\x20to\x20trochę\x20bardziej\x20poważniejsze.', 'Wytrzymałość:\x201500'], LANG[INV['GOLD_WALL']] = ['\x20Złoty\x20mur', 'Złoto\x20na\x20twoich\x20murach?\x20To\x20trochę\x20krzykliwe.', 'Wytrzymałość:\x202000'], LANG[INV['DIAMOND_WALL']] = ['Diamentowy\x20mur', 'Jaki\x20błyszczący,\x20uważaj\x20na\x20oczy', 'Wytrzymałość:\x202500'], LANG[INV['AMETHYST_WALL']] = ['Ametystowy\x20mur', 'Musisz\x20bardzo\x20się\x20bać,\x20aby\x20wyjść!', 'Wytrzymałość:\x203000'], LANG[INV['SPIKE']] = ['Drewniany\x20kolczasty\x20mur', 'Może\x20uszkodzić\x20wrogów', 'Obrażenia:\x2010,\x20Obrażenia\x20po\x20uszkodzeniu:\x202', 'Wytrzymałość:\x20150'], LANG[INV['STONE_SPIKE']] = ['Kamienny\x20kolczasty\x20mur', 'Nie\x20chciałbym\x20być\x20twoim\x20wrogiem.', 'Obrażenia:\x2020', '\x20Obrażenia\x20po\x20uszkodzeniu:\x203', 'Wytrzymałość:\x20300'], LANG[INV['GOLD_SPIKE']] = ['Złoty\x20kolczasty\x20mur', 'Jesteśtaki\x20okrutny.', 'Obrażenia:\x2030', '\x20Obrażenia\x20po\x20uszkodzeniu:\x203', 'Wytrzymałość:\x20600'], LANG[INV['DIAMOND_SPIKE']] = ['Diamentowy\x20kolczasty\x20mur', 'Raczej\x20nie\x20lubisz\x20towarzystwa.', 'Obrażenia:\x2040', 'Obrażenia\x20po\x20uszkodzeniu:\x204', 'Wytrzymałość:\x201200'], LANG[INV['AMETHYST_SPIKE']] = ['Ametystowy\x20kolczasty\x20mur', 'Co\x20ci\x20sąsiedzi\x20ci\x20zrobili?', 'Obrażenia:\x2050', 'Obrażenia\x20po\x20uszkodzeniu:\x204', 'Wytrzymałość:\x202400'], LANG[INV['WOOD_DOOR']] = ['Drewniane\x20drzwi', 'Może\x20być\x20otwarte\x20przez\x20ciebie\x20lub\x20przyjaciół', 'Wytrzymałość:\x201000'], LANG[INV['STONE_DOOR']] = ['Kamienne\x20drzwi', 'Solidne\x20drzwi\x20są\x20bardziej\x20poważne\x20', 'Wytrzymałość:\x201500'], LANG[INV['GOLD_DOOR']] = ['Złote\x20drzwi', 'Czy\x20odbudowujesz\x20El\x20Dorado?', 'Wytrzymałość:\x202000'], LANG[INV['DIAMOND_DOOR']] = ['Diamentowe\x20drzwi', 'Dla\x20błyszczącego\x20domu', 'Wytrzymałość:\x202500'], LANG[INV['AMETHYST_DOOR']] = ['Ametystowe\x20drzwi', 'Czy\x20twój\x20dom\x20to\x20zamknięty\x20sejf?', 'Wytrzymałość:\x203000'], LANG[INV['FURNACE']] = ['Piec', 'Ogrzewa\x20cię', 'Zużywa\x20drewno\x20co\x205\x20sekund', 'Wytrzymałość:\x201000'], LANG[INV['WINDMILL']] = ['Młyn', 'Może\x20produkować\x20mąkę\x20z\x20pszenicy', 'Przygotowanie\x20mąki\x20zajmuje\x205\x20sekund', 'Zwraca\x20punkty\x20podczas\x20pracy', 'Wytrzymałość:\x202000'], LANG[INV['BREAD_OVEN']] = ['Piec\x20do\x20chleba', 'Pozwala\x20na\x20wypiek\x20chleba\x20z\x20mąki', 'Przygotowanie\x20chleba\x20zajmuje\x2010\x20sekund', 'Zwraca\x20punkty\x20podczas\x20pracy', 'Wytrzymałość:\x202000'], LANG[INV['RESURRECTION']] = ['Kamień\x20rezurekcyjny', 'To\x20magia', 'Wskrzesi\x20cię\x20jeśli\x20jesteś\x20duchem', 'Stracisz\x20swoja\x20broń\x20i\x20kilof', 'Wytrzymałość:\x20200'], LANG[TEXT['YOU_CANNOT_JOIN']] = 'Nie\x20możesz\x20dołączyć\x20do\x20tego\x20serwera', LANG[TEXT['KICKED']] = 'Wyrzucony:\x20', LANG[TEXT['KEY_ALREADY']] = 'Twój\x20klucz\x20jest\x20aktualnie\x20używany\x20przez\x20innego\x20gracza', LANG[TEXT['KEY_WRONG']] = 'Twój\x20klucz\x20jest\x20nieprawidłowy', LANG[TEXT['OLD_VERSION']] = 'Posiadasz\x20starszą\x20wersję,\x20musisz\x20wyczyścić\x20swoją\x20pamięć', LANG[TEXT['NO_MORE_RESOURCES']] = 'Nie\x20ma\x20nowych\x20minerałów,\x20zwierząt,\x20i\x20jedzenia', LANG[TEXT['SURVIVED_1DAY']] = 'Przeżyłeś\x201\x20dzień', LANG[TEXT['SURVIVED']] = 'Przeżyłeś\x20', LANG[TEXT['DAYS']] = '\x20dni', LANG[TEXT['DEAD_SAD']] = 'Jesteś\x20martwy\x20;-;', LANG[TEXT['SPAM_ME']] = 'Serwer\x20nie\x20może\x20znaleźć\x20miejsca\x20na\x20spawn!\x20Spamuj\x20przycisk\x20zagraj!\x20Lub\x20wybierz\x20inny\x20serwer...', LANG[TEXT['SPAM_ME2']] = 'Serwer\x20jest\x20pełny!\x20Spamuj\x20przycisk\x20zagraj!', LANG[TEXT['EMPTY']] = 'Źródło\x20jest\x20puste', LANG[TEXT['INV_FULL']] = 'Ekwipunek\x20jest\x20pełny\x20(użyj\x20prawego\x20przycisku\x20myszy,\x20żeby\x20wyrzucić\x20przedmiot)', LANG[TEXT['DEAD']] = '\x20jest\x20martwy', LANG[TEXT['WRONG_TOOL']] = 'To\x20nie\x20jest\x20właściwe\x20narzędzie', LANG[TEXT['JOIN_TEAM']] = 'Dołączyłeś\x20do\x20drużyny', LANG[TEXT['YOU_DEAD']] = 'Jesteś\x20martwy', LANG[TEXT['JOINED_TEAM']] = '\x20dołączył\x20do\x20drużyny', LANG[TEXT['TEAM_DESTROYED']] = 'Twoja\x20drużyna\x20została\x20zniszczona', LANG[TEXT['LEFT_TEAM']] = '\x20Opuściłeś\x20drużynę', LANG[TEXT['LEFT_TEAM2']] = '\x20opuścił\x20drużynę', LANG[TEXT['TOKEN']] = 'Ktoś\x20ukradł\x20twój\x20żeton\x20:>', LANG[TEXT['CHOOSE']] = 'Wybierz\x20serwer', LANG[TEXT['PLAYERS']] = 'graczy', LANG[TEXT['TOTAL_PLAYERS']] = 'wszystkich\x20graczy', LANG[TEXT['TOTAL_MODE']] = 'graczy\x20w\x20tym\x20trybie', LANG[TEXT['COMMING_SOON']] = 'Już\x20wkrótce...', document['getElementById']('nickname_input')['placeholder'] = 'Przydomek', DIE[0x0] = ['Zostałeś\x20zabity\x20bez\x20powodu'], DIE[0x1] = ['Umarłeś\x20z\x20głodu,\x20jak\x20nazwa\x20gry\x20wskazuje'], DIE[0x2] = ['Zamarzłeś\x20na\x20śmierć.\x20Ale\x20smutne', 'Masz\x20hipotermię.\x20Następnym\x20razem,\x20zamiast\x20tego\x20spróbuj\x20siedzieć\x20obok\x20ogniska.'], DIE[0x3] = ['Gracz\x20zabił\x20cię,\x20mówiąc\x20ci\x20\x27git\x20gud.\x27\x20', 'Zostałeś\x20zamordowany\x20przez\x20gracza.\x20Nie\x20martw\x20się,\x20ten\x20gracz\x20też\x20zginie,\x20ewentualnie.'], DIE[0x4] = ['Byłeś\x20za\x20blisko\x20ogniska\x20i\x20spłonąłeś.\x20Zły\x20pomysł.', 'Zginąłeś\x20od\x20ognia.\x20Ogień\x20cię\x20rani.\x20Idź\x20i\x20napisz\x20o\x20tym\x20historię.'], DIE[0x5] = ['Twoje\x20ciało\x20stało\x20się\x20gniazdem\x20dla\x20pajęczych\x20jaj', 'Pająk\x20cię\x20zabił.\x20Przynajmniej\x20to\x20nie\x20był\x20królik.'], DIE[0x6] = ['Wilk\x20już\x20nie\x20będzie\x20głodował\x20po\x20zjedzeniu\x20cię', 'To\x20nie\x20są\x20pieski.Wilki\x20nie\x20lubią\x20jak\x20się\x20je\x20głaszcze.'], DIE[0x7] = ['Lis\x20był\x20dla\x20ciebie\x20za\x20szybki', 'Lis\x20zmienił\x20cię\x20w\x20pudło.Od\x20kiedy\x20zwierzęta\x20mają\x20magiczne\x20zdolności?'], DIE[0x8] = ['Niedźwiedź\x20chciał\x20się\x20tylko\x20przytulić.', 'Niedźwiedź\x20był\x20biedny.\x20Nie\x20jest\x20mi\x20przykro.'], DIE[0x9] = ['Zostałeś\x20spalony\x20na\x20popiół\x20przez\x20smoka.\x20Jakie\x20to\x20smutne.', 'Zostałeś\x20spłaszczony\x20przez\x20smoka.\x20Być\x20zmiażdżonym\x20to\x20okropny\x20sposób\x20na\x20śmierć.'], DIE[0xa] = ['Wskoczyłeś\x20na\x20kolczasty\x20mur.\x20Niezbyt\x20dobry\x20pomysł...', 'Zostałeś\x20zabity\x20przez\x20kolczasty\x20mur.\x20Większość\x20ludzi\x20ludzi\x20jest\x20wystarczająco\x20rozsądna,\x20aby\x20nie\x20dotykać\x20spiczastych\x20rzeczy.'], DIE[0xb] = ['Nawet\x20duch\x20potrafi\x20umrzeć.', 'Nie\x20udało\x20ci\x20się\x20dokonać\x20rezurekcji.\x20To\x20jest\x20gra,\x20więc\x20żyjesz\x20po\x20śmierci,\x20więc...'], DIE[0xc] = ['Bakterie\x20z\x20twojego\x20surowego\x20mięsa\x20zabiły\x20cię.\x20Ta\x20gra\x20jest\x20zdecydowanie\x20za\x20trudna.', 'Ty\x20zabiłeś\x20surowe\x20mięso.\x20Ono\x20zabiło\x20ciebię.'], DIE[0xd] = ['Zginąłeś\x20z\x20pragnienia.\x20Lepiej\x20pić\x20własny\x20mocz.'], DIE[0xe] = ['Czy\x20wiedziałeś,\x20że\x20usta\x20głodomorka\x20są\x20zawsze\x20pod\x20wodą\x20podczas\x20pływania?\x20Teraz\x20wiesz.'], DIE[0xf] = ['Nie\x20martw\x20się,\x20zasmakowałeś\x20pirani.', 'Zabawny\x20fakt:\x20Piranie\x20jedzą\x20ludzi,\x20włączając\x20ciebie.'], DIE[0x10] = ['LapaMauve\x20nie\x20planuje\x20abyś\x20mógł\x20zabić\x20krakena', 'Kraken\x20rozwalił\x20twoją\x20czaszkę.'], DIE[0x11] = ['Twoja\x20skóra\x20odpada,\x20słońce\x20cię\x20zabija.'], DIE[0x12] = ['Czosnek\x20w\x20twoich\x20kieszeniach\x20\x20ugotował\x20ci\x20mózg.'], DIE[0x13] = ['Jako\x20wampir,\x20nie\x20stałbym\x20blisko\x20ząbków\x20czosnku.'], DIE[0x14] = ['Zjadłeś\x20czosnek\x20jako\x20wampir,\x20czego\x20oczekiwałeś?'], DIE[0x15] = ['Twoje\x20ciało\x20owija\x20się\x20w\x20cierniste\x20krzaki.Kiedy\x20próbujesz\x20uciec,twoja\x20skóra\x20odpada\x20i\x20twoje\x20serce\x20przestaje\x20bić.'], ZOMBIE_GRUMBLE = 'Uuunnnggg', ZOMBIE_GRUMBLES = ['Uuunnnggg...\x20Głoduję', 'Potrzebuję\x20twojego\x20mózgu\x20Uuunnnggg...', 'Świeże\x20mięso\x20tutaj..\x20Uuunnnggg', 'Uuunnnggg...\x20Jesteś\x20pyszny', 'Uuunnnggg...', 'Jeść...\x20uuunnnggg...', 'Czuję\x20krew...\x20Uuunnnggg'];
    },
    set_french = function() {
        LANG[INV['DRAGON_CUBE']] = ['You\x20feel\x20a\x20great\x20power\x20emanating\x20from\x20this\x20orb'], DIE[0x16] = ['This\x20crab,\x20though\x20frightening\x20in\x20nature,\x20pinched\x20your\x20fingertips\x20so\x20hard\x20that\x20you\x20had\x20a\x20heart\x20attack.'], LANG[INV['CRAB_STICK']] = ['Crab\x20sticks', 'Oh,\x20yeah?\x20Is\x20there\x20crab\x20in\x20the\x20crab\x20sticks?', 'Food:\x2020'], LANG[TEXT['BACK_TO_THE_GAME']] = '\x20RETOUR\x20AU\x20JEU', LANG[TEXT['TWITTER']] = '\x20Partage\x20sur\x20Twitter', LANG[TEXT['FACEBOOK']] = '\x20Partage\x20sur\x20Facebook', LANG[TEXT['KIT_NEXT']] = 'Tu\x20peux\x20acheter\x20des\x20objets\x20dans\x20le\x20magasin\x20à\x20ta\x20prochaine\x20partie\x20avec\x20tes\x20points', LANG[TEXT['POINTS']] = 'points', LANG[TEXT['SCORE']] = 'Score', LANG[TEXT['KILL']] = 'Tués', LANG[TEXT['DAYS_SURVIVED']] = 'Jours\x20survécus', LANG[TEXT['MODE_FREE']] = 'Mode\x20de\x20construction:\x20Libre.\x20Appuie\x20sur\x20G\x20pour\x20changer', LANG[TEXT['MODE_GRID']] = 'Mode\x20de\x20construction:\x20Grille.\x20Appuie\x20sur\x20G\x20pour\x20changer', LANG[INV['CRAB_LOOT']] = ['Pince\x20de\x20crabe', 'Les\x20pinces\x20de\x20crabes\x20peuvent\x20aussi\x20être\x20mangées', 'Food:\x2010'], LANG[INV['CRAB_SPEAR']] = ['Lance\x20en\x20crabe', 'Te\x20permet\x20de\x20soigner\x20les\x20crabes\x20et\x20de\x20les\x20calmer', 'Donne\x20un\x20bonus\x20de\x20+10\x20degats\x20quand\x20elle\x20est\x20portée', 'avec\x20un\x20casque\x20un\x20crabe\x20sur\x20un\x20Crab\x20King', 'Damage:\x2014', 'Building\x20Damage:\x204'], LANG[INV['CROWN_CRAB']] = ['Casque\x20en\x20crabe', 'Tu\x20es\x20le\x20Roi\x20des\x20Crabes!', 'Les\x20crabes\x20te\x20suivent', 'Ils\x20ne\x20peuvent\x20pas\x20te\x20frapper\x20et\x20toi\x20non\x20plus', 'Players\x20Defense:\x204', 'Animals\x20Defense:\x2013'], LANG[INV['BED']] = ['Lit', 'Repose-toi\x20dans\x20ce\x20lit\x20douillet', 'Tu\x20as\x20moins\x20froid,\x20moins\x20faim\x20et\x20moins\x20soif', 'Tu\x20te\x20régénères\x20plus\x20vite', 'Durability:\x20400'], document['getElementById']('typequest')['innerHTML'] = 'Chrono\x20Quêtes', document['getElementById']('timeremainingquest')['innerHTML'] = 'Temps\x20Restant', document['getElementById']('constraintquest')['innerHTML'] = '\x20Contraintes', document['getElementById']('claim_rewards')['innerHTML'] = '\x20Résultat', document['getElementById']('rewardquest')['innerHTML'] = '\x20Récompenses', document['getElementById']('killdragon_1')['innerHTML'] = '\x20Collecte\x201\x20Cœur\x20de\x20dragon\x20dans\x20la\x20cave', document['getElementById']('amethyst_2')['innerHTML'] = '\x20Récolte\x201\x20améthyste', document['getElementById']('survive20min_3')['innerHTML'] = 'Survis\x20sans\x20perdre\x20de\x20vie', document['getElementById']('treasure_chest_4')['innerHTML'] = '\x20Ouvre\x205\x20coffres\x20au\x20trésor', document['getElementById']('dont_hit_5')['innerHTML'] = '\x20Sois\x20pacifique', document['getElementById']('bread_6')['innerHTML'] = '\x20Cuisine\x20100\x20pains\x20en\x20hiver,\x20seul\x20et\x20sans\x20retour\x20en\x20arrière', document['getElementById']('winter_7')['innerHTML'] = '\x20Après\x201\x20jour,\x20survis\x20en\x20hiver';
        for (var _0x5618fc = 0x0; _0x5618fc < 0x7; _0x5618fc++) document['getElementById']('claim_reward_' + _0x5618fc)['innerHTML'] = 'RÉCOMPENSE!';
        document['getElementById']('quit_chronoquest')['innerHTML'] = '\x20QUITTER', LANG[INV['HAND']] = ['Main'], LANG[INV['GROUND']] = ['Terre', 'C\x27est\x20sale!'], LANG[INV['SAND']] = ['Sable', 'J\x27en\x20ai\x20dans\x20les\x20yeux'], LANG[INV['WOOD']] = ['Bois', 'Tu\x20n\x27en\x20auras\x20jamais\x20trop!'], LANG[INV['STONE']] = ['Pierre', 'Aussi\x20appelée\x20roche'], LANG[INV['GOLD']] = ['Or', 'Sois\x20généreux,\x20donne\x20en\x20aux\x20autres'], LANG[INV['DIAMOND']] = ['Diamant', 'Comme\x20tes\x20yeux!\x20wesh'], LANG[INV['AMETHYST']] = ['Améthyste', 'C\x27est\x20Mauve\x20comme\x20Lapa'], LANG[INV['FLOUR']] = ['Farine', 'Utile\x20pour\x20la\x20cuisine'], LANG[INV['COOKIE']] = ['Cookie', 'Un\x20somptueux\x20cookie\x20de\x20Grand-Mère', 'Nourriture:\x2050'], LANG[INV['CAKE']] = ['Gâteau', 'Pour\x20les\x20fins\x20gourmets', 'Nourriture:\x20100'], LANG[INV['MEAT']] = ['Viande\x20crue', 'Tu\x20peux\x20la\x20cuisiner\x20avec\x20du\x20feu', 'Intoxication:\x2010', 'Nourriture:\x2015'], LANG[INV['COOKED_MEAT']] = ['Viande\x20cuite', 'Un\x20steak\x20saignant,\x20s\x27il\x20vous\x20plait', 'Nourriture:\x2035'], LANG[INV['FOODFISH']] = ['Poisson\x20cru', 'Je\x20crois\x20que\x20c\x27est\x20encore\x20vivant', 'Intoxication:\x2010', 'Nourriture:\x2018'], LANG[INV['FOODFISH_COOKED']] = ['Poisson\x20cuit', 'Avec\x20du\x20citron,\x20c\x27est\x20parfait', 'Nourriture:\x2035'], LANG[INV['BREAD']] = ['Baguette', 'Une\x20tradition\x20s\x27il\x20vous\x20plait', 'C\x27est\x20la\x20monnaie\x20du\x20marché', 'Nourriture:\x2015'], LANG[INV['SANDWICH']] = ['Sandwich', 'Le\x20Jambon\x20Beurre\x20vaincra', 'Nourriture:\x20100'], LANG[INV['CANDY']] = ['Bonbons', 'Il\x20n\x27y\x20a\x20pas\x20de\x20dentiste\x20ici', 'Nourriture:\x20100'], LANG[INV['SUGAR_CAN']] = ['Canne\x20à\x20sucre', 'Sans\x20sucre\x20de\x20canne', 'Nourriture:\x2020'], LANG[INV['GARLAND']] = ['Guirlandes', 'Utilisable\x20sur\x20les\x20toits'], LANG[INV['SEED']] = ['Graines\x20de\x20baies', 'Deviennent\x20des\x20baies', 'Naissance:\x202min', 'Croissance:\x2055s', 'Arrosage:\x203min\x2020s', 'Durabilité:\x20700', 'Durée\x20de\x20vie:\x208\x20jours'], LANG[INV['PLANT']] = ['Baies', 'Peu\x20nourrissant', 'Nourriture:\x2010'], LANG[INV['WHEAT_SEED']] = ['Graines\x20de\x20blé', 'Deviennent\x20du\x20blé', 'Naissance:\x202min', 'Croissance:\x2016s', 'Arrosage:\x202min', 'Durabilité:\x20700', 'Durée\x20de\x20vie:\x208\x20jours'], LANG[INV['WILD_WHEAT']] = ['Blé', 'Peut\x20être\x20transformé\x20en\x20farine\x20dans\x20les\x20moulins'], LANG[INV['PUMPKIN_SEED']] = ['Graines\x20de\x20citrouille', 'Deviennent\x20des\x20citrouilles', 'Naissance:\x202min\x2040s', 'Croissance:\x202min', 'Arrosage:\x202min', 'Durabilité:\x20700', 'Durée\x20de\x20vie:\x208\x20jours'], LANG[INV['PUMPKIN']] = ['Citrouille', 'Ça\x20me\x20rappelle\x20Halloween', 'Nourriture:\x2030'], LANG[INV['GARLIC_SEED']] = ['Graines\x20d\x27ail', 'Très\x20dangereux\x20pour\x20les\x20vampires', 'Dégâts:\x2020', 'Naissance:\x204min', 'Croissance:\x201min\x2010s', 'Arrosage:\x201min\x2040s', 'Durabilité:\x20700', 'Durée\x20de\x20vie:\x208\x20jours'], LANG[INV['GARLIC']] = ['Ail', 'Soigne\x20et\x20réduit\x20le\x20froid', 'Nourriture:\x2014', 'Soigne\x20sur\x20le\x20temps:\x2030', 'Effet:\x201\x20fois'], LANG[INV['THORNBUSH_SEED']] = ['Graines\x20de\x20ronces', 'Peuvent\x20blesser\x20vos\x20ennemis', 'Dégâts:\x2020', 'Naissance:\x204min', 'Croissance:\x2015s', 'Arrosage:\x203min', 'Durabilité:\x201000', 'Durée\x20de\x20vie:\x208\x20jours'], LANG[INV['THORNBUSH']] = ['Ronces', 'Ça\x20pique!'], LANG[INV['PLOT']] = ['Terreau', 'Indispensable', 'Vos\x20plantes\x20grandiront\x20plus\x20vite', 'et\x20auront\x20besoin\x20de\x20moins\x20d\x27eau', 'Durabilité:\x202000'], LANG[INV['ICE']] = ['Glace', 'Pratique\x20pour\x20faire\x20de\x20l\x27eau\x20et\x20des\x20gâteaux'], LANG[INV['SPANNER']] = ['Clé\x20à\x20molette', 'Pour\x20réparer\x20les\x20portes,\x20les\x20murs\x20et\x20les\x20piques', 'Dégâts:\x202'], LANG[INV['FUR_WOLF']] = ['Peau\x20de\x20loup', 'Il\x20était\x20où\x20le\x20gentil\x20ti\x20Youki?'], LANG[INV['FUR']] = ['Peau\x20de\x20lapin', 'Vous\x20êtes\x20un\x20monstre'], LANG[INV['SPECIAL_FUR']] = ['Fourrure\x20blanche', 'Tu\x20es\x20une\x20usine\x20à\x20pain'], LANG[INV['SPECIAL_FUR_2']] = ['Fourrure\x20noire', 'Tu\x20te\x20sens\x20prêt\x20à\x20faire\x20quelque\x20chose\x20de\x20mal'], LANG[INV['FUR_WINTER']] = ['Fourrure\x20d\x27hiver', 'Il\x20voulait\x20juste\x20un\x20calin'], LANG[INV['SCALES']] = ['Écailles', 'Ça\x20sent\x20le\x20poisson!'], LANG[INV['KRAKEN_SKIN']] = ['Peau\x20du\x20kraken', 'Tu\x20n\x27as\x20pas\x20eu\x20trop\x20peur?'], LANG[INV['FIRE']] = ['Feu\x20de\x20camp', 'Réchauffe', 'Durabilité:\x20150', 'Durée\x20de\x20vie:\x202min'], LANG[INV['BIG_FIRE']] = ['Grand\x20feu\x20de\x20camp', 'Réchauffe\x20plus\x20longtemps', 'Durabilité:\x20400', 'Durée\x20de\x20vie:\x206min'], LANG[INV['WORKBENCH']] = ['Établi', 'Utile\x20pour\x20fabriquer\x20toute\x20sorte\x20d\x27objets'], LANG[INV['CORD']] = ['Fil', 'Utile\x20pour\x20faire\x20des\x20chapeaux\x20et\x20un\x20sac'], LANG[INV['BLUE_CORD']] = ['Fil\x20de\x20diamant', 'Utile\x20pour\x20faire\x20des\x20chapeaux'], LANG[INV['CHEST']] = ['Coffre', 'Permet\x20de\x20ranger\x20des\x20objets', 'Durabilité:\x20500'], LANG[INV['SWORD_WOOD']] = ['Épée\x20en\x20bois', 'C\x27est\x20pour\x20les\x20enfants', 'Dégâts:\x2012', 'Démolition:\x204'], LANG[INV['SWORD']] = ['Épée\x20en\x20pierre', 'Sois\x20gentil\x20avec\x20les\x20autres', 'Dégâts:\x2019', 'Démolition:\x206'], LANG[INV['SWORD_GOLD']] = ['Épée\x20en\x20or', 'Roi\x20de\x20la\x20forêt', 'Dégâts:\x2022', 'Démolition:\x207'], LANG[INV['SWORD_DIAMOND']] = ['Épée\x20en\x20diamant', 'Tu\x20te\x20sens\x20puissant', 'Dégâts:\x2024', 'Démolition:\x208'], LANG[INV['PIRATE_SWORD']] = ['Épée\x20de\x20pirate', 'Marin\x20d\x27eau\x20douce!', 'Meilleure\x20portée\x20qu\x27une\x20épée\x20normale', 'Dégâts:\x2024', 'Démolition:\x208'], LANG[INV['SWORD_AMETHYST']] = ['Épée\x20en\x20améthyste', 'Mauve\x20est\x20la\x20plus\x20belle\x20couleur\x20du\x20monde', 'Dégâts:\x2027', 'Démolition:\x209'], LANG[INV['DRAGON_SWORD']] = ['Épée\x20du\x20Dragon', 'Pas\x20de\x20pitié!', 'Dégâts:\x2030', 'Démolition:\x2010'], LANG[INV['DRAGON_SPEAR']] = ['Lance\x20du\x20Dragon', 'Tuez-les\x20tous!', 'Dégâts:\x2022', 'Démolition:\x206'], LANG[INV['PICK_WOOD']] = ['Pioche\x20en\x20bois', 'Peut\x20récolter\x20du\x20bois\x20et\x20de\x20la\x20pierre', 'Dégâts:\x201'], LANG[INV['PICK']] = ['Pioche\x20en\x20pierre', 'Peut\x20aussi\x20récolter\x20de\x20l\x27or', 'Dégâts:\x202'], LANG[INV['PICK_GOLD']] = ['Pioche\x20en\x20or', 'Peut\x20aussi\x20récolter\x20du\x20diamant', 'Dégâts:\x203', 'Démolition:\x201'], LANG[INV['PICK_DIAMOND']] = ['Pioche\x20en\x20diamant', 'Peut\x20tout\x20récolter', 'Dégâts:\x204', 'Démolition:\x201'], LANG[INV['PICK_AMETHYST']] = ['Pioche\x20en\x20améthyste', 'Peut\x20tout\x20récolter', 'Dégâts:\x205', 'Démolition:\x201'], LANG[INV['HAMMER']] = ['Marteau\x20en\x20pierre', 'Utile\x20pour\x20détruire\x20les\x20bâtiments', 'Ne\x20marche\x20pas\x20bien\x20sur\x20du\x20diamant\x20et\x20améthyste', 'Dégâts:\x202', 'Démolition:\x2020'], LANG[INV['HAMMER_GOLD']] = ['Marteau\x20en\x20or', 'Utile\x20pour\x20détruire\x20les\x20bâtiments', 'Ne\x20marche\x20pas\x20bien\x20sur\x20l\x27améthyste', 'Dégâts:\x203', 'Démolition:\x2030'], LANG[INV['HAMMER_DIAMOND']] = ['Marteau\x20en\x20diamant', 'Utile\x20pour\x20détruire\x20les\x20bâtiments', 'Dégâts:\x204', 'Démolition:\x2040'], LANG[INV['HAMMER_AMETHYST']] = ['Marteau\x20en\x20améthyste', 'Utile\x20pour\x20détruire\x20les\x20bâtiments', 'Dégâts:\x205', 'Démolition:\x2050'], LANG[INV['SUPER_HAMMER']] = ['Super\x20Marteau', 'As-tu\x20prévu\x20de\x20détruire\x20le\x20monde?', 'Dégâts:\x2012', 'Démolition:\x2070'], LANG[INV['WOOD_SPEAR']] = ['Lance\x20en\x20bois', 'Plus\x20de\x20peur\x20que\x20de\x20mal', 'Dégâts:\x2010', 'Démolition:\x202'], LANG[INV['SPEAR']] = ['Lance\x20en\x20pierre', 'C\x27est\x20le\x20début\x20de\x20l\x27évolution', 'Dégâts:\x2014', 'Démolition:\x204'], LANG[INV['GOLD_SPEAR']] = ['Lance\x20en\x20or', 'Attention,\x20ça\x20pique!', 'Dégâts:\x2015', 'Buildings\x20Dégâts:\x205'], LANG[INV['DIAMOND_SPEAR']] = ['Lance\x20en\x20diamant', 'Tu\x20es\x20prêt\x20à\x20tuer\x20les\x20dragons', 'Dégâts:\x2017', 'Buildings\x20Dégâts:\x205'], LANG[INV['AMETHYST_SPEAR']] = ['Lance\x20en\x20améthyste', 'Les\x20dragons\x20ne\x20te\x20font\x20plus\x20peur', 'Dégâts:\x2018', 'Buildings\x20Dégâts:\x206'], LANG[INV['SHOVEL']] = ['Pelle\x20en\x20pierre', 'Creuse\x20la\x20terre,\x20le\x20sable\x20et\x20la\x20neige', 'Peut\x20aussi\x20récupérer\x20des\x20minéraux', 'Dégâts:\x202'], LANG[INV['SHOVEL_GOLD']] = ['Pelle\x20en\x20or', 'Creuse\x20la\x20terre,\x20le\x20sable\x20et\x20la\x20neige', 'Peut\x20aussi\x20récupérer\x20des\x20minéraux', 'Dégâts:\x203', 'Buildings\x20Dégâts:\x201'], LANG[INV['SHOVEL_DIAMOND']] = ['Pelle\x20en\x20diamant', 'Creuse\x20la\x20terre,\x20le\x20sable\x20et\x20la\x20neige', 'Peut\x20aussi\x20récupérer\x20des\x20minéraux', 'Dégâts:\x204', 'Buildings\x20Dégâts:\x201'], LANG[INV['SHOVEL_AMETHYST']] = ['Pelle\x20en\x20améthyste', 'Creuse\x20la\x20terre,\x20le\x20sable\x20et\x20la\x20neige', 'Peut\x20aussi\x20récupérer\x20des\x20minéraux', 'Dégâts:\x205', 'Buildings\x20Dégâts:\x201'], LANG[INV['WOOD_HELMET']] = ['Casque\x20en\x20bois', 'Mieux\x20que\x20rien', 'Défense:\x201', 'Défense\x20contre\x20animaux:\x204'], LANG[INV['STONE_HELMET']] = ['Casque\x20en\x20pierre', 'Prêt\x20pour\x20la\x20bataille', 'Défense:\x202', 'Défense\x20contre\x20animaux:\x208'], LANG[INV['GOLD_HELMET']] = ['Casque\x20en\x20or', 'Alias\x20le\x20casque\x20des\x20sauvages', 'Défense:\x204', 'Défense\x20contre\x20animaux:\x2013'], LANG[INV['DIAMOND_HELMET']] = ['Casque\x20en\x20diamant', 'Ne\x20te\x20vante\x20pas\x20trop', 'Défense:\x205', 'Défense\x20contre\x20animaux:\x2019'], LANG[INV['AMETHYST_HELMET']] = ['Casque\x20en\x20améthyste', 'Tu\x20n\x27as\x20plus\x20peur\x20de\x20rien', 'Défense:\x206', 'Défense\x20contre\x20animaux:\x2023'], LANG[INV['DRAGON_HELMET']] = ['Casque\x20du\x20Dragon', 'Tu\x20vas\x20conquérir\x20le\x20monde', 'Défense:\x208', 'Défense\x20contre\x20animaux:\x2027'], LANG[INV['EXPLORER_HAT']] = ['Chapeau\x20d\x27explorateur', 'Les\x20animaux\x20t\x27ignorent', 'Mais\x20ne\x20faites\x20pas\x20de\x20bruit!', 'Réchauffe\x20en\x20dehors\x20de\x20l\x27eau\x20et\x20dans\x20l\x27hiver'], LANG[INV['CHRISTMAS_HAT']] = ['Chapeau\x20du\x20Père\x20Noël', 'Oh,\x20oh,\x20oh,\x20Joyeux\x20Nöel!', 'Réchauffe\x20en\x20dehors\x20de\x20l\x27eau\x20et\x20dans\x20l\x27hiver'], LANG[INV['ELF_HAT']] = ['Chapeau\x20du\x20lutin\x20de\x20Nöel', 'Tu\x20as\x20vu\x20le\x20nouveau\x20chef\x20d\x27oeuvre\x20d\x27Alain\x20Chabat?', 'Réchauffe\x20en\x20dehors\x20de\x20l\x27eau\x20et\x20dans\x20l\x27hiver'], LANG[INV['HOOD']] = ['Capuche', 'Voyou!', 'Tu\x20peux\x20voler\x20seulement\x20si', '1)\x20Il\x20fait\x20nuit', '2)\x20Tu\x20as\x20les\x20mains\x20libres', '3)\x20Tu\x20n\x27as\x20pas\x20été\x20touché\x20depuis\x208\x20secondes', '4)\x20Tu\x20es\x20loin\x20d\x27un\x20feu', '5)\x20Ta\x20cible\x20n\x27est\x20pas\x20un\x20paysan', 'Réchauffe\x20en\x20dehors\x20de\x20l\x27eau\x20et\x20dans\x20l\x27hiver'], LANG[INV['EARMUFFS']] = ['Cache-oreilles', 'Une\x20sorte\x20de\x20petite\x20chapka.', 'Réchauffe\x20en\x20dehors\x20de\x20l\x27eau\x20et\x20dans\x20l\x27hiver'], LANG[INV['COAT']] = ['Chapka', 'Comment\x20ça\x20va,\x20camarade?', 'Réchauffe\x20en\x20dehors\x20de\x20l\x27eau\x20et\x20dans\x20l\x27hiver'], LANG[INV['CAP_SCARF']] = ['Bonnet\x20d\x27hiver', 'Très\x20confortable', 'Très\x20chaud'], LANG[INV['PEASANT']] = ['Tunique', 'Les\x20plantes\x20poussent\x20plus\x20vite', 'Réchauffe\x20en\x20dehors\x20de\x20l\x27eau\x20et\x20dans\x20l\x27hiver'], LANG[INV['WINTER_HOOD']] = ['Capuche\x20d\x27hiver', 'Tu\x20peux\x20voler\x20seulement\x20si', '1)\x20Il\x20fait\x20nuit', '2)\x20Tu\x20as\x20les\x20mains\x20libres', '3)\x20Tu\x20n\x27as\x20pas\x20été\x20touché\x20depuis\x204\x20secondes', '4)\x20Tu\x20es\x20loin\x20d\x27un\x20feu', '5)\x20Ta\x20cible\x20n\x27est\x20pas\x20un\x20paysan\x20d\x27hiver', 'Réchauffe\x20en\x20dehors\x20de\x20l\x27eau\x20et\x20dans\x20l\x27hiver'], LANG[INV['WINTER_PEASANT']] = ['Tunique\x20d\x27hiver', 'Tes\x20plantes\x20poussent\x20plus\x20vite', 'Réchauffe\x20en\x20dehors\x20de\x20l\x27eau\x20et\x20dans\x20l\x27hiver'], LANG[INV['DIVING_MASK']] = ['Masque\x20de\x20plongée', 'Tu\x20es\x20rapide\x20dans\x20l\x27eau', 'Réchauffe\x20dans\x20l\x27eau', 'Défense:\x202,\x20Défense\x20contre\x20animaux:\x208'], LANG[INV['SUPER_DIVING_SUIT']] = ['Scaphandre', 'Tu\x20es\x20très\x20rapide\x20dans\x20l\x27eau', 'Réchauffe\x20dans\x20l\x27eau', 'Défense:\x204,\x20Défense\x20contre\x20animaux:\x2016'], LANG[INV['DRAGON_ORB']] = ['Orbe\x20du\x20Dragon', 'Donné\x20en\x20Quête'], LANG[INV['DRAGON_HEART']] = ['Coeur\x20de\x20Dragon', 'Te\x20change\x20en\x20fantôme!', 'Tu\x20es\x20un\x20fantôme\x20pendant\x201\x20min', 'Trouve\x20une\x20pierre\x20de\x20résurrection'], LANG[INV['GEMME_GREEN']] = ['Gemme\x20verte', 'Tu\x20n\x27as\x20pas\x20triché,\x20promis?'], LANG[INV['GEMME_ORANGE']] = ['Gemme\x20orange', 'Seul\x20un\x20vrai\x20pirate\x20peut\x20l\x27obtenir!'], LANG[INV['GEMME_BLUE']] = ['Gemme\x20bleue', 'Pour\x20les\x20gens\x20trop\x20gentils'], LANG[INV['CROWN_GREEN']] = ['Couronne\x20verte', 'Te\x20soigne\x20très\x20rapidement', 'Soigne\x20sur\x20le\x20temps:\x2040', 'Défense:\x204,\x20Défense\x20contre\x20animaux:\x2016'], LANG[INV['CROWN_ORANGE']] = ['Couronne\x20orange', 'Tu\x20te\x20sens\x20soudainement\x20très\x20chanceux', 'Défense:\x204,\x20Défense\x20contre\x20animaux:\x2016'], LANG[INV['CROWN_BLUE']] = ['Couronne\x20bleue', 'Une\x20fois\x20mort,\x20tu\x20deviens\x20un\x20fantôme', 'Tu\x20perdras\x20toutes\x20tes\x20arguments', 'Défense:\x204,\x20Défense\x20contre\x20animaux:\x2016'], LANG[INV['BUCKET_FULL']] = ['Seau', 'Utile\x20pour\x20remplir\x20un\x20puit', 'Un\x20sceau\x20est\x20équivalent\x20à\x2020\x20bouteilles'], LANG[INV['BUCKET_EMPTY']] = ['Seau\x20vide', 'Pour\x20remplir\x20ce\x20seau,\x20approche-toi\x20d\x27une\x20source\x20d\x27eau'], LANG[INV['BOTTLE_FULL']] = ['Bouteille', 'Te\x20permet\x20de\x20boire\x20n\x27importe\x20où', 'Eau:\x2050'], LANG[INV['BOTTLE_EMPTY']] = ['Bouteille\x20vide', 'Tu\x20peux\x20remplir\x20cette\x20bouteille\x20près\x20d\x27une\x20source\x20d\x27eau'], LANG[INV['WATERING_CAN']] = ['Arrosoir\x20vide', 'Doit\x20être\x20rempli\x20près\x20d\x27une\x20source\x20d\x27eau'], LANG[INV['WATERING_CAN_FULL']] = ['Arrosoir', 'Permet\x20d\x27arroser\x20les\x20plantes', 'Dégâts:\x201'], LANG[INV['BAG']] = ['Sac', 'Plus\x20de\x20place\x20dans\x20ton\x20inventaire!'], LANG[INV['PAPER']] = ['Papier', 'Pour\x20fabriquer\x20toute\x20sorte\x20d\x27objets'], LANG[INV['BOOK']] = ['Livre', 'Réduit\x20considérablement\x20le\x20temps\x20de\x20fabrication', 'Doit\x20être\x20porté\x20pour\x20fonctionner', 'Dégâts:\x201'], LANG[INV['BANDAGE']] = ['Bandage', 'Soigne\x20plus\x20rapidement', 'Soigne\x20sur\x20le\x20temps:\x2030', 'Effet:\x205'], LANG[INV['LOCK']] = ['Cadenas', 'Pour\x20verrouiller\x20un\x20coffre'], LANG[INV['LOCKPICK']] = ['Clé', 'Pour\x20déverrouiller\x20un\x20coffre'], LANG[INV['TOTEM']] = ['Totem', 'Te\x20permet\x20de\x20créer\x20une\x20équipe', 'Partage\x20les\x20portes\x20et\x20les\x20coffres', 'Les\x20piques\x20ne\x20toucheront\x20pas\x20tes\x20amis'], LANG[INV['BRIDGE']] = ['Pont', 'Très\x20utile\x20sur\x20l\x27eau', 'Te\x20permet\x20de\x20boire\x20sans\x20te\x20noyer', 'Marche\x20plus\x20vite\x20sur\x20l\x27eau'], LANG[INV['SIGN']] = ['Pancarte', 'Laisse\x20un\x20message\x20aux\x20autres', 'Durabilité:\x20200'], LANG[INV['ROOF']] = ['Toit', 'Te\x20cache\x20un\x20peu\x20et\x20te\x20réchauffe'], LANG[INV['WELL']] = ['Puit', 'Permet\x20de\x20remplir\x20des\x20bouteilles', 'Durabilité:\x201000'], LANG[INV['WALL']] = ['Mur\x20en\x20bois', 'Tu\x20connais\x20la\x20danse\x20des\x20murs?', 'Durabilité:\x201000'], LANG[INV['STONE_WALL']] = ['Mur\x20en\x20pierre', 'Ça\x20fait\x20un\x20peu\x20plus\x20sérieux', 'Durabilité:\x201500'], LANG[INV['GOLD_WALL']] = ['Mur\x20en\x20or', 'De\x20l\x27or\x20sur\x20tes\x20murs?\x20C\x27est\x20un\x20peu\x20voyant', 'Durabilité:\x202000'], LANG[INV['DIAMOND_WALL']] = ['Mur\x20en\x20diamant', 'Très\x20brillant,\x20cache\x20tes\x20yeux', 'Durabilité:\x202500'], LANG[INV['AMETHYST_WALL']] = ['Mur\x20en\x20améthyste', 'Tu\x20dois\x20avoir\x20très\x20peur\x20de\x20sortir\x20dehors!', 'Durabilité:\x203500'], LANG[INV['SPIKE']] = ['Piques\x20en\x20bois', 'Peut\x20blesser\x20tes\x20ennemis', 'Dégâts:\x2010,\x20Dégâts\x20par\x20coup:\x202', 'Durabilité:\x20150'], LANG[INV['STONE_SPIKE']] = ['Pique\x20en\x20pierre', 'Je\x20ne\x20voudrais\x20pas\x20être\x20ton\x20ennemi', 'Dégâts:\x2020', 'Dégâts\x20par\x20coup:\x203', 'Durabilité:\x20300'], LANG[INV['GOLD_SPIKE']] = ['Pique\x20en\x20or', 'Tu\x20es\x20si\x20cruel', 'Dégâts:\x2030', 'Dégâts\x20par\x20coup:\x203', 'Durabilité:\x20600'], LANG[INV['DIAMOND_SPIKE']] = ['Pique\x20en\x20diamant', 'Tu\x20n\x27as\x20pas\x20l\x27air\x20d\x27aimer\x20la\x20compagnie', 'Dégâts:\x2040', 'Dégâts\x20par\x20coup:\x204', 'Durabilité:\x201200'], LANG[INV['AMETHYST_SPIKE']] = ['Pique\x20en\x20améthyste', 'Mais\x20qu\x27est\x20ce\x20que\x20ton\x20voisin\x20t\x27a\x20fait?', 'Dégâts:\x2050', 'Dégâts\x20par\x20coup:\x204', 'Durabilité:\x202400'], LANG[INV['WOOD_DOOR']] = ['Porte\x20en\x20bois', 'Peut\x20être\x20ouvert\x20ou\x20fermé\x20par\x20toi\x20ou\x20tes\x20amis', 'Durabilité:\x201000'], LANG[INV['STONE_DOOR']] = ['Porte\x20en\x20pierre', 'Tu\x20connais\x20les\x20trois\x20petits\x20cochons?', 'Durabilité:\x201500'], LANG[INV['GOLD_DOOR']] = ['Porte\x20en\x20or', 'Tu\x20reconstruis\x20l\x27el\x20dorado?', 'Durabilité:\x202000'], LANG[INV['DIAMOND_DOOR']] = ['Porte\x20en\x20diamant', 'Pour\x20une\x20maison\x20éclatante', 'Durabilité:\x202500'], LANG[INV['AMETHYST_DOOR']] = ['Porte\x20en\x20améthyste', 'Est-ce\x20que\x20ta\x20maison\x20est\x20un\x20coffre-fort?', 'Durabilité:\x203000'], LANG[INV['FURNACE']] = ['Chaudière', 'Réchauffe', 'Consume\x20du\x20bois\x20toutes\x20les\x205\x20sec', 'Durabilité:\x201000'], LANG[INV['WINDMILL']] = ['Moulin', 'Peut\x20produire\x20de\x20la\x20farine\x20à\x20partir\x20du\x20blé', 'Prends\x205\x20sec\x20pour\x20faire\x20de\x20la\x20farine', 'Tu\x20obtiens\x20des\x20points\x20quand\x20c\x27est\x20en\x20marche', 'Durabilité:\x202000'], LANG[INV['BREAD_OVEN']] = ['Four\x20à\x20pain', 'Produit\x20du\x20pain\x20avec\x20de\x20la\x20farine\x20et\x20du\x20bois', 'Prends\x2010\x20sec\x20pour\x20faire\x20du\x20pain', 'Tu\x20obtiens\x20des\x20points\x20quand\x20c\x27est\x20en\x20marche', 'Durabilité:\x202000'], LANG[INV['RESURRECTION']] = ['Pierre\x20de\x20résurrection', 'Magie\x20magie!', 'Te\x20ressuscite\x20si\x20tu\x20es\x20un\x20fantôme', 'Tu\x20perds\x20toutes\x20tes\x20armes', 'Durabilité:\x20200'], LANG[TEXT['YOU_CANNOT_JOIN']] = 'Tu\x20ne\x20peux\x20pas\x20rejoindre\x20le\x20serveur', LANG[TEXT['KICKED']] = 'Expulsé:\x20', LANG[TEXT['KEY_ALREADY']] = 'Ta\x20clé\x20est\x20déjà\x20utilisée\x20par\x20quelqu\x27un\x20d\x27autre', LANG[TEXT['KEY_WRONG']] = 'Ta\x20clé\x20est\x20fausse', LANG[TEXT['OLD_VERSION']] = 'Tu\x20as\x20une\x20vieille\x20version,\x20rafraichis\x20tes\x20caches', LANG[TEXT['NO_MORE_RESOURCES']] = 'Il\x20n\x27y\x20a\x20plus\x20de\x20nouvelles\x20ressources', LANG[TEXT['SURVIVED_1DAY']] = 'Tu\x20as\x20survécu\x201\x20jour', LANG[TEXT['SURVIVED']] = 'Tu\x20as\x20survécu\x20', LANG[TEXT['DAYS']] = '\x20jours', LANG[TEXT['DEAD_SAD']] = 'Tu\x20es\x20mort\x20;-;', LANG[TEXT['SPAM_ME']] = 'Le\x20serveur\x20ne\x20trouve\x20pas\x20de\x20points\x20d\x27apparitions!\x20Spam\x20le\x20bouton\x20jouer!', LANG[TEXT['SPAM_ME2']] = 'Le\x20serveur\x20est\x20complet!\x20Spam\x20le\x20bouton\x20jouer', LANG[TEXT['EMPTY']] = 'Cette\x20ressource\x20est\x20vide', LANG[TEXT['INV_FULL']] = 'Ton\x20inventaire\x20est\x20rempli\x20(Clic\x20droit\x20pour\x20supprimer\x20un\x20objet)', LANG[TEXT['DEAD']] = '\x20est\x20mort', LANG[TEXT['WRONG_TOOL']] = 'Ce\x20n\x27est\x20pas\x20le\x20bon\x20outil', LANG[TEXT['JOIN_TEAM']] = 'Tu\x20as\x20rejoins\x20une\x20équipe', LANG[TEXT['YOU_DEAD']] = 'Tu\x20es\x20mort', LANG[TEXT['JOINED_TEAM']] = '\x20a\x20rejoint\x20l\x27équipe', LANG[TEXT['TEAM_DESTROYED']] = 'Ton\x20équipe\x20a\x20été\x20détruite', LANG[TEXT['LEFT_TEAM']] = 'Tu\x20as\x20quitté\x20l\x27équipe', LANG[TEXT['LEFT_TEAM2']] = '\x20a\x20quitté\x20l\x27équipe', LANG[TEXT['TOKEN']] = 'Quelqu\x27un\x20a\x20volé\x20ton\x20token\x20:>', LANG[TEXT['CHOOSE']] = 'Choisis\x20un\x20serveur', LANG[TEXT['PLAYERS']] = 'joueurs', LANG[TEXT['TOTAL_PLAYERS']] = 'joueurs', LANG[TEXT['TOTAL_MODE']] = 'joueurs\x20dans\x20ce\x20mode', LANG[TEXT['COMMING_SOON']] = 'Bientôt...', document['getElementById']('nickname_input')['placeholder'] = 'Surnom', DIE[0x0] = ['Tu\x20as\x20été\x20tué\x20sans\x20raison\x20particulière,\x20juste\x20comme\x20ça'], DIE[0x1] = ['Tu\x20es\x20mort\x20de\x20faim,\x20c\x27est\x20plutôt\x20ironique,\x20non?'], DIE[0x2] = ['Tu\x20es\x20mort\x20de\x20froid.\x20Dommage', 'Tu\x20as\x20fait\x20une\x20hypothermie,\x20la\x20prochaine\x20fois\x20reste\x20près\x20d\x27un\x20feu'], DIE[0x3] = ['Un\x20joueur\x20t\x27a\x20tué,\x20avant\x20de\x20mourir\x20tu\x20pouvais\x20l\x27entendre\x20rire', 'Un\x20joueur\x20t\x27a\x20tué,\x20avec\x20un\x20peu\x20de\x20chance\x20il\x20mourra\x20aussi'], DIE[0x4] = ['Tu\x20es\x20resté\x20sur\x20un\x20feu\x20trop\x20longtemps\x20et\x20tu\x20es\x20mort\x20suite\x20aux\x20brûlures', 'Tu\x20es\x20mort\x20en\x20restant\x20trop\x20longtemps\x20sur\x20un\x20feu,\x20tu\x20voulais\x20finir\x20comme\x20Jeanne\x20d\x27Arc?'], DIE[0x5] = ['Ton\x20corps\x20deviendra\x20un\x20nid\x20pour\x20les\x20oeufs\x20d\x27araignées.'], DIE[0x6] = ['Ce\x20loup\x20n\x27aura\x20plus\x20faim\x20après\x20t\x27avoir\x20mangé', 'Ce\x20ne\x20sont\x20pas\x20des\x20chiens.\x20Les\x20loups\x20n\x27aiment\x20pas\x20être\x20domestiqués.'], DIE[0x7] = ['Ce\x20renard\x20était\x20trop\x20rapide\x20pour\x20toi', 'Ce\x20renard\x20t\x27a\x20transformé\x20en\x20boîte'], DIE[0x8] = ['Cet\x20ours\x20voulait\x20juste\x20un\x20câlin.'], DIE[0x9] = ['Tu\x20as\x20été\x20brûlé\x20par\x20un\x20dragon.\x20Quel\x20gâchis', 'Tu\x20t\x27es\x20fait\x20écraser\x20par\x20un\x20dragon.\x20Une\x20bien\x20terrible\x20façon\x20de\x20mourir...'], DIE[0xa] = ['Tu\x20as\x20sauté\x20sur\x20des\x20piques,\x20c\x27était\x20pas\x20une\x20bonne\x20idée...', 'Tu\x20es\x20mort\x20sur\x20des\x20piques.\x20La\x20plupart\x20des\x20gens\x20sont\x20assez\x20sensés\x20pour\x20ne\x20pas\x20toucher\x20les\x20choses\x20pointues'], DIE[0xb] = ['Même\x20les\x20fantômes\x20peuvent\x20mourir', 'Tu\x20n\x27as\x20pas\x20réussi\x20à\x20te\x20ressusciter.\x20Mais\x20c\x27est\x20un\x20jeu,\x20tu\x20reviens\x20à\x20la\x20vie\x20après\x20être\x20mort,\x20donc...'], DIE[0xc] = ['Une\x20bactérie\x20logée\x20dans\x20la\x20viande\x20crue\x20t\x27a\x20tué.\x20Ce\x20jeu\x20est\x20vraiment\x20trop\x20dur.', 'Tu\x20as\x20tué\x20l\x27animal,\x20sa\x20viande\x20t\x27a\x20tué.'], DIE[0xd] = ['Tu\x20es\x20mort\x20de\x20soif.\x20La\x20prochaine\x20fois,\x20vas\x20dans\x20un\x20lac,\x20dans\x20la\x20mer\x20ou\x20fais-toi\x20une\x20bouteille'], DIE[0xe] = ['Tu\x20t\x27es\x20noyé.\x20Essaye\x20de\x20construire\x20un\x20pont\x20la\x20prochaine\x20fois'], DIE[0xf] = ['Ne\x20t\x27inquiète\x20pas,\x20le\x20piranha\x20t\x27a\x20trouvé\x20appétissant.'], DIE[0x10] = ['Un\x20kraken\x20a\x20\x27kraké\x27\x20tes\x20os.'], DIE[0x11] = ['Ta\x20peau\x20tombe\x20en\x20lambeau,\x20le\x20soleil\x20t\x27a\x20brûlé.'], DIE[0x12] = ['L\x27ail\x20dans\x20ta\x20poche\x20a\x20fait\x20bouillir\x20ton\x20cerveau.'], DIE[0x13] = ['En\x20tant\x20que\x20vampire,\x20ne\x20reste\x20pas\x20à\x20côté\x20des\x20gousses\x20d\x27ail.'], DIE[0x14] = ['Tu\x20as\x20mangé\x20de\x20l\x27ail\x20en\x20tant\x20que\x20vampire,\x20tu\x20t\x27attendais\x20à\x20quoi?'], DIE[0x15] = ['Ton\x20corps\x20est\x20tombé\x20dans\x20les\x20ronces.\x20En\x20essayant\x20de\x20t\x27échapper,\x20ta\x20peau\x20s\x27est\x20arrachée\x20et\x20la\x20douleur\x20a\x20fait\x20arrêter\x20de\x20battre\x20ton\x20coeur.\x20lol\x20ça\x20rime.'], ZOMBIE_GRUMBLE = 'Uuunnnggg', ZOMBIE_GRUMBLES = ['Uuunnnggg...\x20J\x27ai\x20faim', 'Manger\x20cerveau,\x20Uuunnnggg...', 'Viande\x20fraîche\x20ici...\x20Uuunnnggg', 'Uuunnnggg...\x20Tu\x20as\x20l\x27air\x20bon', 'Uuunnnggg...', 'Manger...\x20uuunnnggg...', 'Je\x20peux\x20sentir\x20ton\x20sang...\x20Uuunnnggg'];
    },
    LANG = [];
for (var i = 0x0; i < COUNTER; i++) LANG[i] = '';
var DIE = [];
$('.md-languages')['on']('click', function() {
    $(this)['toggleClass']('active');
}), $('.md-languages\x20ul\x20li')['on']('click', function() {
    var _0x4ff48c = $(this)['text']();
    if (_0x4ff48c === 'English') set_english();
    else {
        if (_0x4ff48c === 'Français') set_french();
        else {
            if (_0x4ff48c === 'Deutsch') set_german();
            else {
                if (_0x4ff48c === 'Español') set_spanish();
                else {
                    if (_0x4ff48c === 'Português') set_portuguese();
                    else {
                        if (_0x4ff48c === 'Русский') set_russian();
                        else {
                            if (_0x4ff48c === 'Polski') set_polish();
                        }
                    }
                }
            }
        }
    }
    INFO_BOX = [], user['craft']['label'] = [], $('.md-languages\x20ul\x20li')['removeClass']('active'), $(this)['addClass']('active'), $('.md-languages\x20label\x20button')['text'](_0x4ff48c);
});
var lang = 'EN',
    userlang = navigator['language'] || navigator['userLanguage'];
switch (userlang) {
    case 'ru':
        lang = 'RU';
        break;
    case 'en':
        lang = 'EN';
        break;
    case 'es':
        lang = 'SP';
        break;
    case 'fr':
        lang = 'FR';
        break;
    case 'pl':
        lang = 'PL';
        break;
    case 'de':
        lang = 'DE';
        break;
    case 'pt':
        lang = 'PT';
        break;
}
var next_lang;
if (lang === 'FR') $('.md-languages\x20label\x20button')['text']('Français'), next_lang = set_french;
else {
    if (lang === 'PL') $('.md-languages\x20label\x20button')['text']('Polski'), next_lang = set_polish;
    else {
        if (lang === 'PT') $('.md-languages\x20label\x20button')['text']('Português'), next_lang = set_portuguese;
        else {
            if (lang === 'SP') $('.md-languages\x20label\x20button')['text']('Español'), next_lang = set_spanish;
            else {
                if (lang === 'RU') $('.md-languages\x20label\x20button')['text']('Русский'), next_lang = set_russian;
                else lang === 'DE' ? ($('.md-languages\x20label\x20button')['text']('Deutsch'), next_lang = set_german) : ($('.md-languages\x20label\x20button')['text']('English'), next_lang = set_english);
            }
        }
    }
}
IMAGES = {
    'LOGO': 'img/logo.png',
    'BIGDAY': 'img/mapday.png',
    'BIGNIGHT': 'img/mapnight.png',
    'BIGZDAY': 'img/bigzday.png',
    'BIGZNIGHT': 'img/bigznight.png',
    'MAPDAY_RIVER': 'img/bigday-river1.png',
    'MAPDAY_LAKE': 'img/bigday-lake.png',
    'MAPDAY_BERRY': 'img/bigday-berry.png',
    'MAPDAY_STONE1': 'img/bigday-stone1.png',
    'MAPDAY_STONE2': 'img/bigday-stone2.png',
    'MAPDAY_GOLD1': 'img/bigday-gold1.png',
    'MAPDAY_GOLD2': 'img/bigday-gold2.png',
    'MAPDAY_EMERALD1': 'img/bigday-emerald1.png',
    'MAPDAY_EMERALD2': 'img/bigday-emerald2.png',
    'MAPDAY_AMETHYST': 'img/bigday-amethyst.png',
    'MAPDAY_BEAR': 'img/bigday-bear.png',
    'MAPDAY_CAVE': 'img/bigday-cave.png',
    'MAPDAY_DIAMOND': 'img/bigday-diamond.png',
    'MAPDAY_ISLAND': 'img/bigday-island.png',
    'MAPDAY_REIDITE': 'img/bigday-reidite.png',
    'MAPDAY_SPIDER': 'img/bigday-spider.png',
    'MAPDAY_WOLF': 'img/bigday-wolf.png',
    'MAPDAY_FIR_TREE': 'img/bigday-fir-tree.png',
    'MAPDAY_FOX': 'img/bigday-fox.png',
    'MAPDAY_KRAKEN': 'img/bigday-kraken.png',
    'MAPDAY_PIRANHA': 'img/bigday-piranha.png',
    'MAPDAY_CACTUS': 'img/bigday-cactus.png',
    'MAPDAY_MAGMA': 'img/bigday-magma.png',
    'MAPNIGHT_RIVER': 'img/bigday-river1.png',
    'MAPNIGHT_LAKE': 'img/bignight-lake.png',
    'MAPNIGHT_BERRY': 'img/bignight-berry.png',
    'MAPNIGHT_STONE1': 'img/bignight-stone1.png',
    'MAPNIGHT_STONE2': 'img/bignight-stone2.png',
    'MAPNIGHT_GOLD1': 'img/bignight-gold1.png',
    'MAPNIGHT_GOLD2': 'img/bignight-gold2.png',
    'MAPNIGHT_EMERALD1': 'img/bignight-emerald1.png',
    'MAPNIGHT_EMERALD2': 'img/bignight-emerald2.png',
    'MAPNIGHT_AMETHYST': 'img/bignight-amethyst.png',
    'MAPNIGHT_BEAR': 'img/bignight-bear.png',
    'MAPNIGHT_CAVE': 'img/bignight-cave.png',
    'MAPNIGHT_DIAMOND': 'img/bignight-diamond.png',
    'MAPNIGHT_ISLAND': 'img/bignight-island.png',
    'MAPNIGHT_REIDITE': 'img/bignight-reidite.png',
    'MAPNIGHT_SPIDER': 'img/bignight-spider.png',
    'MAPNIGHT_WOLF': 'img/bignight-wolf.png',
    'MAPNIGHT_FIR_TREE': 'img/bignight-fir-tree.png',
    'MAPNIGHT_FOX': 'img/bignight-fox.png',
    'MAPNIGHT_KRAKEN': 'img/bignight-kraken.png',
    'MAPNIGHT_PIRANHA': 'img/bignight-piranha.png',
    'MAPNIGHT_CACTUS': 'img/bignight-cactus.png',
    'MAPNIGHT_MAGMA': 'img/bignight-magma.png',
    'MAPDAY_DESERT': 'img/bigday-desert.png',
    'MAPDAY_WINTER': 'img/bigday-winter.png',
    'MAPDAY_LAVA': 'img/bigday-lava.png',
    'MAPDAY_FOREST': 'img/bigday-forest.png',
    'MAPNIGHT_DESERT': 'img/bignight-desert.png',
    'MAPNIGHT_WINTER': 'img/bignight-winter.png',
    'MAPNIGHT_LAVA': 'img/bignight-lava.png',
    'MAPNIGHT_FOREST': 'img/bignight-forest.png',
    'RIVER_WAVED': 'img/day-river-wave.png',
    'RIVER_WAVEN': 'img/night-river-wave.png',
    'FOG0D': 'img/day-fog0.png',
    'FOG1D': 'img/day-fog1.png',
    'FOG2D': 'img/day-fog2.png',
    'FOG0N': 'img/night-fog0.png',
    'FOG1N': 'img/night-fog1.png',
    'FOG2N': 'img/night-fog2.png',
    'FOD0D': 'img/day-fogdesert0.png',
    'FOD1D': 'img/day-fogdesert1.png',
    'FOD2D': 'img/day-fogdesert2.png',
    'FOD0N': 'img/night-fogdesert0.png',
    'FOD1N': 'img/night-fogdesert1.png',
    'FOD2N': 'img/night-fogdesert2.png',
    'MARKER0D': 'img/day-cross-server.png',
    'MARKER1D': 'img/day-here-server.png',
    'MARKER2D': 'img/day-finish-server.png',
    'MARKER3D': 'img/day-item-server.png',
    'MARKER0N': 'img/night-cross-server.png',
    'MARKER1N': 'img/night-here-server.png',
    'MARKER2N': 'img/night-finish-server.png',
    'MARKER3N': 'img/night-item-server.png',
    'REIDITE0D': 'img/day-reidite0.png',
    'REIDITE0N': 'img/night-reidite0.png',
    'REIDITE1D': 'img/day-reidite1.png',
    'REIDITE1N': 'img/night-reidite1.png',
    'REIDITE2D': 'img/day-reidite2.png',
    'REIDITE2N': 'img/night-reidite2.png',
    'MAGMA1D': 'img/day-lava1.png',
    'MAGMA1N': 'img/night-lava1.png',
    'MAGMA2D': 'img/day-lava2.png',
    'MAGMA2N': 'img/night-lava2.png',
    'MAGMA3D': 'img/day-lava3.png',
    'MAGMA3N': 'img/night-lava3.png',
    'MAGMA4D': 'img/day-lava4.png',
    'MAGMA4N': 'img/night-lava4.png',
    'MAGMA5D': 'img/day-lava5.png',
    'MAGMA5N': 'img/night-lava5.png',
    'MAGMA6D': 'img/day-lava6.png',
    'MAGMA6N': 'img/night-lava6.png',
    'LAVA_GROUND1D': 'img/day-lava-ground1.png',
    'LAVA_GROUND1N': 'img/night-lava-ground1.png',
    'LAVA_GROUND2D': 'img/day-lava-ground2.png',
    'LAVA_GROUND2N': 'img/night-lava-ground2.png',
    'LAVA_GROUND3D': 'img/day-lava-ground3.png',
    'LAVA_GROUND3N': 'img/night-lava-ground3.png',
    'LAVA_GROUND4D': 'img/day-lava-ground4.png',
    'LAVA_GROUND4N': 'img/night-lava-ground4.png',
    'LAVA_GROUND5D': 'img/day-lava-ground5.png',
    'LAVA_GROUND5N': 'img/night-lava-ground5.png',
    'LAVA_GROUND6D': 'img/day-lava-ground6.png',
    'LAVA_GROUND6N': 'img/night-lava-ground6.png',
    'FIRE_MOBD': 'img/day-fire-mob.png',
    'FIRE_MOBN': 'img/night-fire-mob.png',
    'FIRE_MOB_HURT': 'img/hurt-fire-mob.png',
    'DIAMOND_PROTECTIOND': 'img/day-diamond-protection.png',
    'DIAMOND_PROTECTIONN': 'img/night-diamond-protection.png',
    'HAND_DIAMOND_PROTECTIOND': 'img/day-hand-diamond-protection.png',
    'HAND_DIAMOND_PROTECTIONN': 'img/night-hand-diamond-protection.png',
    'INV_DIAMOND_PROTECTION_OUT': 'img/inv-diamond-protection-out.png',
    'INV_DIAMOND_PROTECTION_IN': 'img/inv-diamond-protection-in.png',
    'INV_DIAMOND_PROTECTION_CLICK': 'img/inv-diamond-protection-click.png',
    'AMETHYST_PROTECTIOND': 'img/day-amethyst-protection.png',
    'AMETHYST_PROTECTIONN': 'img/night-amethyst-protection.png',
    'HAND_AMETHYST_PROTECTIOND': 'img/day-hand-amethyst-protection.png',
    'HAND_AMETHYST_PROTECTIONN': 'img/night-hand-amethyst-protection.png',
    'INV_AMETHYST_PROTECTION_OUT': 'img/inv-amethyst-protection-out.png',
    'INV_AMETHYST_PROTECTION_IN': 'img/inv-amethyst-protection-in.png',
    'INV_AMETHYST_PROTECTION_CLICK': 'img/inv-amethyst-protection-click.png',
    'REIDITE_SWORDD': 'img/day-reidite-sword.png',
    'REIDITE_SWORDN': 'img/night-reidite-sword.png',
    'INV_REIDITE_SWORD_OUT': 'img/inv-reidite-sword-out.png',
    'INV_REIDITE_SWORD_IN': 'img/inv-reidite-sword-in.png',
    'INV_REIDITE_SWORD_CLICK': 'img/inv-reidite-sword-click.png',
    'INV_REIDITE_OUT': 'img/inv-reidite-out.png',
    'INV_REIDITE_IN': 'img/inv-reidite-in.png',
    'INV_REIDITE_CLICK': 'img/inv-reidite-click.png',
    'INV_FLAME_OUT': 'img/inv-flame-out.png',
    'INV_FLAME_IN': 'img/inv-flame-in.png',
    'INV_FLAME_CLICK': 'img/inv-flame-click.png',
    'LAVA_BUBLE0D': 'img/day-magma-buble0.png',
    'LAVA_BUBLE0N': 'img/night-magma-buble0.png',
    'LAVA_BUBLE1D': 'img/day-magma-buble1.png',
    'LAVA_BUBLE1N': 'img/night-magma-buble1.png',
    'LAVA_BUBLE2D': 'img/day-magma-buble2.png',
    'LAVA_BUBLE2N': 'img/night-magma-buble2.png',
    'LAVA_DRAGOND': 'img/day-lava-dragon.png',
    'LAVA_DRAGONN': 'img/night-lava-dragon.png',
    'LAVA_FIRE_DRAGOND': 'img/day-fire-dragon.png',
    'LAVA_FIRE_DRAGONN': 'img/night-fire-dragon.png',
    'HURT_LAVA_DRAGON': 'img/hurt-lava-dragon.png',
    'LAVA_WING_LEFTD': 'img/day-lava-wing-left.png',
    'LAVA_WING_LEFTN': 'img/night-lava-wing-left.png',
    'LAVA_WING_RIGHTD': 'img/day-lava-wing-right.png',
    'LAVA_WING_RIGHTN': 'img/night-lava-wing-right.png',
    'HURT_LAVA_WING_LEFT': 'img/hurt-lava-wing-left.png',
    'HURT_LAVA_WING_RIGHT': 'img/hurt-lava-wing-right.png',
    'REIDITE_SPEARD': 'img/day-reidite-spear.png',
    'REIDITE_SPEARN': 'img/night-reidite-spear.png',
    'INV_REIDITE_SPEAR_OUT': 'img/inv-reidite-spear-out.png',
    'INV_REIDITE_SPEAR_IN': 'img/inv-reidite-spear-in.png',
    'INV_REIDITE_SPEAR_CLICK': 'img/inv-reidite-spear-click.png',
    'REIDITE_HELMETD': 'img/day-reidite-helmet.png',
    'REIDITE_HELMETN': 'img/night-reidite-helmet.png',
    'INV_REIDITE_HELMET_OUT': 'img/inv-reidite-helmet-out.png',
    'INV_REIDITE_HELMET_IN': 'img/inv-reidite-helmet-in.png',
    'INV_REIDITE_HELMET_CLICK': 'img/inv-reidite-helmet-click.png',
    'HAND_REIDITE_PROTECTIOND': 'img/day-hand-reidite-protection.png',
    'HAND_REIDITE_PROTECTIONN': 'img/night-hand-reidite-protection.png',
    'REIDITE_PROTECTIOND': 'img/day-reidite-protection.png',
    'REIDITE_PROTECTIONN': 'img/night-reidite-protection.png',
    'INV_REIDITE_PROTECTION_OUT': 'img/inv-reidite-protection-out.png',
    'INV_REIDITE_PROTECTION_IN': 'img/inv-reidite-protection-in.png',
    'INV_REIDITE_PROTECTION_CLICK': 'img/inv-reidite-protection-click.png',
    'LAVA_SWORDD': 'img/day-lava-dragon-sword.png',
    'LAVA_SWORDN': 'img/night-lava-dragon-sword.png',
    'INV_LAVA_SWORD_OUT': 'img/inv-lava-dragon-sword-out.png',
    'INV_LAVA_SWORD_IN': 'img/inv-lava-dragon-sword-in.png',
    'INV_LAVA_SWORD_CLICK': 'img/inv-lava-dragon-sword-click.png',
    'LAVA_SPEARD': 'img/day-lava-spear.png',
    'LAVA_SPEARN': 'img/night-lava-spear.png',
    'INV_LAVA_SPEAR_OUT': 'img/inv-lava-spear-out.png',
    'INV_LAVA_SPEAR_IN': 'img/inv-lava-spear-in.png',
    'INV_LAVA_SPEAR_CLICK': 'img/inv-lava-spear-click.png',
    'LAVA_HELMETD': 'img/day-lava-helmet.png',
    'LAVA_HELMETN': 'img/night-lava-helmet.png',
    'INV_LAVA_HELMET_OUT': 'img/inv-lava-helmet-out.png',
    'INV_LAVA_HELMET_IN': 'img/inv-lava-helmet-in.png',
    'INV_LAVA_HELMET_CLICK': 'img/inv-lava-helmet-click.png',
    'WITCHD': 'img/day-witch-hat.png',
    'WITCHN': 'img/night-witch-hat.png',
    'INV_WITCH_OUT': 'img/inv-witch-hat-out.png',
    'INV_WITCH_IN': 'img/inv-witch-hat-in.png',
    'INV_WITCH_CLICK': 'img/inv-witch-hat-click.png',
    'NIMBUSD': 'img/day-nimbus2000.png',
    'NIMBUSN': 'img/night-nimbus2000.png',
    'INV_NIMBUS_OUT': 'img/inv-nimbus2000-out.png',
    'INV_NIMBUS_IN': 'img/inv-nimbus2000-in.png',
    'INV_NIMBUS_CLICK': 'img/inv-nimbus2000-click.png',
    'ACCESSORY1D': 'img/day-accessory1-pacques.png',
    'ACCESSORY1N': 'img/night-accessory1-pacques.png',
    'ACCESSORY2D': 'img/day-accessory2-pacques.png',
    'ACCESSORY2N': 'img/night-accessory2-pacques.png',
    'ACCESSORY3D': 'img/day-accessory3-pacques.png',
    'ACCESSORY3N': 'img/night-accessory3-pacques.png',
    'ACCESSORY5D': 'img/day-accessory5-pacques.png',
    'ACCESSORY5N': 'img/night-accessory5-pacques.png',
    'ACCESSORY6D': 'img/day-accessory6-pacques.png',
    'ACCESSORY6N': 'img/night-accessory6-pacques.png',
    'ACCESSORY7D': 'img/day-accessory7-pacques.png',
    'ACCESSORY7N': 'img/night-accessory7-pacques.png',
    'ACCESSORY8D': 'img/day-accessory8-pacques.png',
    'ACCESSORY8N': 'img/night-accessory8-pacques.png',
    'BAG_EASTERD': 'img/day-bag-pacques.png',
    'BAG_EASTERN': 'img/night-bag-pacques.png',
    'CARROTD': 'img/day-carrot.png',
    'CARROTN': 'img/night-carrot.png',
    'CARROT_DRIEDD': 'img/day-carrot-dried.png',
    'CARROT_DRIEDN': 'img/night-carrot-dried.png',
    'TOMATO_MINID': 'img/day-tomato-herb.png',
    'TOMATO_MININ': 'img/night-tomato-herb.png',
    'TOMATO_MINI_DRIEDD': 'img/day-tomato-herb-dried.png',
    'TOMATO_MINI_DRIEDN': 'img/night-tomato-herb-dried.png',
    'TOMATOD': 'img/day-tomato.png',
    'TOMATON': 'img/night-tomato.png',
    'INV_CARROT_OUT': 'img/inv-carrot-out.png',
    'INV_CARROT_IN': 'img/inv-carrot-in.png',
    'INV_CARROT_CLICK': 'img/inv-carrot-click.png',
    'INV_TOMATO_OUT': 'img/inv-tomato-out.png',
    'INV_TOMATO_IN': 'img/inv-tomato-in.png',
    'INV_TOMATO_CLICK': 'img/inv-tomato-click.png',
    'PLAYER0D': 'img/day-player0.png',
    'PLAYER0N': 'img/night-player0.png',
    'PLAYER1D': 'img/day-player1.png',
    'PLAYER1N': 'img/night-player1.png',
    'PLAYER2D': 'img/day-player2.png',
    'PLAYER2N': 'img/night-player22.png',
    'PLAYER3D': 'img/day-player3.png',
    'PLAYER3N': 'img/night-player33.png',
    'PLAYER4D': 'img/day-player4.png',
    'PLAYER4N': 'img/night-player4.png',
    'PLAYER5D': 'img/day-player5.png',
    'PLAYER5N': 'img/night-player5.png',
    'PLAYER6D': 'img/day-player6.png',
    'PLAYER6N': 'img/night-player6.png',
    'PLAYER7D': 'img/day-player7.png',
    'PLAYER7N': 'img/night-player7.png',
    'PLAYER8D': 'img/day-player8.png',
    'PLAYER8N': 'img/night-player8.png',
    'PLAYER9D': 'img/day-player9.png',
    'PLAYER9N': 'img/night-player9.png',
    'PLAYER10D': 'img/day-player10.png',
    'PLAYER10N': 'img/night-player10.png',
    'PLAYER11D': 'img/day-player11.png',
    'PLAYER11N': 'img/night-player11.png',
    'PLAYER12D': 'img/day-player12.png',
    'PLAYER12N': 'img/night-player12.png',
    'PLAYER13D': 'img/day-player13.png',
    'PLAYER13N': 'img/night-player13.png',
    'PLAYER14D': 'img/day-player14.png',
    'PLAYER14N': 'img/night-player14.png',
    'PLAYER15D': 'img/day-player15.png',
    'PLAYER15N': 'img/night-player15.png',
    'PLAYER16D': 'img/day-player16.png',
    'PLAYER16N': 'img/night-player16.png',
    'PLAYER17D': 'img/day-player17.png',
    'PLAYER17N': 'img/night-player17.png',
    'PLAYER18D': 'img/day-player18.png',
    'PLAYER18N': 'img/night-player18.png',
    'PLAYER19D': 'img/day-player19.png',
    'PLAYER19N': 'img/night-player19.png',
    'HAND0D': 'img/day-hand-player0.png',
    'HAND0N': 'img/night-hand-player0.png',
    'HAND1D': 'img/day-hand-player1.png',
    'HAND1N': 'img/night-hand-player1.png',
    'HAND2D': 'img/day-hand-player2.png',
    'HAND2N': 'img/night-hand-player22.png',
    'HAND3D': 'img/day-hand-player3.png',
    'HAND3N': 'img/night-hand-player33.png',
    'HAND4D': 'img/day-hand-player4.png',
    'HAND4N': 'img/night-hand-player4.png',
    'HAND5D': 'img/day-hand-player5.png',
    'HAND5N': 'img/night-hand-player5.png',
    'HAND6D': 'img/day-hand-player6.png',
    'HAND6N': 'img/night-hand-player6.png',
    'HAND7D': 'img/day-hand-player7.png',
    'HAND7N': 'img/night-hand-player7.png',
    'HAND8D': 'img/day-hand-player8.png',
    'HAND8N': 'img/night-hand-player8.png',
    'HAND9D': 'img/day-hand-player9.png',
    'HAND9N': 'img/night-hand-player9.png',
    'HAND10D': 'img/day-hand-player10.png',
    'HAND10N': 'img/night-hand-player10.png',
    'HAND11D': 'img/day-hand-player11.png',
    'HAND11N': 'img/night-hand-player11.png',
    'HAND12D': 'img/day-hand-player12.png',
    'HAND12N': 'img/night-hand-player12.png',
    'HAND13D': 'img/day-hand-player13.png',
    'HAND13N': 'img/night-hand-player13.png',
    'HAND14D': 'img/day-hand-player14.png',
    'HAND14N': 'img/night-hand-player14.png',
    'HAND15D': 'img/day-hand-player15.png',
    'HAND15N': 'img/night-hand-player15.png',
    'HAND16D': 'img/day-hand-player16.png',
    'HAND16N': 'img/night-hand-player16.png',
    'HAND17D': 'img/day-hand-player17.png',
    'HAND17N': 'img/night-hand-player17.png',
    'HAND18D': 'img/day-hand-player18.png',
    'HAND18N': 'img/night-hand-player18.png',
    'HAND19D': 'img/day-hand-player19.png',
    'HAND19N': 'img/night-hand-player19.png',
    'ACCESSORY4D': 'img/day-accessory4.png',
    'ACCESSORY4N': 'img/night-accessory4.png',
    'ACCESSORY9D': 'img/day-accessory9.png',
    'ACCESSORY9N': 'img/night-accessory9.png',
    'ACCESSORY10D': 'img/day-accessory10.png',
    'ACCESSORY10N': 'img/night-accessory10.png',
    'ACCESSORY11D': 'img/day-accessory11.png',
    'ACCESSORY11N': 'img/night-accessory11.png',
    'ACCESSORY12D': 'img/day-accessory12.png',
    'ACCESSORY12N': 'img/night-accessory12.png',
    'BAGD': 'img/day-bag.png',
    'BAGN': 'img/night-bag.png',
    'INV_BAG_OUT': 'img/inv-bag-out.png',
    'INV_BAG_IN': 'img/inv-bag-in.png',
    'INV_BAG_CLICK': 'img/inv-bag-click.png',
    'PITCHFORKD': 'img/day-pitchfork.png',
    'PITCHFORKN': 'img/night-pitchfork.png',
    'INV_PITCHFORK_OUT': 'img/inv-pitchfork-out.png',
    'INV_PITCHFORK_IN': 'img/inv-pitchfork-in.png',
    'INV_PITCHFORK_CLICK': 'img/inv-pitchfork-click.png',
    'INV_WOOD_DOOR_SPIKE_OUT': 'img/inv-wood-spike-door-out.png',
    'INV_WOOD_DOOR_SPIKE_IN': 'img/inv-wood-spike-door-in.png',
    'INV_WOOD_DOOR_SPIKE_CLICK': 'img/inv-wood-spike-door-click.png',
    'INV_STONE_DOOR_SPIKE_OUT': 'img/inv-stone-spike-door-out.png',
    'INV_STONE_DOOR_SPIKE_IN': 'img/inv-stone-spike-door-in.png',
    'INV_STONE_DOOR_SPIKE_CLICK': 'img/inv-stone-spike-door-click.png',
    'INV_GOLD_DOOR_SPIKE_OUT': 'img/inv-gold-spike-door-out.png',
    'INV_GOLD_DOOR_SPIKE_IN': 'img/inv-gold-spike-door-in.png',
    'INV_GOLD_DOOR_SPIKE_CLICK': 'img/inv-gold-spike-door-click.png',
    'INV_DIAMOND_DOOR_SPIKE_OUT': 'img/inv-diamond-spike-door-out.png',
    'INV_DIAMOND_DOOR_SPIKE_IN': 'img/inv-diamond-spike-door-in.png',
    'INV_DIAMOND_DOOR_SPIKE_CLICK': 'img/inv-diamond-spike-door-click.png',
    'INV_AMETHYST_DOOR_SPIKE_OUT': 'img/inv-amethyst-spike-door-out.png',
    'INV_AMETHYST_DOOR_SPIKE_IN': 'img/inv-amethyst-spike-door-in.png',
    'INV_AMETHYST_DOOR_SPIKE_CLICK': 'img/inv-amethyst-spike-door-click.png',
    'WOOD_DOOR_SPIKED': 'img/day-wood-spike-door.png',
    'WOOD_DOOR_SPIKEN': 'img/night-wood-spike-door.png',
    'STONE_DOOR_SPIKED': 'img/day-stone-spike-door.png',
    'STONE_DOOR_SPIKEN': 'img/night-stone-spike-door.png',
    'GOLD_DOOR_SPIKED': 'img/day-gold-spike-door.png',
    'GOLD_DOOR_SPIKEN': 'img/night-gold-spike-door.png',
    'DIAMOND_DOOR_SPIKED': 'img/day-diamond-spike-door.png',
    'DIAMOND_DOOR_SPIKEN': 'img/night-diamond-spike-door.png',
    'AMETHYST_DOOR_SPIKED': 'img/day-amethyst-spike-door.png',
    'AMETHYST_DOOR_SPIKEN': 'img/night-amethyst-spike-door.png',
    'INV_REIDITE_DOOR_SPIKE_OUT': 'img/inv-reidite-spike-door-out.png',
    'INV_REIDITE_DOOR_SPIKE_IN': 'img/inv-reidite-spike-door-in.png',
    'INV_REIDITE_DOOR_SPIKE_CLICK': 'img/inv-reidite-spike-door-click.png',
    'INV_REIDITE_DOOR_OUT': 'img/inv-reidite-door-out.png',
    'INV_REIDITE_DOOR_IN': 'img/inv-reidite-door-in.png',
    'INV_REIDITE_DOOR_CLICK': 'img/inv-reidite-door-click.png',
    'INV_REIDITE_SPIKE_OUT': 'img/inv-reidite-spike-out.png',
    'INV_REIDITE_SPIKE_IN': 'img/inv-reidite-spike-in.png',
    'INV_REIDITE_SPIKE_CLICK': 'img/inv-reidite-spike-click.png',
    'INV_REIDITE_WALL_OUT': 'img/inv-reidite-wall-out.png',
    'INV_REIDITE_WALL_IN': 'img/inv-reidite-wall-in.png',
    'INV_REIDITE_WALL_CLICK': 'img/inv-reidite-wall-click.png',
    'REIDITE_WALLD': 'img/day-reidite-wall.png',
    'REIDITE_WALLN': 'img/night-reidite-wall.png',
    'REIDITE_DOORD': 'img/day-reidite-door.png',
    'REIDITE_DOORN': 'img/night-reidite-door.png',
    'REIDITE_SPIKED': 'img/day-reidite-spike.png',
    'REIDITE_SPIKEN': 'img/night-reidite-spike.png',
    'REIDITE_DOOR_SPIKED': 'img/day-reidite-spike-door.png',
    'REIDITE_DOOR_SPIKEN': 'img/night-reidite-spike-door.png',
    'INV_PICK_REIDITE_OUT': 'img/inv-reidite-pickaxe-out.png',
    'INV_PICK_REIDITE_IN': 'img/inv-reidite-pickaxe-in.png',
    'INV_PICK_REIDITE_CLICK': 'img/inv-reidite-pickaxe-click.png',
    'PICK_REIDITED': 'img/day-reidite-pickaxe.png',
    'PICK_REIDITEN': 'img/night-reidite-pickaxe.png',
    'INV_HAMMER_REIDITE_OUT': 'img/inv-reidite-hammer-out.png',
    'INV_HAMMER_REIDITE_IN': 'img/inv-reidite-hammer-in.png',
    'INV_HAMMER_REIDITE_CLICK': 'img/inv-reidite-hammer-click.png',
    'HAMMER_REIDITED': 'img/day-reidite-hammer.png',
    'HAMMER_REIDITEN': 'img/night-reidite-hammer.png',
    'WATERMELOND': 'img/day-watermelon1.png',
    'WATERMELONN': 'img/night-watermelon1.png',
    'DRIED_WATERMELOND': 'img/day-watermelon-dried1.png',
    'DRIED_WATERMELONN': 'img/night-watermelon-dried1.png',
    'INV_WATERMELON_OUT': 'img/inv-watermelon-out.png',
    'INV_WATERMELON_IN': 'img/inv-watermelon-in.png',
    'INV_WATERMELON_CLICK': 'img/inv-watermelon-click.png',
    'BOATD': 'img/day-boat.png',
    'BOATN': 'img/night-boat.png',
    'BOAT_WAVED': 'img/day-boat-wave.png',
    'BOAT_WAVEN': 'img/night-boat-wave.png',
    'INV_BOAT_OUT': 'img/inv-boat-out.png',
    'INV_BOAT_IN': 'img/inv-boat-in.png',
    'INV_BOAT_CLICK': 'img/inv-boat-click.png',
    'PLANED': 'img/day-plane.png',
    'PLANEN': 'img/night-plane.png',
    'INV_PLANE_OUT': 'img/inv-plane-out.png',
    'INV_PLANE_IN': 'img/inv-plane-in.png',
    'INV_PLANE_CLICK': 'img/inv-plane-click.png',
    'SLEDD': 'img/day-sled.png',
    'SLEDN': 'img/night-sled.png',
    'SLED_WAVED': 'img/day-sled-wave.png',
    'SLED_WAVEN': 'img/night-sled-wave.png',
    'INV_SLED_OUT': 'img/inv-sled-out.png',
    'INV_SLED_IN': 'img/inv-sled-in.png',
    'INV_SLED_CLICK': 'img/inv-sled-click.png',
    'PIRATE_HATD': 'img/day-pirate-hat.png',
    'PIRATE_HATN': 'img/night-pirate-hat.png',
    'INV_PIRATE_HAT_OUT': 'img/inv-pirate-hat-out.png',
    'INV_PIRATE_HAT_IN': 'img/inv-pirate-hat-in.png',
    'INV_PIRATE_HAT_CLICK': 'img/inv-pirate-hat-click.png',
    'PENGUIND': 'img/day-penguin.png',
    'PENGUINN': 'img/night-penguin.png',
    'HURT_PENGUIN': 'img/hurt-penguin.png',
    'INV_PENGUIN_FEATHER': 'img/inv-penguin-feather-click.png',
    'INV_HAWK_FEATHER': 'img/inv-hawk-feather-click.png',
    'BOARD': 'img/day-boar1.png',
    'BOAR_TAMEDD': 'img/day-boar1-tamed.png',
    'BOAR_ANGRYD': 'img/day-boar1-angry.png',
    'BOARN': 'img/night-boar1.png',
    'BOAR_TAMEDN': 'img/night-boar1-tamed.png',
    'BOAR_ANGRYN': 'img/night-boar1-angry.png',
    'INV_MOUNT_BOAR_OUT': 'img/inv-mount-boar-out.png',
    'INV_MOUNT_BOAR_IN': 'img/inv-mount-boar-in.png',
    'INV_MOUNT_BOAR_CLICK': 'img/inv-mount-boar-click.png',
    'HURT_BOAR': 'img/day-hurt-boar1.png',
    'BOAR_STEP': 'img/boar1-step.png',
    'SADDLED': 'img/day-saddle1.png',
    'SADDLEN': 'img/night-saddle1.png',
    'INV_SADDLE_OUT': 'img/inv-saddle-out.png',
    'INV_SADDLE_IN': 'img/inv-saddle-in.png',
    'INV_SADDLE_CLICK': 'img/inv-saddle-click.png',
    'WAND1D': 'img/day-magic-wand0.png',
    'WAND1N': 'img/night-magic-wand0.png',
    'LIGHT_WAND1D': 'img/day-light-wand1.png',
    'LIGHT_WAND1N': 'img/night-light-wand1.png',
    'INV_WAND1_OUT': 'img/inv-magic-wand0-out.png',
    'INV_WAND1_IN': 'img/inv-magic-wand0-in.png',
    'INV_WAND1_CLICK': 'img/inv-magic-wand0-click.png',
    'WAND2D': 'img/day-magic-wand1.png',
    'WAND2N': 'img/night-magic-wand1.png',
    'LIGHT_WAND0D': 'img/day-light-wand0.png',
    'LIGHT_WAND0N': 'img/night-light-wand0.png',
    'INV_WAND2_OUT': 'img/inv-magic-wand1-out.png',
    'INV_WAND2_IN': 'img/inv-magic-wand1-in.png',
    'INV_WAND2_CLICK': 'img/inv-magic-wand1-click.png',
    'FIREFLYD': 'img/day-firefly.png',
    'FIREFLYN': 'img/night-firefly.png',
    'HURT_FIREFLY': 'img/hurt-firefly.png',
    'INV_FIREFLY_OUT': 'img/inv-firefly-out.png',
    'INV_FIREFLY_IN': 'img/inv-firefly-in.png',
    'INV_FIREFLY_CLICK': 'img/inv-firefly-click.png',
    'BABY_DRAGOND': 'img/day-baby-dragon.png',
    'BABY_DRAGONN': 'img/night-baby-dragon.png',
    'BABY_DRAGON_ATTACKD': 'img/day-baby-dragon-angry.png',
    'BABY_DRAGON_ATTACKN': 'img/night-baby-dragon-angry.png',
    'BABY_DRAGON_TAMEDD': 'img/day-baby-dragon-tamed.png',
    'BABY_DRAGON_TAMEDN': 'img/night-baby-dragon-tamed.png',
    'BABY_DRAGON_WING_LEFT_ATTACKD': 'img/day-wing-dragon-left-angry.png',
    'BABY_DRAGON_WING_LEFT_ATTACKN': 'img/night-dragon-wing-left-angry.png',
    'BABY_DRAGON_WING_RIGHT_ATTACKD': 'img/day-wing-dragon-right-angry.png',
    'BABY_DRAGON_WING_RIGHT_ATTACKN': 'img/night-dragon-wing-right-angry.png',
    'BABY_DRAGON_WING_LEFT_TAMEDD': 'img/day-wing-dragon-left-tamed.png',
    'BABY_DRAGON_WING_LEFT_TAMEDN': 'img/night-dragon-wing-left-tamed.png',
    'BABY_DRAGON_WING_RIGHT_TAMEDD': 'img/day-wing-dragon-right-tamed.png',
    'BABY_DRAGON_WING_RIGHT_TAMEDN': 'img/night-wing-dragon-right-tamed.png',
    'BABY_DRAGON_WING_LEFTD': 'img/day-wing-dragon-left.png',
    'BABY_DRAGON_WING_LEFTN': 'img/night-dragon-wing-left.png',
    'BABY_DRAGON_WING_RIGHTD': 'img/day-wing-dragon-right.png',
    'BABY_DRAGON_WING_RIGHTN': 'img/night-wing-dragon-right.png',
    'HURT_BABY_DRAGON': 'img/hurt-baby-dragon.png',
    'HURT_BABY_DRAGON_WING_LEFT': 'img/hurt-baby-dragon-wing-left.png',
    'HURT_BABY_DRAGON_WING_RIGHT': 'img/hurt-baby-dragon-wing-right.png',
    'INV_BABY_DRAGON_OUT': 'img/inv-baby-dragon-out.png',
    'INV_BABY_DRAGON_IN': 'img/inv-baby-dragon-in.png',
    'INV_BABY_DRAGON_CLICK': 'img/inv-baby-dragon-click.png',
    'BABY_LAVAD': 'img/day-baby-lava.png',
    'BABY_LAVAN': 'img/night-baby-lava.png',
    'BABY_LAVA_ATTACKD': 'img/day-baby-lava-angry.png',
    'BABY_LAVA_ATTACKN': 'img/night-baby-lava-angry.png',
    'BABY_LAVA_TAMEDD': 'img/day-baby-lava-tamed.png',
    'BABY_LAVA_TAMEDN': 'img/night-baby-lava-tamed.png',
    'BABY_LAVA_WING_LEFT_ATTACKD': 'img/day-wing-lava-left-angry.png',
    'BABY_LAVA_WING_LEFT_ATTACKN': 'img/night-wing-lava-left-angry.png',
    'BABY_LAVA_WING_RIGHT_ATTACKD': 'img/day-wing-lava-right-angry.png',
    'BABY_LAVA_WING_RIGHT_ATTACKN': 'img/night-wing-lava-right-angry.png',
    'BABY_LAVA_WING_LEFT_TAMEDD': 'img/day-wing-lava-left-tamed.png',
    'BABY_LAVA_WING_LEFT_TAMEDN': 'img/night-wing-lava-left-tamed.png',
    'BABY_LAVA_WING_RIGHT_TAMEDD': 'img/day-wing-lava-right-tamed.png',
    'BABY_LAVA_WING_RIGHT_TAMEDN': 'img/night-wing-lava-right-tamed.png',
    'BABY_LAVA_WING_LEFTD': 'img/day-wing-lava-left.png',
    'BABY_LAVA_WING_LEFTN': 'img/night-wing-lava-left.png',
    'BABY_LAVA_WING_RIGHTD': 'img/day-wing-lava-right.png',
    'BABY_LAVA_WING_RIGHTN': 'img/night-wing-lava-right.png',
    'HURT_BABY_LAVA': 'img/hurt-baby-lava.png',
    'HURT_BABY_LAVA_WING_LEFT': 'img/hurt-baby-lava-wing-left.png',
    'HURT_BABY_LAVA_WING_RIGHT': 'img/hurt-baby-lava-wing-right.png',
    'INV_BABY_LAVA_OUT': 'img/inv-baby-lava-out.png',
    'INV_BABY_LAVA_IN': 'img/inv-baby-lava-in.png',
    'INV_BABY_LAVA_CLICK': 'img/inv-baby-lava-click.png',
    'HAWKD': 'img/day-falcon.png',
    'HAWKN': 'img/night-falcon.png',
    'HAWK_ATTACKD': 'img/day-falcon-angry.png',
    'HAWK_ATTACKN': 'img/night-falcon-angry.png',
    'HAWK_GROUNDD': 'img/day-falcon-ground.png',
    'HAWK_GROUNDN': 'img/night-falcon-ground.png',
    'HAWK_GROUND_ATTACKD': 'img/day-falcon-ground-angry.png',
    'HAWK_GROUND_ATTACKN': 'img/night-falcon-ground-angry.png',
    'HAWK_WING_LEFTD': 'img/day-falcon-wings-left.png',
    'HAWK_WING_LEFTN': 'img/night-falcon-wings-left.png',
    'HAWK_WING_RIGHTD': 'img/day-falcon-wings-right.png',
    'HAWK_WING_RIGHTN': 'img/night-falcon-wings-right.png',
    'HAWK_WING_LEFT_ATTACKD': 'img/day-falcon-angry-wings-left.png',
    'HAWK_WING_LEFT_ATTACKN': 'img/night-falcon-angry-wings-left.png',
    'HAWK_WING_RIGHT_ATTACKD': 'img/day-falcon-angry-wings-right.png',
    'HAWK_WING_RIGHT_ATTACKN': 'img/night-falcon-angry-wings-right.png',
    'HAWK_WING_LEFT_TAMEDD': 'img/day-falcon-wings-left-tamed.png',
    'HAWK_WING_LEFT_TAMEDN': 'img/night-falcon-wings-left-tamed.png',
    'HAWK_WING_RIGHT_TAMEDD': 'img/day-falcon-wings-right-tamed.png',
    'HAWK_WING_RIGHT_TAMEDN': 'img/night-falcon-wings-right-tamed.png',
    'HAWK_TAMEDD': 'img/day-falcon-tamed.png',
    'HAWK_TAMEDN': 'img/night-falcon-tamed.png',
    'HURT_HAWK_GROUND': 'img/hurt-falcon-ground.png',
    'HURT_HAWK': 'img/hurt-falcon.png',
    'HURT_HAWK_WING_LEFT': 'img/hurt-falcon-wings-left.png',
    'HURT_HAWK_WING_RIGHT': 'img/hurt-falcon-wings-right.png',
    'INV_HAWK_OUT': 'img/inv-falcon-out.png',
    'INV_HAWK_IN': 'img/inv-falcon-in.png',
    'INV_HAWK_CLICK': 'img/inv-falcon-click.png',
    'CRAB_BOSSD': 'img/day-crab-boss.png',
    'CRAB_BOSSN': 'img/night-crab-boss.png',
    'CRAB_BOSS_ATTACKD': 'img/day-crab-boss-angry.png',
    'CRAB_BOSS_ATTACKN': 'img/night-crab-boss-angry.png',
    'CRAB_BOSS_TAMEDD': 'img/day-crab-boss-tamed.png',
    'CRAB_BOSS_TAMEDN': 'img/night-crab-boss-tamed.png',
    'CRAB_BOSS_CLAW_LEFT_ATTACKD': 'img/day-crab-boss-claw-left-attack.png',
    'CRAB_BOSS_CLAW_LEFT_ATTACKN': 'img/night-crab-boss-claw-left-attack.png',
    'CRAB_BOSS_CLAW_RIGHT_ATTACKD': 'img/day-crab-boss-claw-right-attack.png',
    'CRAB_BOSS_CLAW_RIGHT_ATTACKN': 'img/night-crab-boss-claw-right-attack.png',
    'CRAB_BOSS_CLAW_LEFT_TAMEDD': 'img/day-crab-boss-claw-left-tamed.png',
    'CRAB_BOSS_CLAW_LEFT_TAMEDN': 'img/night-crab-boss-claw-left-tamed.png',
    'CRAB_BOSS_CLAW_RIGHT_TAMEDD': 'img/day-crab-boss-claw-right-tamed.png',
    'CRAB_BOSS_CLAW_RIGHT_TAMEDN': 'img/night-crab-boss-claw-right-tamed.png',
    'CRAB_BOSS_CLAW_LEFTD': 'img/day-crab-boss-claw-left.png',
    'CRAB_BOSS_CLAW_LEFTN': 'img/night-crab-boss-claw-left.png',
    'CRAB_BOSS_CLAW_RIGHTD': 'img/day-crab-boss-claw-right.png',
    'CRAB_BOSS_CLAW_RIGHTN': 'img/night-crab-boss-claw-right.png',
    'HURT_CRAB_BOSS': 'img/hurt-crab-boss.png',
    'HURT_CRAB_BOSS_CLAW_LEFT': 'img/hurt-crab-boss-claw-left.png',
    'HURT_CRAB_BOSS_CLAW_RIGHT': 'img/hurt-crab-boss-claw-right.png',
    'HEAL_CRAB_BOSS': 'img/heal-crab-boss.png',
    'HEAL_CRAB_BOSS_CLAW_LEFT': 'img/heal-crab-boss-claw-left.png',
    'HEAL_CRAB_BOSS_CLAW_RIGHT': 'img/heal-crab-boss-claw-right.png',
    'CRAB_STEP': 'img/crab-step.png',
    'INV_CRAB_BOSS_OUT': 'img/inv-crab-boss-out.png',
    'INV_CRAB_BOSS_IN': 'img/inv-crab-boss-in.png',
    'INV_CRAB_BOSS_CLICK': 'img/inv-crab-boss-click.png',
    'CACTUSD': 'img/day-cactus10.png',
    'CACTUSN': 'img/night-cactus10.png',
    'INV_CACTUS_OUT': 'img/inv-cactus-out.png',
    'INV_CACTUS_IN': 'img/inv-cactus-in.png',
    'INV_CACTUS_CLICK': 'img/inv-cactus-click.png',
    'SCORPIOND': 'img/day-scorpion.png',
    'SCORPIONN': 'img/night-scorpion.png',
    'SCORPION_HAND_LEFTD': 'img/day-scorpion-hand-left.png',
    'SCORPION_HAND_LEFTN': 'img/night-scorpion-hand-left.png',
    'SCORPION_HAND_RIGHTD': 'img/day-scorpion-hand-right.png',
    'SCORPION_HAND_RIGHTN': 'img/night-scorpion-hand-right.png',
    'HURT_SCORPION': 'img/hurt-scorpion.png',
    'HURT_SCORPION_HAND_LEFT': 'img/hurt-scorpion-hand-left.png',
    'HURT_SCORPION_HAND_RIGHT': 'img/hurt-scorpion-hand-right.png',
    'VULTURED': 'img/day-vulture.png',
    'VULTUREN': 'img/night-vulture.png',
    'VULTURE_ATTACKD': 'img/day-vulture-angry.png',
    'VULTURE_ATTACKN': 'img/night-vulture-angry.png',
    'VULTURE_GROUNDD': 'img/day-vulture-ground.png',
    'VULTURE_GROUNDN': 'img/night-vulture-ground.png',
    'VULTURE_GROUND_ATTACKD': 'img/day-vulture-ground-angry.png',
    'VULTURE_GROUND_ATTACKN': 'img/night-vulture-ground-angry.png',
    'VULTURE_WING_LEFTD': 'img/day-vulture-wings-left.png',
    'VULTURE_WING_LEFTN': 'img/night-vulture-wings-left.png',
    'VULTURE_WING_RIGHTD': 'img/day-vulture-wings-right.png',
    'VULTURE_WING_RIGHTN': 'img/night-vulture-wings-right.png',
    'VULTURE_WING_LEFT_ATTACKD': 'img/day-vulture-angry-wings-left.png',
    'VULTURE_WING_LEFT_ATTACKN': 'img/night-vulture-angry-wings-left.png',
    'VULTURE_WING_RIGHT_ATTACKD': 'img/day-vulture-angry-wings-right.png',
    'VULTURE_WING_RIGHT_ATTACKN': 'img/night-vulture-angry-wings-right.png',
    'VULTURE_WING_LEFT_TAMEDD': 'img/day-vulture-wings-left-tamed.png',
    'VULTURE_WING_LEFT_TAMEDN': 'img/night-vulture-wings-left-tamed.png',
    'VULTURE_WING_RIGHT_TAMEDD': 'img/day-vulture-wings-right-tamed.png',
    'VULTURE_WING_RIGHT_TAMEDN': 'img/night-vulture-wings-right-tamed.png',
    'VULTURE_TAMEDD': 'img/day-vulture-tamed.png',
    'VULTURE_TAMEDN': 'img/night-vulture-tamed.png',
    'HURT_VULTURE_GROUND': 'img/hurt-vulture-ground.png',
    'HURT_VULTURE': 'img/hurt-vulture.png',
    'HURT_VULTURE_WING_LEFT': 'img/hurt-vulture-wings-left.png',
    'HURT_VULTURE_WING_RIGHT': 'img/hurt-vulture-wings-right.png',
    'ALOE_VERAD': 'img/day-aloe-vera.png',
    'ALOE_VERAN': 'img/night-aloe-vera.png',
    'INV_ALOE_VERA_OUT': 'img/inv-aloe-vera-out.png',
    'INV_ALOE_VERA_IN': 'img/inv-aloe-vera-in.png',
    'INV_ALOE_VERA_CLICK': 'img/inv-aloe-vera-click.png',
    'ALOE_VERA_GROWND': 'img/day-aloe-vera-grown.png',
    'ALOE_VERA_GROWNN': 'img/night-aloe-vera-grown.png',
    'ALOE_VERA_DRIEDD': 'img/day-aloe-vera-dried.png',
    'ALOE_VERAN_DRIEDN': 'img/night-aloe-vera-dried.png',
    'TURBAN1D': 'img/day-turban1.png',
    'TURBAN1N': 'img/night-turban1.png',
    'TURBAN2D': 'img/day-turban2.png',
    'TURBAN2N': 'img/night-turban2.png',
    'INV_TURBAN2_OUT': 'img/inv-turban2-out.png',
    'INV_TURBAN2_IN': 'img/inv-turban2-in.png',
    'INV_TURBAN2_CLICK': 'img/inv-turban2-click.png',
    'INV_TURBAN1_OUT': 'img/inv-turban1-out.png',
    'INV_TURBAN1_IN': 'img/inv-turban1-in.png',
    'INV_TURBAN1_CLICK': 'img/inv-turban1-click.png',
    'PITCHFORK2D': 'img/day-pitchfork2.png',
    'PITCHFORK2N': 'img/night-pitchfork2.png',
    'INV_PITCHFORK2_OUT': 'img/inv-pitchfork2-out.png',
    'INV_PITCHFORK2_IN': 'img/inv-pitchfork2-in.png',
    'INV_PITCHFORK2_CLICK': 'img/inv-pitchfork2-click.png',
    'INV_PITCHFORK_PART_CLICK': 'img/inv-gold-fork-click.png',
    'INV_PILOT_GLASSES_CLICK': 'img/inv-pilot-glasses-click.png',
    'PILOT_HELMETD': 'img/day-pilot-helmet.png',
    'PILOT_HELMETN': 'img/night-pilot-helmet.png',
    'INV_PILOT_HELMET_OUT': 'img/inv-pilot-helmet-out.png',
    'INV_PILOT_HELMET_IN': 'img/inv-pilot-helmet-in.png',
    'INV_PILOT_HELMET_CLICK': 'img/inv-pilot-helmet-click.png',
    'SAND_WORM0D': 'img/day-sandworm0.png',
    'SAND_WORM1D': 'img/day-sandworm1.png',
    'SAND_WORM2D': 'img/day-sandworm2.png',
    'SAND_WORM0N': 'img/night-sandworm0.png',
    'SAND_WORM1N': 'img/night-sandworm1.png',
    'SAND_WORM2N': 'img/night-sandworm2.png',
    'HURT_SAND_WORM0': 'img/hurt-sandworm0.png',
    'HURT_SAND_WORM1': 'img/hurt-sandworm1.png',
    'HURT_SAND_WORM2': 'img/hurt-sandworm2.png',
    'INV_VULTURE_FEATHER': 'img/inv-vulture-feather-click.png',
    'EMERALD0D': 'img/day-emerald0.png',
    'EMERALD0N': 'img/night-emerald0.png',
    'EMERALD1D': 'img/day-emerald1.png',
    'EMERALD1N': 'img/night-emerald1.png',
    'EMERALD2D': 'img/day-emerald2.png',
    'EMERALD2N': 'img/night-emerald2.png',
    'INV_EMERALD': 'img/inv-emerald-click.png',
    'INV_SANDWORM_JUICE_OUT': 'img/inv-sworm-juice-out.png',
    'INV_SANDWORM_JUICE_IN': 'img/inv-sworm-juice-in.png',
    'INV_SANDWORM_JUICE_CLICK': 'img/inv-sworm-juice-click.png',
    'EMERALD_MACHINED': 'img/day-point-machine.png',
    'EMERALD_MACHINEN': 'img/night-point-machine.png',
    'EMERALD_MACHINE_HOLED': 'img/day-point-machine-hole.png',
    'EMERALD_MACHINE_HOLEN': 'img/night-point-machine-hole.png',
    'EMERALD_MACHINE_GROUNDD': 'img/day-point-machine-ground.png',
    'EMERALD_MACHINE_GROUNDN': 'img/night-point-machine-ground.png',
    'EMERALD_MACHINE_ROTATED': 'img/day-point-machine-rotate.png',
    'EMERALD_MACHINE_ROTATEN': 'img/night-point-machine-rotate.png',
    'INV_EMERALD_MACHINE_OUT': 'img/inv-point-machine-out.png',
    'INV_EMERALD_MACHINE_IN': 'img/inv-point-machine-in.png',
    'INV_EMERALD_MACHINE_CLICK': 'img/inv-point-machine-click.png',
    'EXTRACTOR_MACHINE0_STONED': 'img/day-extractor-machine0-stone.png',
    'EXTRACTOR_MACHINE0_STONEN': 'img/night-extractor-machine0-stone.png',
    'EXTRACTOR_MACHINE_STONED': 'img/day-extractor-machine-stone.png',
    'EXTRACTOR_MACHINE_STONEN': 'img/night-extractor-machine-stone.png',
    'INV_EXTRACTOR_MACHINE_STONE_OUT': 'img/inv-extractor-machine-stone-out.png',
    'INV_EXTRACTOR_MACHINE_STONE_IN': 'img/inv-extractor-machine-stone-in.png',
    'INV_EXTRACTOR_MACHINE_STONE_CLICK': 'img/inv-extractor-machine-stone-click.png',
    'EXTRACTOR_MACHINE0_GOLDD': 'img/day-extractor-machine0-gold.png',
    'EXTRACTOR_MACHINE0_GOLDN': 'img/night-extractor-machine0-gold.png',
    'EXTRACTOR_MACHINE_GOLDD': 'img/day-extractor-machine-gold.png',
    'EXTRACTOR_MACHINE_GOLDN': 'img/night-extractor-machine-gold.png',
    'INV_EXTRACTOR_MACHINE_GOLD_OUT': 'img/inv-extractor-machine-gold-out.png',
    'INV_EXTRACTOR_MACHINE_GOLD_IN': 'img/inv-extractor-machine-gold-in.png',
    'INV_EXTRACTOR_MACHINE_GOLD_CLICK': 'img/inv-extractor-machine-gold-click.png',
    'EXTRACTOR_MACHINE0_DIAMONDD': 'img/day-extractor-machine0-diamond.png',
    'EXTRACTOR_MACHINE0_DIAMONDN': 'img/night-extractor-machine0-diamond.png',
    'EXTRACTOR_MACHINE_DIAMONDD': 'img/day-extractor-machine-diamond.png',
    'EXTRACTOR_MACHINE_DIAMONDN': 'img/night-extractor-machine-diamond.png',
    'INV_EXTRACTOR_MACHINE_DIAMOND_OUT': 'img/inv-extractor-machine-diamond-out.png',
    'INV_EXTRACTOR_MACHINE_DIAMOND_IN': 'img/inv-extractor-machine-diamond-in.png',
    'INV_EXTRACTOR_MACHINE_DIAMOND_CLICK': 'img/inv-extractor-machine-diamond-click.png',
    'EXTRACTOR_MACHINE0_AMETHYSTD': 'img/day-extractor-machine0-amethyst.png',
    'EXTRACTOR_MACHINE0_AMETHYSTN': 'img/night-extractor-machine0-amethyst.png',
    'EXTRACTOR_MACHINE_AMETHYSTD': 'img/day-extractor-machine-amethyst.png',
    'EXTRACTOR_MACHINE_AMETHYSTN': 'img/night-extractor-machine-amethyst.png',
    'INV_EXTRACTOR_MACHINE_AMETHYST_OUT': 'img/inv-extractor-machine-amethyst-out.png',
    'INV_EXTRACTOR_MACHINE_AMETHYST_IN': 'img/inv-extractor-machine-amethyst-in.png',
    'INV_EXTRACTOR_MACHINE_AMETHYST_CLICK': 'img/inv-extractor-machine-amethyst-click.png',
    'EXTRACTOR_MACHINE0_REIDITED': 'img/day-extractor-machine0-reidite.png',
    'EXTRACTOR_MACHINE0_REIDITEN': 'img/night-extractor-machine0-reidite.png',
    'EXTRACTOR_MACHINE_REIDITED': 'img/day-extractor-machine-reidite.png',
    'EXTRACTOR_MACHINE_REIDITEN': 'img/night-extractor-machine-reidite.png',
    'INV_EXTRACTOR_MACHINE_REIDITE_OUT': 'img/inv-extractor-machine-reidite-out.png',
    'INV_EXTRACTOR_MACHINE_REIDITE_IN': 'img/inv-extractor-machine-reidite-in.png',
    'INV_EXTRACTOR_MACHINE_REIDITE_CLICK': 'img/inv-extractor-machine-reidite-click.png',
    'EXTRACTOR_CASES': 'img/extractor-cases.png',
    'HEND': 'img/day-golden-hen.png',
    'HENN': 'img/night-golden-hen.png',
    'CHICKEND': 'img/day-golden-chicken.png',
    'CHICKENN': 'img/night-golden-chicken.png',
    'HURT_GOLDEN_HEN': 'img/hurt-golden-hen.png',
    'HURT_GOLDEN_CHICKEN': 'img/hurt-golden-chicken.png',
    'LOGO_INTERFACE': 'img/logo-interface.png',
    'FOREST_MODE_HOVER': 'img/forest-mode-hover.png',
    'NORMAL_MODE_HOVER': 'img/normal-mode-hover.png',
    'VAMPIRE_MODE_HOVER': 'img/vampire-mode-hover.png',
    'ZOMBIE_MODE_HOVER': 'img/zombie-mode-hover.png',
    'MODE_COMMUNITY_HOVER': 'img/community-mode-hover2.png',
    'MODE_EXPERIMENTAL_HOVER': 'img/experimental-mode-hover.png',
    'ZOMBIE_MODE_OUT': 'img/zombie-mode-out.png',
    'ZOMBIE_MODE_IN': 'img/zombie-mode-in.png',
    'ZOMBIE_MODE_CLICK': 'img/zombie-mode-click.png',
    'VAMPIRE_MODE_OUT': 'img/vampire-mode-out.png',
    'VAMPIRE_MODE_IN': 'img/vampire-mode-in.png',
    'VAMPIRE_MODE_CLICK': 'img/vampire-mode-click.png',
    'NORMAL_MODE_OUT': 'img/normal-mode-out.png',
    'NORMAL_MODE_IN': 'img/normal-mode-in.png',
    'NORMAL_MODE_CLICK': 'img/normal-mode-click.png',
    'FOREST_MODE_OUT': 'img/forest-mode-out.png',
    'FOREST_MODE_IN': 'img/forest-mode-in.png',
    'FOREST_MODE_CLICK': 'img/forest-mode-click.png',
    'MODE_COMMUNITY_OUT': 'img/community-mode-out.png',
    'MODE_COMMUNITY_IN': 'img/community-mode-in.png',
    'MODE_COMMUNITY_CLICK': 'img/community-mode-click.png',
    'MODE_EXPERIMENTAL_OUT': 'img/experimental-modes-out.png',
    'MODE_EXPERIMENTAL_IN': 'img/experimental-modes-in.png',
    'MODE_EXPERIMENTAL_CLICK': 'img/experimental-modes-click.png',
    'YOUTUBE_BUTTON_OUT': 'img/youtube-button-out.png',
    'YOUTUBE_BUTTON_IN': 'img/youtube-button-in.png',
    'YOUTUBE_BUTTON_CLICK': 'img/youtube-button-click.png',
    'WIKI_BUTTON_OUT': 'img/wiki-button-out.png',
    'WIKI_BUTTON_IN': 'img/wiki-button-in.png',
    'WIKI_BUTTON_CLICK': 'img/wiki-button-click.png',
    'TWITTER_BUTTON_OUT': 'img/twitter-button-out.png',
    'TWITTER_BUTTON_IN': 'img/twitter-button-in.png',
    'TWITTER_BUTTON_CLICK': 'img/twitter-button-click.png',
    'FACEBOOK_BUTTON_OUT': 'img/facebook-button-out.png',
    'FACEBOOK_BUTTON_IN': 'img/facebook-button-in.png',
    'FACEBOOK_BUTTON_CLICK': 'img/facebook-button-click.png',
    'REDDIT_BUTTON_OUT': 'img/reddit-button-out.png',
    'REDDIT_BUTTON_IN': 'img/reddit-button-in.png',
    'REDDIT_BUTTON_CLICK': 'img/reddit-button-click.png',
    'DISCORD_BUTTON_OUT': 'img/discord-button-out.png',
    'DISCORD_BUTTON_IN': 'img/discord-button-in.png',
    'DISCORD_BUTTON_CLICK': 'img/discord-button-click.png',
    'TERMINAL_BUTTON_OUT': 'img/terminal-button-out.png',
    'TERMINAL_BUTTON_IN': 'img/terminal-button-in.png',
    'TERMINAL_BUTTON_CLICK': 'img/terminal-button-click.png',
    'RESTART_OUT': 'img/restart-out.png',
    'RESTART_IN': 'img/restart-in.png',
    'RESTART_CLICK': 'img/restart-click.png',
    'GUIDE_OUT': 'img/guide-out.png',
    'GUIDE_IN': 'img/guide-in.png',
    'GUIDE_CLICK': 'img/guide-click.png',
    'COPY_PASTE_OUT': 'img/copy-paste-out.png',
    'COPY_PASTE_IN': 'img/copy-paste-in.png',
    'COPY_PASTE_CLICK': 'img/copy-paste-click.png',
    'LINKS_BG': 'img/link-buttons-bg.png',
    'CHANGELOG_BOX': 'img/changelog-box2.png',
    'CHANGELOG_BUTTON_OUT': 'img/changelog_29.png',
    'DEVASTIO_BUTTON_OUT': 'img/banner-devast.png',
    'PROFILE_BUTTON_OUT': 'img/profile-button-out.png',
    'PROFILE_BUTTON_IN': 'img/profile-button-in.png',
    'PROFILE_BUTTON_CLICK': 'img/profile-button-click.png',
    'LOGIN_BUTTON_OUT': 'img/login-button-out.png',
    'LOGIN_BUTTON_IN': 'img/login-button-in.png',
    'LOGIN_BUTTON_CLICK': 'img/login-button-click.png',
    'LOGIN_GOOGLE_OUT': 'img/login-google-out.png',
    'LOGIN_GOOGLE_IN': 'img/login-google-in.png',
    'LOGIN_GOOGLE_CLICK': 'img/login-google-click.png',
    'LOGIN_FACEBOOK_OUT': 'img/login-facebook-out.png',
    'LOGIN_FACEBOOK_IN': 'img/login-facebook-in.png',
    'LOGIN_FACEBOOK_CLICK': 'img/login-facebook-click.png',
    'ACCOUNT_BOX': 'img/account-box.png',
    'ACCOUNT_MAINTENANCE': 'img/account-under-maintenance.png',
    'CLOSE_BUTTON_OUT': 'img/close-button-account-out.png',
    'CLOSE_BUTTON_IN': 'img/close-button-account-in.png',
    'CLOSE_BUTTON_CLICK': 'img/close-button-account-click.png',
    'PLAY_BUTTON_OUT': 'img/play-button-out.png',
    'PLAY_BUTTON_IN': 'img/play-button-in.png',
    'PLAY_BUTTON_CLICK': 'img/play-button-click.png',
    'MODIFY_NAME_OUT': 'img/modify-name-out.png',
    'MODIFY_NAME_IN': 'img/modify-name-in.png',
    'MODIFY_NAME_CLICK': 'img/modify-name-click.png',
    'YES_BUTTON_OUT': 'img/yes-button-out.png',
    'YES_BUTTON_IN': 'img/yes-button-in.png',
    'YES_BUTTON_CLICK': 'img/yes-button-click.png',
    'YES_300_BUTTON_OUT': 'img/yes-300-button-out.png',
    'YES_300_BUTTON_IN': 'img/yes-300-button-in.png',
    'YES_300_BUTTON_CLICK': 'img/yes-300-button-click.png',
    'NO_BUTTON_OUT': 'img/no-button-out.png',
    'NO_BUTTON_IN': 'img/no-button-in.png',
    'NO_BUTTON_CLICK': 'img/no-button-click.png',
    'NO_THANKS_BUTTON_OUT': 'img/no-thanks-button-out.png',
    'NO_THANKS_BUTTON_IN': 'img/no-thanks-button-in.png',
    'NO_THANKS_BUTTON_CLICK': 'img/no-thanks-button-click.png',
    'SHOP_BUTTON_OUT': 'img/shop-button-out.png',
    'SHOP_BUTTON_IN': 'img/shop-button-in.png',
    'SHOP_BUTTON_CLICK': 'img/shop-button-click.png',
    'LOGOUT_OUT': 'img/logout-out.png',
    'LOGOUT_IN': 'img/logout-in.png',
    'LOGOUT_CLICK': 'img/logout-click.png',
    'TERMS_BUTTON_OUT': 'img/terms-button-out.png',
    'TERMS_BUTTON_IN': 'img/terms-button-in.png',
    'TERMS_BUTTON_CLICK': 'img/terms-button-click.png',
    'TUTORIAL_ICON': 'img/tutorial-icon.png',
    'SKINS_ICON': 'img/skins-icon.png',
    'SHOP_ICON': 'img/shop-icon.png',
    'PAINT_ICON': 'img/paint-icon.png',
    'LEADERBOARD_ICON': 'img/leaderboard-icon.png',
    'START_ICON': 'img/start-icon.png',
    'PROFILE_ICON': 'img/profile-icon.png',
    'SERVER_ACCESS_ICON': 'img/server-access-icon2.png',
    'ICONS_BG_BUTTON_OUT': 'img/button-homepage-bg-out.png',
    'ICONS_BG_BUTTON_IN': 'img/button-homepage-bg-in.png',
    'ICONS_BG_BUTTON_CLICK': 'img/button-homepage-bg-click.png',
    'ICONS_BOTTOM_BG_BUTTON_OUT': 'img/button-bottom-homepage-bg-out.png',
    'ICONS_BOTTOM_BG_BUTTON_IN': 'img/button-bottom-homepage-bg-in.png',
    'ICONS_BOTTOM_BG_BUTTON_CLICK': 'img/button-bottom-homepage-bg-click.png',
    'AVATAR_RESUME': 'img/lvl-player.png',
    'AVATAR_LVL1': 'img/avatar-player.png',
    'AVATAR_LVL2': 'img/avatar-player1.png',
    'AVATAR_LVL3': 'img/avatar-player2.png',
    'AVATAR_LVL4': 'img/avatar-player3.png',
    'AVATAR_LVL5': 'img/avatar-player4.png',
    'AVATAR_LVL6': 'img/avatar-player5.png',
    'AVATAR_LVL7': 'img/avatar-player6.png',
    'AVATAR_LVL8': 'img/avatar-player7.png',
    'AVATAR_LVL9': 'img/avatar-player8.png',
    'AVATAR_LVL10': 'img/avatar-player9.png',
    'AVATAR_LVL11': 'img/avatar-player10.png',
    'AVATAR_LVL12': 'img/avatar-player11.png',
    'AVATAR_LVL13': 'img/avatar-player12.png',
    'AVATAR_LVL14': 'img/avatar-player13.png',
    'AVATAR_LVL15': 'img/avatar-player14.png',
    'AVATAR_LVL16': 'img/avatar-player14.png',
    'AVATAR_LVL17': 'img/avatar-player14.png',
    'AVATAR_LVL18': 'img/avatar-player14.png',
    'GOLDEN_BREAD': 'img/golden-bread.png',
    'BUY_BREAD_OUT': 'img/buy-bread-out.png',
    'BUY_BREAD_IN': 'img/buy-bread-in.png',
    'BUY_BREAD_CLICK': 'img/buy-bread-click.png',
    'GAUGE': 'img/gauge.png',
    'SEASON_4': 'img/season-4-out.png',
    'SEASON_4_IN': 'img/season-4-in.png',
    'SEASON_4_OUT': 'img/season-4-click.png',
    'SEASON4_BOX': 'img/season4-box.png',
    'SEASON_5': 'img/season-5-out.png',
    'SEASON_5_IN': 'img/season-5-in.png',
    'SEASON_5_OUT': 'img/season-5-click.png',
    'SEASON5_BOX': 'img/season5-box.png',
    'PROFILE_BOX': 'img/profile2-box.png',
    'SKINS_BOX': 'img/skins-box.png',
    'SHOP_BOX': 'img/shop-box.png',
    'PRIVATE_SERVER_BOX': 'img/private-server-box.png',
    'SERVER_LOCATION_BOX': 'img/location-box.png',
    'SERVER_DURATION_BOX': 'img/server-duration-box.png',
    'TUTORIAL_BOX': 'img/tutorial-box.png',
    'LEADERBOARD_BOX': 'img/leaderboard1-box.png',
    'BUY_BREAD_BOX': 'img/buy-breads-box.png',
    'BAG_BOX': 'img/bag-box.png',
    'CRATE_BOX': 'img/deadbox-box.png',
    'BOOK_BOX': 'img/book-box.png',
    'ACCESSORIES_BOX': 'img/accessories-box.png',
    'CUSTOM_SKIN_BOX': 'img/customskin-box.png',
    'BAG_REMAIN_BOX': 'img/bag-lasts.png',
    'SERVER_REMAIN_BOX': 'img/server-lasts.png',
    'SERVER_ACCESS_BOX': 'img/server-access-box2.png',
    'LOOT_BOX': 'img/lootbox-box.png',
    'CHANGE_NICKNAME1_BOX': 'img/change-nickname0.png',
    'CHANGE_NICKNAME0_BOX': 'img/change-nickname1.png',
    'CHEATING_BOX': 'img/cheating-box.png',
    'DAILY_QUEST_BOX': 'img/daily-quest-box.png',
    'DAILY_5_BREAD': 'img/daily-5-bread.png',
    'DAILY_10_BREAD': 'img/daily-10-bread.png',
    'DAILY_VALID': 'img/daily-valid.png',
    'NORMAL_PROFILE_OUT': 'img/normal-profile-out.png',
    'NORMAL_PROFILE_IN': 'img/normal-profile-in.png',
    'NORMAL_PROFILE_CLICK': 'img/normal-profile-click.png',
    'FOREST_PROFILE_OUT': 'img/forest-profile-out.png',
    'FOREST_PROFILE_IN': 'img/forest-profile-in.png',
    'FOREST_PROFILE_CLICK': 'img/forest-profile-click.png',
    'ZOMBIE_PROFILE_OUT': 'img/zombie-profile-out.png',
    'ZOMBIE_PROFILE_IN': 'img/zombie-profile-in.png',
    'ZOMBIE_PROFILE_CLICK': 'img/zombie-profile-click.png',
    'VAMPIRE_PROFILE_OUT': 'img/vampire-profile-out.png',
    'VAMPIRE_PROFILE_IN': 'img/vampire-profile-in.png',
    'VAMPIRE_PROFILE_CLICK': 'img/vampire-profile-click.png',
    'TOTAL_PROFILE_OUT': 'img/total-profile-out.png',
    'TOTAL_PROFILE_IN': 'img/total-profile-in.png',
    'TOTAL_PROFILE_CLICK': 'img/total-profile-click.png',
    'SEASON1_PROFILE_OUT': 'img/season1-profile-out.png',
    'SEASON1_PROFILE_IN': 'img/season1-profile-in.png',
    'SEASON1_PROFILE_CLICK': 'img/season1-profile-click.png',
    'SEASON2_PROFILE_OUT': 'img/season2-profile-out.png',
    'SEASON2_PROFILE_IN': 'img/season2-profile-in.png',
    'SEASON2_PROFILE_CLICK': 'img/season2-profile-click.png',
    'SEASON3_PROFILE_OUT': 'img/season3-profile-out.png',
    'SEASON3_PROFILE_IN': 'img/season3-profile-in.png',
    'SEASON3_PROFILE_CLICK': 'img/season3-profile-click.png',
    'SEASON4_PROFILE_OUT': 'img/season4-profile-out.png',
    'SEASON4_PROFILE_IN': 'img/season4-profile-in.png',
    'SEASON4_PROFILE_CLICK': 'img/season4-profile-click.png',
    'SEASON5_PROFILE_OUT': 'img/season5-profile-out.png',
    'SEASON5_PROFILE_IN': 'img/season5-profile-in.png',
    'SEASON5_PROFILE_CLICK': 'img/season5-profile-click.png',
    'LOCKED_SKIN_ALERT': 'img/locked-skin-alert.png',
    'LOCKED_CUSTOM_ALERT': 'img/locked-custom-alert.png',
    'RED_LOCKED': 'img/bg-red-locked.png',
    'SKIN_BUTTON_OUT': 'img/skin-button-out.png',
    'SKIN_BUTTON_IN': 'img/skin-button-in.png',
    'SKIN_BUTTON_CLICK': 'img/skin-button-click.png',
    'ACCESSORY_BUTTON_OUT': 'img/accessory-button-out.png',
    'ACCESSORY_BUTTON_IN': 'img/accessory-button-in.png',
    'ACCESSORY_BUTTON_CLICK': 'img/accessory-button-click.png',
    'BAG_BUTTON_OUT': 'img/bag-button-out.png',
    'BAG_BUTTON_IN': 'img/bag-button-in.png',
    'BAG_BUTTON_CLICK': 'img/bag-button-click.png',
    'BOOK_BUTTON_OUT': 'img/book-button-out.png',
    'BOOK_BUTTON_IN': 'img/book-button-in.png',
    'BOOK_BUTTON_CLICK': 'img/book-button-click.png',
    'CRATE_BUTTON_OUT': 'img/deadbox-button-out.png',
    'CRATE_BUTTON_IN': 'img/deadbox-button-in.png',
    'CRATE_BUTTON_CLICK': 'img/deadbox-button-click.png',
    'LOOT_BUTTON_OUT': 'img/loot-button-out.png',
    'LOOT_BUTTON_IN': 'img/loot-button-in.png',
    'LOOT_BUTTON_CLICK': 'img/loot-button-click.png',
    'FREE_ITEM_OUT': 'img/free-item-out.png',
    'FREE_ITEM_IN': 'img/free-item-in.png',
    'FREE_ITEM_CLICK': 'img/free-item-click.png',
    'WOOD_ITEM_OUT': 'img/wood-item-out.png',
    'WOOD_ITEM_IN': 'img/wood-item-in.png',
    'WOOD_ITEM_CLICK': 'img/wood-item-click.png',
    'STONE_ITEM_OUT': 'img/stone-item.png',
    'STONE_ITEM_IN': 'img/stone-item-in.png',
    'STONE_ITEM_CLICK': 'img/stone-item-click.png',
    'GOLD_ITEM_OUT': 'img/gold-item.png',
    'GOLD_ITEM_IN': 'img/gold-item-in.png',
    'GOLD_ITEM_CLICK': 'img/gold-item-click.png',
    'DIAMOND_ITEM_OUT': 'img/diamond-item.png',
    'DIAMOND_ITEM_IN': 'img/diamond-item-in.png',
    'DIAMOND_ITEM_CLICK': 'img/diamond-item-click.png',
    'AMETHYST_ITEM_OUT': 'img/amethyst-item.png',
    'AMETHYST_ITEM_IN': 'img/amethyst-item-in.png',
    'AMETHYST_ITEM_CLICK': 'img/amethyst-item-click.png',
    'REIDITE_ITEM_OUT': 'img/reidite-item.png',
    'REIDITE_ITEM_IN': 'img/reidite-item-in.png',
    'REIDITE_ITEM_CLICK': 'img/reidite-item-click.png',
    'SPECIAL_ITEM_OUT': 'img/special-item-out.png',
    'SPECIAL_ITEM_IN': 'img/special-item-in.png',
    'SPECIAL_ITEM_CLICK': 'img/special-item-click.png',
    'LEVEL_ITEM_OUT': 'img/level-item-out.png',
    'LEVEL_ITEM_IN': 'img/level-item-in.png',
    'LEVEL_ITEM_CLICK': 'img/level-item-click.png',
    'SKIN_PREVIOUS_OUT': 'img/skin-previous-out.png',
    'SKIN_PREVIOUS_IN': 'img/skin-previous-in.png',
    'SKIN_PREVIOUS_CLICK': 'img/skin-previous-click.png',
    'SKIN_NEXT_OUT': 'img/skin-next-out.png',
    'SKIN_NEXT_IN': 'img/skin-next-in.png',
    'SKIN_NEXT_CLICK': 'img/skin-next-click.png',
    'BACK_BUTTON_OUT': 'img/back-button-out.png',
    'BACK_BUTTON_IN': 'img/back-button-in.png',
    'BACK_BUTTON_CLICK': 'img/back-button-click.png',
    'GET_MORE_BUTTON_OUT': 'img/get-more-button-out.png',
    'GET_MORE_BUTTON_IN': 'img/get-more-button-in.png',
    'GET_MORE_BUTTON_CLICK': 'img/get-more-button-click.png',
    'CURRENCY1_OUT': 'img/currency1-out.png',
    'CURRENCY1_IN': 'img/currency1-in.png',
    'CURRENCY1_CLICK': 'img/currency1-click.png',
    'CURRENCY2_OUT': 'img/currency2-out.png',
    'CURRENCY2_IN': 'img/currency2-in.png',
    'CURRENCY2_CLICK': 'img/currency2-click.png',
    'CURRENCY3_OUT': 'img/currency3-out.png',
    'CURRENCY3_IN': 'img/currency3-in.png',
    'CURRENCY3_CLICK': 'img/currency3-click.png',
    'CURRENCY4_OUT': 'img/currency4-out.png',
    'CURRENCY4_IN': 'img/currency4-in.png',
    'CURRENCY4_CLICK': 'img/currency4-click.png',
    'CURRENCY5_OUT': 'img/currency5-out.png',
    'CURRENCY5_IN': 'img/currency5-in.png',
    'CURRENCY5_CLICK': 'img/currency5-click.png',
    'PRICE1_OUT': 'img/price1-out.png',
    'PRICE1_IN': 'img/price1-in.png',
    'PRICE1_CLICK': 'img/price1-click.png',
    'PRICE2_OUT': 'img/price2-out.png',
    'PRICE2_IN': 'img/price2-in.png',
    'PRICE2_CLICK': 'img/price2-click.png',
    'PRICE3_OUT': 'img/price3-out.png',
    'PRICE3_IN': 'img/price3-in.png',
    'PRICE3_CLICK': 'img/price3-click.png',
    'PRICE4_OUT': 'img/price4-out.png',
    'PRICE4_IN': 'img/price4-in.png',
    'PRICE4_CLICK': 'img/price4-click.png',
    'PRICE5_OUT': 'img/price5-out.png',
    'PRICE5_IN': 'img/price5-in.png',
    'PRICE5_CLICK': 'img/price5-click.png',
    'BUY_PRIVATE_SERVER_OUT': 'img/buy-private-server-out.png',
    'BUY_PRIVATE_SERVER_IN': 'img/buy-private-server-in.png',
    'BUY_PRIVATE_SERVER_CLICK': 'img/buy-private-server-click.png',
    'ATLANTA_OUT': 'img/atlanta-out.png',
    'ATLANTA_IN': 'img/atlanta-in.png',
    'ATLANTA_CLICK': 'img/atlanta-click.png',
    'DALLAS_OUT': 'img/dallas-out.png',
    'DALLAS_IN': 'img/dallas-in.png',
    'DALLAS_CLICK': 'img/dallas-click.png',
    'FREMONT_OUT': 'img/fremont-out.png',
    'FREMONT_IN': 'img/fremont-in.png',
    'FREMONT_CLICK': 'img/fremont-click.png',
    'NEWARK_OUT': 'img/newark-out.png',
    'NEWARK_IN': 'img/newark-in.png',
    'NEWARK_CLICK': 'img/newark-click.png',
    'TORONTO_OUT': 'img/toronto-out.png',
    'TORONTO_IN': 'img/toronto-in.png',
    'TORONTO_CLICK': 'img/toronto-click.png',
    'SINGAPORE_OUT': 'img/singapore-out.png',
    'SINGAPORE_IN': 'img/singapore-in.png',
    'SINGAPORE_CLICK': 'img/singapore-click.png',
    'FRANKFURT_OUT': 'img/frankfurt-out.png',
    'FRANKFURT_IN': 'img/frankfurt-in.png',
    'FRANKFURT_CLICK': 'img/frankfurt-click.png',
    'LONDON_OUT': 'img/london-out.png',
    'LONDON_IN': 'img/london-in.png',
    'LONDON_CLICK': 'img/london-click.png',
    'MUMBAI_OUT': 'img/mumbai-out.png',
    'MUMBAI_IN': 'img/mumbai-in.png',
    'MUMBAI_CLICK': 'img/mumbai-click.png',
    'TOKYO_OUT': 'img/tokyo-out.png',
    'TOKYO_IN': 'img/tokyo-in.png',
    'TOKYO_CLICK': 'img/tokyo-click.png',
    'YES_LOCATION_OUT': 'img/yes-location-out.png',
    'YES_LOCATION_IN': 'img/yes-location-in.png',
    'YES_LOCATION_CLICK': 'img/yes-location-click.png',
    'DAYS3_OUT': 'img/3days-out.png',
    'DAYS3_IN': 'img/3days-in.png',
    'DAYS3_CLICK': 'img/3days-click.png',
    'DAYS7_OUT': 'img/7days-out.png',
    'DAYS7_IN': 'img/7days-in.png',
    'DAYS7_CLICK': 'img/7days-click.png',
    'DAYS30_OUT': 'img/30days-out.png',
    'DAYS30_IN': 'img/30days-in.png',
    'DAYS30_CLICK': 'img/30days-click.png',
    'DAYS90_OUT': 'img/90days-out.png',
    'DAYS90_IN': 'img/90days-in.png',
    'DAYS90_CLICK': 'img/90days-click.png',
    'SPIN1': 'img/spin1.png',
    'SPIN2': 'img/spin2.png',
    'SPIN3': 'img/spin3.png',
    'SPIN4': 'img/spin4.png',
    'SPIN5': 'img/spin5.png',
    'SPIN6': 'img/spin6.png',
    'ARROW_SPIN': 'img/arrow-spin.png',
    'SPIN_BUTTON_1_OUT': 'img/spin-button-1-out.png',
    'SPIN_BUTTON_1_IN': 'img/spin-button-1-in.png',
    'SPIN_BUTTON_1_CLICK': 'img/spin-button-1-click.png',
    'SPIN_BUTTON_2_OUT': 'img/spin-button-2-out.png',
    'SPIN_BUTTON_2_IN': 'img/spin-button-2-in.png',
    'SPIN_BUTTON_2_CLICK': 'img/spin-button-2-click.png',
    'SPIN_BUTTON_3_OUT': 'img/spin-button-3-out.png',
    'SPIN_BUTTON_3_IN': 'img/spin-button-3-in.png',
    'SPIN_BUTTON_3_CLICK': 'img/spin-button-3-click.png',
    'SPIN_BUTTON_4_OUT': 'img/spin-button-4-out.png',
    'SPIN_BUTTON_4_IN': 'img/spin-button-4-in.png',
    'SPIN_BUTTON_4_CLICK': 'img/spin-button-4-click.png',
    'SPIN_BUTTON_5_OUT': 'img/spin-button-5-out.png',
    'SPIN_BUTTON_5_IN': 'img/spin-button-5-in.png',
    'SPIN_BUTTON_5_CLICK': 'img/spin-button-5-click.png',
    'SPIN_LIGHT': 'img/spin-light.png',
    'TUTO_WIKI_OUT': 'img/tuto-wiki-out.png',
    'TUTO_WIKI_IN': 'img/tuto-wiki-in.png',
    'TUTO_WIKI_CLICK': 'img/tuto-wiki-click.png',
    'TUTO_PREVIOUS_OUT': 'img/tuto-previous-out.png',
    'TUTO_PREVIOUS_IN': 'img/tuto-previous-in.png',
    'TUTO_PREVIOUS_CLICK': 'img/tuto-previous-click.png',
    'TUTO_NEXT_OUT': 'img/tuto-next-out.png',
    'TUTO_NEXT_IN': 'img/tuto-next-in.png',
    'TUTO_NEXT_CLICK': 'img/tuto-next-click.png',
    'TIME_LEADERBOARD_OUT': 'img/time-leaderboard-out.png',
    'TIME_LEADERBOARD_IN': 'img/time-leaderboard-in.png',
    'TIME_LEADERBOARD_CLICK': 'img/time-leaderboard-click.png',
    'SCORE_LEADERBOARD_OUT': 'img/score-leaderboard-out.png',
    'SCORE_LEADERBOARD_IN': 'img/score-leaderboard-in.png',
    'SCORE_LEADERBOARD_CLICK': 'img/score-leaderboard-click.png',
    'LVL_LEADERBOARD_OUT': 'img/lvl-leaderboard-out.png',
    'LVL_LEADERBOARD_IN': 'img/lvl-leaderboard-in.png',
    'LVL_LEADERBOARD_CLICK': 'img/lvl-leaderboard-click.png',
    'KILL_LEADERBOARD_OUT': 'img/kill-leaderboard-out.png',
    'KILL_LEADERBOARD_IN': 'img/kill-leaderboard-in.png',
    'KILL_LEADERBOARD_CLICK': 'img/kill-leaderboard-click.png',
    'ALL_LEADERBOARD_OUT': 'img/all-leaderboard-out.png',
    'ALL_LEADERBOARD_IN': 'img/all-leaderboard-in.png',
    'ALL_LEADERBOARD_CLICK': 'img/all-leaderboard-click.png',
    'TODAY_LEADERBOARD_OUT': 'img/today-leaderboard-out.png',
    'TODAY_LEADERBOARD_IN': 'img/today-leaderboard-in.png',
    'TODAY_LEADERBOARD_CLICK': 'img/today-leaderboard-click.png',
    'WEEK_LEADERBOARD_OUT': 'img/week-leaderboard-out.png',
    'WEEK_LEADERBOARD_IN': 'img/week-leaderboard-in.png',
    'WEEK_LEADERBOARD_CLICK': 'img/week-leaderboard-click.png',
    'SEASON1_LEADERBOARD_OUT': 'img/season1-out.png',
    'SEASON1_LEADERBOARD_IN': 'img/season1-in.png',
    'SEASON1_LEADERBOARD_CLICK': 'img/season1-click.png',
    'SEASON2_LEADERBOARD_OUT': 'img/season2--out.png',
    'SEASON2_LEADERBOARD_IN': 'img/season2--in.png',
    'SEASON2_LEADERBOARD_CLICK': 'img/season2--click.png',
    'SEASON3_LEADERBOARD_OUT': 'img/season3-out.png',
    'SEASON3_LEADERBOARD_IN': 'img/season3-in.png',
    'SEASON3_LEADERBOARD_CLICK': 'img/season3-click.png',
    'SEASON4_LEADERBOARD_OUT': 'img/season4-out.png',
    'SEASON4_LEADERBOARD_IN': 'img/season4-in.png',
    'SEASON4_LEADERBOARD_CLICK': 'img/season4-click.png',
    'SEASON5_LEADERBOARD_OUT': 'img/season5-out.png',
    'SEASON5_LEADERBOARD_IN': 'img/season5-in.png',
    'SEASON5_LEADERBOARD_CLICK': 'img/season5-click.png',
    'TOTAL_LEAD_OUT': 'img/total-lead-out.png',
    'TOTAL_LEAD_IN': 'img/total-lead-in.png',
    'TOTAL_LEAD_CLICK': 'img/total-lead-click.png',
    'NORMAL_LEAD_OUT': 'img/normal-lead-out.png',
    'NORMAL_LEAD_IN': 'img/normal-lead-in.png',
    'NORMAL_LEAD_CLICK': 'img/normal-lead-click.png',
    'FOREST_LEAD_OUT': 'img/forest-lead-out.png',
    'FOREST_LEAD_IN': 'img/forest-lead-in.png',
    'FOREST_LEAD_CLICK': 'img/forest-lead-click.png',
    'VAMPIRE_LEAD_OUT': 'img/vampire-lead-out.png',
    'VAMPIRE_LEAD_IN': 'img/vampire-lead-in.png',
    'VAMPIRE_LEAD_CLICK': 'img/vampire-lead-click.png',
    'ZOMBIE_LEAD_OUT': 'img/zombie-lead-out.png',
    'ZOMBIE_LEAD_IN': 'img/zombie-lead-in.png',
    'ZOMBIE_LEAD_CLICK': 'img/zombie-lead-click.png',
    'LEVEL5D': 'img/day-level5.png',
    'LEVEL5N': 'img/night-level5.png',
    'LEVEL10D': 'img/day-level10.png',
    'LEVEL10N': 'img/night-level10.png',
    'LEVEL15D': 'img/day-level15.png',
    'LEVEL15N': 'img/night-level15.png',
    'LEVEL20D': 'img/day-level20.png',
    'LEVEL20N': 'img/night-level20.png',
    'LEVEL25D': 'img/day-level25.png',
    'LEVEL25N': 'img/night-level25.png',
    'LEVEL30D': 'img/day-level30.png',
    'LEVEL30N': 'img/night-level30.png',
    'LEVEL35D': 'img/day-level35.png',
    'LEVEL35N': 'img/night-level35.png',
    'LEVEL40D': 'img/day-level40.png',
    'LEVEL40N': 'img/night-level40.png',
    'LEVEL45D': 'img/day-level45.png',
    'LEVEL45N': 'img/night-level45.png',
    'LEVEL50D': 'img/day-level50.png',
    'LEVEL50N': 'img/night-level50.png',
    'LEVEL55D': 'img/day-level55.png',
    'LEVEL55N': 'img/night-level55.png',
    'LEVEL60D': 'img/day-level60.png',
    'LEVEL60N': 'img/night-level60.png',
    'SKIN_DEVASTD': 'img/day-skin-devast0.png',
    'SKIN_DEVASTN': 'img/night-skin-devast0.png',
    'HAND_DEVASTD': 'img/day-hand-devaster.png',
    'HAND_DEVASTN': 'img/night-hand-devaster.png',
    'SKIN_STARD': 'img/day-skin-star0.png',
    'SKIN_STARN': 'img/night-skin-star0.png',
    'HAND_STARD': 'img/day-hand-star0.png',
    'HAND_STARN': 'img/night-hand-star0.png',
    'SKIN_VAMPIRED': 'img/day-vampire.png',
    'SKIN_VAMPIREN': 'img/night-vampire.png',
    'HAND_VAMPIRED': 'img/day-hand-vampire.png',
    'HAND_VAMPIREN': 'img/night-hand-vampire.png',
    'SKIN_ZOMBIED': 'img/day-zombie.png',
    'SKIN_ZOMBIEN': 'img/night-zombie.png',
    'HAND_ZOMBIED': 'img/day-hand-zombie.png',
    'HAND_ZOMBIEN': 'img/night-hand-zombie.png',
    'SKIN_ROBOTD': 'img/day-skin113.png',
    'SKIN_ROBOTN': 'img/night-skin113.png',
    'HAND_ROBOTD': 'img/day-hand-skin113.png',
    'HAND_ROBOTN': 'img/night-hand-skin113.png',
    'SKIN0D': 'img/day-skin0.png',
    'SKIN0N': 'img/night-skin0.png',
    'SKIN1D': 'img/day-skin1.png',
    'SKIN1N': 'img/night-skin1.png',
    'SKIN2D': 'img/day-skin2.png',
    'SKIN2N': 'img/night-skin2.png',
    'SKIN3D': 'img/day-skin3.png',
    'SKIN3N': 'img/night-skin3.png',
    'SKIN4D': 'img/day-skin4.png',
    'SKIN4N': 'img/night-skin4.png',
    'SKIN5D': 'img/day-skin5.png',
    'SKIN5N': 'img/night-skin5.png',
    'SKIN6D': 'img/day-skin6.png',
    'SKIN6N': 'img/night-skin6.png',
    'SKIN7D': 'img/day-skin7.png',
    'SKIN7N': 'img/night-skin7.png',
    'SKIN8D': 'img/day-skin8.png',
    'SKIN8N': 'img/night-skin8.png',
    'SKIN9D': 'img/day-skin9.png',
    'SKIN9N': 'img/night-skin9.png',
    'SKIN10D': 'img/day-skin10.png',
    'SKIN10N': 'img/night-skin10.png',
    'SKIN11D': 'img/day-skin11.png',
    'SKIN11N': 'img/night-skin11.png',
    'SKIN12D': 'img/day-skin12.png',
    'SKIN12N': 'img/night-skin12.png',
    'SKIN13D': 'img/day-skin13.png',
    'SKIN13N': 'img/night-skin13.png',
    'SKIN14D': 'img/day-skin14.png',
    'SKIN14N': 'img/night-skin14.png',
    'SKIN15D': 'img/day-skin15.png',
    'SKIN15N': 'img/night-skin15.png',
    'SKIN16D': 'img/day-skin16.png',
    'SKIN16N': 'img/night-skin16.png',
    'SKIN17D': 'img/day-skin17.png',
    'SKIN17N': 'img/night-skin17.png',
    'SKIN18D': 'img/day-skin18.png',
    'SKIN18N': 'img/night-skin18.png',
    'SKIN19D': 'img/day-skin19.png',
    'SKIN19N': 'img/night-skin19.png',
    'SKIN20D': 'img/day-skin20.png',
    'SKIN20N': 'img/night-skin20.png',
    'SKIN21D': 'img/day-skin21.png',
    'SKIN21N': 'img/night-skin21.png',
    'SKIN22D': 'img/day-skin22.png',
    'SKIN22N': 'img/night-skin22.png',
    'SKIN23D': 'img/day-skin23.png',
    'SKIN23N': 'img/night-skin23.png',
    'SKIN24D': 'img/day-skin24.png',
    'SKIN24N': 'img/night-skin24.png',
    'SKIN25D': 'img/day-skin25.png',
    'SKIN25N': 'img/night-skin25.png',
    'SKIN26D': 'img/day-skin26.png',
    'SKIN26N': 'img/night-skin26.png',
    'SKIN27D': 'img/day-skin27.png',
    'SKIN27N': 'img/night-skin27.png',
    'SKIN28D': 'img/day-skin28.png',
    'SKIN28N': 'img/night-skin28.png',
    'SKIN29D': 'img/day-skin29.png',
    'SKIN29N': 'img/night-skin29.png',
    'SKIN30D': 'img/day-skin30.png',
    'SKIN30N': 'img/night-skin30.png',
    'SKIN31D': 'img/day-skin31.png',
    'SKIN31N': 'img/night-skin31.png',
    'SKIN32D': 'img/day-skin32.png',
    'SKIN32N': 'img/night-skin32.png',
    'SKIN33D': 'img/day-skin33.png',
    'SKIN33N': 'img/night-skin33.png',
    'SKIN34D': 'img/day-skin34.png',
    'SKIN34N': 'img/night-skin34.png',
    'SKIN35D': 'img/day-skin35.png',
    'SKIN35N': 'img/night-skin35.png',
    'SKIN36D': 'img/day-skin36.png',
    'SKIN36N': 'img/night-skin36.png',
    'SKIN37D': 'img/day-skin37.png',
    'SKIN37N': 'img/night-skin37.png',
    'SKIN38D': 'img/day-skin38.png',
    'SKIN38N': 'img/night-skin38.png',
    'SKIN39D': 'img/day-skin39.png',
    'SKIN39N': 'img/night-skin39.png',
    'SKIN40D': 'img/day-skin40.png',
    'SKIN40N': 'img/night-skin40.png',
    'SKIN41D': 'img/day-skin41.png',
    'SKIN41N': 'img/night-skin41.png',
    'SKIN42D': 'img/day-skin42.png',
    'SKIN42N': 'img/night-skin42.png',
    'SKIN43D': 'img/day-skin43.png',
    'SKIN43N': 'img/night-skin43.png',
    'SKIN44D': 'img/day-skin44.png',
    'SKIN44N': 'img/night-skin44.png',
    'SKIN45D': 'img/day-skin45.png',
    'SKIN45N': 'img/night-skin45.png',
    'SKIN46D': 'img/day-skin46.png',
    'SKIN46N': 'img/night-skin46.png',
    'SKIN47D': 'img/day-skin47.png',
    'SKIN47N': 'img/night-skin47.png',
    'SKIN48D': 'img/day-skin48.png',
    'SKIN48N': 'img/night-skin48.png',
    'SKIN49D': 'img/day-skin49.png',
    'SKIN49N': 'img/night-skin49.png',
    'SKIN50D': 'img/day-skin50.png',
    'SKIN50N': 'img/night-skin50.png',
    'SKIN51D': 'img/day-skin51.png',
    'SKIN51N': 'img/night-skin51.png',
    'SKIN52D': 'img/day-skin52.png',
    'SKIN52N': 'img/night-skin52.png',
    'SKIN53D': 'img/day-skin53.png',
    'SKIN53N': 'img/night-skin53.png',
    'SKIN54D': 'img/day-skin54.png',
    'SKIN54N': 'img/night-skin54.png',
    'SKIN55D': 'img/day-skin55.png',
    'SKIN55N': 'img/night-skin55.png',
    'SKIN56D': 'img/day-skin56.png',
    'SKIN56N': 'img/night-skin56.png',
    'SKIN57D': 'img/day-skin57.png',
    'SKIN57N': 'img/night-skin57.png',
    'SKIN58D': 'img/day-skin58.png',
    'SKIN58N': 'img/night-skin58.png',
    'SKIN59D': 'img/day-skin59.png',
    'SKIN59N': 'img/night-skin59.png',
    'SKIN60D': 'img/day-skin60.png',
    'SKIN60N': 'img/night-skin60.png',
    'SKIN61D': 'img/day-skin61.png',
    'SKIN61N': 'img/night-skin61.png',
    'SKIN62D': 'img/day-skin62.png',
    'SKIN62N': 'img/night-skin62.png',
    'SKIN63D': 'img/day-skin63.png',
    'SKIN63N': 'img/night-skin63.png',
    'SKIN64D': 'img/day-skin64.png',
    'SKIN64N': 'img/night-skin64.png',
    'SKIN65D': 'img/day-skin65.png',
    'SKIN65N': 'img/night-skin65.png',
    'SKIN66D': 'img/day-skin66.png',
    'SKIN66N': 'img/night-skin66.png',
    'SKIN67D': 'img/day-skin67.png',
    'SKIN67N': 'img/night-skin67.png',
    'SKIN68D': 'img/day-skin68.png',
    'SKIN68N': 'img/night-skin68.png',
    'SKIN69D': 'img/day-skin69.png',
    'SKIN69N': 'img/night-skin69.png',
    'SKIN70D': 'img/day-skin70.png',
    'SKIN70N': 'img/night-skin70.png',
    'SKIN71D': 'img/day-skin71.png',
    'SKIN71N': 'img/night-skin71.png',
    'SKIN72D': 'img/day-skin72.png',
    'SKIN72N': 'img/night-skin72.png',
    'SKIN73D': 'img/day-skin73.png',
    'SKIN73N': 'img/night-skin73.png',
    'SKIN74D': 'img/day-skin74.png',
    'SKIN74N': 'img/night-skin74.png',
    'SKIN75D': 'img/day-skin75.png',
    'SKIN75N': 'img/night-skin75.png',
    'SKIN76D': 'img/day-skin76.png',
    'SKIN76N': 'img/night-skin76.png',
    'SKIN77D': 'img/day-skin77.png',
    'SKIN77N': 'img/night-skin77.png',
    'SKIN78D': 'img/day-skin78.png',
    'SKIN78N': 'img/night-skin78.png',
    'SKIN79D': 'img/day-skin79.png',
    'SKIN79N': 'img/night-skin79.png',
    'SKIN80D': 'img/day-skin80.png',
    'SKIN80N': 'img/night-skin80.png',
    'SKIN81D': 'img/day-skin81.png',
    'SKIN81N': 'img/night-skin81.png',
    'SKIN82D': 'img/day-skin82.png',
    'SKIN82N': 'img/night-skin82.png',
    'SKIN83D': 'img/day-skin83.png',
    'SKIN83N': 'img/night-skin83.png',
    'SKIN84D': 'img/day-skin84.png',
    'SKIN84N': 'img/night-skin84.png',
    'SKIN85D': 'img/day-skin85.png',
    'SKIN85N': 'img/night-skin85.png',
    'SKIN86D': 'img/day-skin86.png',
    'SKIN86N': 'img/night-skin86.png',
    'SKIN87D': 'img/day-skin87.png',
    'SKIN87N': 'img/night-skin87.png',
    'SKIN88D': 'img/day-skin88.png',
    'SKIN88N': 'img/night-skin88.png',
    'SKIN89D': 'img/day-skin89.png',
    'SKIN89N': 'img/night-skin89.png',
    'SKIN90D': 'img/day-skin90.png',
    'SKIN90N': 'img/night-skin90.png',
    'SKIN91D': 'img/day-skin91.png',
    'SKIN91N': 'img/night-skin91.png',
    'SKIN92D': 'img/day-skin92.png',
    'SKIN92N': 'img/night-skin92.png',
    'SKIN93D': 'img/day-skin93.png',
    'SKIN93N': 'img/night-skin93.png',
    'SKIN94D': 'img/day-skin94.png',
    'SKIN94N': 'img/night-skin94.png',
    'SKIN95D': 'img/day-skin95.png',
    'SKIN95N': 'img/night-skin95.png',
    'SKIN96D': 'img/day-skin96.png',
    'SKIN96N': 'img/night-skin96.png',
    'SKIN97D': 'img/day-skin97.png',
    'SKIN97N': 'img/night-skin97.png',
    'SKIN98D': 'img/day-skin98.png',
    'SKIN98N': 'img/night-skin98.png',
    'SKIN99D': 'img/day-skin99.png',
    'SKIN99N': 'img/night-skin99.png',
    'SKIN100D': 'img/day-skin100.png',
    'SKIN100N': 'img/night-skin100.png',
    'SKIN101D': 'img/day-skin101.png',
    'SKIN101N': 'img/night-skin101.png',
    'SKIN102D': 'img/day-skin102.png',
    'SKIN102N': 'img/night-skin102.png',
    'SKIN103D': 'img/day-skin103.png',
    'SKIN103N': 'img/night-skin103.png',
    'SKIN104D': 'img/day-skin104.png',
    'SKIN104N': 'img/night-skin104.png',
    'SKIN105D': 'img/day-skin105.png',
    'SKIN105N': 'img/night-skin105.png',
    'SKIN106D': 'img/day-skin106.png',
    'SKIN106N': 'img/night-skin106.png',
    'SKIN107D': 'img/day-skin107.png',
    'SKIN107N': 'img/night-skin107.png',
    'SKIN108D': 'img/day-skin108.png',
    'SKIN108N': 'img/night-skin108.png',
    'SKIN109D': 'img/day-skin109.png',
    'SKIN109N': 'img/night-skin109.png',
    'SKIN110D': 'img/day-skin110.png',
    'SKIN110N': 'img/night-skin110.png',
    'SKIN111D': 'img/day-skin111.png',
    'SKIN111N': 'img/night-skin111.png',
    'SKIN112D': 'img/day-skin112.png',
    'SKIN112N': 'img/night-skin112.png',
    'SKIN113D': 'img/day-skin113.png',
    'SKIN113N': 'img/night-skin113.png',
    'SKIN114D': 'img/day-skin114.png',
    'SKIN114N': 'img/night-skin114.png',
    'SKIN115D': 'img/day-skin115.png',
    'SKIN115N': 'img/night-skin115.png',
    'SKIN116D': 'img/day-skin116.png',
    'SKIN116N': 'img/night-skin116.png',
    'SKIN117D': 'img/day-skin117.png',
    'SKIN117N': 'img/night-skin117.png',
    'SKIN118D': 'img/day-skin118.png',
    'SKIN118N': 'img/night-skin118.png',
    'SKIN119D': 'img/day-skin119.png',
    'SKIN119N': 'img/night-skin119.png',
    'SKIN120D': 'img/day-skin120.png',
    'SKIN120N': 'img/night-skin120.png',
    'SKIN121D': 'img/day-skin121.png',
    'SKIN121N': 'img/night-skin121.png',
    'SKIN122D': 'img/day-skin122.png',
    'SKIN122N': 'img/night-skin122.png',
    'SKIN123D': 'img/day-skin123.png',
    'SKIN123N': 'img/night-skin123.png',
    'SKIN124D': 'img/day-skin124.png',
    'SKIN124N': 'img/night-skin124.png',
    'SKIN125D': 'img/day-skin125.png',
    'SKIN125N': 'img/night-skin125.png',
    'SKIN126D': 'img/day-skin126.png',
    'SKIN126N': 'img/night-skin126.png',
    'SKIN127D': 'img/day-skin127.png',
    'SKIN127N': 'img/night-skin127.png',
    'SKIN128D': 'img/day-skin128.png',
    'SKIN128N': 'img/night-skin128.png',
    'SKIN129D': 'img/day-skin129.png',
    'SKIN129N': 'img/night-skin129.png',
    'SKIN130D': 'img/day-skin130-1.png',
    'SKIN130N': 'img/night-skin130-1.png',
    'SKIN131D': 'img/day-skin131.png',
    'SKIN131N': 'img/night-skin131.png',
    'SKIN132D': 'img/day-skin132.png',
    'SKIN132N': 'img/night-skin132.png',
    'SKIN133D': 'img/day-skin133.png',
    'SKIN133N': 'img/night-skin133.png',
    'SKIN134D': 'img/day-skin134.png',
    'SKIN134N': 'img/night-skin134.png',
    'SKIN135D': 'img/day-skin135.png',
    'SKIN135N': 'img/night-skin135.png',
    'SKIN136D': 'img/day-skin136.png',
    'SKIN136N': 'img/night-skin136.png',
    'SKIN137D': 'img/day-skin137.png',
    'SKIN137N': 'img/night-skin137.png',
    'SKIN138D': 'img/day-skin138.png',
    'SKIN138N': 'img/night-skin138.png',
    'SKIN139D': 'img/day-skin139.png',
    'SKIN139N': 'img/night-skin139.png',
    'SKIN140D': 'img/day-skin140.png',
    'SKIN140N': 'img/night-skin140.png',
    'SKIN141D': 'img/day-skin141.png',
    'SKIN141N': 'img/night-skin141.png',
    'SKIN142D': 'img/day-skin142.png',
    'SKIN142N': 'img/night-skin142.png',
    'SKIN143D': 'img/day-skin143.png',
    'SKIN143N': 'img/night-skin143.png',
    'SKIN144D': 'img/day-skin144.png',
    'SKIN144N': 'img/night-skin144.png',
    'SKIN145D': 'img/day-skin145.png',
    'SKIN145N': 'img/night-skin145.png',
    'SKIN146D': 'img/day-skin146.png',
    'SKIN146N': 'img/night-skin146.png',
    'SKIN147D': 'img/day-skin147.png',
    'SKIN147N': 'img/night-skin147.png',
    'SKIN148D': 'img/day-skin148.png',
    'SKIN148N': 'img/night-skin148.png',
    'SKIN149D': 'img/day-skin149.png',
    'SKIN149N': 'img/night-skin149.png',
    'SKIN150D': 'img/day-skin150.png',
    'SKIN150N': 'img/night-skin150.png',
    'HAND_SKIN0D': 'img/day-hand-skin0.png',
    'HAND_SKIN0N': 'img/night-hand-skin0.png',
    'HAND_SKIN1D': 'img/day-hand-skin1.png',
    'HAND_SKIN1N': 'img/night-hand-skin1.png',
    'HAND_SKIN2D': 'img/day-hand-skin2.png',
    'HAND_SKIN2N': 'img/night-hand-skin2.png',
    'HAND_SKIN3D': 'img/day-hand-skin3.png',
    'HAND_SKIN3N': 'img/night-hand-skin3.png',
    'HAND_SKIN4D': 'img/day-hand-skin4.png',
    'HAND_SKIN4N': 'img/night-hand-skin4.png',
    'HAND_SKIN5D': 'img/day-hand-skin5.png',
    'HAND_SKIN5N': 'img/night-hand-skin5.png',
    'HAND_SKIN6D': 'img/day-hand-skin6.png',
    'HAND_SKIN6N': 'img/night-hand-skin6.png',
    'HAND_SKIN7D': 'img/day-hand-skin6.png',
    'HAND_SKIN7N': 'img/night-hand-skin6.png',
    'HAND_SKIN8D': 'img/day-hand-skin8.png',
    'HAND_SKIN8N': 'img/night-hand-skin8.png',
    'HAND_SKIN9D': 'img/day-hand-skin9.png',
    'HAND_SKIN9N': 'img/night-hand-skin9.png',
    'HAND_SKIN10D': 'img/day-hand-skin10.png',
    'HAND_SKIN10N': 'img/night-hand-skin10.png',
    'HAND_SKIN11D': 'img/day-hand-skin11.png',
    'HAND_SKIN11N': 'img/night-hand-skin11.png',
    'HAND_SKIN12D': 'img/day-hand-skin12.png',
    'HAND_SKIN12N': 'img/night-hand-skin12.png',
    'HAND_SKIN13D': 'img/day-hand-skin13.png',
    'HAND_SKIN13N': 'img/night-hand-skin13.png',
    'HAND_SKIN14D': 'img/day-hand-skin14.png',
    'HAND_SKIN14N': 'img/night-hand-skin14.png',
    'HAND_SKIN15D': 'img/day-hand-skin15.png',
    'HAND_SKIN15N': 'img/night-hand-skin15.png',
    'HAND_SKIN16D': 'img/day-hand-skin16.png',
    'HAND_SKIN16N': 'img/night-hand-skin16.png',
    'HAND_SKIN17D': 'img/day-hand-skin17.png',
    'HAND_SKIN17N': 'img/night-hand-skin17.png',
    'HAND_SKIN18D': 'img/day-hand-skin18.png',
    'HAND_SKIN18N': 'img/night-hand-skin18.png',
    'HAND_SKIN19D': 'img/day-hand-skin19.png',
    'HAND_SKIN19N': 'img/night-hand-skin19.png',
    'HAND_SKIN20D': 'img/day-hand-skin20.png',
    'HAND_SKIN20N': 'img/night-hand-skin20.png',
    'HAND_SKIN21D': 'img/day-hand-skin21.png',
    'HAND_SKIN21N': 'img/night-hand-skin21.png',
    'HAND_SKIN22D': 'img/day-hand-skin22.png',
    'HAND_SKIN22N': 'img/night-hand-skin22.png',
    'HAND_SKIN23D': 'img/day-hand-skin23.png',
    'HAND_SKIN23N': 'img/night-hand-skin23.png',
    'HAND_SKIN24D': 'img/day-hand-skin24.png',
    'HAND_SKIN24N': 'img/night-hand-skin24.png',
    'HAND_SKIN25D': 'img/day-hand-skin25.png',
    'HAND_SKIN25N': 'img/night-hand-skin25.png',
    'HAND_SKIN26D': 'img/day-hand-skin26.png',
    'HAND_SKIN26N': 'img/night-hand-skin26.png',
    'HAND_SKIN27D': 'img/day-hand-skin27.png',
    'HAND_SKIN27N': 'img/night-hand-skin27.png',
    'HAND_SKIN28D': 'img/day-hand-skin28.png',
    'HAND_SKIN28N': 'img/night-hand-skin28.png',
    'HAND_SKIN29D': 'img/day-hand-skin29.png',
    'HAND_SKIN29N': 'img/night-hand-skin29.png',
    'HAND_SKIN30D': 'img/day-hand-skin30.png',
    'HAND_SKIN30N': 'img/night-hand-skin30.png',
    'HAND_SKIN31D': 'img/day-hand-skin31.png',
    'HAND_SKIN31N': 'img/night-hand-skin31.png',
    'HAND_SKIN32D': 'img/day-hand-skin32.png',
    'HAND_SKIN32N': 'img/night-hand-skin32.png',
    'HAND_SKIN33D': 'img/day-hand-skin33.png',
    'HAND_SKIN33N': 'img/night-hand-skin33.png',
    'HAND_SKIN34D': 'img/day-hand-skin34.png',
    'HAND_SKIN34N': 'img/night-hand-skin34.png',
    'HAND_SKIN35D': 'img/day-hand-skin35.png',
    'HAND_SKIN35N': 'img/night-hand-skin35.png',
    'HAND_SKIN36D': 'img/day-hand-skin36.png',
    'HAND_SKIN36N': 'img/night-hand-skin36.png',
    'HAND_SKIN37D': 'img/day-hand-skin37.png',
    'HAND_SKIN37N': 'img/night-hand-skin37.png',
    'HAND_SKIN38D': 'img/day-hand-skin38.png',
    'HAND_SKIN38N': 'img/night-hand-skin38.png',
    'HAND_SKIN39D': 'img/day-hand-skin39.png',
    'HAND_SKIN39N': 'img/night-hand-skin39.png',
    'HAND_SKIN40D': 'img/day-hand-skin40.png',
    'HAND_SKIN40N': 'img/night-hand-skin40.png',
    'HAND_SKIN41D': 'img/day-hand-skin41.png',
    'HAND_SKIN41N': 'img/night-hand-skin41.png',
    'HAND_SKIN42D': 'img/day-hand-skin42.png',
    'HAND_SKIN42N': 'img/night-hand-skin42.png',
    'HAND_SKIN43D': 'img/day-hand-skin43.png',
    'HAND_SKIN43N': 'img/night-hand-skin43.png',
    'HAND_SKIN44D': 'img/day-hand-skin16.png',
    'HAND_SKIN44N': 'img/night-hand-skin16.png',
    'HAND_SKIN45D': 'img/day-hand-skin45.png',
    'HAND_SKIN45N': 'img/night-hand-skin45.png',
    'HAND_SKIN46D': 'img/day-hand-skin46.png',
    'HAND_SKIN46N': 'img/night-hand-skin46.png',
    'HAND_SKIN47D': 'img/day-hand-skin47.png',
    'HAND_SKIN47N': 'img/night-hand-skin47.png',
    'HAND_SKIN48D': 'img/day-hand-skin48.png',
    'HAND_SKIN48N': 'img/night-hand-skin48.png',
    'HAND_SKIN49D': 'img/day-hand-skin49.png',
    'HAND_SKIN49N': 'img/night-hand-skin49.png',
    'HAND_SKIN50D': 'img/day-hand-skin49.png',
    'HAND_SKIN50N': 'img/night-hand-skin49.png',
    'HAND_SKIN51D': 'img/day-hand-skin51.png',
    'HAND_SKIN51N': 'img/night-hand-skin51.png',
    'HAND_SKIN52D': 'img/day-hand-skin52.png',
    'HAND_SKIN52N': 'img/night-hand-skin52.png',
    'HAND_SKIN53D': 'img/day-hand-skin53.png',
    'HAND_SKIN53N': 'img/night-hand-skin53.png',
    'HAND_SKIN54D': 'img/day-hand-skin53.png',
    'HAND_SKIN54N': 'img/night-hand-skin53.png',
    'HAND_SKIN55D': 'img/day-hand-skin55.png',
    'HAND_SKIN55N': 'img/night-hand-skin55.png',
    'HAND_SKIN56D': 'img/day-hand-skin56.png',
    'HAND_SKIN56N': 'img/night-hand-skin56.png',
    'HAND_SKIN57D': 'img/day-hand-skin57.png',
    'HAND_SKIN57N': 'img/night-hand-skin57.png',
    'HAND_SKIN58D': 'img/day-hand-skin58.png',
    'HAND_SKIN58N': 'img/night-hand-skin58.png',
    'HAND_SKIN59D': 'img/day-hand-skin59.png',
    'HAND_SKIN59N': 'img/night-hand-skin59.png',
    'HAND_SKIN60D': 'img/day-hand-skin61.png',
    'HAND_SKIN60N': 'img/night-hand-skin61.png',
    'HAND_SKIN61D': 'img/day-hand-skin61.png',
    'HAND_SKIN61N': 'img/night-hand-skin61.png',
    'HAND_SKIN62D': 'img/day-hand-skin62.png',
    'HAND_SKIN62N': 'img/night-hand-skin62.png',
    'HAND_SKIN63D': 'img/day-hand-skin63.png',
    'HAND_SKIN63N': 'img/night-hand-skin63.png',
    'HAND_SKIN64D': 'img/day-hand-skin64.png',
    'HAND_SKIN64N': 'img/night-hand-skin64.png',
    'HAND_SKIN65D': 'img/day-hand-skin65.png',
    'HAND_SKIN65N': 'img/night-hand-skin65.png',
    'HAND_SKIN66D': 'img/day-hand-skin66.png',
    'HAND_SKIN66N': 'img/night-hand-skin66.png',
    'HAND_SKIN67D': 'img/day-hand-skin67.png',
    'HAND_SKIN67N': 'img/night-hand-skin67.png',
    'HAND_SKIN68D': 'img/day-hand-skin68.png',
    'HAND_SKIN68N': 'img/night-hand-skin68.png',
    'HAND_SKIN69D': 'img/day-hand-skin69.png',
    'HAND_SKIN69N': 'img/night-hand-skin69.png',
    'HAND_SKIN70D': 'img/day-hand-skin70.png',
    'HAND_SKIN70N': 'img/night-hand-skin70.png',
    'HAND_SKIN71D': 'img/day-hand-skin71.png',
    'HAND_SKIN71N': 'img/night-hand-skin71.png',
    'HAND_SKIN72D': 'img/day-hand-skin72.png',
    'HAND_SKIN72N': 'img/night-hand-skin72.png',
    'HAND_SKIN73D': 'img/day-hand-skin73.png',
    'HAND_SKIN73N': 'img/night-hand-skin73.png',
    'HAND_SKIN74D': 'img/day-hand-skin74.png',
    'HAND_SKIN74N': 'img/night-hand-skin74.png',
    'HAND_SKIN75D': 'img/day-hand-skin75.png',
    'HAND_SKIN75N': 'img/night-hand-skin75.png',
    'HAND_SKIN76D': 'img/day-hand-skin76.png',
    'HAND_SKIN76N': 'img/night-hand-skin76.png',
    'HAND_SKIN77D': 'img/day-hand-skin77.png',
    'HAND_SKIN77N': 'img/night-hand-skin77.png',
    'HAND_SKIN78D': 'img/day-hand-skin78.png',
    'HAND_SKIN78N': 'img/night-hand-skin78.png',
    'HAND_SKIN79D': 'img/day-hand-skin79.png',
    'HAND_SKIN79N': 'img/night-hand-skin79.png',
    'HAND_SKIN80D': 'img/day-hand-skin80.png',
    'HAND_SKIN80N': 'img/night-hand-skin80.png',
    'HAND_SKIN81D': 'img/day-hand-skin81.png',
    'HAND_SKIN81N': 'img/night-hand-skin81.png',
    'HAND_SKIN82D': 'img/day-hand-skin82.png',
    'HAND_SKIN82N': 'img/night-hand-skin82.png',
    'HAND_SKIN83D': 'img/day-hand-skin83.png',
    'HAND_SKIN83N': 'img/night-hand-skin83.png',
    'HAND_SKIN84D': 'img/day-hand-skin84.png',
    'HAND_SKIN84N': 'img/night-hand-skin84.png',
    'HAND_SKIN85D': 'img/day-hand-skin85.png',
    'HAND_SKIN85N': 'img/night-hand-skin85.png',
    'HAND_SKIN86D': 'img/day-hand-skin86.png',
    'HAND_SKIN86N': 'img/night-hand-skin86.png',
    'HAND_SKIN87D': 'img/day-hand-skin87.png',
    'HAND_SKIN87N': 'img/night-hand-skin87.png',
    'HAND_SKIN88D': 'img/day-hand-skin88.png',
    'HAND_SKIN88N': 'img/night-hand-skin88.png',
    'HAND_SKIN89D': 'img/day-hand-skin89.png',
    'HAND_SKIN89N': 'img/night-hand-skin89.png',
    'HAND_SKIN90D': 'img/day-hand-skin90.png',
    'HAND_SKIN90N': 'img/night-hand-skin90.png',
    'HAND_SKIN91D': 'img/day-hand-skin91.png',
    'HAND_SKIN91N': 'img/night-hand-skin91.png',
    'HAND_SKIN92D': 'img/day-hand-skin92.png',
    'HAND_SKIN92N': 'img/night-hand-skin92.png',
    'HAND_SKIN93D': 'img/day-hand-skin93.png',
    'HAND_SKIN93N': 'img/night-hand-skin93.png',
    'HAND_SKIN94D': 'img/day-hand-skin94.png',
    'HAND_SKIN94N': 'img/night-hand-skin94.png',
    'HAND_SKIN95D': 'img/day-hand-skin95.png',
    'HAND_SKIN95N': 'img/night-hand-skin95.png',
    'HAND_SKIN96D': 'img/day-hand-skin96.png',
    'HAND_SKIN96N': 'img/night-hand-skin96.png',
    'HAND_SKIN97D': 'img/day-hand-skin97.png',
    'HAND_SKIN97N': 'img/night-hand-skin97.png',
    'HAND_SKIN98D': 'img/day-hand-skin98.png',
    'HAND_SKIN98N': 'img/night-hand-skin98.png',
    'HAND_SKIN99D': 'img/day-hand-skin99.png',
    'HAND_SKIN99N': 'img/night-hand-skin99.png',
    'HAND_SKIN100D': 'img/day-hand-skin100.png',
    'HAND_SKIN100N': 'img/night-hand-skin100.png',
    'HAND_SKIN101D': 'img/day-hand-skin101.png',
    'HAND_SKIN101N': 'img/night-hand-skin101.png',
    'HAND_SKIN102D': 'img/day-hand-skin102.png',
    'HAND_SKIN102N': 'img/night-hand-skin102.png',
    'HAND_SKIN103D': 'img/day-hand-skin103.png',
    'HAND_SKIN103N': 'img/night-hand-skin103.png',
    'HAND_SKIN104D': 'img/day-hand-skin104.png',
    'HAND_SKIN104N': 'img/night-hand-skin104.png',
    'HAND_SKIN105D': 'img/day-hand-skin105.png',
    'HAND_SKIN105N': 'img/night-hand-skin105.png',
    'HAND_SKIN106D': 'img/day-hand-skin106.png',
    'HAND_SKIN106N': 'img/night-hand-skin106.png',
    'HAND_SKIN107D': 'img/day-hand-skin107.png',
    'HAND_SKIN107N': 'img/night-hand-skin107.png',
    'HAND_SKIN108D': 'img/day-hand-skin108.png',
    'HAND_SKIN108N': 'img/night-hand-skin108.png',
    'HAND_SKIN109D': 'img/day-hand-skin109.png',
    'HAND_SKIN109N': 'img/night-hand-skin109.png',
    'HAND_SKIN110D': 'img/day-hand-skin110.png',
    'HAND_SKIN110N': 'img/night-hand-skin110.png',
    'HAND_SKIN111D': 'img/day-hand-skin111.png',
    'HAND_SKIN111N': 'img/night-hand-skin111.png',
    'HAND_SKIN112D': 'img/day-hand-skin112.png',
    'HAND_SKIN112N': 'img/night-hand-skin112.png',
    'HAND_SKIN113D': 'img/day-hand-skin113.png',
    'HAND_SKIN113N': 'img/night-hand-skin113.png',
    'HAND_SKIN114D': 'img/day-hand-skin114.png',
    'HAND_SKIN114N': 'img/night-hand-skin114.png',
    'HAND_SKIN115D': 'img/day-hand-skin115.png',
    'HAND_SKIN115N': 'img/night-hand-skin115.png',
    'HAND_SKIN116D': 'img/day-hand-skin116.png',
    'HAND_SKIN116N': 'img/night-hand-skin116.png',
    'HAND_SKIN117D': 'img/day-hand-skin117.png',
    'HAND_SKIN117N': 'img/night-hand-skin117.png',
    'HAND_SKIN118D': 'img/day-hand-skin118.png',
    'HAND_SKIN118N': 'img/night-hand-skin118.png',
    'HAND_SKIN119D': 'img/day-hand-skin119.png',
    'HAND_SKIN119N': 'img/night-hand-skin119.png',
    'HAND_SKIN120D': 'img/day-hand-skin120.png',
    'HAND_SKIN120N': 'img/night-hand-skin120.png',
    'HAND_SKIN121D': 'img/day-hand-skin122.png',
    'HAND_SKIN121N': 'img/night-hand-skin122.png',
    'HAND_SKIN122D': 'img/day-hand-skin122.png',
    'HAND_SKIN122N': 'img/night-hand-skin122.png',
    'HAND_SKIN123D': 'img/day-hand-skin122.png',
    'HAND_SKIN123N': 'img/night-hand-skin122.png',
    'HAND_SKIN124D': 'img/day-hand-skin124.png',
    'HAND_SKIN124N': 'img/night-hand-skin124.png',
    'HAND_SKIN125D': 'img/day-hand-skin125.png',
    'HAND_SKIN125N': 'img/night-hand-skin125.png',
    'HAND_SKIN126D': 'img/day-hand-skin126.png',
    'HAND_SKIN126N': 'img/night-hand-skin126.png',
    'HAND_SKIN127D': 'img/day-hand-skin127.png',
    'HAND_SKIN127N': 'img/night-hand-skin127.png',
    'HAND_SKIN128D': 'img/day-hand-skin128.png',
    'HAND_SKIN128N': 'img/night-hand-skin128.png',
    'HAND_SKIN129D': 'img/day-hand-skin129.png',
    'HAND_SKIN129N': 'img/night-hand-skin129.png',
    'HAND_SKIN130D': 'img/day-hand-skin130.png',
    'HAND_SKIN130N': 'img/night-hand-skin130.png',
    'HAND_SKIN131D': 'img/day-hand-skin131.png',
    'HAND_SKIN131N': 'img/night-hand-skin131.png',
    'HAND_SKIN132D': 'img/day-hand-skin130.png',
    'HAND_SKIN132N': 'img/night-hand-skin130.png',
    'HAND_SKIN133D': 'img/day-hand-skin133.png',
    'HAND_SKIN133N': 'img/night-hand-skin133.png',
    'HAND_SKIN134D': 'img/day-hand-skin134.png',
    'HAND_SKIN134N': 'img/night-hand-skin134.png',
    'HAND_SKIN135D': 'img/day-hand-skin135.png',
    'HAND_SKIN135N': 'img/night-hand-skin135.png',
    'HAND_SKIN136D': 'img/day-hand-skin136.png',
    'HAND_SKIN136N': 'img/night-hand-skin136.png',
    'HAND_SKIN137D': 'img/day-hand-skin137.png',
    'HAND_SKIN137N': 'img/night-hand-skin137.png',
    'HAND_SKIN138D': 'img/day-hand-skin138.png',
    'HAND_SKIN138N': 'img/night-hand-skin138.png',
    'HAND_SKIN139D': 'img/day-hand-skin139.png',
    'HAND_SKIN139N': 'img/night-hand-skin139.png',
    'HAND_SKIN140D': 'img/day-hand-skin140.png',
    'HAND_SKIN140N': 'img/night-hand-skin140.png',
    'HAND_SKIN141D': 'img/day-hand-skin141.png',
    'HAND_SKIN141N': 'img/night-hand-skin141.png',
    'HAND_SKIN142D': 'img/day-hand-skin142.png',
    'HAND_SKIN142N': 'img/night-hand-skin142.png',
    'HAND_SKIN143D': 'img/day-hand-skin143.png',
    'HAND_SKIN143N': 'img/night-hand-skin143.png',
    'HAND_SKIN144D': 'img/day-hand-skin144.png',
    'HAND_SKIN144N': 'img/night-hand-skin144.png',
    'HAND_SKIN145D': 'img/day-hand-skin145.png',
    'HAND_SKIN145N': 'img/night-hand-skin145.png',
    'HAND_SKIN146D': 'img/day-hand-skin146.png',
    'HAND_SKIN146N': 'img/night-hand-skin146.png',
    'HAND_SKIN147D': 'img/day-hand-skin147.png',
    'HAND_SKIN147N': 'img/night-hand-skin147.png',
    'HAND_SKIN148D': 'img/day-hand-skin148.png',
    'HAND_SKIN148N': 'img/night-hand-skin148.png',
    'HAND_SKIN149D': 'img/day-hand-skin149.png',
    'HAND_SKIN149N': 'img/night-hand-skin149.png',
    'HAND_SKIN150D': 'img/day-hand-skin150.png',
    'HAND_SKIN150N': 'img/night-hand-skin150.png',
    'BAG_STARD': 'img/day-bag-star0.png',
    'BAG_STARN': 'img/night-bag-star0.png',
    'BAG0D': 'img/day-bag0.png',
    'BAG0N': 'img/night-bag0.png',
    'BAG1D': 'img/day-bag1.png',
    'BAG1N': 'img/night-bag1.png',
    'BAG2D': 'img/day-bag2.png',
    'BAG2N': 'img/night-bag2.png',
    'BAG3D': 'img/day-bag3.png',
    'BAG3N': 'img/night-bag3.png',
    'BAG4D': 'img/day-bag4.png',
    'BAG4N': 'img/night-bag4.png',
    'BAG5D': 'img/day-bag5.png',
    'BAG5N': 'img/night-bag5.png',
    'BAG6D': 'img/day-bag6.png',
    'BAG6N': 'img/night-bag6.png',
    'BAG7D': 'img/day-bag7.png',
    'BAG7N': 'img/night-bag7.png',
    'BAG8D': 'img/day-bag8.png',
    'BAG8N': 'img/night-bag8.png',
    'BAG9D': 'img/day-bag9.png',
    'BAG9N': 'img/night-bag9.png',
    'BAG10D': 'img/day-bag10.png',
    'BAG10N': 'img/night-bag10.png',
    'BAG11D': 'img/day-bag11.png',
    'BAG11N': 'img/night-bag11.png',
    'BAG13D': 'img/day-bag13.png',
    'BAG13N': 'img/night-bag13.png',
    'BAG14D': 'img/day-bag14.png',
    'BAG14N': 'img/night-bag14.png',
    'BAG16D': 'img/day-bag16.png',
    'BAG16N': 'img/night-bag16.png',
    'BAG17D': 'img/day-bag17.png',
    'BAG17N': 'img/night-bag17.png',
    'BAG18D': 'img/day-bag18.png',
    'BAG18N': 'img/night-bag18.png',
    'BAG19D': 'img/day-bag19.png',
    'BAG19N': 'img/night-bag19.png',
    'BAG20D': 'img/day-bag20.png',
    'BAG20N': 'img/night-bag20.png',
    'BAG21D': 'img/day-bag21.png',
    'BAG21N': 'img/night-bag21.png',
    'BAG22D': 'img/day-bag22.png',
    'BAG22N': 'img/night-bag22.png',
    'BAG23D': 'img/day-bag23.png',
    'BAG23N': 'img/night-bag23.png',
    'BAG24D': 'img/day-bag24.png',
    'BAG24N': 'img/night-bag24.png',
    'BAG25D': 'img/day-bag25.png',
    'BAG25N': 'img/night-bag25.png',
    'BAG26D': 'img/day-bag26.png',
    'BAG26N': 'img/night-bag26.png',
    'BAG27D': 'img/day-bag27.png',
    'BAG27N': 'img/night-bag27.png',
    'BAG28D': 'img/day-bag28.png',
    'BAG28N': 'img/night-bag28.png',
    'BAG29D': 'img/day-bag29.png',
    'BAG29N': 'img/night-bag29.png',
    'BAG30D': 'img/day-bag30.png',
    'BAG30N': 'img/night-bag30.png',
    'BAG31D': 'img/day-bag31.png',
    'BAG31N': 'img/night-bag31.png',
    'BAG32D': 'img/day-bag32.png',
    'BAG32N': 'img/night-bag32.png',
    'BAG33D': 'img/day-bag33.png',
    'BAG33N': 'img/night-bag33.png',
    'BAG34D': 'img/day-bag34.png',
    'BAG34N': 'img/night-bag34.png',
    'BAG35D': 'img/day-bag35.png',
    'BAG35N': 'img/night-bag35.png',
    'BAG36D': 'img/day-bag36.png',
    'BAG36N': 'img/night-bag36.png',
    'BAG37D': 'img/day-bag37.png',
    'BAG37N': 'img/night-bag37.png',
    'BAG38D': 'img/day-bag38.png',
    'BAG38N': 'img/night-bag38.png',
    'BAG39D': 'img/day-bag39.png',
    'BAG39N': 'img/night-bag39.png',
    'BAG40D': 'img/day-bag40.png',
    'BAG40N': 'img/night-bag40.png',
    'BAG41D': 'img/day-bag41.png',
    'BAG41N': 'img/night-bag41.png',
    'BAG42D': 'img/day-bag42.png',
    'BAG42N': 'img/night-bag42.png',
    'BAG43D': 'img/day-bag43.png',
    'BAG43N': 'img/night-bag43.png',
    'BAG44D': 'img/day-bag44.png',
    'BAG44N': 'img/night-bag44.png',
    'BAG45D': 'img/day-bag45.png',
    'BAG45N': 'img/night-bag45.png',
    'BAG46D': 'img/day-bag46.png',
    'BAG46N': 'img/night-bag46.png',
    'BAG47D': 'img/day-bag47.png',
    'BAG47N': 'img/night-bag47.png',
    'BAG48D': 'img/day-bag48.png',
    'BAG48N': 'img/night-bag48.png',
    'BAG49D': 'img/day-bag49.png',
    'BAG49N': 'img/night-bag49.png',
    'BAG50D': 'img/day-bag50.png',
    'BAG50N': 'img/night-bag50.png',
    'BAG51D': 'img/day-bag51.png',
    'BAG51N': 'img/night-bag51.png',
    'BAG52D': 'img/day-bag52.png',
    'BAG52N': 'img/night-bag52.png',
    'BAG53D': 'img/day-bag53.png',
    'BAG53N': 'img/night-bag53.png',
    'BAG54D': 'img/day-bag54.png',
    'BAG54N': 'img/night-bag54.png',
    'BAG55D': 'img/day-bag55.png',
    'BAG55N': 'img/night-bag55.png',
    'BAG56D': 'img/day-bag56.png',
    'BAG56N': 'img/night-bag56.png',
    'BAG57D': 'img/day-bag57.png',
    'BAG57N': 'img/night-bag57.png',
    'BAG58D': 'img/day-bag58.png',
    'BAG58N': 'img/night-bag58.png',
    'BAG59D': 'img/day-bag59.png',
    'BAG59N': 'img/night-bag59.png',
    'BAG60D': 'img/day-bag60.png',
    'BAG60N': 'img/night-bag60.png',
    'BAG61D': 'img/day-bag61.png',
    'BAG61N': 'img/night-bag61.png',
    'BAG62D': 'img/day-bag62.png',
    'BAG62N': 'img/night-bag62.png',
    'BAG63D': 'img/day-bag63.png',
    'BAG63N': 'img/night-bag63.png',
    'BAG64D': 'img/day-bag64.png',
    'BAG64N': 'img/night-bag64.png',
    'BAG65D': 'img/day-bag65.png',
    'BAG65N': 'img/night-bag65.png',
    'BAG66D': 'img/day-bag66.png',
    'BAG66N': 'img/night-bag66.png',
    'BAG67D': 'img/day-bag67.png',
    'BAG67N': 'img/night-bag67.png',
    'BAG68D': 'img/day-bag68.png',
    'BAG68N': 'img/night-bag68.png',
    'ACCESSORY0D': 'img/day-accessory0.png',
    'ACCESSORY17D': 'img/day-accessory0-pacques.png',
    'ACCESSORY17N': 'img/night-accessory0-pacques.png',
    'ACCESSORY13D': 'img/day-accessory13.png',
    'ACCESSORY13N': 'img/night-accessory13.png',
    'ACCESSORY14D': 'img/day-accessory14.png',
    'ACCESSORY14N': 'img/night-accessory14.png',
    'ACCESSORY15D': 'img/day-accessory15.png',
    'ACCESSORY15N': 'img/night-accessory15.png',
    'ACCESSORY16D': 'img/day-accessory16.png',
    'ACCESSORY16N': 'img/night-accessory16.png',
    'ACCESSORY18D': 'img/day-accessory17.png',
    'ACCESSORY18N': 'img/day-accessory17.png',
    'ACCESSORY19D': 'img/day-accessory19.png',
    'ACCESSORY19N': 'img/night-accessory19.png',
    'ACCESSORY20D': 'img/day-accessory20.png',
    'ACCESSORY20N': 'img/night-accessory20.png',
    'ACCESSORY21D': 'img/day-accessory21.png',
    'ACCESSORY21N': 'img/night-accessory21.png',
    'ACCESSORY22D': 'img/day-accessory22.png',
    'ACCESSORY22N': 'img/night-accessory22.png',
    'ACCESSORY23D': 'img/day-accessory23.png',
    'ACCESSORY23N': 'img/night-accessory23.png',
    'ACCESSORY24D': 'img/day-accessory24.png',
    'ACCESSORY24N': 'img/night-accessory24.png',
    'ACCESSORY25D': 'img/day-accessory25.png',
    'ACCESSORY25N': 'img/night-accessory25.png',
    'ACCESSORY26D': 'img/day-accessory26.png',
    'ACCESSORY26N': 'img/night-accessory26.png',
    'ACCESSORY27D': 'img/day-accessory27.png',
    'ACCESSORY27N': 'img/night-accessory27.png',
    'ACCESSORY28D': 'img/day-accessory18.png',
    'ACCESSORY28N': 'img/night-accessory18.png',
    'ACCESSORY29D': 'img/day-accessory29.png',
    'ACCESSORY29N': 'img/night-accessory29.png',
    'ACCESSORY30D': 'img/day-accessory30.png',
    'ACCESSORY30N': 'img/night-accessory30.png',
    'ACCESSORY31D': 'img/day-accessory31.png',
    'ACCESSORY31N': 'img/night-accessory31.png',
    'ACCESSORY32D': 'img/day-accessory32.png',
    'ACCESSORY32N': 'img/night-accessory32.png',
    'ACCESSORY33D': 'img/day-accessory33.png',
    'ACCESSORY33N': 'img/night-accessory33.png',
    'ACCESSORY34D': 'img/day-accessory34.png',
    'ACCESSORY34N': 'img/night-accessory34.png',
    'ACCESSORY35D': 'img/day-accessory35.png',
    'ACCESSORY35N': 'img/night-accessory35.png',
    'ACCESSORY36D': 'img/day-accessory28.png',
    'ACCESSORY36N': 'img/night-accessory28.png',
    'ACCESSORY37D': 'img/day-accessory36.png',
    'ACCESSORY37N': 'img/night-accessory36.png',
    'ACCESSORY38D': 'img/day-accessory37.png',
    'ACCESSORY38N': 'img/night-accessory37.png',
    'ACCESSORY39D': 'img/day-accessory39.png',
    'ACCESSORY39N': 'img/night-accessory39.png',
    'ACCESSORY40D': 'img/day-accessory40.png',
    'ACCESSORY40N': 'img/night-accessory40.png',
    'ACCESSORY41D': 'img/day-accessory41.png',
    'ACCESSORY41N': 'img/night-accessory41.png',
    'ACCESSORY42D': 'img/day-accessory42.png',
    'ACCESSORY42N': 'img/night-accessory42.png',
    'ACCESSORY43D': 'img/day-accessory43.png',
    'ACCESSORY43N': 'img/night-accessory43.png',
    'ACCESSORY44D': 'img/day-accessory44.png',
    'ACCESSORY44N': 'img/night-accessory44.png',
    'ACCESSORY45D': 'img/day-accessory38.png',
    'ACCESSORY45N': 'img/night-accessory38.png',
    'ACCESSORY46D': 'img/day-accessory46.png',
    'ACCESSORY46N': 'img/night-accessory46.png',
    'ACCESSORY47D': 'img/day-accessory47.png',
    'ACCESSORY47N': 'img/night-accessory47.png',
    'ACCESSORY48D': 'img/day-accessory48.png',
    'ACCESSORY48N': 'img/night-accessory48.png',
    'ACCESSORY49D': 'img/day-accessory49.png',
    'ACCESSORY49N': 'img/night-accessory49.png',
    'ACCESSORY50D': 'img/day-accessory45.png',
    'ACCESSORY50N': 'img/night-accessory45.png',
    'ACCESSORY51D': 'img/day-accessory50.png',
    'ACCESSORY51N': 'img/night-accessory50.png',
    'ACCESSORY52D': 'img/day-accessory51.png',
    'ACCESSORY52N': 'img/night-accessory51.png',
    'ACCESSORY53D': 'img/day-accessory52.png',
    'ACCESSORY53N': 'img/night-accessory52.png',
    'ACCESSORY54D': 'img/day-accessory53.png',
    'ACCESSORY54N': 'img/night-accessory53.png',
    'ACCESSORY55D': 'img/day-accessory54.png',
    'ACCESSORY55N': 'img/night-accessory54.png',
    'ACCESSORY56D': 'img/day-accessory55.png',
    'ACCESSORY56N': 'img/night-accessory55.png',
    'ACCESSORY57D': 'img/day-accessory56.png',
    'ACCESSORY57N': 'img/night-accessory56.png',
    'ACCESSORY58D': 'img/day-accessory57.png',
    'ACCESSORY58N': 'img/night-accessory57.png',
    'ACCESSORY59D': 'img/day-accessory58.png',
    'ACCESSORY59N': 'img/night-accessory58.png',
    'ACCESSORY60D': 'img/day-accessory59.png',
    'ACCESSORY60N': 'img/night-accessory59.png',
    'ACCESSORY61D': 'img/day-accessory60.png',
    'ACCESSORY61N': 'img/night-accessory60.png',
    'ACCESSORY62D': 'img/day-accessory61.png',
    'ACCESSORY62N': 'img/night-accessory61.png',
    'ACCESSORY63D': 'img/day-accessory62.png',
    'ACCESSORY63N': 'img/night-accessory62.png',
    'ACCESSORY64D': 'img/day-accessory63.png',
    'ACCESSORY64N': 'img/night-accessory63.png',
    'ACCESSORY65D': 'img/day-accessory64.png',
    'ACCESSORY65N': 'img/night-accessory64.png',
    'ACCESSORY66D': 'img/day-accessory65.png',
    'ACCESSORY66N': 'img/night-accessory65.png',
    'ACCESSORY67D': 'img/day-accessory66.png',
    'ACCESSORY67N': 'img/night-accessory66.png',
    'ACCESSORY68D': 'img/day-accessory67.png',
    'ACCESSORY68N': 'img/night-accessory67.png',
    'ACCESSORY69D': 'img/day-accessory68.png',
    'ACCESSORY69N': 'img/night-accessory68.png',
    'ACCESSORY70D': 'img/day-accessory69.png',
    'ACCESSORY70N': 'img/night-accessory69.png',
    'ACCESSORY71D': 'img/day-accessory70.png',
    'ACCESSORY71N': 'img/night-accessory70.png',
    'ACCESSORY72D': 'img/day-accessory71.png',
    'ACCESSORY72N': 'img/night-accessory71.png',
    'ACCESSORY73D': 'img/day-accessory72.png',
    'ACCESSORY73N': 'img/night-accessory72.png',
    'ACCESSORY74D': 'img/day-accessory73.png',
    'ACCESSORY74N': 'img/night-accessory73.png',
    'ACCESSORY75D': 'img/day-accessory74.png',
    'ACCESSORY75N': 'img/night-accessory74.png',
    'ACCESSORY76D': 'img/day-accessory75.png',
    'ACCESSORY76N': 'img/night-accessory75.png',
    'ACCESSORY77D': 'img/day-accessory76.png',
    'ACCESSORY77N': 'img/night-accessory76.png',
    'ACCESSORY78D': 'img/day-accessory77.png',
    'ACCESSORY78N': 'img/night-accessory77.png',
    'ACCESSORY79D': 'img/day-accessory78.png',
    'ACCESSORY79N': 'img/night-accessory78.png',
    'ACCESSORY80D': 'img/day-accessory79.png',
    'ACCESSORY80N': 'img/night-accessory79.png',
    'ACCESSORY81D': 'img/day-accessory80.png',
    'ACCESSORY81N': 'img/night-accessory80.png',
    'ACCESSORY82D': 'img/day-accessory81.png',
    'ACCESSORY82N': 'img/night-accessory81.png',
    'BOOK0D': 'img/day-book0.png',
    'BOOK0N': 'img/night-book0.png',
    'BOOK1D': 'img/day-book1.png',
    'BOOK1N': 'img/night-book1.png',
    'BOOK2D': 'img/day-book2.png',
    'BOOK2N': 'img/night-book2.png',
    'BOOK3D': 'img/day-book3.png',
    'BOOK3N': 'img/night-book3.png',
    'BOOK4D': 'img/day-book4.png',
    'BOOK4N': 'img/night-book4.png',
    'BOOK5D': 'img/day-book5.png',
    'BOOK5N': 'img/night-book5.png',
    'BOOK6D': 'img/day-book6.png',
    'BOOK6N': 'img/night-book6.png',
    'BOOK7D': 'img/day-book7.png',
    'BOOK7N': 'img/night-book7.png',
    'BOOK8D': 'img/day-book8.png',
    'BOOK8N': 'img/night-book8.png',
    'BOOK9D': 'img/day-book9.png',
    'BOOK9N': 'img/night-book9.png',
    'BOOK10D': 'img/day-book10.png',
    'BOOK10N': 'img/night-book10.png',
    'BOOK11D': 'img/day-book11.png',
    'BOOK11N': 'img/night-book11.png',
    'BOOK12D': 'img/day-book12.png',
    'BOOK12N': 'img/night-book12.png',
    'BOOK13D': 'img/day-book13.png',
    'BOOK13N': 'img/night-book13.png',
    'BOOK14D': 'img/day-book14.png',
    'BOOK14N': 'img/night-book14.png',
    'BOOK15D': 'img/day-book15.png',
    'BOOK15N': 'img/night-book15.png',
    'BOOK16D': 'img/day-book16.png',
    'BOOK16N': 'img/night-book16.png',
    'BOOK17D': 'img/day-book17.png',
    'BOOK17N': 'img/night-book17.png',
    'BOOK18D': 'img/day-book18.png',
    'BOOK18N': 'img/night-book18.png',
    'BOOK19D': 'img/day-book19.png',
    'BOOK19N': 'img/night-book19.png',
    'BOOK20D': 'img/day-book20.png',
    'BOOK20N': 'img/night-book20.png',
    'BOOK21D': 'img/day-book21.png',
    'BOOK21N': 'img/night-book21.png',
    'BOOK22D': 'img/day-book22.png',
    'BOOK22N': 'img/night-book22.png',
    'BOOK23D': 'img/day-book23.png',
    'BOOK23N': 'img/night-book23.png',
    'BOOK24D': 'img/day-book24.png',
    'BOOK24N': 'img/night-book24.png',
    'BOOK25D': 'img/day-book25.png',
    'BOOK25N': 'img/night-book25.png',
    'BOOK26D': 'img/day-book26.png',
    'BOOK26N': 'img/night-book26.png',
    'BOOK27D': 'img/day-book27.png',
    'BOOK27N': 'img/night-book27.png',
    'BOOK28D': 'img/day-book28.png',
    'BOOK28N': 'img/night-book28.png',
    'BOOK29D': 'img/day-book29.png',
    'BOOK29N': 'img/night-book29.png',
    'BOOK30D': 'img/day-book30.png',
    'BOOK30N': 'img/night-book30.png',
    'BOOK31D': 'img/day-book31.png',
    'BOOK31N': 'img/night-book31.png',
    'BOOK32D': 'img/day-book32.png',
    'BOOK32N': 'img/night-book32.png',
    'BOOK33D': 'img/day-book33.png',
    'BOOK33N': 'img/night-book33.png',
    'BOOK34D': 'img/day-book34.png',
    'BOOK34N': 'img/night-book34.png',
    'BOOK35D': 'img/day-book35.png',
    'BOOK35N': 'img/night-book35.png',
    'BOOK36D': 'img/day-book36.png',
    'BOOK36N': 'img/night-book36.png',
    'BOOK37D': 'img/day-book37.png',
    'BOOK37N': 'img/night-book37.png',
    'BOOK38D': 'img/day-book38.png',
    'BOOK38N': 'img/night-book38.png',
    'BOOK39D': 'img/day-book39.png',
    'BOOK39N': 'img/night-book39.png',
    'BOOK40D': 'img/day-book40.png',
    'BOOK40N': 'img/night-book40.png',
    'BOOK41D': 'img/day-book41.png',
    'BOOK41N': 'img/night-book41.png',
    'BOOK42D': 'img/day-book42.png',
    'BOOK42N': 'img/night-book42.png',
    'BOOK43D': 'img/day-book43.png',
    'BOOK43N': 'img/night-book43.png',
    'BOOK44D': 'img/day-book44.png',
    'BOOK44N': 'img/night-book44.png',
    'BOOK45D': 'img/day-book45.png',
    'BOOK45N': 'img/night-book45.png',
    'CRATE1D': 'img/day-crate1.png',
    'CRATE1N': 'img/night-crate1.png',
    'CRATE2D': 'img/day-crate2.png',
    'CRATE2N': 'img/night-crate2.png',
    'CRATE3D': 'img/day-crate3.png',
    'CRATE3N': 'img/night-crate3.png',
    'CRATE4D': 'img/day-crate4.png',
    'CRATE4N': 'img/night-crate4.png',
    'CRATE5D': 'img/day-crate5.png',
    'CRATE5N': 'img/night-crate5.png',
    'CRATE6D': 'img/day-crate6.png',
    'CRATE6N': 'img/night-crate6.png',
    'CRATE7D': 'img/day-crate7.png',
    'CRATE7N': 'img/night-crate7.png',
    'CRATE8D': 'img/day-crate8.png',
    'CRATE8N': 'img/night-crate8.png',
    'CRATE9D': 'img/day-crate9.png',
    'CRATE9N': 'img/night-crate9.png',
    'CRATE10D': 'img/day-crate10.png',
    'CRATE10N': 'img/night-crate10.png',
    'CRATE11D': 'img/day-crate11.png',
    'CRATE11N': 'img/night-crate11.png',
    'CRATE12D': 'img/day-crate12.png',
    'CRATE12N': 'img/night-crate12.png',
    'CRATE13D': 'img/day-crate13.png',
    'CRATE13N': 'img/night-crate13.png',
    'CRATE14D': 'img/day-crate14.png',
    'CRATE14N': 'img/night-crate14.png',
    'CRATE15D': 'img/day-crate15.png',
    'CRATE15N': 'img/night-crate15.png',
    'CRATE16D': 'img/day-crate16.png',
    'CRATE16N': 'img/night-crate16.png',
    'CRATE17D': 'img/day-crate17.png',
    'CRATE17N': 'img/night-crate17.png',
    'CRATE18D': 'img/day-crate18.png',
    'CRATE18N': 'img/night-crate18.png',
    'CRATE19D': 'img/day-crate19.png',
    'CRATE19N': 'img/night-crate19.png',
    'CRATE20D': 'img/day-crate20.png',
    'CRATE20N': 'img/night-crate20.png',
    'CRATE21D': 'img/day-crate21.png',
    'CRATE21N': 'img/night-crate21.png',
    'CRATE22D': 'img/day-crate22.png',
    'CRATE22N': 'img/night-crate22.png',
    'CRATE23D': 'img/day-crate23.png',
    'CRATE23N': 'img/night-crate23.png',
    'CRATE24D': 'img/day-crate24.png',
    'CRATE24N': 'img/night-crate24.png',
    'CRATE25D': 'img/day-crate25.png',
    'CRATE25N': 'img/night-crate25.png',
    'CRATE26D': 'img/day-crate26.png',
    'CRATE26N': 'img/night-crate26.png',
    'CRATE27D': 'img/day-crate27.png',
    'CRATE27N': 'img/night-crate27.png',
    'CRATE28D': 'img/day-crate28.png',
    'CRATE28N': 'img/night-crate28.png',
    'CRATE29D': 'img/day-crate29.png',
    'CRATE29N': 'img/night-crate29.png',
    'CRATE30D': 'img/day-crate30.png',
    'CRATE30N': 'img/night-crate30.png',
    'CRATE31D': 'img/day-crate31.png',
    'CRATE31N': 'img/night-crate31.png',
    'CRATE32D': 'img/day-crate32.png',
    'CRATE32N': 'img/night-crate32.png',
    'CRATE33D': 'img/day-crate33.png',
    'CRATE33N': 'img/night-crate33.png',
    'CRATE34D': 'img/day-crate34.png',
    'CRATE34N': 'img/night-crate34.png',
    'CRATE35D': 'img/day-crate35.png',
    'CRATE35N': 'img/night-crate35.png',
    'CRATE36D': 'img/day-crate36.png',
    'CRATE36N': 'img/night-crate36.png',
    'CRATE37D': 'img/day-crate37.png',
    'CRATE37N': 'img/night-crate37.png',
    'CRATE38D': 'img/day-crate38.png',
    'CRATE38N': 'img/night-crate38.png',
    'CRATE39D': 'img/day-crate39.png',
    'CRATE39N': 'img/night-crate39.png',
    'CRATE40D': 'img/day-crate40.png',
    'CRATE40N': 'img/night-crate40.png',
    'CRATE41D': 'img/day-crate41.png',
    'CRATE41N': 'img/night-crate41.png',
    'CRATE42D': 'img/day-crate42.png',
    'CRATE42N': 'img/night-crate42.png',
    'CRATE43D': 'img/day-crate43.png',
    'CRATE43N': 'img/night-crate43.png',
    'CRATE44D': 'img/day-crate44.png',
    'CRATE44N': 'img/night-crate44.png',
    'CRATE45D': 'img/day-crate45.png',
    'CRATE45N': 'img/night-crate45.png',
    'CRATE46D': 'img/day-crate46.png',
    'CRATE46N': 'img/night-crate46.png',
    'CRATE47D': 'img/day-crate47.png',
    'CRATE47N': 'img/night-crate47.png',
    'CRATE48D': 'img/day-crate48.png',
    'CRATE48N': 'img/night-crate48.png',
    'CRATE49D': 'img/day-crate49.png',
    'CRATE49N': 'img/night-crate49.png',
    'CRATE50D': 'img/day-crate50.png',
    'CRATE50N': 'img/night-crate50.png',
    'CRATE51D': 'img/day-crate51.png',
    'CRATE51N': 'img/night-crate51.png',
    'CRATE52D': 'img/day-crate52.png',
    'CRATE52N': 'img/night-crate52.png',
    'CRATE53D': 'img/day-crate53.png',
    'CRATE53N': 'img/night-crate53.png',
    'CRATE54D': 'img/day-crate54.png',
    'CRATE54N': 'img/night-crate54.png',
    'CRATE55D': 'img/day-crate55.png',
    'CRATE55N': 'img/night-crate55.png',
    'CRATE56D': 'img/day-crate56.png',
    'CRATE56N': 'img/night-crate56.png',
    'CRATE57D': 'img/day-crate57.png',
    'CRATE57N': 'img/night-crate57.png',
    'CRATE58D': 'img/day-crate58.png',
    'CRATE58N': 'img/night-crate58.png',
    'CRATE59D': 'img/day-crate59.png',
    'CRATE59N': 'img/night-crate59.png',
    'CRATE60D': 'img/day-crate60.png',
    'CRATE60N': 'img/night-crate60.png',
    'CRATE61D': 'img/day-crate61.png',
    'CRATE61N': 'img/night-crate61.png',
    'CRATE62D': 'img/day-crate62.png',
    'CRATE62N': 'img/night-crate62.png',
    'CRATE63D': 'img/day-crate63.png',
    'CRATE63N': 'img/night-crate63.png',
    'CRATE64D': 'img/day-crate64.png',
    'CRATE64N': 'img/night-crate64.png',
    'CRATE65D': 'img/day-crate65.png',
    'CRATE65N': 'img/night-crate65.png',
    'CRATE66D': 'img/day-crate66.png',
    'CRATE66N': 'img/night-crate66.png',
    'CRATE67D': 'img/day-crate67.png',
    'CRATE67N': 'img/night-crate67.png',
    'CRATE68D': 'img/day-crate68.png',
    'CRATE68N': 'img/night-crate68.png',
    'CRATE69D': 'img/day-crate69.png',
    'CRATE69N': 'img/night-crate69.png',
    'CRATE70D': 'img/day-crate70.png',
    'CRATE70N': 'img/night-crate70.png',
    'CRATE71D': 'img/day-crate71.png',
    'CRATE71N': 'img/night-crate71.png',
    'CRATE72D': 'img/day-crate72.png',
    'CRATE72N': 'img/night-crate72.png',
    'DECORATION_0D': 'img/day-herb0.png',
    'DECORATION_1D': 'img/day-herb1.png',
    'DECORATION_2D': 'img/day-herb2.png',
    'DECORATION_3D': 'img/day-herb3.png',
    'DECORATION_4D': 'img/day-herb4.png',
    'DECORATION_5D': 'img/day-herb5.png',
    'DECORATION_6D': 'img/day-herb6.png',
    'DECORATION_7D': 'img/day-herb7.png',
    'DECORATION_8D': 'img/day-herb8.png',
    'DECORATION_9D': 'img/day-herb9.png',
    'DECORATION_10D': 'img/day-herb10.png',
    'DECORATION_11D': 'img/day-herb11.png',
    'DECORATION_12D': 'img/day-herb12.png',
    'DECORATION_13D': 'img/day-herb13.png',
    'DECORATION_14D': 'img/day-herb14.png',
    'DECORATION_15D': 'img/day-herb15.png',
    'DECORATION_16D': 'img/day-shell0.png',
    'DECORATION_17D': 'img/day-shell1.png',
    'DECORATION_18D': 'img/day-shell2.png',
    'DECORATION_19D': 'img/day-leaf1.png',
    'DECORATION_20D': 'img/day-leaf2.png',
    'DECORATION_21D': 'img/day-leaf3.png',
    'DECORATION_22D': 'img/day-leaf4.png',
    'DECORATION_23D': 'img/day-leaf5.png',
    'DECORATION_24D': 'img/day-leaf6.png',
    'DECORATION_25D': 'img/day-leaf7.png',
    'DECORATION_26D': 'img/day-leaf8.png',
    'DECORATION_27D': 'img/day-rock0.png',
    'DECORATION_28D': 'img/day-rock1.png',
    'DECORATION_29D': 'img/day-rock2.png',
    'DECORATION_30D': 'img/day-rock3.png',
    'DECORATION_31D': 'img/day-rock4.png',
    'DECORATION_32D': 'img/day-rock5.png',
    'DECORATION_33D': 'img/day-rock6.png',
    'DECORATION_34D': 'img/day-rock7.png',
    'DECORATION_35D': 'img/day-rock8.png',
    'DECORATION_36D': 'img/day-rock9.png',
    'DECORATION_37D': 'img/day-rock10.png',
    'DECORATION_38D': 'img/day-rock11.png',
    'DECORATION_39D': 'img/day-rock12.png',
    'DECORATION_40D': 'img/day-rock13.png',
    'DECORATION_41D': 'img/day-flower1.png',
    'DECORATION_42D': 'img/day-flower2.png',
    'DECORATION_43D': 'img/day-flower3.png',
    'DECORATION_44D': 'img/day-flower4.png',
    'DECORATION_45D': 'img/day-flower5.png',
    'DECORATION_46D': 'img/day-flower6.png',
    'DECORATION_47D': 'img/day-flower7.png',
    'DECORATION_48D': 'img/day-flower8.png',
    'DECORATION_49D': 'img/day-flower9.png',
    'DECORATION_50D': 'img/day-herb16.png',
    'DECORATION_51D': 'img/day-herb17.png',
    'DECORATION_52D': 'img/day-herb18.png',
    'DECORATION_53D': 'img/day-herb19.png',
    'DECORATION_54D': 'img/day-herb20.png',
    'DECORATION_55D': 'img/day-herb21.png',
    'DECORATION_0N': 'img/night-herb0.png',
    'DECORATION_1N': 'img/night-herb1.png',
    'DECORATION_2N': 'img/night-herb2.png',
    'DECORATION_3N': 'img/night-herb3.png',
    'DECORATION_4N': 'img/night-herb4.png',
    'DECORATION_5N': 'img/night-herb5.png',
    'DECORATION_6N': 'img/night-herb6.png',
    'DECORATION_7N': 'img/night-herb7.png',
    'DECORATION_8N': 'img/night-herb8.png',
    'DECORATION_9N': 'img/night-herb9.png',
    'DECORATION_10N': 'img/night-herb10.png',
    'DECORATION_11N': 'img/night-herb11.png',
    'DECORATION_12N': 'img/night-herb12.png',
    'DECORATION_13N': 'img/night-herb13.png',
    'DECORATION_14N': 'img/night-herb14.png',
    'DECORATION_15N': 'img/night-herb15.png',
    'DECORATION_16N': 'img/night-shell0.png',
    'DECORATION_17N': 'img/night-shell1.png',
    'DECORATION_18N': 'img/night-shell2.png',
    'DECORATION_19N': 'img/night-leaf1.png',
    'DECORATION_20N': 'img/night-leaf2.png',
    'DECORATION_21N': 'img/night-leaf3.png',
    'DECORATION_22N': 'img/night-leaf4.png',
    'DECORATION_23N': 'img/night-leaf5.png',
    'DECORATION_24N': 'img/night-leaf6.png',
    'DECORATION_25N': 'img/night-leaf7.png',
    'DECORATION_26N': 'img/night-leaf8.png',
    'DECORATION_27N': 'img/night-rock0.png',
    'DECORATION_28N': 'img/night-rock1.png',
    'DECORATION_29N': 'img/night-rock2.png',
    'DECORATION_30N': 'img/night-rock3.png',
    'DECORATION_31N': 'img/night-rock4.png',
    'DECORATION_32N': 'img/night-rock5.png',
    'DECORATION_33N': 'img/night-rock6.png',
    'DECORATION_34N': 'img/night-rock7.png',
    'DECORATION_35N': 'img/night-rock8.png',
    'DECORATION_36N': 'img/night-rock9.png',
    'DECORATION_37N': 'img/night-rock10.png',
    'DECORATION_38N': 'img/night-rock11.png',
    'DECORATION_39N': 'img/night-rock12.png',
    'DECORATION_40N': 'img/night-rock13.png',
    'DECORATION_41N': 'img/night-flower1.png',
    'DECORATION_42N': 'img/night-flower2.png',
    'DECORATION_43N': 'img/night-flower3.png',
    'DECORATION_44N': 'img/night-flower4.png',
    'DECORATION_45N': 'img/night-flower5.png',
    'DECORATION_46N': 'img/night-flower6.png',
    'DECORATION_47N': 'img/night-flower7.png',
    'DECORATION_48N': 'img/night-flower8.png',
    'DECORATION_49N': 'img/night-flower9.png',
    'DECORATION_50N': 'img/night-herb16.png',
    'DECORATION_51N': 'img/night-herb17.png',
    'DECORATION_52N': 'img/night-herb18.png',
    'DECORATION_53N': 'img/night-herb19.png',
    'DECORATION_54N': 'img/night-herb20.png',
    'DECORATION_55N': 'img/night-herb21.png',
    'DAY_RIVER_000_010_000': 'img/day-river000-010-000.png',
    'DAY_RIVER_000_010_010': 'img/day-river000-010-010.png',
    'DAY_RIVER_000_011_000': 'img/day-river000-011-000.png',
    'DAY_RIVER_000_011_010': 'img/day-river000-011-010.png',
    'DAY_RIVER_000_011_011': 'img/day-river000-011-011.png',
    'DAY_RIVER_000_110_000': 'img/day-river000-110-000.png',
    'DAY_RIVER_000_110_010': 'img/day-river000-110-010.png',
    'DAY_RIVER_000_110_110': 'img/day-river000-110-110.png',
    'DAY_RIVER_000_111_000': 'img/day-river000-111-000.png',
    'DAY_RIVER_000_111_010': 'img/day-river000-111-010.png',
    'DAY_RIVER_000_111_011': 'img/day-river000-111-011.png',
    'DAY_RIVER_000_111_110': 'img/day-river000-111-110.png',
    'DAY_RIVER_000_111_111': 'img/day-river000-111-111.png',
    'DAY_RIVER_010_010_000': 'img/day-river010-010-000.png',
    'DAY_RIVER_010_010_010': 'img/day-river010-010-010.png',
    'DAY_RIVER_010_011_000': 'img/day-river010-011-000.png',
    'DAY_RIVER_010_011_010': 'img/day-river010-011-010.png',
    'DAY_RIVER_010_011_011': 'img/day-river010-011-011.png',
    'DAY_RIVER_010_110_000': 'img/day-river010-110-000.png',
    'DAY_RIVER_010_110_010': 'img/day-river010-110-010.png',
    'DAY_RIVER_010_110_110': 'img/day-river010-110-110.png',
    'DAY_RIVER_010_111_000': 'img/day-river010-111-000.png',
    'DAY_RIVER_010_111_010': 'img/day-river010-111-010.png',
    'DAY_RIVER_010_111_011': 'img/day-river010-111-011.png',
    'DAY_RIVER_010_111_110': 'img/day-river010-111-110.png',
    'DAY_RIVER_010_111_111': 'img/day-river010-111-111.png',
    'DAY_RIVER_011_011_000': 'img/day-river011-011-000.png',
    'DAY_RIVER_011_011_010': 'img/day-river011-011-010.png',
    'DAY_RIVER_011_011_011': 'img/day-river011-011-011.png',
    'DAY_RIVER_011_111_000': 'img/day-river011-111-000.png',
    'DAY_RIVER_011_111_010': 'img/day-river011-111-010.png',
    'DAY_RIVER_011_111_011': 'img/day-river011-111-011.png',
    'DAY_RIVER_011_111_110': 'img/day-river011-111-110.png',
    'DAY_RIVER_011_111_111': 'img/day-river011-111-111.png',
    'DAY_RIVER_110_110_000': 'img/day-river110-110-000.png',
    'DAY_RIVER_110_110_010': 'img/day-river110-110-010.png',
    'DAY_RIVER_110_110_110': 'img/day-river110-110-110.png',
    'DAY_RIVER_110_111_000': 'img/day-river110-111-000.png',
    'DAY_RIVER_110_111_010': 'img/day-river110-111-010.png',
    'DAY_RIVER_110_111_011': 'img/day-river110-111-011.png',
    'DAY_RIVER_110_111_110': 'img/day-river110-111-110.png',
    'DAY_RIVER_110_111_111': 'img/day-river110-111-111.png',
    'DAY_RIVER_111_111_011': 'img/day-river111-111-011.png',
    'DAY_RIVER_111_111_110': 'img/day-river111-111-110.png',
    'DAY_RIVER_111_111_011': 'img/day-river111-111-011.png',
    'DAY_RIVER_111_111_000': 'img/day-river111-111-000.png',
    'DAY_RIVER_111_111_111': 'img/day-river111-111-111.png',
    'DAY_RIVER_111_111_010': 'img/day-river111-111-010.png',
    'NIGHT_RIVER_000_010_000': 'img/night-river000-010-000.png',
    'NIGHT_RIVER_000_010_010': 'img/night-river000-010-010.png',
    'NIGHT_RIVER_000_011_000': 'img/night-river000-011-000.png',
    'NIGHT_RIVER_000_011_010': 'img/night-river000-011-010.png',
    'NIGHT_RIVER_000_011_011': 'img/night-river000-011-011.png',
    'NIGHT_RIVER_000_110_000': 'img/night-river000-110-000.png',
    'NIGHT_RIVER_000_110_010': 'img/night-river000-110-010.png',
    'NIGHT_RIVER_000_110_110': 'img/night-river000-110-110.png',
    'NIGHT_RIVER_000_111_000': 'img/night-river000-111-000.png',
    'NIGHT_RIVER_000_111_010': 'img/night-river000-111-010.png',
    'NIGHT_RIVER_000_111_011': 'img/night-river000-111-011.png',
    'NIGHT_RIVER_000_111_110': 'img/night-river000-111-110.png',
    'NIGHT_RIVER_000_111_111': 'img/night-river000-111-111.png',
    'NIGHT_RIVER_010_010_000': 'img/night-river010-010-000.png',
    'NIGHT_RIVER_010_010_010': 'img/night-river010-010-010.png',
    'NIGHT_RIVER_010_011_000': 'img/night-river010-011-000.png',
    'NIGHT_RIVER_010_011_010': 'img/night-river010-011-010.png',
    'NIGHT_RIVER_010_011_011': 'img/night-river010-011-011.png',
    'NIGHT_RIVER_010_110_000': 'img/night-river010-110-000.png',
    'NIGHT_RIVER_010_110_010': 'img/night-river010-110-010.png',
    'NIGHT_RIVER_010_110_110': 'img/night-river010-110-110.png',
    'NIGHT_RIVER_010_111_000': 'img/night-river010-111-000.png',
    'NIGHT_RIVER_010_111_010': 'img/night-river010-111-010.png',
    'NIGHT_RIVER_010_111_011': 'img/night-river010-111-011.png',
    'NIGHT_RIVER_010_111_110': 'img/night-river010-111-110.png',
    'NIGHT_RIVER_010_111_111': 'img/night-river010-111-111.png',
    'NIGHT_RIVER_011_011_000': 'img/night-river011-011-000.png',
    'NIGHT_RIVER_011_011_010': 'img/night-river011-011-010.png',
    'NIGHT_RIVER_011_011_011': 'img/night-river011-011-011.png',
    'NIGHT_RIVER_011_111_000': 'img/night-river011-111-000.png',
    'NIGHT_RIVER_011_111_010': 'img/night-river011-111-010.png',
    'NIGHT_RIVER_011_111_011': 'img/night-river011-111-011.png',
    'NIGHT_RIVER_011_111_110': 'img/night-river011-111-110.png',
    'NIGHT_RIVER_011_111_111': 'img/night-river011-111-111.png',
    'NIGHT_RIVER_110_110_000': 'img/night-river110-110-000.png',
    'NIGHT_RIVER_110_110_010': 'img/night-river110-110-010.png',
    'NIGHT_RIVER_110_110_110': 'img/night-river110-110-110.png',
    'NIGHT_RIVER_110_111_000': 'img/night-river110-111-000.png',
    'NIGHT_RIVER_110_111_010': 'img/night-river110-111-010.png',
    'NIGHT_RIVER_110_111_011': 'img/night-river110-111-011.png',
    'NIGHT_RIVER_110_111_110': 'img/night-river110-111-110.png',
    'NIGHT_RIVER_110_111_111': 'img/night-river110-111-111.png',
    'NIGHT_RIVER_111_111_011': 'img/night-river111-111-011.png',
    'NIGHT_RIVER_111_111_110': 'img/night-river111-111-110.png',
    'NIGHT_RIVER_111_111_011': 'img/night-river111-111-011.png',
    'NIGHT_RIVER_111_111_000': 'img/night-river111-111-000.png',
    'NIGHT_RIVER_111_111_111': 'img/night-river111-111-111.png',
    'NIGHT_RIVER_111_111_010': 'img/night-river111-111-010.png',
    'DAY_RIVER_COMPO1': 'img/day-pebblecompo1.png',
    'DAY_RIVER_COMPO2': 'img/day-pebblecompo2.png',
    'DAY_RIVER_COMPO3': 'img/day-pebblecompo3.png',
    'DAY_RIVER_COMPO4': 'img/day-pebblecompo4.png',
    'DAY_RIVER_COMPO5': 'img/day-pebblecompo5.png',
    'DAY_RIVER_COMPO6': 'img/day-pebblecompo6.png',
    'DAY_RIVER_COMPO7': 'img/day-pebblecompo7.png',
    'DAY_RIVER_COMPO8': 'img/day-pebblecompo8.png',
    'DAY_RIVER_COMPO9': 'img/day-pebblecompo9.png',
    'DAY_RIVER_COMPO10': 'img/day-pebblecompo10.png',
    'DAY_RIVER_COMPO11': 'img/day-pebblecompo11.png',
    'DAY_RIVER_COMPO12': 'img/day-pebblecompo12.png',
    'DAY_RIVER_COMPO13': 'img/day-pebblecompo13.png',
    'DAY_RIVER_COMPO14': 'img/day-pebblecompo14.png',
    'DAY_RIVER_COMPO15': 'img/day-pebblecompo15.png',
    'DAY_RIVER_COMPO16': 'img/day-pebblecompo16.png',
    'DAY_RIVER_COMPO17': 'img/day-pebblecompo17.png',
    'DAY_RIVER_COMPO18': 'img/day-pebblecompo18.png',
    'DAY_RIVER_COMPO19': 'img/day-pebblecompo19.png',
    'DAY_RIVER_COMPO20': 'img/day-pebblecompo20.png',
    'DAY_RIVER_COMPO21': 'img/day-pebblecompo21.png',
    'DAY_RIVER_COMPO22': 'img/day-pebblecompo22.png',
    'DAY_RIVER_COMPO23': 'img/day-pebblecompo23.png',
    'DAY_RIVER_COMPO24': 'img/day-pebblecompo24.png',
    'DAY_RIVER_COMPO25': 'img/day-pebblecompo25.png',
    'DAY_RIVER_COMPO26': 'img/day-pebblecompo26.png',
    'DAY_RIVER_COMPO27': 'img/day-pebblecompo27.png',
    'DAY_RIVER_COMPO28': 'img/day-pebblecompo28.png',
    'NIGHT_RIVER_COMPO1': 'img/night-pebblecompo1.png',
    'NIGHT_RIVER_COMPO2': 'img/night-pebblecompo2.png',
    'NIGHT_RIVER_COMPO3': 'img/night-pebblecompo3.png',
    'NIGHT_RIVER_COMPO4': 'img/night-pebblecompo4.png',
    'NIGHT_RIVER_COMPO5': 'img/night-pebblecompo5.png',
    'NIGHT_RIVER_COMPO6': 'img/night-pebblecompo6.png',
    'NIGHT_RIVER_COMPO7': 'img/night-pebblecompo7.png',
    'NIGHT_RIVER_COMPO8': 'img/night-pebblecompo8.png',
    'NIGHT_RIVER_COMPO9': 'img/night-pebblecompo9.png',
    'NIGHT_RIVER_COMPO10': 'img/night-pebblecompo10.png',
    'NIGHT_RIVER_COMPO11': 'img/night-pebblecompo11.png',
    'NIGHT_RIVER_COMPO12': 'img/night-pebblecompo12.png',
    'NIGHT_RIVER_COMPO13': 'img/night-pebblecompo13.png',
    'NIGHT_RIVER_COMPO14': 'img/night-pebblecompo14.png',
    'NIGHT_RIVER_COMPO15': 'img/night-pebblecompo15.png',
    'NIGHT_RIVER_COMPO16': 'img/night-pebblecompo16.png',
    'NIGHT_RIVER_COMPO17': 'img/night-pebblecompo17.png',
    'NIGHT_RIVER_COMPO18': 'img/night-pebblecompo18.png',
    'NIGHT_RIVER_COMPO19': 'img/night-pebblecompo19.png',
    'NIGHT_RIVER_COMPO20': 'img/night-pebblecompo20.png',
    'NIGHT_RIVER_COMPO21': 'img/night-pebblecompo21.png',
    'NIGHT_RIVER_COMPO22': 'img/night-pebblecompo22.png',
    'NIGHT_RIVER_COMPO23': 'img/night-pebblecompo23.png',
    'NIGHT_RIVER_COMPO24': 'img/night-pebblecompo24.png',
    'NIGHT_RIVER_COMPO25': 'img/night-pebblecompo25.png',
    'NIGHT_RIVER_COMPO26': 'img/night-pebblecompo26.png',
    'NIGHT_RIVER_COMPO27': 'img/night-pebblecompo27.png',
    'NIGHT_RIVER_COMPO28': 'img/night-pebblecompo28.png',
    'BABY_MAMMOTHD': 'img/day-baby-mammoth.png',
    'BABY_MAMMOTH_TAMEDD': 'img/day-baby-mammoth-tamed.png',
    'BABY_MAMMOTH_ATTACKD': 'img/day-baby-mammoth-angry.png',
    'BABY_MAMMOTHN': 'img/night-baby-mammoth.png',
    'BABY_MAMMOTH_TAMEDN': 'img/night-baby-mammoth-tamed.png',
    'BABY_MAMMOTH_ATTACKN': 'img/night-baby-mammoth-angry.png',
    'INV_BABY_MAMMOTH_OUT': 'img/inv-mammoth-out.png',
    'INV_BABY_MAMMOTH_IN': 'img/inv-mammoth-in.png',
    'INV_BABY_MAMMOTH_CLICK': 'img/inv-mammoth-click.png',
    'HURT_BABY_MAMMOTH': 'img/hurt-baby-mammoth.png',
    'BABY_MAMMOTH_STEP': 'img/baby-mammoth-step.png',
    'FLOWER_HATD': 'img/day-flower-hat.png',
    'FLOWER_HATN': 'img/night-flower-hat.png',
    'INV_FLOWER_HAT_OUT': 'img/inv-flower-hat-out.png',
    'INV_FLOWER_HAT_IN': 'img/inv-flower-hat-in.png',
    'INV_FLOWER_HAT_CLICK': 'img/inv-flower-hat-click.png',
    'FUR_HATD': 'img/day-fur-hat.png',
    'FUR_HATN': 'img/night-fur-hat.png',
    'INV_FUR_HAT_OUT': 'img/inv-fur-hat-out.png',
    'INV_FUR_HAT_IN': 'img/inv-fur-hat-in.png',
    'INV_FUR_HAT_CLICK': 'img/inv-fur-hat-click.png',
    'MAMMOTHD': 'img/day-mammoth.png',
    'MAMMOTHN': 'img/night-mammoth.png',
    'HURT_MAMMOTH': 'img/hurt-mammoth.png',
    'INV_FUR_MAMMOTH_OUT': 'img/inv-mammoth-fur-out.png',
    'INV_FUR_MAMMOTH_IN': 'img/inv-mammoth-fur-in.png',
    'INV_FUR_MAMMOTH_CLICK': 'img/inv-mammoth-fur-click.png',
    'INV_WOOD_BOW_OUT': 'img/inv-wood-bow-out.png',
    'INV_WOOD_BOW_IN': 'img/inv-wood-bow-in.png',
    'INV_WOOD_BOW_CLICK': 'img/inv-wood-bow-click.png',
    'INV_WOOD_ARROW_OUT': 'img/inv-wood-arrow-out.png',
    'INV_WOOD_ARROW_IN': 'img/inv-wood-arrow-in.png',
    'INV_WOOD_ARROW_CLICK': 'img/inv-wood-arrow-click.png',
    'WOOD_BOWD': 'img/day-wood-bow2.png',
    'WOOD_BOWN': 'img/night-wood-bow2.png',
    'WOOD_ARROWD': 'img/day-wood-arrow.png',
    'WOOD_ARROWN': 'img/night-wood-arrow.png',
    'INV_STONE_BOW_OUT': 'img/inv-stone-bow-out.png',
    'INV_STONE_BOW_IN': 'img/inv-stone-bow-in.png',
    'INV_STONE_BOW_CLICK': 'img/inv-stone-bow-click.png',
    'INV_STONE_ARROW_OUT': 'img/inv-stone-arrow-out.png',
    'INV_STONE_ARROW_IN': 'img/inv-stone-arrow-in.png',
    'INV_STONE_ARROW_CLICK': 'img/inv-stone-arrow-click.png',
    'STONE_BOWD': 'img/day-stone-bow.png',
    'STONE_BOWN': 'img/night-stone-bow.png',
    'STONE_ARROWD': 'img/day-stone-arrow.png',
    'STONE_ARROWN': 'img/night-stone-arrow.png',
    'INV_GOLD_BOW_OUT': 'img/inv-gold-bow-out.png',
    'INV_GOLD_BOW_IN': 'img/inv-gold-bow-in.png',
    'INV_GOLD_BOW_CLICK': 'img/inv-gold-bow-click.png',
    'INV_GOLD_ARROW_OUT': 'img/inv-gold-arrow-out.png',
    'INV_GOLD_ARROW_IN': 'img/inv-gold-arrow-in.png',
    'INV_GOLD_ARROW_CLICK': 'img/inv-gold-arrow-click.png',
    'GOLD_BOWD': 'img/day-gold-bow.png',
    'GOLD_BOWN': 'img/night-gold-bow.png',
    'GOLD_ARROWD': 'img/day-gold-arrow.png',
    'GOLD_ARROWN': 'img/night-gold-arrow.png',
    'INV_DIAMOND_BOW_OUT': 'img/inv-diamond-bow-out.png',
    'INV_DIAMOND_BOW_IN': 'img/inv-diamond-bow-in.png',
    'INV_DIAMOND_BOW_CLICK': 'img/inv-diamond-bow-click.png',
    'INV_DIAMOND_ARROW_OUT': 'img/inv-diamond-arrow-out.png',
    'INV_DIAMOND_ARROW_IN': 'img/inv-diamond-arrow-in.png',
    'INV_DIAMOND_ARROW_CLICK': 'img/inv-diamond-arrow-click.png',
    'DIAMOND_BOWD': 'img/day-diamond-bow.png',
    'DIAMOND_BOWN': 'img/night-diamond-bow.png',
    'DIAMOND_ARROWD': 'img/day-diamond-arrow.png',
    'DIAMOND_ARROWN': 'img/night-diamond-arrow.png',
    'INV_AMETHYST_BOW_OUT': 'img/inv-amethyst-bow-out.png',
    'INV_AMETHYST_BOW_IN': 'img/inv-amethyst-bow-in.png',
    'INV_AMETHYST_BOW_CLICK': 'img/inv-amethyst-bow-click.png',
    'INV_AMETHYST_ARROW_OUT': 'img/inv-amethyst-arrow-out.png',
    'INV_AMETHYST_ARROW_IN': 'img/inv-amethyst-arrow-in.png',
    'INV_AMETHYST_ARROW_CLICK': 'img/inv-amethyst-arrow-click.png',
    'AMETHYST_BOWD': 'img/day-amethyst-bow.png',
    'AMETHYST_BOWN': 'img/night-amethyst-bow.png',
    'AMETHYST_ARROWD': 'img/day-amethyst-arrow.png',
    'AMETHYST_ARROWN': 'img/night-amethyst-arrow.png',
    'INV_DRAGON_BOW_OUT': 'img/inv-dragon-bow-out.png',
    'INV_DRAGON_BOW_IN': 'img/inv-dragon-bow-in.png',
    'INV_DRAGON_BOW_CLICK': 'img/inv-dragon-bow-click.png',
    'INV_DRAGON_ARROW_OUT': 'img/inv-dragon-arrow-out.png',
    'INV_DRAGON_ARROW_IN': 'img/inv-dragon-arrow-in.png',
    'INV_DRAGON_ARROW_CLICK': 'img/inv-dragon-arrow-click.png',
    'DRAGON_BOWD': 'img/day-dragon-bow.png',
    'DRAGON_BOWN': 'img/night-dragon-bow.png',
    'DRAGON_ARROWD': 'img/day-dragon-arrow.png',
    'DRAGON_ARROWN': 'img/night-dragon-arrow.png',
    'INV_REIDITE_BOW_OUT': 'img/inv-reidite-bow-out.png',
    'INV_REIDITE_BOW_IN': 'img/inv-reidite-bow-in.png',
    'INV_REIDITE_BOW_CLICK': 'img/inv-reidite-bow-click.png',
    'INV_REIDITE_ARROW_OUT': 'img/inv-reidite-arrow-out.png',
    'INV_REIDITE_ARROW_IN': 'img/inv-reidite-arrow-in.png',
    'INV_REIDITE_ARROW_CLICK': 'img/inv-reidite-arrow-click.png',
    'REIDITE_BOWD': 'img/day-reidite-bow.png',
    'REIDITE_BOWN': 'img/night-reidite-bow.png',
    'REIDITE_ARROWD': 'img/day-reidite-arrow.png',
    'REIDITE_ARROWN': 'img/night-reidite-arrow.png',
    'BANDAGE_ACTIVATED': 'img/bandage-activated.png',
    'AUTO_FEED': 'img/auto-feed.png',
    'STOP_REGENERATION_BLIZZARD': 'img/stop-regeneration.png',
    'STOP_REGENERATION': 'img/stop-regeneration2.png',
    'WOOD_TOWERD': 'img/day-wood-platform.png',
    'WOOD_TOWERN': 'img/night-wood-platform.png',
    'INV_WOOD_TOWER_IN': 'img/inv-wood-platform-in.png',
    'INV_WOOD_TOWER_OUT': 'img/inv-wood-platform-out.png',
    'INV_WOOD_TOWER_CLICK': 'img/inv-wood-platform-click.png',
    'WOOD_SHIELDD': 'img/day-wood-shield.png',
    'WOOD_SHIELDN': 'img/night-wood-shield.png',
    'STONE_SHIELDD': 'img/day-stone-shield.png',
    'STONE_SHIELDN': 'img/night-stone-shield.png',
    'GOLD_SHIELDD': 'img/day-gold-shield.png',
    'GOLD_SHIELDN': 'img/night-gold-shield.png',
    'DIAMOND_SHIELDD': 'img/day-diamond-shield.png',
    'DIAMOND_SHIELDN': 'img/night-diamond-shield.png',
    'AMETHYST_SHIELDD': 'img/day-amethyst-shield.png',
    'AMETHYST_SHIELDN': 'img/night-amethyst-shield.png',
    'REIDITE_SHIELDD': 'img/day-reidite-shield.png',
    'REIDITE_SHIELDN': 'img/night-reidite-shield.png',
    'INV_WOOD_SHIELD_IN': 'img/inv-wood-shield-in.png',
    'INV_WOOD_SHIELD_OUT': 'img/inv-wood-shield-out.png',
    'INV_WOOD_SHIELD_CLICK': 'img/inv-wood-shield-click.png',
    'INV_STONE_SHIELD_IN': 'img/inv-stone-shield-in.png',
    'INV_STONE_SHIELD_OUT': 'img/inv-stone-shield-out.png',
    'INV_STONE_SHIELD_CLICK': 'img/inv-stone-shield-click.png',
    'INV_GOLD_SHIELD_IN': 'img/inv-gold-shield-in.png',
    'INV_GOLD_SHIELD_OUT': 'img/inv-gold-shield-out.png',
    'INV_GOLD_SHIELD_CLICK': 'img/inv-gold-shield-click.png',
    'INV_DIAMOND_SHIELD_IN': 'img/inv-diamond-shield-in.png',
    'INV_DIAMOND_SHIELD_OUT': 'img/inv-diamond-shield-out.png',
    'INV_DIAMOND_SHIELD_CLICK': 'img/inv-diamond-shield-click.png',
    'INV_AMETHYST_SHIELD_IN': 'img/inv-amethyst-shield-in.png',
    'INV_AMETHYST_SHIELD_OUT': 'img/inv-amethyst-shield-out.png',
    'INV_AMETHYST_SHIELD_CLICK': 'img/inv-amethyst-shield-click.png',
    'INV_REIDITE_SHIELD_IN': 'img/inv-reidite-shield-in.png',
    'INV_REIDITE_SHIELD_OUT': 'img/inv-reidite-shield-out.png',
    'INV_REIDITE_SHIELD_CLICK': 'img/inv-reidite-shield-click.png',
    'MACHETED': 'img/day-machete.png',
    'MACHETEN': 'img/night-machete.png',
    'INV_MACHETE_IN': 'img/inv-machete-in.png',
    'INV_MACHETE_OUT': 'img/inv-machete-out.png',
    'INV_MACHETE_CLICK': 'img/inv-machete-click.png'
}, WINDOW12 = [{}], WINDOW12[0x0]['stringify'] = function(_0x5e1a01) {
    var _0xde6e37 = new Uint8Array(new ArrayBuffer(_0x5e1a01['length']));
    for (var _0x23f8e6 = 0x0; _0x23f8e6 < _0x5e1a01['length']; _0x23f8e6++) _0xde6e37[_0x23f8e6] = _0x5e1a01[_0x23f8e6];
    return _0xde6e37;
}, DUMP_IMAGES = {}, PREPROC_IMAGES = {};
for (var i in IMAGES) DUMP_IMAGES[i] = IMAGES[i];
sprite = [], RARITY = {}, RARITY['FREE'] = 0x0, RARITY['WOOD'] = 0x1, RARITY['STONE'] = 0x2, RARITY['GOLD'] = 0x3, RARITY['DIAMOND'] = 0x4, RARITY['AMETHYST'] = 0x5, RARITY['REIDITE'] = 0x6, RARITY['SPECIAL'] = 0x7, RARITY['LEVEL'] = 0x8, COSMETICS = {}, MINIMAP_Utils = [], find_cosmetics_per_id = function(_0x8786ca, _0x4d6017) {
    for (var _0x90e7d1 = 0x0; _0x90e7d1 < _0x8786ca['length']; _0x90e7d1++) {
        if (_0x8786ca[_0x90e7d1]['id'] === _0x4d6017) return _0x90e7d1;
    }
    return -0x1;
};
var MINIMAP_LIST = [];

function render_type_resources_minimap(_0x283f07, _0x4fb405) {
    for (var _0x5323ec = 0x0; _0x5323ec < MINIMAP_LIST['length']; _0x5323ec += _0x4fb405) {
        var _0x4196b9 = MINIMAP_LIST[_0x5323ec];
        if (_0x4196b9[0x0] === _0x283f07) render_resource_minimap(_0x4196b9[0x0], _0x4196b9[0x1], _0x4196b9[0x2], _0x4196b9[0x3]);
    }
};

function render_all_resources_minimap() {
    render_type_resources_minimap('isl', 0x1), render_type_resources_minimap('wtb', 0x14), render_type_resources_minimap('la', 0x1), render_type_resources_minimap('c', 0x1), render_type_resources_minimap('s', 0x1), render_type_resources_minimap('f', 0x1), render_type_resources_minimap('p', 0x1), render_type_resources_minimap('g', 0x1), render_type_resources_minimap('d', 0x1), render_type_resources_minimap('a', 0x1), render_type_resources_minimap('re', 0x1), render_type_resources_minimap('m', 0x1), MINIMAP_LIST = [];
};

function add_resource_minimap(_0x5d7565, _0x53e11f, _0x3c6a5b, _0xc90a34) {
    MINIMAP_LIST['push']([_0x5d7565, _0x53e11f, _0x3c6a5b, _0xc90a34]);
};

function render_resource_minimap(_0x5441b5, _0xf022ae, _0x338e99, _0x2558a0) {
    var _0x43478f = MINIMAP_Utils[_0x5441b5];
    if (_0x43478f === undefined) return;
    for (var _0xd50ded = 0x0; _0xd50ded < 0x2; _0xd50ded++) {
        var _0x5c259c = _0x43478f[_0xf022ae][_0xd50ded],
            _0x58d395 = 0xc1 * _0x2558a0 / world['nw'],
            _0x40191e = 0xc1 * _0x338e99 / world['nh'],
            _0x59e69f = _0x5c259c['width'] / 3.5,
            _0x5864f3 = _0x5c259c['height'] / 3.5;
        sprite[SPRITE['MINIMAP_CTX']][_0xd50ded]['drawImage'](_0x5c259c, _0x58d395 - _0x59e69f / 0x2, _0x40191e - _0x5864f3 / 0x2, _0x59e69f, _0x5864f3), _0x58d395 = 0x258 * _0x2558a0 / world['nw'], _0x40191e = 0x258 * _0x338e99 / world['nh'], _0x59e69f = _0x5c259c['width'] / 1.5, _0x5864f3 = _0x5c259c['height'] / 1.5, sprite[SPRITE['BIGMAP_CTX']][_0xd50ded]['drawImage'](_0x5c259c, _0x58d395 - _0x59e69f / 0x2, _0x40191e - _0x5864f3 / 0x2, _0x59e69f, _0x5864f3);
    }
}
render_minimap = function() {
    for (var _0x46c683 = 0x0; _0x46c683 < 0x2; _0x46c683++) {
        sprite[SPRITE['MINIMAP_CTX']][_0x46c683]['clearRect'](0x0, 0x0, 0xc1, 0xc1), sprite[SPRITE['MINIMAP_CTX']][_0x46c683]['drawImage'](MINIMAP_Utils['MAP'][_0x46c683], 0x0, 0x0, 0xc1, 0xc1), sprite[SPRITE['BIGMAP_CTX']][_0x46c683]['clearRect'](0x0, 0x0, 0x258, 0x258), sprite[SPRITE['BIGMAP_CTX']][_0x46c683]['drawImage'](MINIMAP_Utils['MAP'][_0x46c683], 0x0, 0x0, 0x258, 0x258);
        for (var _0x4a1f6a = world['biomes']['length'] - 0x1; _0x4a1f6a >= 0x0; _0x4a1f6a--) {
            var _0xfd21d7 = world['biomes'][_0x4a1f6a],
                _0x252330 = 0xc1 * _0xfd21d7['x1'] / (0x64 * world['nw']),
                _0x15d19a = 0xc1 * _0xfd21d7['y1'] / (0x64 * world['nh']),
                _0x2741e3 = 0xc1 * _0xfd21d7['w'] / (0x64 * world['nw']),
                _0x3436be = 0xc1 * _0xfd21d7['h'] / (0x64 * world['nh']),
                _0x11d21e = 0x258 * _0xfd21d7['x1'] / (0x64 * world['nw']),
                _0x11ac6a = 0x258 * _0xfd21d7['y1'] / (0x64 * world['nh']),
                _0x3a0df3 = 0x258 * _0xfd21d7['w'] / (0x64 * world['nw']),
                _0x2b5bc2 = 0x258 * _0xfd21d7['h'] / (0x64 * world['nh']);
            _0xfd21d7['t'] === world['BIOME_FOREST'] && (sprite[SPRITE['MINIMAP_CTX']][_0x46c683]['drawImage'](MINIMAP_Utils['FOREST'][_0x46c683], _0x252330, _0x15d19a, _0x2741e3, _0x3436be), sprite[SPRITE['BIGMAP_CTX']][_0x46c683]['drawImage'](MINIMAP_Utils['FOREST'][_0x46c683], _0x11d21e, _0x11ac6a, _0x3a0df3, _0x2b5bc2)), _0xfd21d7['t'] === world['BIOME_WINTER'] && (sprite[SPRITE['MINIMAP_CTX']][_0x46c683]['drawImage'](MINIMAP_Utils['WINTER'][_0x46c683], _0x252330, _0x15d19a, _0x2741e3, _0x3436be), sprite[SPRITE['BIGMAP_CTX']][_0x46c683]['drawImage'](MINIMAP_Utils['WINTER'][_0x46c683], _0x11d21e, _0x11ac6a, _0x3a0df3, _0x2b5bc2)), _0xfd21d7['t'] === world['BIOME_LAVA'] && (sprite[SPRITE['MINIMAP_CTX']][_0x46c683]['drawImage'](MINIMAP_Utils['LAVA'][_0x46c683], _0x252330, _0x15d19a, _0x2741e3, _0x3436be), sprite[SPRITE['BIGMAP_CTX']][_0x46c683]['drawImage'](MINIMAP_Utils['LAVA'][_0x46c683], _0x11d21e, _0x11ac6a, _0x3a0df3, _0x2b5bc2)), _0xfd21d7['t'] === world['BIOME_DRAGON'] && (sprite[SPRITE['MINIMAP_CTX']][_0x46c683]['drawImage'](MINIMAP_Utils['CAVE'][_0x46c683], _0x252330, _0x15d19a, _0x2741e3, _0x3436be), sprite[SPRITE['BIGMAP_CTX']][_0x46c683]['drawImage'](MINIMAP_Utils['CAVE'][_0x46c683], _0x11d21e, _0x11ac6a, _0x3a0df3, _0x2b5bc2)), _0xfd21d7['t'] === world['BIOME_DESERT'] && (sprite[SPRITE['MINIMAP_CTX']][_0x46c683]['drawImage'](MINIMAP_Utils['DESERT'][_0x46c683], _0x252330, _0x15d19a, _0x2741e3, _0x3436be), sprite[SPRITE['BIGMAP_CTX']][_0x46c683]['drawImage'](MINIMAP_Utils['DESERT'][_0x46c683], _0x11d21e, _0x11ac6a, _0x3a0df3, _0x2b5bc2));
        }
    }
}, render_cosmetics = function() {
    COSMETICS = {
        'SKIN': [{
            'id': 0x0,
            'day': IMAGES['PLAYER0D'],
            'night': IMAGES['PLAYER0N'],
            'dayHand': IMAGES['HAND0D'],
            'nightHand': IMAGES['HAND0N'],
            'rarity': RARITY['FREE'],
            'author': 'Starve.io',
            'name': 'Starver'
        }, {
            'id': 0x3,
            'day': IMAGES['PLAYER3D'],
            'night': IMAGES['PLAYER3N'],
            'dayHand': IMAGES['HAND3D'],
            'nightHand': IMAGES['HAND3N'],
            'rarity': RARITY['FREE'],
            'author': 'Starve.io',
            'name': 'Angry'
        }, {
            'id': 0x2,
            'day': IMAGES['PLAYER2D'],
            'night': IMAGES['PLAYER2N'],
            'dayHand': IMAGES['HAND2D'],
            'nightHand': IMAGES['HAND2N'],
            'rarity': RARITY['FREE'],
            'author': 'Starve.io',
            'name': 'Sad'
        }, {
            'id': 0x9,
            'day': IMAGES['PLAYER9D'],
            'night': IMAGES['PLAYER9N'],
            'dayHand': IMAGES['HAND9D'],
            'nightHand': IMAGES['HAND9N'],
            'rarity': RARITY['FREE'],
            'author': 'Starve.io',
            'name': 'Happy\x201'
        }, {
            'id': 0x1,
            'day': IMAGES['PLAYER1D'],
            'night': IMAGES['PLAYER1N'],
            'dayHand': IMAGES['HAND1D'],
            'nightHand': IMAGES['HAND1N'],
            'rarity': RARITY['WOOD'],
            'author': 'Starve.io',
            'name': 'What?'
        }, {
            'id': 0x4,
            'day': IMAGES['PLAYER4D'],
            'night': IMAGES['PLAYER4N'],
            'dayHand': IMAGES['HAND4D'],
            'nightHand': IMAGES['HAND4N'],
            'rarity': RARITY['WOOD'],
            'author': 'Starve.io',
            'name': 'Suspicious'
        }, {
            'id': 0x5,
            'day': IMAGES['PLAYER5D'],
            'night': IMAGES['PLAYER5N'],
            'dayHand': IMAGES['HAND5D'],
            'nightHand': IMAGES['HAND5N'],
            'rarity': RARITY['WOOD'],
            'author': 'Starve.io',
            'name': 'Scar'
        }, {
            'id': 0x6,
            'day': IMAGES['PLAYER6D'],
            'night': IMAGES['PLAYER6N'],
            'dayHand': IMAGES['HAND6D'],
            'nightHand': IMAGES['HAND6N'],
            'rarity': RARITY['WOOD'],
            'author': 'Starve.io',
            'name': 'In\x20Trouble'
        }, {
            'id': 0x7,
            'day': IMAGES['PLAYER7D'],
            'night': IMAGES['PLAYER7N'],
            'dayHand': IMAGES['HAND7D'],
            'nightHand': IMAGES['HAND7N'],
            'rarity': RARITY['WOOD'],
            'author': 'Starve.io',
            'name': 'Cute'
        }, {
            'id': 0x8,
            'day': IMAGES['PLAYER8D'],
            'night': IMAGES['PLAYER8N'],
            'dayHand': IMAGES['HAND8D'],
            'nightHand': IMAGES['HAND8N'],
            'rarity': RARITY['WOOD'],
            'author': 'Starve.io',
            'name': 'Bored\x201'
        }, {
            'id': 0xa,
            'day': IMAGES['PLAYER10D'],
            'night': IMAGES['PLAYER10N'],
            'dayHand': IMAGES['HAND10D'],
            'nightHand': IMAGES['HAND10N'],
            'rarity': RARITY['WOOD'],
            'author': 'Starve.io',
            'name': 'Happy\x202'
        }, {
            'id': 0xb,
            'day': IMAGES['PLAYER11D'],
            'night': IMAGES['PLAYER11N'],
            'dayHand': IMAGES['HAND11D'],
            'nightHand': IMAGES['HAND11N'],
            'rarity': RARITY['WOOD'],
            'author': 'Starve.io',
            'name': 'Crazy'
        }, {
            'id': 0xc,
            'day': IMAGES['PLAYER12D'],
            'night': IMAGES['PLAYER12N'],
            'dayHand': IMAGES['HAND12D'],
            'nightHand': IMAGES['HAND12N'],
            'rarity': RARITY['WOOD'],
            'author': 'Starve.io',
            'name': 'Happy\x203'
        }, {
            'id': 0xd,
            'day': IMAGES['PLAYER13D'],
            'night': IMAGES['PLAYER13N'],
            'dayHand': IMAGES['HAND13D'],
            'nightHand': IMAGES['HAND13N'],
            'rarity': RARITY['WOOD'],
            'author': 'Starve.io',
            'name': 'Very\x20Cute'
        }, {
            'id': 0xe,
            'day': IMAGES['PLAYER14D'],
            'night': IMAGES['PLAYER14N'],
            'dayHand': IMAGES['HAND14D'],
            'nightHand': IMAGES['HAND14N'],
            'rarity': RARITY['WOOD'],
            'author': 'Starve.io',
            'name': 'Curious'
        }, {
            'id': 0xf,
            'day': IMAGES['PLAYER15D'],
            'night': IMAGES['PLAYER15N'],
            'dayHand': IMAGES['HAND15D'],
            'nightHand': IMAGES['HAND15N'],
            'rarity': RARITY['WOOD'],
            'author': 'Starve.io',
            'name': 'Bored\x202'
        }, {
            'id': 0x10,
            'day': IMAGES['PLAYER16D'],
            'night': IMAGES['PLAYER16N'],
            'dayHand': IMAGES['HAND16D'],
            'nightHand': IMAGES['HAND16N'],
            'rarity': RARITY['WOOD'],
            'author': 'Starve.io',
            'name': 'Happy\x204'
        }, {
            'id': 0x11,
            'day': IMAGES['PLAYER17D'],
            'night': IMAGES['PLAYER17N'],
            'dayHand': IMAGES['HAND17D'],
            'nightHand': IMAGES['HAND17N'],
            'rarity': RARITY['WOOD'],
            'author': 'Starve.io',
            'name': 'Scar\x202'
        }, {
            'id': 0x12,
            'day': IMAGES['PLAYER18D'],
            'night': IMAGES['PLAYER18N'],
            'dayHand': IMAGES['HAND18D'],
            'nightHand': IMAGES['HAND18N'],
            'rarity': RARITY['WOOD'],
            'author': 'Starve.io',
            'name': 'Sick'
        }, {
            'id': 0x13,
            'day': IMAGES['PLAYER19D'],
            'night': IMAGES['PLAYER19N'],
            'dayHand': IMAGES['HAND19D'],
            'nightHand': IMAGES['HAND19N'],
            'rarity': RARITY['WOOD'],
            'author': 'Starve.io',
            'name': 'Somnambule'
        }, {
            'id': 0x18,
            'day': IMAGES['SKIN7D'],
            'night': IMAGES['SKIN7N'],
            'dayHand': IMAGES['HAND_SKIN7D'],
            'nightHand': IMAGES['HAND_SKIN7N'],
            'rarity': RARITY['WOOD'],
            'author': 'Pixelbitie',
            'name': 'Feel\x20Bad'
        }, {
            'id': 0x17,
            'day': IMAGES['SKIN0D'],
            'night': IMAGES['SKIN0N'],
            'dayHand': IMAGES['HAND_SKIN0D'],
            'nightHand': IMAGES['HAND_SKIN0N'],
            'rarity': RARITY['WOOD'],
            'author': 'Pixelbitie',
            'name': 'Mmmh.'
        }, {
            'id': 0x67,
            'day': IMAGES['SKIN78D'],
            'night': IMAGES['SKIN78N'],
            'dayHand': IMAGES['HAND_SKIN78D'],
            'nightHand': IMAGES['HAND_SKIN78N'],
            'rarity': RARITY['WOOD'],
            'author': 'pizza\x20wa',
            'name': 'Panic'
        }, {
            'id': 0x69,
            'day': IMAGES['SKIN80D'],
            'night': IMAGES['SKIN80N'],
            'dayHand': IMAGES['HAND_SKIN80D'],
            'nightHand': IMAGES['HAND_SKIN80N'],
            'rarity': RARITY['WOOD'],
            'author': 'pizza\x20wa',
            'name': 'Hypnotic'
        }, {
            'id': 0x6a,
            'day': IMAGES['SKIN81D'],
            'night': IMAGES['SKIN81N'],
            'dayHand': IMAGES['HAND_SKIN81D'],
            'nightHand': IMAGES['HAND_SKIN81N'],
            'rarity': RARITY['WOOD'],
            'author': 'pizza\x20wa',
            'name': 'Stars\x20in\x20the\x20eyes'
        }, {
            'id': 0x68,
            'day': IMAGES['SKIN79D'],
            'night': IMAGES['SKIN79N'],
            'dayHand': IMAGES['HAND_SKIN79D'],
            'nightHand': IMAGES['HAND_SKIN79N'],
            'rarity': RARITY['STONE'],
            'author': 'pizza\x20wa',
            'name': 'Scared\x20at\x20night'
        }, {
            'id': 0x14,
            'day': IMAGES['SKIN_VAMPIRED'],
            'night': IMAGES['SKIN_VAMPIREN'],
            'dayHand': IMAGES['HAND_VAMPIRED'],
            'nightHand': IMAGES['HAND_VAMPIREN'],
            'rarity': RARITY['STONE'],
            'author': 'Starve.io',
            'name': 'Vampire'
        }, {
            'id': 0x15,
            'day': IMAGES['SKIN_ZOMBIED'],
            'night': IMAGES['SKIN_ZOMBIEN'],
            'dayHand': IMAGES['HAND_ZOMBIED'],
            'nightHand': IMAGES['HAND_ZOMBIEN'],
            'rarity': RARITY['STONE'],
            'author': 'Starve.io',
            'name': 'Zombie'
        }, {
            'id': 0x16,
            'day': IMAGES['SKIN_DEVASTD'],
            'night': IMAGES['SKIN_DEVASTN'],
            'dayHand': IMAGES['HAND_DEVASTD'],
            'nightHand': IMAGES['HAND_DEVASTN'],
            'rarity': RARITY['STONE'],
            'author': 'Pixelbitie',
            'name': 'Devaster'
        }, {
            'id': 0x74,
            'day': IMAGES['SKIN91D'],
            'night': IMAGES['SKIN91N'],
            'dayHand': IMAGES['HAND_SKIN91D'],
            'nightHand': IMAGES['HAND_SKIN91N'],
            'rarity': RARITY['STONE'],
            'author': 'Fukss',
            'name': 'Dead\x20Devaster'
        }, {
            'id': 0x1b,
            'day': IMAGES['SKIN19D'],
            'night': IMAGES['SKIN19N'],
            'dayHand': IMAGES['HAND_SKIN19D'],
            'nightHand': IMAGES['HAND_SKIN19N'],
            'rarity': RARITY['STONE'],
            'author': 'Winter',
            'name': 'Cactus'
        }, {
            'id': 0x1c,
            'day': IMAGES['SKIN20D'],
            'night': IMAGES['SKIN20N'],
            'dayHand': IMAGES['HAND_SKIN20D'],
            'nightHand': IMAGES['HAND_SKIN20N'],
            'rarity': RARITY['STONE'],
            'author': 'pizza\x20wa',
            'name': 'Bee'
        }, {
            'id': 0x31,
            'day': IMAGES['SKIN24D'],
            'night': IMAGES['SKIN24N'],
            'dayHand': IMAGES['HAND_SKIN24D'],
            'nightHand': IMAGES['HAND_SKIN24N'],
            'rarity': RARITY['STONE'],
            'author': 'Taco4Life',
            'name': 'Camo\x20Skin'
        }, {
            'id': 0x3a,
            'day': IMAGES['SKIN34D'],
            'night': IMAGES['SKIN34N'],
            'dayHand': IMAGES['HAND_SKIN34D'],
            'nightHand': IMAGES['HAND_SKIN34N'],
            'rarity': RARITY['STONE'],
            'author': 'Starve.io',
            'name': 'Blue\x20Limax\x20Skin'
        }, {
            'id': 0x3b,
            'day': IMAGES['SKIN33D'],
            'night': IMAGES['SKIN33N'],
            'dayHand': IMAGES['HAND_SKIN33D'],
            'nightHand': IMAGES['HAND_SKIN33N'],
            'rarity': RARITY['STONE'],
            'author': 'Starve.io',
            'name': 'Red\x20Limax\x20Skin'
        }, {
            'id': 0x5e,
            'day': IMAGES['SKIN69D'],
            'night': IMAGES['SKIN69N'],
            'dayHand': IMAGES['HAND_SKIN69D'],
            'nightHand': IMAGES['HAND_SKIN69N'],
            'rarity': RARITY['STONE'],
            'author': 'Taco4Life',
            'name': 'Mr.\x20Pumpkin'
        }, {
            'id': 0x6d,
            'day': IMAGES['SKIN84D'],
            'night': IMAGES['SKIN84N'],
            'dayHand': IMAGES['HAND_SKIN84D'],
            'nightHand': IMAGES['HAND_SKIN84N'],
            'rarity': RARITY['STONE'],
            'author': 'pizza\x20wa',
            'name': 'Wood'
        }, {
            'id': 0x72,
            'day': IMAGES['SKIN89D'],
            'night': IMAGES['SKIN89N'],
            'dayHand': IMAGES['HAND_SKIN89D'],
            'nightHand': IMAGES['HAND_SKIN89N'],
            'rarity': RARITY['STONE'],
            'author': 'pizza\x20wa',
            'name': 'Zebra'
        }, {
            'id': 0x78,
            'day': IMAGES['SKIN95D'],
            'night': IMAGES['SKIN95N'],
            'dayHand': IMAGES['HAND_SKIN95D'],
            'nightHand': IMAGES['HAND_SKIN95N'],
            'rarity': RARITY['STONE'],
            'author': 'CrysTal',
            'name': 'Tiger'
        }, {
            'id': 0x86,
            'day': IMAGES['SKIN109D'],
            'night': IMAGES['SKIN109N'],
            'dayHand': IMAGES['HAND_SKIN109D'],
            'nightHand': IMAGES['HAND_SKIN109N'],
            'rarity': RARITY['STONE'],
            'author': 'Franchestcreator',
            'name': 'Day\x20or\x20Night'
        }, {
            'id': 0x87,
            'day': IMAGES['SKIN110D'],
            'night': IMAGES['SKIN110N'],
            'dayHand': IMAGES['HAND_SKIN110D'],
            'nightHand': IMAGES['HAND_SKIN110N'],
            'rarity': RARITY['STONE'],
            'author': 'Poinet',
            'name': 'Square\x20Starver'
        }, {
            'id': 0x88,
            'day': IMAGES['SKIN111D'],
            'night': IMAGES['SKIN111N'],
            'dayHand': IMAGES['HAND_SKIN111D'],
            'nightHand': IMAGES['HAND_SKIN111N'],
            'rarity': RARITY['STONE'],
            'author': 'Starve.io',
            'name': 'Voodoo\x20Doll'
        }, {
            'id': 0x89,
            'day': IMAGES['SKIN112D'],
            'night': IMAGES['SKIN112N'],
            'dayHand': IMAGES['HAND_SKIN112D'],
            'nightHand': IMAGES['HAND_SKIN112N'],
            'rarity': RARITY['STONE'],
            'author': 'Starve.io',
            'name': 'Frankenstein'
        }, {
            'id': 0x8a,
            'day': IMAGES['SKIN114D'],
            'night': IMAGES['SKIN114N'],
            'dayHand': IMAGES['HAND_SKIN114D'],
            'nightHand': IMAGES['HAND_SKIN114N'],
            'rarity': RARITY['STONE'],
            'author': 'Starve.io',
            'name': 'Old\x20Mummy'
        }, {
            'id': 0x8b,
            'day': IMAGES['SKIN115D'],
            'night': IMAGES['SKIN115N'],
            'dayHand': IMAGES['HAND_SKIN115D'],
            'nightHand': IMAGES['HAND_SKIN115N'],
            'rarity': RARITY['STONE'],
            'author': 'Starve.io',
            'name': 'Werewolf'
        }, {
            'id': 0x8c,
            'day': IMAGES['SKIN116D'],
            'night': IMAGES['SKIN116N'],
            'dayHand': IMAGES['HAND_SKIN116D'],
            'nightHand': IMAGES['HAND_SKIN116N'],
            'rarity': RARITY['STONE'],
            'author': 'Starve.io',
            'name': 'Old\x20Cthulhu'
        }, {
            'id': 0x8d,
            'day': IMAGES['SKIN117D'],
            'night': IMAGES['SKIN117N'],
            'dayHand': IMAGES['HAND_SKIN117D'],
            'nightHand': IMAGES['HAND_SKIN117N'],
            'rarity': RARITY['STONE'],
            'author': 'Starve.io',
            'name': 'Sea\x20Man'
        }, {
            'id': 0x8e,
            'day': IMAGES['SKIN118D'],
            'night': IMAGES['SKIN118N'],
            'dayHand': IMAGES['HAND_SKIN118D'],
            'nightHand': IMAGES['HAND_SKIN118N'],
            'rarity': RARITY['STONE'],
            'author': 'Starve.io',
            'name': 'Old\x20Pumpkin'
        }, {
            'id': 0x94,
            'day': IMAGES['SKIN124D'],
            'night': IMAGES['SKIN124N'],
            'dayHand': IMAGES['HAND_SKIN124D'],
            'nightHand': IMAGES['HAND_SKIN124N'],
            'rarity': RARITY['STONE'],
            'author': 'Starve.io',
            'name': 'Old\x20Snowman'
        }, {
            'id': 0x95,
            'day': IMAGES['SKIN125D'],
            'night': IMAGES['SKIN125N'],
            'dayHand': IMAGES['HAND_SKIN125D'],
            'nightHand': IMAGES['HAND_SKIN125N'],
            'rarity': RARITY['STONE'],
            'author': 'Starve.io',
            'name': 'Old\x20Christmas\x20Tree\x20Man'
        }, {
            'id': 0x96,
            'day': IMAGES['SKIN126D'],
            'night': IMAGES['SKIN126N'],
            'dayHand': IMAGES['HAND_SKIN126D'],
            'nightHand': IMAGES['HAND_SKIN126N'],
            'rarity': RARITY['STONE'],
            'author': 'Starve.io',
            'name': 'Old\x20Mrs\x20Bell'
        }, {
            'id': 0x97,
            'day': IMAGES['SKIN127D'],
            'night': IMAGES['SKIN127N'],
            'dayHand': IMAGES['HAND_SKIN127D'],
            'nightHand': IMAGES['HAND_SKIN127N'],
            'rarity': RARITY['STONE'],
            'author': 'Starve.io',
            'name': 'Old\x20Elfy'
        }, {
            'id': 0x98,
            'day': IMAGES['SKIN128D'],
            'night': IMAGES['SKIN128N'],
            'dayHand': IMAGES['HAND_SKIN128D'],
            'nightHand': IMAGES['HAND_SKIN128N'],
            'rarity': RARITY['STONE'],
            'author': 'Starve.io',
            'name': 'Old\x20Mr\x20Present'
        }, {
            'id': 0x99,
            'day': IMAGES['SKIN129D'],
            'night': IMAGES['SKIN129N'],
            'dayHand': IMAGES['HAND_SKIN129D'],
            'nightHand': IMAGES['HAND_SKIN129N'],
            'rarity': RARITY['STONE'],
            'author': 'Starve.io',
            'name': 'My\x20Dear\x20Old\x20Deer'
        }, {
            'id': 0x9a,
            'day': IMAGES['SKIN130D'],
            'night': IMAGES['SKIN130N'],
            'dayHand': IMAGES['HAND_SKIN130D'],
            'nightHand': IMAGES['HAND_SKIN130N'],
            'rarity': RARITY['STONE'],
            'author': 'Starve.io',
            'name': 'Mr\x20Angel'
        }, {
            'id': 0x9b,
            'day': IMAGES['SKIN131D'],
            'night': IMAGES['SKIN131N'],
            'dayHand': IMAGES['HAND_SKIN131D'],
            'nightHand': IMAGES['HAND_SKIN131N'],
            'rarity': RARITY['STONE'],
            'author': 'Starve.io',
            'name': 'Mr\x20Ice\x20Cube'
        }, {
            'id': 0x9c,
            'day': IMAGES['SKIN132D'],
            'night': IMAGES['SKIN132N'],
            'dayHand': IMAGES['HAND_SKIN132D'],
            'nightHand': IMAGES['HAND_SKIN132N'],
            'rarity': RARITY['STONE'],
            'author': 'Starve.io',
            'name': 'Mr\x20Snowman'
        }, {
            'id': 0x9f,
            'day': IMAGES['SKIN135D'],
            'night': IMAGES['SKIN135N'],
            'dayHand': IMAGES['HAND_SKIN135D'],
            'nightHand': IMAGES['HAND_SKIN135N'],
            'rarity': RARITY['STONE'],
            'author': 'CrysTal',
            'name': 'Crystal\x20Sky\x20Skin'
        }, {
            'id': 0xa7,
            'day': IMAGES['SKIN143D'],
            'night': IMAGES['SKIN143N'],
            'dayHand': IMAGES['HAND_SKIN143D'],
            'nightHand': IMAGES['HAND_SKIN143N'],
            'rarity': RARITY['STONE'],
            'author': 'Franchestcreator',
            'name': 'Radioactive\x20Starver'
        }, {
            'id': 0xa9,
            'day': IMAGES['SKIN146D'],
            'night': IMAGES['SKIN146N'],
            'dayHand': IMAGES['HAND_SKIN146D'],
            'nightHand': IMAGES['HAND_SKIN146N'],
            'rarity': RARITY['STONE'],
            'author': 'TheScaryBlaze',
            'name': 'Eaten\x20Cookie'
        }, {
            'id': 0xaa,
            'day': IMAGES['SKIN147D'],
            'night': IMAGES['SKIN147N'],
            'dayHand': IMAGES['HAND_SKIN147D'],
            'nightHand': IMAGES['HAND_SKIN147N'],
            'rarity': RARITY['STONE'],
            'author': 'aloner',
            'name': 'Blob\x20Thing'
        }, {
            'id': 0xac,
            'day': IMAGES['SKIN149D'],
            'night': IMAGES['SKIN149N'],
            'dayHand': IMAGES['HAND_SKIN149D'],
            'nightHand': IMAGES['HAND_SKIN149N'],
            'rarity': RARITY['STONE'],
            'author': 'aloner',
            'name': 'Machine\x20Mask'
        }, {
            'id': 0x1d,
            'day': IMAGES['SKIN2D'],
            'night': IMAGES['SKIN2N'],
            'dayHand': IMAGES['HAND_SKIN2D'],
            'nightHand': IMAGES['HAND_SKIN2N'],
            'rarity': RARITY['GOLD'],
            'author': 'Pixelbitie',
            'name': 'Lollipop\x201'
        }, {
            'id': 0x1e,
            'day': IMAGES['SKIN3D'],
            'night': IMAGES['SKIN3N'],
            'dayHand': IMAGES['HAND_SKIN3D'],
            'nightHand': IMAGES['HAND_SKIN3N'],
            'rarity': RARITY['GOLD'],
            'author': 'Starve.io',
            'name': 'Lollipop\x202'
        }, {
            'id': 0x1f,
            'day': IMAGES['SKIN4D'],
            'night': IMAGES['SKIN4N'],
            'dayHand': IMAGES['HAND_SKIN4D'],
            'nightHand': IMAGES['HAND_SKIN4N'],
            'rarity': RARITY['GOLD'],
            'author': 'Starve.io',
            'name': 'Lollipop\x203'
        }, {
            'id': 0x20,
            'day': IMAGES['SKIN5D'],
            'night': IMAGES['SKIN5N'],
            'dayHand': IMAGES['HAND_SKIN5D'],
            'nightHand': IMAGES['HAND_SKIN5N'],
            'rarity': RARITY['GOLD'],
            'author': 'Starve.io',
            'name': 'Lollipop\x204'
        }, {
            'id': 0x21,
            'day': IMAGES['SKIN8D'],
            'night': IMAGES['SKIN8N'],
            'dayHand': IMAGES['HAND_SKIN8D'],
            'nightHand': IMAGES['HAND_SKIN8N'],
            'rarity': RARITY['GOLD'],
            'author': 'Sushui',
            'name': 'Yellow\x20Bird'
        }, {
            'id': 0x22,
            'day': IMAGES['SKIN9D'],
            'night': IMAGES['SKIN9N'],
            'dayHand': IMAGES['HAND_SKIN9D'],
            'nightHand': IMAGES['HAND_SKIN9N'],
            'rarity': RARITY['GOLD'],
            'author': 'Sushui',
            'name': 'Red\x20Bird'
        }, {
            'id': 0x23,
            'day': IMAGES['SKIN10D'],
            'night': IMAGES['SKIN10N'],
            'dayHand': IMAGES['HAND_SKIN10D'],
            'nightHand': IMAGES['HAND_SKIN10N'],
            'rarity': RARITY['GOLD'],
            'author': 'Sushui',
            'name': 'Blue\x20Bird'
        }, {
            'id': 0x25,
            'day': IMAGES['SKIN17D'],
            'night': IMAGES['SKIN17N'],
            'dayHand': IMAGES['HAND_SKIN17D'],
            'nightHand': IMAGES['HAND_SKIN17N'],
            'rarity': RARITY['GOLD'],
            'author': 'Winter',
            'name': 'Owl'
        }, {
            'id': 0x34,
            'day': IMAGES['SKIN27D'],
            'night': IMAGES['SKIN27N'],
            'dayHand': IMAGES['HAND_SKIN27D'],
            'nightHand': IMAGES['HAND_SKIN27N'],
            'rarity': RARITY['GOLD'],
            'author': 'Starve.io',
            'name': 'Nemo'
        }, {
            'id': 0x35,
            'day': IMAGES['SKIN28D'],
            'night': IMAGES['SKIN28N'],
            'dayHand': IMAGES['HAND_SKIN28D'],
            'nightHand': IMAGES['HAND_SKIN28N'],
            'rarity': RARITY['GOLD'],
            'author': 'Starve.io',
            'name': 'Mr.\x20Bread'
        }, {
            'id': 0x4a,
            'day': IMAGES['SKIN49D'],
            'night': IMAGES['SKIN49N'],
            'dayHand': IMAGES['HAND_SKIN49D'],
            'nightHand': IMAGES['HAND_SKIN49N'],
            'rarity': RARITY['GOLD'],
            'author': 'Communist\x20&\x20Taco4Life',
            'name': 'Mr.\x20Bread\x202'
        }, {
            'id': 0x4b,
            'day': IMAGES['SKIN50D'],
            'night': IMAGES['SKIN50N'],
            'dayHand': IMAGES['HAND_SKIN50D'],
            'nightHand': IMAGES['HAND_SKIN50N'],
            'rarity': RARITY['GOLD'],
            'author': 'Communist\x20&\x20Taco4Life',
            'name': 'Mr.\x20Bread\x203'
        }, {
            'id': 0x3c,
            'day': IMAGES['SKIN35D'],
            'night': IMAGES['SKIN35N'],
            'dayHand': IMAGES['HAND_SKIN35D'],
            'nightHand': IMAGES['HAND_SKIN35N'],
            'rarity': RARITY['GOLD'],
            'author': 'Starve.io',
            'name': 'Red\x20Berry'
        }, {
            'id': 0x3d,
            'day': IMAGES['SKIN36D'],
            'night': IMAGES['SKIN36N'],
            'dayHand': IMAGES['HAND_SKIN36D'],
            'nightHand': IMAGES['HAND_SKIN36N'],
            'rarity': RARITY['GOLD'],
            'author': 'Starve.io',
            'name': 'Old\x20Berry'
        }, {
            'id': 0x46,
            'day': IMAGES['SKIN45D'],
            'night': IMAGES['SKIN45N'],
            'dayHand': IMAGES['HAND_SKIN45D'],
            'nightHand': IMAGES['HAND_SKIN45N'],
            'rarity': RARITY['GOLD'],
            'author': 'eogito',
            'name': 'Cake'
        }, {
            'id': 0x47,
            'day': IMAGES['SKIN46D'],
            'night': IMAGES['SKIN46N'],
            'dayHand': IMAGES['HAND_SKIN46D'],
            'nightHand': IMAGES['HAND_SKIN46N'],
            'rarity': RARITY['GOLD'],
            'author': 'eogito',
            'name': 'Christmas\x20Cake'
        }, {
            'id': 0x4d,
            'day': IMAGES['SKIN52D'],
            'night': IMAGES['SKIN52N'],
            'dayHand': IMAGES['HAND_SKIN52D'],
            'nightHand': IMAGES['HAND_SKIN52N'],
            'rarity': RARITY['GOLD'],
            'author': 'Pancakez',
            'name': 'Mr.\x20Pancake'
        }, {
            'id': 0x57,
            'day': IMAGES['SKIN62D'],
            'night': IMAGES['SKIN62N'],
            'dayHand': IMAGES['HAND_SKIN62D'],
            'nightHand': IMAGES['HAND_SKIN62N'],
            'rarity': RARITY['GOLD'],
            'author': 'Taco4Life',
            'name': 'Mr.\x20Taco'
        }, {
            'id': 0x4e,
            'day': IMAGES['SKIN53D'],
            'night': IMAGES['SKIN53N'],
            'dayHand': IMAGES['HAND_SKIN53D'],
            'nightHand': IMAGES['HAND_SKIN53N'],
            'rarity': RARITY['GOLD'],
            'author': 'Taco4Life',
            'name': 'Mr.\x20Bottle'
        }, {
            'id': 0x4f,
            'day': IMAGES['SKIN54D'],
            'night': IMAGES['SKIN54N'],
            'dayHand': IMAGES['HAND_SKIN54D'],
            'nightHand': IMAGES['HAND_SKIN54N'],
            'rarity': RARITY['GOLD'],
            'author': 'Taco4Life',
            'name': 'Mr.\x20Bottle\x202'
        }, {
            'id': 0x61,
            'day': IMAGES['SKIN71D'],
            'night': IMAGES['SKIN71N'],
            'dayHand': IMAGES['HAND_SKIN71D'],
            'nightHand': IMAGES['HAND_SKIN71N'],
            'rarity': RARITY['GOLD'],
            'author': 'eogito',
            'name': 'Pink\x20Rabbit'
        }, {
            'id': 0x66,
            'day': IMAGES['SKIN77D'],
            'night': IMAGES['SKIN77N'],
            'dayHand': IMAGES['HAND_SKIN77D'],
            'nightHand': IMAGES['HAND_SKIN77N'],
            'rarity': RARITY['GOLD'],
            'author': 'pizza\x20wa',
            'name': 'Marshmallow'
        }, {
            'id': 0x6b,
            'day': IMAGES['SKIN82D'],
            'night': IMAGES['SKIN82N'],
            'dayHand': IMAGES['HAND_SKIN82D'],
            'nightHand': IMAGES['HAND_SKIN82N'],
            'rarity': RARITY['GOLD'],
            'author': 'eogito',
            'name': 'Fox'
        }, {
            'id': 0x84,
            'day': IMAGES['SKIN107D'],
            'night': IMAGES['SKIN107N'],
            'dayHand': IMAGES['HAND_SKIN107D'],
            'nightHand': IMAGES['HAND_SKIN107N'],
            'rarity': RARITY['GOLD'],
            'author': 'eogito',
            'name': 'Raccoon'
        }, {
            'id': 0x6f,
            'day': IMAGES['SKIN86D'],
            'night': IMAGES['SKIN86N'],
            'dayHand': IMAGES['HAND_SKIN86D'],
            'nightHand': IMAGES['HAND_SKIN86N'],
            'rarity': RARITY['GOLD'],
            'author': 'pizza\x20wa',
            'name': 'Cloud'
        }, {
            'id': 0x71,
            'day': IMAGES['SKIN88D'],
            'night': IMAGES['SKIN88N'],
            'dayHand': IMAGES['HAND_SKIN88D'],
            'nightHand': IMAGES['HAND_SKIN88N'],
            'rarity': RARITY['GOLD'],
            'author': 'pizza\x20wa',
            'name': 'Moon'
        }, {
            'id': 0x75,
            'day': IMAGES['SKIN92D'],
            'night': IMAGES['SKIN92N'],
            'dayHand': IMAGES['HAND_SKIN92D'],
            'nightHand': IMAGES['HAND_SKIN92N'],
            'rarity': RARITY['GOLD'],
            'author': 'eogito',
            'name': 'Mr.\x20Panda'
        }, {
            'id': 0x76,
            'day': IMAGES['SKIN93D'],
            'night': IMAGES['SKIN93N'],
            'dayHand': IMAGES['HAND_SKIN93D'],
            'nightHand': IMAGES['HAND_SKIN93N'],
            'rarity': RARITY['GOLD'],
            'author': 'eogito',
            'name': 'Mr.\x20Strawberry'
        }, {
            'id': 0x77,
            'day': IMAGES['SKIN94D'],
            'night': IMAGES['SKIN94N'],
            'dayHand': IMAGES['HAND_SKIN94D'],
            'nightHand': IMAGES['HAND_SKIN94N'],
            'rarity': RARITY['GOLD'],
            'author': 'eogito\x20&\x20Sushuui',
            'name': 'Mummy'
        }, {
            'id': 0x7a,
            'day': IMAGES['SKIN97D'],
            'night': IMAGES['SKIN97N'],
            'dayHand': IMAGES['HAND_SKIN97D'],
            'nightHand': IMAGES['HAND_SKIN97N'],
            'rarity': RARITY['GOLD'],
            'author': 'Taco4Life',
            'name': 'Dino'
        }, {
            'id': 0x7f,
            'day': IMAGES['SKIN102D'],
            'night': IMAGES['SKIN102N'],
            'dayHand': IMAGES['HAND_SKIN102D'],
            'nightHand': IMAGES['HAND_SKIN102N'],
            'rarity': RARITY['GOLD'],
            'author': 'MADBalgouthi',
            'name': 'Mr.\x20Koala'
        }, {
            'id': 0xa0,
            'day': IMAGES['SKIN136D'],
            'night': IMAGES['SKIN136N'],
            'dayHand': IMAGES['HAND_SKIN136D'],
            'nightHand': IMAGES['HAND_SKIN136N'],
            'rarity': RARITY['GOLD'],
            'author': 'Starve.io',
            'name': 'Bottle\x20Protection'
        }, {
            'id': 0xa2,
            'day': IMAGES['SKIN138D'],
            'night': IMAGES['SKIN138N'],
            'dayHand': IMAGES['HAND_SKIN138D'],
            'nightHand': IMAGES['HAND_SKIN138N'],
            'rarity': RARITY['GOLD'],
            'author': 'CrysTal',
            'name': 'Leaf\x20Man'
        }, {
            'id': 0xa6,
            'day': IMAGES['SKIN142D'],
            'night': IMAGES['SKIN142N'],
            'dayHand': IMAGES['HAND_SKIN142D'],
            'nightHand': IMAGES['HAND_SKIN142N'],
            'rarity': RARITY['GOLD'],
            'author': 'pizza\x20wa',
            'name': 'Bubble'
        }, {
            'id': 0xae,
            'day': IMAGES['SKIN145D'],
            'night': IMAGES['SKIN145N'],
            'dayHand': IMAGES['HAND_SKIN145D'],
            'nightHand': IMAGES['HAND_SKIN145N'],
            'rarity': RARITY['GOLD'],
            'author': 'upfiz',
            'name': 'Potato'
        }, {
            'id': 0xab,
            'day': IMAGES['SKIN148D'],
            'night': IMAGES['SKIN148N'],
            'dayHand': IMAGES['HAND_SKIN148D'],
            'nightHand': IMAGES['HAND_SKIN148N'],
            'rarity': RARITY['GOLD'],
            'author': 'aloner',
            'name': 'Axolotl'
        }, {
            'id': 0x19,
            'day': IMAGES['SKIN6D'],
            'night': IMAGES['SKIN6N'],
            'dayHand': IMAGES['HAND_SKIN6D'],
            'nightHand': IMAGES['HAND_SKIN0N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'Pixelbitie',
            'name': 'Test\x20Dummy'
        }, {
            'id': 0x29,
            'day': IMAGES['SKIN_STARD'],
            'night': IMAGES['SKIN_STARN'],
            'dayHand': IMAGES['HAND_STARD'],
            'nightHand': IMAGES['HAND_STARN'],
            'rarity': RARITY['DIAMOND'],
            'author': 'pizza\x20wa',
            'name': 'Star-ver'
        }, {
            'id': 0x2b,
            'day': IMAGES['SKIN11D'],
            'night': IMAGES['SKIN11N'],
            'dayHand': IMAGES['HAND_SKIN11D'],
            'nightHand': IMAGES['HAND_SKIN11N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'Communist',
            'name': 'Starver\x20Chest'
        }, {
            'id': 0x58,
            'day': IMAGES['SKIN63D'],
            'night': IMAGES['SKIN63N'],
            'dayHand': IMAGES['HAND_SKIN63D'],
            'nightHand': IMAGES['HAND_SKIN63N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'Communist',
            'name': 'Starver\x20Workbench'
        }, {
            'id': 0x79,
            'day': IMAGES['SKIN96D'],
            'night': IMAGES['SKIN96N'],
            'dayHand': IMAGES['HAND_SKIN96D'],
            'nightHand': IMAGES['HAND_SKIN96N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'MADBalgouthi',
            'name': 'Fish'
        }, {
            'id': 0x27,
            'day': IMAGES['SKIN22D'],
            'night': IMAGES['SKIN22N'],
            'dayHand': IMAGES['HAND_SKIN22D'],
            'nightHand': IMAGES['HAND_SKIN22N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'Negligent4Dia',
            'name': 'Crab'
        }, {
            'id': 0x28,
            'day': IMAGES['SKIN23D'],
            'night': IMAGES['SKIN23N'],
            'dayHand': IMAGES['HAND_SKIN23D'],
            'nightHand': IMAGES['HAND_SKIN23N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'Negligent4Dia',
            'name': 'Piranha'
        }, {
            'id': 0x24,
            'day': IMAGES['SKIN16D'],
            'night': IMAGES['SKIN16N'],
            'dayHand': IMAGES['HAND_SKIN16D'],
            'nightHand': IMAGES['HAND_SKIN16N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'eogito',
            'name': 'Winter\x20Fox'
        }, {
            'id': 0x45,
            'day': IMAGES['SKIN44D'],
            'night': IMAGES['SKIN44N'],
            'dayHand': IMAGES['HAND_SKIN44D'],
            'nightHand': IMAGES['HAND_SKIN44N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'Zed',
            'name': 'Baby\x20Foxy'
        }, {
            'id': 0x33,
            'day': IMAGES['SKIN26D'],
            'night': IMAGES['SKIN26N'],
            'dayHand': IMAGES['HAND_SKIN26D'],
            'nightHand': IMAGES['HAND_SKIN26N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'HOWI',
            'name': 'Winter\x20Bear'
        }, {
            'id': 0x85,
            'day': IMAGES['SKIN108D'],
            'night': IMAGES['SKIN108N'],
            'dayHand': IMAGES['HAND_SKIN108D'],
            'nightHand': IMAGES['HAND_SKIN108N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'eogito',
            'name': 'Hawk'
        }, {
            'id': 0x37,
            'day': IMAGES['SKIN30D'],
            'night': IMAGES['SKIN30N'],
            'dayHand': IMAGES['HAND_SKIN30D'],
            'nightHand': IMAGES['HAND_SKIN30N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'Starve.io',
            'name': 'Nice\x20Little\x20Yuki'
        }, {
            'id': 0x44,
            'day': IMAGES['SKIN43D'],
            'night': IMAGES['SKIN43N'],
            'dayHand': IMAGES['HAND_SKIN43D'],
            'nightHand': IMAGES['HAND_SKIN43N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'Taco4Life',
            'name': 'Baby\x20Yuki'
        }, {
            'id': 0x3e,
            'day': IMAGES['SKIN37D'],
            'night': IMAGES['SKIN37N'],
            'dayHand': IMAGES['HAND_SKIN37D'],
            'nightHand': IMAGES['HAND_SKIN37N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'Starve.io',
            'name': 'Mr.\x20Carrot'
        }, {
            'id': 0x38,
            'day': IMAGES['SKIN31D'],
            'night': IMAGES['SKIN31N'],
            'dayHand': IMAGES['HAND_SKIN31D'],
            'nightHand': IMAGES['HAND_SKIN31N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'Starve.io',
            'name': 'Bat\x20Limax'
        }, {
            'id': 0x48,
            'day': IMAGES['SKIN47D'],
            'night': IMAGES['SKIN47N'],
            'dayHand': IMAGES['HAND_SKIN47D'],
            'nightHand': IMAGES['HAND_SKIN47N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'eogito',
            'name': 'Mr.\x20Crate'
        }, {
            'id': 0x49,
            'day': IMAGES['SKIN48D'],
            'night': IMAGES['SKIN48N'],
            'dayHand': IMAGES['HAND_SKIN48D'],
            'nightHand': IMAGES['HAND_SKIN48N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'Taco4Life\x20&\x20eogito',
            'name': 'Mr.\x20Spider'
        }, {
            'id': 0x5d,
            'day': IMAGES['SKIN68D'],
            'night': IMAGES['SKIN68N'],
            'dayHand': IMAGES['HAND_SKIN68D'],
            'nightHand': IMAGES['HAND_SKIN68N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'Anyone\x20want\x20to\x20play?',
            'name': 'Mr.\x20Spider\x202'
        }, {
            'id': 0x52,
            'day': IMAGES['SKIN57D'],
            'night': IMAGES['SKIN57N'],
            'dayHand': IMAGES['HAND_SKIN57D'],
            'nightHand': IMAGES['HAND_SKIN57N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'Starve.io',
            'name': 'Mr.\x20Blue\x20Starfish'
        }, {
            'id': 0x53,
            'day': IMAGES['SKIN58D'],
            'night': IMAGES['SKIN58N'],
            'dayHand': IMAGES['HAND_SKIN58D'],
            'nightHand': IMAGES['HAND_SKIN58N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'Starve.io',
            'name': 'Mr.\x20Orange\x20Starfish'
        }, {
            'id': 0x54,
            'day': IMAGES['SKIN59D'],
            'night': IMAGES['SKIN59N'],
            'dayHand': IMAGES['HAND_SKIN59D'],
            'nightHand': IMAGES['HAND_SKIN59N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'Starve.io',
            'name': 'Mr.\x20Pink\x20Starfish'
        }, {
            'id': 0x55,
            'day': IMAGES['SKIN60D'],
            'night': IMAGES['SKIN60N'],
            'dayHand': IMAGES['HAND_SKIN60D'],
            'nightHand': IMAGES['HAND_SKIN60N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'Starve.io',
            'name': 'Mr.\x20ShellMauve'
        }, {
            'id': 0x56,
            'day': IMAGES['SKIN61D'],
            'night': IMAGES['SKIN61N'],
            'dayHand': IMAGES['HAND_SKIN61D'],
            'nightHand': IMAGES['HAND_SKIN61N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'Starve.io',
            'name': 'Mr.\x20Shell\x20Bead'
        }, {
            'id': 0x60,
            'day': IMAGES['SKIN72D'],
            'night': IMAGES['SKIN72N'],
            'dayHand': IMAGES['HAND_SKIN72D'],
            'nightHand': IMAGES['HAND_SKIN72N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'Fukss',
            'name': 'Angry\x20Crab'
        }, {
            'id': 0x62,
            'day': IMAGES['SKIN73D'],
            'night': IMAGES['SKIN73N'],
            'dayHand': IMAGES['HAND_SKIN73D'],
            'nightHand': IMAGES['HAND_SKIN73N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'Starve.io',
            'name': 'Penguin'
        }, {
            'id': 0x7e,
            'day': IMAGES['SKIN101D'],
            'night': IMAGES['SKIN101N'],
            'dayHand': IMAGES['HAND_SKIN101D'],
            'nightHand': IMAGES['HAND_SKIN101N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'Anyone\x20want\x20to\x20play?',
            'name': 'Mr.\x20Boar'
        }, {
            'id': 0x91,
            'day': IMAGES['SKIN121D'],
            'night': IMAGES['SKIN121N'],
            'dayHand': IMAGES['HAND_SKIN121D'],
            'nightHand': IMAGES['HAND_SKIN121N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'Starve.io',
            'name': 'I\x20saw\x20you'
        }, {
            'id': 0x92,
            'day': IMAGES['SKIN122D'],
            'night': IMAGES['SKIN122N'],
            'dayHand': IMAGES['HAND_SKIN122D'],
            'nightHand': IMAGES['HAND_SKIN122N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'Starve.io',
            'name': 'It\x20was\x20funny'
        }, {
            'id': 0x93,
            'day': IMAGES['SKIN123D'],
            'night': IMAGES['SKIN123N'],
            'dayHand': IMAGES['HAND_SKIN123D'],
            'nightHand': IMAGES['HAND_SKIN123N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'Starve.io',
            'name': 'You\x20can\x20scream'
        }, {
            'id': 0x9e,
            'day': IMAGES['SKIN134D'],
            'night': IMAGES['SKIN134N'],
            'dayHand': IMAGES['HAND_SKIN134D'],
            'nightHand': IMAGES['HAND_SKIN134N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'eogito',
            'name': 'Mr.\x20Book'
        }, {
            'id': 0xa3,
            'day': IMAGES['SKIN139D'],
            'night': IMAGES['SKIN139N'],
            'dayHand': IMAGES['HAND_SKIN139D'],
            'nightHand': IMAGES['HAND_SKIN139N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'Anyone\x20want\x20to\x20play?',
            'name': 'Mr.\x20Mammoth'
        }, {
            'id': 0xa4,
            'day': IMAGES['SKIN140D'],
            'night': IMAGES['SKIN140N'],
            'dayHand': IMAGES['HAND_SKIN140D'],
            'nightHand': IMAGES['HAND_SKIN140N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'SoOw',
            'name': 'Mr.\x20Mammoth\x202'
        }, {
            'id': 0xa1,
            'day': IMAGES['SKIN137D'],
            'night': IMAGES['SKIN137N'],
            'dayHand': IMAGES['HAND_SKIN137D'],
            'nightHand': IMAGES['HAND_SKIN137N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'eogito',
            'name': 'Nightmare'
        }, {
            'id': 0xa8,
            'day': IMAGES['SKIN144D'],
            'night': IMAGES['SKIN144N'],
            'dayHand': IMAGES['HAND_SKIN144D'],
            'nightHand': IMAGES['HAND_SKIN144N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'pizza\x20wa',
            'name': 'Shiny\x20Crystal'
        }, {
            'id': 0xad,
            'day': IMAGES['SKIN150D'],
            'night': IMAGES['SKIN150N'],
            'dayHand': IMAGES['HAND_SKIN150D'],
            'nightHand': IMAGES['HAND_SKIN150N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'pizza\x20wa',
            'name': 'Water\x20skin'
        }, {
            'id': 0x2a,
            'day': IMAGES['SKIN14D'],
            'night': IMAGES['SKIN14N'],
            'dayHand': IMAGES['HAND_SKIN14D'],
            'nightHand': IMAGES['HAND_SKIN14N'],
            'rarity': RARITY['AMETHYST'],
            'author': 'Winter',
            'name': 'Will-O\x27-The-Wisp'
        }, {
            'id': 0x5b,
            'day': IMAGES['SKIN66D'],
            'night': IMAGES['SKIN66N'],
            'dayHand': IMAGES['HAND_SKIN66D'],
            'nightHand': IMAGES['HAND_SKIN66N'],
            'rarity': RARITY['AMETHYST'],
            'author': 'ExpertyAnimations',
            'name': 'Flame'
        }, {
            'id': 0x1a,
            'day': IMAGES['SKIN15D'],
            'night': IMAGES['SKIN15N'],
            'dayHand': IMAGES['HAND_SKIN15D'],
            'nightHand': IMAGES['HAND_SKIN15N'],
            'rarity': RARITY['AMETHYST'],
            'author': 'Starve.io',
            'name': 'Be\x20a\x20Tree'
        }, {
            'id': 0x26,
            'day': IMAGES['SKIN18D'],
            'night': IMAGES['SKIN18N'],
            'dayHand': IMAGES['HAND_SKIN18D'],
            'nightHand': IMAGES['HAND_SKIN18N'],
            'rarity': RARITY['AMETHYST'],
            'author': 'Winter',
            'name': 'Toxic\x20Mutant'
        }, {
            'id': 0x32,
            'day': IMAGES['SKIN25D'],
            'night': IMAGES['SKIN25N'],
            'dayHand': IMAGES['HAND_SKIN25D'],
            'nightHand': IMAGES['HAND_SKIN25N'],
            'rarity': RARITY['AMETHYST'],
            'author': 'Communist',
            'name': 'Mr.\x20Tomato'
        }, {
            'id': 0x36,
            'day': IMAGES['SKIN29D'],
            'night': IMAGES['SKIN29N'],
            'dayHand': IMAGES['HAND_SKIN29D'],
            'nightHand': IMAGES['HAND_SKIN29N'],
            'rarity': RARITY['AMETHYST'],
            'author': 'Starve.io',
            'name': 'Mr.\x20Mauve,\x20the\x20Lapa'
        }, {
            'id': 0x39,
            'day': IMAGES['SKIN32D'],
            'night': IMAGES['SKIN32N'],
            'dayHand': IMAGES['HAND_SKIN32D'],
            'nightHand': IMAGES['HAND_SKIN32N'],
            'rarity': RARITY['AMETHYST'],
            'author': 'Starve.io',
            'name': 'Golden\x20Fish'
        }, {
            'id': 0x40,
            'day': IMAGES['SKIN39D'],
            'night': IMAGES['SKIN39N'],
            'dayHand': IMAGES['HAND_SKIN39D'],
            'nightHand': IMAGES['HAND_SKIN39N'],
            'rarity': RARITY['AMETHYST'],
            'author': 'Starve.io',
            'name': 'LapaMauve'
        }, {
            'id': 0x41,
            'day': IMAGES['SKIN40D'],
            'night': IMAGES['SKIN40N'],
            'dayHand': IMAGES['HAND_SKIN40D'],
            'nightHand': IMAGES['HAND_SKIN40N'],
            'rarity': RARITY['AMETHYST'],
            'author': 'Starve.io',
            'name': 'LapaMauve\x20'
        }, {
            'id': 0x5c,
            'day': IMAGES['SKIN67D'],
            'night': IMAGES['SKIN67N'],
            'dayHand': IMAGES['HAND_SKIN67D'],
            'nightHand': IMAGES['HAND_SKIN67N'],
            'rarity': RARITY['AMETHYST'],
            'author': 'Starve.io',
            'name': 'Mr.\x20Burger'
        }, {
            'id': 0x42,
            'day': IMAGES['SKIN41D'],
            'night': IMAGES['SKIN41N'],
            'dayHand': IMAGES['HAND_SKIN41D'],
            'nightHand': IMAGES['HAND_SKIN41N'],
            'rarity': RARITY['AMETHYST'],
            'author': 'pizza\x20wa',
            'name': 'Tropical\x20Starver'
        }, {
            'id': 0x50,
            'day': IMAGES['SKIN55D'],
            'night': IMAGES['SKIN55N'],
            'dayHand': IMAGES['HAND_SKIN55D'],
            'nightHand': IMAGES['HAND_SKIN55N'],
            'rarity': RARITY['AMETHYST'],
            'author': 'Starve.io',
            'name': 'Mr.\x20ShellPink'
        }, {
            'id': 0x51,
            'day': IMAGES['SKIN56D'],
            'night': IMAGES['SKIN56N'],
            'dayHand': IMAGES['HAND_SKIN56D'],
            'nightHand': IMAGES['HAND_SKIN56N'],
            'rarity': RARITY['AMETHYST'],
            'author': 'Starve.io',
            'name': 'Mr.\x20OranShell'
        }, {
            'id': 0x63,
            'day': IMAGES['SKIN74D'],
            'night': IMAGES['SKIN74N'],
            'dayHand': IMAGES['HAND_SKIN74D'],
            'nightHand': IMAGES['HAND_SKIN74N'],
            'rarity': RARITY['AMETHYST'],
            'author': 'eogito',
            'name': 'Pepe'
        }, {
            'id': 0x64,
            'day': IMAGES['SKIN75D'],
            'night': IMAGES['SKIN75N'],
            'dayHand': IMAGES['HAND_SKIN75D'],
            'nightHand': IMAGES['HAND_SKIN75N'],
            'rarity': RARITY['AMETHYST'],
            'author': 'fatant',
            'name': 'Mr.\x20Ant'
        }, {
            'id': 0x73,
            'day': IMAGES['SKIN90D'],
            'night': IMAGES['SKIN90N'],
            'dayHand': IMAGES['HAND_SKIN90D'],
            'nightHand': IMAGES['HAND_SKIN90N'],
            'rarity': RARITY['AMETHYST'],
            'author': 'MADBalgouthi',
            'name': 'Mr.\x20Watermelon'
        }, {
            'id': 0x65,
            'day': IMAGES['SKIN76D'],
            'night': IMAGES['SKIN76N'],
            'dayHand': IMAGES['HAND_SKIN76D'],
            'nightHand': IMAGES['HAND_SKIN76N'],
            'rarity': RARITY['AMETHYST'],
            'author': 'Taco4Life',
            'name': 'Mr.\x20Thornbush'
        }, {
            'id': 0x83,
            'day': IMAGES['SKIN106D'],
            'night': IMAGES['SKIN106N'],
            'dayHand': IMAGES['HAND_SKIN106D'],
            'nightHand': IMAGES['HAND_SKIN106N'],
            'rarity': RARITY['AMETHYST'],
            'author': 'Taco4Life',
            'name': 'Cthulhu'
        }, {
            'id': 0x8f,
            'day': IMAGES['SKIN119D'],
            'night': IMAGES['SKIN119N'],
            'dayHand': IMAGES['HAND_SKIN119D'],
            'nightHand': IMAGES['HAND_SKIN119N'],
            'rarity': RARITY['AMETHYST'],
            'author': 'eogito',
            'name': 'Mr.\x20Cactus'
        }, {
            'id': 0x90,
            'day': IMAGES['SKIN120D'],
            'night': IMAGES['SKIN120N'],
            'dayHand': IMAGES['HAND_SKIN120D'],
            'nightHand': IMAGES['HAND_SKIN120N'],
            'rarity': RARITY['AMETHYST'],
            'author': 'Starve.io',
            'name': 'Momo'
        }, {
            'id': 0x5f,
            'day': IMAGES['SKIN70D'],
            'night': IMAGES['SKIN70N'],
            'dayHand': IMAGES['HAND_SKIN70D'],
            'nightHand': IMAGES['HAND_SKIN70N'],
            'rarity': RARITY['REIDITE'],
            'author': 'Taco4Life',
            'name': 'Mr.\x20Garlic'
        }, {
            'id': 0x4c,
            'day': IMAGES['SKIN51D'],
            'night': IMAGES['SKIN51N'],
            'dayHand': IMAGES['HAND_SKIN51D'],
            'nightHand': IMAGES['HAND_SKIN51N'],
            'rarity': RARITY['REIDITE'],
            'author': 'Winter',
            'name': 'Robot\x20Dragon'
        }, {
            'id': 0x2c,
            'day': IMAGES['SKIN1D'],
            'night': IMAGES['SKIN1N'],
            'dayHand': IMAGES['HAND_SKIN1D'],
            'nightHand': IMAGES['HAND_SKIN1N'],
            'rarity': RARITY['REIDITE'],
            'author': 'Winter',
            'name': 'Lava\x20Dragon\x20Version\x201'
        }, {
            'id': 0x5a,
            'day': IMAGES['SKIN65D'],
            'night': IMAGES['SKIN65N'],
            'dayHand': IMAGES['HAND_SKIN65D'],
            'nightHand': IMAGES['HAND_SKIN65N'],
            'rarity': RARITY['REIDITE'],
            'author': 'ExpertyAnimations',
            'name': 'Lava\x20Dragon\x20Version\x202'
        }, {
            'id': 0x7c,
            'day': IMAGES['SKIN99D'],
            'night': IMAGES['SKIN99N'],
            'dayHand': IMAGES['HAND_SKIN99D'],
            'nightHand': IMAGES['HAND_SKIN99N'],
            'rarity': RARITY['REIDITE'],
            'author': 'eogito',
            'name': 'Lava\x20Dragon\x20Version\x203'
        }, {
            'id': 0x2d,
            'day': IMAGES['SKIN12D'],
            'night': IMAGES['SKIN12N'],
            'dayHand': IMAGES['HAND_SKIN12D'],
            'nightHand': IMAGES['HAND_SKIN12N'],
            'rarity': RARITY['REIDITE'],
            'author': 'Sushui',
            'name': 'Ice\x20Dragon\x20Version\x201'
        }, {
            'id': 0x2e,
            'day': IMAGES['SKIN13D'],
            'night': IMAGES['SKIN13N'],
            'dayHand': IMAGES['HAND_SKIN13D'],
            'nightHand': IMAGES['HAND_SKIN13N'],
            'rarity': RARITY['REIDITE'],
            'author': 'Winter',
            'name': 'Ice\x20Dragon\x20Version\x202'
        }, {
            'id': 0x6c,
            'day': IMAGES['SKIN83D'],
            'night': IMAGES['SKIN83N'],
            'dayHand': IMAGES['HAND_SKIN83D'],
            'nightHand': IMAGES['HAND_SKIN83N'],
            'rarity': RARITY['REIDITE'],
            'author': 'eogito',
            'name': 'Ice\x20Dragon\x20Version\x203'
        }, {
            'id': 0x7b,
            'day': IMAGES['SKIN98D'],
            'night': IMAGES['SKIN98N'],
            'dayHand': IMAGES['HAND_SKIN98D'],
            'nightHand': IMAGES['HAND_SKIN98N'],
            'rarity': RARITY['REIDITE'],
            'author': 'eogito',
            'name': 'Baby\x20Dragon\x20Version\x201'
        }, {
            'id': 0x80,
            'day': IMAGES['SKIN103D'],
            'night': IMAGES['SKIN103N'],
            'dayHand': IMAGES['HAND_SKIN103D'],
            'nightHand': IMAGES['HAND_SKIN103N'],
            'rarity': RARITY['REIDITE'],
            'author': 'MADBalgouthi',
            'name': 'Baby\x20Dragon\x20Version\x202'
        }, {
            'id': 0x7d,
            'day': IMAGES['SKIN100D'],
            'night': IMAGES['SKIN100N'],
            'dayHand': IMAGES['HAND_SKIN100D'],
            'nightHand': IMAGES['HAND_SKIN100N'],
            'rarity': RARITY['REIDITE'],
            'author': 'eogito',
            'name': 'Baby\x20Lava'
        }, {
            'id': 0x2f,
            'day': IMAGES['SKIN21D'],
            'night': IMAGES['SKIN21N'],
            'dayHand': IMAGES['HAND_SKIN21D'],
            'nightHand': IMAGES['HAND_SKIN21N'],
            'rarity': RARITY['REIDITE'],
            'author': 'Taco4Life',
            'name': 'Kraken'
        }, {
            'id': 0x81,
            'day': IMAGES['SKIN104D'],
            'night': IMAGES['SKIN104N'],
            'dayHand': IMAGES['HAND_SKIN104D'],
            'nightHand': IMAGES['HAND_SKIN104N'],
            'rarity': RARITY['REIDITE'],
            'author': 'Taco4Life',
            'name': 'Sandworm'
        }, {
            'id': 0x3f,
            'day': IMAGES['SKIN38D'],
            'night': IMAGES['SKIN38N'],
            'dayHand': IMAGES['HAND_SKIN38D'],
            'nightHand': IMAGES['HAND_SKIN38N'],
            'rarity': RARITY['REIDITE'],
            'author': 'Starve.io',
            'name': 'Mr.\x20Golden\x20Bread'
        }, {
            'id': 0x43,
            'day': IMAGES['SKIN42D'],
            'night': IMAGES['SKIN42N'],
            'dayHand': IMAGES['HAND_SKIN42D'],
            'nightHand': IMAGES['HAND_SKIN42N'],
            'rarity': RARITY['REIDITE'],
            'author': 'ForgottenHeroe',
            'name': 'Starver\x20Ores'
        }, {
            'id': 0x82,
            'day': IMAGES['SKIN105D'],
            'night': IMAGES['SKIN105N'],
            'dayHand': IMAGES['HAND_SKIN105D'],
            'nightHand': IMAGES['HAND_SKIN105N'],
            'rarity': RARITY['REIDITE'],
            'author': 'Taco4Life',
            'name': 'Poo'
        }, {
            'id': 0x59,
            'day': IMAGES['SKIN64D'],
            'night': IMAGES['SKIN64N'],
            'dayHand': IMAGES['HAND_SKIN64D'],
            'nightHand': IMAGES['HAND_SKIN64N'],
            'rarity': RARITY['REIDITE'],
            'author': 'Poinet',
            'name': 'Volcano\x20Starver'
        }, {
            'id': 0x70,
            'day': IMAGES['SKIN87D'],
            'night': IMAGES['SKIN87N'],
            'dayHand': IMAGES['HAND_SKIN87D'],
            'nightHand': IMAGES['HAND_SKIN87N'],
            'rarity': RARITY['REIDITE'],
            'author': 'eogito',
            'name': 'Lava\x20Starver'
        }, {
            'id': 0x30,
            'day': IMAGES['SKIN_ROBOTD'],
            'night': IMAGES['SKIN_ROBOTN'],
            'dayHand': IMAGES['HAND_ROBOTD'],
            'nightHand': IMAGES['HAND_ROBOTN'],
            'rarity': RARITY['SPECIAL'],
            'author': 'eogito',
            'name': 'Robot'
        }, {
            'id': 0x6e,
            'day': IMAGES['SKIN85D'],
            'night': IMAGES['SKIN85N'],
            'dayHand': IMAGES['HAND_SKIN85D'],
            'nightHand': IMAGES['HAND_SKIN85N'],
            'rarity': RARITY['SPECIAL'],
            'author': 'pizza\x20wa',
            'name': 'Blue\x20Butterfly'
        }, {
            'id': 0x9d,
            'day': IMAGES['SKIN133D'],
            'night': IMAGES['SKIN133N'],
            'dayHand': IMAGES['HAND_SKIN133D'],
            'nightHand': IMAGES['HAND_SKIN133N'],
            'rarity': RARITY['SPECIAL'],
            'author': 'eogito',
            'name': 'Yrifox'
        }, {
            'id': 0xa5,
            'day': IMAGES['SKIN141D'],
            'night': IMAGES['SKIN141N'],
            'dayHand': IMAGES['HAND_SKIN141D'],
            'nightHand': IMAGES['HAND_SKIN141N'],
            'rarity': RARITY['SPECIAL'],
            'author': 'OmarJr13',
            'name': 'Blob\x20Skin'
        }],
        'BAG': [{
            'id': 0x0,
            'day': IMAGES['BAGD'],
            'night': IMAGES['BAGN'],
            'rarity': RARITY['FREE'],
            'author': 'Starve.io',
            'name': 'Bag\x201'
        }, {
            'id': 0x1,
            'day': IMAGES['BAG0D'],
            'night': IMAGES['BAG0N'],
            'rarity': RARITY['FREE'],
            'author': 'Starve.io',
            'name': 'Old\x20Bag'
        }, {
            'id': 0x2,
            'day': IMAGES['BAG4D'],
            'night': IMAGES['BAG4N'],
            'rarity': RARITY['WOOD'],
            'author': 'Starve.io',
            'name': 'Bag\x202'
        }, {
            'id': 0x3,
            'day': IMAGES['BAG5D'],
            'night': IMAGES['BAG5N'],
            'rarity': RARITY['WOOD'],
            'author': 'Starve.io',
            'name': 'Bag\x203'
        }, {
            'id': 0x4,
            'day': IMAGES['BAG6D'],
            'night': IMAGES['BAG6N'],
            'rarity': RARITY['WOOD'],
            'author': 'Starve.io',
            'name': 'Bag\x204'
        }, {
            'id': 0x5,
            'day': IMAGES['BAG7D'],
            'night': IMAGES['BAG7N'],
            'rarity': RARITY['WOOD'],
            'author': 'Starve.io',
            'name': 'Bag\x205'
        }, {
            'id': 0xb,
            'day': IMAGES['BAG23D'],
            'night': IMAGES['BAG23N'],
            'rarity': RARITY['WOOD'],
            'author': 'eogito',
            'name': 'Wood\x20Pickaxe\x20Bag'
        }, {
            'id': 0x13,
            'day': IMAGES['BAG16D'],
            'night': IMAGES['BAG16N'],
            'rarity': RARITY['WOOD'],
            'author': 'Starve.io\x20',
            'name': 'Wood\x20Carrier'
        }, {
            'id': 0x25,
            'day': IMAGES['BAG36D'],
            'night': IMAGES['BAG36N'],
            'rarity': RARITY['WOOD'],
            'author': 'eogito',
            'name': 'Bag\x206'
        }, {
            'id': 0x27,
            'day': IMAGES['BAG38D'],
            'night': IMAGES['BAG38N'],
            'rarity': RARITY['WOOD'],
            'author': 'eogito',
            'name': 'Bag\x20with\x20Wooden\x20Swords'
        }, {
            'id': 0x2c,
            'day': IMAGES['BAG43D'],
            'night': IMAGES['BAG43N'],
            'rarity': RARITY['WOOD'],
            'author': 'Communist',
            'name': 'Big\x20Bag'
        }, {
            'id': 0x7,
            'day': IMAGES['BAG14D'],
            'night': IMAGES['BAG14N'],
            'rarity': RARITY['STONE'],
            'author': 'Communist',
            'name': 'Bag\x206'
        }, {
            'id': 0x8,
            'day': IMAGES['BAG_EASTERD'],
            'night': IMAGES['BAG_EASTERN'],
            'rarity': RARITY['STONE'],
            'author': 'Starve.io',
            'name': 'Easter\x20Bag'
        }, {
            'id': 0x9,
            'day': IMAGES['BAG_STARD'],
            'night': IMAGES['BAG_STARN'],
            'rarity': RARITY['STONE'],
            'author': 'pizza\x20wa',
            'name': 'Star\x20Bag'
        }, {
            'id': 0xa,
            'day': IMAGES['BAG9D'],
            'night': IMAGES['BAG9N'],
            'rarity': RARITY['STONE'],
            'author': 'eogito',
            'name': 'Winter\x20Bag'
        }, {
            'id': 0x14,
            'day': IMAGES['BAG17D'],
            'night': IMAGES['BAG17N'],
            'rarity': RARITY['STONE'],
            'author': 'Starve.io\x20',
            'name': 'Stone\x20Carrier'
        }, {
            'id': 0x18,
            'day': IMAGES['BAG24D'],
            'night': IMAGES['BAG24N'],
            'rarity': RARITY['STONE'],
            'author': 'eogito',
            'name': 'Stone\x20Pickaxe\x20Bag'
        }, {
            'id': 0x6,
            'day': IMAGES['BAG13D'],
            'night': IMAGES['BAG13N'],
            'rarity': RARITY['STONE'],
            'author': 'Communist',
            'name': 'Bag\x20Camouflage'
        }, {
            'id': 0x26,
            'day': IMAGES['BAG37D'],
            'night': IMAGES['BAG37N'],
            'rarity': RARITY['STONE'],
            'author': 'eogito',
            'name': 'Bag\x20with\x20Stone\x20Swords'
        }, {
            'id': 0x36,
            'day': IMAGES['BAG53D'],
            'night': IMAGES['BAG53N'],
            'rarity': RARITY['STONE'],
            'author': 'eogito',
            'name': 'Cow\x20Bag'
        }, {
            'id': 0x3b,
            'day': IMAGES['BAG58D'],
            'night': IMAGES['BAG58N'],
            'rarity': RARITY['STONE'],
            'author': 'CrysTal',
            'name': 'Starver\x20Bag'
        }, {
            'id': 0x3e,
            'day': IMAGES['BAG61D'],
            'night': IMAGES['BAG61N'],
            'rarity': RARITY['STONE'],
            'author': 'CrysTal',
            'name': 'Crystal\x20Sky\x20Bag'
        }, {
            'id': 0xd,
            'day': IMAGES['BAG10D'],
            'night': IMAGES['BAG10N'],
            'rarity': RARITY['GOLD'],
            'author': 'pizza\x20wa',
            'name': 'Honey\x20Pot'
        }, {
            'id': 0x15,
            'day': IMAGES['BAG18D'],
            'night': IMAGES['BAG18N'],
            'rarity': RARITY['GOLD'],
            'author': 'Starve.io\x20',
            'name': 'Gold\x20Carrier'
        }, {
            'id': 0x1e,
            'day': IMAGES['BAG25D'],
            'night': IMAGES['BAG25N'],
            'rarity': RARITY['GOLD'],
            'author': 'eogito',
            'name': 'Gold\x20Pickaxe\x20Bag'
        }, {
            'id': 0x1d,
            'day': IMAGES['BAG31D'],
            'night': IMAGES['BAG31N'],
            'rarity': RARITY['GOLD'],
            'author': 'Ariel',
            'name': 'Mr\x20and\x20Mrs\x20Bakers'
        }, {
            'id': 0x29,
            'day': IMAGES['BAG40D'],
            'night': IMAGES['BAG40N'],
            'rarity': RARITY['GOLD'],
            'author': 'eogito',
            'name': 'Bag\x20with\x20Golden\x20Swords'
        }, {
            'id': 0x2f,
            'day': IMAGES['BAG46D'],
            'night': IMAGES['BAG46N'],
            'rarity': RARITY['GOLD'],
            'author': 'eogito',
            'name': 'Explorer\x20Bag'
        }, {
            'id': 0x33,
            'day': IMAGES['BAG50D'],
            'night': IMAGES['BAG50N'],
            'rarity': RARITY['GOLD'],
            'author': 'pizza\x20wa',
            'name': 'Bamboo\x20Bag'
        }, {
            'id': 0x35,
            'day': IMAGES['BAG52D'],
            'night': IMAGES['BAG52N'],
            'rarity': RARITY['GOLD'],
            'author': 'eogito',
            'name': 'Mummy\x20Bag'
        }, {
            'id': 0x3a,
            'day': IMAGES['BAG57D'],
            'night': IMAGES['BAG57N'],
            'rarity': RARITY['GOLD'],
            'author': 'MADBalgouthi',
            'name': 'Watermelon\x20Bag'
        }, {
            'id': 0x3c,
            'day': IMAGES['BAG59D'],
            'night': IMAGES['BAG60N'],
            'rarity': RARITY['GOLD'],
            'author': 'Taco4Life',
            'name': 'Garlic\x20Bag'
        }, {
            'id': 0x3d,
            'day': IMAGES['BAG60D'],
            'night': IMAGES['BAG59N'],
            'rarity': RARITY['GOLD'],
            'author': 'Taco4Life',
            'name': 'Pumpkin\x20Bag'
        }, {
            'id': 0x40,
            'day': IMAGES['BAG63D'],
            'night': IMAGES['BAG63N'],
            'rarity': RARITY['GOLD'],
            'author': 'upfiz',
            'name': 'Oil\x20Barel\x20bag'
        }, {
            'id': 0x43,
            'day': IMAGES['BAG68D'],
            'night': IMAGES['BAG68N'],
            'rarity': RARITY['GOLD'],
            'author': 'pizza\x20wa',
            'name': 'Tree\x20Bag'
        }, {
            'id': 0xe,
            'day': IMAGES['BAG1D'],
            'night': IMAGES['BAG1N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'Starve.io',
            'name': 'a\x20Rabbit\x20in\x20my\x20Bag'
        }, {
            'id': 0xf,
            'day': IMAGES['BAG2D'],
            'night': IMAGES['BAG2N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'Starve.io',
            'name': 'Bird\x27s\x20nest'
        }, {
            'id': 0x10,
            'day': IMAGES['BAG3D'],
            'night': IMAGES['BAG3N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'Starve.io',
            'name': 'a\x20Fish\x20on\x20your\x20Back'
        }, {
            'id': 0x11,
            'day': IMAGES['BAG8D'],
            'night': IMAGES['BAG8N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'Starve.io',
            'name': 'a\x20Squirrel\x20in\x20my\x20Bag'
        }, {
            'id': 0x16,
            'day': IMAGES['BAG19D'],
            'night': IMAGES['BAG19N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'Starve.io\x20',
            'name': 'Diamond\x20Carrier'
        }, {
            'id': 0xc,
            'day': IMAGES['BAG22D'],
            'night': IMAGES['BAG22N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'eogito',
            'name': 'Resources\x20Bag'
        }, {
            'id': 0x20,
            'day': IMAGES['BAG26D'],
            'night': IMAGES['BAG26N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'eogito',
            'name': 'Diamond\x20Pickaxe\x20Bag'
        }, {
            'id': 0x28,
            'day': IMAGES['BAG39D'],
            'night': IMAGES['BAG39N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'eogito',
            'name': 'Bag\x20with\x20Diamond\x20Swords'
        }, {
            'id': 0x2d,
            'day': IMAGES['BAG44D'],
            'night': IMAGES['BAG44N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'eogito',
            'name': 'My\x20Cake\x20Bag'
        }, {
            'id': 0x2e,
            'day': IMAGES['BAG45D'],
            'night': IMAGES['BAG45N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'eogito',
            'name': 'My\x20Christmas\x20Cake\x20Bag'
        }, {
            'id': 0x34,
            'day': IMAGES['BAG51D'],
            'night': IMAGES['BAG51N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'MADBalgouthi',
            'name': 'Fish\x20Bag'
        }, {
            'id': 0x41,
            'day': IMAGES['BAG64D'],
            'night': IMAGES['BAG64N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'pizza\x20wa',
            'name': 'Cloud\x20Bag'
        }, {
            'id': 0x44,
            'day': IMAGES['BAG66D'],
            'night': IMAGES['BAG66N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'pizza\x20wa',
            'name': 'Bee\x20Bag'
        }, {
            'id': 0x30,
            'day': IMAGES['BAG47D'],
            'night': IMAGES['BAG47N'],
            'rarity': RARITY['AMETHYST'],
            'author': 'fatant',
            'name': 'Natural\x20Bag'
        }, {
            'id': 0x17,
            'day': IMAGES['BAG20D'],
            'night': IMAGES['BAG20N'],
            'rarity': RARITY['AMETHYST'],
            'author': 'Starve.io\x20',
            'name': 'Amethyst\x20Carrier'
        }, {
            'id': 0x19,
            'day': IMAGES['BAG27D'],
            'night': IMAGES['BAG27N'],
            'rarity': RARITY['AMETHYST'],
            'author': 'eogito',
            'name': 'Amethyst\x20Pickaxe\x20Bag'
        }, {
            'id': 0x1c,
            'day': IMAGES['BAG30D'],
            'night': IMAGES['BAG30N'],
            'rarity': RARITY['AMETHYST'],
            'author': 'Starve.io',
            'name': 'Your\x20Baby'
        }, {
            'id': 0x21,
            'day': IMAGES['BAG32D'],
            'night': IMAGES['BAG32N'],
            'rarity': RARITY['AMETHYST'],
            'author': 'pizza\x20wa',
            'name': 'Tropical\x20Bag'
        }, {
            'id': 0x2b,
            'day': IMAGES['BAG42D'],
            'night': IMAGES['BAG42N'],
            'rarity': RARITY['AMETHYST'],
            'author': 'eogito',
            'name': 'Bag\x20with\x20Amethyst\x20Swords'
        }, {
            'id': 0x23,
            'day': IMAGES['BAG34D'],
            'night': IMAGES['BAG34N'],
            'rarity': RARITY['AMETHYST'],
            'author': 'eogito',
            'name': 'Ice\x20Bag'
        }, {
            'id': 0x32,
            'day': IMAGES['BAG49D'],
            'night': IMAGES['BAG49N'],
            'rarity': RARITY['AMETHYST'],
            'author': 'Taco4Life',
            'name': 'Thornbush\x20Bag'
        }, {
            'id': 0x38,
            'day': IMAGES['BAG55D'],
            'night': IMAGES['BAG55N'],
            'rarity': RARITY['AMETHYST'],
            'author': 'eogito',
            'name': 'Autumn\x20Bag'
        }, {
            'id': 0x39,
            'day': IMAGES['BAG56D'],
            'night': IMAGES['BAG56N'],
            'rarity': RARITY['AMETHYST'],
            'author': 'Taco4Life',
            'name': 'Dino\x20Egg\x20Bag'
        }, {
            'id': 0x42,
            'day': IMAGES['BAG65D'],
            'night': IMAGES['BAG65N'],
            'rarity': RARITY['AMETHYST'],
            'author': 'pizza\x20wa',
            'name': 'Magic\x20Cloud\x20Bag'
        }, {
            'id': 0x45,
            'day': IMAGES['BAG67D'],
            'night': IMAGES['BAG67N'],
            'rarity': RARITY['AMETHYST'],
            'author': 'pizza\x20wa',
            'name': 'Chest\x20Bag'
        }, {
            'id': 0x1f,
            'day': IMAGES['BAG21D'],
            'night': IMAGES['BAG21N'],
            'rarity': RARITY['REIDITE'],
            'author': 'Starve.io\x20',
            'name': 'Reidite\x20Carrier'
        }, {
            'id': 0x12,
            'day': IMAGES['BAG11D'],
            'night': IMAGES['BAG11N'],
            'rarity': RARITY['REIDITE'],
            'author': 'Winter',
            'name': 'Lava\x20Bag'
        }, {
            'id': 0x31,
            'day': IMAGES['BAG48D'],
            'night': IMAGES['BAG48N'],
            'rarity': RARITY['REIDITE'],
            'author': 'eogito',
            'name': 'Lava\x20Bag\x202'
        }, {
            'id': 0x24,
            'day': IMAGES['BAG35D'],
            'night': IMAGES['BAG35N'],
            'rarity': RARITY['REIDITE'],
            'author': 'eogito',
            'name': 'Dragon\x20Bag'
        }, {
            'id': 0x37,
            'day': IMAGES['BAG54D'],
            'night': IMAGES['BAG54N'],
            'rarity': RARITY['REIDITE'],
            'author': 'eogito',
            'name': 'Winter\x20Ice\x20Bag'
        }, {
            'id': 0x1a,
            'day': IMAGES['BAG28D'],
            'night': IMAGES['BAG28N'],
            'rarity': RARITY['REIDITE'],
            'author': 'eogito',
            'name': 'Reidite\x20Pickaxe\x20Bag'
        }, {
            'id': 0x1b,
            'day': IMAGES['BAG29D'],
            'night': IMAGES['BAG29N'],
            'rarity': RARITY['REIDITE'],
            'author': 'Starve.io',
            'name': 'Octopus\x20Bowl'
        }, {
            'id': 0x22,
            'day': IMAGES['BAG33D'],
            'night': IMAGES['BAG33N'],
            'rarity': RARITY['REIDITE'],
            'author': 'Taco4Life',
            'name': 'Cave\x20Bag'
        }, {
            'id': 0x2a,
            'day': IMAGES['BAG41D'],
            'night': IMAGES['BAG41N'],
            'rarity': RARITY['REIDITE'],
            'author': 'eogito',
            'name': 'Bag\x20with\x20Reidite\x20Swords'
        }, {
            'id': 0x3f,
            'day': IMAGES['BAG62D'],
            'night': IMAGES['BAG62N'],
            'rarity': RARITY['REIDITE'],
            'author': 'eogito',
            'name': 'Engineer\x20Bag'
        }],
        'CRATE': [{
            'id': 0x0,
            'day': IMAGES['CRATE7D'],
            'night': IMAGES['CRATE7N'],
            'rarity': RARITY['FREE'],
            'author': 'eogito',
            'name': 'Wooden\x20Dead\x20Box'
        }, {
            'id': 0x1,
            'day': IMAGES['CRATE6D'],
            'night': IMAGES['CRATE6N'],
            'rarity': RARITY['FREE'],
            'author': 'eogito',
            'name': 'Hidden\x20item'
        }, {
            'id': 0x2,
            'day': IMAGES['CRATE1D'],
            'night': IMAGES['CRATE1N'],
            'rarity': RARITY['WOOD'],
            'author': 'eogito',
            'name': 'Wooden\x20Box\x201'
        }, {
            'id': 0x3,
            'day': IMAGES['CRATE2D'],
            'night': IMAGES['CRATE2N'],
            'rarity': RARITY['WOOD'],
            'author': 'eogito',
            'name': 'Wooden\x20Box\x202'
        }, {
            'id': 0x4,
            'day': IMAGES['CRATE3D'],
            'night': IMAGES['CRATE3N'],
            'rarity': RARITY['WOOD'],
            'author': 'eogito',
            'name': 'Wooden\x20Box\x203'
        }, {
            'id': 0x5,
            'day': IMAGES['CRATE4D'],
            'night': IMAGES['CRATE4N'],
            'rarity': RARITY['WOOD'],
            'author': 'eogito',
            'name': 'Broken\x20Wooden\x20Box'
        }, {
            'id': 0x6,
            'day': IMAGES['CRATE5D'],
            'night': IMAGES['CRATE5N'],
            'rarity': RARITY['WOOD'],
            'author': 'eogito',
            'name': 'Wooden\x20Box'
        }, {
            'id': 0x7,
            'day': IMAGES['CRATE8D'],
            'night': IMAGES['CRATE8N'],
            'rarity': RARITY['WOOD'],
            'author': 'eogito',
            'name': 'Wooden\x20Battle\x20Box'
        }, {
            'id': 0x8,
            'day': IMAGES['CRATE9D'],
            'night': IMAGES['CRATE9N'],
            'rarity': RARITY['WOOD'],
            'author': 'eogito',
            'name': 'Wooden\x20Box\x20with\x20a\x20Cross'
        }, {
            'id': 0x9,
            'day': IMAGES['CRATE10D'],
            'night': IMAGES['CRATE10N'],
            'rarity': RARITY['WOOD'],
            'author': 'eogito',
            'name': 'Wooden\x20Box\x20with\x20Bubbles'
        }, {
            'id': 0xa,
            'day': IMAGES['CRATE11D'],
            'night': IMAGES['CRATE11N'],
            'rarity': RARITY['WOOD'],
            'author': 'eogito',
            'name': 'Wooden\x20Box\x20with\x20Eyes'
        }, {
            'id': 0xb,
            'day': IMAGES['CRATE12D'],
            'night': IMAGES['CRATE12N'],
            'rarity': RARITY['WOOD'],
            'author': 'eogito',
            'name': 'Dark\x20Wooden\x20Box'
        }, {
            'id': 0x26,
            'day': IMAGES['CRATE39D'],
            'night': IMAGES['CRATE39N'],
            'rarity': RARITY['WOOD'],
            'author': 'Weddlz',
            'name': 'Noob\x20Box'
        }, {
            'id': 0xc,
            'day': IMAGES['CRATE13D'],
            'night': IMAGES['CRATE13N'],
            'rarity': RARITY['STONE'],
            'author': 'eogito',
            'name': 'Wooden\x20and\x20Stone\x20Box'
        }, {
            'id': 0xe,
            'day': IMAGES['CRATE19D'],
            'night': IMAGES['CRATE19N'],
            'rarity': RARITY['STONE'],
            'author': 'pizza\x20wa',
            'name': 'Star\x20Box\x201'
        }, {
            'id': 0xf,
            'day': IMAGES['CRATE20D'],
            'night': IMAGES['CRATE20N'],
            'rarity': RARITY['STONE'],
            'author': 'pizza\x20wa',
            'name': 'Star\x20Box\x202'
        }, {
            'id': 0x1b,
            'day': IMAGES['CRATE29D'],
            'night': IMAGES['CRATE29N'],
            'rarity': RARITY['STONE'],
            'author': 'eogito',
            'name': 'Flower\x20Box'
        }, {
            'id': 0x2e,
            'day': IMAGES['CRATE47D'],
            'night': IMAGES['CRATE47N'],
            'rarity': RARITY['STONE'],
            'author': 'MADBalgouthi',
            'name': 'Blue\x20Box'
        }, {
            'id': 0x13,
            'day': IMAGES['CRATE21D'],
            'night': IMAGES['CRATE21N'],
            'rarity': RARITY['GOLD'],
            'author': 'Starve.io',
            'name': 'Beehive'
        }, {
            'id': 0xd,
            'day': IMAGES['CRATE14D'],
            'night': IMAGES['CRATE14N'],
            'rarity': RARITY['GOLD'],
            'author': 'eogito',
            'name': 'Wooden\x20and\x20Golden\x20Box'
        }, {
            'id': 0x15,
            'day': IMAGES['CRATE22D'],
            'night': IMAGES['CRATE22N'],
            'rarity': RARITY['GOLD'],
            'author': 'Starve.io',
            'name': 'Gravestone'
        }, {
            'id': 0x19,
            'day': IMAGES['CRATE26D'],
            'night': IMAGES['CRATE26N'],
            'rarity': RARITY['GOLD'],
            'author': 'Communist',
            'name': 'Sky\x20Box'
        }, {
            'id': 0x1d,
            'day': IMAGES['CRATE30D'],
            'night': IMAGES['CRATE30N'],
            'rarity': RARITY['GOLD'],
            'author': 'Winter',
            'name': 'Golden\x20Box'
        }, {
            'id': 0x22,
            'day': IMAGES['CRATE35D'],
            'night': IMAGES['CRATE35N'],
            'rarity': RARITY['GOLD'],
            'author': 'Communist',
            'name': 'Water\x20Crate'
        }, {
            'id': 0x23,
            'day': IMAGES['CRATE36D'],
            'night': IMAGES['CRATE36N'],
            'rarity': RARITY['GOLD'],
            'author': 'Communist',
            'name': 'Glass\x20Crate'
        }, {
            'id': 0x10,
            'day': IMAGES['CRATE15D'],
            'night': IMAGES['CRATE15N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'eogito',
            'name': 'Wooden\x20and\x20Diamond\x20Box'
        }, {
            'id': 0x12,
            'day': IMAGES['CRATE18D'],
            'night': IMAGES['CRATE18N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'Starve.io',
            'name': 'Don\x27t\x20Hit\x20Me'
        }, {
            'id': 0x1a,
            'day': IMAGES['CRATE27D'],
            'night': IMAGES['CRATE27N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'Starve.io',
            'name': 'Underwater\x20Box'
        }, {
            'id': 0x1f,
            'day': IMAGES['CRATE32D'],
            'night': IMAGES['CRATE32N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'Communist',
            'name': 'Items\x20Pile'
        }, {
            'id': 0x20,
            'day': IMAGES['CRATE33D'],
            'night': IMAGES['CRATE33N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'eogito',
            'name': 'Cake\x20Box'
        }, {
            'id': 0x21,
            'day': IMAGES['CRATE34D'],
            'night': IMAGES['CRATE34N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'eogito',
            'name': 'Christmas\x20Cake\x20Box'
        }, {
            'id': 0x24,
            'day': IMAGES['CRATE37D'],
            'night': IMAGES['CRATE37N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'Fukss',
            'name': 'Crab\x20Box'
        }, {
            'id': 0x2a,
            'day': IMAGES['CRATE43D'],
            'night': IMAGES['CRATE43N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'MADBalgouthi',
            'name': 'Fishing\x20Box'
        }, {
            'id': 0x16,
            'day': IMAGES['CRATE23D'],
            'night': IMAGES['CRATE23N'],
            'rarity': RARITY['AMETHYST'],
            'author': 'Starve.io',
            'name': 'Let\x20me\x20out\x20of\x20here'
        }, {
            'id': 0x11,
            'day': IMAGES['CRATE16D'],
            'night': IMAGES['CRATE16N'],
            'rarity': RARITY['AMETHYST'],
            'author': 'eogito',
            'name': 'Wooden\x20and\x20Amethyst\x20Box'
        }, {
            'id': 0x18,
            'day': IMAGES['CRATE25D'],
            'night': IMAGES['CRATE25N'],
            'rarity': RARITY['AMETHYST'],
            'author': 'Starve.io',
            'name': 'Aquarium'
        }, {
            'id': 0x1c,
            'day': IMAGES['CRATE28D'],
            'night': IMAGES['CRATE28N'],
            'rarity': RARITY['AMETHYST'],
            'author': 'eogito',
            'name': 'Gift\x20Box'
        }, {
            'id': 0x28,
            'day': IMAGES['CRATE41D'],
            'night': IMAGES['CRATE41N'],
            'rarity': RARITY['AMETHYST'],
            'author': 'MADBalgouthi',
            'name': 'Open\x20Watermelon\x20Box'
        }, {
            'id': 0x29,
            'day': IMAGES['CRATE42D'],
            'night': IMAGES['CRATE42N'],
            'rarity': RARITY['AMETHYST'],
            'author': 'MADBalgouthi',
            'name': 'Watermelon\x20Box'
        }, {
            'id': 0x27,
            'day': IMAGES['CRATE40D'],
            'night': IMAGES['CRATE40N'],
            'rarity': RARITY['AMETHYST'],
            'author': 'Taco4Life',
            'name': 'Thornbush\x20Box'
        }, {
            'id': 0x2b,
            'day': IMAGES['CRATE44D'],
            'night': IMAGES['CRATE44N'],
            'rarity': RARITY['AMETHYST'],
            'author': 'eogito',
            'name': 'Rabbit\x20in\x20the\x20Box'
        }, {
            'id': 0x2f,
            'day': IMAGES['CRATE48D'],
            'night': IMAGES['CRATE48N'],
            'rarity': RARITY['AMETHYST'],
            'author': 'Taco4Life',
            'name': 'Garlic\x20Plot'
        }, {
            'id': 0x30,
            'day': IMAGES['CRATE49D'],
            'night': IMAGES['CRATE49N'],
            'rarity': RARITY['AMETHYST'],
            'author': 'Taco4Life',
            'name': 'Pumpkin\x20Plot'
        }, {
            'id': 0x2d,
            'day': IMAGES['CRATE46D'],
            'night': IMAGES['CRATE46N'],
            'rarity': RARITY['REIDITE'],
            'author': 'eogito',
            'name': 'Autumn\x20Box'
        }, {
            'id': 0x2c,
            'day': IMAGES['CRATE45D'],
            'night': IMAGES['CRATE45N'],
            'rarity': RARITY['REIDITE'],
            'author': 'eogito',
            'name': 'Winter\x20Box'
        }, {
            'id': 0x14,
            'day': IMAGES['CRATE17D'],
            'night': IMAGES['CRATE17N'],
            'rarity': RARITY['REIDITE'],
            'author': 'eogito',
            'name': 'Metal\x20and\x20Reidite\x20Box'
        }, {
            'id': 0x17,
            'day': IMAGES['CRATE24D'],
            'night': IMAGES['CRATE24N'],
            'rarity': RARITY['REIDITE'],
            'author': 'Starve.io',
            'name': 'Kraken\x20Box'
        }, {
            'id': 0x1e,
            'day': IMAGES['CRATE31D'],
            'night': IMAGES['CRATE31N'],
            'rarity': RARITY['REIDITE'],
            'author': 'Winter',
            'name': 'Lava\x20Box'
        }, {
            'id': 0x25,
            'day': IMAGES['CRATE38D'],
            'night': IMAGES['CRATE38N'],
            'rarity': RARITY['REIDITE'],
            'author': 'eogito',
            'name': 'Lava\x20Box\x202'
        }, {
            'id': 0x31,
            'day': IMAGES['CRATE50D'],
            'night': IMAGES['CRATE50N'],
            'rarity': RARITY['REIDITE'],
            'author': 'Starve.io',
            'name': 'Box\x20of\x20the\x20Rabbit'
        }, {
            'id': 0x32,
            'day': IMAGES['CRATE51D'],
            'night': IMAGES['CRATE51N'],
            'rarity': RARITY['REIDITE'],
            'author': 'Starve.io',
            'name': 'Box\x20of\x20the\x20Wolf'
        }, {
            'id': 0x33,
            'day': IMAGES['CRATE52D'],
            'night': IMAGES['CRATE52N'],
            'rarity': RARITY['REIDITE'],
            'author': 'Starve.io',
            'name': 'Box\x20of\x20the\x20Spider'
        }, {
            'id': 0x34,
            'day': IMAGES['CRATE53D'],
            'night': IMAGES['CRATE53N'],
            'rarity': RARITY['REIDITE'],
            'author': 'Starve.io',
            'name': 'Box\x20of\x20the\x20Hawk'
        }, {
            'id': 0x35,
            'day': IMAGES['CRATE54D'],
            'night': IMAGES['CRATE54N'],
            'rarity': RARITY['REIDITE'],
            'author': 'Starve.io',
            'name': 'Box\x20of\x20the\x20Bear'
        }, {
            'id': 0x36,
            'day': IMAGES['CRATE55D'],
            'night': IMAGES['CRATE55N'],
            'rarity': RARITY['REIDITE'],
            'author': 'Starve.io',
            'name': 'Box\x20of\x20the\x20Fox'
        }, {
            'id': 0x37,
            'day': IMAGES['CRATE56D'],
            'night': IMAGES['CRATE56N'],
            'rarity': RARITY['REIDITE'],
            'author': 'Starve.io',
            'name': 'Box\x20of\x20the\x20Baby\x20Mammoth'
        }, {
            'id': 0x38,
            'day': IMAGES['CRATE57D'],
            'night': IMAGES['CRATE57N'],
            'rarity': RARITY['REIDITE'],
            'author': 'Starve.io',
            'name': 'Box\x20of\x20the\x20Mammoth'
        }, {
            'id': 0x39,
            'day': IMAGES['CRATE58D'],
            'night': IMAGES['CRATE58N'],
            'rarity': RARITY['REIDITE'],
            'author': 'Starve.io',
            'name': 'Box\x20of\x20the\x20Sandworm'
        }, {
            'id': 0x3a,
            'day': IMAGES['CRATE59D'],
            'night': IMAGES['CRATE59N'],
            'rarity': RARITY['REIDITE'],
            'author': 'Starve.io',
            'name': 'Box\x20of\x20the\x20Vulture'
        }, {
            'id': 0x3b,
            'day': IMAGES['CRATE60D'],
            'night': IMAGES['CRATE60N'],
            'rarity': RARITY['REIDITE'],
            'author': 'Starve.io',
            'name': 'Box\x20of\x20the\x20Kraken'
        }, {
            'id': 0x3c,
            'day': IMAGES['CRATE61D'],
            'night': IMAGES['CRATE61N'],
            'rarity': RARITY['REIDITE'],
            'author': 'Starve.io',
            'name': 'Box\x20of\x20the\x20Piranha'
        }, {
            'id': 0x3d,
            'day': IMAGES['CRATE62D'],
            'night': IMAGES['CRATE62N'],
            'rarity': RARITY['REIDITE'],
            'author': 'Starve.io',
            'name': 'Box\x20of\x20the\x20Baby\x20Dragon'
        }, {
            'id': 0x3e,
            'day': IMAGES['CRATE63D'],
            'night': IMAGES['CRATE63N'],
            'rarity': RARITY['REIDITE'],
            'author': 'Starve.io',
            'name': 'Box\x20of\x20the\x20Baby\x20Lava'
        }, {
            'id': 0x3f,
            'day': IMAGES['CRATE64D'],
            'night': IMAGES['CRATE64N'],
            'rarity': RARITY['REIDITE'],
            'author': 'Starve.io',
            'name': 'Box\x20of\x20the\x20Dragon'
        }, {
            'id': 0x40,
            'day': IMAGES['CRATE65D'],
            'night': IMAGES['CRATE65N'],
            'rarity': RARITY['REIDITE'],
            'author': 'Starve.io',
            'name': 'Box\x20of\x20the\x20Penguin'
        }, {
            'id': 0x41,
            'day': IMAGES['CRATE66D'],
            'night': IMAGES['CRATE66N'],
            'rarity': RARITY['REIDITE'],
            'author': 'Starve.io',
            'name': 'Box\x20of\x20the\x20Lava\x20Dragon'
        }, {
            'id': 0x42,
            'day': IMAGES['CRATE67D'],
            'night': IMAGES['CRATE67N'],
            'rarity': RARITY['REIDITE'],
            'author': 'Starve.io',
            'name': 'Box\x20of\x20the\x20Boar'
        }, {
            'id': 0x43,
            'day': IMAGES['CRATE68D'],
            'night': IMAGES['CRATE68N'],
            'rarity': RARITY['REIDITE'],
            'author': 'Starve.io',
            'name': 'Box\x20of\x20the\x20Fire\x20mob'
        }, {
            'id': 0x44,
            'day': IMAGES['CRATE69D'],
            'night': IMAGES['CRATE69N'],
            'rarity': RARITY['REIDITE'],
            'author': 'Starve.io',
            'name': 'Box\x20of\x20the\x20Crab'
        }, {
            'id': 0x45,
            'day': IMAGES['CRATE70D'],
            'night': IMAGES['CRATE70N'],
            'rarity': RARITY['REIDITE'],
            'author': 'Starve.io',
            'name': 'Box\x20of\x20the\x20King\x20Crab'
        }, {
            'id': 0x46,
            'day': IMAGES['CRATE71D'],
            'night': IMAGES['CRATE71N'],
            'rarity': RARITY['GOLD'],
            'author': 'CrysTal',
            'name': 'Crystal\x20Sky\x20Box'
        }, {
            'id': 0x47,
            'day': IMAGES['CRATE72D'],
            'night': IMAGES['CRATE72N'],
            'rarity': RARITY['REIDITE'],
            'author': 'eogito',
            'name': 'Dragon\x20Box'
        }],
        'BOOK': [{
            'id': 0x0,
            'day': IMAGES['BOOK0D'],
            'night': IMAGES['BOOK0N'],
            'rarity': RARITY['FREE'],
            'author': 'Starve.io',
            'name': 'Book\x201'
        }, {
            'id': 0x1,
            'day': IMAGES['BOOK3D'],
            'night': IMAGES['BOOK3N'],
            'rarity': RARITY['WOOD'],
            'author': 'eogito',
            'name': 'Book\x202'
        }, {
            'id': 0x2,
            'day': IMAGES['BOOK4D'],
            'night': IMAGES['BOOK4N'],
            'rarity': RARITY['WOOD'],
            'author': 'eogito',
            'name': 'Book\x203'
        }, {
            'id': 0x3,
            'day': IMAGES['BOOK5D'],
            'night': IMAGES['BOOK5N'],
            'rarity': RARITY['WOOD'],
            'author': 'eogito',
            'name': 'Book\x204'
        }, {
            'id': 0x4,
            'day': IMAGES['BOOK6D'],
            'night': IMAGES['BOOK6N'],
            'rarity': RARITY['WOOD'],
            'author': 'eogito',
            'name': 'Damaged\x20Book\x201'
        }, {
            'id': 0x12,
            'day': IMAGES['BOOK18D'],
            'night': IMAGES['BOOK18N'],
            'rarity': RARITY['WOOD'],
            'author': 'SeveR',
            'name': 'Damaged\x20Book\x202'
        }, {
            'id': 0x5,
            'day': IMAGES['BOOK1D'],
            'night': IMAGES['BOOK1N'],
            'rarity': RARITY['STONE'],
            'author': 'Doctorpus',
            'name': 'Scroll'
        }, {
            'id': 0x6,
            'day': IMAGES['BOOK2D'],
            'night': IMAGES['BOOK2N'],
            'rarity': RARITY['STONE'],
            'author': 'Doctorpus',
            'name': 'Clipboard'
        }, {
            'id': 0x7,
            'day': IMAGES['BOOK7D'],
            'night': IMAGES['BOOK7N'],
            'rarity': RARITY['STONE'],
            'author': 'eogito',
            'name': 'Seed\x20Book'
        }, {
            'id': 0x14,
            'day': IMAGES['BOOK20D'],
            'night': IMAGES['BOOK20N'],
            'rarity': RARITY['STONE'],
            'author': 'Taco4Life',
            'name': 'Camo\x20Book'
        }, {
            'id': 0x18,
            'day': IMAGES['BOOK24D'],
            'night': IMAGES['BOOK24N'],
            'rarity': RARITY['STONE'],
            'author': 'Communist',
            'name': 'Stone\x20Tablet'
        }, {
            'id': 0xa,
            'day': IMAGES['BOOK13D'],
            'night': IMAGES['BOOK13N'],
            'rarity': RARITY['GOLD'],
            'author': 'pizza\x20wa',
            'name': 'Star\x20Book'
        }, {
            'id': 0x8,
            'day': IMAGES['BOOK9D'],
            'night': IMAGES['BOOK9N'],
            'rarity': RARITY['GOLD'],
            'author': 'eogito',
            'name': 'Gold\x20Book'
        }, {
            'id': 0xf,
            'day': IMAGES['BOOK15D'],
            'night': IMAGES['BOOK15N'],
            'rarity': RARITY['GOLD'],
            'author': 'Starve.io',
            'name': 'Old\x20Mysterious\x20Paper'
        }, {
            'id': 0x11,
            'day': IMAGES['BOOK17D'],
            'night': IMAGES['BOOK17N'],
            'rarity': RARITY['GOLD'],
            'author': 'Starve.io',
            'name': 'Gold\x20Engraving'
        }, {
            'id': 0x19,
            'day': IMAGES['BOOK25D'],
            'night': IMAGES['BOOK25N'],
            'rarity': RARITY['GOLD'],
            'author': 'fatant',
            'name': 'Ant\x20Book'
        }, {
            'id': 0x20,
            'day': IMAGES['BOOK32D'],
            'night': IMAGES['BOOK32N'],
            'rarity': RARITY['GOLD'],
            'author': 'eogito',
            'name': 'Mummy\x20Book'
        }, {
            'id': 0x25,
            'day': IMAGES['BOOK39D'],
            'night': IMAGES['BOOK39N'],
            'rarity': RARITY['GOLD'],
            'author': 'Taco4Life',
            'name': 'Garlic\x20Book'
        }, {
            'id': 0x26,
            'day': IMAGES['BOOK38D'],
            'night': IMAGES['BOOK38N'],
            'rarity': RARITY['GOLD'],
            'author': 'Taco4Life',
            'name': 'Pumpkin\x20Book'
        }, {
            'id': 0x27,
            'day': IMAGES['BOOK40D'],
            'night': IMAGES['BOOK40N'],
            'rarity': RARITY['GOLD'],
            'author': 'Starve.io',
            'name': 'Christmas\x20Tree\x20Book'
        }, {
            'id': 0xb,
            'day': IMAGES['BOOK10D'],
            'night': IMAGES['BOOK10N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'eogito',
            'name': 'Diamond\x20Book'
        }, {
            'id': 0x9,
            'day': IMAGES['BOOK8D'],
            'night': IMAGES['BOOK8N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'eogito',
            'name': 'Obscure\x20Book'
        }, {
            'id': 0x10,
            'day': IMAGES['BOOK16D'],
            'night': IMAGES['BOOK16N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'Starve.io',
            'name': 'Rolled\x20Parchment'
        }, {
            'id': 0x16,
            'day': IMAGES['BOOK22D'],
            'night': IMAGES['BOOK22N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'eogito',
            'name': 'Cake\x20Book'
        }, {
            'id': 0x17,
            'day': IMAGES['BOOK23D'],
            'night': IMAGES['BOOK23N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'eogito',
            'name': 'Christmas\x20Cake\x20Book'
        }, {
            'id': 0x1e,
            'day': IMAGES['BOOK30D'],
            'night': IMAGES['BOOK30N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'MADBalgouthi',
            'name': 'Fish\x20Book'
        }, {
            'id': 0x1f,
            'day': IMAGES['BOOK31D'],
            'night': IMAGES['BOOK31N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'CrysTal',
            'name': 'Once\x20upon\x20a\x20time'
        }, {
            'id': 0xd,
            'day': IMAGES['BOOK11D'],
            'night': IMAGES['BOOK11N'],
            'rarity': RARITY['AMETHYST'],
            'author': 'eogito',
            'name': 'Amethyst\x20Book'
        }, {
            'id': 0x1c,
            'day': IMAGES['BOOK28D'],
            'night': IMAGES['BOOK28N'],
            'rarity': RARITY['AMETHYST'],
            'author': 'eogito',
            'name': 'Paint\x20Pallet'
        }, {
            'id': 0x1d,
            'day': IMAGES['BOOK29D'],
            'night': IMAGES['BOOK29N'],
            'rarity': RARITY['AMETHYST'],
            'author': 'CrysTal',
            'name': 'Watermelon\x20Book'
        }, {
            'id': 0x1b,
            'day': IMAGES['BOOK27D'],
            'night': IMAGES['BOOK27N'],
            'rarity': RARITY['AMETHYST'],
            'author': 'Taco4Life',
            'name': 'Thornbush\x20Book'
        }, {
            'id': 0x23,
            'day': IMAGES['BOOK35D'],
            'night': IMAGES['BOOK35N'],
            'rarity': RARITY['AMETHYST'],
            'author': 'Taco4Life',
            'name': 'Menu'
        }, {
            'id': 0x24,
            'day': IMAGES['BOOK36D'],
            'night': IMAGES['BOOK36N'],
            'rarity': RARITY['AMETHYST'],
            'author': 'CrysTal',
            'name': 'Lover\x20Letter'
        }, {
            'id': 0x28,
            'day': IMAGES['BOOK41D'],
            'night': IMAGES['BOOK41N'],
            'rarity': RARITY['AMETHYST'],
            'author': 'Starve.io',
            'name': 'Fresh-Baked\x20Cookies'
        }, {
            'id': 0x29,
            'day': IMAGES['BOOK42D'],
            'night': IMAGES['BOOK42N'],
            'rarity': RARITY['AMETHYST'],
            'author': 'Starve.io',
            'name': 'Inside,\x20there\x20is\x20just\x20a\x20book.'
        }, {
            'id': 0x21,
            'day': IMAGES['BOOK33D'],
            'night': IMAGES['BOOK33N'],
            'rarity': RARITY['REIDITE'],
            'author': 'eogito',
            'name': 'Winter\x20Book'
        }, {
            'id': 0x22,
            'day': IMAGES['BOOK34D'],
            'night': IMAGES['BOOK34N'],
            'rarity': RARITY['REIDITE'],
            'author': 'eogito',
            'name': 'Autumn\x20Book'
        }, {
            'id': 0xe,
            'day': IMAGES['BOOK12D'],
            'night': IMAGES['BOOK12N'],
            'rarity': RARITY['REIDITE'],
            'author': 'eogito',
            'name': 'Reidite\x20Book'
        }, {
            'id': 0xc,
            'day': IMAGES['BOOK14D'],
            'night': IMAGES['BOOK14N'],
            'rarity': RARITY['REIDITE'],
            'author': 'Winter',
            'name': 'Lava\x20Book'
        }, {
            'id': 0x1a,
            'day': IMAGES['BOOK26D'],
            'night': IMAGES['BOOK26N'],
            'rarity': RARITY['REIDITE'],
            'author': 'eogito',
            'name': 'Lava\x20Book\x202'
        }, {
            'id': 0x13,
            'day': IMAGES['BOOK19D'],
            'night': IMAGES['BOOK19N'],
            'rarity': RARITY['REIDITE'],
            'author': 'Winter',
            'name': 'Ocean\x20Mystery'
        }, {
            'id': 0x15,
            'day': IMAGES['BOOK21D'],
            'night': IMAGES['BOOK21N'],
            'rarity': RARITY['REIDITE'],
            'author': 'eogito',
            'name': 'Dragon\x20Book'
        }, {
            'id': 0x2a,
            'day': IMAGES['BOOK43D'],
            'night': IMAGES['BOOK43N'],
            'rarity': RARITY['REIDITE'],
            'author': 'eogito',
            'name': 'Engineer\x20Book'
        }, {
            'id': 0x2b,
            'day': IMAGES['BOOK44D'],
            'night': IMAGES['BOOK44N'],
            'rarity': RARITY['REIDITE'],
            'author': 'eogito',
            'name': 'Nightmare\x20Book'
        }, {
            'id': 0x2c,
            'day': IMAGES['BOOK45D'],
            'night': IMAGES['BOOK45N'],
            'rarity': RARITY['REIDITE'],
            'author': 'aloner',
            'name': 'Mystery\x20Book'
        }],
        'ACCESSORY': [{
            'id': 0x0,
            'day': IMAGES['ACCESSORY0D'],
            'night': IMAGES['ACCESSORY0D'],
            'rarity': RARITY['FREE'],
            'author': 'Starve.io',
            'name': 'Nothing'
        }, {
            'id': 0x2,
            'day': IMAGES['ACCESSORY4D'],
            'night': IMAGES['ACCESSORY4N'],
            'rarity': RARITY['FREE'],
            'author': 'Starve.io',
            'name': 'Pink\x20Cheeks'
        }, {
            'id': 0x3,
            'day': IMAGES['ACCESSORY5D'],
            'night': IMAGES['ACCESSORY5N'],
            'rarity': RARITY['FREE'],
            'author': 'Starve.io',
            'name': 'Heart'
        }, {
            'id': 0x1,
            'day': IMAGES['ACCESSORY3D'],
            'night': IMAGES['ACCESSORY3N'],
            'rarity': RARITY['FREE'],
            'author': 'Starve.io',
            'name': 'Bandage\x201'
        }, {
            'id': 0x4,
            'day': IMAGES['ACCESSORY6D'],
            'night': IMAGES['ACCESSORY6N'],
            'rarity': RARITY['FREE'],
            'author': 'Starve.io',
            'name': 'Flower\x201'
        }, {
            'id': 0x5,
            'day': IMAGES['ACCESSORY8D'],
            'night': IMAGES['ACCESSORY8N'],
            'rarity': RARITY['WOOD'],
            'author': 'Starve.io',
            'name': 'Bow\x201'
        }, {
            'id': 0x6,
            'day': IMAGES['ACCESSORY9D'],
            'night': IMAGES['ACCESSORY9N'],
            'rarity': RARITY['WOOD'],
            'author': 'eogito',
            'name': 'Bandage\x202'
        }, {
            'id': 0x7,
            'day': IMAGES['ACCESSORY15D'],
            'night': IMAGES['ACCESSORY15N'],
            'rarity': RARITY['WOOD'],
            'author': 'Starve.io',
            'name': 'Flower\x202'
        }, {
            'id': 0x8,
            'day': IMAGES['ACCESSORY10D'],
            'night': IMAGES['ACCESSORY10N'],
            'rarity': RARITY['WOOD'],
            'author': 'eogito',
            'name': 'Bandage\x203'
        }, {
            'id': 0x24,
            'day': IMAGES['ACCESSORY36D'],
            'night': IMAGES['ACCESSORY36N'],
            'rarity': RARITY['WOOD'],
            'author': 'eogito',
            'name': 'Foliage'
        }, {
            'id': 0x3b,
            'day': IMAGES['ACCESSORY47D'],
            'night': IMAGES['ACCESSORY47N'],
            'rarity': RARITY['WOOD'],
            'author': 'eogito',
            'name': 'Peaceful'
        }, {
            'id': 0x43,
            'day': IMAGES['ACCESSORY55D'],
            'night': IMAGES['ACCESSORY55N'],
            'rarity': RARITY['WOOD'],
            'author': 'pizza\x20wa',
            'name': 'Sparkles'
        }, {
            'id': 0x44,
            'day': IMAGES['ACCESSORY56D'],
            'night': IMAGES['ACCESSORY56N'],
            'rarity': RARITY['WOOD'],
            'author': 'pizza\x20wa',
            'name': 'Luxury'
        }, {
            'id': 0x45,
            'day': IMAGES['ACCESSORY57D'],
            'night': IMAGES['ACCESSORY57N'],
            'rarity': RARITY['WOOD'],
            'author': 'pizza\x20wa',
            'name': 'Snow\x20Flakes\x20Crown'
        }, {
            'id': 0x11,
            'day': IMAGES['ACCESSORY17D'],
            'night': IMAGES['ACCESSORY17N'],
            'rarity': RARITY['STONE'],
            'author': 'Starve.io',
            'name': 'Glasses\x201'
        }, {
            'id': 0xa,
            'day': IMAGES['ACCESSORY7D'],
            'night': IMAGES['ACCESSORY7N'],
            'rarity': RARITY['STONE'],
            'author': 'Starve.io',
            'name': 'Bow\x202'
        }, {
            'id': 0xb,
            'day': IMAGES['ACCESSORY13D'],
            'night': IMAGES['ACCESSORY13N'],
            'rarity': RARITY['STONE'],
            'author': 'pizza\x20wa',
            'name': 'Little\x20Stars'
        }, {
            'id': 0xc,
            'day': IMAGES['ACCESSORY11D'],
            'night': IMAGES['ACCESSORY11N'],
            'rarity': RARITY['STONE'],
            'author': 'eogito',
            'name': 'Pirate\x20Eye\x20Patch\x201'
        }, {
            'id': 0x2c,
            'day': IMAGES['ACCESSORY44D'],
            'night': IMAGES['ACCESSORY44N'],
            'rarity': RARITY['STONE'],
            'author': 'Taco4Life',
            'name': 'Pirate\x20Eye\x20Patch\x202'
        }, {
            'id': 0x17,
            'day': IMAGES['ACCESSORY23D'],
            'night': IMAGES['ACCESSORY23N'],
            'rarity': RARITY['STONE'],
            'author': 'Starve.io',
            'name': 'Clown\x20nose'
        }, {
            'id': 0x10,
            'day': IMAGES['ACCESSORY2D'],
            'night': IMAGES['ACCESSORY2N'],
            'rarity': RARITY['STONE'],
            'author': 'Starve.io',
            'name': 'Eye\x20Patch'
        }, {
            'id': 0x1e,
            'day': IMAGES['ACCESSORY30D'],
            'night': IMAGES['ACCESSORY30N'],
            'rarity': RARITY['STONE'],
            'author': 'eogito',
            'name': 'Flower\x203'
        }, {
            'id': 0x26,
            'day': IMAGES['ACCESSORY38D'],
            'night': IMAGES['ACCESSORY38N'],
            'rarity': RARITY['STONE'],
            'author': 'Winter',
            'name': 'False\x20Nose'
        }, {
            'id': 0x4a,
            'day': IMAGES['ACCESSORY62D'],
            'night': IMAGES['ACCESSORY62N'],
            'rarity': RARITY['STONE'],
            'author': 'Starve.io',
            'name': 'Red\x20Cloth'
        }, {
            'id': 0x4b,
            'day': IMAGES['ACCESSORY63D'],
            'night': IMAGES['ACCESSORY63N'],
            'rarity': RARITY['STONE'],
            'author': 'Starve.io',
            'name': 'Blue\x20Cloth'
        }, {
            'id': 0x4f,
            'day': IMAGES['ACCESSORY67D'],
            'night': IMAGES['ACCESSORY67N'],
            'rarity': RARITY['STONE'],
            'author': 'Starve.io',
            'name': 'Transparent\x20Mask'
        }, {
            'id': 0x59,
            'day': IMAGES['ACCESSORY77D'],
            'night': IMAGES['ACCESSORY77N'],
            'rarity': RARITY['STONE'],
            'author': 'Anyone\x20want\x20to\x20play?',
            'name': 'Starve.io\x20Anime'
        }, {
            'id': 0x5e,
            'day': IMAGES['ACCESSORY78D'],
            'night': IMAGES['ACCESSORY78N'],
            'rarity': RARITY['STONE'],
            'author': 'Ant',
            'name': 'Hero\x20Mask'
        }, {
            'id': 0xf,
            'day': IMAGES['ACCESSORY16D'],
            'night': IMAGES['ACCESSORY16N'],
            'rarity': RARITY['GOLD'],
            'author': 'Starve.io',
            'name': 'Star\x20Glasses'
        }, {
            'id': 0x15,
            'day': IMAGES['ACCESSORY21D'],
            'night': IMAGES['ACCESSORY21N'],
            'rarity': RARITY['GOLD'],
            'author': 'Starve.io',
            'name': 'Great-aunt\x27s\x20Glasses'
        }, {
            'id': 0x18,
            'day': IMAGES['ACCESSORY24D'],
            'night': IMAGES['ACCESSORY24N'],
            'rarity': RARITY['GOLD'],
            'author': 'Starve.io',
            'name': 'Little\x20Starver'
        }, {
            'id': 0x16,
            'day': IMAGES['ACCESSORY22D'],
            'night': IMAGES['ACCESSORY22N'],
            'rarity': RARITY['GOLD'],
            'author': 'Starve.io',
            'name': 'Little\x20Glasses'
        }, {
            'id': 0xd,
            'day': IMAGES['ACCESSORY14D'],
            'night': IMAGES['ACCESSORY14N'],
            'rarity': RARITY['GOLD'],
            'author': 'Starve.io',
            'name': 'Flower\x20Chain'
        }, {
            'id': 0x1d,
            'day': IMAGES['ACCESSORY29D'],
            'night': IMAGES['ACCESSORY29N'],
            'rarity': RARITY['GOLD'],
            'author': 'eogito',
            'name': 'Horns'
        }, {
            'id': 0x1f,
            'day': IMAGES['ACCESSORY31D'],
            'night': IMAGES['ACCESSORY31N'],
            'rarity': RARITY['GOLD'],
            'author': 'eogito',
            'name': 'Golden\x20Flower'
        }, {
            'id': 0x28,
            'day': IMAGES['ACCESSORY40D'],
            'night': IMAGES['ACCESSORY40N'],
            'rarity': RARITY['GOLD'],
            'author': 'pizza\x20wa',
            'name': 'Sleeping\x20Mask'
        }, {
            'id': 0x39,
            'day': IMAGES['ACCESSORY50D'],
            'night': IMAGES['ACCESSORY50N'],
            'rarity': RARITY['GOLD'],
            'author': 'Taco4Life',
            'name': 'Fish\x20on\x20your\x20head'
        }, {
            'id': 0x3a,
            'day': IMAGES['ACCESSORY46D'],
            'night': IMAGES['ACCESSORY46N'],
            'rarity': RARITY['GOLD'],
            'author': 'eogito',
            'name': 'Rose'
        }, {
            'id': 0x5b,
            'day': IMAGES['ACCESSORY80D'],
            'night': IMAGES['ACCESSORY80N'],
            'rarity': RARITY['GOLD'],
            'author': 'upfiz',
            'name': 'Grey\x20Scarf'
        }, {
            'id': 0x5c,
            'day': IMAGES['ACCESSORY81D'],
            'night': IMAGES['ACCESSORY81N'],
            'rarity': RARITY['GOLD'],
            'author': 'upfiz',
            'name': 'Black\x20Scarf'
        }, {
            'id': 0x5d,
            'day': IMAGES['ACCESSORY82D'],
            'night': IMAGES['ACCESSORY82N'],
            'rarity': RARITY['GOLD'],
            'author': 'upfiz',
            'name': 'Skull\x20Mask'
        }, {
            'id': 0x9,
            'day': IMAGES['ACCESSORY1D'],
            'night': IMAGES['ACCESSORY1N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'Starve.io',
            'name': 'Fancy\x20Glasses'
        }, {
            'id': 0x19,
            'day': IMAGES['ACCESSORY25D'],
            'night': IMAGES['ACCESSORY25N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'Starve.io',
            'name': 'Medecin\x20Mask'
        }, {
            'id': 0xe,
            'day': IMAGES['ACCESSORY12D'],
            'night': IMAGES['ACCESSORY12N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'Starve.io',
            'name': 'Mr.\x20Mayor'
        }, {
            'id': 0x13,
            'day': IMAGES['ACCESSORY19D'],
            'night': IMAGES['ACCESSORY19N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'Starve.io',
            'name': 'Sunglasses\x202'
        }, {
            'id': 0x1c,
            'day': IMAGES['ACCESSORY28D'],
            'night': IMAGES['ACCESSORY28N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'pizza\x20wa',
            'name': 'Starfish'
        }, {
            'id': 0x25,
            'day': IMAGES['ACCESSORY37D'],
            'night': IMAGES['ACCESSORY37N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'eogito',
            'name': 'Berry'
        }, {
            'id': 0x27,
            'day': IMAGES['ACCESSORY39D'],
            'night': IMAGES['ACCESSORY39N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'eogito',
            'name': 'Flake'
        }, {
            'id': 0x2b,
            'day': IMAGES['ACCESSORY43D'],
            'night': IMAGES['ACCESSORY43N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'eogito',
            'name': 'Leaf\x20'
        }, {
            'id': 0x3d,
            'day': IMAGES['ACCESSORY49D'],
            'night': IMAGES['ACCESSORY49N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'Starve.io',
            'name': 'A\x20sword\x20in\x20your\x20head'
        }, {
            'id': 0x3e,
            'day': IMAGES['ACCESSORY51D'],
            'night': IMAGES['ACCESSORY51N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'Starve.io',
            'name': 'Winter\x20Scarf'
        }, {
            'id': 0x40,
            'day': IMAGES['ACCESSORY53D'],
            'night': IMAGES['ACCESSORY53N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'eogito',
            'name': 'Winter\x20Scarf\x202'
        }, {
            'id': 0x42,
            'day': IMAGES['ACCESSORY54D'],
            'night': IMAGES['ACCESSORY54N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'eogito',
            'name': 'Winter\x20Scarf\x203'
        }, {
            'id': 0x46,
            'day': IMAGES['ACCESSORY58D'],
            'night': IMAGES['ACCESSORY58N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'Starve.io',
            'name': 'Mask\x20with\x20animal\x20tracks'
        }, {
            'id': 0x47,
            'day': IMAGES['ACCESSORY59D'],
            'night': IMAGES['ACCESSORY59N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'Starve.io',
            'name': 'Spring\x20Mask'
        }, {
            'id': 0x48,
            'day': IMAGES['ACCESSORY60D'],
            'night': IMAGES['ACCESSORY60N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'Starve.io',
            'name': 'Pink\x20Mask'
        }, {
            'id': 0x49,
            'day': IMAGES['ACCESSORY61D'],
            'night': IMAGES['ACCESSORY61N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'Starve.io',
            'name': 'Blue\x20Mask'
        }, {
            'id': 0x4c,
            'day': IMAGES['ACCESSORY64D'],
            'night': IMAGES['ACCESSORY64N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'Starve.io',
            'name': 'Military\x20Mask'
        }, {
            'id': 0x4d,
            'day': IMAGES['ACCESSORY65D'],
            'night': IMAGES['ACCESSORY65N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'Starve.io',
            'name': 'Orange\x20Mask'
        }, {
            'id': 0x4e,
            'day': IMAGES['ACCESSORY66D'],
            'night': IMAGES['ACCESSORY66N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'Starve.io',
            'name': 'White\x20and\x20Red\x20Points\x20Mask'
        }, {
            'id': 0x50,
            'day': IMAGES['ACCESSORY68D'],
            'night': IMAGES['ACCESSORY68N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'Starve.io',
            'name': 'Stick\x20out\x20your\x20tongue\x20Mask'
        }, {
            'id': 0x51,
            'day': IMAGES['ACCESSORY69D'],
            'night': IMAGES['ACCESSORY69N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'Starve.io',
            'name': 'Two\x20Teeth\x20Mask'
        }, {
            'id': 0x52,
            'day': IMAGES['ACCESSORY70D'],
            'night': IMAGES['ACCESSORY70N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'Starve.io',
            'name': 'Make-up\x20Mask'
        }, {
            'id': 0x53,
            'day': IMAGES['ACCESSORY71D'],
            'night': IMAGES['ACCESSORY71N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'Starve.io',
            'name': 'Sad\x20Mask'
        }, {
            'id': 0x54,
            'day': IMAGES['ACCESSORY72D'],
            'night': IMAGES['ACCESSORY72N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'Starve.io',
            'name': 'Happy\x20Mask'
        }, {
            'id': 0x5a,
            'day': IMAGES['ACCESSORY79D'],
            'night': IMAGES['ACCESSORY79N'],
            'rarity': RARITY['DIAMOND'],
            'author': 'aloner',
            'name': 'Blood'
        }, {
            'id': 0x1b,
            'day': IMAGES['ACCESSORY27D'],
            'night': IMAGES['ACCESSORY27N'],
            'rarity': RARITY['AMETHYST'],
            'author': 'Starve.io',
            'name': 'Clown\x20Face'
        }, {
            'id': 0x14,
            'day': IMAGES['ACCESSORY20D'],
            'night': IMAGES['ACCESSORY20N'],
            'rarity': RARITY['AMETHYST'],
            'author': 'Starve.io',
            'name': 'Sunglasses\x203'
        }, {
            'id': 0x20,
            'day': IMAGES['ACCESSORY32D'],
            'night': IMAGES['ACCESSORY32N'],
            'rarity': RARITY['AMETHYST'],
            'author': 'eogito',
            'name': 'Engineer\x27s\x20Glasses'
        }, {
            'id': 0x21,
            'day': IMAGES['ACCESSORY33D'],
            'night': IMAGES['ACCESSORY33N'],
            'rarity': RARITY['AMETHYST'],
            'author': 'eogito',
            'name': 'Engineer\x27s\x20Monocle'
        }, {
            'id': 0x22,
            'day': IMAGES['ACCESSORY34D'],
            'night': IMAGES['ACCESSORY34N'],
            'rarity': RARITY['AMETHYST'],
            'author': 'Starve.io',
            'name': 'Mauve\x27s\x20butt'
        }, {
            'id': 0x29,
            'day': IMAGES['ACCESSORY41D'],
            'night': IMAGES['ACCESSORY41N'],
            'rarity': RARITY['AMETHYST'],
            'author': 'eogito',
            'name': 'Lapa\x20Head'
        }, {
            'id': 0x2a,
            'day': IMAGES['ACCESSORY42D'],
            'night': IMAGES['ACCESSORY42N'],
            'rarity': RARITY['AMETHYST'],
            'author': 'eogito',
            'name': 'Lapa\x20Head\x20'
        }, {
            'id': 0x55,
            'day': IMAGES['ACCESSORY73D'],
            'night': IMAGES['ACCESSORY73N'],
            'rarity': RARITY['AMETHYST'],
            'author': 'Starve.io',
            'name': 'Mask\x20and\x20Glasses'
        }, {
            'id': 0x3c,
            'day': IMAGES['ACCESSORY48D'],
            'night': IMAGES['ACCESSORY48N'],
            'rarity': RARITY['REIDITE'],
            'author': 'Starve.io',
            'name': 'Jason'
        }, {
            'id': 0x1a,
            'day': IMAGES['ACCESSORY26D'],
            'night': IMAGES['ACCESSORY26N'],
            'rarity': RARITY['REIDITE'],
            'author': 'Starve.io',
            'name': 'Devil\x20Horns'
        }, {
            'id': 0x12,
            'day': IMAGES['ACCESSORY18D'],
            'night': IMAGES['ACCESSORY18N'],
            'rarity': RARITY['REIDITE'],
            'author': 'Starve.io',
            'name': 'Big\x20Boss'
        }, {
            'id': 0x23,
            'day': IMAGES['ACCESSORY35D'],
            'night': IMAGES['ACCESSORY35N'],
            'rarity': RARITY['REIDITE'],
            'author': 'Starve.io',
            'name': 'Baby\x20Kraken'
        }, {
            'id': 0x3f,
            'day': IMAGES['ACCESSORY52D'],
            'night': IMAGES['ACCESSORY52N'],
            'rarity': RARITY['REIDITE'],
            'author': 'eogito',
            'name': 'Deer\x20Antlers'
        }, {
            'id': 0x41,
            'day': IMAGES['ACCESSORY45D'],
            'night': IMAGES['ACCESSORY45N'],
            'rarity': RARITY['REIDITE'],
            'author': 'eogito',
            'name': 'Baby\x20Dragon\x20on\x20your\x20head'
        }, {
            'id': 0x56,
            'day': IMAGES['ACCESSORY74D'],
            'night': IMAGES['ACCESSORY74N'],
            'rarity': RARITY['REIDITE'],
            'author': 'Starve.io',
            'name': 'Gaz\x20Mask\x20and\x20Glasses'
        }, {
            'id': 0x57,
            'day': IMAGES['ACCESSORY75D'],
            'night': IMAGES['ACCESSORY75N'],
            'rarity': RARITY['REIDITE'],
            'author': 'Starve.io',
            'name': 'Pink\x20Gaz\x20Mask\x20and\x20Glasses'
        }, {
            'id': 0x58,
            'day': IMAGES['ACCESSORY76D'],
            'night': IMAGES['ACCESSORY76N'],
            'rarity': RARITY['REIDITE'],
            'author': 'eogito',
            'name': 'Engineer\x20Glasses'
        }, {
            'id': 0x2d,
            'day': IMAGES['LEVEL5D'],
            'night': IMAGES['LEVEL5N'],
            'rarity': RARITY['LEVEL'],
            'author': 'Starve.io',
            'name': 'More\x20than\x20Level\x205',
            'level': 0x5
        }, {
            'id': 0x2e,
            'day': IMAGES['LEVEL10D'],
            'night': IMAGES['LEVEL10N'],
            'rarity': RARITY['LEVEL'],
            'author': 'Starve.io',
            'name': 'More\x20than\x20Level\x2010',
            'level': 0xa
        }, {
            'id': 0x2f,
            'day': IMAGES['LEVEL15D'],
            'night': IMAGES['LEVEL15N'],
            'rarity': RARITY['LEVEL'],
            'author': 'Starve.io',
            'name': 'More\x20than\x20Level\x2015',
            'level': 0xf
        }, {
            'id': 0x30,
            'day': IMAGES['LEVEL20D'],
            'night': IMAGES['LEVEL20N'],
            'rarity': RARITY['LEVEL'],
            'author': 'Starve.io',
            'name': 'More\x20than\x20Level\x2020',
            'level': 0x14
        }, {
            'id': 0x31,
            'day': IMAGES['LEVEL25D'],
            'night': IMAGES['LEVEL25N'],
            'rarity': RARITY['LEVEL'],
            'author': 'Starve.io',
            'name': 'More\x20than\x20Level\x2025',
            'level': 0x19
        }, {
            'id': 0x32,
            'day': IMAGES['LEVEL30D'],
            'night': IMAGES['LEVEL30N'],
            'rarity': RARITY['LEVEL'],
            'author': 'Starve.io',
            'name': 'More\x20than\x20Level\x2030',
            'level': 0x1e
        }, {
            'id': 0x33,
            'day': IMAGES['LEVEL35D'],
            'night': IMAGES['LEVEL35N'],
            'rarity': RARITY['LEVEL'],
            'author': 'Starve.io',
            'name': 'More\x20than\x20Level\x2035',
            'level': 0x23
        }, {
            'id': 0x34,
            'day': IMAGES['LEVEL40D'],
            'night': IMAGES['LEVEL40N'],
            'rarity': RARITY['LEVEL'],
            'author': 'Starve.io',
            'name': 'More\x20than\x20Level\x2040',
            'level': 0x28
        }, {
            'id': 0x35,
            'day': IMAGES['LEVEL45D'],
            'night': IMAGES['LEVEL45N'],
            'rarity': RARITY['LEVEL'],
            'author': 'Starve.io',
            'name': 'More\x20than\x20Level\x2045',
            'level': 0x2d
        }, {
            'id': 0x36,
            'day': IMAGES['LEVEL50D'],
            'night': IMAGES['LEVEL50N'],
            'rarity': RARITY['LEVEL'],
            'author': 'Starve.io',
            'name': 'More\x20than\x20Level\x2050',
            'level': 0x32
        }, {
            'id': 0x37,
            'day': IMAGES['LEVEL55D'],
            'night': IMAGES['LEVEL55N'],
            'rarity': RARITY['LEVEL'],
            'author': 'Starve.io',
            'name': 'More\x20than\x20Level\x2055',
            'level': 0x37
        }, {
            'id': 0x38,
            'day': IMAGES['LEVEL60D'],
            'night': IMAGES['LEVEL60N'],
            'rarity': RARITY['LEVEL'],
            'author': 'Starve.io',
            'name': 'More\x20than\x20Level\x2060',
            'level': 0x3c
        }]
    }, WORLD['ZOMBIE_SKIN'] = find_cosmetics_per_id(COSMETICS['SKIN'], 0x15), WORLD['VAMPIRE_SKIN'] = find_cosmetics_per_id(COSMETICS['SKIN'], 0x14), sprite[SPRITE['BODY']] = [], sprite[SPRITE['HAND']] = [], sprite[SPRITE['CRATE']] = [], sprite[SPRITE['BOOK']] = [], sprite[SPRITE['BAG']] = [], sprite[SPRITE['ACCESSORY']] = [];
    for (var _0xed668 = 0x0; _0xed668 < COSMETICS['SKIN']['length']; _0xed668++) {
        sprite[SPRITE['BODY']][_0xed668] = [COSMETICS['SKIN'][_0xed668]['day'], COSMETICS['SKIN'][_0xed668]['night']], sprite[SPRITE['HAND']][_0xed668] = [COSMETICS['SKIN'][_0xed668]['dayHand'], COSMETICS['SKIN'][_0xed668]['nightHand']];
    }
    for (var _0xed668 = 0x0; _0xed668 < COSMETICS['BOOK']['length']; _0xed668++) sprite[SPRITE['BOOK']][_0xed668] = [COSMETICS['BOOK'][_0xed668]['day'], COSMETICS['BOOK'][_0xed668]['night']];
    for (var _0xed668 = 0x0; _0xed668 < COSMETICS['CRATE']['length']; _0xed668++) sprite[SPRITE['CRATE']][_0xed668] = [COSMETICS['CRATE'][_0xed668]['day'], COSMETICS['CRATE'][_0xed668]['night']];
    for (var _0xed668 = 0x0; _0xed668 < COSMETICS['BAG']['length']; _0xed668++) sprite[SPRITE['BAG']][_0xed668] = [COSMETICS['BAG'][_0xed668]['day'], COSMETICS['BAG'][_0xed668]['night']];
    for (var _0xed668 = 0x0; _0xed668 < COSMETICS['ACCESSORY']['length']; _0xed668++) sprite[SPRITE['ACCESSORY']][_0xed668] = [COSMETICS['ACCESSORY'][_0xed668]['day'], COSMETICS['ACCESSORY'][_0xed668]['night']];
};

function fill_path(_0x3c60f5, _0x158df9, _0x5b5cb6, _0x3cc75d) {
    _0x158df9 && (_0x3c60f5['fillStyle'] = _0x158df9, _0x3c60f5['fill']()), _0x5b5cb6 && (_0x3c60f5['lineWidth'] = _0x3cc75d, _0x3c60f5['strokeStyle'] = _0x5b5cb6, _0x3c60f5['stroke']());
}

function round_rect(_0xd1ced3, _0x58185d, _0x365343, _0x26fdf2, _0xccf021, _0x5a9b97) {
    _0x26fdf2 < 0x2 * _0x5a9b97 && (_0x5a9b97 = _0x26fdf2 / 0x2), _0xccf021 < 0x2 * _0x5a9b97 && (_0x5a9b97 = _0xccf021 / 0x2), 0x0 > _0x5a9b97 && (_0x5a9b97 = 0x0), _0xd1ced3['beginPath'](), _0xd1ced3['moveTo'](_0x58185d + _0x5a9b97, _0x365343), _0xd1ced3['arcTo'](_0x58185d + _0x26fdf2, _0x365343, _0x58185d + _0x26fdf2, _0x365343 + _0xccf021, _0x5a9b97), _0xd1ced3['arcTo'](_0x58185d + _0x26fdf2, _0x365343 + _0xccf021, _0x58185d, _0x365343 + _0xccf021, _0x5a9b97), _0xd1ced3['arcTo'](_0x58185d, _0x365343 + _0xccf021, _0x58185d, _0x365343, _0x5a9b97), _0xd1ced3['arcTo'](_0x58185d, _0x365343, _0x58185d + _0x26fdf2, _0x365343, _0x5a9b97), _0xd1ced3['closePath']();
}

function semi_round_rect(_0x193f2e, _0x3c779f, _0x16b7fb, _0x3c68c7, _0x5b1232, _0x1947fa) {
    _0x3c68c7 < 0x2 * _0x1947fa && (_0x1947fa = _0x3c68c7 / 0x2), _0x5b1232 < 0x2 * _0x1947fa && (_0x1947fa = _0x5b1232 / 0x2), 0x0 > _0x1947fa && (_0x1947fa = 0x0), _0x193f2e['beginPath'](), _0x193f2e['moveTo'](_0x3c779f + _0x1947fa, _0x16b7fb), _0x193f2e['arcTo'](_0x3c779f + _0x3c68c7, _0x16b7fb, _0x3c779f + _0x3c68c7, _0x16b7fb + _0x5b1232, 0x0), _0x193f2e['arcTo'](_0x3c779f + _0x3c68c7, _0x16b7fb + _0x5b1232, _0x3c779f, _0x16b7fb + _0x5b1232, _0x1947fa), _0x193f2e['arcTo'](_0x3c779f, _0x16b7fb + _0x5b1232, _0x3c779f, _0x16b7fb, 0x0), _0x193f2e['arcTo'](_0x3c779f, _0x16b7fb, _0x3c779f + _0x3c68c7, _0x16b7fb, _0x1947fa), _0x193f2e['closePath']();
}

function circle(_0x83ffe6, _0x36481b, _0x5e23a1, _0x94afcb) {
    _0x83ffe6['beginPath'](), _0x83ffe6['arc'](_0x36481b, _0x5e23a1, _0x94afcb, 0x0, Math['PI'] * 0x2);
}

function circle_angle(_0x3b4dbe, _0x39ef5e, _0x27bd48, _0x36890f, _0x16385c) {
    _0x3b4dbe['beginPath'](), _0x3b4dbe['lineCap'] = 'round', _0x3b4dbe['arc'](_0x39ef5e, _0x27bd48, _0x36890f, 0x0, Math['PI'] * 0x2 * _0x16385c);
}

function round_regular_polygon(_0x51f3df, _0x5f1e8e, _0x2a74f5, _0x8ebd99) {
    var _0x1bdc58 = Math['PI'] * 0x2 / _0x5f1e8e;
    _0x51f3df['beginPath']();
    var _0x518a4a = [{
            'x': _0x2a74f5,
            'y': 0x0
        }],
        _0x148d7a = [];
    for (var _0x2c38e0 = 0x1; _0x2c38e0 < _0x5f1e8e; _0x2c38e0++) {
        _0x518a4a['push']({
            'x': Math['cos'](_0x2c38e0 * _0x1bdc58) * _0x2a74f5,
            'y': Math['sin'](_0x2c38e0 * _0x1bdc58) * _0x2a74f5
        });
        var _0x50666e = _0x518a4a['length'];
        _0x148d7a['push'](Utils['middle_point'](_0x518a4a[_0x50666e - 0x2], _0x518a4a[_0x50666e - 0x1]));
    }
    _0x148d7a['push'](Utils['middle_point'](_0x518a4a[_0x518a4a['length'] - 0x1], _0x518a4a[0x0]));
    var _0x3e689b = _0x148d7a[_0x148d7a['length'] - 0x1];
    _0x51f3df['moveTo'](_0x3e689b['x'], _0x3e689b['y']);
    for (var _0x2c38e0 = 0x0; _0x2c38e0 < _0x5f1e8e; _0x2c38e0++) _0x51f3df['arcTo'](_0x518a4a[_0x2c38e0]['x'], _0x518a4a[_0x2c38e0]['y'], _0x148d7a[_0x2c38e0]['x'], _0x148d7a[_0x2c38e0]['y'], _0x8ebd99);
    _0x51f3df['closePath']();
}

function create_rotated_img(_0x4feb41, _0xa62269) {
    var _0x4bc91a = document['createElement']('canvas'),
        _0x530d44 = _0x4bc91a['getContext']('2d'),
        _0x539fc9 = Math['sqrt'](_0xa62269['width'] * _0xa62269['width'] + _0xa62269['height'] * _0xa62269['height']);
    return d2 = _0x539fc9 / 0x2, _0x4bc91a['width'] = _0x539fc9, _0x4bc91a['height'] = _0x539fc9, _0x530d44['translate'](d2, d2), _0x530d44['rotate'](_0x4feb41), _0x530d44['drawImage'](_0xa62269, -_0xa62269['width'] / 0x2, -_0xa62269['height'] / 0x2), _0x4bc91a;
}

function create_message(_0x6d48bb, _0x5b18b9) {
    var _0x375881 = document['createElement']('canvas'),
        _0x43ac77 = _0x375881['getContext']('2d'),
        _0x372ed8 = Math['floor'](_0x6d48bb * 0x1c),
        _0x514e03 = Math['floor'](_0x6d48bb * 0x14);
    _0x43ac77['font'] = _0x514e03 + 'px\x20Baloo\x20Paaji';
    var _0xdb976c = 0x8 * _0x6d48bb,
        _0x24d927 = _0x43ac77['measureText'](_0x5b18b9)['width'] + _0xdb976c * 0x2;
    return _0x375881['width'] = _0x24d927, _0x375881['height'] = _0x372ed8, round_rect(_0x43ac77, 0x0, 0x0, _0x24d927, _0x372ed8, 0xa * _0x6d48bb), _0x43ac77['globalAlpha'] = 0.5, fill_path(_0x43ac77, '#000'), _0x43ac77['globalAlpha'] = 0x1, (_0x43ac77['textBaseline'] = 'middle', _0x43ac77['font'] = _0x514e03 + 'px\x20Baloo\x20Paaji'), _0x43ac77['beginPath'](), _0x43ac77['fillStyle'] = '#FFF', _0x43ac77['fillText'](_0x5b18b9, _0xdb976c, _0x372ed8 / 0x2), _0x375881;
}

function create_accessory(_0x30c631, _0x106123, _0x5dda88) {
    var _0x29b7cc = document['createElement']('canvas'),
        _0xe1d136 = _0x29b7cc['getContext']('2d');
    _0x29b7cc['width'] = 0x78 * _0x30c631, _0x29b7cc['height'] = 0x6e * _0x30c631;
    if (_0x5dda88 == 0x1) circle(_0xe1d136, 0x23 * _0x30c631, 0x4b * _0x30c631, 19.72308292331602 * _0x30c631), fill_path(_0xe1d136, _0x106123[0x1], _0x106123[0x0], 0x4 * _0x30c631), _0xe1d136['save'](), _0xe1d136['translate'](0xb * _0x30c631, 0x4d * _0x30c631), round_rect(_0xe1d136, -0x4 * _0x30c631, -0x4 * _0x30c631, 0x8 * _0x30c631, 0x8 * _0x30c631, 0xa * _0x30c631), _0xe1d136['restore'](), fill_path(_0xe1d136, undefined, _0x106123[0x0], 0x4 * _0x30c631), _0xe1d136['beginPath'](), _0xe1d136['lineCap'] = 'round', _0xe1d136['lineJoin'] = 'round', _0xe1d136['moveTo'](0xb * _0x30c631, 0x51 * _0x30c631), _0xe1d136['bezierCurveTo'](0xd * _0x30c631, 0x69 * _0x30c631, 0x9 * _0x30c631, 0x6a * _0x30c631, 0x8 * _0x30c631, 0x5b * _0x30c631), fill_path(_0xe1d136, undefined, _0x106123[0x0], 0x4 * _0x30c631);
    else {
        if (_0x5dda88 == 0x2) circle(_0xe1d136, 0x55 * _0x30c631, 0x4b * _0x30c631, 0x10 * _0x30c631), fill_path(_0xe1d136, _0x106123[0x0], _0x106123[0x0], 0x4 * _0x30c631), _0xe1d136['scale'](-1.7 * _0x30c631, 1.7 * _0x30c631), _0xe1d136['translate'](-0x78 * _0x30c631, 0x0 * _0x30c631), _0xe1d136['beginPath'](), _0xe1d136['lineCap'] = 'round', _0xe1d136['lineJoin'] = 'round', _0xe1d136['moveTo'](0x14 * _0x30c631, 0x5f * _0x30c631), _0xe1d136['bezierCurveTo'](56.5 * _0x30c631, 0x36 * _0x30c631, 56.5 * _0x30c631, 0x36 * _0x30c631, 0x5d * _0x30c631, 0xd * _0x30c631), _0xe1d136['bezierCurveTo'](0x59 * _0x30c631, 0xd * _0x30c631, 0x59 * _0x30c631, 0xd * _0x30c631, 0x55 * _0x30c631, 0xd * _0x30c631), _0xe1d136['bezierCurveTo'](49.5 * _0x30c631, 0x35 * _0x30c631, 49.5 * _0x30c631, 0x35 * _0x30c631, 0xe * _0x30c631, 0x5d * _0x30c631), _0xe1d136['bezierCurveTo'](0xf * _0x30c631, 0x5e * _0x30c631, 0xf * _0x30c631, 0x5e * _0x30c631, 0x13 * _0x30c631, 0x5f * _0x30c631), _0xe1d136['closePath'](), fill_path(_0xe1d136, _0x106123[0x0], _0x106123[0x0], 0x4 * _0x30c631);
        else {
            if (_0x5dda88 == 0x3) _0xe1d136['translate'](-0x34 * _0x30c631, 0x0), _0xe1d136['save'](), _0xe1d136['translate'](84.5 * _0x30c631, 36.5 * _0x30c631), _0xe1d136['rotate'](-0.96), round_rect(_0xe1d136, -5.5 * _0x30c631, -15.5 * _0x30c631, 0xb * _0x30c631, 0x1f * _0x30c631, 0x4 * _0x30c631), _0xe1d136['restore'](), fill_path(_0xe1d136, _0x106123[0x0], _0x106123[0x1], 0x4 * _0x30c631), _0xe1d136['save'](), _0xe1d136['translate'](0x54 * _0x30c631, 0x24 * _0x30c631), _0xe1d136['rotate'](0.64), round_rect(_0xe1d136, -0x5 * _0x30c631, -0x10 * _0x30c631, 0xa * _0x30c631, 0x20 * _0x30c631, 0x4 * _0x30c631), _0xe1d136['restore'](), fill_path(_0xe1d136, _0x106123[0x0], _0x106123[0x1], 0x4 * _0x30c631), _0xe1d136['save'](), _0xe1d136['translate'](83.5 * _0x30c631, 36.5 * _0x30c631), _0xe1d136['rotate'](0.68), round_rect(_0xe1d136, -2.5 * _0x30c631, -6.5 * _0x30c631, 0x5 * _0x30c631, 0xd * _0x30c631, 0x4 * _0x30c631), _0xe1d136['restore'](), fill_path(_0xe1d136, _0x106123[0x1]);
            else {
                if (_0x5dda88 == 0x4) circle(_0xe1d136, 0x23 * _0x30c631, 0x55 * _0x30c631, 0x11 * _0x30c631), fill_path(_0xe1d136, _0x106123[0x1], _0x106123[0x0], 0x3 * _0x30c631), circle(_0xe1d136, 0x55 * _0x30c631, 0x55 * _0x30c631, 0x11 * _0x30c631), fill_path(_0xe1d136, _0x106123[0x1], _0x106123[0x0], 0x3 * _0x30c631), _0xe1d136['beginPath'](), _0xe1d136['lineCap'] = 'round', _0xe1d136['lineJoin'] = 'round', _0xe1d136['moveTo'](0x35 * _0x30c631, 0x56 * _0x30c631), _0xe1d136['bezierCurveTo'](0x3b * _0x30c631, 0x53 * _0x30c631, 0x3f * _0x30c631, 0x53 * _0x30c631, 0x43 * _0x30c631, 0x56 * _0x30c631), fill_path(_0xe1d136, undefined, _0x106123[0x0], 0x4 * _0x30c631);
                else {
                    if (_0x5dda88 == 0x5) _0xe1d136['scale'](1.2, 1.2), _0xe1d136['translate'](-0x1b * _0x30c631, -0x8 * _0x30c631), _0xe1d136['scale'](1.2, 1.2), _0xe1d136['translate'](-0xa * _0x30c631, 0x0), _0xe1d136['beginPath'](), _0xe1d136['lineCap'] = 'round', _0xe1d136['lineJoin'] = 'round', _0xe1d136['moveTo'](0x61 * _0x30c631, 0x17 * _0x30c631), _0xe1d136['bezierCurveTo'](0x69 * _0x30c631, 0x18 * _0x30c631, 0x6b * _0x30c631, 0x25 * _0x30c631, 0x61 * _0x30c631, 0x27 * _0x30c631), _0xe1d136['bezierCurveTo'](0x55 * _0x30c631, 0x28 * _0x30c631, 0x54 * _0x30c631, 0x16 * _0x30c631, 0x61 * _0x30c631, 0x17 * _0x30c631), _0xe1d136['closePath'](), fill_path(_0xe1d136, undefined, _0x106123[0x0], 0x3 * _0x30c631), _0xe1d136['beginPath'](), _0xe1d136['lineCap'] = 'round', _0xe1d136['lineJoin'] = 'round', _0xe1d136['moveTo'](0x60 * _0x30c631, 0x18 * _0x30c631), _0xe1d136['bezierCurveTo'](0x60 * _0x30c631, 30.5 * _0x30c631, 0x60 * _0x30c631, 30.5 * _0x30c631, 0x60 * _0x30c631, 0x25 * _0x30c631), _0xe1d136['closePath'](), fill_path(_0xe1d136, undefined, _0x106123[0x0], 0x3 * _0x30c631), _0xe1d136['translate'](0x0, -0x2 * _0x30c631), _0xe1d136['beginPath'](), _0xe1d136['lineCap'] = 'round', _0xe1d136['lineJoin'] = 'round', _0xe1d136['moveTo'](0x58 * _0x30c631, 0x25 * _0x30c631), _0xe1d136['bezierCurveTo'](0x5d * _0x30c631, 0x21 * _0x30c631, 91.5 * _0x30c631, 34.5 * _0x30c631, 0x5f * _0x30c631, 0x20 * _0x30c631), _0xe1d136['bezierCurveTo'](98.5 * _0x30c631, 0x22 * _0x30c631, 98.5 * _0x30c631, 0x22 * _0x30c631, 0x66 * _0x30c631, 0x24 * _0x30c631), fill_path(_0xe1d136, undefined, _0x106123[0x0], 0x3 * _0x30c631);
                    else {
                        if (_0x5dda88 == 0x6) circle(_0xe1d136, 0xd * _0x30c631, 0x4f * _0x30c631, 0x5 * _0x30c631), fill_path(_0xe1d136, _0x106123[0x0]), circle(_0xe1d136, 0x6a * _0x30c631, 0x4f * _0x30c631, 0x5 * _0x30c631), fill_path(_0xe1d136, _0x106123[0x0]);
                        else {
                            if (_0x5dda88 == 0x7) _0xe1d136['translate'](0x0 * _0x30c631, 0x5 * _0x30c631), _0xe1d136['globalAlpha'] = 0.5, _0xe1d136['beginPath'](), _0xe1d136['lineCap'] = 'round', _0xe1d136['lineJoin'] = 'round', _0xe1d136['moveTo'](0x1b * _0x30c631, 14.399993896484375 * _0x30c631), _0xe1d136['bezierCurveTo'](0x1d * _0x30c631, 4.399993896484375 * _0x30c631, 0x2c * _0x30c631, 16.399993896484375 * _0x30c631, 0x25 * _0x30c631, 21.399993896484375 * _0x30c631), _0xe1d136['bezierCurveTo'](0x2f * _0x30c631, 17.399993896484375 * _0x30c631, 0x2d * _0x30c631, 36.399993896484375 * _0x30c631, 0x25 * _0x30c631, 32.399993896484375 * _0x30c631), _0xe1d136['bezierCurveTo'](0x2c * _0x30c631, 40.399993896484375 * _0x30c631, 0x1c * _0x30c631, 47.399993896484375 * _0x30c631, 0x1a * _0x30c631, 37.399993896484375 * _0x30c631), _0xe1d136['bezierCurveTo'](0x16 * _0x30c631, 46.399993896484375 * _0x30c631, 0x9 * _0x30c631, 37.399993896484375 * _0x30c631, 0x10 * _0x30c631, 30.399993896484375 * _0x30c631), _0xe1d136['bezierCurveTo'](0x6 * _0x30c631, 34.399993896484375 * _0x30c631, 0x9 * _0x30c631, 15.399993896484375 * _0x30c631, 0x12 * _0x30c631, 19.399993896484375 * _0x30c631), _0xe1d136['bezierCurveTo'](0xa * _0x30c631, 12.399993896484375 * _0x30c631, 0x1a * _0x30c631, 7.399993896484375 * _0x30c631, 0x1a * _0x30c631, 14.399993896484375 * _0x30c631), _0xe1d136['closePath'](), fill_path(_0xe1d136, _0x106123[0x3]), _0xe1d136['globalAlpha'] = 0x1, _0xe1d136['translate'](0x0 * _0x30c631, -0x5 * _0x30c631), _0xe1d136['beginPath'](), _0xe1d136['lineCap'] = 'round', _0xe1d136['lineJoin'] = 'round', _0xe1d136['moveTo'](0x1b * _0x30c631, 14.399993896484375 * _0x30c631), _0xe1d136['bezierCurveTo'](0x1d * _0x30c631, 4.399993896484375 * _0x30c631, 0x2c * _0x30c631, 16.399993896484375 * _0x30c631, 0x25 * _0x30c631, 21.399993896484375 * _0x30c631), _0xe1d136['bezierCurveTo'](0x2f * _0x30c631, 17.399993896484375 * _0x30c631, 0x2d * _0x30c631, 36.399993896484375 * _0x30c631, 0x25 * _0x30c631, 32.399993896484375 * _0x30c631), _0xe1d136['bezierCurveTo'](0x2c * _0x30c631, 40.399993896484375 * _0x30c631, 0x1c * _0x30c631, 47.399993896484375 * _0x30c631, 0x1a * _0x30c631, 37.399993896484375 * _0x30c631), _0xe1d136['bezierCurveTo'](0x16 * _0x30c631, 46.399993896484375 * _0x30c631, 0x9 * _0x30c631, 37.399993896484375 * _0x30c631, 0x10 * _0x30c631, 30.399993896484375 * _0x30c631), _0xe1d136['bezierCurveTo'](0x6 * _0x30c631, 34.399993896484375 * _0x30c631, 0x9 * _0x30c631, 15.399993896484375 * _0x30c631, 0x12 * _0x30c631, 19.399993896484375 * _0x30c631), _0xe1d136['bezierCurveTo'](0xa * _0x30c631, 12.399993896484375 * _0x30c631, 0x1a * _0x30c631, 7.399993896484375 * _0x30c631, 0x1a * _0x30c631, 14.399993896484375 * _0x30c631), _0xe1d136['closePath'](), fill_path(_0xe1d136, _0x106123[0x1], _0x106123[0x2], 0x2 * _0x30c631), circle(_0xe1d136, 0x1b * _0x30c631, 26.800003051757812 * _0x30c631, 0x5 * _0x30c631), fill_path(_0xe1d136, _0x106123[0x0]);
                            else _0x5dda88 == 0x8 && (_0xe1d136['translate'](-0x20 * _0x30c631, -0x13 * _0x30c631), _0xe1d136['beginPath'](), _0xe1d136['lineCap'] = 'round', _0xe1d136['lineJoin'] = 'round', _0xe1d136['moveTo'](0x7b * _0x30c631, 0x2e * _0x30c631), _0xe1d136['bezierCurveTo'](0x84 * _0x30c631, 0x2e * _0x30c631, 0x87 * _0x30c631, 0x27 * _0x30c631, 0x86 * _0x30c631, 0x21 * _0x30c631), _0xe1d136['bezierCurveTo'](0x91 * _0x30c631, 0x2b * _0x30c631, 0x8e * _0x30c631, 0x41 * _0x30c631, 0x7f * _0x30c631, 0x42 * _0x30c631), _0xe1d136['bezierCurveTo'](0x76 * _0x30c631, 0x3d * _0x30c631, 0x77 * _0x30c631, 0x33 * _0x30c631, 0x7b * _0x30c631, 0x2e * _0x30c631), _0xe1d136['closePath'](), fill_path(_0xe1d136, _0x106123[0x0], _0x106123[0x1], 0x4 * _0x30c631), _0xe1d136['beginPath'](), _0xe1d136['lineCap'] = 'round', _0xe1d136['lineJoin'] = 'round', _0xe1d136['moveTo'](0x31 * _0x30c631, 0x20 * _0x30c631), _0xe1d136['bezierCurveTo'](0x31 * _0x30c631, 0x2c * _0x30c631, 0x38 * _0x30c631, 0x2c * _0x30c631, 0x3d * _0x30c631, 0x2e * _0x30c631), _0xe1d136['bezierCurveTo'](0x43 * _0x30c631, 0x34 * _0x30c631, 0x41 * _0x30c631, 0x41 * _0x30c631, 0x37 * _0x30c631, 0x42 * _0x30c631), _0xe1d136['bezierCurveTo'](0x25 * _0x30c631, 0x3c * _0x30c631, 0x2a * _0x30c631, 0x26 * _0x30c631, 0x31 * _0x30c631, 0x20 * _0x30c631), _0xe1d136['closePath'](), fill_path(_0xe1d136, _0x106123[0x0], _0x106123[0x1], 0x4 * _0x30c631));
                        }
                    }
                }
            }
        }
    }
    return _0x29b7cc;
}

function create_hurt_player(_0x3a5b8b, _0x44237f) {
    var _0x455283 = document['createElement']('canvas'),
        _0x1554a8 = _0x455283['getContext']('2d'),
        _0xdedd1c = _0x3a5b8b * 0x78,
        _0x31749b = _0x3a5b8b * 0x6e,
        _0x33b139 = _0xdedd1c / 0x2,
        _0x22f1e5 = _0x31749b / 0x2,
        _0x46a3f3 = _0x3a5b8b * 0x14,
        _0x1cb347 = _0x3a5b8b * 0x70,
        _0x1de2b2 = _0x3a5b8b * 0x52,
        _0x1fa47d = _0x1cb347 / 0x2,
        _0x1a0f53 = _0x1de2b2 / 0x2,
        _0x497ce7 = _0x3a5b8b * 0x4;
    return _0x455283['width'] = _0xdedd1c, _0x455283['height'] = _0x31749b, _0x1554a8['globalAlpha'] = 0x1, _0x1554a8['translate'](_0x33b139, _0x22f1e5), round_rect(_0x1554a8, -_0x1fa47d, -_0x1a0f53, _0x1cb347, _0x1de2b2, _0x46a3f3), fill_path(_0x1554a8, _0x44237f, _0x44237f, _0x497ce7), _0x455283;
}

function create_player(_0x237efa, _0x3338a4, _0x26df91) {
    var _0x997fd2 = document['createElement']('canvas'),
        _0x58ae4b = _0x997fd2['getContext']('2d');
    _0x997fd2['width'] = 0xb0 * _0x237efa, _0x997fd2['height'] = 0x7f * _0x237efa;
    if (_0x26df91 == 0x8) _0x58ae4b['globalAlpha'] = 0.3, _0x58ae4b['save'](), _0x58ae4b['translate'](0x57 * _0x237efa, 64.5 * _0x237efa), round_rect(_0x58ae4b, -0x38 * _0x237efa, -41.5 * _0x237efa, 0x70 * _0x237efa, 0x53 * _0x237efa, 0x12 * _0x237efa), _0x58ae4b['restore'](), fill_path(_0x58ae4b, _0x3338a4[0x0], _0x3338a4[0x1], 0x4 * _0x237efa), _0x58ae4b['save'](), _0x58ae4b['translate'](0x52 * _0x237efa, 69.5 * _0x237efa), round_rect(_0x58ae4b, -0x33 * _0x237efa, -36.5 * _0x237efa, 0x66 * _0x237efa, 0x49 * _0x237efa, 0x12 * _0x237efa), _0x58ae4b['restore'](), fill_path(_0x58ae4b, _0x3338a4[0x2], _0x3338a4[0x1], 0x4 * _0x237efa), _0x58ae4b['beginPath'](), _0x58ae4b['lineCap'] = 'round', _0x58ae4b['lineJoin'] = 'round', _0x58ae4b['moveTo'](0x37 * _0x237efa, 0x29 * _0x237efa), _0x58ae4b['bezierCurveTo'](0x26 * _0x237efa, 0x29 * _0x237efa, 0x25 * _0x237efa, 0x32 * _0x237efa, 0x26 * _0x237efa, 0x3d * _0x237efa), _0x58ae4b['bezierCurveTo'](0x2a * _0x237efa, 0x32 * _0x237efa, 0x2e * _0x237efa, 0x2e * _0x237efa, 0x37 * _0x237efa, 0x2a * _0x237efa), _0x58ae4b['closePath'](), fill_path(_0x58ae4b, _0x3338a4[0x3]), _0x58ae4b['globalAlpha'] = 0x1, _0x58ae4b['translate'](0x1a * _0x237efa, 0xa * _0x237efa), circle(_0x58ae4b, 0x23 * _0x237efa, 0x4b * _0x237efa, 0xf * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x4]), circle(_0x58ae4b, 0x55 * _0x237efa, 0x4b * _0x237efa, 0xf * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x4]), circle(_0x58ae4b, 0x20 * _0x237efa, 0x43 * _0x237efa, 0x5 * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x5]), circle(_0x58ae4b, 0x52 * _0x237efa, 0x43 * _0x237efa, 0x5 * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x5]);
    else {
        if (_0x26df91 == 0x9) {
            var _0x997fd2 = document['createElement']('canvas'),
                _0x58ae4b = _0x997fd2['getContext']('2d');
            _0x997fd2['width'] = 0x14c * _0x237efa, _0x997fd2['height'] = 0x7f * _0x237efa, _0x58ae4b['globalAlpha'] = 0.5, _0x58ae4b['translate'](0x0, -0x24 * _0x237efa), _0x58ae4b['save'](), _0x58ae4b['translate'](165.25 * _0x237efa, 106.84375 * _0x237efa), round_rect(_0x58ae4b, -56.5 * _0x237efa, -41.5 * _0x237efa, 0x71 * _0x237efa, 0x53 * _0x237efa, 0x12 * _0x237efa), _0x58ae4b['restore'](), fill_path(_0x58ae4b, _0x3338a4[0x0]), _0x58ae4b['globalAlpha'] = 0x1, _0x58ae4b['translate'](0x0, 0x14 * _0x237efa), _0x58ae4b['beginPath'](), _0x58ae4b['lineCap'] = 'round', _0x58ae4b['lineJoin'] = 'round', _0x58ae4b['moveTo'](210.75 * _0x237efa, 72.84375 * _0x237efa), _0x58ae4b['bezierCurveTo'](238.75 * _0x237efa, 74.84375 * _0x237efa, 270.75 * _0x237efa, 85.84375 * _0x237efa, 269.75 * _0x237efa, 90.84375 * _0x237efa), _0x58ae4b['bezierCurveTo'](268.75 * _0x237efa, 94.84375 * _0x237efa, 221.75 * _0x237efa, 81.84375 * _0x237efa, 206.75 * _0x237efa, 85.84375 * _0x237efa), _0x58ae4b['closePath'](), fill_path(_0x58ae4b, _0x3338a4[0x1], _0x3338a4[0x2], 0x4 * _0x237efa), _0x58ae4b['beginPath'](), _0x58ae4b['lineCap'] = 'round', _0x58ae4b['lineJoin'] = 'round', _0x58ae4b['moveTo'](208.75 * _0x237efa, 69.84375 * _0x237efa), _0x58ae4b['bezierCurveTo'](241.75 * _0x237efa, 61.84375 * _0x237efa, 265.75 * _0x237efa, 65.84375 * _0x237efa, 286.75 * _0x237efa, 69.84375 * _0x237efa), _0x58ae4b['bezierCurveTo'](290.75 * _0x237efa, 75.84375 * _0x237efa, 225.75 * _0x237efa, 69.84375 * _0x237efa, 215.75 * _0x237efa, 80.84375 * _0x237efa), _0x58ae4b['closePath'](), fill_path(_0x58ae4b, _0x3338a4[0x1], _0x3338a4[0x2], 0x4 * _0x237efa), _0x58ae4b['beginPath'](), _0x58ae4b['lineCap'] = 'round', _0x58ae4b['lineJoin'] = 'round', _0x58ae4b['moveTo'](209.75 * _0x237efa, 69.84375 * _0x237efa), _0x58ae4b['bezierCurveTo'](228.75 * _0x237efa, 51.84375 * _0x237efa, 265.75 * _0x237efa, 46.84375 * _0x237efa, 294.75 * _0x237efa, 51.84375 * _0x237efa), _0x58ae4b['bezierCurveTo'](301.75 * _0x237efa, 55.84375 * _0x237efa, 224.75 * _0x237efa, 60.84375 * _0x237efa, 216.75 * _0x237efa, 80.84375 * _0x237efa), _0x58ae4b['closePath'](), fill_path(_0x58ae4b, _0x3338a4[0x1], _0x3338a4[0x2], 0x4 * _0x237efa), _0x58ae4b['beginPath'](), _0x58ae4b['lineCap'] = 'round', _0x58ae4b['lineJoin'] = 'round', _0x58ae4b['moveTo'](193.75 * _0x237efa, 72.84375 * _0x237efa), _0x58ae4b['bezierCurveTo'](206.75 * _0x237efa, 47.84375 * _0x237efa, 221.75 * _0x237efa, 37.84375 * _0x237efa, 249.75 * _0x237efa, 35.84375 * _0x237efa), _0x58ae4b['bezierCurveTo'](264.75 * _0x237efa, 34.84375 * _0x237efa, 305.75 * _0x237efa, 16.84375 * _0x237efa, 300.75 * _0x237efa, 24.84375 * _0x237efa), _0x58ae4b['bezierCurveTo'](273.75 * _0x237efa, 45.84375 * _0x237efa, 245.75 * _0x237efa, 46.84375 * _0x237efa, 235.75 * _0x237efa, 62.84375 * _0x237efa), _0x58ae4b['bezierCurveTo'](218.75 * _0x237efa, 82.84375 * _0x237efa, 215.75 * _0x237efa, 87.84375 * _0x237efa, 199.75 * _0x237efa, 84.84375 * _0x237efa), _0x58ae4b['closePath'](), fill_path(_0x58ae4b, _0x3338a4[0x1], _0x3338a4[0x2], 0x4 * _0x237efa), _0x58ae4b['beginPath'](), _0x58ae4b['lineCap'] = 'round', _0x58ae4b['lineJoin'] = 'round', _0x58ae4b['moveTo'](126.75 * _0x237efa, 80.34375 * _0x237efa), _0x58ae4b['bezierCurveTo'](94.75 * _0x237efa, 88.34375 * _0x237efa, 83.75 * _0x237efa, 88.34375 * _0x237efa, 65.75 * _0x237efa, 90.34375 * _0x237efa), _0x58ae4b['bezierCurveTo'](61.75 * _0x237efa, 87.34375 * _0x237efa, 86.75 * _0x237efa, 77.34375 * _0x237efa, 129.75 * _0x237efa, 70.34375 * _0x237efa), _0x58ae4b['closePath'](), fill_path(_0x58ae4b, _0x3338a4[0x1], _0x3338a4[0x2], 0x4 * _0x237efa), _0x58ae4b['beginPath'](), _0x58ae4b['lineCap'] = 'round', _0x58ae4b['lineJoin'] = 'round', _0x58ae4b['moveTo'](120.75 * _0x237efa, 72.34375 * _0x237efa), _0x58ae4b['bezierCurveTo'](128.75 * _0x237efa, 62.34375 * _0x237efa, 98.75 * _0x237efa, 64.34375 * _0x237efa, 49.75 * _0x237efa, 68.34375 * _0x237efa), _0x58ae4b['bezierCurveTo'](34.75 * _0x237efa, 75.34375 * _0x237efa, 101.75 * _0x237efa, 72.34375 * _0x237efa, 124.75 * _0x237efa, 78.34375 * _0x237efa), _0x58ae4b['closePath'](), fill_path(_0x58ae4b, _0x3338a4[0x1], _0x3338a4[0x2], 0x4 * _0x237efa), _0x58ae4b['beginPath'](), _0x58ae4b['lineCap'] = 'round', _0x58ae4b['lineJoin'] = 'round', _0x58ae4b['moveTo'](128.75 * _0x237efa, 76.34375 * _0x237efa), _0x58ae4b['bezierCurveTo'](111.75 * _0x237efa, 54.34375 * _0x237efa, 69.75 * _0x237efa, 48.34375 * _0x237efa, 39.75 * _0x237efa, 50.34375 * _0x237efa), _0x58ae4b['bezierCurveTo'](26.75 * _0x237efa, 53.34375 * _0x237efa, 86.75 * _0x237efa, 59.34375 * _0x237efa, 123.75 * _0x237efa, 78.34375 * _0x237efa), _0x58ae4b['closePath'](), fill_path(_0x58ae4b, _0x3338a4[0x1], _0x3338a4[0x2], 0x4 * _0x237efa), _0x58ae4b['beginPath'](), _0x58ae4b['lineCap'] = 'round', _0x58ae4b['lineJoin'] = 'round', _0x58ae4b['moveTo'](143.75 * _0x237efa, 74.34375 * _0x237efa), _0x58ae4b['bezierCurveTo'](128.75 * _0x237efa, 48.34375 * _0x237efa, 108.75 * _0x237efa, 35.34375 * _0x237efa, 81.75 * _0x237efa, 35.34375 * _0x237efa), _0x58ae4b['bezierCurveTo'](63.75 * _0x237efa, 33.34375 * _0x237efa, 26.75 * _0x237efa, 15.34375 * _0x237efa, 29.75 * _0x237efa, 25.34375 * _0x237efa), _0x58ae4b['bezierCurveTo'](33.75 * _0x237efa, 30.34375 * _0x237efa, 49.75 * _0x237efa, 40.34375 * _0x237efa, 70.75 * _0x237efa, 49.34375 * _0x237efa), _0x58ae4b['bezierCurveTo'](94.75 * _0x237efa, 54.34375 * _0x237efa, 104.75 * _0x237efa, 72.34375 * _0x237efa, 128.75 * _0x237efa, 88.34375 * _0x237efa), _0x58ae4b['closePath'](), fill_path(_0x58ae4b, _0x3338a4[0x1], _0x3338a4[0x2], 0x4 * _0x237efa), _0x58ae4b['translate'](0x0, -0x1c * _0x237efa), _0x58ae4b['save'](), _0x58ae4b['translate'](165.25 * _0x237efa, 106.84375 * _0x237efa), round_rect(_0x58ae4b, -56.5 * _0x237efa, -41.5 * _0x237efa, 0x71 * _0x237efa, 0x53 * _0x237efa, 0x12 * _0x237efa), _0x58ae4b['restore'](), fill_path(_0x58ae4b, _0x3338a4[0x1], _0x3338a4[0x2], 0x4 * _0x237efa), _0x58ae4b['translate'](0x1c * _0x237efa, 0xf * _0x237efa), _0x58ae4b['translate'](0x0, 0x8 * _0x237efa), _0x58ae4b['globalAlpha'] = 0.5, _0x58ae4b['beginPath'](), _0x58ae4b['lineCap'] = 'round', _0x58ae4b['lineJoin'] = 'round', _0x58ae4b['moveTo'](0x53 * _0x237efa, 0x34 * _0x237efa), _0x58ae4b['bezierCurveTo'](0x4e * _0x237efa, 0x41 * _0x237efa, 0x6e * _0x237efa, 0x48 * _0x237efa, 0x8b * _0x237efa, 0x47 * _0x237efa), _0x58ae4b['bezierCurveTo'](0xb0 * _0x237efa, 0x47 * _0x237efa, 0xc1 * _0x237efa, 0x3d * _0x237efa, 0xbf * _0x237efa, 0x36 * _0x237efa), _0x58ae4b['bezierCurveTo'](0xca * _0x237efa, 0x3a * _0x237efa, 0xc6 * _0x237efa, 0x48 * _0x237efa, 0xbb * _0x237efa, 0x4b * _0x237efa), _0x58ae4b['bezierCurveTo'](0x8f * _0x237efa, 0x57 * _0x237efa, 0x6b * _0x237efa, 0x4f * _0x237efa, 0x59 * _0x237efa, 0x4b * _0x237efa), _0x58ae4b['bezierCurveTo'](0x48 * _0x237efa, 0x45 * _0x237efa, 0x4a * _0x237efa, 0x3a * _0x237efa, 0x53 * _0x237efa, 0x34 * _0x237efa), _0x58ae4b['closePath'](), fill_path(_0x58ae4b, _0x3338a4[0x0]), _0x58ae4b['globalAlpha'] = 0x1, _0x58ae4b['translate'](0x0 * _0x237efa, -0x8 * _0x237efa), _0x58ae4b['beginPath'](), _0x58ae4b['lineCap'] = 'round', _0x58ae4b['lineJoin'] = 'round', _0x58ae4b['moveTo'](0x53 * _0x237efa, 0x34 * _0x237efa), _0x58ae4b['bezierCurveTo'](0x4e * _0x237efa, 0x41 * _0x237efa, 0x6e * _0x237efa, 0x48 * _0x237efa, 0x8b * _0x237efa, 0x47 * _0x237efa), _0x58ae4b['bezierCurveTo'](0xb0 * _0x237efa, 0x47 * _0x237efa, 0xc1 * _0x237efa, 0x3d * _0x237efa, 0xbf * _0x237efa, 0x36 * _0x237efa), _0x58ae4b['bezierCurveTo'](0xca * _0x237efa, 0x3a * _0x237efa, 0xc6 * _0x237efa, 0x48 * _0x237efa, 0xbb * _0x237efa, 0x4b * _0x237efa), _0x58ae4b['bezierCurveTo'](0x8f * _0x237efa, 0x57 * _0x237efa, 0x6b * _0x237efa, 0x4f * _0x237efa, 0x59 * _0x237efa, 0x4b * _0x237efa), _0x58ae4b['bezierCurveTo'](0x48 * _0x237efa, 0x45 * _0x237efa, 0x4a * _0x237efa, 0x3a * _0x237efa, 0x53 * _0x237efa, 0x34 * _0x237efa), _0x58ae4b['closePath'](), fill_path(_0x58ae4b, _0x3338a4[0x5], _0x3338a4[0x6], 0x4 * _0x237efa), _0x58ae4b['translate'](-0x1c * _0x237efa, -0xf * _0x237efa), circle(_0x58ae4b, 141.75 * _0x237efa, 127.34375 * _0x237efa, 0xf * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x3]), circle(_0x58ae4b, 191.75 * _0x237efa, 127.09375 * _0x237efa, 0xf * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x3]), circle(_0x58ae4b, 138.75 * _0x237efa, 119.34375 * _0x237efa, 0x5 * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x4]), circle(_0x58ae4b, 188.75 * _0x237efa, 119.34375 * _0x237efa, 0x5 * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x4]), _0x58ae4b['beginPath'](), _0x58ae4b['lineCap'] = 'round', _0x58ae4b['lineJoin'] = 'round', _0x58ae4b['moveTo'](125.75 * _0x237efa, 139.34375 * _0x237efa), _0x58ae4b['bezierCurveTo'](134.75 * _0x237efa, 134.34375 * _0x237efa, 143.75 * _0x237efa, 134.34375 * _0x237efa, 156.75 * _0x237efa, 139.34375 * _0x237efa), _0x58ae4b['bezierCurveTo'](153.25 * _0x237efa, 141.84375 * _0x237efa, 153.25 * _0x237efa, 141.84375 * _0x237efa, 149.75 * _0x237efa, 144.34375 * _0x237efa), _0x58ae4b['bezierCurveTo'](140.25 * _0x237efa, 144.34375 * _0x237efa, 140.25 * _0x237efa, 144.34375 * _0x237efa, 130.75 * _0x237efa, 144.34375 * _0x237efa), _0x58ae4b['closePath'](), fill_path(_0x58ae4b, _0x3338a4[0x1]), _0x58ae4b['beginPath'](), _0x58ae4b['lineCap'] = 'round', _0x58ae4b['lineJoin'] = 'round', _0x58ae4b['moveTo'](176.75 * _0x237efa, 139.34375 * _0x237efa), _0x58ae4b['bezierCurveTo'](183.75 * _0x237efa, 135.34375 * _0x237efa, 199.75 * _0x237efa, 135.34375 * _0x237efa, 205.75 * _0x237efa, 139.34375 * _0x237efa), _0x58ae4b['bezierCurveTo'](203.25 * _0x237efa, 141.34375 * _0x237efa, 203.25 * _0x237efa, 141.34375 * _0x237efa, 200.75 * _0x237efa, 143.34375 * _0x237efa), _0x58ae4b['bezierCurveTo'](190.75 * _0x237efa, 143.84375 * _0x237efa, 190.75 * _0x237efa, 143.84375 * _0x237efa, 180.75 * _0x237efa, 144.34375 * _0x237efa), _0x58ae4b['closePath'](), fill_path(_0x58ae4b, _0x3338a4[0x1]);
        } else {
            _0x58ae4b['globalAlpha'] = 0.75, _0x58ae4b['translate'](0x0, 0x8 * _0x237efa), _0x58ae4b['save'](), _0x58ae4b['translate'](0x57 * _0x237efa, 64.5 * _0x237efa), round_rect(_0x58ae4b, -0x38 * _0x237efa, -41.5 * _0x237efa, 0x70 * _0x237efa, 0x53 * _0x237efa, 0x12 * _0x237efa), _0x58ae4b['restore'](), fill_path(_0x58ae4b, _0x3338a4[0x0]), _0x58ae4b['globalAlpha'] = 0x1, _0x58ae4b['translate'](0x0, -0x8 * _0x237efa), _0x58ae4b['save'](), _0x58ae4b['translate'](0x57 * _0x237efa, 64.5 * _0x237efa), round_rect(_0x58ae4b, -0x38 * _0x237efa, -41.5 * _0x237efa, 0x70 * _0x237efa, 0x53 * _0x237efa, 0x12 * _0x237efa), _0x58ae4b['restore'](), fill_path(_0x58ae4b, _0x3338a4[0x1], _0x3338a4[0x2], 0x4 * _0x237efa);
            if (_0x26df91 == 0x0) _0x58ae4b['translate'](0x1b * _0x237efa, 0xa * _0x237efa), circle(_0x58ae4b, 0x23 * _0x237efa, 0x4b * _0x237efa, 0xf * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x3]), circle(_0x58ae4b, 0x55 * _0x237efa, 0x4b * _0x237efa, 0xf * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x3]), circle(_0x58ae4b, 0x20 * _0x237efa, 0x43 * _0x237efa, 0x5 * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x4]), circle(_0x58ae4b, 0x52 * _0x237efa, 0x43 * _0x237efa, 0x5 * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x4]);
            else {
                if (_0x26df91 == 0x1) _0x58ae4b['beginPath'](), _0x58ae4b['lineCap'] = 'round', _0x58ae4b['lineJoin'] = 'round', _0x58ae4b['moveTo'](0x23 * _0x237efa, 0x49 * _0x237efa), _0x58ae4b['bezierCurveTo'](0x28 * _0x237efa, 0x48 * _0x237efa, 0x26 * _0x237efa, 0x44 * _0x237efa, 0x23 * _0x237efa, 0x43 * _0x237efa), _0x58ae4b['bezierCurveTo'](0x19 * _0x237efa, 0x43 * _0x237efa, 0x15 * _0x237efa, 0x41 * _0x237efa, 0x10 * _0x237efa, 0x3d * _0x237efa), _0x58ae4b['bezierCurveTo'](0xa * _0x237efa, 0x3c * _0x237efa, 0x10 * _0x237efa, 0x40 * _0x237efa, 0x14 * _0x237efa, 0x43 * _0x237efa), _0x58ae4b['bezierCurveTo'](0x3 * _0x237efa, 0x46 * _0x237efa, 0xc * _0x237efa, 68.5 * _0x237efa, 0x4 * _0x237efa, 0x46 * _0x237efa), _0x58ae4b['bezierCurveTo'](0x2 * _0x237efa, 0x47 * _0x237efa, 0x6 * _0x237efa, 0x48 * _0x237efa, 0xd * _0x237efa, 0x49 * _0x237efa), _0x58ae4b['bezierCurveTo'](12.5 * _0x237efa, 76.5 * _0x237efa, 12.5 * _0x237efa, 76.5 * _0x237efa, 0xc * _0x237efa, 0x50 * _0x237efa), _0x58ae4b['bezierCurveTo'](0xc * _0x237efa, 0x53 * _0x237efa, 0xf * _0x237efa, 0x50 * _0x237efa, 0x12 * _0x237efa, 0x49 * _0x237efa), _0x58ae4b['bezierCurveTo'](26.5 * _0x237efa, 73.5 * _0x237efa, 26.5 * _0x237efa, 73.5 * _0x237efa, 0x23 * _0x237efa, 0x4a * _0x237efa), _0x58ae4b['closePath'](), fill_path(_0x58ae4b, _0x3338a4[0x5], _0x3338a4[0x6], 0x4 * _0x237efa), _0x58ae4b['beginPath'](), _0x58ae4b['lineCap'] = 'round', _0x58ae4b['lineJoin'] = 'round', _0x58ae4b['moveTo'](0x86 * _0x237efa, 0x40 * _0x237efa), _0x58ae4b['bezierCurveTo'](141.5 * _0x237efa, 0x40 * _0x237efa, 141.5 * _0x237efa, 0x40 * _0x237efa, 0x95 * _0x237efa, 0x40 * _0x237efa), _0x58ae4b['bezierCurveTo'](0x99 * _0x237efa, 0x3b * _0x237efa, 0x9c * _0x237efa, 0x38 * _0x237efa, 0x9f * _0x237efa, 0x38 * _0x237efa), _0x58ae4b['bezierCurveTo'](0xa1 * _0x237efa, 0x39 * _0x237efa, 0xa0 * _0x237efa, 0x3c * _0x237efa, 0x9b * _0x237efa, 0x41 * _0x237efa), _0x58ae4b['bezierCurveTo'](0xa5 * _0x237efa, 0x47 * _0x237efa, 0xa8 * _0x237efa, 0x48 * _0x237efa, 0xa9 * _0x237efa, 0x4a * _0x237efa), _0x58ae4b['bezierCurveTo'](0xa9 * _0x237efa, 0x4c * _0x237efa, 0x9f * _0x237efa, 0x47 * _0x237efa, 0x9c * _0x237efa, 0x48 * _0x237efa), _0x58ae4b['bezierCurveTo'](0x9a * _0x237efa, 0x48 * _0x237efa, 0x9b * _0x237efa, 0x4b * _0x237efa, 0x9c * _0x237efa, 0x4f * _0x237efa), _0x58ae4b['bezierCurveTo'](0x9b * _0x237efa, 0x51 * _0x237efa, 0x99 * _0x237efa, 0x4e * _0x237efa, 0x96 * _0x237efa, 0x48 * _0x237efa), _0x58ae4b['bezierCurveTo'](0x8e * _0x237efa, 71.5 * _0x237efa, 0x8e * _0x237efa, 71.5 * _0x237efa, 0x86 * _0x237efa, 0x47 * _0x237efa), _0x58ae4b['bezierCurveTo'](0x82 * _0x237efa, 0x45 * _0x237efa, 0x83 * _0x237efa, 0x41 * _0x237efa, 0x87 * _0x237efa, 0x40 * _0x237efa), _0x58ae4b['closePath'](), fill_path(_0x58ae4b, _0x3338a4[0x5], _0x3338a4[0x6], 0x4 * _0x237efa), _0x58ae4b['beginPath'](), _0x58ae4b['lineCap'] = 'round', _0x58ae4b['lineJoin'] = 'round', _0x58ae4b['moveTo'](0x50 * _0x237efa, 0x5f * _0x237efa), _0x58ae4b['bezierCurveTo'](0x53 * _0x237efa, 0x58 * _0x237efa, 0x59 * _0x237efa, 0x58 * _0x237efa, 0x5c * _0x237efa, 0x5f * _0x237efa), _0x58ae4b['bezierCurveTo'](0x5c * _0x237efa, 0x69 * _0x237efa, 0x58 * _0x237efa, 0x6e * _0x237efa, 0x56 * _0x237efa, 0x6e * _0x237efa), _0x58ae4b['bezierCurveTo'](0x53 * _0x237efa, 0x6b * _0x237efa, 0x52 * _0x237efa, 0x68 * _0x237efa, 0x50 * _0x237efa, 0x60 * _0x237efa), _0x58ae4b['closePath'](), fill_path(_0x58ae4b, _0x3338a4[0x7], _0x3338a4[0x8], 0x3 * _0x237efa), _0x58ae4b['beginPath'](), _0x58ae4b['lineCap'] = 'round', _0x58ae4b['lineJoin'] = 'round', _0x58ae4b['moveTo'](0x51 * _0x237efa, 0x64 * _0x237efa), _0x58ae4b['bezierCurveTo'](0x52 * _0x237efa, 0x61 * _0x237efa, 0x53 * _0x237efa, 0x60 * _0x237efa, 0x55 * _0x237efa, 0x60 * _0x237efa), _0x58ae4b['bezierCurveTo'](0x52 * _0x237efa, 0x64 * _0x237efa, 0x52 * _0x237efa, 0x65 * _0x237efa, 0x53 * _0x237efa, 0x67 * _0x237efa), _0x58ae4b['closePath'](), fill_path(_0x58ae4b, _0x3338a4[0x8]), _0x58ae4b['beginPath'](), _0x58ae4b['lineCap'] = 'round', _0x58ae4b['lineJoin'] = 'round', _0x58ae4b['moveTo'](0x53 * _0x237efa, 0x67 * _0x237efa), _0x58ae4b['bezierCurveTo'](0x53 * _0x237efa, 0x66 * _0x237efa, 0x54 * _0x237efa, 0x64 * _0x237efa, 0x56 * _0x237efa, 0x64 * _0x237efa), _0x58ae4b['bezierCurveTo'](0x54 * _0x237efa, 0x67 * _0x237efa, 0x54 * _0x237efa, 0x69 * _0x237efa, 0x54 * _0x237efa, 0x6a * _0x237efa), _0x58ae4b['closePath'](), fill_path(_0x58ae4b, _0x3338a4[0x8]), _0x58ae4b['translate'](0x1b * _0x237efa, 0xa * _0x237efa), circle(_0x58ae4b, 0x23 * _0x237efa, 0x4b * _0x237efa, 0xf * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x3]), circle(_0x58ae4b, 0x55 * _0x237efa, 0x4b * _0x237efa, 0xf * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x3]), circle(_0x58ae4b, 0x20 * _0x237efa, 0x43 * _0x237efa, 0x5 * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x4]), circle(_0x58ae4b, 0x52 * _0x237efa, 0x43 * _0x237efa, 0x5 * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x4]);
                else {
                    if (_0x26df91 == 0x2) _0x58ae4b['beginPath'](), _0x58ae4b['lineCap'] = 'round', _0x58ae4b['lineJoin'] = 'round', _0x58ae4b['moveTo'](0x30 * _0x237efa, 0x16 * _0x237efa), _0x58ae4b['bezierCurveTo'](85.5 * _0x237efa, 0x16 * _0x237efa, 85.5 * _0x237efa, 0x16 * _0x237efa, 0x7b * _0x237efa, 0x16 * _0x237efa), _0x58ae4b['bezierCurveTo'](0x8a * _0x237efa, 0x17 * _0x237efa, 0x93 * _0x237efa, 0x22 * _0x237efa, 0x8f * _0x237efa, 0x3e * _0x237efa), _0x58ae4b['bezierCurveTo'](0x8e * _0x237efa, 0x43 * _0x237efa, 0x90 * _0x237efa, 0x46 * _0x237efa, 0x95 * _0x237efa, 0x49 * _0x237efa), _0x58ae4b['bezierCurveTo'](0x93 * _0x237efa, 0x4d * _0x237efa, 0x91 * _0x237efa, 0x4d * _0x237efa, 0x8f * _0x237efa, 0x4d * _0x237efa), _0x58ae4b['bezierCurveTo'](0x8d * _0x237efa, 0x55 * _0x237efa, 0x91 * _0x237efa, 0x5c * _0x237efa, 0x94 * _0x237efa, 0x61 * _0x237efa), _0x58ae4b['bezierCurveTo'](0x8e * _0x237efa, 0x67 * _0x237efa, 0x86 * _0x237efa, 0x69 * _0x237efa, 0x79 * _0x237efa, 0x6a * _0x237efa), _0x58ae4b['bezierCurveTo'](0x55 * _0x237efa, 0x6a * _0x237efa, 0x55 * _0x237efa, 0x6a * _0x237efa, 0x31 * _0x237efa, 0x6a * _0x237efa), _0x58ae4b['bezierCurveTo'](0x20 * _0x237efa, 0x68 * _0x237efa, 0x1d * _0x237efa, 0x65 * _0x237efa, 0x18 * _0x237efa, 0x5f * _0x237efa), _0x58ae4b['bezierCurveTo'](0x1e * _0x237efa, 0x56 * _0x237efa, 0x1f * _0x237efa, 0x55 * _0x237efa, 0x1e * _0x237efa, 0x4e * _0x237efa), _0x58ae4b['bezierCurveTo'](27.5 * _0x237efa, 0x4c * _0x237efa, 27.5 * _0x237efa, 0x4c * _0x237efa, 0x19 * _0x237efa, 0x4a * _0x237efa), _0x58ae4b['bezierCurveTo'](0x1f * _0x237efa, 0x44 * _0x237efa, 0x1f * _0x237efa, 0x3c * _0x237efa, 0x1e * _0x237efa, 0x2e * _0x237efa), _0x58ae4b['bezierCurveTo'](0x1f * _0x237efa, 0x1f * _0x237efa, 0x25 * _0x237efa, 0x17 * _0x237efa, 0x2f * _0x237efa, 0x16 * _0x237efa), _0x58ae4b['closePath'](), fill_path(_0x58ae4b, _0x3338a4[0x1], _0x3338a4[0x2], 0x4 * _0x237efa), _0x58ae4b['beginPath'](), _0x58ae4b['lineCap'] = 'round', _0x58ae4b['lineJoin'] = 'round', _0x58ae4b['moveTo'](0x1e * _0x237efa, 0x2c * _0x237efa), _0x58ae4b['bezierCurveTo'](0x42 * _0x237efa, 0x30 * _0x237efa, 0x63 * _0x237efa, 0x2d * _0x237efa, 0x8d * _0x237efa, 0x27 * _0x237efa), fill_path(_0x58ae4b, undefined, _0x3338a4[0x3], 0x4 * _0x237efa), _0x58ae4b['beginPath'](), _0x58ae4b['lineCap'] = 'round', _0x58ae4b['lineJoin'] = 'round', _0x58ae4b['moveTo'](0x1e * _0x237efa, 0x43 * _0x237efa), _0x58ae4b['bezierCurveTo'](0x50 * _0x237efa, 0x2c * _0x237efa, 0x76 * _0x237efa, 0x2b * _0x237efa, 0x8d * _0x237efa, 0x3c * _0x237efa), fill_path(_0x58ae4b, undefined, _0x3338a4[0x3], 0x4 * _0x237efa), _0x58ae4b['globalAlpha'] = 0.4, circle(_0x58ae4b, 0x1f * _0x237efa, 0x2c * _0x237efa, 0x9 * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x4]), circle(_0x58ae4b, 0x2a * _0x237efa, 0x2f * _0x237efa, 0x9 * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x5]), circle(_0x58ae4b, 0x46 * _0x237efa, 0x2a * _0x237efa, 0x9 * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x6]), circle(_0x58ae4b, 0x35 * _0x237efa, 0x2d * _0x237efa, 0x9 * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x7]), circle(_0x58ae4b, 0x67 * _0x237efa, 0x28 * _0x237efa, 0x9 * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x8]), circle(_0x58ae4b, 0x74 * _0x237efa, 0x29 * _0x237efa, 0x9 * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x5]), circle(_0x58ae4b, 0x83 * _0x237efa, 0x29 * _0x237efa, 0x9 * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x4]), circle(_0x58ae4b, 0x27 * _0x237efa, 0x40 * _0x237efa, 0x9 * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x7]), circle(_0x58ae4b, 0x33 * _0x237efa, 0x3c * _0x237efa, 0x9 * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x6]), circle(_0x58ae4b, 0x4a * _0x237efa, 0x35 * _0x237efa, 0x9 * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x4]), circle(_0x58ae4b, 0x53 * _0x237efa, 0x33 * _0x237efa, 0x9 * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x8]), circle(_0x58ae4b, 0x5f * _0x237efa, 0x33 * _0x237efa, 0x9 * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x6]), circle(_0x58ae4b, 0x6b * _0x237efa, 0x31 * _0x237efa, 0x9 * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x7]), circle(_0x58ae4b, 0x78 * _0x237efa, 0x32 * _0x237efa, 0x9 * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x4]), circle(_0x58ae4b, 0x89 * _0x237efa, 0x39 * _0x237efa, 0x9 * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x5]), _0x58ae4b['globalAlpha'] = 0x1, circle(_0x58ae4b, 0x1f * _0x237efa, 0x2c * _0x237efa, 0x4 * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x4]), circle(_0x58ae4b, 0x2a * _0x237efa, 0x2f * _0x237efa, 0x4 * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x5]), circle(_0x58ae4b, 0x35 * _0x237efa, 0x2d * _0x237efa, 0x4 * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x7]), circle(_0x58ae4b, 0x46 * _0x237efa, 0x2b * _0x237efa, 0x4 * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x6]), circle(_0x58ae4b, 0x32 * _0x237efa, 0x3b * _0x237efa, 0x4 * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x6]), circle(_0x58ae4b, 0x27 * _0x237efa, 0x40 * _0x237efa, 0x4 * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x7]), circle(_0x58ae4b, 0x53 * _0x237efa, 0x33 * _0x237efa, 0x4 * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x4]), circle(_0x58ae4b, 0x4a * _0x237efa, 0x35 * _0x237efa, 0x4 * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x8]), circle(_0x58ae4b, 0x5f * _0x237efa, 0x33 * _0x237efa, 0x4 * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x6]), circle(_0x58ae4b, 0x67 * _0x237efa, 0x29 * _0x237efa, 0x4 * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x8]), circle(_0x58ae4b, 0x6b * _0x237efa, 0x31 * _0x237efa, 0x4 * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x7]), circle(_0x58ae4b, 0x74 * _0x237efa, 0x29 * _0x237efa, 0x4 * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x5]), circle(_0x58ae4b, 0x83 * _0x237efa, 0x29 * _0x237efa, 0x4 * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x4]), circle(_0x58ae4b, 0x89 * _0x237efa, 0x39 * _0x237efa, 0x4 * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x5]), circle(_0x58ae4b, 0x78 * _0x237efa, 0x32 * _0x237efa, 0x4 * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x4]), _0x58ae4b['translate'](0x1b * _0x237efa, 0xa * _0x237efa), circle(_0x58ae4b, 0x23 * _0x237efa, 0x4b * _0x237efa, 0xf * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x9]), circle(_0x58ae4b, 0x55 * _0x237efa, 0x4b * _0x237efa, 0xf * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x9]), circle(_0x58ae4b, 0x20 * _0x237efa, 0x43 * _0x237efa, 0x5 * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0xa]), circle(_0x58ae4b, 0x52 * _0x237efa, 0x43 * _0x237efa, 0x5 * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0xa]);
                    else {
                        if (_0x26df91 == 0x3) _0x58ae4b['beginPath'](), _0x58ae4b['lineCap'] = 'round', _0x58ae4b['lineJoin'] = 'round', _0x58ae4b['moveTo'](0x17 * _0x237efa, 0x5f * _0x237efa), _0x58ae4b['bezierCurveTo'](0x1e * _0x237efa, 0x55 * _0x237efa, 0x1e * _0x237efa, 0x53 * _0x237efa, 0x1e * _0x237efa, 0x48 * _0x237efa), _0x58ae4b['bezierCurveTo'](0x1e * _0x237efa, 61.5 * _0x237efa, 0x1e * _0x237efa, 61.5 * _0x237efa, 0x1e * _0x237efa, 0x33 * _0x237efa), _0x58ae4b['bezierCurveTo'](0x1d * _0x237efa, 0x21 * _0x237efa, 0x2a * _0x237efa, 0x17 * _0x237efa, 0x36 * _0x237efa, 0x18 * _0x237efa), _0x58ae4b['bezierCurveTo'](86.5 * _0x237efa, 0x18 * _0x237efa, 86.5 * _0x237efa, 0x18 * _0x237efa, 0x77 * _0x237efa, 0x18 * _0x237efa), _0x58ae4b['bezierCurveTo'](0x87 * _0x237efa, 0x18 * _0x237efa, 0x8f * _0x237efa, 0x21 * _0x237efa, 0x8f * _0x237efa, 0x2f * _0x237efa), _0x58ae4b['bezierCurveTo'](0x8f * _0x237efa, 63.5 * _0x237efa, 0x8f * _0x237efa, 63.5 * _0x237efa, 0x8f * _0x237efa, 0x50 * _0x237efa), _0x58ae4b['bezierCurveTo'](0x8e * _0x237efa, 0x56 * _0x237efa, 0x93 * _0x237efa, 0x5d * _0x237efa, 0x96 * _0x237efa, 0x60 * _0x237efa), _0x58ae4b['bezierCurveTo'](0x90 * _0x237efa, 0x6b * _0x237efa, 0x71 * _0x237efa, 0x70 * _0x237efa, 0x54 * _0x237efa, 0x6f * _0x237efa), _0x58ae4b['bezierCurveTo'](0x34 * _0x237efa, 0x70 * _0x237efa, 0x22 * _0x237efa, 0x6a * _0x237efa, 0x17 * _0x237efa, 0x60 * _0x237efa), _0x58ae4b['closePath'](), fill_path(_0x58ae4b, _0x3338a4[0x1], _0x3338a4[0x2], 0x4 * _0x237efa), _0x58ae4b['beginPath'](), _0x58ae4b['lineCap'] = 'round', _0x58ae4b['lineJoin'] = 'round', _0x58ae4b['moveTo'](0x1e * _0x237efa, 0x51 * _0x237efa), _0x58ae4b['bezierCurveTo'](0x38 * _0x237efa, 0x63 * _0x237efa, 0x68 * _0x237efa, 0x62 * _0x237efa, 0x8e * _0x237efa, 0x54 * _0x237efa), _0x58ae4b['bezierCurveTo'](145.5 * _0x237efa, 89.5 * _0x237efa, 145.5 * _0x237efa, 89.5 * _0x237efa, 0x95 * _0x237efa, 0x5f * _0x237efa), _0x58ae4b['bezierCurveTo'](0x8e * _0x237efa, 0x6a * _0x237efa, 0x7f * _0x237efa, 0x6e * _0x237efa, 0x51 * _0x237efa, 0x6e * _0x237efa), _0x58ae4b['bezierCurveTo'](0x24 * _0x237efa, 0x70 * _0x237efa, 0x1c * _0x237efa, 0x63 * _0x237efa, 0x17 * _0x237efa, 0x5f * _0x237efa), _0x58ae4b['bezierCurveTo'](0x1f * _0x237efa, 0x57 * _0x237efa, 0x1f * _0x237efa, 0x52 * _0x237efa, 0x1e * _0x237efa, 0x51 * _0x237efa), _0x58ae4b['closePath'](), fill_path(_0x58ae4b, _0x3338a4[0x3], _0x3338a4[0x2], 0x4 * _0x237efa), _0x58ae4b['beginPath'](), _0x58ae4b['lineCap'] = 'round', _0x58ae4b['lineJoin'] = 'round', _0x58ae4b['moveTo'](0x17 * _0x237efa, 0x5f * _0x237efa), _0x58ae4b['bezierCurveTo'](0x1e * _0x237efa, 0x55 * _0x237efa, 0x1e * _0x237efa, 0x53 * _0x237efa, 0x1e * _0x237efa, 0x48 * _0x237efa), _0x58ae4b['bezierCurveTo'](0x1e * _0x237efa, 61.5 * _0x237efa, 0x1e * _0x237efa, 61.5 * _0x237efa, 0x1e * _0x237efa, 0x33 * _0x237efa), _0x58ae4b['bezierCurveTo'](0x1d * _0x237efa, 0x21 * _0x237efa, 0x2a * _0x237efa, 0x17 * _0x237efa, 0x36 * _0x237efa, 0x18 * _0x237efa), _0x58ae4b['bezierCurveTo'](86.5 * _0x237efa, 0x18 * _0x237efa, 86.5 * _0x237efa, 0x18 * _0x237efa, 0x77 * _0x237efa, 0x18 * _0x237efa), _0x58ae4b['bezierCurveTo'](0x87 * _0x237efa, 0x18 * _0x237efa, 0x8f * _0x237efa, 0x21 * _0x237efa, 0x8f * _0x237efa, 0x2f * _0x237efa), _0x58ae4b['bezierCurveTo'](0x8f * _0x237efa, 63.5 * _0x237efa, 0x8f * _0x237efa, 63.5 * _0x237efa, 0x8f * _0x237efa, 0x50 * _0x237efa), _0x58ae4b['bezierCurveTo'](0x8e * _0x237efa, 0x56 * _0x237efa, 0x93 * _0x237efa, 0x5d * _0x237efa, 0x96 * _0x237efa, 0x60 * _0x237efa), _0x58ae4b['bezierCurveTo'](0x90 * _0x237efa, 0x6b * _0x237efa, 0x71 * _0x237efa, 0x70 * _0x237efa, 0x54 * _0x237efa, 0x6f * _0x237efa), _0x58ae4b['bezierCurveTo'](0x34 * _0x237efa, 0x70 * _0x237efa, 0x22 * _0x237efa, 0x6a * _0x237efa, 0x17 * _0x237efa, 0x60 * _0x237efa), _0x58ae4b['closePath'](), fill_path(_0x58ae4b, undefined, _0x3338a4[0x2], 0x4 * _0x237efa), _0x58ae4b['translate'](0x1b * _0x237efa, 0xa * _0x237efa), circle(_0x58ae4b, 0x23 * _0x237efa, 0x4b * _0x237efa, 0xf * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x6]), circle(_0x58ae4b, 0x55 * _0x237efa, 0x4b * _0x237efa, 0xf * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x6]), circle(_0x58ae4b, 0x20 * _0x237efa, 0x43 * _0x237efa, 0x5 * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x7]), circle(_0x58ae4b, 0x52 * _0x237efa, 0x43 * _0x237efa, 0x5 * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x7]), _0x58ae4b['translate'](-0x60 * _0x237efa, -0x19 * _0x237efa), _0x58ae4b['scale'](1.8, 1.8), _0x58ae4b['beginPath'](), _0x58ae4b['lineCap'] = 'round', _0x58ae4b['lineJoin'] = 'round', _0x58ae4b['moveTo'](0x55 * _0x237efa, 0x15 * _0x237efa), _0x58ae4b['bezierCurveTo'](0x49 * _0x237efa, 0x10 * _0x237efa, 0x46 * _0x237efa, 0x10 * _0x237efa, 0x46 * _0x237efa, 0x1a * _0x237efa), _0x58ae4b['bezierCurveTo'](0x48 * _0x237efa, 0x22 * _0x237efa, 0x4b * _0x237efa, 0x25 * _0x237efa, 0x55 * _0x237efa, 0x1a * _0x237efa), _0x58ae4b['closePath'](), fill_path(_0x58ae4b, _0x3338a4[0x4], _0x3338a4[0x5], 0x3 * _0x237efa), _0x58ae4b['beginPath'](), _0x58ae4b['lineCap'] = 'round', _0x58ae4b['lineJoin'] = 'round', _0x58ae4b['moveTo'](0x59 * _0x237efa, 0x15 * _0x237efa), _0x58ae4b['bezierCurveTo'](0x68 * _0x237efa, 0x10 * _0x237efa, 0x69 * _0x237efa, 0x13 * _0x237efa, 0x6a * _0x237efa, 0x18 * _0x237efa), _0x58ae4b['bezierCurveTo'](0x69 * _0x237efa, 0x24 * _0x237efa, 0x61 * _0x237efa, 0x24 * _0x237efa, 0x5a * _0x237efa, 0x1c * _0x237efa), _0x58ae4b['closePath'](), fill_path(_0x58ae4b, _0x3338a4[0x4], _0x3338a4[0x5], 0x3 * _0x237efa), circle(_0x58ae4b, 0x57 * _0x237efa, 0x17 * _0x237efa, 6.324555320336759 * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x4], _0x3338a4[0x5], 0x3 * _0x237efa);
                        else {
                            if (_0x26df91 == 0x4) _0x58ae4b['translate'](0x1b * _0x237efa, 0x8 * _0x237efa), circle(_0x58ae4b, 0xf * _0x237efa, 0x4c * _0x237efa, 9.219544457292887 * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x3]), circle(_0x58ae4b, 0x6a * _0x237efa, 0x4c * _0x237efa, 9.219544457292887 * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x3]), _0x58ae4b['translate'](-0x1b * _0x237efa, -0x8 * _0x237efa), _0x58ae4b['translate'](0x1b * _0x237efa, 0xa * _0x237efa), circle(_0x58ae4b, 0x23 * _0x237efa, 0x4b * _0x237efa, 0xf * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x5]), circle(_0x58ae4b, 0x55 * _0x237efa, 0x4b * _0x237efa, 0xf * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x5]), circle(_0x58ae4b, 0x20 * _0x237efa, 0x43 * _0x237efa, 0x5 * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x6]), circle(_0x58ae4b, 0x52 * _0x237efa, 0x43 * _0x237efa, 0x5 * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x6]), _0x58ae4b['translate'](-0x1b * _0x237efa, -0xa * _0x237efa), _0x58ae4b['translate'](0x1b * _0x237efa, 0x8 * _0x237efa), _0x58ae4b['beginPath'](), _0x58ae4b['lineCap'] = 'round', _0x58ae4b['lineJoin'] = 'round', _0x58ae4b['moveTo'](0x34 * _0x237efa, 0x56 * _0x237efa), _0x58ae4b['bezierCurveTo'](0x36 * _0x237efa, 0x4e * _0x237efa, 0x41 * _0x237efa, 0x50 * _0x237efa, 0x43 * _0x237efa, 0x55 * _0x237efa), _0x58ae4b['bezierCurveTo'](0x45 * _0x237efa, 0x59 * _0x237efa, 0x40 * _0x237efa, 0x63 * _0x237efa, 0x47 * _0x237efa, 0x6a * _0x237efa), _0x58ae4b['bezierCurveTo'](0x4b * _0x237efa, 0x6d * _0x237efa, 0x3d * _0x237efa, 0x6c * _0x237efa, 0x3a * _0x237efa, 0x66 * _0x237efa), _0x58ae4b['bezierCurveTo'](0x35 * _0x237efa, 0x61 * _0x237efa, 0x34 * _0x237efa, 0x5b * _0x237efa, 0x34 * _0x237efa, 0x56 * _0x237efa), _0x58ae4b['closePath'](), fill_path(_0x58ae4b, _0x3338a4[0x4]);
                            else {
                                if (_0x26df91 == 0x6) _0x58ae4b['beginPath'](), _0x58ae4b['lineCap'] = 'round', _0x58ae4b['lineJoin'] = 'round', _0x58ae4b['translate'](0x2 * _0x237efa, 0x0), _0x58ae4b['moveTo'](0x1c * _0x237efa, 0x45 * _0x237efa), _0x58ae4b['bezierCurveTo'](0x1a * _0x237efa, 0x27 * _0x237efa, 0x1f * _0x237efa, 0x19 * _0x237efa, 0x34 * _0x237efa, 0x18 * _0x237efa), _0x58ae4b['bezierCurveTo'](0x56 * _0x237efa, 23.5 * _0x237efa, 0x56 * _0x237efa, 23.5 * _0x237efa, 0x78 * _0x237efa, 0x17 * _0x237efa), _0x58ae4b['bezierCurveTo'](0x89 * _0x237efa, 0x17 * _0x237efa, 0x91 * _0x237efa, 0x21 * _0x237efa, 0x90 * _0x237efa, 0x35 * _0x237efa), _0x58ae4b['bezierCurveTo'](144.5 * _0x237efa, 0x3f * _0x237efa, 144.5 * _0x237efa, 0x3f * _0x237efa, 0x91 * _0x237efa, 0x49 * _0x237efa), _0x58ae4b['bezierCurveTo'](0x8d * _0x237efa, 0x29 * _0x237efa, 0x6a * _0x237efa, 0x29 * _0x237efa, 0x62 * _0x237efa, 0x3b * _0x237efa), _0x58ae4b['bezierCurveTo'](0x5c * _0x237efa, 0x45 * _0x237efa, 0x5e * _0x237efa, 0x62 * _0x237efa, 0x5a * _0x237efa, 0x5f * _0x237efa), _0x58ae4b['bezierCurveTo'](0x56 * _0x237efa, 0x5f * _0x237efa, 0x56 * _0x237efa, 0x5f * _0x237efa, 0x52 * _0x237efa, 0x5f * _0x237efa), _0x58ae4b['bezierCurveTo'](0x4f * _0x237efa, 0x5e * _0x237efa, 0x57 * _0x237efa, 0x21 * _0x237efa, 0x30 * _0x237efa, 0x2f * _0x237efa), _0x58ae4b['bezierCurveTo'](0x1f * _0x237efa, 0x39 * _0x237efa, 0x1e * _0x237efa, 0x41 * _0x237efa, 0x1c * _0x237efa, 0x48 * _0x237efa), _0x58ae4b['closePath'](), fill_path(_0x58ae4b, _0x3338a4[0x3]), _0x58ae4b['save'](), _0x58ae4b['translate'](0x57 * _0x237efa, 64.5 * _0x237efa), round_rect(_0x58ae4b, -0x38 * _0x237efa, -41.5 * _0x237efa, 0x70 * _0x237efa, 0x53 * _0x237efa, 0x12 * _0x237efa), _0x58ae4b['restore'](), fill_path(_0x58ae4b, undefined, _0x3338a4[0x2], 0x4 * _0x237efa), _0x58ae4b['translate'](0x1b * _0x237efa, 0xa * _0x237efa), circle(_0x58ae4b, 0x23 * _0x237efa, 0x4b * _0x237efa, 0xf * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x3]), circle(_0x58ae4b, 0x55 * _0x237efa, 0x4b * _0x237efa, 0xf * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x3]), circle(_0x58ae4b, 0x20 * _0x237efa, 0x43 * _0x237efa, 0x5 * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x4]), circle(_0x58ae4b, 0x52 * _0x237efa, 0x43 * _0x237efa, 0x5 * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x4]), _0x58ae4b['scale'](1.4, 1.4), _0x58ae4b['translate'](-43.5 * _0x237efa, -0x20 * _0x237efa), _0x58ae4b['beginPath'](), _0x58ae4b['lineCap'] = 'round', _0x58ae4b['lineJoin'] = 'round', _0x58ae4b['moveTo'](0x56 * _0x237efa, 0x69 * _0x237efa), _0x58ae4b['bezierCurveTo'](0x59 * _0x237efa, 0x67 * _0x237efa, 0x5a * _0x237efa, 0x64 * _0x237efa, 0x5c * _0x237efa, 0x61 * _0x237efa), _0x58ae4b['bezierCurveTo'](0x5d * _0x237efa, 0x5b * _0x237efa, 0x55 * _0x237efa, 0x5a * _0x237efa, 0x51 * _0x237efa, 0x5f * _0x237efa), _0x58ae4b['bezierCurveTo'](0x50 * _0x237efa, 0x61 * _0x237efa, 0x53 * _0x237efa, 0x65 * _0x237efa, 0x55 * _0x237efa, 0x69 * _0x237efa), _0x58ae4b['closePath'](), fill_path(_0x58ae4b, _0x3338a4[0x5], _0x3338a4[0x6], 0x3 * _0x237efa);
                                else {
                                    if (_0x26df91 == 0x7) _0x58ae4b['save'](), _0x58ae4b['translate'](0x56 * _0x237efa, 64.5 * _0x237efa), round_rect(_0x58ae4b, -0x10 * _0x237efa, -43.5 * _0x237efa, 0x20 * _0x237efa, 0x57 * _0x237efa, 0x5 * _0x237efa), _0x58ae4b['restore'](), fill_path(_0x58ae4b, _0x3338a4[0x3], _0x3338a4[0x4], 0x4 * _0x237efa), _0x58ae4b['translate'](0x0, 0x6 * _0x237efa), _0x58ae4b['globalAlpha'] = 0.5, _0x58ae4b['save'](), _0x58ae4b['translate'](85.5 * _0x237efa, 0x2f * _0x237efa), round_rect(_0x58ae4b, -58.5 * _0x237efa, -0x8 * _0x237efa, 0x75 * _0x237efa, 0x10 * _0x237efa, 0x5 * _0x237efa), _0x58ae4b['restore'](), fill_path(_0x58ae4b, _0x3338a4[0x0]), _0x58ae4b['translate'](0x0, -0x6 * _0x237efa), _0x58ae4b['globalAlpha'] = 0x1, _0x58ae4b['save'](), _0x58ae4b['translate'](85.5 * _0x237efa, 0x2f * _0x237efa), round_rect(_0x58ae4b, -58.5 * _0x237efa, -0x8 * _0x237efa, 0x75 * _0x237efa, 0x10 * _0x237efa, 0x5 * _0x237efa), _0x58ae4b['restore'](), fill_path(_0x58ae4b, _0x3338a4[0x3], _0x3338a4[0x4], 0x4 * _0x237efa), _0x58ae4b['translate'](0x0, 0x7 * _0x237efa), _0x58ae4b['globalAlpha'] = 0.5, _0x58ae4b['beginPath'](), _0x58ae4b['lineCap'] = 'round', _0x58ae4b['lineJoin'] = 'round', _0x58ae4b['moveTo'](0x54 * _0x237efa, 0x2c * _0x237efa), _0x58ae4b['bezierCurveTo'](0x55 * _0x237efa, 0x1a * _0x237efa, 0x60 * _0x237efa, 0x17 * _0x237efa, 0x67 * _0x237efa, 0x1e * _0x237efa), _0x58ae4b['bezierCurveTo'](0x6e * _0x237efa, 0x24 * _0x237efa, 0x6e * _0x237efa, 0x2f * _0x237efa, 0x5c * _0x237efa, 0x32 * _0x237efa), _0x58ae4b['closePath'](), fill_path(_0x58ae4b, _0x3338a4[0x0]), _0x58ae4b['beginPath'](), _0x58ae4b['lineCap'] = 'round', _0x58ae4b['lineJoin'] = 'round', _0x58ae4b['moveTo'](0x57 * _0x237efa, 0x2c * _0x237efa), _0x58ae4b['bezierCurveTo'](0x6c * _0x237efa, 0x2f * _0x237efa, 0x6d * _0x237efa, 0x36 * _0x237efa, 0x66 * _0x237efa, 0x3f * _0x237efa), _0x58ae4b['bezierCurveTo'](0x5c * _0x237efa, 0x4d * _0x237efa, 0x50 * _0x237efa, 0x3d * _0x237efa, 0x54 * _0x237efa, 0x31 * _0x237efa), _0x58ae4b['closePath'](), fill_path(_0x58ae4b, _0x3338a4[0x0]), _0x58ae4b['beginPath'](), _0x58ae4b['lineCap'] = 'round', _0x58ae4b['lineJoin'] = 'round', _0x58ae4b['moveTo'](0x54 * _0x237efa, 0x2b * _0x237efa), _0x58ae4b['bezierCurveTo'](0x56 * _0x237efa, 0x18 * _0x237efa, 0x48 * _0x237efa, 0x17 * _0x237efa, 0x44 * _0x237efa, 0x1f * _0x237efa), _0x58ae4b['bezierCurveTo'](0x38 * _0x237efa, 0x2a * _0x237efa, 0x46 * _0x237efa, 0x31 * _0x237efa, 0x51 * _0x237efa, 0x2f * _0x237efa), _0x58ae4b['closePath'](), fill_path(_0x58ae4b, _0x3338a4[0x0]), _0x58ae4b['beginPath'](), _0x58ae4b['lineCap'] = 'round', _0x58ae4b['lineJoin'] = 'round', _0x58ae4b['moveTo'](0x4e * _0x237efa, 0x2d * _0x237efa), _0x58ae4b['bezierCurveTo'](0x3d * _0x237efa, 0x31 * _0x237efa, 0x3c * _0x237efa, 0x3a * _0x237efa, 0x44 * _0x237efa, 0x40 * _0x237efa), _0x58ae4b['bezierCurveTo'](0x4e * _0x237efa, 0x4b * _0x237efa, 0x54 * _0x237efa, 0x41 * _0x237efa, 0x59 * _0x237efa, 0x36 * _0x237efa), _0x58ae4b['closePath'](), fill_path(_0x58ae4b, _0x3338a4[0x0]), _0x58ae4b['translate'](0x0, -0x7 * _0x237efa), _0x58ae4b['globalAlpha'] = 0x1, _0x58ae4b['beginPath'](), _0x58ae4b['lineCap'] = 'round', _0x58ae4b['lineJoin'] = 'round', _0x58ae4b['moveTo'](0x54 * _0x237efa, 0x2c * _0x237efa), _0x58ae4b['bezierCurveTo'](0x55 * _0x237efa, 0x1a * _0x237efa, 0x60 * _0x237efa, 0x17 * _0x237efa, 0x67 * _0x237efa, 0x1e * _0x237efa), _0x58ae4b['bezierCurveTo'](0x6e * _0x237efa, 0x24 * _0x237efa, 0x6e * _0x237efa, 0x2f * _0x237efa, 0x5c * _0x237efa, 0x32 * _0x237efa), _0x58ae4b['closePath'](), fill_path(_0x58ae4b, _0x3338a4[0x3], _0x3338a4[0x4], 0x4 * _0x237efa), _0x58ae4b['beginPath'](), _0x58ae4b['lineCap'] = 'round', _0x58ae4b['lineJoin'] = 'round', _0x58ae4b['moveTo'](0x57 * _0x237efa, 0x2c * _0x237efa), _0x58ae4b['bezierCurveTo'](0x6c * _0x237efa, 0x2f * _0x237efa, 0x6d * _0x237efa, 0x36 * _0x237efa, 0x66 * _0x237efa, 0x3f * _0x237efa), _0x58ae4b['bezierCurveTo'](0x5c * _0x237efa, 0x4d * _0x237efa, 0x50 * _0x237efa, 0x3d * _0x237efa, 0x54 * _0x237efa, 0x31 * _0x237efa), _0x58ae4b['closePath'](), fill_path(_0x58ae4b, _0x3338a4[0x3], _0x3338a4[0x4], 0x4 * _0x237efa), _0x58ae4b['beginPath'](), _0x58ae4b['lineCap'] = 'round', _0x58ae4b['lineJoin'] = 'round', _0x58ae4b['moveTo'](0x54 * _0x237efa, 0x2b * _0x237efa), _0x58ae4b['bezierCurveTo'](0x56 * _0x237efa, 0x18 * _0x237efa, 0x48 * _0x237efa, 0x17 * _0x237efa, 0x44 * _0x237efa, 0x1f * _0x237efa), _0x58ae4b['bezierCurveTo'](0x38 * _0x237efa, 0x2a * _0x237efa, 0x46 * _0x237efa, 0x31 * _0x237efa, 0x51 * _0x237efa, 0x2f * _0x237efa), _0x58ae4b['closePath'](), fill_path(_0x58ae4b, _0x3338a4[0x3], _0x3338a4[0x4], 0x4 * _0x237efa), _0x58ae4b['beginPath'](), _0x58ae4b['lineCap'] = 'round', _0x58ae4b['lineJoin'] = 'round', _0x58ae4b['moveTo'](0x4e * _0x237efa, 0x2d * _0x237efa), _0x58ae4b['bezierCurveTo'](0x3d * _0x237efa, 0x31 * _0x237efa, 0x3c * _0x237efa, 0x3a * _0x237efa, 0x44 * _0x237efa, 0x40 * _0x237efa), _0x58ae4b['bezierCurveTo'](0x4e * _0x237efa, 0x4b * _0x237efa, 0x54 * _0x237efa, 0x41 * _0x237efa, 0x59 * _0x237efa, 0x36 * _0x237efa), _0x58ae4b['closePath'](), fill_path(_0x58ae4b, _0x3338a4[0x3], _0x3338a4[0x4], 0x4 * _0x237efa), _0x58ae4b['translate'](0x0, 0x6 * _0x237efa), _0x58ae4b['globalAlpha'] = 0.5, _0x58ae4b['save'](), _0x58ae4b['translate'](0x55 * _0x237efa, 47.5 * _0x237efa), _0x58ae4b['rotate'](0x0), round_rect(_0x58ae4b, -0xa * _0x237efa, -10.5 * _0x237efa, 0x14 * _0x237efa, 0x15 * _0x237efa, 0x5 * _0x237efa), _0x58ae4b['restore'](), fill_path(_0x58ae4b, _0x3338a4[0x0]), _0x58ae4b['translate'](0x0, -0x6 * _0x237efa), _0x58ae4b['globalAlpha'] = 0x1, _0x58ae4b['save'](), _0x58ae4b['translate'](0x55 * _0x237efa, 47.5 * _0x237efa), _0x58ae4b['rotate'](0x0), round_rect(_0x58ae4b, -0xa * _0x237efa, -10.5 * _0x237efa, 0x14 * _0x237efa, 0x15 * _0x237efa, 0x5 * _0x237efa), _0x58ae4b['restore'](), fill_path(_0x58ae4b, _0x3338a4[0x3], _0x3338a4[0x4], 0x4 * _0x237efa), _0x58ae4b['translate'](0x1b * _0x237efa, 0xa * _0x237efa), circle(_0x58ae4b, 0x23 * _0x237efa, 0x4b * _0x237efa, 0xf * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x5]), circle(_0x58ae4b, 0x55 * _0x237efa, 0x4b * _0x237efa, 0xf * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x5]), circle(_0x58ae4b, 0x20 * _0x237efa, 0x43 * _0x237efa, 0x5 * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x6]), circle(_0x58ae4b, 0x52 * _0x237efa, 0x43 * _0x237efa, 0x5 * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x6]);
                                    else {
                                        if (_0x26df91 == 0x5) _0x997fd2['width'] = 0xd3 * _0x237efa, _0x997fd2['height'] = 0x98 * _0x237efa, _0x58ae4b['globalAlpha'] = 0.5, _0x58ae4b['translate'](0x0, 0x8 * _0x237efa), _0x58ae4b['save'](), _0x58ae4b['translate'](105.5 * _0x237efa, 76.5 * _0x237efa), round_rect(_0x58ae4b, -0x38 * _0x237efa, -41.5 * _0x237efa, 0x70 * _0x237efa, 0x53 * _0x237efa, 0x12 * _0x237efa), _0x58ae4b['restore'](), fill_path(_0x58ae4b, _0x3338a4[0x0]), _0x58ae4b['globalAlpha'] = 0x1, _0x58ae4b['translate'](0x0, -0x8 * _0x237efa), _0x58ae4b['save'](), _0x58ae4b['translate'](105.5 * _0x237efa, 76.5 * _0x237efa), round_rect(_0x58ae4b, -0x38 * _0x237efa, -41.5 * _0x237efa, 0x70 * _0x237efa, 0x53 * _0x237efa, 0x12 * _0x237efa), _0x58ae4b['restore'](), fill_path(_0x58ae4b, _0x3338a4[0x1], _0x3338a4[0x2], 0x4 * _0x237efa), _0x58ae4b['beginPath'](), _0x58ae4b['lineCap'] = 'round', _0x58ae4b['lineJoin'] = 'round', _0x58ae4b['moveTo'](0x44 * _0x237efa, 0x27 * _0x237efa), _0x58ae4b['bezierCurveTo'](0x30 * _0x237efa, 0x25 * _0x237efa, 0x2b * _0x237efa, 0x1b * _0x237efa, 0x28 * _0x237efa, 0xc * _0x237efa), _0x58ae4b['bezierCurveTo'](0x1f * _0x237efa, 0x19 * _0x237efa, 0x14 * _0x237efa, 0x11 * _0x237efa, 0xb * _0x237efa, 0x9 * _0x237efa), _0x58ae4b['bezierCurveTo'](0x9 * _0x237efa, 0x29 * _0x237efa, 0x28 * _0x237efa, 0x2c * _0x237efa, 0x3e * _0x237efa, 0x2d * _0x237efa), _0x58ae4b['closePath'](), fill_path(_0x58ae4b, _0x3338a4[0x3], _0x3338a4[0x2], 0x4 * _0x237efa), _0x58ae4b['beginPath'](), _0x58ae4b['lineCap'] = 'round', _0x58ae4b['lineJoin'] = 'round', _0x58ae4b['moveTo'](0x8f * _0x237efa, 0x26 * _0x237efa), _0x58ae4b['bezierCurveTo'](0xa1 * _0x237efa, 0x28 * _0x237efa, 0xa9 * _0x237efa, 0x18 * _0x237efa, 0xab * _0x237efa, 0xd * _0x237efa), _0x58ae4b['bezierCurveTo'](0xb5 * _0x237efa, 0x17 * _0x237efa, 0xbc * _0x237efa, 0x14 * _0x237efa, 0xc7 * _0x237efa, 0x9 * _0x237efa), _0x58ae4b['bezierCurveTo'](0xcc * _0x237efa, 0x23 * _0x237efa, 0xb6 * _0x237efa, 0x2c * _0x237efa, 0x98 * _0x237efa, 0x2d * _0x237efa), _0x58ae4b['closePath'](), fill_path(_0x58ae4b, _0x3338a4[0x3], _0x3338a4[0x2], 0x4 * _0x237efa), _0x58ae4b['save'](), _0x58ae4b['translate'](105.5 * _0x237efa, 76.5 * _0x237efa), round_rect(_0x58ae4b, -0x37 * _0x237efa, -40.5 * _0x237efa, 0x6a * _0x237efa, 0x4d * _0x237efa, 0x12 * _0x237efa), _0x58ae4b['restore'](), fill_path(_0x58ae4b, _0x3338a4[0x1]), _0x58ae4b['beginPath'](), _0x58ae4b['lineCap'] = 'round', _0x58ae4b['lineJoin'] = 'round', _0x58ae4b['moveTo'](0x95 * _0x237efa, 0x2d * _0x237efa), _0x58ae4b['bezierCurveTo'](0x9b * _0x237efa, 0x25 * _0x237efa, 0x9e * _0x237efa, 0x25 * _0x237efa, 0xa1 * _0x237efa, 0x34 * _0x237efa), _0x58ae4b['bezierCurveTo'](0xa4 * _0x237efa, 0x3c * _0x237efa, 0xa1 * _0x237efa, 0x41 * _0x237efa, 0x98 * _0x237efa, 0x3a * _0x237efa), _0x58ae4b['bezierCurveTo'](0x91 * _0x237efa, 0x33 * _0x237efa, 0x8f * _0x237efa, 0x31 * _0x237efa, 0x95 * _0x237efa, 0x2d * _0x237efa), _0x58ae4b['closePath'](), fill_path(_0x58ae4b, _0x3338a4[0x4], _0x3338a4[0x2], 0x4 * _0x237efa), _0x58ae4b['beginPath'](), _0x58ae4b['lineCap'] = 'round', _0x58ae4b['lineJoin'] = 'round', _0x58ae4b['moveTo'](0x3c * _0x237efa, 0x2b * _0x237efa), _0x58ae4b['bezierCurveTo'](0x43 * _0x237efa, 0x2f * _0x237efa, 0x43 * _0x237efa, 0x33 * _0x237efa, 0x39 * _0x237efa, 0x3b * _0x237efa), _0x58ae4b['bezierCurveTo'](0x32 * _0x237efa, 0x40 * _0x237efa, 0x2f * _0x237efa, 0x40 * _0x237efa, 0x31 * _0x237efa, 0x37 * _0x237efa), _0x58ae4b['bezierCurveTo'](0x31 * _0x237efa, 0x2a * _0x237efa, 0x33 * _0x237efa, 0x26 * _0x237efa, 0x3b * _0x237efa, 0x2a * _0x237efa), _0x58ae4b['closePath'](), fill_path(_0x58ae4b, _0x3338a4[0x4], _0x3338a4[0x2], 0x4 * _0x237efa), circle(_0x58ae4b, 0x69 * _0x237efa, 0x6b * _0x237efa, 10.63014581273465 * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x5], _0x3338a4[0x6], 0x4 * _0x237efa), _0x58ae4b['beginPath'](), _0x58ae4b['lineCap'] = 'round', _0x58ae4b['lineJoin'] = 'round', _0x58ae4b['moveTo'](0x69 * _0x237efa, 0x64 * _0x237efa), _0x58ae4b['bezierCurveTo'](0x6f * _0x237efa, 0x65 * _0x237efa, 0x71 * _0x237efa, 0x68 * _0x237efa, 0x70 * _0x237efa, 0x6d * _0x237efa), _0x58ae4b['closePath'](), fill_path(_0x58ae4b, _0x3338a4[0x7]), _0x58ae4b['translate'](44.5 * _0x237efa, 0x16 * _0x237efa), circle(_0x58ae4b, 0x23 * _0x237efa, 0x4b * _0x237efa, 0xf * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x8]), circle(_0x58ae4b, 0x55 * _0x237efa, 0x4b * _0x237efa, 0xf * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x8]), circle(_0x58ae4b, 0x20 * _0x237efa, 0x43 * _0x237efa, 0x5 * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x9]), circle(_0x58ae4b, 0x52 * _0x237efa, 0x43 * _0x237efa, 0x5 * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x9]);
                                        else _0x26df91 == 0x9 && (_0x58ae4b['save'](), _0x58ae4b['translate'](0x6e * _0x237efa, 0x16 * _0x237efa), round_rect(_0x58ae4b, -0x10 * _0x237efa, -0x5 * _0x237efa, 0x20 * _0x237efa, 0xa * _0x237efa, 0xa * _0x237efa), _0x58ae4b['restore'](), fill_path(_0x58ae4b, _0x3338a4[0x1], _0x3338a4[0x2], 0x3 * _0x237efa), _0x58ae4b['save'](), _0x58ae4b['translate'](109.5 * _0x237efa, 0x11 * _0x237efa), round_rect(_0x58ae4b, -18.5 * _0x237efa, -0x3 * _0x237efa, 0x25 * _0x237efa, 0x6 * _0x237efa, 0xa * _0x237efa), _0x58ae4b['restore'](), fill_path(_0x58ae4b, _0x3338a4[0x3], _0x3338a4[0x4], 0x3 * _0x237efa), _0x58ae4b['globalAlpha'] = 0.5, _0x58ae4b['translate'](0x0, 0x5 * _0x237efa), _0x58ae4b['save'](), _0x58ae4b['translate'](0x56 * _0x237efa, 0x28 * _0x237efa), round_rect(_0x58ae4b, -0x3a * _0x237efa, -0x9 * _0x237efa, 0x74 * _0x237efa, 0x12 * _0x237efa, 0x6 * _0x237efa), _0x58ae4b['restore'](), fill_path(_0x58ae4b, _0x3338a4[0x0]), _0x58ae4b['globalAlpha'] = 0x1, _0x58ae4b['translate'](0x0, -0x5 * _0x237efa), _0x58ae4b['save'](), _0x58ae4b['translate'](0x56 * _0x237efa, 0x28 * _0x237efa), round_rect(_0x58ae4b, -0x3a * _0x237efa, -0x9 * _0x237efa, 0x74 * _0x237efa, 0x12 * _0x237efa, 0x6 * _0x237efa), _0x58ae4b['restore'](), fill_path(_0x58ae4b, _0x3338a4[0x3], _0x3338a4[0x4], 0x3 * _0x237efa), _0x58ae4b['globalAlpha'] = 0.75, _0x58ae4b['translate'](0x0, 0x5 * _0x237efa), _0x58ae4b['beginPath'](), _0x58ae4b['lineCap'] = 'round', _0x58ae4b['lineJoin'] = 'round', _0x58ae4b['moveTo'](0x6d * _0x237efa, 0x2f * _0x237efa), _0x58ae4b['bezierCurveTo'](110.5 * _0x237efa, 0x2d * _0x237efa, 110.5 * _0x237efa, 0x2d * _0x237efa, 0x70 * _0x237efa, 0x2b * _0x237efa), _0x58ae4b['bezierCurveTo'](0x72 * _0x237efa, 0x2c * _0x237efa, 0x72 * _0x237efa, 0x2c * _0x237efa, 0x74 * _0x237efa, 0x2d * _0x237efa), _0x58ae4b['bezierCurveTo'](117.5 * _0x237efa, 0x2b * _0x237efa, 117.5 * _0x237efa, 0x2b * _0x237efa, 0x77 * _0x237efa, 0x29 * _0x237efa), _0x58ae4b['bezierCurveTo'](0x79 * _0x237efa, 41.5 * _0x237efa, 0x79 * _0x237efa, 41.5 * _0x237efa, 0x7b * _0x237efa, 0x2a * _0x237efa), _0x58ae4b['closePath'](), fill_path(_0x58ae4b, _0x3338a4[0x0]), _0x58ae4b['beginPath'](), _0x58ae4b['translate'](0x0, 0x5 * _0x237efa), _0x58ae4b['lineCap'] = 'round', _0x58ae4b['lineJoin'] = 'round', _0x58ae4b['moveTo'](0x36 * _0x237efa, 0x23 * _0x237efa), _0x58ae4b['bezierCurveTo'](61.5 * _0x237efa, 0x23 * _0x237efa, 61.5 * _0x237efa, 0x23 * _0x237efa, 0x45 * _0x237efa, 0x23 * _0x237efa), _0x58ae4b['bezierCurveTo'](0x46 * _0x237efa, 0x30 * _0x237efa, 0x46 * _0x237efa, 0x3c * _0x237efa, 0x3c * _0x237efa, 0x3b * _0x237efa), _0x58ae4b['bezierCurveTo'](0x2d * _0x237efa, 0x3d * _0x237efa, 0x2c * _0x237efa, 0x3c * _0x237efa, 0x2b * _0x237efa, 0x35 * _0x237efa), _0x58ae4b['bezierCurveTo'](0x2a * _0x237efa, 0x31 * _0x237efa, 0x37 * _0x237efa, 0x33 * _0x237efa, 0x37 * _0x237efa, 0x2c * _0x237efa), _0x58ae4b['closePath'](), fill_path(_0x58ae4b, _0x3338a4[0x0]), _0x58ae4b['globalAlpha'] = 0x1, _0x58ae4b['translate'](0x0, -0x5 * _0x237efa), _0x58ae4b['beginPath'](), _0x58ae4b['lineCap'] = 'round', _0x58ae4b['lineJoin'] = 'round', _0x58ae4b['moveTo'](0x69 * _0x237efa, 0x26 * _0x237efa), _0x58ae4b['bezierCurveTo'](0x6e * _0x237efa, 0x30 * _0x237efa, 0x6e * _0x237efa, 0x32 * _0x237efa, 0x69 * _0x237efa, 0x35 * _0x237efa), _0x58ae4b['bezierCurveTo'](0x62 * _0x237efa, 0x3e * _0x237efa, 0x6b * _0x237efa, 0x42 * _0x237efa, 0x75 * _0x237efa, 0x3c * _0x237efa), _0x58ae4b['bezierCurveTo'](0x80 * _0x237efa, 0x38 * _0x237efa, 0x82 * _0x237efa, 0x38 * _0x237efa, 0x7e * _0x237efa, 0x31 * _0x237efa), _0x58ae4b['bezierCurveTo'](123.5 * _0x237efa, 41.5 * _0x237efa, 123.5 * _0x237efa, 41.5 * _0x237efa, 0x79 * _0x237efa, 0x22 * _0x237efa), _0x58ae4b['closePath'](), fill_path(_0x58ae4b, _0x3338a4[0x7], _0x3338a4[0x8], 0x3 * _0x237efa), _0x58ae4b['beginPath'](), _0x58ae4b['lineCap'] = 'round', _0x58ae4b['lineJoin'] = 'round', _0x58ae4b['moveTo'](0x6d * _0x237efa, 0x2f * _0x237efa), _0x58ae4b['bezierCurveTo'](110.5 * _0x237efa, 0x2d * _0x237efa, 110.5 * _0x237efa, 0x2d * _0x237efa, 0x70 * _0x237efa, 0x2b * _0x237efa), _0x58ae4b['bezierCurveTo'](0x72 * _0x237efa, 0x2c * _0x237efa, 0x72 * _0x237efa, 0x2c * _0x237efa, 0x74 * _0x237efa, 0x2d * _0x237efa), _0x58ae4b['bezierCurveTo'](117.5 * _0x237efa, 0x2b * _0x237efa, 117.5 * _0x237efa, 0x2b * _0x237efa, 0x77 * _0x237efa, 0x29 * _0x237efa), _0x58ae4b['bezierCurveTo'](0x79 * _0x237efa, 41.5 * _0x237efa, 0x79 * _0x237efa, 41.5 * _0x237efa, 0x7b * _0x237efa, 0x2a * _0x237efa), _0x58ae4b['closePath'](), fill_path(_0x58ae4b, undefined, _0x3338a4[0x6], 0x3 * _0x237efa), _0x58ae4b['beginPath'](), _0x58ae4b['lineCap'] = 'round', _0x58ae4b['lineJoin'] = 'round', _0x58ae4b['moveTo'](0x54 * _0x237efa, 0x21 * _0x237efa), _0x58ae4b['bezierCurveTo'](88.5 * _0x237efa, 34.5 * _0x237efa, 88.5 * _0x237efa, 34.5 * _0x237efa, 0x5d * _0x237efa, 0x24 * _0x237efa), _0x58ae4b['bezierCurveTo'](0x57 * _0x237efa, 0x2b * _0x237efa, 0x58 * _0x237efa, 0x2d * _0x237efa, 0x5b * _0x237efa, 0x2e * _0x237efa), _0x58ae4b['bezierCurveTo'](0x62 * _0x237efa, 0x38 * _0x237efa, 0x5b * _0x237efa, 0x39 * _0x237efa, 0x55 * _0x237efa, 0x35 * _0x237efa), _0x58ae4b['bezierCurveTo'](0x50 * _0x237efa, 0x32 * _0x237efa, 0x4e * _0x237efa, 0x31 * _0x237efa, 0x52 * _0x237efa, 0x2b * _0x237efa), _0x58ae4b['bezierCurveTo'](83.5 * _0x237efa, 0x26 * _0x237efa, 83.5 * _0x237efa, 0x26 * _0x237efa, 0x55 * _0x237efa, 0x21 * _0x237efa), _0x58ae4b['closePath'](), fill_path(_0x58ae4b, _0x3338a4[0x5], _0x3338a4[0x6], 0x3 * _0x237efa), _0x58ae4b['beginPath'](), _0x58ae4b['lineCap'] = 'round', _0x58ae4b['lineJoin'] = 'round', _0x58ae4b['moveTo'](0x36 * _0x237efa, 0x23 * _0x237efa), _0x58ae4b['bezierCurveTo'](61.5 * _0x237efa, 0x23 * _0x237efa, 61.5 * _0x237efa, 0x23 * _0x237efa, 0x45 * _0x237efa, 0x23 * _0x237efa), _0x58ae4b['bezierCurveTo'](0x46 * _0x237efa, 0x30 * _0x237efa, 0x46 * _0x237efa, 0x3c * _0x237efa, 0x3c * _0x237efa, 0x3b * _0x237efa), _0x58ae4b['bezierCurveTo'](0x2d * _0x237efa, 0x3d * _0x237efa, 0x2c * _0x237efa, 0x3c * _0x237efa, 0x2b * _0x237efa, 0x35 * _0x237efa), _0x58ae4b['bezierCurveTo'](0x2a * _0x237efa, 0x31 * _0x237efa, 0x37 * _0x237efa, 0x33 * _0x237efa, 0x37 * _0x237efa, 0x2c * _0x237efa), _0x58ae4b['closePath'](), fill_path(_0x58ae4b, _0x3338a4[0x7], _0x3338a4[0x8], 0x3 * _0x237efa), _0x58ae4b['beginPath'](), _0x58ae4b['lineCap'] = 'round', _0x58ae4b['lineJoin'] = 'round', _0x58ae4b['moveTo'](0x30 * _0x237efa, 0x31 * _0x237efa), _0x58ae4b['bezierCurveTo'](0x32 * _0x237efa, 0x32 * _0x237efa, 0x32 * _0x237efa, 0x32 * _0x237efa, 0x34 * _0x237efa, 0x33 * _0x237efa), _0x58ae4b['bezierCurveTo'](50.5 * _0x237efa, 0x34 * _0x237efa, 50.5 * _0x237efa, 0x34 * _0x237efa, 0x31 * _0x237efa, 0x35 * _0x237efa), _0x58ae4b['bezierCurveTo'](0x33 * _0x237efa, 54.5 * _0x237efa, 0x33 * _0x237efa, 54.5 * _0x237efa, 0x35 * _0x237efa, 0x38 * _0x237efa), _0x58ae4b['bezierCurveTo'](0x33 * _0x237efa, 57.5 * _0x237efa, 0x33 * _0x237efa, 57.5 * _0x237efa, 0x31 * _0x237efa, 0x3b * _0x237efa), _0x58ae4b['closePath'](), fill_path(_0x58ae4b, undefined, _0x3338a4[0x6], 0x3 * _0x237efa), _0x58ae4b['beginPath'](), _0x58ae4b['lineCap'] = 'round', _0x58ae4b['lineJoin'] = 'round', _0x58ae4b['moveTo'](0x36 * _0x237efa, 0x27 * _0x237efa), _0x58ae4b['bezierCurveTo'](61.5 * _0x237efa, 39.5 * _0x237efa, 61.5 * _0x237efa, 39.5 * _0x237efa, 0x45 * _0x237efa, 0x28 * _0x237efa), _0x58ae4b['closePath'](), fill_path(_0x58ae4b, undefined, _0x3338a4[0x6], 0x3 * _0x237efa), _0x58ae4b['beginPath'](), _0x58ae4b['lineCap'] = 'round', _0x58ae4b['lineJoin'] = 'round', _0x58ae4b['moveTo'](0x37 * _0x237efa, 0x2b * _0x237efa), _0x58ae4b['bezierCurveTo'](61.5 * _0x237efa, 43.5 * _0x237efa, 61.5 * _0x237efa, 43.5 * _0x237efa, 0x44 * _0x237efa, 0x2c * _0x237efa), _0x58ae4b['closePath'](), fill_path(_0x58ae4b, undefined, _0x3338a4[0x6], 0x3 * _0x237efa), _0x58ae4b['translate'](0x1b * _0x237efa, 0x5 * _0x237efa), circle(_0x58ae4b, 0x23 * _0x237efa, 0x4b * _0x237efa, 0xf * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x9]), circle(_0x58ae4b, 0x55 * _0x237efa, 0x4b * _0x237efa, 0xf * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0x9]), circle(_0x58ae4b, 0x20 * _0x237efa, 0x43 * _0x237efa, 0x5 * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0xa]), circle(_0x58ae4b, 0x52 * _0x237efa, 0x43 * _0x237efa, 0x5 * _0x237efa), fill_path(_0x58ae4b, _0x3338a4[0xa]));
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    return _0x997fd2;
}

function create_robotskin(_0x3f4760, _0x23bec8) {
    var _0x57e705 = document['createElement']('canvas'),
        _0x4d513d = _0x57e705['getContext']('2d');
    return _0x57e705['width'] = 0x15e * _0x3f4760, _0x57e705['height'] = 0x15e * _0x3f4760, _0x4d513d['translate'](0x0, 0xf * _0x3f4760), _0x4d513d['globalAlpha'] = 0.5, _0x4d513d['save'](), _0x4d513d['translate'](0xae * _0x3f4760, 0xac * _0x3f4760), round_rect(_0x4d513d, -0x51 * _0x3f4760, -0x3c * _0x3f4760, 0xa2 * _0x3f4760, 0x78 * _0x3f4760, 0x1a * _0x3f4760), _0x4d513d['restore'](), fill_path(_0x4d513d, _0x23bec8[0x0]), _0x4d513d['translate'](0x0, -0xf * _0x3f4760), _0x4d513d['globalAlpha'] = 0x1, _0x4d513d['save'](), _0x4d513d['translate'](0xae * _0x3f4760, 0xac * _0x3f4760), round_rect(_0x4d513d, -0x51 * _0x3f4760, -0x3c * _0x3f4760, 0xa2 * _0x3f4760, 0x78 * _0x3f4760, 0x1a * _0x3f4760), _0x4d513d['restore'](), fill_path(_0x4d513d, _0x23bec8[0x1], _0x23bec8[0x2], 0x7 * _0x3f4760), _0x4d513d['beginPath'](), _0x4d513d['lineCap'] = 'round', _0x4d513d['lineJoin'] = 'round', _0x4d513d['moveTo'](0xb3 * _0x3f4760, 0xd3 * _0x3f4760), _0x4d513d['bezierCurveTo'](0xb7 * _0x3f4760, 204.5 * _0x3f4760, 0xb7 * _0x3f4760, 204.5 * _0x3f4760, 0xbb * _0x3f4760, 0xc6 * _0x3f4760), _0x4d513d['bezierCurveTo'](198.5 * _0x3f4760, 191.5 * _0x3f4760, 198.5 * _0x3f4760, 191.5 * _0x3f4760, 0xd2 * _0x3f4760, 0xb9 * _0x3f4760), _0x4d513d['bezierCurveTo'](0xd7 * _0x3f4760, 176.5 * _0x3f4760, 0xd7 * _0x3f4760, 176.5 * _0x3f4760, 0xdc * _0x3f4760, 0xa8 * _0x3f4760), _0x4d513d['bezierCurveTo'](0xd5 * _0x3f4760, 173.5 * _0x3f4760, 0xd5 * _0x3f4760, 173.5 * _0x3f4760, 0xce * _0x3f4760, 0xb3 * _0x3f4760), _0x4d513d['bezierCurveTo'](0xc3 * _0x3f4760, 0xb8 * _0x3f4760, 0xc3 * _0x3f4760, 0xb8 * _0x3f4760, 0xb8 * _0x3f4760, 0xbd * _0x3f4760), _0x4d513d['closePath'](), fill_path(_0x4d513d, _0x23bec8[0x3]), _0x4d513d['beginPath'](), _0x4d513d['lineCap'] = 'round', _0x4d513d['lineJoin'] = 'round', _0x4d513d['moveTo'](0xa7 * _0x3f4760, 0xe9 * _0x3f4760), _0x4d513d['bezierCurveTo'](0xa7 * _0x3f4760, 0xcf * _0x3f4760, 0xa7 * _0x3f4760, 0xcf * _0x3f4760, 0xa7 * _0x3f4760, 0xb5 * _0x3f4760), _0x4d513d['bezierCurveTo'](0xa7 * _0x3f4760, 0xa6 * _0x3f4760, 0x9d * _0x3f4760, 0xa4 * _0x3f4760, 0x94 * _0x3f4760, 0xa5 * _0x3f4760), _0x4d513d['bezierCurveTo'](0x78 * _0x3f4760, 0xa5 * _0x3f4760, 0x78 * _0x3f4760, 0xa5 * _0x3f4760, 0x5c * _0x3f4760, 0xa5 * _0x3f4760), _0x4d513d['bezierCurveTo'](0x5c * _0x3f4760, 186.5 * _0x3f4760, 0x5c * _0x3f4760, 186.5 * _0x3f4760, 0x5c * _0x3f4760, 0xd0 * _0x3f4760), _0x4d513d['bezierCurveTo'](0x5d * _0x3f4760, 0xde * _0x3f4760, 0x66 * _0x3f4760, 0xea * _0x3f4760, 0x77 * _0x3f4760, 0xe9 * _0x3f4760), _0x4d513d['closePath'](), fill_path(_0x4d513d, _0x23bec8[0x1], _0x23bec8[0x2], 0x7 * _0x3f4760), circle(_0x4d513d, 0x98 * _0x3f4760, 0xb3 * _0x3f4760, 0x6 * _0x3f4760), fill_path(_0x4d513d, _0x23bec8[0x4]), circle(_0x4d513d, 0x6b * _0x3f4760, 0xb3 * _0x3f4760, 0x6 * _0x3f4760), fill_path(_0x4d513d, _0x23bec8[0x4]), _0x4d513d['save'](), _0x4d513d['translate'](0xd2 * _0x3f4760, 0xc8 * _0x3f4760), _0x4d513d['rotate'](0.2), round_regular_polygon(_0x4d513d, 0x6, 0x20 * _0x3f4760, 0xa * _0x3f4760), _0x4d513d['restore'](), fill_path(_0x4d513d, _0x23bec8[0x5], _0x23bec8[0x2], 0x7 * _0x3f4760), _0x4d513d['save'](), _0x4d513d['translate'](0xd2 * _0x3f4760, 0xc8 * _0x3f4760), _0x4d513d['rotate'](1.0471975511965976), round_regular_polygon(_0x4d513d, 0x6, 0x13 * _0x3f4760, 0x6 * _0x3f4760), _0x4d513d['restore'](), fill_path(_0x4d513d, _0x23bec8[0x6], _0x23bec8[0x7], 0x7 * _0x3f4760), _0x4d513d['save'](), _0x4d513d['translate'](0xcd * _0x3f4760, 0xc1 * _0x3f4760), _0x4d513d['rotate'](0x0), round_regular_polygon(_0x4d513d, 0x6, 0xa * _0x3f4760, 0x3 * _0x3f4760), _0x4d513d['restore'](), fill_path(_0x4d513d, _0x23bec8[0x8]), _0x4d513d['save'](), _0x4d513d['translate'](0x89 * _0x3f4760, 0xc8 * _0x3f4760), _0x4d513d['rotate'](-0.5235987755982988), round_regular_polygon(_0x4d513d, 0x6, 0x14 * _0x3f4760, 0x5 * _0x3f4760), _0x4d513d['restore'](), fill_path(_0x4d513d, _0x23bec8[0x6], _0x23bec8[0x7], 0x7 * _0x3f4760), _0x4d513d['save'](), _0x4d513d['translate'](0x83 * _0x3f4760, 0xc2 * _0x3f4760), round_regular_polygon(_0x4d513d, 0x6, 0xa * _0x3f4760, 0x3 * _0x3f4760), _0x4d513d['restore'](), fill_path(_0x4d513d, _0x23bec8[0x8]), _0x4d513d['save'](), _0x4d513d['translate'](150.5 * _0x3f4760, 0x78 * _0x3f4760), _0x4d513d['rotate'](0x0), round_rect(_0x4d513d, -19.5 * _0x3f4760, -0x8 * _0x3f4760, 0x27 * _0x3f4760, 0x10 * _0x3f4760, 0x0 * _0x3f4760), _0x4d513d['restore'](), fill_path(_0x4d513d, undefined, _0x23bec8[0x2], 0x7 * _0x3f4760), _0x57e705;
}

function create_skins(_0x4de905, _0x241681, _0x45ce83) {
    var _0x5a79da = document['createElement']('canvas'),
        _0x515b6d = _0x5a79da['getContext']('2d');
    _0x5a79da['width'] = 0xaf * _0x4de905, _0x5a79da['height'] = 0x96 * _0x4de905;
    if (_0x45ce83 == 0x0) _0x515b6d['globalAlpha'] = 0.5, _0x515b6d['translate'](-0x58 * _0x4de905, -0x5f * _0x4de905), _0x515b6d['save'](), _0x515b6d['translate'](0xae * _0x4de905, 195.5 * _0x4de905), round_rect(_0x515b6d, -0x52 * _0x4de905, -46.5 * _0x4de905, 0xa4 * _0x4de905, 0x5d * _0x4de905, 0x1e * _0x4de905), _0x515b6d['restore'](), fill_path(_0x515b6d, _0x241681[0x0]), _0x515b6d['globalAlpha'] = 0x1, _0x515b6d['save'](), _0x515b6d['translate'](0xae * _0x4de905, 170.5 * _0x4de905), round_rect(_0x515b6d, -0x51 * _0x4de905, -59.5 * _0x4de905, 0xa2 * _0x4de905, 0x77 * _0x4de905, 0x1c * _0x4de905), _0x515b6d['restore'](), fill_path(_0x515b6d, _0x241681[0x1], _0x241681[0x2], 6.5 * _0x4de905), circle(_0x515b6d, 0x89 * _0x4de905, 0xc8 * _0x4de905, 22.090722034374522 * _0x4de905), fill_path(_0x515b6d, _0x241681[0x3]), circle(_0x515b6d, 0xd2 * _0x4de905, 0xc8 * _0x4de905, 22.20360331117452 * _0x4de905), fill_path(_0x515b6d, _0x241681[0x3]), circle(_0x515b6d, 0x83 * _0x4de905, 0xc2 * _0x4de905, 0x7 * _0x4de905), fill_path(_0x515b6d, _0x241681[0x4]), circle(_0x515b6d, 0xce * _0x4de905, 0xc2 * _0x4de905, 0x7 * _0x4de905), fill_path(_0x515b6d, _0x241681[0x4]), _0x515b6d['translate'](0x0, 0x1 * _0x4de905), _0x515b6d['save'](), _0x515b6d['translate'](138.5 * _0x4de905, 180.5 * _0x4de905), round_rect(_0x515b6d, -22.5 * _0x4de905, -11.5 * _0x4de905, 0x2d * _0x4de905, 0x17 * _0x4de905, 0x0 * _0x4de905), _0x515b6d['restore'](), fill_path(_0x515b6d, _0x241681[0x1]), _0x515b6d['save'](), _0x515b6d['translate'](0xcf * _0x4de905, 177.5 * _0x4de905), round_rect(_0x515b6d, -0x1f * _0x4de905, -9.5 * _0x4de905, 0x3e * _0x4de905, 0x13 * _0x4de905, 0x0 * _0x4de905), _0x515b6d['restore'](), fill_path(_0x515b6d, _0x241681[0x1]), _0x515b6d['save'](), _0x515b6d['translate'](171.5 * _0x4de905, 0xdc * _0x4de905), round_rect(_0x515b6d, -52.5 * _0x4de905, -0x2 * _0x4de905, 0x69 * _0x4de905, 0x4 * _0x4de905, 0x0 * _0x4de905), _0x515b6d['restore'](), fill_path(_0x515b6d, _0x241681[0x1]);
    else {
        if (_0x45ce83 == 0x1) _0x515b6d['globalAlpha'] = 0.5, _0x515b6d['translate'](-0x58 * _0x4de905, -0x5f * _0x4de905), _0x515b6d['save'](), _0x515b6d['translate'](0xae * _0x4de905, 195.5 * _0x4de905), round_rect(_0x515b6d, -0x52 * _0x4de905, -46.5 * _0x4de905, 0xa4 * _0x4de905, 0x5d * _0x4de905, 0x1e * _0x4de905), _0x515b6d['restore'](), fill_path(_0x515b6d, _0x241681[0x0]), _0x515b6d['globalAlpha'] = 0x1, _0x515b6d['save'](), _0x515b6d['translate'](0xae * _0x4de905, 170.5 * _0x4de905), round_rect(_0x515b6d, -0x51 * _0x4de905, -59.5 * _0x4de905, 0xa2 * _0x4de905, 0x77 * _0x4de905, 0x1c * _0x4de905), _0x515b6d['restore'](), fill_path(_0x515b6d, _0x241681[0x1], _0x241681[0x2], 6.5 * _0x4de905), _0x515b6d['beginPath'](), _0x515b6d['lineCap'] = 'round', _0x515b6d['lineJoin'] = 'round', _0x515b6d['moveTo'](0xb7 * _0x4de905, 0xdf * _0x4de905), _0x515b6d['bezierCurveTo'](0xc1 * _0x4de905, 0xbb * _0x4de905, 0xd7 * _0x4de905, 0xc1 * _0x4de905, 0xe3 * _0x4de905, 0x9f * _0x4de905), _0x515b6d['bezierCurveTo'](0xe3 * _0x4de905, 0xc2 * _0x4de905, 0xd1 * _0x4de905, 0xbb * _0x4de905, 0xb7 * _0x4de905, 0xdf * _0x4de905), _0x515b6d['closePath'](), fill_path(_0x515b6d, _0x241681[0x5]), circle(_0x515b6d, 0x89 * _0x4de905, 0xc8 * _0x4de905, 22.090722034374522 * _0x4de905), fill_path(_0x515b6d, _0x241681[0x3]), circle(_0x515b6d, 0xd2 * _0x4de905, 0xc8 * _0x4de905, 22.20360331117452 * _0x4de905), fill_path(_0x515b6d, _0x241681[0x3]), circle(_0x515b6d, 0x83 * _0x4de905, 0xbe * _0x4de905, 0x7 * _0x4de905), fill_path(_0x515b6d, _0x241681[0x4]), circle(_0x515b6d, 0xcc * _0x4de905, 0xbe * _0x4de905, 0x7 * _0x4de905), fill_path(_0x515b6d, _0x241681[0x4]), _0x515b6d['beginPath'](), _0x515b6d['lineCap'] = 'round', _0x515b6d['lineJoin'] = 'round', _0x515b6d['moveTo'](0x78 * _0x4de905, 0x9a * _0x4de905), _0x515b6d['bezierCurveTo'](0x7d * _0x4de905, 0x92 * _0x4de905, 0x83 * _0x4de905, 0x8f * _0x4de905, 0x93 * _0x4de905, 0x89 * _0x4de905), _0x515b6d['bezierCurveTo'](0x8b * _0x4de905, 0x93 * _0x4de905, 0x81 * _0x4de905, 0x98 * _0x4de905, 0x79 * _0x4de905, 0x9a * _0x4de905), _0x515b6d['closePath'](), fill_path(_0x515b6d, _0x241681[0x5]), _0x515b6d['beginPath'](), _0x515b6d['lineCap'] = 'round', _0x515b6d['lineJoin'] = 'round', _0x515b6d['moveTo'](0x78 * _0x4de905, 0xa2 * _0x4de905), _0x515b6d['bezierCurveTo'](0x86 * _0x4de905, 0x99 * _0x4de905, 0x8b * _0x4de905, 0x95 * _0x4de905, 0x96 * _0x4de905, 0x90 * _0x4de905), _0x515b6d['bezierCurveTo'](0x8f * _0x4de905, 0x9b * _0x4de905, 0x80 * _0x4de905, 0xa3 * _0x4de905, 0x79 * _0x4de905, 0xa1 * _0x4de905), _0x515b6d['closePath'](), fill_path(_0x515b6d, _0x241681[0x5]), _0x515b6d['beginPath'](), _0x515b6d['lineCap'] = 'round', _0x515b6d['lineJoin'] = 'round', _0x515b6d['moveTo'](0x7f * _0x4de905, 0x8e * _0x4de905), _0x515b6d['bezierCurveTo'](0x81 * _0x4de905, 0x97 * _0x4de905, 0x84 * _0x4de905, 0x9d * _0x4de905, 0x89 * _0x4de905, 0xa2 * _0x4de905), _0x515b6d['bezierCurveTo'](0x86 * _0x4de905, 0x98 * _0x4de905, 0x84 * _0x4de905, 0x92 * _0x4de905, 0x7f * _0x4de905, 0x8e * _0x4de905), _0x515b6d['closePath'](), fill_path(_0x515b6d, _0x241681[0x5]), _0x515b6d['beginPath'](), _0x515b6d['lineCap'] = 'round', _0x515b6d['lineJoin'] = 'round', _0x515b6d['moveTo'](0x87 * _0x4de905, 0x8c * _0x4de905), _0x515b6d['bezierCurveTo'](0x8d * _0x4de905, 0x90 * _0x4de905, 0x8f * _0x4de905, 0x96 * _0x4de905, 0x8f * _0x4de905, 0x9d * _0x4de905), _0x515b6d['bezierCurveTo'](0x8a * _0x4de905, 0x96 * _0x4de905, 0x88 * _0x4de905, 0x91 * _0x4de905, 0x87 * _0x4de905, 0x8c * _0x4de905), _0x515b6d['closePath'](), fill_path(_0x515b6d, _0x241681[0x5]);
        else {
            if (_0x45ce83 == 0x2) _0x515b6d['globalAlpha'] = 0.5, _0x515b6d['translate'](-0x58 * _0x4de905, -0x5f * _0x4de905), _0x515b6d['save'](), _0x515b6d['translate'](0xae * _0x4de905, 195.5 * _0x4de905), round_rect(_0x515b6d, -0x52 * _0x4de905, -46.5 * _0x4de905, 0xa4 * _0x4de905, 0x5d * _0x4de905, 0x1e * _0x4de905), _0x515b6d['restore'](), fill_path(_0x515b6d, _0x241681[0x0]), _0x515b6d['globalAlpha'] = 0x1, _0x515b6d['save'](), _0x515b6d['translate'](0xae * _0x4de905, 170.5 * _0x4de905), round_rect(_0x515b6d, -0x51 * _0x4de905, -59.5 * _0x4de905, 0xa2 * _0x4de905, 0x77 * _0x4de905, 0x1c * _0x4de905), _0x515b6d['restore'](), fill_path(_0x515b6d, _0x241681[0x1], _0x241681[0x2], 6.5 * _0x4de905), circle(_0x515b6d, 0x89 * _0x4de905, 0xc8 * _0x4de905, 22.090722034374522 * _0x4de905), fill_path(_0x515b6d, _0x241681[0x3]), circle(_0x515b6d, 0xd2 * _0x4de905, 0xc8 * _0x4de905, 22.20360331117452 * _0x4de905), fill_path(_0x515b6d, _0x241681[0x3]), circle(_0x515b6d, 0x82 * _0x4de905, 0xc0 * _0x4de905, 0x7 * _0x4de905), fill_path(_0x515b6d, _0x241681[0x4]), circle(_0x515b6d, 0xcb * _0x4de905, 0xc0 * _0x4de905, 0x7 * _0x4de905), fill_path(_0x515b6d, _0x241681[0x4]), _0x515b6d['beginPath'](), _0x515b6d['lineCap'] = 'round', _0x515b6d['lineJoin'] = 'round', _0x515b6d['moveTo'](0x73 * _0x4de905, 0xe0 * _0x4de905), _0x515b6d['bezierCurveTo'](0xad * _0x4de905, 223.5 * _0x4de905, 0xad * _0x4de905, 223.5 * _0x4de905, 0xe7 * _0x4de905, 0xdf * _0x4de905), _0x515b6d['bezierCurveTo'](0xe6 * _0x4de905, 0xde * _0x4de905, 0xc6 * _0x4de905, 0xdf * _0x4de905, 0xba * _0x4de905, 0xd1 * _0x4de905), _0x515b6d['bezierCurveTo'](173.5 * _0x4de905, 0xd1 * _0x4de905, 173.5 * _0x4de905, 0xd1 * _0x4de905, 0xa1 * _0x4de905, 0xd1 * _0x4de905), _0x515b6d['bezierCurveTo'](0x92 * _0x4de905, 0xe0 * _0x4de905, 0x72 * _0x4de905, 0xdf * _0x4de905, 0x74 * _0x4de905, 0xe0 * _0x4de905), _0x515b6d['closePath'](), fill_path(_0x515b6d, _0x241681[0x1]), _0x515b6d['beginPath'](), _0x515b6d['lineCap'] = 'round', _0x515b6d['lineJoin'] = 'round', _0x515b6d['moveTo'](0x70 * _0x4de905, 0xc1 * _0x4de905), _0x515b6d['bezierCurveTo'](0x9a * _0x4de905, 0xb6 * _0x4de905, 0xc2 * _0x4de905, 0xb7 * _0x4de905, 0xea * _0x4de905, 0xc0 * _0x4de905), _0x515b6d['bezierCurveTo'](0xd9 * _0x4de905, 0x9a * _0x4de905, 0x94 * _0x4de905, 0x7f * _0x4de905, 0x70 * _0x4de905, 0xc0 * _0x4de905), _0x515b6d['closePath'](), fill_path(_0x515b6d, _0x241681[0x1]);
            else {
                if (_0x45ce83 == 0x3) _0x515b6d['globalAlpha'] = 0.5, _0x515b6d['translate'](-0x58 * _0x4de905, -0x5f * _0x4de905), _0x515b6d['save'](), _0x515b6d['translate'](0xae * _0x4de905, 195.5 * _0x4de905), round_rect(_0x515b6d, -0x52 * _0x4de905, -46.5 * _0x4de905, 0xa4 * _0x4de905, 0x5d * _0x4de905, 0x1e * _0x4de905), _0x515b6d['restore'](), fill_path(_0x515b6d, _0x241681[0x0]), _0x515b6d['globalAlpha'] = 0x1, _0x515b6d['save'](), _0x515b6d['translate'](0xae * _0x4de905, 170.5 * _0x4de905), round_rect(_0x515b6d, -0x51 * _0x4de905, -59.5 * _0x4de905, 0xa2 * _0x4de905, 0x77 * _0x4de905, 0x1c * _0x4de905), _0x515b6d['restore'](), fill_path(_0x515b6d, _0x241681[0x1], _0x241681[0x2], 6.5 * _0x4de905), circle(_0x515b6d, 0x89 * _0x4de905, 0xc8 * _0x4de905, 22.090722034374522 * _0x4de905), fill_path(_0x515b6d, _0x241681[0x3]), circle(_0x515b6d, 0xd2 * _0x4de905, 0xc8 * _0x4de905, 22.20360331117452 * _0x4de905), fill_path(_0x515b6d, _0x241681[0x3]), circle(_0x515b6d, 0x82 * _0x4de905, 0xc0 * _0x4de905, 0x7 * _0x4de905), fill_path(_0x515b6d, _0x241681[0x4]), circle(_0x515b6d, 0xcb * _0x4de905, 0xc0 * _0x4de905, 0x7 * _0x4de905), fill_path(_0x515b6d, _0x241681[0x4]), _0x515b6d['beginPath'](), _0x515b6d['lineCap'] = 'round', _0x515b6d['lineJoin'] = 'round', _0x515b6d['moveTo'](0x78 * _0x4de905, 0xb0 * _0x4de905), _0x515b6d['bezierCurveTo'](0xaf * _0x4de905, 0xc1 * _0x4de905, 147.5 * _0x4de905, 184.5 * _0x4de905, 0xaf * _0x4de905, 0xc1 * _0x4de905), _0x515b6d['bezierCurveTo'](0xc8 * _0x4de905, 184.5 * _0x4de905, 0xc8 * _0x4de905, 184.5 * _0x4de905, 0xe1 * _0x4de905, 0xb0 * _0x4de905), _0x515b6d['closePath'](), fill_path(_0x515b6d, _0x241681[0x1]), _0x515b6d['beginPath'](), _0x515b6d['lineCap'] = 'round', _0x515b6d['lineJoin'] = 'round', _0x515b6d['moveTo'](0xe2 * _0x4de905, 0xdf * _0x4de905), _0x515b6d['bezierCurveTo'](173.5 * _0x4de905, 0xdf * _0x4de905, 173.5 * _0x4de905, 0xdf * _0x4de905, 0x79 * _0x4de905, 0xdf * _0x4de905), _0x515b6d['bezierCurveTo'](0x94 * _0x4de905, 0xda * _0x4de905, 0x94 * _0x4de905, 0xda * _0x4de905, 0xaf * _0x4de905, 0xd5 * _0x4de905), _0x515b6d['closePath'](), fill_path(_0x515b6d, _0x241681[0x1]);
                else {
                    if (_0x45ce83 == 0x4) _0x515b6d['globalAlpha'] = 0.5, _0x515b6d['translate'](-0x58 * _0x4de905, -0x5f * _0x4de905), _0x515b6d['save'](), _0x515b6d['translate'](0xae * _0x4de905, 195.5 * _0x4de905), round_rect(_0x515b6d, -0x52 * _0x4de905, -46.5 * _0x4de905, 0xa4 * _0x4de905, 0x5d * _0x4de905, 0x1e * _0x4de905), _0x515b6d['restore'](), fill_path(_0x515b6d, _0x241681[0x0]), _0x515b6d['globalAlpha'] = 0x1, _0x515b6d['save'](), _0x515b6d['translate'](0xae * _0x4de905, 170.5 * _0x4de905), _0x515b6d['rotate'](0x0), round_rect(_0x515b6d, -0x51 * _0x4de905, -59.5 * _0x4de905, 0xa2 * _0x4de905, 0x77 * _0x4de905, 0x1c * _0x4de905), _0x515b6d['restore'](), fill_path(_0x515b6d, _0x241681[0x1], _0x241681[0x2], 6.5 * _0x4de905), circle(_0x515b6d, 0x89 * _0x4de905, 0xc8 * _0x4de905, 22.090722034374522 * _0x4de905), fill_path(_0x515b6d, _0x241681[0x3]), circle(_0x515b6d, 0xd2 * _0x4de905, 0xc8 * _0x4de905, 22.20360331117452 * _0x4de905), fill_path(_0x515b6d, _0x241681[0x3]), circle(_0x515b6d, 0x89 * _0x4de905, 0xcb * _0x4de905, 0x8 * _0x4de905), fill_path(_0x515b6d, _0x241681[0x4]), circle(_0x515b6d, 0xd1 * _0x4de905, 0xcb * _0x4de905, 0x8 * _0x4de905), fill_path(_0x515b6d, _0x241681[0x4]), _0x515b6d['save'](), _0x515b6d['translate'](174.5 * _0x4de905, 0xda * _0x4de905), _0x515b6d['rotate'](0x0), round_rect(_0x515b6d, -60.5 * _0x4de905, -0x5 * _0x4de905, 0x79 * _0x4de905, 0xa * _0x4de905, 0x1c * _0x4de905), _0x515b6d['restore'](), fill_path(_0x515b6d, _0x241681[0x1]), _0x515b6d['beginPath'](), _0x515b6d['lineCap'] = 'round', _0x515b6d['lineJoin'] = 'round', _0x515b6d['moveTo'](0x71 * _0x4de905, 0xbe * _0x4de905), _0x515b6d['bezierCurveTo'](0x90 * _0x4de905, 181.5 * _0x4de905, 0x90 * _0x4de905, 181.5 * _0x4de905, 0xaf * _0x4de905, 0xad * _0x4de905), _0x515b6d['bezierCurveTo'](0xcd * _0x4de905, 0xb6 * _0x4de905, 0xcd * _0x4de905, 0xb6 * _0x4de905, 0xeb * _0x4de905, 0xbf * _0x4de905), _0x515b6d['bezierCurveTo'](0xf2 * _0x4de905, 0x8d * _0x4de905, 0x6a * _0x4de905, 0x77 * _0x4de905, 0x70 * _0x4de905, 0xbd * _0x4de905), _0x515b6d['closePath'](), fill_path(_0x515b6d, _0x241681[0x1]);
                    else {
                        if (_0x45ce83 == 0x5) _0x515b6d['globalAlpha'] = 0.5, _0x515b6d['translate'](-0x58 * _0x4de905, -0x5f * _0x4de905), _0x515b6d['save'](), _0x515b6d['translate'](0xae * _0x4de905, 195.5 * _0x4de905), round_rect(_0x515b6d, -0x52 * _0x4de905, -46.5 * _0x4de905, 0xa4 * _0x4de905, 0x5d * _0x4de905, 0x1e * _0x4de905), _0x515b6d['restore'](), fill_path(_0x515b6d, _0x241681[0x0]), _0x515b6d['globalAlpha'] = 0x1, _0x515b6d['save'](), _0x515b6d['translate'](0xae * _0x4de905, 170.5 * _0x4de905), _0x515b6d['rotate'](0x0), round_rect(_0x515b6d, -0x51 * _0x4de905, -59.5 * _0x4de905, 0xa2 * _0x4de905, 0x77 * _0x4de905, 0x1c * _0x4de905), _0x515b6d['restore'](), fill_path(_0x515b6d, _0x241681[0x1], _0x241681[0x2], 6.5 * _0x4de905), circle(_0x515b6d, 0x89 * _0x4de905, 0xc8 * _0x4de905, 22.090722034374522 * _0x4de905), fill_path(_0x515b6d, _0x241681[0x3]), circle(_0x515b6d, 0xd2 * _0x4de905, 0xc8 * _0x4de905, 22.20360331117452 * _0x4de905), fill_path(_0x515b6d, _0x241681[0x3]), circle(_0x515b6d, 0x8c * _0x4de905, 0xc4 * _0x4de905, 0x7 * _0x4de905), fill_path(_0x515b6d, _0x241681[0x4]), circle(_0x515b6d, 0xd5 * _0x4de905, 0xc4 * _0x4de905, 0x7 * _0x4de905), fill_path(_0x515b6d, _0x241681[0x4]), circle(_0x515b6d, 0x83 * _0x4de905, 0xce * _0x4de905, 0x3 * _0x4de905), fill_path(_0x515b6d, _0x241681[0x4]), circle(_0x515b6d, 0xcc * _0x4de905, 0xce * _0x4de905, 0x3 * _0x4de905), fill_path(_0x515b6d, _0x241681[0x4]), _0x515b6d['beginPath'](), _0x515b6d['lineCap'] = 'round', _0x515b6d['lineJoin'] = 'round', _0x515b6d['moveTo'](0x71 * _0x4de905, 0xb5 * _0x4de905), _0x515b6d['bezierCurveTo'](0x9f * _0x4de905, 0xcc * _0x4de905, 0xbe * _0x4de905, 0xca * _0x4de905, 0xeb * _0x4de905, 0xb5 * _0x4de905), _0x515b6d['bezierCurveTo'](0xf1 * _0x4de905, 0x89 * _0x4de905, 0x6d * _0x4de905, 0x82 * _0x4de905, 0x70 * _0x4de905, 0xb4 * _0x4de905), _0x515b6d['closePath'](), fill_path(_0x515b6d, _0x241681[0x1]), _0x515b6d['save'](), _0x515b6d['translate'](0xae * _0x4de905, 0xdc * _0x4de905), _0x515b6d['rotate'](0x0), round_rect(_0x515b6d, -0x38 * _0x4de905, -0x5 * _0x4de905, 0x70 * _0x4de905, 0xa * _0x4de905, 0x1 * _0x4de905), _0x515b6d['restore'](), fill_path(_0x515b6d, _0x241681[0x1]);
                        else {
                            if (_0x45ce83 == 0x6) _0x515b6d['globalAlpha'] = 0.5, _0x515b6d['translate'](-0x58 * _0x4de905, -0x5f * _0x4de905), _0x515b6d['save'](), _0x515b6d['translate'](0xae * _0x4de905, 195.5 * _0x4de905), round_rect(_0x515b6d, -0x52 * _0x4de905, -46.5 * _0x4de905, 0xa4 * _0x4de905, 0x5d * _0x4de905, 0x1e * _0x4de905), _0x515b6d['restore'](), fill_path(_0x515b6d, _0x241681[0x0]), _0x515b6d['globalAlpha'] = 0x1, _0x515b6d['save'](), _0x515b6d['translate'](0xae * _0x4de905, 170.5 * _0x4de905), round_rect(_0x515b6d, -0x51 * _0x4de905, -59.5 * _0x4de905, 0xa2 * _0x4de905, 0x77 * _0x4de905, 0x1c * _0x4de905), _0x515b6d['restore'](), fill_path(_0x515b6d, _0x241681[0x1], _0x241681[0x2], 6.5 * _0x4de905), circle(_0x515b6d, 0x89 * _0x4de905, 0xc8 * _0x4de905, 22.090722034374522 * _0x4de905), fill_path(_0x515b6d, _0x241681[0x3]), circle(_0x515b6d, 0xd2 * _0x4de905, 0xc8 * _0x4de905, 22.20360331117452 * _0x4de905), fill_path(_0x515b6d, _0x241681[0x3]), circle(_0x515b6d, 0x85 * _0x4de905, 0xbc * _0x4de905, 0x7 * _0x4de905), fill_path(_0x515b6d, _0x241681[0x4]), circle(_0x515b6d, 0xce * _0x4de905, 0xbc * _0x4de905, 0x7 * _0x4de905), fill_path(_0x515b6d, _0x241681[0x4]), _0x515b6d['beginPath'](), _0x515b6d['lineCap'] = 'round', _0x515b6d['lineJoin'] = 'round', _0x515b6d['moveTo'](0x6e * _0x4de905, 0xc1 * _0x4de905), _0x515b6d['bezierCurveTo'](0x82 * _0x4de905, 0xb6 * _0x4de905, 0x8e * _0x4de905, 0xb7 * _0x4de905, 0xa2 * _0x4de905, 0xc1 * _0x4de905), _0x515b6d['bezierCurveTo'](0xa4 * _0x4de905, 176.5 * _0x4de905, 0xa4 * _0x4de905, 176.5 * _0x4de905, 0xa6 * _0x4de905, 0xa0 * _0x4de905), _0x515b6d['bezierCurveTo'](0x89 * _0x4de905, 0x9f * _0x4de905, 0x89 * _0x4de905, 0x9f * _0x4de905, 0x6c * _0x4de905, 0x9e * _0x4de905), _0x515b6d['closePath'](), fill_path(_0x515b6d, _0x241681[0x1]), _0x515b6d['beginPath'](), _0x515b6d['lineCap'] = 'round', _0x515b6d['lineJoin'] = 'round', _0x515b6d['moveTo'](0xb8 * _0x4de905, 0xc0 * _0x4de905), _0x515b6d['bezierCurveTo'](0xcd * _0x4de905, 0xb7 * _0x4de905, 0xd8 * _0x4de905, 0xb7 * _0x4de905, 0xea * _0x4de905, 0xc0 * _0x4de905), _0x515b6d['bezierCurveTo'](233.5 * _0x4de905, 0xb1 * _0x4de905, 233.5 * _0x4de905, 0xb1 * _0x4de905, 0xe9 * _0x4de905, 0xa2 * _0x4de905), _0x515b6d['bezierCurveTo'](0xd1 * _0x4de905, 161.5 * _0x4de905, 0xba * _0x4de905, 0xa2 * _0x4de905, 0xb9 * _0x4de905, 0xa1 * _0x4de905), _0x515b6d['closePath'](), fill_path(_0x515b6d, _0x241681[0x1]);
                            else {
                                if (_0x45ce83 == 0x7) _0x515b6d['globalAlpha'] = 0.5, _0x515b6d['translate'](-0x58 * _0x4de905, -0x5f * _0x4de905), _0x515b6d['save'](), _0x515b6d['translate'](0xae * _0x4de905, 195.5 * _0x4de905), round_rect(_0x515b6d, -0x52 * _0x4de905, -46.5 * _0x4de905, 0xa4 * _0x4de905, 0x5d * _0x4de905, 0x1e * _0x4de905), _0x515b6d['restore'](), fill_path(_0x515b6d, _0x241681[0x0]), _0x515b6d['globalAlpha'] = 0x1, _0x515b6d['save'](), _0x515b6d['translate'](0xae * _0x4de905, 170.5 * _0x4de905), round_rect(_0x515b6d, -0x51 * _0x4de905, -59.5 * _0x4de905, 0xa2 * _0x4de905, 0x77 * _0x4de905, 0x1c * _0x4de905), _0x515b6d['restore'](), fill_path(_0x515b6d, _0x241681[0x1], _0x241681[0x2], 6.5 * _0x4de905), circle(_0x515b6d, 0x89 * _0x4de905, 0xc8 * _0x4de905, 22.090722034374522 * _0x4de905), fill_path(_0x515b6d, _0x241681[0x3]), circle(_0x515b6d, 0xd2 * _0x4de905, 0xc8 * _0x4de905, 22.20360331117452 * _0x4de905), fill_path(_0x515b6d, _0x241681[0x3]), circle(_0x515b6d, 0x82 * _0x4de905, 0xce * _0x4de905, 0x7 * _0x4de905), fill_path(_0x515b6d, _0x241681[0x4]), circle(_0x515b6d, 0xcb * _0x4de905, 0xce * _0x4de905, 0x7 * _0x4de905), fill_path(_0x515b6d, _0x241681[0x4]), _0x515b6d['beginPath'](), _0x515b6d['lineCap'] = 'round', _0x515b6d['lineJoin'] = 'round', _0x515b6d['moveTo'](0x6c * _0x4de905, 0xbf * _0x4de905), _0x515b6d['bezierCurveTo'](0x8d * _0x4de905, 0xb8 * _0x4de905, 0x8d * _0x4de905, 0xb8 * _0x4de905, 0xae * _0x4de905, 0xb1 * _0x4de905), _0x515b6d['bezierCurveTo'](0xcf * _0x4de905, 0xb8 * _0x4de905, 0xcf * _0x4de905, 0xb8 * _0x4de905, 0xf0 * _0x4de905, 0xbf * _0x4de905), _0x515b6d['bezierCurveTo'](0xf4 * _0x4de905, 0x8c * _0x4de905, 0x71 * _0x4de905, 0x79 * _0x4de905, 0x6c * _0x4de905, 0xbf * _0x4de905), _0x515b6d['closePath'](), fill_path(_0x515b6d, _0x241681[0x1]);
                                else {
                                    if (_0x45ce83 == 0x8) _0x515b6d['globalAlpha'] = 0.5, _0x515b6d['translate'](-0x58 * _0x4de905, -0x5f * _0x4de905), _0x515b6d['save'](), _0x515b6d['translate'](0xae * _0x4de905, 195.5 * _0x4de905), round_rect(_0x515b6d, -0x52 * _0x4de905, -46.5 * _0x4de905, 0xa4 * _0x4de905, 0x5d * _0x4de905, 0x1e * _0x4de905), _0x515b6d['restore'](), fill_path(_0x515b6d, _0x241681[0x0]), _0x515b6d['globalAlpha'] = 0x1, _0x515b6d['save'](), _0x515b6d['translate'](0xae * _0x4de905, 170.5 * _0x4de905), round_rect(_0x515b6d, -0x51 * _0x4de905, -59.5 * _0x4de905, 0xa2 * _0x4de905, 0x77 * _0x4de905, 0x1c * _0x4de905), _0x515b6d['restore'](), fill_path(_0x515b6d, _0x241681[0x1], _0x241681[0x2], 6.5 * _0x4de905), circle(_0x515b6d, 0x89 * _0x4de905, 0xc8 * _0x4de905, 22.090722034374522 * _0x4de905), fill_path(_0x515b6d, _0x241681[0x3]), circle(_0x515b6d, 0xd2 * _0x4de905, 0xc8 * _0x4de905, 22.20360331117452 * _0x4de905), fill_path(_0x515b6d, _0x241681[0x3]), circle(_0x515b6d, 0x7f * _0x4de905, 0xc6 * _0x4de905, 0x7 * _0x4de905), fill_path(_0x515b6d, _0x241681[0x4]), circle(_0x515b6d, 0xc8 * _0x4de905, 0xc6 * _0x4de905, 0x7 * _0x4de905), fill_path(_0x515b6d, _0x241681[0x4]), _0x515b6d['save'](), _0x515b6d['translate'](0xaf * _0x4de905, 175.5 * _0x4de905), round_rect(_0x515b6d, -0x43 * _0x4de905, -13.5 * _0x4de905, 0x86 * _0x4de905, 0x1b * _0x4de905, 0x0 * _0x4de905), _0x515b6d['restore'](), fill_path(_0x515b6d, _0x241681[0x1]), _0x515b6d['save'](), _0x515b6d['translate'](0xac * _0x4de905, 0xdb * _0x4de905), round_rect(_0x515b6d, -0x3c * _0x4de905, -0x4 * _0x4de905, 0x78 * _0x4de905, 0x8 * _0x4de905, 0x0 * _0x4de905), _0x515b6d['restore'](), fill_path(_0x515b6d, _0x241681[0x1]);
                                    else _0x45ce83 == 0x9 && (_0x515b6d['globalAlpha'] = 0.5, _0x515b6d['translate'](-0x58 * _0x4de905, -0x5f * _0x4de905), _0x515b6d['save'](), _0x515b6d['translate'](0xae * _0x4de905, 195.5 * _0x4de905), round_rect(_0x515b6d, -0x52 * _0x4de905, -46.5 * _0x4de905, 0xa4 * _0x4de905, 0x5d * _0x4de905, 0x1e * _0x4de905), _0x515b6d['restore'](), fill_path(_0x515b6d, _0x241681[0x0]), _0x515b6d['globalAlpha'] = 0x1, _0x515b6d['save'](), _0x515b6d['translate'](0xae * _0x4de905, 170.5 * _0x4de905), round_rect(_0x515b6d, -0x51 * _0x4de905, -59.5 * _0x4de905, 0xa2 * _0x4de905, 0x77 * _0x4de905, 0x1c * _0x4de905), _0x515b6d['restore'](), fill_path(_0x515b6d, _0x241681[0x1], _0x241681[0x2], 6.5 * _0x4de905), circle(_0x515b6d, 0x89 * _0x4de905, 0xc8 * _0x4de905, 22.090722034374522 * _0x4de905), fill_path(_0x515b6d, _0x241681[0x3]), circle(_0x515b6d, 0xd2 * _0x4de905, 0xc8 * _0x4de905, 22.090722034374522 * _0x4de905), fill_path(_0x515b6d, _0x241681[0x3]), circle(_0x515b6d, 0x8f * _0x4de905, 0xc8 * _0x4de905, 0x7 * _0x4de905), fill_path(_0x515b6d, _0x241681[0x4]), circle(_0x515b6d, 0xcc * _0x4de905, 0xc8 * _0x4de905, 0x7 * _0x4de905), fill_path(_0x515b6d, _0x241681[0x4]));
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    return _0x5a79da;
}

function create_garlic(_0x52e187, _0x5687c1, _0x3382da) {
    var _0x31e8c3 = document['createElement']('canvas'),
        _0x4e4785 = _0x31e8c3['getContext']('2d');
    return _0x31e8c3['width'] = 0x108 * _0x52e187, _0x31e8c3['height'] = 0xf6 * _0x52e187, _0x4e4785['translate'](0x0, 0xa * _0x52e187), _0x4e4785['globalAlpha'] = _0x5687c1 ? 0.5 : 0x1, _0x4e4785['beginPath'](), _0x4e4785['lineCap'] = 'round', _0x4e4785['lineJoin'] = 'round', _0x4e4785['moveTo'](0x4b * _0x52e187, 0x36 * _0x52e187), _0x4e4785['bezierCurveTo'](0x4f * _0x52e187, 0x15 * _0x52e187, 0x83 * _0x52e187, 0xd * _0x52e187, 0x99 * _0x52e187, 0x24 * _0x52e187), _0x4e4785['bezierCurveTo'](0xcc * _0x52e187, 0x1b * _0x52e187, 0xdd * _0x52e187, 0x34 * _0x52e187, 0xd8 * _0x52e187, 0x53 * _0x52e187), _0x4e4785['bezierCurveTo'](0xf1 * _0x52e187, 0x67 * _0x52e187, 0xe8 * _0x52e187, 0x8a * _0x52e187, 0xd6 * _0x52e187, 0x93 * _0x52e187), _0x4e4785['bezierCurveTo'](0xdf * _0x52e187, 0xb8 * _0x52e187, 0xc9 * _0x52e187, 0xc8 * _0x52e187, 0xaf * _0x52e187, 0xc7 * _0x52e187), _0x4e4785['bezierCurveTo'](0x9c * _0x52e187, 0xda * _0x52e187, 0x87 * _0x52e187, 0xde * _0x52e187, 0x72 * _0x52e187, 0xcb * _0x52e187), _0x4e4785['bezierCurveTo'](0x3e * _0x52e187, 0xd5 * _0x52e187, 0x42 * _0x52e187, 0xbd * _0x52e187, 0x3b * _0x52e187, 0xaa * _0x52e187), _0x4e4785['bezierCurveTo'](0x1b * _0x52e187, 0xa4 * _0x52e187, 0x1f * _0x52e187, 0x86 * _0x52e187, 0x26 * _0x52e187, 0x7b * _0x52e187), _0x4e4785['bezierCurveTo'](0xb * _0x52e187, 0x50 * _0x52e187, 0x33 * _0x52e187, 0x34 * _0x52e187, 0x4b * _0x52e187, 0x36 * _0x52e187), _0x4e4785['closePath'](), fill_path(_0x4e4785, _0x3382da[0x0]), _0x4e4785['translate'](0x0, -0xa * _0x52e187), _0x4e4785['globalAlpha'] = 0x1, _0x4e4785['beginPath'](), _0x4e4785['lineCap'] = 'round', _0x4e4785['lineJoin'] = 'round', _0x4e4785['moveTo'](0x4b * _0x52e187, 0x36 * _0x52e187), _0x4e4785['bezierCurveTo'](0x4f * _0x52e187, 0x15 * _0x52e187, 0x83 * _0x52e187, 0xd * _0x52e187, 0x99 * _0x52e187, 0x24 * _0x52e187), _0x4e4785['bezierCurveTo'](0xcc * _0x52e187, 0x1b * _0x52e187, 0xdd * _0x52e187, 0x34 * _0x52e187, 0xd8 * _0x52e187, 0x53 * _0x52e187), _0x4e4785['bezierCurveTo'](0xf1 * _0x52e187, 0x67 * _0x52e187, 0xe8 * _0x52e187, 0x8a * _0x52e187, 0xd6 * _0x52e187, 0x93 * _0x52e187), _0x4e4785['bezierCurveTo'](0xdf * _0x52e187, 0xb8 * _0x52e187, 0xc9 * _0x52e187, 0xc8 * _0x52e187, 0xaf * _0x52e187, 0xc7 * _0x52e187), _0x4e4785['bezierCurveTo'](0x9c * _0x52e187, 0xda * _0x52e187, 0x87 * _0x52e187, 0xde * _0x52e187, 0x72 * _0x52e187, 0xcb * _0x52e187), _0x4e4785['bezierCurveTo'](0x3e * _0x52e187, 0xd5 * _0x52e187, 0x42 * _0x52e187, 0xbd * _0x52e187, 0x3b * _0x52e187, 0xaa * _0x52e187), _0x4e4785['bezierCurveTo'](0x1b * _0x52e187, 0xa4 * _0x52e187, 0x1f * _0x52e187, 0x86 * _0x52e187, 0x26 * _0x52e187, 0x7b * _0x52e187), _0x4e4785['bezierCurveTo'](0xb * _0x52e187, 0x50 * _0x52e187, 0x33 * _0x52e187, 0x34 * _0x52e187, 0x4b * _0x52e187, 0x36 * _0x52e187), _0x4e4785['closePath'](), fill_path(_0x4e4785, _0x3382da[0x1], _0x3382da[0x2], 0x8 * _0x52e187), _0x4e4785['beginPath'](), _0x4e4785['lineCap'] = 'round', _0x4e4785['lineJoin'] = 'round', _0x4e4785['moveTo'](0x79 * _0x52e187, 0x66 * _0x52e187), _0x4e4785['bezierCurveTo'](0x6f * _0x52e187, 0x50 * _0x52e187, 0x6e * _0x52e187, 0x42 * _0x52e187, 0x6c * _0x52e187, 0x33 * _0x52e187), _0x4e4785['bezierCurveTo'](0x77 * _0x52e187, 0x41 * _0x52e187, 0x81 * _0x52e187, 0x55 * _0x52e187, 0x87 * _0x52e187, 0x63 * _0x52e187), _0x4e4785['bezierCurveTo'](0x8e * _0x52e187, 0x43 * _0x52e187, 0x92 * _0x52e187, 0x3c * _0x52e187, 0x98 * _0x52e187, 0x32 * _0x52e187), _0x4e4785['bezierCurveTo'](0x9a * _0x52e187, 0x47 * _0x52e187, 0x98 * _0x52e187, 0x55 * _0x52e187, 0x95 * _0x52e187, 0x68 * _0x52e187), _0x4e4785['bezierCurveTo'](0xa6 * _0x52e187, 0x58 * _0x52e187, 0xaf * _0x52e187, 0x53 * _0x52e187, 0xbc * _0x52e187, 0x4e * _0x52e187), _0x4e4785['bezierCurveTo'](0xb3 * _0x52e187, 0x5b * _0x52e187, 0xaa * _0x52e187, 0x67 * _0x52e187, 0xa0 * _0x52e187, 0x70 * _0x52e187), _0x4e4785['bezierCurveTo'](0xba * _0x52e187, 0x6b * _0x52e187, 0xbf * _0x52e187, 0x6b * _0x52e187, 0xcc * _0x52e187, 0x6c * _0x52e187), _0x4e4785['bezierCurveTo'](0xc3 * _0x52e187, 0x72 * _0x52e187, 0xb3 * _0x52e187, 0x78 * _0x52e187, 0xa3 * _0x52e187, 0x7b * _0x52e187), _0x4e4785['bezierCurveTo'](0xb7 * _0x52e187, 0x82 * _0x52e187, 0xba * _0x52e187, 0x87 * _0x52e187, 0xc0 * _0x52e187, 0x8c * _0x52e187), _0x4e4785['bezierCurveTo'](0xb3 * _0x52e187, 0x8d * _0x52e187, 0xa4 * _0x52e187, 0x8b * _0x52e187, 0x99 * _0x52e187, 0x87 * _0x52e187), _0x4e4785['bezierCurveTo'](0x9e * _0x52e187, 0x91 * _0x52e187, 0xa3 * _0x52e187, 0x9f * _0x52e187, 0xa5 * _0x52e187, 0xb1 * _0x52e187), _0x4e4785['bezierCurveTo'](0x9a * _0x52e187, 0xa6 * _0x52e187, 0x91 * _0x52e187, 0x99 * _0x52e187, 0x8a * _0x52e187, 0x8b * _0x52e187), _0x4e4785['bezierCurveTo'](0x85 * _0x52e187, 0x9b * _0x52e187, 0x7d * _0x52e187, 0xaa * _0x52e187, 0x75 * _0x52e187, 0xb6 * _0x52e187), _0x4e4785['bezierCurveTo'](0x74 * _0x52e187, 0xa0 * _0x52e187, 0x77 * _0x52e187, 0x97 * _0x52e187, 0x7c * _0x52e187, 0x8a * _0x52e187), _0x4e4785['bezierCurveTo'](0x6b * _0x52e187, 0x96 * _0x52e187, 0x5f * _0x52e187, 0x9c * _0x52e187, 0x52 * _0x52e187, 0x9f * _0x52e187), _0x4e4785['bezierCurveTo'](0x5e * _0x52e187, 0x8c * _0x52e187, 0x65 * _0x52e187, 0x88 * _0x52e187, 0x71 * _0x52e187, 0x80 * _0x52e187), _0x4e4785['bezierCurveTo'](0x4e * _0x52e187, 0x7b * _0x52e187, 0x4b * _0x52e187, 0x79 * _0x52e187, 0x43 * _0x52e187, 0x76 * _0x52e187), _0x4e4785['bezierCurveTo'](0x55 * _0x52e187, 0x70 * _0x52e187, 0x5e * _0x52e187, 0x70 * _0x52e187, 0x6f * _0x52e187, 0x71 * _0x52e187), _0x4e4785['bezierCurveTo'](0x59 * _0x52e187, 0x61 * _0x52e187, 0x55 * _0x52e187, 0x5d * _0x52e187, 0x4e * _0x52e187, 0x52 * _0x52e187), _0x4e4785['bezierCurveTo'](0x5c * _0x52e187, 0x55 * _0x52e187, 0x65 * _0x52e187, 0x5a * _0x52e187, 0x79 * _0x52e187, 0x66 * _0x52e187), _0x4e4785['closePath'](), fill_path(_0x4e4785, _0x3382da[0x2]), _0x4e4785['beginPath'](), _0x4e4785['lineCap'] = 'round', _0x4e4785['lineJoin'] = 'round', _0x4e4785['moveTo'](0x80 * _0x52e187, 0x67 * _0x52e187), _0x4e4785['bezierCurveTo'](0x6f * _0x52e187, 0x70 * _0x52e187, 0x75 * _0x52e187, 0x88 * _0x52e187, 0x8c * _0x52e187, 0x82 * _0x52e187), _0x4e4785['bezierCurveTo'](0x97 * _0x52e187, 0x7e * _0x52e187, 0x9c * _0x52e187, 0x73 * _0x52e187, 0x9b * _0x52e187, 0x6b * _0x52e187), _0x4e4785['bezierCurveTo'](0x9b * _0x52e187, 0x60 * _0x52e187, 0x9a * _0x52e187, 0x5e * _0x52e187, 0x94 * _0x52e187, 0x5e * _0x52e187), _0x4e4785['bezierCurveTo'](0x8d * _0x52e187, 0x5e * _0x52e187, 0x92 * _0x52e187, 0x68 * _0x52e187, 0x88 * _0x52e187, 0x68 * _0x52e187), _0x4e4785['closePath'](), fill_path(_0x4e4785, _0x3382da[0x3], _0x3382da[0x4], 0x4 * _0x52e187), _0x31e8c3;
}

function create_garland_inv(_0x30e62d, _0x2b0570, _0x2bb7e8) {
    var _0x1ecefc = document['createElement']('canvas'),
        _0x2ef856 = _0x1ecefc['getContext']('2d');
    return _0x1ecefc['width'] = 0x46 * _0x30e62d, _0x1ecefc['height'] = 0x46 * _0x30e62d, _0x2ef856['globalAlpha'] = 0.5, circle(_0x2ef856, 0x1a * _0x30e62d, 0x1a * _0x30e62d, 0x9 * _0x30e62d), fill_path(_0x2ef856, _0x2bb7e8[0x0]), circle(_0x2ef856, 0x38 * _0x30e62d, 0x24 * _0x30e62d, 0x9 * _0x30e62d), fill_path(_0x2ef856, _0x2bb7e8[0x1]), circle(_0x2ef856, 0x28 * _0x30e62d, 0x32 * _0x30e62d, 0x9 * _0x30e62d), fill_path(_0x2ef856, _0x2bb7e8[0x2]), _0x2ef856['globalAlpha'] = 0x1, circle(_0x2ef856, 0x1a * _0x30e62d, 0x1a * _0x30e62d, 0x5 * _0x30e62d), fill_path(_0x2ef856, _0x2bb7e8[0x0]), circle(_0x2ef856, 0x38 * _0x30e62d, 0x24 * _0x30e62d, 0x5 * _0x30e62d), fill_path(_0x2ef856, _0x2bb7e8[0x1]), circle(_0x2ef856, 0x28 * _0x30e62d, 0x32 * _0x30e62d, 0x5 * _0x30e62d), fill_path(_0x2ef856, _0x2bb7e8[0x2]), _0x1ecefc;
}

function create_garland(_0x14d2c5, _0x9d9c25, _0xa75a74) {
    var _0x53ce95 = document['createElement']('canvas'),
        _0x26e0aa = _0x53ce95['getContext']('2d');
    return _0x53ce95['width'] = 0x16 * _0x14d2c5, _0x53ce95['height'] = 0x16 * _0x14d2c5, _0x26e0aa['globalAlpha'] = 0.4, circle(_0x26e0aa, 0xb * _0x14d2c5, 0xb * _0x14d2c5, 0xa * _0x14d2c5), fill_path(_0x26e0aa, _0xa75a74[0x0]), _0x26e0aa['globalAlpha'] = 0.7, circle(_0x26e0aa, 0xb * _0x14d2c5, 0xb * _0x14d2c5, 0x7 * _0x14d2c5), fill_path(_0x26e0aa, _0xa75a74[0x0]), _0x26e0aa['globalAlpha'] = 0x1, circle(_0x26e0aa, 0xb * _0x14d2c5, 0xb * _0x14d2c5, 0x4 * _0x14d2c5), fill_path(_0x26e0aa, _0xa75a74[0x0]), _0x53ce95;
}

function create_garland_light(_0x2757b2, _0x40b9da, _0x4cd858) {
    var _0x6a919f = document['createElement']('canvas'),
        _0x455d73 = _0x6a919f['getContext']('2d');
    return _0x6a919f['width'] = 0x14 * _0x2757b2, _0x6a919f['height'] = 0x14 * _0x2757b2, _0x455d73['globalAlpha'] = 0.5, circle(_0x455d73, 0xa * _0x2757b2, 0xa * _0x2757b2, 0x9 * _0x2757b2), fill_path(_0x455d73, _0x4cd858[0x0]), _0x6a919f;
}

function create_roof(_0x45094b, _0x53e931, _0x28c76e) {
    var _0x492b60 = document['createElement']('canvas'),
        _0x23800c = _0x492b60['getContext']('2d');
    return _0x492b60['width'] = 0xf8 * _0x45094b, _0x492b60['height'] = 0xf7 * _0x45094b, _0x23800c['save'](), _0x23800c['translate'](69.5 * _0x45094b, 0x91 * _0x45094b), round_rect(_0x23800c, -8.5 * _0x45094b, -0x3f * _0x45094b, 0x11 * _0x45094b, 0x7f * _0x45094b, 0x1 * _0x45094b), _0x23800c['restore'](), fill_path(_0x23800c, _0x28c76e[0x0]), _0x23800c['save'](), _0x23800c['translate'](0xb7 * _0x45094b, 0x91 * _0x45094b), round_rect(_0x23800c, -0x8 * _0x45094b, -0x3f * _0x45094b, 0x10 * _0x45094b, 0x7e * _0x45094b, 0x1 * _0x45094b), _0x23800c['restore'](), fill_path(_0x23800c, _0x28c76e[0x0]), _0x23800c['save'](), _0x23800c['translate'](123.5 * _0x45094b, 62.5 * _0x45094b), _0x23800c['rotate'](6.28), round_rect(_0x23800c, -84.5 * _0x45094b, -25.5 * _0x45094b, 0xa9 * _0x45094b, 0x33 * _0x45094b, 0x5 * _0x45094b), _0x23800c['restore'](), fill_path(_0x23800c, _0x28c76e[0x2], _0x28c76e[0x1], 0x6 * _0x45094b), _0x23800c['save'](), _0x23800c['translate'](123.5 * _0x45094b, 0x76 * _0x45094b), _0x23800c['rotate'](6.24), round_rect(_0x23800c, -85.5 * _0x45094b, -0x18 * _0x45094b, 0xa9 * _0x45094b, 0x30 * _0x45094b, 0x5 * _0x45094b), _0x23800c['restore'](), fill_path(_0x23800c, _0x28c76e[0x3], _0x28c76e[0x1], 0x6 * _0x45094b), _0x23800c['save'](), _0x23800c['translate'](0x7a * _0x45094b, 177.5 * _0x45094b), _0x23800c['rotate'](6.32), round_rect(_0x23800c, -0x54 * _0x45094b, -23.5 * _0x45094b, 0xa9 * _0x45094b, 0x2f * _0x45094b, 0x5 * _0x45094b), _0x23800c['restore'](), fill_path(_0x23800c, _0x28c76e[0x2], _0x28c76e[0x1], 0x6 * _0x45094b), _0x23800c['beginPath'](), _0x23800c['lineCap'] = 'round', _0x23800c['lineJoin'] = 'round', _0x23800c['moveTo'](0x25 * _0x45094b, 0x9d * _0x45094b), _0x23800c['bezierCurveTo'](0x31 * _0x45094b, 0xa0 * _0x45094b, 0x31 * _0x45094b, 0xa0 * _0x45094b, 0x3d * _0x45094b, 0xa3 * _0x45094b), _0x23800c['bezierCurveTo'](49.5 * _0x45094b, 165.5 * _0x45094b, 49.5 * _0x45094b, 165.5 * _0x45094b, 0x26 * _0x45094b, 0xa8 * _0x45094b), _0x23800c['closePath'](), fill_path(_0x23800c, _0x28c76e[0x1]), _0x23800c['beginPath'](), _0x23800c['lineCap'] = 'round', _0x23800c['lineJoin'] = 'round', _0x23800c['moveTo'](0xcd * _0x45094b, 0xaf * _0x45094b), _0x23800c['bezierCurveTo'](192.5 * _0x45094b, 0xb4 * _0x45094b, 192.5 * _0x45094b, 0xb4 * _0x45094b, 0xb4 * _0x45094b, 0xb9 * _0x45094b), _0x23800c['bezierCurveTo'](0xc1 * _0x45094b, 0xbc * _0x45094b, 0xc1 * _0x45094b, 0xbc * _0x45094b, 0xce * _0x45094b, 0xbf * _0x45094b), _0x23800c['closePath'](), fill_path(_0x23800c, _0x28c76e[0x1]), _0x492b60;
}

function create_roof1(_0x1a3208, _0x982555, _0x4a394e) {
    var _0x1771c9 = document['createElement']('canvas'),
        _0x25f000 = _0x1771c9['getContext']('2d');
    return _0x1771c9['width'] = 0xf8 * _0x1a3208, _0x1771c9['height'] = 0xf7 * _0x1a3208, _0x25f000['save'](), _0x25f000['translate'](0xb6 * _0x1a3208, 0x78 * _0x1a3208), round_rect(_0x25f000, -0x8 * _0x1a3208, -0x43 * _0x1a3208, 0x10 * _0x1a3208, 0x86 * _0x1a3208, 0x1 * _0x1a3208), _0x25f000['restore'](), fill_path(_0x25f000, _0x4a394e[0x0]), _0x25f000['save'](), _0x25f000['translate'](68.5 * _0x1a3208, 127.5 * _0x1a3208), round_rect(_0x25f000, -8.5 * _0x1a3208, -70.5 * _0x1a3208, 0x11 * _0x1a3208, 0x8d * _0x1a3208, 0x1 * _0x1a3208), _0x25f000['restore'](), fill_path(_0x25f000, _0x4a394e[0x0]), _0x25f000['save'](), _0x25f000['translate'](123.5 * _0x1a3208, 0x44 * _0x1a3208), round_rect(_0x25f000, -82.5 * _0x1a3208, -0x18 * _0x1a3208, 0xa5 * _0x1a3208, 0x30 * _0x1a3208, 0x4 * _0x1a3208), _0x25f000['restore'](), fill_path(_0x25f000, _0x4a394e[0x2], _0x4a394e[0x1], 0x6 * _0x1a3208), _0x25f000['save'](), _0x25f000['translate'](0x7b * _0x1a3208, 179.5 * _0x1a3208), round_rect(_0x25f000, -0x53 * _0x1a3208, -24.5 * _0x1a3208, 0xa6 * _0x1a3208, 0x31 * _0x1a3208, 0x4 * _0x1a3208), _0x25f000['restore'](), fill_path(_0x25f000, _0x4a394e[0x2], _0x4a394e[0x1], 0x6 * _0x1a3208), _0x25f000['save'](), _0x25f000['translate'](123.5 * _0x1a3208, 123.5 * _0x1a3208), _0x25f000['rotate'](6.24), round_rect(_0x25f000, -82.5 * _0x1a3208, -24.5 * _0x1a3208, 0xa5 * _0x1a3208, 0x31 * _0x1a3208, 0x4 * _0x1a3208), _0x25f000['restore'](), fill_path(_0x25f000, _0x4a394e[0x3], _0x4a394e[0x1], 0x6 * _0x1a3208), _0x25f000['beginPath'](), _0x25f000['lineCap'] = 'round', _0x25f000['lineJoin'] = 'round', _0x25f000['moveTo'](0xcc * _0x1a3208, 0x70 * _0x1a3208), _0x25f000['bezierCurveTo'](0x95 * _0x1a3208, 121.5 * _0x1a3208, 0x60 * _0x1a3208, 0x82 * _0x1a3208, 0x5e * _0x1a3208, 0x83 * _0x1a3208), _0x25f000['bezierCurveTo'](149.5 * _0x1a3208, 127.5 * _0x1a3208, 149.5 * _0x1a3208, 127.5 * _0x1a3208, 0xcd * _0x1a3208, 0x7c * _0x1a3208), _0x25f000['closePath'](), fill_path(_0x25f000, _0x4a394e[0x1]), _0x1771c9;
}

function create_roof2(_0x1195cf, _0x325b3f, _0xb3acfc) {
    var _0xf0d039 = document['createElement']('canvas'),
        _0x4ee059 = _0xf0d039['getContext']('2d');
    return _0xf0d039['width'] = 0xf8 * _0x1195cf, _0xf0d039['height'] = 0xf7 * _0x1195cf, _0x4ee059['save'](), _0x4ee059['translate'](0xb7 * _0x1195cf, 0x6b * _0x1195cf), round_rect(_0x4ee059, -0x8 * _0x1195cf, -70.5 * _0x1195cf, 0x10 * _0x1195cf, 0x8d * _0x1195cf, 0x1 * _0x1195cf), _0x4ee059['restore'](), fill_path(_0x4ee059, _0xb3acfc[0x0]), _0x4ee059['save'](), _0x4ee059['translate'](69.5 * _0x1195cf, 0x6e * _0x1195cf), round_rect(_0x4ee059, -8.5 * _0x1195cf, -0x47 * _0x1195cf, 0x11 * _0x1195cf, 0x8f * _0x1195cf, 0x1 * _0x1195cf), _0x4ee059['restore'](), fill_path(_0x4ee059, _0xb3acfc[0x0]), _0x4ee059['save'](), _0x4ee059['translate'](123.5 * _0x1195cf, 0xb5 * _0x1195cf), round_rect(_0x4ee059, -84.5 * _0x1195cf, -0x1a * _0x1195cf, 0xa9 * _0x1195cf, 0x34 * _0x1195cf, 0x5 * _0x1195cf), _0x4ee059['restore'](), fill_path(_0x4ee059, _0xb3acfc[0x2], _0xb3acfc[0x1], 0x6 * _0x1195cf), _0x4ee059['beginPath'](), _0x4ee059['lineCap'] = 'round', _0x4ee059['lineJoin'] = 'round', _0x4ee059['moveTo'](0x29 * _0x1195cf, 0x5f * _0x1195cf), _0x4ee059['bezierCurveTo'](0x69 * _0x1195cf, 0x60 * _0x1195cf, 0x71 * _0x1195cf, 0x63 * _0x1195cf, 0x86 * _0x1195cf, 0x66 * _0x1195cf), _0x4ee059['bezierCurveTo'](0x93 * _0x1195cf, 0x6a * _0x1195cf, 0xad * _0x1195cf, 0x64 * _0x1195cf, 0xcf * _0x1195cf, 0x69 * _0x1195cf), _0x4ee059['bezierCurveTo'](0xd2 * _0x1195cf, 0x69 * _0x1195cf, 0xcf * _0x1195cf, 0x8c * _0x1195cf, 0xcf * _0x1195cf, 0x9a * _0x1195cf), _0x4ee059['bezierCurveTo'](123.5 * _0x1195cf, 151.5 * _0x1195cf, 123.5 * _0x1195cf, 151.5 * _0x1195cf, 0x28 * _0x1195cf, 0x95 * _0x1195cf), _0x4ee059['bezierCurveTo'](0x25 * _0x1195cf, 0x91 * _0x1195cf, 0x27 * _0x1195cf, 0x5f * _0x1195cf, 0x29 * _0x1195cf, 0x60 * _0x1195cf), _0x4ee059['closePath'](), fill_path(_0x4ee059, _0xb3acfc[0x2], _0xb3acfc[0x1], 0x6 * _0x1195cf), _0x4ee059['beginPath'](), _0x4ee059['lineCap'] = 'round', _0x4ee059['lineJoin'] = 'round', _0x4ee059['moveTo'](0x44 * _0x1195cf, 0x4b * _0x1195cf), _0x4ee059['bezierCurveTo'](0x36 * _0x1195cf, 72.5 * _0x1195cf, 0x36 * _0x1195cf, 72.5 * _0x1195cf, 0x28 * _0x1195cf, 0x46 * _0x1195cf), _0x4ee059['bezierCurveTo'](0x26 * _0x1195cf, 0x2e * _0x1195cf, 0x28 * _0x1195cf, 0x2e * _0x1195cf, 0x35 * _0x1195cf, 0x2e * _0x1195cf), _0x4ee059['bezierCurveTo'](0xc9 * _0x1195cf, 0x29 * _0x1195cf, 0xc9 * _0x1195cf, 0x29 * _0x1195cf, 0xc9 * _0x1195cf, 0x2a * _0x1195cf), _0x4ee059['bezierCurveTo'](0xd3 * _0x1195cf, 0x28 * _0x1195cf, 0xd0 * _0x1195cf, 0x35 * _0x1195cf, 0xd0 * _0x1195cf, 0x48 * _0x1195cf), _0x4ee059['bezierCurveTo'](0xd1 * _0x1195cf, 0x5b * _0x1195cf, 0xd2 * _0x1195cf, 0x60 * _0x1195cf, 0xc2 * _0x1195cf, 0x5e * _0x1195cf), _0x4ee059['bezierCurveTo'](0x77 * _0x1195cf, 0x61 * _0x1195cf, 0x77 * _0x1195cf, 0x61 * _0x1195cf, 0x2c * _0x1195cf, 0x64 * _0x1195cf), _0x4ee059['bezierCurveTo'](0x27 * _0x1195cf, 0x63 * _0x1195cf, 0x28 * _0x1195cf, 0x60 * _0x1195cf, 0x28 * _0x1195cf, 0x50 * _0x1195cf), _0x4ee059['bezierCurveTo'](0x36 * _0x1195cf, 77.5 * _0x1195cf, 0x36 * _0x1195cf, 77.5 * _0x1195cf, 0x44 * _0x1195cf, 0x4b * _0x1195cf), _0x4ee059['closePath'](), fill_path(_0x4ee059, _0xb3acfc[0x3], _0xb3acfc[0x1], 0x6 * _0x1195cf), _0xf0d039;
}

function create_zombie_head(_0x4c5baf, _0x1c8ad3, _0x32d997) {
    var _0x260391 = document['createElement']('canvas'),
        _0x1a846b = _0x260391['getContext']('2d');
    return _0x260391['width'] = 0xbf * _0x4c5baf, _0x260391['height'] = 0x99 * _0x4c5baf, _0x1a846b['globalAlpha'] = 0.5, _0x1a846b['translate'](0x0, 0xa * _0x4c5baf), _0x1a846b['save'](), _0x1a846b['translate'](97.49996948242188 * _0x4c5baf, 95.12844848632812 * _0x4c5baf), round_rect(_0x1a846b, -62.5 * _0x4c5baf, -41.5 * _0x4c5baf, 0x7d * _0x4c5baf, 0x53 * _0x4c5baf, 0x14 * _0x4c5baf), _0x1a846b['restore'](), fill_path(_0x1a846b, _0x32d997[0x0], _0x32d997[0x0], 0x4 * _0x4c5baf), _0x1a846b['globalAlpha'] = 0x1, _0x1a846b['translate'](0x0, -0xa * _0x4c5baf), _0x1a846b['save'](), _0x1a846b['translate'](97.49996948242188 * _0x4c5baf, 95.12844848632812 * _0x4c5baf), round_rect(_0x1a846b, -62.5 * _0x4c5baf, -41.5 * _0x4c5baf, 0x7d * _0x4c5baf, 0x53 * _0x4c5baf, 0x14 * _0x4c5baf), _0x1a846b['restore'](), fill_path(_0x1a846b, _0x32d997[0x1], _0x32d997[0x2], 0x4 * _0x4c5baf), _0x1a846b['globalCompositeOperation'] = 'destination-out', _0x1a846b['beginPath'](), _0x1a846b['lineCap'] = 'round', _0x1a846b['lineJoin'] = 'round', _0x1a846b['moveTo'](26.999969482421875 * _0x4c5baf, 50.850677490234375 * _0x4c5baf), _0x1a846b['bezierCurveTo'](46.499969482421875 * _0x4c5baf, 64.85067749023438 * _0x4c5baf, 46.499969482421875 * _0x4c5baf, 64.85067749023438 * _0x4c5baf, 65.99996948242188 * _0x4c5baf, 78.85067749023438 * _0x4c5baf), _0x1a846b['bezierCurveTo'](80.99996948242188 * _0x4c5baf, 87.85067749023438 * _0x4c5baf, 105.99996948242188 * _0x4c5baf, 82.85067749023438 * _0x4c5baf, 114.99996948242188 * _0x4c5baf, 80.85067749023438 * _0x4c5baf), _0x1a846b['bezierCurveTo'](130.99996948242188 * _0x4c5baf, 69.85067749023438 * _0x4c5baf, 152.99996948242188 * _0x4c5baf, 70.85067749023438 * _0x4c5baf, 166.99996948242188 * _0x4c5baf, 67.85067749023438 * _0x4c5baf), _0x1a846b['bezierCurveTo'](156.99996948242188 * _0x4c5baf, 52.850677490234375 * _0x4c5baf, 156.99996948242188 * _0x4c5baf, 52.850677490234375 * _0x4c5baf, 146.99996948242188 * _0x4c5baf, 37.850677490234375 * _0x4c5baf), _0x1a846b['bezierCurveTo'](101.49996948242188 * _0x4c5baf, 37.350677490234375 * _0x4c5baf, 101.49996948242188 * _0x4c5baf, 37.350677490234375 * _0x4c5baf, 55.999969482421875 * _0x4c5baf, 36.850677490234375 * _0x4c5baf), _0x1a846b['closePath'](), fill_path(_0x1a846b, _0x32d997[0x2], _0x32d997[0x3], 0x4 * _0x4c5baf), _0x1a846b['globalCompositeOperation'] = 'source-over', _0x1a846b['beginPath'](), _0x1a846b['lineCap'] = 'round', _0x1a846b['lineJoin'] = 'round', _0x1a846b['moveTo'](40.999969482421875 * _0x4c5baf, 59.850677490234375 * _0x4c5baf), _0x1a846b['bezierCurveTo'](41.999969482421875 * _0x4c5baf, 50.850677490234375 * _0x4c5baf, 47.999969482421875 * _0x4c5baf, 47.850677490234375 * _0x4c5baf, 56.999969482421875 * _0x4c5baf, 49.850677490234375 * _0x4c5baf), _0x1a846b['bezierCurveTo'](65.99996948242188 * _0x4c5baf, 41.850677490234375 * _0x4c5baf, 76.99996948242188 * _0x4c5baf, 42.850677490234375 * _0x4c5baf, 90.99996948242188 * _0x4c5baf, 47.850677490234375 * _0x4c5baf), _0x1a846b['bezierCurveTo'](94.99996948242188 * _0x4c5baf, 42.850677490234375 * _0x4c5baf, 104.99996948242188 * _0x4c5baf, 42.850677490234375 * _0x4c5baf, 114.99996948242188 * _0x4c5baf, 47.850677490234375 * _0x4c5baf), _0x1a846b['bezierCurveTo'](131.99996948242188 * _0x4c5baf, 42.850677490234375 * _0x4c5baf, 142.99996948242188 * _0x4c5baf, 48.850677490234375 * _0x4c5baf, 145.99996948242188 * _0x4c5baf, 56.850677490234375 * _0x4c5baf), _0x1a846b['bezierCurveTo'](160.99996948242188 * _0x4c5baf, 63.850677490234375 * _0x4c5baf, 154.99996948242188 * _0x4c5baf, 69.85067749023438 * _0x4c5baf, 155.99996948242188 * _0x4c5baf, 70.85067749023438 * _0x4c5baf), _0x1a846b['bezierCurveTo'](141.99996948242188 * _0x4c5baf, 71.85067749023438 * _0x4c5baf, 141.99996948242188 * _0x4c5baf, 71.85067749023438 * _0x4c5baf, 127.99996948242188 * _0x4c5baf, 72.85067749023438 * _0x4c5baf), _0x1a846b['bezierCurveTo'](110.99996948242188 * _0x4c5baf, 83.85067749023438 * _0x4c5baf, 107.99996948242188 * _0x4c5baf, 82.85067749023438 * _0x4c5baf, 90.99996948242188 * _0x4c5baf, 85.85067749023438 * _0x4c5baf), _0x1a846b['bezierCurveTo'](70.99996948242188 * _0x4c5baf, 83.85067749023438 * _0x4c5baf, 64.99996948242188 * _0x4c5baf, 79.85067749023438 * _0x4c5baf, 53.999969482421875 * _0x4c5baf, 70.85067749023438 * _0x4c5baf), _0x1a846b['closePath'](), fill_path(_0x1a846b, _0x32d997[0x3], _0x32d997[0x4], 0x4 * _0x4c5baf), _0x1a846b['beginPath'](), _0x1a846b['lineCap'] = 'round', _0x1a846b['lineJoin'] = 'round', _0x1a846b['moveTo'](33.999969482421875 * _0x4c5baf, 65.85067749023438 * _0x4c5baf), _0x1a846b['bezierCurveTo'](36.999969482421875 * _0x4c5baf, 59.850677490234375 * _0x4c5baf, 34.999969482421875 * _0x4c5baf, 60.850677490234375 * _0x4c5baf, 39.999969482421875 * _0x4c5baf, 59.850677490234375 * _0x4c5baf), _0x1a846b['bezierCurveTo'](47.999969482421875 * _0x4c5baf, 61.850677490234375 * _0x4c5baf, 62.999969482421875 * _0x4c5baf, 76.85067749023438 * _0x4c5baf, 74.99996948242188 * _0x4c5baf, 79.85067749023438 * _0x4c5baf), _0x1a846b['bezierCurveTo'](93.99996948242188 * _0x4c5baf, 85.85067749023438 * _0x4c5baf, 111.99996948242188 * _0x4c5baf, 83.85067749023438 * _0x4c5baf, 124.99996948242188 * _0x4c5baf, 70.85067749023438 * _0x4c5baf), _0x1a846b['bezierCurveTo'](129.99996948242188 * _0x4c5baf, 67.85067749023438 * _0x4c5baf, 145.99996948242188 * _0x4c5baf, 65.85067749023438 * _0x4c5baf, 159.99996948242188 * _0x4c5baf, 67.85067749023438 * _0x4c5baf), _0x1a846b['bezierCurveTo'](159.99996948242188 * _0x4c5baf, 71.85067749023438 * _0x4c5baf, 159.99996948242188 * _0x4c5baf, 71.85067749023438 * _0x4c5baf, 159.99996948242188 * _0x4c5baf, 75.85067749023438 * _0x4c5baf), _0x1a846b['bezierCurveTo'](146.99996948242188 * _0x4c5baf, 72.85067749023438 * _0x4c5baf, 144.99996948242188 * _0x4c5baf, 75.85067749023438 * _0x4c5baf, 143.99996948242188 * _0x4c5baf, 82.85067749023438 * _0x4c5baf), _0x1a846b['bezierCurveTo'](144.99996948242188 * _0x4c5baf, 86.85067749023438 * _0x4c5baf, 140.99996948242188 * _0x4c5baf, 90.85067749023438 * _0x4c5baf, 137.99996948242188 * _0x4c5baf, 86.85067749023438 * _0x4c5baf), _0x1a846b['bezierCurveTo'](139.99996948242188 * _0x4c5baf, 72.85067749023438 * _0x4c5baf, 135.99996948242188 * _0x4c5baf, 72.85067749023438 * _0x4c5baf, 133.99996948242188 * _0x4c5baf, 82.85067749023438 * _0x4c5baf), _0x1a846b['bezierCurveTo'](127.99996948242188 * _0x4c5baf, 88.85067749023438 * _0x4c5baf, 124.99996948242188 * _0x4c5baf, 70.85067749023438 * _0x4c5baf, 116.99996948242188 * _0x4c5baf, 86.85067749023438 * _0x4c5baf), _0x1a846b['bezierCurveTo'](110.99996948242188 * _0x4c5baf, 91.85067749023438 * _0x4c5baf, 96.99996948242188 * _0x4c5baf, 81.85067749023438 * _0x4c5baf, 89.99996948242188 * _0x4c5baf, 90.85067749023438 * _0x4c5baf), _0x1a846b['bezierCurveTo'](85.99996948242188 * _0x4c5baf, 92.85067749023438 * _0x4c5baf, 81.99996948242188 * _0x4c5baf, 95.85067749023438 * _0x4c5baf, 76.99996948242188 * _0x4c5baf, 86.85067749023438 * _0x4c5baf), _0x1a846b['bezierCurveTo'](67.99996948242188 * _0x4c5baf, 93.85067749023438 * _0x4c5baf, 67.99996948242188 * _0x4c5baf, 91.85067749023438 * _0x4c5baf, 60.999969482421875 * _0x4c5baf, 79.85067749023438 * _0x4c5baf), _0x1a846b['bezierCurveTo'](53.999969482421875 * _0x4c5baf, 71.85067749023438 * _0x4c5baf, 52.999969482421875 * _0x4c5baf, 72.85067749023438 * _0x4c5baf, 46.999969482421875 * _0x4c5baf, 77.85067749023438 * _0x4c5baf), _0x1a846b['bezierCurveTo'](41.999969482421875 * _0x4c5baf, 78.85067749023438 * _0x4c5baf, 42.999969482421875 * _0x4c5baf, 69.85067749023438 * _0x4c5baf, 33.999969482421875 * _0x4c5baf, 65.85067749023438 * _0x4c5baf), _0x1a846b['closePath'](), fill_path(_0x1a846b, _0x32d997[0x5], _0x32d997[0x6], 0x4 * _0x4c5baf), circle(_0x1a846b, 0x44 * _0x4c5baf, 111.29513549804688 * _0x4c5baf, 0xf * _0x4c5baf), fill_path(_0x1a846b, _0x32d997[0x7], _0x32d997[0x8], 0x4 * _0x4c5baf), circle(_0x1a846b, 0x7b * _0x4c5baf, 111.29510498046875 * _0x4c5baf, 0xf * _0x4c5baf), fill_path(_0x1a846b, _0x32d997[0x7], _0x32d997[0x8], 0x4 * _0x4c5baf), circle(_0x1a846b, 0x3f * _0x4c5baf, 0x6a * _0x4c5baf, 0x5 * _0x4c5baf), fill_path(_0x1a846b, _0x32d997[0x9]), circle(_0x1a846b, 0x76 * _0x4c5baf, 0x6a * _0x4c5baf, 0x5 * _0x4c5baf), fill_path(_0x1a846b, _0x32d997[0x9]), _0x260391;
}

function create_zombie_boss(_0x333076, _0x14deb6, _0x83a51a) {
    var _0x209966 = document['createElement']('canvas'),
        _0x57642e = _0x209966['getContext']('2d');
    return _0x209966['width'] = 0xbf * _0x333076, _0x209966['height'] = 0x99 * _0x333076, _0x57642e['globalAlpha'] = 0.5, _0x57642e['translate'](0x0, 0xa * _0x333076), _0x57642e['save'](), _0x57642e['translate'](96.49996948242188 * _0x333076, 66.79510498046875 * _0x333076), _0x57642e['rotate'](0x0), round_rect(_0x57642e, -79.5 * _0x333076, -48.5 * _0x333076, 0x9f * _0x333076, 0x61 * _0x333076, 0x16 * _0x333076), _0x57642e['restore'](), fill_path(_0x57642e, _0x83a51a[0x0], _0x83a51a[0x0], 0x4 * _0x333076), _0x57642e['globalAlpha'] = 0x1, _0x57642e['translate'](0x0, -0xa * _0x333076), _0x57642e['save'](), _0x57642e['translate'](96.49996948242188 * _0x333076, 66.79510498046875 * _0x333076), _0x57642e['rotate'](0x0), round_rect(_0x57642e, -79.5 * _0x333076, -48.5 * _0x333076, 0x9f * _0x333076, 0x61 * _0x333076, 0x16 * _0x333076), _0x57642e['restore'](), fill_path(_0x57642e, _0x83a51a[0x1], _0x83a51a[0x2], 0x4 * _0x333076), _0x57642e['translate'](0x2 * _0x333076, 0x0), _0x57642e['beginPath'](), _0x57642e['lineCap'] = 'round', _0x57642e['lineJoin'] = 'round', _0x57642e['moveTo'](0x77 * _0x333076, 0x1c * _0x333076), _0x57642e['bezierCurveTo'](0x77 * _0x333076, 0x16 * _0x333076, 0x77 * _0x333076, 0x14 * _0x333076, 0x7a * _0x333076, 0x10 * _0x333076), _0x57642e['bezierCurveTo'](0x95 * _0x333076, 0x27 * _0x333076, 0x95 * _0x333076, 0x27 * _0x333076, 0xb0 * _0x333076, 0x3f * _0x333076), _0x57642e['bezierCurveTo'](0xb0 * _0x333076, 0x4b * _0x333076, 0xb0 * _0x333076, 0x4b * _0x333076, 0xaf * _0x333076, 0x58 * _0x333076), _0x57642e['bezierCurveTo'](0xae * _0x333076, 0x5a * _0x333076, 0xae * _0x333076, 0x5a * _0x333076, 0xac * _0x333076, 0x5d * _0x333076), _0x57642e['bezierCurveTo'](0xab * _0x333076, 0x65 * _0x333076, 0xa9 * _0x333076, 0x6d * _0x333076, 0xa4 * _0x333076, 0x71 * _0x333076), _0x57642e['bezierCurveTo'](0xa3 * _0x333076, 0x68 * _0x333076, 0xa3 * _0x333076, 0x68 * _0x333076, 0xa2 * _0x333076, 0x5f * _0x333076), _0x57642e['bezierCurveTo'](0x9b * _0x333076, 0x69 * _0x333076, 0x9b * _0x333076, 0x69 * _0x333076, 0x93 * _0x333076, 0x74 * _0x333076), _0x57642e['bezierCurveTo'](0x57 * _0x333076, 0x72 * _0x333076, 0x57 * _0x333076, 0x72 * _0x333076, 0x1a * _0x333076, 0x70 * _0x333076), _0x57642e['bezierCurveTo'](0x1b * _0x333076, 0x6a * _0x333076, 0x1b * _0x333076, 0x6a * _0x333076, 0x1b * _0x333076, 0x65 * _0x333076), _0x57642e['bezierCurveTo'](0x18 * _0x333076, 0x68 * _0x333076, 0x18 * _0x333076, 0x68 * _0x333076, 0x14 * _0x333076, 0x6c * _0x333076), _0x57642e['bezierCurveTo'](0x11 * _0x333076, 0x67 * _0x333076, 0x14 * _0x333076, 0x56 * _0x333076, 0x17 * _0x333076, 0x48 * _0x333076), _0x57642e['bezierCurveTo'](0xf * _0x333076, 0x4a * _0x333076, 0xe * _0x333076, 0x4e * _0x333076, 0xc * _0x333076, 0x53 * _0x333076), _0x57642e['bezierCurveTo'](0xc * _0x333076, 0x41 * _0x333076, 0xc * _0x333076, 0x36 * _0x333076, 0x10 * _0x333076, 0x2a * _0x333076), _0x57642e['bezierCurveTo'](0xe * _0x333076, 0x27 * _0x333076, 0xe * _0x333076, 0x27 * _0x333076, 0xc * _0x333076, 0x24 * _0x333076), _0x57642e['bezierCurveTo'](0x10 * _0x333076, 0x21 * _0x333076, 0x10 * _0x333076, 0x21 * _0x333076, 0x13 * _0x333076, 0x1e * _0x333076), _0x57642e['bezierCurveTo'](0x12 * _0x333076, 0x1b * _0x333076, 0x12 * _0x333076, 0x1b * _0x333076, 0x11 * _0x333076, 0x19 * _0x333076), _0x57642e['bezierCurveTo'](0x18 * _0x333076, 0x18 * _0x333076, 0x1f * _0x333076, 0x15 * _0x333076, 0x1d * _0x333076, 0x13 * _0x333076), _0x57642e['bezierCurveTo'](0x25 * _0x333076, 0x19 * _0x333076, 0x25 * _0x333076, 0x19 * _0x333076, 0x2d * _0x333076, 0x1f * _0x333076), _0x57642e['bezierCurveTo'](0x28 * _0x333076, 0x17 * _0x333076, 0x28 * _0x333076, 0x15 * _0x333076, 0x2a * _0x333076, 0x10 * _0x333076), _0x57642e['bezierCurveTo'](0x4a * _0x333076, 0x10 * _0x333076, 0x4a * _0x333076, 0x10 * _0x333076, 0x6a * _0x333076, 0x10 * _0x333076), _0x57642e['bezierCurveTo'](0x71 * _0x333076, 0x15 * _0x333076, 0x71 * _0x333076, 0x15 * _0x333076, 0x77 * _0x333076, 0x1a * _0x333076), _0x57642e['closePath'](), fill_path(_0x57642e, _0x83a51a[0x3], _0x83a51a[0x4], 0x4 * _0x333076), _0x209966;
}

function create_zombie_hurt(_0x28e5d2, _0x1d6821) {
    var _0x161f28 = document['createElement']('canvas'),
        _0xbf2a43 = _0x161f28['getContext']('2d');
    return _0x161f28['width'] = 0xbf * _0x28e5d2, _0x161f28['height'] = 0x99 * _0x28e5d2, _0xbf2a43['save'](), _0xbf2a43['translate'](96.49996948242188 * _0x28e5d2, 66.79510498046875 * _0x28e5d2), round_rect(_0xbf2a43, -79.5 * _0x28e5d2, -48.5 * _0x28e5d2, 0x9f * _0x28e5d2, 0x61 * _0x28e5d2, 0x16 * _0x28e5d2), _0xbf2a43['restore'](), fill_path(_0xbf2a43, _0x1d6821[0x0], _0x1d6821[0x0], 0x4 * _0x28e5d2), _0xbf2a43['translate'](0x2 * _0x28e5d2, 0x0), _0xbf2a43['beginPath'](), _0xbf2a43['lineCap'] = 'round', _0xbf2a43['lineJoin'] = 'round', _0xbf2a43['moveTo'](0x77 * _0x28e5d2, 0x1c * _0x28e5d2), _0xbf2a43['bezierCurveTo'](0x77 * _0x28e5d2, 0x16 * _0x28e5d2, 0x77 * _0x28e5d2, 0x14 * _0x28e5d2, 0x7a * _0x28e5d2, 0x10 * _0x28e5d2), _0xbf2a43['bezierCurveTo'](0x95 * _0x28e5d2, 0x27 * _0x28e5d2, 0x95 * _0x28e5d2, 0x27 * _0x28e5d2, 0xb0 * _0x28e5d2, 0x3f * _0x28e5d2), _0xbf2a43['bezierCurveTo'](0xb0 * _0x28e5d2, 0x4b * _0x28e5d2, 0xb0 * _0x28e5d2, 0x4b * _0x28e5d2, 0xaf * _0x28e5d2, 0x58 * _0x28e5d2), _0xbf2a43['bezierCurveTo'](0xae * _0x28e5d2, 0x5a * _0x28e5d2, 0xae * _0x28e5d2, 0x5a * _0x28e5d2, 0xac * _0x28e5d2, 0x5d * _0x28e5d2), _0xbf2a43['bezierCurveTo'](0xab * _0x28e5d2, 0x65 * _0x28e5d2, 0xa9 * _0x28e5d2, 0x6d * _0x28e5d2, 0xa4 * _0x28e5d2, 0x71 * _0x28e5d2), _0xbf2a43['bezierCurveTo'](0xa3 * _0x28e5d2, 0x68 * _0x28e5d2, 0xa3 * _0x28e5d2, 0x68 * _0x28e5d2, 0xa2 * _0x28e5d2, 0x5f * _0x28e5d2), _0xbf2a43['bezierCurveTo'](0x9b * _0x28e5d2, 0x69 * _0x28e5d2, 0x9b * _0x28e5d2, 0x69 * _0x28e5d2, 0x93 * _0x28e5d2, 0x74 * _0x28e5d2), _0xbf2a43['bezierCurveTo'](0x57 * _0x28e5d2, 0x72 * _0x28e5d2, 0x57 * _0x28e5d2, 0x72 * _0x28e5d2, 0x1a * _0x28e5d2, 0x70 * _0x28e5d2), _0xbf2a43['bezierCurveTo'](0x1b * _0x28e5d2, 0x6a * _0x28e5d2, 0x1b * _0x28e5d2, 0x6a * _0x28e5d2, 0x1b * _0x28e5d2, 0x65 * _0x28e5d2), _0xbf2a43['bezierCurveTo'](0x18 * _0x28e5d2, 0x68 * _0x28e5d2, 0x18 * _0x28e5d2, 0x68 * _0x28e5d2, 0x14 * _0x28e5d2, 0x6c * _0x28e5d2), _0xbf2a43['bezierCurveTo'](0x11 * _0x28e5d2, 0x67 * _0x28e5d2, 0x14 * _0x28e5d2, 0x56 * _0x28e5d2, 0x17 * _0x28e5d2, 0x48 * _0x28e5d2), _0xbf2a43['bezierCurveTo'](0xf * _0x28e5d2, 0x4a * _0x28e5d2, 0xe * _0x28e5d2, 0x4e * _0x28e5d2, 0xc * _0x28e5d2, 0x53 * _0x28e5d2), _0xbf2a43['bezierCurveTo'](0xc * _0x28e5d2, 0x41 * _0x28e5d2, 0xc * _0x28e5d2, 0x36 * _0x28e5d2, 0x10 * _0x28e5d2, 0x2a * _0x28e5d2), _0xbf2a43['bezierCurveTo'](0xe * _0x28e5d2, 0x27 * _0x28e5d2, 0xe * _0x28e5d2, 0x27 * _0x28e5d2, 0xc * _0x28e5d2, 0x24 * _0x28e5d2), _0xbf2a43['bezierCurveTo'](0x10 * _0x28e5d2, 0x21 * _0x28e5d2, 0x10 * _0x28e5d2, 0x21 * _0x28e5d2, 0x13 * _0x28e5d2, 0x1e * _0x28e5d2), _0xbf2a43['bezierCurveTo'](0x12 * _0x28e5d2, 0x1b * _0x28e5d2, 0x12 * _0x28e5d2, 0x1b * _0x28e5d2, 0x11 * _0x28e5d2, 0x19 * _0x28e5d2), _0xbf2a43['bezierCurveTo'](0x18 * _0x28e5d2, 0x18 * _0x28e5d2, 0x1f * _0x28e5d2, 0x15 * _0x28e5d2, 0x1d * _0x28e5d2, 0x13 * _0x28e5d2), _0xbf2a43['bezierCurveTo'](0x25 * _0x28e5d2, 0x19 * _0x28e5d2, 0x25 * _0x28e5d2, 0x19 * _0x28e5d2, 0x2d * _0x28e5d2, 0x1f * _0x28e5d2), _0xbf2a43['bezierCurveTo'](0x28 * _0x28e5d2, 0x17 * _0x28e5d2, 0x28 * _0x28e5d2, 0x15 * _0x28e5d2, 0x2a * _0x28e5d2, 0x10 * _0x28e5d2), _0xbf2a43['bezierCurveTo'](0x4a * _0x28e5d2, 0x10 * _0x28e5d2, 0x4a * _0x28e5d2, 0x10 * _0x28e5d2, 0x6a * _0x28e5d2, 0x10 * _0x28e5d2), _0xbf2a43['bezierCurveTo'](0x71 * _0x28e5d2, 0x15 * _0x28e5d2, 0x71 * _0x28e5d2, 0x15 * _0x28e5d2, 0x77 * _0x28e5d2, 0x1a * _0x28e5d2), _0xbf2a43['closePath'](), fill_path(_0xbf2a43, _0x1d6821[0x0], _0x1d6821[0x0], 0x4 * _0x28e5d2), _0xbf2a43['save'](), _0xbf2a43['translate'](97.49996948242188 * _0x28e5d2, 95.12844848632812 * _0x28e5d2), round_rect(_0xbf2a43, -62.5 * _0x28e5d2, -41.5 * _0x28e5d2, 0x7d * _0x28e5d2, 0x53 * _0x28e5d2, 0x14 * _0x28e5d2), _0xbf2a43['restore'](), fill_path(_0xbf2a43, _0x1d6821[0x0], _0x1d6821[0x0], 0x4 * _0x28e5d2), _0x161f28;
}

function create_plant_seed(_0x10c354, _0x4c941b, _0x2ea2e2) {
    var _0x39ede3 = document['createElement']('canvas'),
        _0x14c06a = _0x39ede3['getContext']('2d'),
        _0xb20de7 = _0x10c354 * 0x28,
        _0x426f59 = _0x10c354 * 0x28;
    _0x39ede3['width'] = _0xb20de7, _0x39ede3['height'] = _0x426f59;
    var _0x11c5d7 = _0x10c354 * _0xb20de7 / 0x2,
        _0x5322fd = _0x10c354 * _0x426f59 / 0x2,
        _0x5f4c07 = _0x10c354 * 0xf;
    _0x14c06a['save'](), _0x14c06a['translate'](_0x11c5d7, _0x5322fd), _0x14c06a['globalAlpha'] = 0x1, circle(_0x14c06a, 0x0, 0x0, _0x5f4c07), fill_path(_0x14c06a, _0x2ea2e2[0x0]);
    var _0x5f4c07 = 0x5 * _0x10c354,
        _0x11c5d7 = 0x2 * _0x10c354,
        _0x5322fd = 0x1 * _0x10c354;
    return _0x14c06a['translate'](_0x11c5d7, _0x5322fd), _0x14c06a['globalAlpha'] = 0x1, circle(_0x14c06a, 0x0, 0x0, _0x5f4c07), fill_path(_0x14c06a, _0x2ea2e2[0x1]), _0x14c06a['restore'](), _0x39ede3;
}

function create_fish1(_0x51417f, _0x1a4ec8, _0x1a66e1, _0x3033f1) {
    var _0x12fb1a = document['createElement']('canvas'),
        _0x5ae1ac = _0x12fb1a['getContext']('2d');
    return _0x12fb1a['width'] = 0xb9 * _0x51417f, _0x12fb1a['height'] = 0xf0 * _0x51417f, _0x5ae1ac['globalAlpha'] = 0.5, _0x5ae1ac['translate'](0x0, 0xa * _0x51417f), _0x5ae1ac['beginPath'](), _0x5ae1ac['lineCap'] = 'round', _0x5ae1ac['lineJoin'] = 'round', _0x5ae1ac['moveTo'](0x2c * _0x51417f, 0x89 * _0x51417f), _0x5ae1ac['bezierCurveTo'](0x3c * _0x51417f, 0x57 * _0x51417f, 0x44 * _0x51417f, 0x42 * _0x51417f, 0x5c * _0x51417f, 0x43 * _0x51417f), _0x5ae1ac['bezierCurveTo'](0x73 * _0x51417f, 0x40 * _0x51417f, 0x81 * _0x51417f, 0x61 * _0x51417f, 0x89 * _0x51417f, 0x88 * _0x51417f), _0x5ae1ac['closePath'](), fill_path(_0x5ae1ac, _0x1a66e1[0x0]), _0x5ae1ac['beginPath'](), _0x5ae1ac['lineCap'] = 'round', _0x5ae1ac['lineJoin'] = 'round', _0x5ae1ac['moveTo'](0x35 * _0x51417f, 0xb5 * _0x51417f), _0x5ae1ac['bezierCurveTo'](0x1e * _0x51417f, 0xa4 * _0x51417f, 0x13 * _0x51417f, 0x96 * _0x51417f, 0xb * _0x51417f, 0x88 * _0x51417f), _0x5ae1ac['bezierCurveTo'](0x1c * _0x51417f, 0x79 * _0x51417f, 0x26 * _0x51417f, 0x84 * _0x51417f, 0x30 * _0x51417f, 0x96 * _0x51417f), _0x5ae1ac['closePath'](), fill_path(_0x5ae1ac, _0x1a66e1[0x0]), _0x5ae1ac['beginPath'](), _0x5ae1ac['lineCap'] = 'round', _0x5ae1ac['lineJoin'] = 'round', _0x5ae1ac['moveTo'](0x3f * _0x51417f, 0xd0 * _0x51417f), _0x5ae1ac['bezierCurveTo'](0x4b * _0x51417f, 0xe0 * _0x51417f, 0x56 * _0x51417f, 0xe4 * _0x51417f, 0x5d * _0x51417f, 0xe4 * _0x51417f), _0x5ae1ac['bezierCurveTo'](0x68 * _0x51417f, 0xe5 * _0x51417f, 0x74 * _0x51417f, 0xdb * _0x51417f, 0x7a * _0x51417f, 0xcd * _0x51417f), _0x5ae1ac['closePath'](), fill_path(_0x5ae1ac, _0x1a66e1[0x0]), _0x5ae1ac['beginPath'](), _0x5ae1ac['lineCap'] = 'round', _0x5ae1ac['lineJoin'] = 'round', _0x5ae1ac['moveTo'](0x82 * _0x51417f, 0xaa * _0x51417f), _0x5ae1ac['bezierCurveTo'](0x92 * _0x51417f, 0x7d * _0x51417f, 0x9c * _0x51417f, 0x7e * _0x51417f, 0xad * _0x51417f, 0x89 * _0x51417f), _0x5ae1ac['bezierCurveTo'](0xa7 * _0x51417f, 0x97 * _0x51417f, 0x8f * _0x51417f, 0xae * _0x51417f, 0x83 * _0x51417f, 0xb7 * _0x51417f), _0x5ae1ac['closePath'](), fill_path(_0x5ae1ac, _0x1a66e1[0x0]), _0x5ae1ac['beginPath'](), _0x5ae1ac['lineCap'] = 'round', _0x5ae1ac['lineJoin'] = 'round', _0x5ae1ac['moveTo'](0x27 * _0x51417f, 0x8c * _0x51417f), _0x5ae1ac['bezierCurveTo'](0x4b * _0x51417f, 0x7e * _0x51417f, 0x71 * _0x51417f, 0x7f * _0x51417f, 0x8f * _0x51417f, 0x89 * _0x51417f), _0x5ae1ac['bezierCurveTo'](0x8d * _0x51417f, 0xba * _0x51417f, 0x82 * _0x51417f, 0xca * _0x51417f, 0x71 * _0x51417f, 0xd6 * _0x51417f), _0x5ae1ac['bezierCurveTo'](0x55 * _0x51417f, 0xe4 * _0x51417f, 0x38 * _0x51417f, 0xdb * _0x51417f, 0x30 * _0x51417f, 0xad * _0x51417f), _0x5ae1ac['bezierCurveTo'](0x28 * _0x51417f, 0x94 * _0x51417f, 0x2b * _0x51417f, 0x91 * _0x51417f, 0x27 * _0x51417f, 0x8c * _0x51417f), _0x5ae1ac['closePath'](), fill_path(_0x5ae1ac, _0x1a66e1[0x0]), _0x5ae1ac['globalAlpha'] = 0x1, _0x5ae1ac['translate'](0x0, -0xa * _0x51417f), _0x5ae1ac['beginPath'](), _0x5ae1ac['lineCap'] = 'round', _0x5ae1ac['lineJoin'] = 'round', _0x5ae1ac['moveTo'](0x2c * _0x51417f, 0x89 * _0x51417f), _0x5ae1ac['bezierCurveTo'](0x3c * _0x51417f, 0x57 * _0x51417f, 0x44 * _0x51417f, 0x42 * _0x51417f, 0x5c * _0x51417f, 0x43 * _0x51417f), _0x5ae1ac['bezierCurveTo'](0x73 * _0x51417f, 0x40 * _0x51417f, 0x81 * _0x51417f, 0x61 * _0x51417f, 0x89 * _0x51417f, 0x88 * _0x51417f), _0x5ae1ac['closePath'](), fill_path(_0x5ae1ac, _0x1a66e1[0x1], _0x1a66e1[0x2], 0x4 * _0x51417f), _0x5ae1ac['beginPath'](), _0x5ae1ac['lineCap'] = 'round', _0x5ae1ac['lineJoin'] = 'round', _0x5ae1ac['moveTo'](0x35 * _0x51417f, 0xb5 * _0x51417f), _0x5ae1ac['bezierCurveTo'](0x1e * _0x51417f, 0xa4 * _0x51417f, 0x13 * _0x51417f, 0x96 * _0x51417f, 0xb * _0x51417f, 0x88 * _0x51417f), _0x5ae1ac['bezierCurveTo'](0x1c * _0x51417f, 0x79 * _0x51417f, 0x26 * _0x51417f, 0x84 * _0x51417f, 0x30 * _0x51417f, 0x96 * _0x51417f), _0x5ae1ac['closePath'](), fill_path(_0x5ae1ac, _0x1a66e1[0x1], _0x1a66e1[0x2], 0x4 * _0x51417f), _0x5ae1ac['beginPath'](), _0x5ae1ac['lineCap'] = 'round', _0x5ae1ac['lineJoin'] = 'round', _0x5ae1ac['moveTo'](0x3f * _0x51417f, 0xd0 * _0x51417f), _0x5ae1ac['bezierCurveTo'](0x4b * _0x51417f, 0xe0 * _0x51417f, 0x56 * _0x51417f, 0xe4 * _0x51417f, 0x5d * _0x51417f, 0xe4 * _0x51417f), _0x5ae1ac['bezierCurveTo'](0x68 * _0x51417f, 0xe5 * _0x51417f, 0x74 * _0x51417f, 0xdb * _0x51417f, 0x7a * _0x51417f, 0xcd * _0x51417f), _0x5ae1ac['closePath'](), fill_path(_0x5ae1ac, _0x1a66e1[0x1], _0x1a66e1[0x2], 0x4 * _0x51417f), _0x5ae1ac['beginPath'](), _0x5ae1ac['lineCap'] = 'round', _0x5ae1ac['lineJoin'] = 'round', _0x5ae1ac['moveTo'](0x82 * _0x51417f, 0xaa * _0x51417f), _0x5ae1ac['bezierCurveTo'](0x92 * _0x51417f, 0x7d * _0x51417f, 0x9c * _0x51417f, 0x7e * _0x51417f, 0xad * _0x51417f, 0x89 * _0x51417f), _0x5ae1ac['bezierCurveTo'](0xa7 * _0x51417f, 0x97 * _0x51417f, 0x8f * _0x51417f, 0xae * _0x51417f, 0x83 * _0x51417f, 0xb7 * _0x51417f), _0x5ae1ac['closePath'](), fill_path(_0x5ae1ac, _0x1a66e1[0x1], _0x1a66e1[0x2], 0x4 * _0x51417f), _0x5ae1ac['beginPath'](), _0x5ae1ac['lineCap'] = 'round', _0x5ae1ac['lineJoin'] = 'round', _0x5ae1ac['moveTo'](0x27 * _0x51417f, 0x8c * _0x51417f), _0x5ae1ac['bezierCurveTo'](0x4b * _0x51417f, 0x7e * _0x51417f, 0x71 * _0x51417f, 0x7f * _0x51417f, 0x8f * _0x51417f, 0x89 * _0x51417f), _0x5ae1ac['bezierCurveTo'](0x8d * _0x51417f, 0xba * _0x51417f, 0x82 * _0x51417f, 0xca * _0x51417f, 0x71 * _0x51417f, 0xd6 * _0x51417f), _0x5ae1ac['bezierCurveTo'](0x55 * _0x51417f, 0xe4 * _0x51417f, 0x38 * _0x51417f, 0xdb * _0x51417f, 0x30 * _0x51417f, 0xad * _0x51417f), _0x5ae1ac['bezierCurveTo'](0x28 * _0x51417f, 0x94 * _0x51417f, 0x2b * _0x51417f, 0x91 * _0x51417f, 0x27 * _0x51417f, 0x8c * _0x51417f), _0x5ae1ac['closePath'](), fill_path(_0x5ae1ac, _0x1a66e1[0x1], _0x1a66e1[0x2], 0x4 * _0x51417f), _0x5ae1ac['beginPath'](), _0x5ae1ac['lineCap'] = 'round', _0x5ae1ac['lineJoin'] = 'round', _0x5ae1ac['moveTo'](0x3b * _0x51417f, 0x63 * _0x51417f), _0x5ae1ac['bezierCurveTo'](0x47 * _0x51417f, 0x44 * _0x51417f, 0x51 * _0x51417f, 0x44 * _0x51417f, 0x5e * _0x51417f, 0x43 * _0x51417f), _0x5ae1ac['bezierCurveTo'](0x69 * _0x51417f, 0x42 * _0x51417f, 0x77 * _0x51417f, 0x4b * _0x51417f, 0x7b * _0x51417f, 0x60 * _0x51417f), _0x5ae1ac['bezierCurveTo'](0x68 * _0x51417f, 0x5b * _0x51417f, 0x65 * _0x51417f, 0x5e * _0x51417f, 0x5e * _0x51417f, 0x61 * _0x51417f), _0x5ae1ac['bezierCurveTo'](0x4c * _0x51417f, 0x5c * _0x51417f, 0x49 * _0x51417f, 0x5d * _0x51417f, 0x3c * _0x51417f, 0x63 * _0x51417f), _0x5ae1ac['closePath'](), fill_path(_0x5ae1ac, _0x1a66e1[0x3], _0x1a66e1[0x2], 0x4 * _0x51417f), _0x3033f1 === 0x0 ? (_0x5ae1ac['beginPath'](), _0x5ae1ac['lineCap'] = 'round', _0x5ae1ac['lineJoin'] = 'round', _0x5ae1ac['moveTo'](0x2f * _0x51417f, 0x95 * _0x51417f), _0x5ae1ac['bezierCurveTo'](0x2b * _0x51417f, 0x8c * _0x51417f, 0x30 * _0x51417f, 0x82 * _0x51417f, 0x3b * _0x51417f, 0x7f * _0x51417f), _0x5ae1ac['bezierCurveTo'](0x4d * _0x51417f, 0x7e * _0x51417f, 0x5a * _0x51417f, 0x83 * _0x51417f, 0x83 * _0x51417f, 0x7f * _0x51417f), _0x5ae1ac['bezierCurveTo'](0x8f * _0x51417f, 0x82 * _0x51417f, 0x90 * _0x51417f, 0x8f * _0x51417f, 0x84 * _0x51417f, 0x9a * _0x51417f), _0x5ae1ac['bezierCurveTo'](0x5a * _0x51417f, 0x98 * _0x51417f, 0x5a * _0x51417f, 0x98 * _0x51417f, 0x30 * _0x51417f, 0x96 * _0x51417f), _0x5ae1ac['closePath'](), fill_path(_0x5ae1ac, _0x1a66e1[0x1]), _0x5ae1ac['beginPath'](), _0x5ae1ac['lineCap'] = 'round', _0x5ae1ac['lineJoin'] = 'round', _0x5ae1ac['moveTo'](0x28 * _0x51417f, 0x8b * _0x51417f), _0x5ae1ac['bezierCurveTo'](0x30 * _0x51417f, 0x71 * _0x51417f, 0x4c * _0x51417f, 0x77 * _0x51417f, 0x5b * _0x51417f, 0x7e * _0x51417f), _0x5ae1ac['bezierCurveTo'](0x75 * _0x51417f, 0x71 * _0x51417f, 0x87 * _0x51417f, 0x75 * _0x51417f, 0x90 * _0x51417f, 0x86 * _0x51417f), _0x5ae1ac['bezierCurveTo'](0x90 * _0x51417f, 0x8a * _0x51417f, 0x90 * _0x51417f, 0x8a * _0x51417f, 0x90 * _0x51417f, 0x8e * _0x51417f), _0x5ae1ac['bezierCurveTo'](0x80 * _0x51417f, 0x7c * _0x51417f, 0x6c * _0x51417f, 0x7c * _0x51417f, 0x5b * _0x51417f, 0x88 * _0x51417f), _0x5ae1ac['bezierCurveTo'](0x3b * _0x51417f, 0x7c * _0x51417f, 0x32 * _0x51417f, 0x89 * _0x51417f, 0x2a * _0x51417f, 0x94 * _0x51417f), _0x5ae1ac['closePath'](), fill_path(_0x5ae1ac, _0x1a66e1[0x3], _0x1a66e1[0x2], 0x4 * _0x51417f)) : (_0x5ae1ac['beginPath'](), _0x5ae1ac['lineCap'] = 'round', _0x5ae1ac['lineJoin'] = 'round', _0x5ae1ac['moveTo'](0x29 * _0x51417f, 0x8b * _0x51417f), _0x5ae1ac['bezierCurveTo'](0x35 * _0x51417f, 0x75 * _0x51417f, 0x45 * _0x51417f, 0x76 * _0x51417f, 0x5c * _0x51417f, 0x7f * _0x51417f), _0x5ae1ac['bezierCurveTo'](0x7c * _0x51417f, 0x6f * _0x51417f, 0x88 * _0x51417f, 0x79 * _0x51417f, 0x8f * _0x51417f, 0x88 * _0x51417f), _0x5ae1ac['bezierCurveTo'](0x8e * _0x51417f, 0x90 * _0x51417f, 0x8e * _0x51417f, 0x90 * _0x51417f, 0x8d * _0x51417f, 0x98 * _0x51417f), _0x5ae1ac['bezierCurveTo'](0x80 * _0x51417f, 0x83 * _0x51417f, 0x71 * _0x51417f, 0x8a * _0x51417f, 0x5c * _0x51417f, 0x91 * _0x51417f), _0x5ae1ac['bezierCurveTo'](0x39 * _0x51417f, 0x85 * _0x51417f, 0x39 * _0x51417f, 0x93 * _0x51417f, 0x2c * _0x51417f, 0x9a * _0x51417f), _0x5ae1ac['closePath'](), fill_path(_0x5ae1ac, _0x1a66e1[0x3], _0x1a66e1[0x2], 0x4 * _0x51417f)), _0x5ae1ac['beginPath'](), _0x5ae1ac['lineCap'] = 'round', _0x5ae1ac['lineJoin'] = 'round', _0x5ae1ac['moveTo'](0x5a * _0x51417f, 0x5f * _0x51417f), _0x5ae1ac['bezierCurveTo'](0x63 * _0x51417f, 0x52 * _0x51417f, 0x62 * _0x51417f, 0x3a * _0x51417f, 0x63 * _0x51417f, 0x28 * _0x51417f), _0x5ae1ac['bezierCurveTo'](0x5a * _0x51417f, 0x26 * _0x51417f, 0x59 * _0x51417f, 0x22 * _0x51417f, 0x5c * _0x51417f, 0x11 * _0x51417f), _0x5ae1ac['bezierCurveTo'](0x5c * _0x51417f, 0x5 * _0x51417f, 0x53 * _0x51417f, 0x10 * _0x51417f, 0x4e * _0x51417f, 0x1d * _0x51417f), _0x5ae1ac['bezierCurveTo'](0x48 * _0x51417f, 0x3b * _0x51417f, 0x57 * _0x51417f, 0x51 * _0x51417f, 0x59 * _0x51417f, 0x57 * _0x51417f), _0x5ae1ac['closePath'](), fill_path(_0x5ae1ac, _0x1a66e1[0x1], _0x1a66e1[0x2], 0x4 * _0x51417f), _0x5ae1ac['beginPath'](), _0x5ae1ac['lineCap'] = 'round', _0x5ae1ac['lineJoin'] = 'round', _0x5ae1ac['moveTo'](0x5a * _0x51417f, 0x56 * _0x51417f), _0x5ae1ac['bezierCurveTo'](0x5f * _0x51417f, 0x4a * _0x51417f, 0x5f * _0x51417f, 0x3e * _0x51417f, 0x5f * _0x51417f, 0x2b * _0x51417f), _0x5ae1ac['bezierCurveTo'](0x54 * _0x51417f, 0x25 * _0x51417f, 0x56 * _0x51417f, 0x22 * _0x51417f, 0x59 * _0x51417f, 0x10 * _0x51417f), _0x5ae1ac['bezierCurveTo'](0x4b * _0x51417f, 0x1d * _0x51417f, 0x50 * _0x51417f, 0x3a * _0x51417f, 0x5a * _0x51417f, 0x55 * _0x51417f), _0x5ae1ac['closePath'](), fill_path(_0x5ae1ac, _0x1a66e1[0x1], _0x1a66e1[0x3], 0x4 * _0x51417f), _0x5ae1ac['beginPath'](), _0x5ae1ac['lineCap'] = 'round', _0x5ae1ac['lineJoin'] = 'round', _0x5ae1ac['moveTo'](0x5c * _0x51417f, 0x75 * _0x51417f), _0x5ae1ac['bezierCurveTo'](0x62 * _0x51417f, 0x57 * _0x51417f, 0x5d * _0x51417f, 0x4e * _0x51417f, 0x55 * _0x51417f, 0x4c * _0x51417f), _0x5ae1ac['bezierCurveTo'](85.5 * _0x51417f, 79.5 * _0x51417f, 85.5 * _0x51417f, 79.5 * _0x51417f, 0x56 * _0x51417f, 0x53 * _0x51417f), _0x5ae1ac['bezierCurveTo'](0x54 * _0x51417f, 85.5 * _0x51417f, 0x54 * _0x51417f, 85.5 * _0x51417f, 0x52 * _0x51417f, 0x58 * _0x51417f), _0x5ae1ac['bezierCurveTo'](0x5a * _0x51417f, 0x5d * _0x51417f, 0x59 * _0x51417f, 0x64 * _0x51417f, 0x5c * _0x51417f, 0x75 * _0x51417f), _0x5ae1ac['closePath'](), fill_path(_0x5ae1ac, _0x1a66e1[0x1], _0x1a66e1[0x3], 0x4 * _0x51417f), _0x5ae1ac['beginPath'](), _0x5ae1ac['lineCap'] = 'round', _0x5ae1ac['lineJoin'] = 'round', _0x5ae1ac['moveTo'](0x5c * _0x51417f, 0xaf * _0x51417f), _0x5ae1ac['bezierCurveTo'](0x5f * _0x51417f, 0x87 * _0x51417f, 0x62 * _0x51417f, 0x7d * _0x51417f, 0x6d * _0x51417f, 0x79 * _0x51417f), _0x5ae1ac['bezierCurveTo'](0x6a * _0x51417f, 0x72 * _0x51417f, 0x68 * _0x51417f, 0x72 * _0x51417f, 0x66 * _0x51417f, 0x71 * _0x51417f), _0x5ae1ac['bezierCurveTo'](0x67 * _0x51417f, 0x6a * _0x51417f, 0x68 * _0x51417f, 0x67 * _0x51417f, 0x6b * _0x51417f, 0x60 * _0x51417f), _0x5ae1ac['bezierCurveTo'](0x4a * _0x51417f, 0x6c * _0x51417f, 0x56 * _0x51417f, 0x9d * _0x51417f, 0x5c * _0x51417f, 0xae * _0x51417f), _0x5ae1ac['closePath'](), fill_path(_0x5ae1ac, _0x1a66e1[0x1], _0x1a66e1[0x3], 0x4 * _0x51417f), _0x5ae1ac['beginPath'](), _0x5ae1ac['lineCap'] = 'round', _0x5ae1ac['lineJoin'] = 'round', _0x5ae1ac['moveTo'](0x30 * _0x51417f, 0xa9 * _0x51417f), _0x5ae1ac['bezierCurveTo'](0x2a * _0x51417f, 0xbb * _0x51417f, 0x32 * _0x51417f, 0xc1 * _0x51417f, 0x3b * _0x51417f, 0xc6 * _0x51417f), _0x5ae1ac['closePath'](), fill_path(_0x5ae1ac, undefined, _0x1a66e1[0x2], 0x5 * _0x51417f), _0x5ae1ac['beginPath'](), _0x5ae1ac['lineCap'] = 'round', _0x5ae1ac['lineJoin'] = 'round', _0x5ae1ac['moveTo'](0x88 * _0x51417f, 0xab * _0x51417f), _0x5ae1ac['bezierCurveTo'](0x8b * _0x51417f, 0xba * _0x51417f, 0x8a * _0x51417f, 0xbf * _0x51417f, 0x7c * _0x51417f, 0xc7 * _0x51417f), _0x5ae1ac['closePath'](), fill_path(_0x5ae1ac, undefined, _0x1a66e1[0x2], 0x4 * _0x51417f), circle(_0x5ae1ac, 0x3f * _0x51417f, 0xb4 * _0x51417f, 15.231546211727817 * _0x51417f), fill_path(_0x5ae1ac, _0x1a66e1[0x4]), circle(_0x5ae1ac, 0x79 * _0x51417f, 0xb5 * _0x51417f, 15.652475842498529 * _0x51417f), fill_path(_0x5ae1ac, _0x1a66e1[0x4]), circle(_0x5ae1ac, 0x3a * _0x51417f, 0xaf * _0x51417f, 5.656854249492381 * _0x51417f), fill_path(_0x5ae1ac, _0x1a66e1[0x2]), circle(_0x5ae1ac, 0x74 * _0x51417f, 0xaf * _0x51417f, 5.656854249492381 * _0x51417f), fill_path(_0x5ae1ac, _0x1a66e1[0x2]), _0x12fb1a;
}

function create_hurt_fish1(_0x5bf25f, _0x3aa779) {
    var _0x1c9d4c = document['createElement']('canvas'),
        _0x1fe6e3 = _0x1c9d4c['getContext']('2d');
    return _0x1c9d4c['width'] = 0xb9 * _0x5bf25f, _0x1c9d4c['height'] = 0xf0 * _0x5bf25f, _0x1fe6e3['beginPath'](), _0x1fe6e3['lineCap'] = 'round', _0x1fe6e3['lineJoin'] = 'round', _0x1fe6e3['moveTo'](0x2c * _0x5bf25f, 0x89 * _0x5bf25f), _0x1fe6e3['bezierCurveTo'](0x3c * _0x5bf25f, 0x57 * _0x5bf25f, 0x44 * _0x5bf25f, 0x42 * _0x5bf25f, 0x5c * _0x5bf25f, 0x43 * _0x5bf25f), _0x1fe6e3['bezierCurveTo'](0x73 * _0x5bf25f, 0x40 * _0x5bf25f, 0x81 * _0x5bf25f, 0x61 * _0x5bf25f, 0x89 * _0x5bf25f, 0x88 * _0x5bf25f), _0x1fe6e3['closePath'](), fill_path(_0x1fe6e3, _0x3aa779[0x0]), _0x1fe6e3['beginPath'](), _0x1fe6e3['lineCap'] = 'round', _0x1fe6e3['lineJoin'] = 'round', _0x1fe6e3['moveTo'](0x35 * _0x5bf25f, 0xb5 * _0x5bf25f), _0x1fe6e3['bezierCurveTo'](0x1e * _0x5bf25f, 0xa4 * _0x5bf25f, 0x13 * _0x5bf25f, 0x96 * _0x5bf25f, 0xb * _0x5bf25f, 0x88 * _0x5bf25f), _0x1fe6e3['bezierCurveTo'](0x1c * _0x5bf25f, 0x79 * _0x5bf25f, 0x26 * _0x5bf25f, 0x84 * _0x5bf25f, 0x30 * _0x5bf25f, 0x96 * _0x5bf25f), _0x1fe6e3['closePath'](), fill_path(_0x1fe6e3, _0x3aa779[0x0]), _0x1fe6e3['beginPath'](), _0x1fe6e3['lineCap'] = 'round', _0x1fe6e3['lineJoin'] = 'round', _0x1fe6e3['moveTo'](0x3f * _0x5bf25f, 0xd0 * _0x5bf25f), _0x1fe6e3['bezierCurveTo'](0x4b * _0x5bf25f, 0xe0 * _0x5bf25f, 0x56 * _0x5bf25f, 0xe4 * _0x5bf25f, 0x5d * _0x5bf25f, 0xe4 * _0x5bf25f), _0x1fe6e3['bezierCurveTo'](0x68 * _0x5bf25f, 0xe5 * _0x5bf25f, 0x74 * _0x5bf25f, 0xdb * _0x5bf25f, 0x7a * _0x5bf25f, 0xcd * _0x5bf25f), _0x1fe6e3['closePath'](), fill_path(_0x1fe6e3, _0x3aa779[0x0]), _0x1fe6e3['beginPath'](), _0x1fe6e3['lineCap'] = 'round', _0x1fe6e3['lineJoin'] = 'round', _0x1fe6e3['moveTo'](0x82 * _0x5bf25f, 0xaa * _0x5bf25f), _0x1fe6e3['bezierCurveTo'](0x92 * _0x5bf25f, 0x7d * _0x5bf25f, 0x9c * _0x5bf25f, 0x7e * _0x5bf25f, 0xad * _0x5bf25f, 0x89 * _0x5bf25f), _0x1fe6e3['bezierCurveTo'](0xa7 * _0x5bf25f, 0x97 * _0x5bf25f, 0x8f * _0x5bf25f, 0xae * _0x5bf25f, 0x83 * _0x5bf25f, 0xb7 * _0x5bf25f), _0x1fe6e3['closePath'](), fill_path(_0x1fe6e3, _0x3aa779[0x0]), _0x1fe6e3['beginPath'](), _0x1fe6e3['lineCap'] = 'round', _0x1fe6e3['lineJoin'] = 'round', _0x1fe6e3['moveTo'](0x27 * _0x5bf25f, 0x8c * _0x5bf25f), _0x1fe6e3['bezierCurveTo'](0x4b * _0x5bf25f, 0x7e * _0x5bf25f, 0x71 * _0x5bf25f, 0x7f * _0x5bf25f, 0x8f * _0x5bf25f, 0x89 * _0x5bf25f), _0x1fe6e3['bezierCurveTo'](0x8d * _0x5bf25f, 0xba * _0x5bf25f, 0x82 * _0x5bf25f, 0xca * _0x5bf25f, 0x71 * _0x5bf25f, 0xd6 * _0x5bf25f), _0x1fe6e3['bezierCurveTo'](0x55 * _0x5bf25f, 0xe4 * _0x5bf25f, 0x38 * _0x5bf25f, 0xdb * _0x5bf25f, 0x30 * _0x5bf25f, 0xad * _0x5bf25f), _0x1fe6e3['bezierCurveTo'](0x28 * _0x5bf25f, 0x94 * _0x5bf25f, 0x2b * _0x5bf25f, 0x91 * _0x5bf25f, 0x27 * _0x5bf25f, 0x8c * _0x5bf25f), _0x1fe6e3['closePath'](), fill_path(_0x1fe6e3, _0x3aa779[0x0]), _0x1fe6e3['beginPath'](), _0x1fe6e3['lineCap'] = 'round', _0x1fe6e3['lineJoin'] = 'round', _0x1fe6e3['moveTo'](0x5a * _0x5bf25f, 0x5f * _0x5bf25f), _0x1fe6e3['bezierCurveTo'](0x63 * _0x5bf25f, 0x52 * _0x5bf25f, 0x62 * _0x5bf25f, 0x3a * _0x5bf25f, 0x63 * _0x5bf25f, 0x28 * _0x5bf25f), _0x1fe6e3['bezierCurveTo'](0x5a * _0x5bf25f, 0x26 * _0x5bf25f, 0x59 * _0x5bf25f, 0x22 * _0x5bf25f, 0x5c * _0x5bf25f, 0x11 * _0x5bf25f), _0x1fe6e3['bezierCurveTo'](0x5c * _0x5bf25f, 0x5 * _0x5bf25f, 0x53 * _0x5bf25f, 0x10 * _0x5bf25f, 0x4e * _0x5bf25f, 0x1d * _0x5bf25f), _0x1fe6e3['bezierCurveTo'](0x48 * _0x5bf25f, 0x3b * _0x5bf25f, 0x57 * _0x5bf25f, 0x51 * _0x5bf25f, 0x59 * _0x5bf25f, 0x57 * _0x5bf25f), _0x1fe6e3['closePath'](), fill_path(_0x1fe6e3, _0x3aa779[0x0]), _0x1fe6e3['beginPath'](), _0x1fe6e3['lineCap'] = 'round', _0x1fe6e3['lineJoin'] = 'round', _0x1fe6e3['moveTo'](0x5a * _0x5bf25f, 0x56 * _0x5bf25f), _0x1fe6e3['bezierCurveTo'](0x5f * _0x5bf25f, 0x4a * _0x5bf25f, 0x5f * _0x5bf25f, 0x3e * _0x5bf25f, 0x5f * _0x5bf25f, 0x2b * _0x5bf25f), _0x1fe6e3['bezierCurveTo'](0x54 * _0x5bf25f, 0x25 * _0x5bf25f, 0x56 * _0x5bf25f, 0x22 * _0x5bf25f, 0x59 * _0x5bf25f, 0x10 * _0x5bf25f), _0x1fe6e3['bezierCurveTo'](0x4b * _0x5bf25f, 0x1d * _0x5bf25f, 0x50 * _0x5bf25f, 0x3a * _0x5bf25f, 0x5a * _0x5bf25f, 0x55 * _0x5bf25f), _0x1fe6e3['closePath'](), fill_path(_0x1fe6e3, _0x3aa779[0x0]), _0x1fe6e3['beginPath'](), _0x1fe6e3['lineCap'] = 'round', _0x1fe6e3['lineJoin'] = 'round', _0x1fe6e3['moveTo'](0x5c * _0x5bf25f, 0x75 * _0x5bf25f), _0x1fe6e3['bezierCurveTo'](0x62 * _0x5bf25f, 0x57 * _0x5bf25f, 0x5d * _0x5bf25f, 0x4e * _0x5bf25f, 0x55 * _0x5bf25f, 0x4c * _0x5bf25f), _0x1fe6e3['bezierCurveTo'](85.5 * _0x5bf25f, 79.5 * _0x5bf25f, 85.5 * _0x5bf25f, 79.5 * _0x5bf25f, 0x56 * _0x5bf25f, 0x53 * _0x5bf25f), _0x1fe6e3['bezierCurveTo'](0x54 * _0x5bf25f, 85.5 * _0x5bf25f, 0x54 * _0x5bf25f, 85.5 * _0x5bf25f, 0x52 * _0x5bf25f, 0x58 * _0x5bf25f), _0x1fe6e3['bezierCurveTo'](0x5a * _0x5bf25f, 0x5d * _0x5bf25f, 0x59 * _0x5bf25f, 0x64 * _0x5bf25f, 0x5c * _0x5bf25f, 0x75 * _0x5bf25f), _0x1fe6e3['closePath'](), fill_path(_0x1fe6e3, _0x3aa779[0x0]), _0x1fe6e3['beginPath'](), _0x1fe6e3['lineCap'] = 'round', _0x1fe6e3['lineJoin'] = 'round', _0x1fe6e3['moveTo'](0x5c * _0x5bf25f, 0xaf * _0x5bf25f), _0x1fe6e3['bezierCurveTo'](0x5f * _0x5bf25f, 0x87 * _0x5bf25f, 0x62 * _0x5bf25f, 0x7d * _0x5bf25f, 0x6d * _0x5bf25f, 0x79 * _0x5bf25f), _0x1fe6e3['bezierCurveTo'](0x6a * _0x5bf25f, 0x72 * _0x5bf25f, 0x68 * _0x5bf25f, 0x72 * _0x5bf25f, 0x66 * _0x5bf25f, 0x71 * _0x5bf25f), _0x1fe6e3['bezierCurveTo'](0x67 * _0x5bf25f, 0x6a * _0x5bf25f, 0x68 * _0x5bf25f, 0x67 * _0x5bf25f, 0x6b * _0x5bf25f, 0x60 * _0x5bf25f), _0x1fe6e3['bezierCurveTo'](0x4a * _0x5bf25f, 0x6c * _0x5bf25f, 0x56 * _0x5bf25f, 0x9d * _0x5bf25f, 0x5c * _0x5bf25f, 0xae * _0x5bf25f), _0x1fe6e3['closePath'](), fill_path(_0x1fe6e3, _0x3aa779[0x0]), _0x1c9d4c;
}

function create_fish2(_0x291ae8, _0x4be371, _0x3ff560, _0x2e9d0e) {
    var _0x10d8ae = document['createElement']('canvas'),
        _0x34ecd1 = _0x10d8ae['getContext']('2d');
    return _0x10d8ae['width'] = 0xb9 * _0x291ae8, _0x10d8ae['height'] = 0xf0 * _0x291ae8, _0x34ecd1['beginPath'](), _0x34ecd1['lineCap'] = 'round', _0x34ecd1['lineJoin'] = 'round', _0x34ecd1['moveTo'](0x3a * _0x291ae8, 0xcd * _0x291ae8), _0x34ecd1['bezierCurveTo'](0x4a * _0x291ae8, 0xe3 * _0x291ae8, 0x53 * _0x291ae8, 0xe6 * _0x291ae8, 0x5c * _0x291ae8, 0xe6 * _0x291ae8), _0x34ecd1['bezierCurveTo'](0x65 * _0x291ae8, 0xe8 * _0x291ae8, 0x77 * _0x291ae8, 0xdb * _0x291ae8, 0x7a * _0x291ae8, 0xcd * _0x291ae8), _0x34ecd1['closePath'](), fill_path(_0x34ecd1, _0x3ff560[0x1], _0x3ff560[0x2], 0x4 * _0x291ae8), _0x34ecd1['beginPath'](), _0x34ecd1['lineCap'] = 'round', _0x34ecd1['lineJoin'] = 'round', _0x34ecd1['moveTo'](0x2e * _0x291ae8, 0x97 * _0x291ae8), _0x34ecd1['bezierCurveTo'](0x22 * _0x291ae8, 0x7e * _0x291ae8, 0x15 * _0x291ae8, 0x82 * _0x291ae8, 0xa * _0x291ae8, 0x8b * _0x291ae8), _0x34ecd1['bezierCurveTo'](0x1b * _0x291ae8, 0xa8 * _0x291ae8, 0x30 * _0x291ae8, 0xb4 * _0x291ae8, 0x35 * _0x291ae8, 0xb8 * _0x291ae8), _0x34ecd1['closePath'](), fill_path(_0x34ecd1, _0x3ff560[0x3], _0x3ff560[0x2], 0x4 * _0x291ae8), _0x34ecd1['beginPath'](), _0x34ecd1['lineCap'] = 'round', _0x34ecd1['lineJoin'] = 'round', _0x34ecd1['moveTo'](0x7a * _0x291ae8, 0xa5 * _0x291ae8), _0x34ecd1['bezierCurveTo'](0x8f * _0x291ae8, 0x8c * _0x291ae8, 0x9a * _0x291ae8, 0x7b * _0x291ae8, 0xac * _0x291ae8, 0x8b * _0x291ae8), _0x34ecd1['bezierCurveTo'](0xa9 * _0x291ae8, 0x95 * _0x291ae8, 0x93 * _0x291ae8, 0xad * _0x291ae8, 0x7e * _0x291ae8, 0xc0 * _0x291ae8), _0x34ecd1['closePath'](), fill_path(_0x34ecd1, _0x3ff560[0x3], _0x3ff560[0x2], 0x4 * _0x291ae8), _0x34ecd1['beginPath'](), _0x34ecd1['lineCap'] = 'round', _0x34ecd1['lineJoin'] = 'round', _0x34ecd1['moveTo'](0x2f * _0x291ae8, 0x81 * _0x291ae8), _0x34ecd1['bezierCurveTo'](0x37 * _0x291ae8, 0x5a * _0x291ae8, 0x47 * _0x291ae8, 0x42 * _0x291ae8, 0x5d * _0x291ae8, 0x45 * _0x291ae8), _0x34ecd1['bezierCurveTo'](0x74 * _0x291ae8, 0x46 * _0x291ae8, 0x7a * _0x291ae8, 0x58 * _0x291ae8, 0x88 * _0x291ae8, 0x7f * _0x291ae8), _0x34ecd1['bezierCurveTo'](0x8f * _0x291ae8, 0x89 * _0x291ae8, 0x90 * _0x291ae8, 0x89 * _0x291ae8, 0x90 * _0x291ae8, 0x8e * _0x291ae8), _0x34ecd1['bezierCurveTo'](0x8a * _0x291ae8, 0xc7 * _0x291ae8, 0x80 * _0x291ae8, 0xce * _0x291ae8, 0x6c * _0x291ae8, 0xdb * _0x291ae8), _0x34ecd1['bezierCurveTo'](0x54 * _0x291ae8, 0xe4 * _0x291ae8, 0x41 * _0x291ae8, 0xe0 * _0x291ae8, 0x32 * _0x291ae8, 0xbf * _0x291ae8), _0x34ecd1['bezierCurveTo'](0x29 * _0x291ae8, 0xa1 * _0x291ae8, 0x29 * _0x291ae8, 0x9d * _0x291ae8, 0x27 * _0x291ae8, 0x90 * _0x291ae8), _0x34ecd1['bezierCurveTo'](0x28 * _0x291ae8, 0x8c * _0x291ae8, 0x2a * _0x291ae8, 0x89 * _0x291ae8, 0x2f * _0x291ae8, 0x81 * _0x291ae8), _0x34ecd1['closePath'](), fill_path(_0x34ecd1, _0x3ff560[0x1], _0x3ff560[0x2], 0x4 * _0x291ae8), _0x34ecd1['beginPath'](), _0x34ecd1['lineCap'] = 'round', _0x34ecd1['lineJoin'] = 'round', _0x34ecd1['moveTo'](0x2f * _0x291ae8, 0x85 * _0x291ae8), _0x34ecd1['bezierCurveTo'](0x41 * _0x291ae8, 0x8f * _0x291ae8, 0x4a * _0x291ae8, 0xa2 * _0x291ae8, 0x46 * _0x291ae8, 0xba * _0x291ae8), _0x34ecd1['bezierCurveTo'](0x47 * _0x291ae8, 188.5 * _0x291ae8, 0x47 * _0x291ae8, 188.5 * _0x291ae8, 0x48 * _0x291ae8, 0xbf * _0x291ae8), _0x34ecd1['bezierCurveTo'](0x51 * _0x291ae8, 185.5 * _0x291ae8, 0x51 * _0x291ae8, 185.5 * _0x291ae8, 0x5a * _0x291ae8, 0xb4 * _0x291ae8), _0x34ecd1['bezierCurveTo'](0x63 * _0x291ae8, 0xb9 * _0x291ae8, 0x63 * _0x291ae8, 0xb9 * _0x291ae8, 0x6c * _0x291ae8, 0xbe * _0x291ae8), _0x34ecd1['bezierCurveTo'](110.5 * _0x291ae8, 184.5 * _0x291ae8, 110.5 * _0x291ae8, 184.5 * _0x291ae8, 0x71 * _0x291ae8, 0xb3 * _0x291ae8), _0x34ecd1['bezierCurveTo'](0x6e * _0x291ae8, 0x9c * _0x291ae8, 0x79 * _0x291ae8, 0x9c * _0x291ae8, 0x8e * _0x291ae8, 0x8d * _0x291ae8), _0x34ecd1['bezierCurveTo'](137.5 * _0x291ae8, 0x85 * _0x291ae8, 137.5 * _0x291ae8, 0x85 * _0x291ae8, 0x85 * _0x291ae8, 0x7d * _0x291ae8), _0x34ecd1['bezierCurveTo'](0x74 * _0x291ae8, 0x4e * _0x291ae8, 0x70 * _0x291ae8, 0x46 * _0x291ae8, 0x5b * _0x291ae8, 0x47 * _0x291ae8), _0x34ecd1['bezierCurveTo'](0x3e * _0x291ae8, 0x45 * _0x291ae8, 0x3b * _0x291ae8, 0x6b * _0x291ae8, 0x30 * _0x291ae8, 0x84 * _0x291ae8), _0x34ecd1['closePath'](), fill_path(_0x34ecd1, _0x3ff560[0x4]), _0x34ecd1['beginPath'](), _0x34ecd1['lineCap'] = 'round', _0x34ecd1['lineJoin'] = 'round', _0x34ecd1['moveTo'](0x5d * _0x291ae8, 0x56 * _0x291ae8), _0x34ecd1['bezierCurveTo'](0x65 * _0x291ae8, 0x4f * _0x291ae8, 0x63 * _0x291ae8, 0x38 * _0x291ae8, 0x64 * _0x291ae8, 0x25 * _0x291ae8), _0x34ecd1['bezierCurveTo'](0x5a * _0x291ae8, 0x22 * _0x291ae8, 0x5a * _0x291ae8, 0x1b * _0x291ae8, 0x5d * _0x291ae8, 0xd * _0x291ae8), _0x34ecd1['bezierCurveTo'](0x60 * _0x291ae8, 0x0 * _0x291ae8, 0x55 * _0x291ae8, 0xd * _0x291ae8, 0x52 * _0x291ae8, 0x1a * _0x291ae8), _0x34ecd1['bezierCurveTo'](0x4e * _0x291ae8, 0x2b * _0x291ae8, 0x59 * _0x291ae8, 0x4a * _0x291ae8, 0x5d * _0x291ae8, 0x55 * _0x291ae8), _0x34ecd1['closePath'](), fill_path(_0x34ecd1, _0x3ff560[0x3], _0x3ff560[0x2], 0x4 * _0x291ae8), _0x34ecd1['beginPath'](), _0x34ecd1['lineCap'] = 'round', _0x34ecd1['lineJoin'] = 'round', _0x34ecd1['moveTo'](0x5e * _0x291ae8, 0x56 * _0x291ae8), _0x34ecd1['bezierCurveTo'](0x78 * _0x291ae8, 0x58 * _0x291ae8, 0x84 * _0x291ae8, 0x6d * _0x291ae8, 0x7a * _0x291ae8, 0x80 * _0x291ae8), _0x34ecd1['bezierCurveTo'](0x76 * _0x291ae8, 0x8b * _0x291ae8, 0x65 * _0x291ae8, 0x92 * _0x291ae8, 0x5a * _0x291ae8, 0x8f * _0x291ae8), _0x34ecd1['bezierCurveTo'](0x39 * _0x291ae8, 0x8d * _0x291ae8, 0x31 * _0x291ae8, 0x6d * _0x291ae8, 0x44 * _0x291ae8, 0x5e * _0x291ae8), _0x34ecd1['bezierCurveTo'](0x4e * _0x291ae8, 0x55 * _0x291ae8, 0x5a * _0x291ae8, 0x56 * _0x291ae8, 0x5f * _0x291ae8, 0x56 * _0x291ae8), _0x34ecd1['closePath'](), fill_path(_0x34ecd1, _0x3ff560[0x1]), _0x34ecd1['beginPath'](), _0x34ecd1['lineCap'] = 'round', _0x34ecd1['lineJoin'] = 'round', _0x34ecd1['moveTo'](0x5b * _0x291ae8, 0xb2 * _0x291ae8), _0x34ecd1['bezierCurveTo'](0x4e * _0x291ae8, 0x88 * _0x291ae8, 0x51 * _0x291ae8, 0x58 * _0x291ae8, 0x5d * _0x291ae8, 0x57 * _0x291ae8), _0x34ecd1['bezierCurveTo'](0x65 * _0x291ae8, 0x54 * _0x291ae8, 0x5e * _0x291ae8, 0x61 * _0x291ae8, 0x5e * _0x291ae8, 0x6b * _0x291ae8), _0x34ecd1['bezierCurveTo'](0x5b * _0x291ae8, 0x70 * _0x291ae8, 0x5c * _0x291ae8, 0x75 * _0x291ae8, 0x5e * _0x291ae8, 0x79 * _0x291ae8), _0x34ecd1['bezierCurveTo'](0x62 * _0x291ae8, 0x7e * _0x291ae8, 0x66 * _0x291ae8, 0x80 * _0x291ae8, 0x61 * _0x291ae8, 0x87 * _0x291ae8), _0x34ecd1['bezierCurveTo'](0x5c * _0x291ae8, 0x8c * _0x291ae8, 0x5d * _0x291ae8, 0xa0 * _0x291ae8, 0x5b * _0x291ae8, 0xb3 * _0x291ae8), _0x34ecd1['closePath'](), fill_path(_0x34ecd1, _0x3ff560[0x5], _0x3ff560[0x1], 0x4 * _0x291ae8), _0x34ecd1['beginPath'](), _0x34ecd1['lineCap'] = 'round', _0x34ecd1['lineJoin'] = 'round', _0x34ecd1['moveTo'](0x14 * _0x291ae8, 0x97 * _0x291ae8), _0x34ecd1['bezierCurveTo'](0x16 * _0x291ae8, 0x93 * _0x291ae8, 0x16 * _0x291ae8, 0x93 * _0x291ae8, 0x18 * _0x291ae8, 0x8f * _0x291ae8), _0x34ecd1['bezierCurveTo'](0x1b * _0x291ae8, 144.5 * _0x291ae8, 0x1b * _0x291ae8, 144.5 * _0x291ae8, 0x1e * _0x291ae8, 0x92 * _0x291ae8), _0x34ecd1['bezierCurveTo'](0x1f * _0x291ae8, 0x8f * _0x291ae8, 0x1f * _0x291ae8, 0x8f * _0x291ae8, 0x20 * _0x291ae8, 0x8c * _0x291ae8), _0x34ecd1['bezierCurveTo'](0x23 * _0x291ae8, 140.5 * _0x291ae8, 0x23 * _0x291ae8, 140.5 * _0x291ae8, 0x26 * _0x291ae8, 0x8d * _0x291ae8), _0x34ecd1['bezierCurveTo'](0x1f * _0x291ae8, 0x84 * _0x291ae8, 0x1d * _0x291ae8, 0x83 * _0x291ae8, 0x16 * _0x291ae8, 0x84 * _0x291ae8), _0x34ecd1['bezierCurveTo'](0xe * _0x291ae8, 0x87 * _0x291ae8, 0xd * _0x291ae8, 0x87 * _0x291ae8, 0xb * _0x291ae8, 0x8a * _0x291ae8), _0x34ecd1['bezierCurveTo'](15.5 * _0x291ae8, 144.5 * _0x291ae8, 15.5 * _0x291ae8, 144.5 * _0x291ae8, 0x14 * _0x291ae8, 0x97 * _0x291ae8), _0x34ecd1['closePath'](), fill_path(_0x34ecd1, _0x3ff560[0x6]), circle(_0x34ecd1, 0x3d * _0x291ae8, 0xb7 * _0x291ae8, 16.15549442140351 * _0x291ae8), fill_path(_0x34ecd1, _0x3ff560[0x7]), circle(_0x34ecd1, 0x79 * _0x291ae8, 0xb8 * _0x291ae8, 14.866068747318506 * _0x291ae8), fill_path(_0x34ecd1, _0x3ff560[0x7]), circle(_0x34ecd1, 0x39 * _0x291ae8, 0xb2 * _0x291ae8, 5.656854249492381 * _0x291ae8), fill_path(_0x34ecd1, _0x3ff560[0x2]), circle(_0x34ecd1, 0x74 * _0x291ae8, 0xb1 * _0x291ae8, 5.830951894845301 * _0x291ae8), fill_path(_0x34ecd1, _0x3ff560[0x2]), _0x34ecd1['beginPath'](), _0x34ecd1['lineCap'] = 'round', _0x34ecd1['lineJoin'] = 'round', _0x34ecd1['moveTo'](0xa2 * _0x291ae8, 0x98 * _0x291ae8), _0x34ecd1['bezierCurveTo'](161.5 * _0x291ae8, 0x94 * _0x291ae8, 161.5 * _0x291ae8, 0x94 * _0x291ae8, 0xa1 * _0x291ae8, 0x90 * _0x291ae8), _0x34ecd1['bezierCurveTo'](157.5 * _0x291ae8, 0x91 * _0x291ae8, 157.5 * _0x291ae8, 0x91 * _0x291ae8, 0x9a * _0x291ae8, 0x92 * _0x291ae8), _0x34ecd1['bezierCurveTo'](153.5 * _0x291ae8, 0x8f * _0x291ae8, 153.5 * _0x291ae8, 0x8f * _0x291ae8, 0x99 * _0x291ae8, 0x8c * _0x291ae8), _0x34ecd1['bezierCurveTo'](0x95 * _0x291ae8, 140.5 * _0x291ae8, 0x95 * _0x291ae8, 140.5 * _0x291ae8, 0x91 * _0x291ae8, 0x8d * _0x291ae8), _0x34ecd1['bezierCurveTo'](0x96 * _0x291ae8, 0x84 * _0x291ae8, 0xa1 * _0x291ae8, 0x83 * _0x291ae8, 0xaa * _0x291ae8, 0x8a * _0x291ae8), _0x34ecd1['bezierCurveTo'](0xad * _0x291ae8, 0x8d * _0x291ae8, 0xa5 * _0x291ae8, 0x96 * _0x291ae8, 0xa2 * _0x291ae8, 0x96 * _0x291ae8), _0x34ecd1['closePath'](), fill_path(_0x34ecd1, _0x3ff560[0x6]), _0x34ecd1['beginPath'](), _0x34ecd1['lineCap'] = 'round', _0x34ecd1['lineJoin'] = 'round', _0x34ecd1['moveTo'](0x6a * _0x291ae8, 0x6e * _0x291ae8), _0x34ecd1['bezierCurveTo'](0x68 * _0x291ae8, 0x62 * _0x291ae8, 0x70 * _0x291ae8, 0x5b * _0x291ae8, 0x76 * _0x291ae8, 0x65 * _0x291ae8), _0x34ecd1['bezierCurveTo'](0x7a * _0x291ae8, 0x73 * _0x291ae8, 0x79 * _0x291ae8, 0x77 * _0x291ae8, 0x75 * _0x291ae8, 0x7c * _0x291ae8), _0x34ecd1['bezierCurveTo'](0x70 * _0x291ae8, 0x81 * _0x291ae8, 0x6b * _0x291ae8, 0x7c * _0x291ae8, 0x6a * _0x291ae8, 0x70 * _0x291ae8), _0x34ecd1['closePath'](), fill_path(_0x34ecd1, _0x3ff560[0x1]), _0x34ecd1['beginPath'](), _0x34ecd1['lineCap'] = 'round', _0x34ecd1['lineJoin'] = 'round', _0x34ecd1['moveTo'](0x40 * _0x291ae8, 0x6a * _0x291ae8), _0x34ecd1['bezierCurveTo'](0x42 * _0x291ae8, 0x61 * _0x291ae8, 0x48 * _0x291ae8, 0x59 * _0x291ae8, 0x4c * _0x291ae8, 0x62 * _0x291ae8), _0x34ecd1['bezierCurveTo'](0x4e * _0x291ae8, 0x6a * _0x291ae8, 0x4f * _0x291ae8, 0x76 * _0x291ae8, 0x48 * _0x291ae8, 0x7e * _0x291ae8), _0x34ecd1['bezierCurveTo'](0x41 * _0x291ae8, 0x82 * _0x291ae8, 0x3f * _0x291ae8, 0x75 * _0x291ae8, 0x40 * _0x291ae8, 0x6c * _0x291ae8), _0x34ecd1['closePath'](), fill_path(_0x34ecd1, _0x3ff560[0x1]), _0x10d8ae;
}

function create_food_plant(_0x52febb) {
    var _0x42b5ad = document['createElement']('canvas'),
        _0x2ae148 = _0x42b5ad['getContext']('2d'),
        _0x4d180f = _0x52febb * 0xc8,
        _0x18935c = _0x52febb * 0xc8;
    _0x42b5ad['width'] = _0x4d180f, _0x42b5ad['height'] = _0x18935c;
    var _0xc4860c = create_plant(0.35, ![], ['#0e3022', '#0b8052', '#077b49']);
    _0x2ae148['drawImage'](_0xc4860c, 0xa, 0xa);
    var _0xc4860c = create_fruit(0.9, ![], ['#54318e', '#725ba3']);
    _0x2ae148['drawImage'](_0xc4860c, 0x15, 0x14);
    var _0xc4860c = create_fruit(0.9, ![], ['#54318e', '#725ba3']);
    _0x2ae148['drawImage'](_0xc4860c, 0x26, 0x1c);
    var _0xc4860c = create_fruit(0.9, ![], ['#54318e', '#725ba3']);
    _0x2ae148['drawImage'](_0xc4860c, 0xf, 0x25);
    var _0xc4860c = create_fruit(0.9, ![], ['#54318e', '#725ba3']);
    return _0x2ae148['drawImage'](_0xc4860c, 0x20, 0x2d), _0x42b5ad;
}

function create_gear(_0x3294dc, _0x20750a) {
    var _0x2d8bc3 = document['createElement']('canvas'),
        _0x16e4e2 = _0x2d8bc3['getContext']('2d'),
        _0x33f5a7 = _0x3294dc * 0x64,
        _0x44aa74 = _0x3294dc * 0x64,
        _0x2278b8 = _0x33f5a7 / 0x2,
        _0x59fa1f = _0x44aa74 / 0x2;
    _0x2d8bc3['width'] = _0x33f5a7, _0x2d8bc3['height'] = _0x44aa74;
    var _0x3bdcb6 = _0x3294dc * 0x5,
        _0x9f61fc = _0x3294dc * 0x1c,
        _0x5f09bd = _0x3bdcb6 / 0x2,
        _0x3c00fc = _0x9f61fc / 0x2;
    _0x16e4e2['translate'](_0x2278b8, _0x59fa1f);
    for (var _0xc54ba9 = 0x0; _0xc54ba9 < 0x4; _0xc54ba9++) {
        round_rect(_0x16e4e2, -_0x5f09bd, -_0x3c00fc, _0x3bdcb6, _0x9f61fc, _0x3294dc * 0x2), _0x16e4e2['rotate'](Math['PI'] / 0x4), fill_path(_0x16e4e2, _0x20750a);
    }
    return _0x16e4e2['arc'](0x0, 0x0, 0xa * _0x3294dc, 0x0, Math['PI'] * 0x2), fill_path(_0x16e4e2, _0x20750a), _0x16e4e2['globalCompositeOperation'] = 'destination-out', circle(_0x16e4e2, 0x0, 0x0, _0x3294dc * 0x4), _0x16e4e2['fill'](), _0x2d8bc3;
}

function create_gear_option(_0xaa6e85, _0x12268e, _0x17b446) {
    var _0x1648c6 = document['createElement']('canvas'),
        _0x2a5e26 = _0x1648c6['getContext']('2d'),
        _0xbfdcc7 = _0xaa6e85 * 0x20,
        _0xc2fe23 = _0xaa6e85 * 0x20,
        _0x42815c = _0xbfdcc7 / 0x2,
        _0x41eed8 = _0xc2fe23 / 0x2;
    _0x1648c6['width'] = _0xbfdcc7, _0x1648c6['height'] = _0xc2fe23;
    var _0x15960e = _0xaa6e85 * 0x5,
        _0xbbfe48 = _0xaa6e85 * 0x1c,
        _0x45ff20 = _0x15960e / 0x2,
        _0x5ac224 = _0xbbfe48 / 0x2;
    _0x2a5e26['translate'](0x0 * _0xaa6e85, 0x0 * _0xaa6e85), _0x2a5e26['translate'](_0x42815c, _0x41eed8);
    if (_0x17b446 == 0x1) {
        circle(_0x2a5e26, 0x0, 0x0, 0xa * _0xaa6e85, 0x0), fill_path(_0x2a5e26, _0x12268e[0x2], _0x12268e[0x2], 0x3 * _0xaa6e85);
        for (var _0x16505a = 0x0; _0x16505a < 0x4; _0x16505a++) {
            round_rect(_0x2a5e26, -_0x45ff20, -_0x5ac224, _0x15960e, _0xbbfe48, _0xaa6e85 * 0x2), _0x2a5e26['rotate'](Math['PI'] / 0x4), fill_path(_0x2a5e26, _0x12268e[0x2], _0x12268e[0x2], 0x4 * _0xaa6e85);
        }
    }
    circle(_0x2a5e26, 0x0, 0x0, 0xa * _0xaa6e85, 0x0), fill_path(_0x2a5e26, _0x12268e[0x0], _0x12268e[0x1], 1.5 * _0xaa6e85);
    for (var _0x16505a = 0x0; _0x16505a < 0x4; _0x16505a++) {
        round_rect(_0x2a5e26, -_0x45ff20, -_0x5ac224, _0x15960e, _0xbbfe48, _0xaa6e85 * 0x2), _0x2a5e26['rotate'](Math['PI'] / 0x4), fill_path(_0x2a5e26, _0x12268e[0x0], _0x12268e[0x1], 1.5 * _0xaa6e85);
    }
    return circle(_0x2a5e26, 0x0, 0x0, 0xa * _0xaa6e85, 0x0), fill_path(_0x2a5e26, _0x12268e[0x0]), circle(_0x2a5e26, 0x0, 0x0, 0x4 * _0xaa6e85, 0x0), fill_path(_0x2a5e26, _0x12268e[0x2], _0x12268e[0x1], 1.5 * _0xaa6e85), _0x2a5e26['globalCompositeOperation'] = 'destination-out', circle(_0x2a5e26, 0x0, 0x0, 0x4 * _0xaa6e85, 0x0), fill_path(_0x2a5e26, _0x12268e[0x0], _0x12268e[0x1], 0x2 * _0xaa6e85), _0x2a5e26['globalCompositeOperation'] = 'source-over', circle(_0x2a5e26, 0x0, 0x0, 0x4 * _0xaa6e85, 0x0), fill_path(_0x2a5e26, undefined, _0x12268e[0x1], 0x2 * _0xaa6e85), _0x1648c6;
}

function create_minimap_object(_0x42f5a3, _0xa16032, _0x344227, _0x14dc18, _0x149822, _0x2a5059, _0x57514e) {
    if (_0x57514e === undefined) _0x57514e = 0x0;
    for (var _0x340acf = _0x2a5059 == -0x1 ? 0x0 : _0x2a5059; _0x340acf >= _0x57514e; _0x340acf--) {
        for (var _0x38f6c0 = 0x0; _0x38f6c0 < 0xc8; _0x38f6c0++) {
            for (var _0x4c52a5 = 0x0; _0x4c52a5 < 0xc8; _0x4c52a5++) {
                var _0xd004ec = MAP['tiles'][_0x4c52a5][_0x38f6c0];
                if (!_0xd004ec || !_0xd004ec[_0x14dc18]) continue;
                if (_0x2a5059 == -0x1) var _0x26a77e = _0xd004ec[_0x14dc18];
                else var _0x26a77e = _0xd004ec[_0x14dc18][_0x340acf];
                for (var _0x364b0a = 0x0; _0x26a77e && _0x364b0a < _0x26a77e['length']; _0x364b0a++) {
                    var _0x50a86b = _0x26a77e[_0x364b0a];
                    _0x42f5a3['fillStyle'] = _0x344227, circle(_0x42f5a3, _0x50a86b['x'] * _0xa16032 * 0.0095, _0x50a86b['y'] * _0xa16032 * 0.0095, _0x149822 * _0xa16032), _0x42f5a3['fill']();
                }
            }
        }
    }
}

function create_minimap(_0x1e0194, _0x38f9aa) {
    var _0x23ef82 = document['createElement']('canvas'),
        _0x11f8d1 = _0x23ef82['getContext']('2d');
    return _0x23ef82['width'] = 0xc8 * _0x1e0194, _0x23ef82['height'] = 0xc8 * _0x1e0194, _0x11f8d1['translate'](0x9 * _0x1e0194, 0xc * _0x1e0194), _0x11f8d1['fillStyle'] = _0x38f9aa[0x0], _0x11f8d1['fillRect'](-0x2, -0x3, _0x23ef82['width'], _0x23ef82['height']), _0x11f8d1['fillStyle'] = _0x38f9aa[0x9], _0x11f8d1['fillRect'](0x0, 0x0, _0x23ef82['width'], _0x23ef82['height']), _0x11f8d1['fillStyle'] = _0x38f9aa[0x11], _0x11f8d1['fillRect'](0x0, 0x0, _0x23ef82['width'], _0x23ef82['height'] / 2.1), _0x11f8d1['fillStyle'] = _0x38f9aa[0x1a], _0x11f8d1['fillRect'](_0x23ef82['width'] / 1.77, _0x23ef82['height'] / 2.1, _0x23ef82['width'] / 2.1, _0x23ef82['height'] / 2.1), _0x11f8d1['fillStyle'] = _0x38f9aa[0x1c], _0x11f8d1['fillRect'](_0x23ef82['width'] / 1.77, _0x23ef82['height'] / 2.1, 0x5, _0x23ef82['height'] / 2.1), create_minimap_object(_0x11f8d1, _0x1e0194, _0x38f9aa[0x11], 'so', 0x3, 0x6, 0x0), create_minimap_object(_0x11f8d1, _0x1e0194, _0x38f9aa[0x1c], 'isl', 0x6, 0x2, 0x2), create_minimap_object(_0x11f8d1, _0x1e0194, _0x38f9aa[0x1c], 'isl', 0x6, 0x1, 0x1), create_minimap_object(_0x11f8d1, _0x1e0194, _0x38f9aa[0x1c], 'isl', 0x6, 0x0, 0x0), create_minimap_object(_0x11f8d1, _0x1e0194, _0x38f9aa[0x5], 'plm', 0x2, 0x2, 0x2), create_minimap_object(_0x11f8d1, _0x1e0194, _0x38f9aa[0x5], 'plm', 0x2, 0x1, 0x1), create_minimap_object(_0x11f8d1, _0x1e0194, _0x38f9aa[0x5], 'plm', 0x2, 0x0, 0x0), create_minimap_object(_0x11f8d1, _0x1e0194, _0x38f9aa[0x5], 't', 0x2, 0x5, 0x4), create_minimap_object(_0x11f8d1, _0x1e0194, _0x38f9aa[0x6], 't', 0x3, 0x3, 0x2), create_minimap_object(_0x11f8d1, _0x1e0194, _0x38f9aa[0x7], 't', 0x4, 0x1, 0x0), create_minimap_object(_0x11f8d1, _0x1e0194, _0x38f9aa[0x8], 'b', 0x3, 0x3, 0x2), create_minimap_object(_0x11f8d1, _0x1e0194, _0x38f9aa[0x9], 'b', 0x4, 0x1, 0x0), create_minimap_object(_0x11f8d1, _0x1e0194, _0x38f9aa[0x2], 's', 0x2, 0x2, 0x2), create_minimap_object(_0x11f8d1, _0x1e0194, _0x38f9aa[0x3], 's', 0x3, 0x1, 0x1), create_minimap_object(_0x11f8d1, _0x1e0194, _0x38f9aa[0x4], 's', 0x4, 0x0, 0x0), create_minimap_object(_0x11f8d1, _0x1e0194, _0x38f9aa[0xa], 'g', 0x2, 0x2, 0x2), create_minimap_object(_0x11f8d1, _0x1e0194, _0x38f9aa[0xb], 'g', 0x3, 0x1, 0x1), create_minimap_object(_0x11f8d1, _0x1e0194, _0x38f9aa[0xc], 'g', 0x4, 0x0, 0x0), create_minimap_object(_0x11f8d1, _0x1e0194, _0x38f9aa[0x1], 'p', 0x4, -0x1), create_minimap_object(_0x11f8d1, _0x1e0194, _0x38f9aa[0x19], 'dg', 0x3, 0x6, 0x0), create_minimap_object(_0x11f8d1, _0x1e0194, _0x38f9aa[0x1b], 'cs', 0x2, 0x2, 0x2), create_minimap_object(_0x11f8d1, _0x1e0194, _0x38f9aa[0x1b], 'cs', 0x2, 0x1, 0x1), create_minimap_object(_0x11f8d1, _0x1e0194, _0x38f9aa[0x1b], 'cs', 0x2, 0x0, 0x0), create_minimap_object(_0x11f8d1, _0x1e0194, _0x38f9aa[0x13], 'f', 0x2, 0x2, 0x2), create_minimap_object(_0x11f8d1, _0x1e0194, _0x38f9aa[0x14], 'f', 0x3, 0x1, 0x1), create_minimap_object(_0x11f8d1, _0x1e0194, _0x38f9aa[0x15], 'f', 0x4, 0x0, 0x0), create_minimap_object(_0x11f8d1, _0x1e0194, _0x38f9aa[0x16], 'gw', 0x2, 0x2, 0x2), create_minimap_object(_0x11f8d1, _0x1e0194, _0x38f9aa[0x16], 'gw', 0x3, 0x1, 0x1), create_minimap_object(_0x11f8d1, _0x1e0194, _0x38f9aa[0x16], 'gw', 0x4, 0x0, 0x0), create_minimap_object(_0x11f8d1, _0x1e0194, _0x38f9aa[0x17], 'dw', 0x3, 0x1, 0x1), create_minimap_object(_0x11f8d1, _0x1e0194, _0x38f9aa[0x17], 'dw', 0x4, 0x0, 0x0), create_minimap_object(_0x11f8d1, _0x1e0194, _0x38f9aa[0x17], 'dw', 0x2, 0x2, 0x2), create_minimap_object(_0x11f8d1, _0x1e0194, _0x38f9aa[0x17], 'd', 0x3, 0x1, 0x1), create_minimap_object(_0x11f8d1, _0x1e0194, _0x38f9aa[0x17], 'd', 0x4, 0x0, 0x0), create_minimap_object(_0x11f8d1, _0x1e0194, _0x38f9aa[0x17], 'd', 0x2, 0x2, 0x2), create_minimap_object(_0x11f8d1, _0x1e0194, _0x38f9aa[0x18], 'a', 0x2, 0x2, 0x2), create_minimap_object(_0x11f8d1, _0x1e0194, _0x38f9aa[0x18], 'a', 0x3, 0x1, 0x1), create_minimap_object(_0x11f8d1, _0x1e0194, _0x38f9aa[0x18], 'a', 0x4, 0x0, 0x0), create_minimap_object(_0x11f8d1, _0x1e0194, _0x38f9aa[0x1e], 'l', 0x4, 0x2, 0x2), create_minimap_object(_0x11f8d1, _0x1e0194, _0x38f9aa[0x1e], 'l', 0x4, 0x1, 0x1), create_minimap_object(_0x11f8d1, _0x1e0194, _0x38f9aa[0x1e], 'l', 0x4, 0x0, 0x0), circle(_0x11f8d1, 0x0, 0x0, 0x0), _0x11f8d1['globalCompositeOperation'] = 'destination-out', _0x11f8d1['translate'](-0x9 * _0x1e0194, -0x4 * _0x1e0194), _0x11f8d1['rect'](0x5 * _0x1e0194, 0x0, _0x23ef82['width'] * _0x1e0194, _0x23ef82['height'] * _0x1e0194, 0xa * _0x1e0194), _0x11f8d1['lineWidth'] = 0x7 * _0x1e0194, _0x11f8d1['strokeStyle'] = _0x38f9aa[0x10], _0x11f8d1['stroke'](), _0x23ef82;
}

function create_workbench(_0x48e07d, _0x41bced, _0x4ed174) {
    var _0x2fddc3 = document['createElement']('canvas'),
        _0x59e98b = _0x2fddc3['getContext']('2d'),
        _0x2161d5 = _0x48e07d * 0x7d,
        _0x36b886 = _0x48e07d * 0x5f,
        _0x3741f8 = _0x2161d5 / 0x2,
        _0x5d5079 = _0x36b886 / 0x2,
        _0x3e9d40 = _0x48e07d * 0xa,
        _0x476496 = _0x48e07d * 0x8,
        _0xa6d2e8 = _0x48e07d * 0x70,
        _0x48b1a8 = _0x48e07d * 0x52,
        _0x5da32b = _0xa6d2e8 / 0x2,
        _0x717c78 = _0x48b1a8 / 0x2,
        _0x120bad = _0x48e07d * 0x4;
    _0x2fddc3['width'] = _0x2161d5, _0x2fddc3['height'] = _0x36b886, _0x59e98b['translate'](_0x3741f8 - 0x4 * _0x48e07d, _0x5d5079 + 0x4 * _0x48e07d), _0x59e98b['globalAlpha'] = _0x41bced ? 0.5 : 0x1, round_rect(_0x59e98b, -_0x5da32b, -_0x717c78, _0xa6d2e8, _0x48b1a8, _0x3e9d40), fill_path(_0x59e98b, _0x4ed174[0x0]), _0x59e98b['globalAlpha'] = 0x1, _0x59e98b['translate'](0x0, -_0x476496), round_rect(_0x59e98b, -_0x5da32b, -_0x717c78, _0xa6d2e8, _0x48b1a8, _0x3e9d40), fill_path(_0x59e98b, _0x4ed174[0x1], _0x4ed174[0x2], _0x120bad);
    var _0x2161d5 = 0x37 * _0x48e07d,
        _0x36b886 = 0x2d * _0x48e07d,
        _0x3e9d40 = 0x5;
    _0x59e98b['translate'](-0x28 * _0x48e07d, -0x1e * _0x48e07d), round_rect(_0x59e98b, 0x0, 0x0, _0x2161d5, _0x36b886, _0x3e9d40), fill_path(_0x59e98b, _0x4ed174[0x3]);
    var _0x5e5d2f = create_gear(0.7 * _0x48e07d, _0x4ed174[0x3]);
    _0x59e98b['drawImage'](_0x5e5d2f, 0x2d * _0x48e07d, -0x19 * _0x48e07d);
    var _0x5e5d2f = create_gear(0.7 * _0x48e07d, _0x4ed174[0x3]);
    _0x59e98b['drawImage'](_0x5e5d2f, 0x2d * _0x48e07d, 0xf * _0x48e07d);
    var _0x5e5d2f = create_gear(1.2 * _0x48e07d, _0x4ed174[0x3]);
    _0x59e98b['drawImage'](_0x5e5d2f, 0x1c * _0x48e07d, -0x1e * _0x48e07d);
    var _0x2161d5 = 0xf * _0x48e07d,
        _0x36b886 = 0x46 * _0x48e07d,
        _0x3e9d40 = 0x5 * _0x48e07d;
    _0x59e98b['translate'](0x4e * _0x48e07d, -0x5 * _0x48e07d), round_rect(_0x59e98b, 0x0, 0x0, _0x2161d5, _0x36b886, _0x3e9d40), fill_path(_0x59e98b, _0x4ed174[0x4]);
    var _0x2161d5 = 0x9 * _0x48e07d,
        _0x36b886 = 0x32 * _0x48e07d,
        _0x3e9d40 = 0x3 * _0x48e07d;
    return _0x59e98b['translate'](-0x14 * _0x48e07d, 0x14 * _0x48e07d), _0x59e98b['rotate'](Math['PI'] / 0x5), _0x59e98b['globalAlpha'] = 0.6, round_rect(_0x59e98b, 0x0, 0x0, _0x2161d5, _0x36b886, _0x3e9d40), fill_path(_0x59e98b, _0x4ed174[0x5]), _0x59e98b['translate'](-0x14 * _0x48e07d, 0x1d * _0x48e07d), _0x59e98b['rotate'](Math['PI'] / 0x5), _0x59e98b['globalAlpha'] = 0.6, _0x59e98b['beginPath'](), _0x59e98b['lineJoin'] = 'round', _0x59e98b['moveTo'](0x0, 0x0), _0x59e98b['lineTo'](0x0, 0x1e * _0x48e07d), _0x59e98b['lineTo'](0x1e * _0x48e07d, 0x1e * _0x48e07d), _0x59e98b['closePath'](), fill_path(_0x59e98b, null, _0x4ed174[0x5], 0x8 * _0x48e07d), _0x2fddc3;
}

function create_rabbit(_0x481e67, _0x4a4c93) {
    var _0x16c8d4 = document['createElement']('canvas'),
        _0x28f7dc = _0x16c8d4['getContext']('2d'),
        _0x363d08 = _0x481e67 * 0x55,
        _0x118fb2 = _0x481e67 * 0x73,
        _0x1a013c = _0x481e67 * 0x6,
        _0x15fadc = _0x481e67 * 0x4;
    _0x16c8d4['width'] = _0x363d08, _0x16c8d4['height'] = _0x118fb2, _0x28f7dc['translate'](-0x82 * _0x481e67, -0x3c * _0x481e67 + _0x1a013c), _0x28f7dc['globalAlpha'] = 0.5, _0x28f7dc['beginPath'](), _0x28f7dc['bezierCurveTo'](0xbe * _0x481e67, 0x57 * _0x481e67, 0xc9 * _0x481e67, 0x3b * _0x481e67, 0xd0 * _0x481e67, 0x40 * _0x481e67), _0x28f7dc['bezierCurveTo'](0xd5 * _0x481e67, 0x44 * _0x481e67, 0xcc * _0x481e67, 0x5d * _0x481e67, 0xc3 * _0x481e67, 0x6d * _0x481e67), _0x28f7dc['bezierCurveTo'](0xc3 * _0x481e67, 0x6d * _0x481e67, 0xca * _0x481e67, 0x7c * _0x481e67, 0xbf * _0x481e67, 0x8d * _0x481e67), _0x28f7dc['bezierCurveTo'](0xb6 * _0x481e67, 0x97 * _0x481e67, 0xa4 * _0x481e67, 0x9b * _0x481e67, 0x94 * _0x481e67, 0x90 * _0x481e67), _0x28f7dc['bezierCurveTo'](0x88 * _0x481e67, 0x87 * _0x481e67, 0x8a * _0x481e67, 0x6f * _0x481e67, 0x91 * _0x481e67, 0x68 * _0x481e67), _0x28f7dc['bezierCurveTo'](0x8c * _0x481e67, 0x5c * _0x481e67, 0x83 * _0x481e67, 0x43 * _0x481e67, 0x8a * _0x481e67, 0x3f * _0x481e67), _0x28f7dc['bezierCurveTo'](0x91 * _0x481e67, 0x3d * _0x481e67, 0x99 * _0x481e67, 0x52 * _0x481e67, 0x9b * _0x481e67, 0x60 * _0x481e67), _0x28f7dc['bezierCurveTo'](0xa7 * _0x481e67, 0x5b * _0x481e67, 0xb2 * _0x481e67, 0x5c * _0x481e67, 0xbb * _0x481e67, 0x62 * _0x481e67), _0x28f7dc['closePath'](), fill_path(_0x28f7dc, _0x4a4c93[0x0]), _0x28f7dc['translate'](0x0, -_0x1a013c), _0x28f7dc['globalAlpha'] = 0x1, _0x28f7dc['beginPath'](), _0x28f7dc['bezierCurveTo'](0xbe * _0x481e67, 0x57 * _0x481e67, 0xc9 * _0x481e67, 0x3b * _0x481e67, 0xd0 * _0x481e67, 0x40 * _0x481e67), _0x28f7dc['bezierCurveTo'](0xd5 * _0x481e67, 0x44 * _0x481e67, 0xcc * _0x481e67, 0x5d * _0x481e67, 0xc3 * _0x481e67, 0x6d * _0x481e67), _0x28f7dc['bezierCurveTo'](0xc3 * _0x481e67, 0x6d * _0x481e67, 0xca * _0x481e67, 0x7c * _0x481e67, 0xbf * _0x481e67, 0x8d * _0x481e67), _0x28f7dc['bezierCurveTo'](0xb6 * _0x481e67, 0x97 * _0x481e67, 0xa4 * _0x481e67, 0x9b * _0x481e67, 0x94 * _0x481e67, 0x90 * _0x481e67), _0x28f7dc['bezierCurveTo'](0x88 * _0x481e67, 0x87 * _0x481e67, 0x8a * _0x481e67, 0x6f * _0x481e67, 0x91 * _0x481e67, 0x68 * _0x481e67), _0x28f7dc['bezierCurveTo'](0x8c * _0x481e67, 0x5c * _0x481e67, 0x83 * _0x481e67, 0x43 * _0x481e67, 0x8a * _0x481e67, 0x3f * _0x481e67), _0x28f7dc['bezierCurveTo'](0x91 * _0x481e67, 0x3d * _0x481e67, 0x99 * _0x481e67, 0x52 * _0x481e67, 0x9b * _0x481e67, 0x60 * _0x481e67), _0x28f7dc['bezierCurveTo'](0xa7 * _0x481e67, 0x5b * _0x481e67, 0xb2 * _0x481e67, 0x5c * _0x481e67, 0xbb * _0x481e67, 0x62 * _0x481e67), _0x28f7dc['closePath'](), fill_path(_0x28f7dc, _0x4a4c93[0x1], _0x4a4c93[0x2], 0x4);
    var _0x3fdef5 = _0x481e67 * 0x9b,
        _0x374962 = _0x481e67 * 0x85,
        _0x1bd90a = _0x481e67 * 0xa,
        _0x72ffbd = _0x481e67 * 0x3,
        _0x162ea9 = _0x3fdef5 + _0x481e67 * -0x3,
        _0xd36185 = _0x374962 + _0x481e67 * -0x5;
    return _0x28f7dc['save'](), _0x28f7dc['translate'](_0x3fdef5, _0x374962), _0x28f7dc['globalAlpha'] = 0x1, circle(_0x28f7dc, 0x0, 0x0, _0x1bd90a), fill_path(_0x28f7dc, _0x4a4c93[0x3]), _0x28f7dc['restore'](), _0x28f7dc['save'](), _0x28f7dc['translate'](_0x162ea9, _0xd36185), _0x28f7dc['globalAlpha'] = 0x1, circle(_0x28f7dc, 0x0, 0x0, _0x72ffbd), fill_path(_0x28f7dc, _0x4a4c93[0x4]), _0x28f7dc['restore'](), _0x28f7dc['save'](), _0x28f7dc['translate'](_0x3fdef5 + 0x1b * _0x481e67, _0x374962), _0x28f7dc['globalAlpha'] = 0x1, circle(_0x28f7dc, 0x0, 0x0, _0x1bd90a), fill_path(_0x28f7dc, _0x4a4c93[0x3]), _0x28f7dc['restore'](), _0x28f7dc['save'](), _0x28f7dc['translate'](0x1b * _0x481e67 + _0x162ea9, _0xd36185), _0x28f7dc['globalAlpha'] = 0x1, circle(_0x28f7dc, 0x0, 0x0, _0x72ffbd), fill_path(_0x28f7dc, _0x4a4c93[0x4]), _0x16c8d4;
}

function create_hurt_rabbit(_0x3ec8d2, _0x3c0e4b) {
    var _0x731158 = document['createElement']('canvas'),
        _0x162f10 = _0x731158['getContext']('2d'),
        _0x3f1bcf = _0x3ec8d2 * 0x55,
        _0x373484 = _0x3ec8d2 * 0x73,
        _0x4f91f6 = _0x3ec8d2 * 0x6,
        _0x586bfe = _0x3ec8d2 * 0x4;
    return _0x731158['width'] = _0x3f1bcf, _0x731158['height'] = _0x373484, _0x162f10['translate'](-0x82 * _0x3ec8d2, -0x3c * _0x3ec8d2), _0x162f10['globalAlpha'] = 0x1, _0x162f10['beginPath'](), _0x162f10['bezierCurveTo'](0xbe * _0x3ec8d2, 0x57 * _0x3ec8d2, 0xc9 * _0x3ec8d2, 0x3b * _0x3ec8d2, 0xd0 * _0x3ec8d2, 0x40 * _0x3ec8d2), _0x162f10['bezierCurveTo'](0xd5 * _0x3ec8d2, 0x44 * _0x3ec8d2, 0xcc * _0x3ec8d2, 0x5d * _0x3ec8d2, 0xc3 * _0x3ec8d2, 0x6d * _0x3ec8d2), _0x162f10['bezierCurveTo'](0xc3 * _0x3ec8d2, 0x6d * _0x3ec8d2, 0xca * _0x3ec8d2, 0x7c * _0x3ec8d2, 0xbf * _0x3ec8d2, 0x8d * _0x3ec8d2), _0x162f10['bezierCurveTo'](0xb6 * _0x3ec8d2, 0x97 * _0x3ec8d2, 0xa4 * _0x3ec8d2, 0x9b * _0x3ec8d2, 0x94 * _0x3ec8d2, 0x90 * _0x3ec8d2), _0x162f10['bezierCurveTo'](0x88 * _0x3ec8d2, 0x87 * _0x3ec8d2, 0x8a * _0x3ec8d2, 0x6f * _0x3ec8d2, 0x91 * _0x3ec8d2, 0x68 * _0x3ec8d2), _0x162f10['bezierCurveTo'](0x8c * _0x3ec8d2, 0x5c * _0x3ec8d2, 0x83 * _0x3ec8d2, 0x43 * _0x3ec8d2, 0x8a * _0x3ec8d2, 0x3f * _0x3ec8d2), _0x162f10['bezierCurveTo'](0x91 * _0x3ec8d2, 0x3d * _0x3ec8d2, 0x99 * _0x3ec8d2, 0x52 * _0x3ec8d2, 0x9b * _0x3ec8d2, 0x60 * _0x3ec8d2), _0x162f10['bezierCurveTo'](0xa7 * _0x3ec8d2, 0x5b * _0x3ec8d2, 0xb2 * _0x3ec8d2, 0x5c * _0x3ec8d2, 0xbb * _0x3ec8d2, 0x62 * _0x3ec8d2), _0x162f10['closePath'](), fill_path(_0x162f10, _0x3c0e4b, _0x3c0e4b, _0x586bfe), _0x731158;
}

function create_hurt_wolf(_0x24edd4, _0x24c84c) {
    var _0x549294 = document['createElement']('canvas'),
        _0x236ff7 = _0x549294['getContext']('2d');
    return _0x549294['width'] = 0xbc * _0x24edd4, _0x549294['height'] = 0xbe * _0x24edd4, _0x236ff7['beginPath'](), _0x236ff7['lineCap'] = 'round', _0x236ff7['lineJoin'] = 'round', _0x236ff7['moveTo'](33.00567626953125 * _0x24edd4, 95.44320678710938 * _0x24edd4), _0x236ff7['bezierCurveTo'](42.00567626953125 * _0x24edd4, 87.44320678710938 * _0x24edd4, 48.00567626953125 * _0x24edd4, 51.443206787109375 * _0x24edd4, 74.00567626953125 * _0x24edd4, 47.443206787109375 * _0x24edd4), _0x236ff7['bezierCurveTo'](100.00567626953125 * _0x24edd4, 42.443206787109375 * _0x24edd4, 118.00567626953125 * _0x24edd4, 49.443206787109375 * _0x24edd4, 131.00567626953125 * _0x24edd4, 55.443206787109375 * _0x24edd4), _0x236ff7['bezierCurveTo'](140.00567626953125 * _0x24edd4, 70.44320678710938 * _0x24edd4, 145.00567626953125 * _0x24edd4, 87.44320678710938 * _0x24edd4, 152.00567626953125 * _0x24edd4, 94.44320678710938 * _0x24edd4), _0x236ff7['bezierCurveTo'](149.00567626953125 * _0x24edd4, 99.44320678710938 * _0x24edd4, 147.00567626953125 * _0x24edd4, 98.44320678710938 * _0x24edd4, 141.00567626953125 * _0x24edd4, 101.44320678710938 * _0x24edd4), _0x236ff7['bezierCurveTo'](147.00567626953125 * _0x24edd4, 108.44320678710938 * _0x24edd4, 147.00567626953125 * _0x24edd4, 111.44320678710938 * _0x24edd4, 147.00567626953125 * _0x24edd4, 112.44320678710938 * _0x24edd4), _0x236ff7['bezierCurveTo'](143.00567626953125 * _0x24edd4, 112.44320678710938 * _0x24edd4, 141.00567626953125 * _0x24edd4, 112.44320678710938 * _0x24edd4, 137.00567626953125 * _0x24edd4, 111.44320678710938 * _0x24edd4), _0x236ff7['bezierCurveTo'](138.00567626953125 * _0x24edd4, 117.44320678710938 * _0x24edd4, 138.00567626953125 * _0x24edd4, 120.44320678710938 * _0x24edd4, 138.00567626953125 * _0x24edd4, 124.44320678710938 * _0x24edd4), _0x236ff7['bezierCurveTo'](125.00567626953125 * _0x24edd4, 107.44320678710938 * _0x24edd4, 121.00567626953125 * _0x24edd4, 124.44320678710938 * _0x24edd4, 110.00567626953125 * _0x24edd4, 141.44320678710938 * _0x24edd4), _0x236ff7['bezierCurveTo'](102.00567626953125 * _0x24edd4, 158.44320678710938 * _0x24edd4, 89.00567626953125 * _0x24edd4, 158.44320678710938 * _0x24edd4, 80.00567626953125 * _0x24edd4, 144.44320678710938 * _0x24edd4), _0x236ff7['bezierCurveTo'](61.00567626953125 * _0x24edd4, 111.44320678710938 * _0x24edd4, 56.00567626953125 * _0x24edd4, 117.44320678710938 * _0x24edd4, 48.00567626953125 * _0x24edd4, 120.44320678710938 * _0x24edd4), _0x236ff7['bezierCurveTo'](46.00567626953125 * _0x24edd4, 118.44320678710938 * _0x24edd4, 47.00567626953125 * _0x24edd4, 112.44320678710938 * _0x24edd4, 48.00567626953125 * _0x24edd4, 107.44320678710938 * _0x24edd4), _0x236ff7['bezierCurveTo'](43.00567626953125 * _0x24edd4, 111.44320678710938 * _0x24edd4, 40.00567626953125 * _0x24edd4, 111.44320678710938 * _0x24edd4, 37.00567626953125 * _0x24edd4, 110.44320678710938 * _0x24edd4), _0x236ff7['bezierCurveTo'](39.50567626953125 * _0x24edd4, 104.94320678710938 * _0x24edd4, 39.50567626953125 * _0x24edd4, 104.94320678710938 * _0x24edd4, 42.00567626953125 * _0x24edd4, 99.44320678710938 * _0x24edd4), _0x236ff7['bezierCurveTo'](33.00567626953125 * _0x24edd4, 99.44320678710938 * _0x24edd4, 33.00567626953125 * _0x24edd4, 98.44320678710938 * _0x24edd4, 33.00567626953125 * _0x24edd4, 96.44320678710938 * _0x24edd4), _0x236ff7['closePath'](), fill_path(_0x236ff7, _0x24c84c[0x0], _0x24c84c[0x0], 0x4 * _0x24edd4), _0x236ff7['beginPath'](), _0x236ff7['lineCap'] = 'round', _0x236ff7['lineJoin'] = 'round', _0x236ff7['moveTo'](51.00567626953125 * _0x24edd4, 72.53409576416016 * _0x24edd4), _0x236ff7['bezierCurveTo'](48.00567626953125 * _0x24edd4, 56.534095764160156 * _0x24edd4, 48.00567626953125 * _0x24edd4, 49.534095764160156 * _0x24edd4, 54.00567626953125 * _0x24edd4, 35.534095764160156 * _0x24edd4), _0x236ff7['bezierCurveTo'](58.00567626953125 * _0x24edd4, 26.534095764160156 * _0x24edd4, 65.00567626953125 * _0x24edd4, 27.534095764160156 * _0x24edd4, 73.00567626953125 * _0x24edd4, 40.534095764160156 * _0x24edd4), _0x236ff7['bezierCurveTo'](81.00567626953125 * _0x24edd4, 49.534095764160156 * _0x24edd4, 82.00567626953125 * _0x24edd4, 50.534095764160156 * _0x24edd4, 83.00567626953125 * _0x24edd4, 51.534095764160156 * _0x24edd4), _0x236ff7['bezierCurveTo'](77.00567626953125 * _0x24edd4, 71.53409576416016 * _0x24edd4, 64.00567626953125 * _0x24edd4, 75.53409576416016 * _0x24edd4, 51.00567626953125 * _0x24edd4, 72.53409576416016 * _0x24edd4), _0x236ff7['closePath'](), fill_path(_0x236ff7, _0x24c84c[0x0], _0x24c84c[0x0], 0x2 * _0x24edd4), _0x236ff7['beginPath'](), _0x236ff7['lineCap'] = 'round', _0x236ff7['lineJoin'] = 'round', _0x236ff7['moveTo'](105.00567626953125 * _0x24edd4, 50.53410339355469 * _0x24edd4), _0x236ff7['bezierCurveTo'](112.00567626953125 * _0x24edd4, 48.53410339355469 * _0x24edd4, 125.00567626953125 * _0x24edd4, 21.534103393554688 * _0x24edd4, 132.00567626953125 * _0x24edd4, 33.53410339355469 * _0x24edd4), _0x236ff7['bezierCurveTo'](138.00567626953125 * _0x24edd4, 42.53410339355469 * _0x24edd4, 140.00567626953125 * _0x24edd4, 64.53410339355469 * _0x24edd4, 136.00567626953125 * _0x24edd4, 75.53410339355469 * _0x24edd4), _0x236ff7['closePath'](), fill_path(_0x236ff7, _0x24c84c[0x0], _0x24c84c[0x0], 0x2 * _0x24edd4), _0x549294;
}

function create_wolf(_0x5a3793, _0x34fddf) {
    var _0x105867 = document['createElement']('canvas'),
        _0x2049ed = _0x105867['getContext']('2d');
    return _0x105867['width'] = 0xbc * _0x5a3793, _0x105867['height'] = 0xbe * _0x5a3793, _0x2049ed['globalAlpha'] = 0.5, _0x2049ed['translate'](0x0, 0x5 * _0x5a3793), _0x2049ed['beginPath'](), _0x2049ed['lineCap'] = 'round', _0x2049ed['lineJoin'] = 'round', _0x2049ed['moveTo'](33.00567626953125 * _0x5a3793, 95.44320678710938 * _0x5a3793), _0x2049ed['bezierCurveTo'](42.00567626953125 * _0x5a3793, 87.44320678710938 * _0x5a3793, 48.00567626953125 * _0x5a3793, 51.443206787109375 * _0x5a3793, 74.00567626953125 * _0x5a3793, 47.443206787109375 * _0x5a3793), _0x2049ed['bezierCurveTo'](100.00567626953125 * _0x5a3793, 42.443206787109375 * _0x5a3793, 118.00567626953125 * _0x5a3793, 49.443206787109375 * _0x5a3793, 131.00567626953125 * _0x5a3793, 55.443206787109375 * _0x5a3793), _0x2049ed['bezierCurveTo'](140.00567626953125 * _0x5a3793, 70.44320678710938 * _0x5a3793, 145.00567626953125 * _0x5a3793, 87.44320678710938 * _0x5a3793, 152.00567626953125 * _0x5a3793, 94.44320678710938 * _0x5a3793), _0x2049ed['bezierCurveTo'](149.00567626953125 * _0x5a3793, 99.44320678710938 * _0x5a3793, 147.00567626953125 * _0x5a3793, 98.44320678710938 * _0x5a3793, 141.00567626953125 * _0x5a3793, 101.44320678710938 * _0x5a3793), _0x2049ed['bezierCurveTo'](147.00567626953125 * _0x5a3793, 108.44320678710938 * _0x5a3793, 147.00567626953125 * _0x5a3793, 111.44320678710938 * _0x5a3793, 147.00567626953125 * _0x5a3793, 112.44320678710938 * _0x5a3793), _0x2049ed['bezierCurveTo'](143.00567626953125 * _0x5a3793, 112.44320678710938 * _0x5a3793, 141.00567626953125 * _0x5a3793, 112.44320678710938 * _0x5a3793, 137.00567626953125 * _0x5a3793, 111.44320678710938 * _0x5a3793), _0x2049ed['bezierCurveTo'](138.00567626953125 * _0x5a3793, 117.44320678710938 * _0x5a3793, 138.00567626953125 * _0x5a3793, 120.44320678710938 * _0x5a3793, 138.00567626953125 * _0x5a3793, 124.44320678710938 * _0x5a3793), _0x2049ed['bezierCurveTo'](125.00567626953125 * _0x5a3793, 107.44320678710938 * _0x5a3793, 121.00567626953125 * _0x5a3793, 124.44320678710938 * _0x5a3793, 110.00567626953125 * _0x5a3793, 141.44320678710938 * _0x5a3793), _0x2049ed['bezierCurveTo'](102.00567626953125 * _0x5a3793, 158.44320678710938 * _0x5a3793, 89.00567626953125 * _0x5a3793, 158.44320678710938 * _0x5a3793, 80.00567626953125 * _0x5a3793, 144.44320678710938 * _0x5a3793), _0x2049ed['bezierCurveTo'](61.00567626953125 * _0x5a3793, 111.44320678710938 * _0x5a3793, 56.00567626953125 * _0x5a3793, 117.44320678710938 * _0x5a3793, 48.00567626953125 * _0x5a3793, 120.44320678710938 * _0x5a3793), _0x2049ed['bezierCurveTo'](46.00567626953125 * _0x5a3793, 118.44320678710938 * _0x5a3793, 47.00567626953125 * _0x5a3793, 112.44320678710938 * _0x5a3793, 48.00567626953125 * _0x5a3793, 107.44320678710938 * _0x5a3793), _0x2049ed['bezierCurveTo'](43.00567626953125 * _0x5a3793, 111.44320678710938 * _0x5a3793, 40.00567626953125 * _0x5a3793, 111.44320678710938 * _0x5a3793, 37.00567626953125 * _0x5a3793, 110.44320678710938 * _0x5a3793), _0x2049ed['bezierCurveTo'](39.50567626953125 * _0x5a3793, 104.94320678710938 * _0x5a3793, 39.50567626953125 * _0x5a3793, 104.94320678710938 * _0x5a3793, 42.00567626953125 * _0x5a3793, 99.44320678710938 * _0x5a3793), _0x2049ed['bezierCurveTo'](33.00567626953125 * _0x5a3793, 99.44320678710938 * _0x5a3793, 33.00567626953125 * _0x5a3793, 98.44320678710938 * _0x5a3793, 33.00567626953125 * _0x5a3793, 96.44320678710938 * _0x5a3793), _0x2049ed['closePath'](), fill_path(_0x2049ed, _0x34fddf[0x0], _0x34fddf[0x0], 0x4 * _0x5a3793), _0x2049ed['beginPath'](), _0x2049ed['lineCap'] = 'round', _0x2049ed['lineJoin'] = 'round', _0x2049ed['moveTo'](60.00567626953125 * _0x5a3793, 99.35227966308594 * _0x5a3793), _0x2049ed['bezierCurveTo'](70.00567626953125 * _0x5a3793, 82.35227966308594 * _0x5a3793, 85.00567626953125 * _0x5a3793, 86.35227966308594 * _0x5a3793, 87.00567626953125 * _0x5a3793, 97.35227966308594 * _0x5a3793), _0x2049ed['bezierCurveTo'](89.00567626953125 * _0x5a3793, 101.35227966308594 * _0x5a3793, 88.00567626953125 * _0x5a3793, 105.35227966308594 * _0x5a3793, 87.00567626953125 * _0x5a3793, 110.35227966308594 * _0x5a3793), _0x2049ed['bezierCurveTo'](89.00567626953125 * _0x5a3793, 111.35227966308594 * _0x5a3793, 91.00567626953125 * _0x5a3793, 112.35227966308594 * _0x5a3793, 93.00567626953125 * _0x5a3793, 115.35227966308594 * _0x5a3793), _0x2049ed['bezierCurveTo'](96.00567626953125 * _0x5a3793, 111.35227966308594 * _0x5a3793, 99.00567626953125 * _0x5a3793, 111.35227966308594 * _0x5a3793, 100.00567626953125 * _0x5a3793, 110.35227966308594 * _0x5a3793), _0x2049ed['bezierCurveTo'](98.00567626953125 * _0x5a3793, 92.35227966308594 * _0x5a3793, 103.00567626953125 * _0x5a3793, 86.35227966308594 * _0x5a3793, 113.00567626953125 * _0x5a3793, 89.35227966308594 * _0x5a3793), _0x2049ed['bezierCurveTo'](122.00567626953125 * _0x5a3793, 92.35227966308594 * _0x5a3793, 123.00567626953125 * _0x5a3793, 94.35227966308594 * _0x5a3793, 126.00567626953125 * _0x5a3793, 98.35227966308594 * _0x5a3793), _0x2049ed['bezierCurveTo'](124.00567626953125 * _0x5a3793, 102.35227966308594 * _0x5a3793, 123.00567626953125 * _0x5a3793, 103.35227966308594 * _0x5a3793, 121.00567626953125 * _0x5a3793, 104.35227966308594 * _0x5a3793), _0x2049ed['bezierCurveTo'](124.00567626953125 * _0x5a3793, 105.35227966308594 * _0x5a3793, 126.00567626953125 * _0x5a3793, 107.35227966308594 * _0x5a3793, 129.00567626953125 * _0x5a3793, 111.35227966308594 * _0x5a3793), _0x2049ed['bezierCurveTo'](115.00567626953125 * _0x5a3793, 122.35227966308594 * _0x5a3793, 113.00567626953125 * _0x5a3793, 145.35227966308594 * _0x5a3793, 100.00567626953125 * _0x5a3793, 152.35227966308594 * _0x5a3793), _0x2049ed['bezierCurveTo'](91.00567626953125 * _0x5a3793, 158.35227966308594 * _0x5a3793, 83.00567626953125 * _0x5a3793, 149.35227966308594 * _0x5a3793, 76.00567626953125 * _0x5a3793, 138.35227966308594 * _0x5a3793), _0x2049ed['bezierCurveTo'](67.00567626953125 * _0x5a3793, 114.35227966308594 * _0x5a3793, 63.00567626953125 * _0x5a3793, 113.35227966308594 * _0x5a3793, 59.00567626953125 * _0x5a3793, 111.35227966308594 * _0x5a3793), _0x2049ed['bezierCurveTo'](62.00567626953125 * _0x5a3793, 107.35227966308594 * _0x5a3793, 64.00567626953125 * _0x5a3793, 105.35227966308594 * _0x5a3793, 66.00567626953125 * _0x5a3793, 104.35227966308594 * _0x5a3793), _0x2049ed['bezierCurveTo'](63.00567626953125 * _0x5a3793, 100.35227966308594 * _0x5a3793, 62.00567626953125 * _0x5a3793, 100.35227966308594 * _0x5a3793, 60.00567626953125 * _0x5a3793, 99.35227966308594 * _0x5a3793), _0x2049ed['closePath'](), fill_path(_0x2049ed, _0x34fddf[0x0], _0x34fddf[0x0], 0x2 * _0x5a3793), _0x2049ed['beginPath'](), _0x2049ed['lineCap'] = 'round', _0x2049ed['lineJoin'] = 'round', _0x2049ed['moveTo'](51.00567626953125 * _0x5a3793, 72.53409576416016 * _0x5a3793), _0x2049ed['bezierCurveTo'](48.00567626953125 * _0x5a3793, 56.534095764160156 * _0x5a3793, 48.00567626953125 * _0x5a3793, 49.534095764160156 * _0x5a3793, 54.00567626953125 * _0x5a3793, 35.534095764160156 * _0x5a3793), _0x2049ed['bezierCurveTo'](58.00567626953125 * _0x5a3793, 26.534095764160156 * _0x5a3793, 65.00567626953125 * _0x5a3793, 27.534095764160156 * _0x5a3793, 73.00567626953125 * _0x5a3793, 40.534095764160156 * _0x5a3793), _0x2049ed['bezierCurveTo'](81.00567626953125 * _0x5a3793, 49.534095764160156 * _0x5a3793, 82.00567626953125 * _0x5a3793, 50.534095764160156 * _0x5a3793, 83.00567626953125 * _0x5a3793, 51.534095764160156 * _0x5a3793), _0x2049ed['bezierCurveTo'](77.00567626953125 * _0x5a3793, 71.53409576416016 * _0x5a3793, 64.00567626953125 * _0x5a3793, 75.53409576416016 * _0x5a3793, 51.00567626953125 * _0x5a3793, 72.53409576416016 * _0x5a3793), _0x2049ed['closePath'](), fill_path(_0x2049ed, _0x34fddf[0x0], _0x34fddf[0x0], 0x2 * _0x5a3793), _0x2049ed['beginPath'](), _0x2049ed['lineCap'] = 'round', _0x2049ed['lineJoin'] = 'round', _0x2049ed['moveTo'](105.00567626953125 * _0x5a3793, 50.53410339355469 * _0x5a3793), _0x2049ed['bezierCurveTo'](112.00567626953125 * _0x5a3793, 48.53410339355469 * _0x5a3793, 125.00567626953125 * _0x5a3793, 21.534103393554688 * _0x5a3793, 132.00567626953125 * _0x5a3793, 33.53410339355469 * _0x5a3793), _0x2049ed['bezierCurveTo'](138.00567626953125 * _0x5a3793, 42.53410339355469 * _0x5a3793, 140.00567626953125 * _0x5a3793, 64.53410339355469 * _0x5a3793, 136.00567626953125 * _0x5a3793, 75.53410339355469 * _0x5a3793), _0x2049ed['closePath'](), fill_path(_0x2049ed, _0x34fddf[0x0], _0x34fddf[0x0], 0x2 * _0x5a3793), _0x2049ed['globalAlpha'] = 0x1, _0x2049ed['translate'](0x0, -0x5 * _0x5a3793), _0x2049ed['beginPath'](), _0x2049ed['lineCap'] = 'round', _0x2049ed['lineJoin'] = 'round', _0x2049ed['moveTo'](33.00567626953125 * _0x5a3793, 95.44320678710938 * _0x5a3793), _0x2049ed['bezierCurveTo'](42.00567626953125 * _0x5a3793, 87.44320678710938 * _0x5a3793, 48.00567626953125 * _0x5a3793, 51.443206787109375 * _0x5a3793, 74.00567626953125 * _0x5a3793, 47.443206787109375 * _0x5a3793), _0x2049ed['bezierCurveTo'](100.00567626953125 * _0x5a3793, 42.443206787109375 * _0x5a3793, 118.00567626953125 * _0x5a3793, 49.443206787109375 * _0x5a3793, 131.00567626953125 * _0x5a3793, 55.443206787109375 * _0x5a3793), _0x2049ed['bezierCurveTo'](140.00567626953125 * _0x5a3793, 70.44320678710938 * _0x5a3793, 145.00567626953125 * _0x5a3793, 87.44320678710938 * _0x5a3793, 152.00567626953125 * _0x5a3793, 94.44320678710938 * _0x5a3793), _0x2049ed['bezierCurveTo'](149.00567626953125 * _0x5a3793, 99.44320678710938 * _0x5a3793, 147.00567626953125 * _0x5a3793, 98.44320678710938 * _0x5a3793, 141.00567626953125 * _0x5a3793, 101.44320678710938 * _0x5a3793), _0x2049ed['bezierCurveTo'](147.00567626953125 * _0x5a3793, 108.44320678710938 * _0x5a3793, 147.00567626953125 * _0x5a3793, 111.44320678710938 * _0x5a3793, 147.00567626953125 * _0x5a3793, 112.44320678710938 * _0x5a3793), _0x2049ed['bezierCurveTo'](143.00567626953125 * _0x5a3793, 112.44320678710938 * _0x5a3793, 141.00567626953125 * _0x5a3793, 112.44320678710938 * _0x5a3793, 137.00567626953125 * _0x5a3793, 111.44320678710938 * _0x5a3793), _0x2049ed['bezierCurveTo'](138.00567626953125 * _0x5a3793, 117.44320678710938 * _0x5a3793, 138.00567626953125 * _0x5a3793, 120.44320678710938 * _0x5a3793, 138.00567626953125 * _0x5a3793, 124.44320678710938 * _0x5a3793), _0x2049ed['bezierCurveTo'](125.00567626953125 * _0x5a3793, 107.44320678710938 * _0x5a3793, 121.00567626953125 * _0x5a3793, 124.44320678710938 * _0x5a3793, 110.00567626953125 * _0x5a3793, 141.44320678710938 * _0x5a3793), _0x2049ed['bezierCurveTo'](102.00567626953125 * _0x5a3793, 158.44320678710938 * _0x5a3793, 89.00567626953125 * _0x5a3793, 158.44320678710938 * _0x5a3793, 80.00567626953125 * _0x5a3793, 144.44320678710938 * _0x5a3793), _0x2049ed['bezierCurveTo'](61.00567626953125 * _0x5a3793, 111.44320678710938 * _0x5a3793, 56.00567626953125 * _0x5a3793, 117.44320678710938 * _0x5a3793, 48.00567626953125 * _0x5a3793, 120.44320678710938 * _0x5a3793), _0x2049ed['bezierCurveTo'](46.00567626953125 * _0x5a3793, 118.44320678710938 * _0x5a3793, 47.00567626953125 * _0x5a3793, 112.44320678710938 * _0x5a3793, 48.00567626953125 * _0x5a3793, 107.44320678710938 * _0x5a3793), _0x2049ed['bezierCurveTo'](43.00567626953125 * _0x5a3793, 111.44320678710938 * _0x5a3793, 40.00567626953125 * _0x5a3793, 111.44320678710938 * _0x5a3793, 37.00567626953125 * _0x5a3793, 110.44320678710938 * _0x5a3793), _0x2049ed['bezierCurveTo'](39.50567626953125 * _0x5a3793, 104.94320678710938 * _0x5a3793, 39.50567626953125 * _0x5a3793, 104.94320678710938 * _0x5a3793, 42.00567626953125 * _0x5a3793, 99.44320678710938 * _0x5a3793), _0x2049ed['bezierCurveTo'](33.00567626953125 * _0x5a3793, 99.44320678710938 * _0x5a3793, 33.00567626953125 * _0x5a3793, 98.44320678710938 * _0x5a3793, 33.00567626953125 * _0x5a3793, 96.44320678710938 * _0x5a3793), _0x2049ed['closePath'](), fill_path(_0x2049ed, _0x34fddf[0x1], _0x34fddf[0x2], 0x3 * _0x5a3793), _0x2049ed['beginPath'](), _0x2049ed['lineCap'] = 'round', _0x2049ed['lineJoin'] = 'round', _0x2049ed['moveTo'](60.00567626953125 * _0x5a3793, 99.35227966308594 * _0x5a3793), _0x2049ed['bezierCurveTo'](70.00567626953125 * _0x5a3793, 82.35227966308594 * _0x5a3793, 85.00567626953125 * _0x5a3793, 86.35227966308594 * _0x5a3793, 87.00567626953125 * _0x5a3793, 97.35227966308594 * _0x5a3793), _0x2049ed['bezierCurveTo'](89.00567626953125 * _0x5a3793, 101.35227966308594 * _0x5a3793, 88.00567626953125 * _0x5a3793, 105.35227966308594 * _0x5a3793, 87.00567626953125 * _0x5a3793, 110.35227966308594 * _0x5a3793), _0x2049ed['bezierCurveTo'](89.00567626953125 * _0x5a3793, 111.35227966308594 * _0x5a3793, 91.00567626953125 * _0x5a3793, 112.35227966308594 * _0x5a3793, 93.00567626953125 * _0x5a3793, 115.35227966308594 * _0x5a3793), _0x2049ed['bezierCurveTo'](96.00567626953125 * _0x5a3793, 111.35227966308594 * _0x5a3793, 99.00567626953125 * _0x5a3793, 111.35227966308594 * _0x5a3793, 100.00567626953125 * _0x5a3793, 110.35227966308594 * _0x5a3793), _0x2049ed['bezierCurveTo'](98.00567626953125 * _0x5a3793, 92.35227966308594 * _0x5a3793, 103.00567626953125 * _0x5a3793, 86.35227966308594 * _0x5a3793, 113.00567626953125 * _0x5a3793, 89.35227966308594 * _0x5a3793), _0x2049ed['bezierCurveTo'](122.00567626953125 * _0x5a3793, 92.35227966308594 * _0x5a3793, 123.00567626953125 * _0x5a3793, 94.35227966308594 * _0x5a3793, 126.00567626953125 * _0x5a3793, 98.35227966308594 * _0x5a3793), _0x2049ed['bezierCurveTo'](124.00567626953125 * _0x5a3793, 102.35227966308594 * _0x5a3793, 123.00567626953125 * _0x5a3793, 103.35227966308594 * _0x5a3793, 121.00567626953125 * _0x5a3793, 104.35227966308594 * _0x5a3793), _0x2049ed['bezierCurveTo'](124.00567626953125 * _0x5a3793, 105.35227966308594 * _0x5a3793, 126.00567626953125 * _0x5a3793, 107.35227966308594 * _0x5a3793, 129.00567626953125 * _0x5a3793, 111.35227966308594 * _0x5a3793), _0x2049ed['bezierCurveTo'](115.00567626953125 * _0x5a3793, 122.35227966308594 * _0x5a3793, 113.00567626953125 * _0x5a3793, 145.35227966308594 * _0x5a3793, 100.00567626953125 * _0x5a3793, 152.35227966308594 * _0x5a3793), _0x2049ed['bezierCurveTo'](91.00567626953125 * _0x5a3793, 158.35227966308594 * _0x5a3793, 83.00567626953125 * _0x5a3793, 149.35227966308594 * _0x5a3793, 76.00567626953125 * _0x5a3793, 138.35227966308594 * _0x5a3793), _0x2049ed['bezierCurveTo'](67.00567626953125 * _0x5a3793, 114.35227966308594 * _0x5a3793, 63.00567626953125 * _0x5a3793, 113.35227966308594 * _0x5a3793, 59.00567626953125 * _0x5a3793, 111.35227966308594 * _0x5a3793), _0x2049ed['bezierCurveTo'](62.00567626953125 * _0x5a3793, 107.35227966308594 * _0x5a3793, 64.00567626953125 * _0x5a3793, 105.35227966308594 * _0x5a3793, 66.00567626953125 * _0x5a3793, 104.35227966308594 * _0x5a3793), _0x2049ed['bezierCurveTo'](63.00567626953125 * _0x5a3793, 100.35227966308594 * _0x5a3793, 62.00567626953125 * _0x5a3793, 100.35227966308594 * _0x5a3793, 60.00567626953125 * _0x5a3793, 99.35227966308594 * _0x5a3793), _0x2049ed['closePath'](), fill_path(_0x2049ed, _0x34fddf[0x3]), _0x2049ed['beginPath'](), _0x2049ed['lineCap'] = 'round', _0x2049ed['lineJoin'] = 'round', _0x2049ed['moveTo'](33.00567626953125 * _0x5a3793, 95.44320678710938 * _0x5a3793), _0x2049ed['bezierCurveTo'](42.00567626953125 * _0x5a3793, 87.44320678710938 * _0x5a3793, 48.00567626953125 * _0x5a3793, 51.443206787109375 * _0x5a3793, 74.00567626953125 * _0x5a3793, 47.443206787109375 * _0x5a3793), _0x2049ed['bezierCurveTo'](100.00567626953125 * _0x5a3793, 42.443206787109375 * _0x5a3793, 118.00567626953125 * _0x5a3793, 49.443206787109375 * _0x5a3793, 131.00567626953125 * _0x5a3793, 55.443206787109375 * _0x5a3793), _0x2049ed['bezierCurveTo'](140.00567626953125 * _0x5a3793, 70.44320678710938 * _0x5a3793, 145.00567626953125 * _0x5a3793, 87.44320678710938 * _0x5a3793, 152.00567626953125 * _0x5a3793, 94.44320678710938 * _0x5a3793), _0x2049ed['bezierCurveTo'](149.00567626953125 * _0x5a3793, 99.44320678710938 * _0x5a3793, 147.00567626953125 * _0x5a3793, 98.44320678710938 * _0x5a3793, 141.00567626953125 * _0x5a3793, 101.44320678710938 * _0x5a3793), _0x2049ed['bezierCurveTo'](147.00567626953125 * _0x5a3793, 108.44320678710938 * _0x5a3793, 147.00567626953125 * _0x5a3793, 111.44320678710938 * _0x5a3793, 147.00567626953125 * _0x5a3793, 112.44320678710938 * _0x5a3793), _0x2049ed['bezierCurveTo'](143.00567626953125 * _0x5a3793, 112.44320678710938 * _0x5a3793, 141.00567626953125 * _0x5a3793, 112.44320678710938 * _0x5a3793, 137.00567626953125 * _0x5a3793, 111.44320678710938 * _0x5a3793), _0x2049ed['bezierCurveTo'](138.00567626953125 * _0x5a3793, 117.44320678710938 * _0x5a3793, 138.00567626953125 * _0x5a3793, 120.44320678710938 * _0x5a3793, 138.00567626953125 * _0x5a3793, 124.44320678710938 * _0x5a3793), _0x2049ed['bezierCurveTo'](125.00567626953125 * _0x5a3793, 107.44320678710938 * _0x5a3793, 121.00567626953125 * _0x5a3793, 124.44320678710938 * _0x5a3793, 110.00567626953125 * _0x5a3793, 141.44320678710938 * _0x5a3793), _0x2049ed['bezierCurveTo'](102.00567626953125 * _0x5a3793, 158.44320678710938 * _0x5a3793, 89.00567626953125 * _0x5a3793, 158.44320678710938 * _0x5a3793, 80.00567626953125 * _0x5a3793, 144.44320678710938 * _0x5a3793), _0x2049ed['bezierCurveTo'](61.00567626953125 * _0x5a3793, 111.44320678710938 * _0x5a3793, 56.00567626953125 * _0x5a3793, 117.44320678710938 * _0x5a3793, 48.00567626953125 * _0x5a3793, 120.44320678710938 * _0x5a3793), _0x2049ed['bezierCurveTo'](46.00567626953125 * _0x5a3793, 118.44320678710938 * _0x5a3793, 47.00567626953125 * _0x5a3793, 112.44320678710938 * _0x5a3793, 48.00567626953125 * _0x5a3793, 107.44320678710938 * _0x5a3793), _0x2049ed['bezierCurveTo'](43.00567626953125 * _0x5a3793, 111.44320678710938 * _0x5a3793, 40.00567626953125 * _0x5a3793, 111.44320678710938 * _0x5a3793, 37.00567626953125 * _0x5a3793, 110.44320678710938 * _0x5a3793), _0x2049ed['bezierCurveTo'](39.50567626953125 * _0x5a3793, 104.94320678710938 * _0x5a3793, 39.50567626953125 * _0x5a3793, 104.94320678710938 * _0x5a3793, 42.00567626953125 * _0x5a3793, 99.44320678710938 * _0x5a3793), _0x2049ed['bezierCurveTo'](33.00567626953125 * _0x5a3793, 99.44320678710938 * _0x5a3793, 33.00567626953125 * _0x5a3793, 98.44320678710938 * _0x5a3793, 33.00567626953125 * _0x5a3793, 96.44320678710938 * _0x5a3793), _0x2049ed['closePath'](), fill_path(_0x2049ed, undefined, _0x34fddf[0x2], 0x3 * _0x5a3793), _0x2049ed['beginPath'](), _0x2049ed['lineCap'] = 'round', _0x2049ed['lineJoin'] = 'round', _0x2049ed['moveTo'](51.00567626953125 * _0x5a3793, 72.53409576416016 * _0x5a3793), _0x2049ed['bezierCurveTo'](48.00567626953125 * _0x5a3793, 56.534095764160156 * _0x5a3793, 48.00567626953125 * _0x5a3793, 49.534095764160156 * _0x5a3793, 54.00567626953125 * _0x5a3793, 35.534095764160156 * _0x5a3793), _0x2049ed['bezierCurveTo'](58.00567626953125 * _0x5a3793, 26.534095764160156 * _0x5a3793, 65.00567626953125 * _0x5a3793, 27.534095764160156 * _0x5a3793, 73.00567626953125 * _0x5a3793, 40.534095764160156 * _0x5a3793), _0x2049ed['bezierCurveTo'](81.00567626953125 * _0x5a3793, 49.534095764160156 * _0x5a3793, 82.00567626953125 * _0x5a3793, 50.534095764160156 * _0x5a3793, 83.00567626953125 * _0x5a3793, 51.534095764160156 * _0x5a3793), fill_path(_0x2049ed, _0x34fddf[0x1], _0x34fddf[0x2], 0x3 * _0x5a3793), _0x2049ed['beginPath'](), _0x2049ed['lineCap'] = 'round', _0x2049ed['lineJoin'] = 'round', _0x2049ed['moveTo'](105.00567626953125 * _0x5a3793, 50.53410339355469 * _0x5a3793), _0x2049ed['bezierCurveTo'](112.00567626953125 * _0x5a3793, 48.53410339355469 * _0x5a3793, 125.00567626953125 * _0x5a3793, 21.534103393554688 * _0x5a3793, 132.00567626953125 * _0x5a3793, 33.53410339355469 * _0x5a3793), _0x2049ed['bezierCurveTo'](138.00567626953125 * _0x5a3793, 42.53410339355469 * _0x5a3793, 140.00567626953125 * _0x5a3793, 64.53410339355469 * _0x5a3793, 136.00567626953125 * _0x5a3793, 75.53410339355469 * _0x5a3793), fill_path(_0x2049ed, _0x34fddf[0x1], _0x34fddf[0x2], 0x3 * _0x5a3793), _0x2049ed['beginPath'](), _0x2049ed['lineCap'] = 'round', _0x2049ed['lineJoin'] = 'round', _0x2049ed['moveTo'](57.00567626953125 * _0x5a3793, 68.53410339355469 * _0x5a3793), _0x2049ed['bezierCurveTo'](63.00567626953125 * _0x5a3793, 69.53410339355469 * _0x5a3793, 69.00567626953125 * _0x5a3793, 66.53410339355469 * _0x5a3793, 73.00567626953125 * _0x5a3793, 60.53410339355469 * _0x5a3793), _0x2049ed['bezierCurveTo'](66.00567626953125 * _0x5a3793, 47.53410339355469 * _0x5a3793, 61.00567626953125 * _0x5a3793, 42.53410339355469 * _0x5a3793, 58.00567626953125 * _0x5a3793, 49.53410339355469 * _0x5a3793), _0x2049ed['bezierCurveTo'](56.00567626953125 * _0x5a3793, 59.53410339355469 * _0x5a3793, 56.00567626953125 * _0x5a3793, 64.53410339355469 * _0x5a3793, 57.00567626953125 * _0x5a3793, 67.53410339355469 * _0x5a3793), _0x2049ed['closePath'](), fill_path(_0x2049ed, _0x34fddf[0x3]), _0x2049ed['beginPath'](), _0x2049ed['lineCap'] = 'round', _0x2049ed['lineJoin'] = 'round', _0x2049ed['moveTo'](115.00567626953125 * _0x5a3793, 59.715911865234375 * _0x5a3793), _0x2049ed['bezierCurveTo'](119.00567626953125 * _0x5a3793, 48.715911865234375 * _0x5a3793, 126.00567626953125 * _0x5a3793, 41.715911865234375 * _0x5a3793, 129.00567626953125 * _0x5a3793, 48.715911865234375 * _0x5a3793), _0x2049ed['bezierCurveTo'](131.00567626953125 * _0x5a3793, 56.715911865234375 * _0x5a3793, 133.00567626953125 * _0x5a3793, 71.71591186523438 * _0x5a3793, 127.00567626953125 * _0x5a3793, 68.71591186523438 * _0x5a3793), _0x2049ed['bezierCurveTo'](120.00567626953125 * _0x5a3793, 67.71591186523438 * _0x5a3793, 114.00567626953125 * _0x5a3793, 59.715911865234375 * _0x5a3793, 116.00567626953125 * _0x5a3793, 58.715911865234375 * _0x5a3793), _0x2049ed['closePath'](), fill_path(_0x2049ed, _0x34fddf[0x3]), circle(_0x2049ed, 0x4d * _0x5a3793, 0x6b * _0x5a3793, 0x6 * _0x5a3793), fill_path(_0x2049ed, _0x34fddf[0x2]), circle(_0x2049ed, 0x6e * _0x5a3793, 0x6b * _0x5a3793, 0x6 * _0x5a3793), fill_path(_0x2049ed, _0x34fddf[0x2]), circle(_0x2049ed, 0x4b * _0x5a3793, 0x69 * _0x5a3793, 0x3 * _0x5a3793), fill_path(_0x2049ed, _0x34fddf[0x4]), circle(_0x2049ed, 0x6c * _0x5a3793, 0x69 * _0x5a3793, 0x3 * _0x5a3793), fill_path(_0x2049ed, _0x34fddf[0x4]), _0x2049ed['beginPath'](), _0x2049ed['lineCap'] = 'round', _0x2049ed['lineJoin'] = 'round', _0x2049ed['moveTo'](88.00567626953125 * _0x5a3793, 141.4431915283203 * _0x5a3793), _0x2049ed['bezierCurveTo'](93.00567626953125 * _0x5a3793, 137.4431915283203 * _0x5a3793, 96.00567626953125 * _0x5a3793, 138.4431915283203 * _0x5a3793, 100.00567626953125 * _0x5a3793, 141.4431915283203 * _0x5a3793), _0x2049ed['bezierCurveTo'](103.00567626953125 * _0x5a3793, 143.4431915283203 * _0x5a3793, 101.00567626953125 * _0x5a3793, 149.4431915283203 * _0x5a3793, 95.00567626953125 * _0x5a3793, 148.4431915283203 * _0x5a3793), _0x2049ed['bezierCurveTo'](85.00567626953125 * _0x5a3793, 148.4431915283203 * _0x5a3793, 86.00567626953125 * _0x5a3793, 145.4431915283203 * _0x5a3793, 88.00567626953125 * _0x5a3793, 142.4431915283203 * _0x5a3793), _0x2049ed['closePath'](), fill_path(_0x2049ed, _0x34fddf[0x1]), _0x105867;
}

function create_meat(_0x274e00, _0xb52e78, _0x36be7b) {
    var _0x61808c = document['createElement']('canvas'),
        _0x2377f1 = _0x61808c['getContext']('2d'),
        _0x403c05 = _0x274e00 * 0x37,
        _0x1e3785 = _0x274e00 * 0x37,
        _0x5501f5 = _0x274e00 * 0x8,
        _0x38480b = _0x274e00 * 0x4;
    return _0x61808c['width'] = _0x403c05, _0x61808c['height'] = _0x1e3785, _0x2377f1['translate'](-0x41 * _0x274e00, -0x37 * _0x274e00 + _0x5501f5), _0x2377f1['globalAlpha'] = 0x1, _0x2377f1['beginPath'](), _0x2377f1['moveTo'](0x5f * _0x274e00, 0x3c * _0x274e00), _0x2377f1['bezierCurveTo'](0x6b * _0x274e00, 0x3e * _0x274e00, 0x6e * _0x274e00, 0x49 * _0x274e00, 0x6b * _0x274e00, 0x4f * _0x274e00), _0x2377f1['bezierCurveTo'](0x68 * _0x274e00, 0x55 * _0x274e00, 0x55 * _0x274e00, 0x5d * _0x274e00, 0x51 * _0x274e00, 0x58 * _0x274e00), _0x2377f1['bezierCurveTo'](0x4a * _0x274e00, 0x50 * _0x274e00, 0x55 * _0x274e00, 0x3c * _0x274e00, 0x5f * _0x274e00, 0x3c * _0x274e00), _0x2377f1['closePath'](), fill_path(_0x2377f1, _0x36be7b[0x0], _0x36be7b[0x1], 0x3), _0x2377f1['globalAlpha'] = 0x1, _0x2377f1['beginPath'](), _0x2377f1['moveTo'](0x5b * _0x274e00, 0x46 * _0x274e00), _0x2377f1['bezierCurveTo'](0x5b * _0x274e00, 0x4b * _0x274e00, 0x64 * _0x274e00, 0x4c * _0x274e00, 0x64 * _0x274e00, 0x49 * _0x274e00), _0x2377f1['bezierCurveTo'](0x64 * _0x274e00, 0x45 * _0x274e00, 0x59 * _0x274e00, 0x41 * _0x274e00, 0x5b * _0x274e00, 0x46 * _0x274e00), _0x2377f1['closePath'](), fill_path(_0x2377f1, _0x36be7b[0x2], _0x36be7b[0x3], 0x3), _0x61808c;
}

function create_hurt_spider(_0x1314f5, _0x5687d9) {
    var _0x3b343e = document['createElement']('canvas'),
        _0x20a760 = _0x3b343e['getContext']('2d');
    return _0x3b343e['width'] = 0xee * _0x1314f5, _0x3b343e['height'] = 0xe6 * _0x1314f5, _0x20a760['translate'](-0x5d * _0x1314f5, -0x6e * _0x1314f5), circle(_0x20a760, 213.5 * _0x1314f5, 256.75 * _0x1314f5, 0x4b * _0x1314f5), fill_path(_0x20a760, _0x5687d9), circle(_0x20a760, 213.5 * _0x1314f5, 175.75 * _0x1314f5, 0x19 * _0x1314f5), fill_path(_0x20a760, _0x5687d9), _0x20a760['beginPath'](), _0x20a760['lineCap'] = 'round', _0x20a760['lineJoin'] = 'round', _0x20a760['moveTo'](156.5 * _0x1314f5, 137.75 * _0x1314f5), _0x20a760['bezierCurveTo'](170.5 * _0x1314f5, 173.75 * _0x1314f5, 195.5 * _0x1314f5, 177.75 * _0x1314f5, 209.5 * _0x1314f5, 177.75 * _0x1314f5), _0x20a760['lineWidth'] = 0x11 * _0x1314f5, _0x20a760['strokeStyle'] = _0x5687d9, _0x20a760['stroke'](), _0x20a760['beginPath'](), _0x20a760['lineCap'] = 'round', _0x20a760['lineJoin'] = 'round', _0x20a760['moveTo'](217.5 * _0x1314f5, 178.75 * _0x1314f5), _0x20a760['bezierCurveTo'](251.5 * _0x1314f5, 177.75 * _0x1314f5, 263.5 * _0x1314f5, 153.75 * _0x1314f5, 270.5 * _0x1314f5, 140.75 * _0x1314f5), _0x20a760['lineWidth'] = 0x11 * _0x1314f5, _0x20a760['strokeStyle'] = _0x5687d9, _0x20a760['stroke'](), _0x20a760['beginPath'](), _0x20a760['lineCap'] = 'round', _0x20a760['lineJoin'] = 'round', _0x20a760['moveTo'](130.5 * _0x1314f5, 124.75 * _0x1314f5), _0x20a760['bezierCurveTo'](153.5 * _0x1314f5, 185.75 * _0x1314f5, 198.5 * _0x1314f5, 185.75 * _0x1314f5, 213.5 * _0x1314f5, 185.75 * _0x1314f5), _0x20a760['lineWidth'] = 0x11 * _0x1314f5, _0x20a760['strokeStyle'] = _0x5687d9, _0x20a760['stroke'](), _0x20a760['beginPath'](), _0x20a760['lineCap'] = 'round', _0x20a760['lineJoin'] = 'round', _0x20a760['moveTo'](214.5 * _0x1314f5, 183.75 * _0x1314f5), _0x20a760['bezierCurveTo'](265.5 * _0x1314f5, 192.75 * _0x1314f5, 293.5 * _0x1314f5, 141.75 * _0x1314f5, 297.5 * _0x1314f5, 124.75 * _0x1314f5), _0x20a760['lineWidth'] = 0x11 * _0x1314f5, _0x20a760['strokeStyle'] = _0x5687d9, _0x20a760['stroke'](), _0x20a760['beginPath'](), _0x20a760['lineCap'] = 'round', _0x20a760['lineJoin'] = 'round', _0x20a760['moveTo'](107.5 * _0x1314f5, 213.75 * _0x1314f5), _0x20a760['bezierCurveTo'](151.5 * _0x1314f5, 190.75 * _0x1314f5, 198.5 * _0x1314f5, 184.75 * _0x1314f5, 210.5 * _0x1314f5, 184.75 * _0x1314f5), _0x20a760['lineWidth'] = 0x11 * _0x1314f5, _0x20a760['strokeStyle'] = _0x5687d9, _0x20a760['stroke'](), _0x20a760['beginPath'](), _0x20a760['lineCap'] = 'round', _0x20a760['lineJoin'] = 'round', _0x20a760['moveTo'](212.5 * _0x1314f5, 187.75 * _0x1314f5), _0x20a760['bezierCurveTo'](258.5 * _0x1314f5, 182.75 * _0x1314f5, 286.5 * _0x1314f5, 194.75 * _0x1314f5, 314.5 * _0x1314f5, 206.75 * _0x1314f5), _0x20a760['lineWidth'] = 0x11 * _0x1314f5, _0x20a760['strokeStyle'] = _0x5687d9, _0x20a760['stroke'](), _0x20a760['beginPath'](), _0x20a760['lineCap'] = 'round', _0x20a760['lineJoin'] = 'round', _0x20a760['moveTo'](102.5 * _0x1314f5, 258.75 * _0x1314f5), _0x20a760['bezierCurveTo'](142.5 * _0x1314f5, 200.75 * _0x1314f5, 193.5 * _0x1314f5, 194.75 * _0x1314f5, 211.5 * _0x1314f5, 185.75 * _0x1314f5), _0x20a760['lineWidth'] = 0x11 * _0x1314f5, _0x20a760['strokeStyle'] = _0x5687d9, _0x20a760['stroke'](), _0x20a760['beginPath'](), _0x20a760['lineCap'] = 'round', _0x20a760['lineJoin'] = 'round', _0x20a760['moveTo'](214.5 * _0x1314f5, 192.75 * _0x1314f5), _0x20a760['bezierCurveTo'](276.5 * _0x1314f5, 194.75 * _0x1314f5, 306.5 * _0x1314f5, 233.75 * _0x1314f5, 316.5 * _0x1314f5, 246.75 * _0x1314f5), _0x20a760['lineWidth'] = 0x11 * _0x1314f5, _0x20a760['strokeStyle'] = _0x5687d9, _0x20a760['stroke'](), _0x20a760['beginPath'](), _0x20a760['lineCap'] = 'round', _0x20a760['lineJoin'] = 'round', _0x20a760['moveTo'](219.5 * _0x1314f5, 158.75 * _0x1314f5), _0x20a760['bezierCurveTo'](226.5 * _0x1314f5, 159.75 * _0x1314f5, 227.5 * _0x1314f5, 147.75 * _0x1314f5, 219.5 * _0x1314f5, 145.75 * _0x1314f5), _0x20a760['closePath'](), _0x20a760['lineWidth'] = 0xa * _0x1314f5, _0x20a760['strokeStyle'] = _0x5687d9, _0x20a760['stroke'](), _0x20a760['beginPath'](), _0x20a760['lineCap'] = 'round', _0x20a760['lineJoin'] = 'round', _0x20a760['moveTo'](210.5 * _0x1314f5, 160.75 * _0x1314f5), _0x20a760['bezierCurveTo'](203.5 * _0x1314f5, 159.75 * _0x1314f5, 199.5 * _0x1314f5, 146.75 * _0x1314f5, 210.5 * _0x1314f5, 145.75 * _0x1314f5), _0x20a760['closePath'](), _0x20a760['lineWidth'] = 0xa * _0x1314f5, _0x20a760['strokeStyle'] = _0x5687d9, _0x20a760['stroke'](), _0x3b343e;
}

function create_spider(_0x3aea6b, _0x967ec3) {
    var _0x31b97e = document['createElement']('canvas'),
        _0x26c61c = _0x31b97e['getContext']('2d');
    return _0x31b97e['width'] = 0xee * _0x3aea6b, _0x31b97e['height'] = 0xe6 * _0x3aea6b, _0x26c61c['translate'](-0x5d * _0x3aea6b, -0x6e * _0x3aea6b + 0x5 * _0x3aea6b), _0x26c61c['globalAlpha'] = 0.3, circle(_0x26c61c, 213.5 * _0x3aea6b, 256.75 * _0x3aea6b, 0x4b * _0x3aea6b), fill_path(_0x26c61c, _0x967ec3[0x5]), circle(_0x26c61c, 213.5 * _0x3aea6b, 175.75 * _0x3aea6b, 0x19 * _0x3aea6b), fill_path(_0x26c61c, _0x967ec3[0x5]), _0x26c61c['beginPath'](), _0x26c61c['lineCap'] = 'round', _0x26c61c['lineJoin'] = 'round', _0x26c61c['moveTo'](156.5 * _0x3aea6b, 137.75 * _0x3aea6b), _0x26c61c['bezierCurveTo'](170.5 * _0x3aea6b, 173.75 * _0x3aea6b, 195.5 * _0x3aea6b, 177.75 * _0x3aea6b, 209.5 * _0x3aea6b, 177.75 * _0x3aea6b), _0x26c61c['lineWidth'] = 0x11 * _0x3aea6b, _0x26c61c['strokeStyle'] = _0x967ec3[0x5], _0x26c61c['stroke'](), _0x26c61c['beginPath'](), _0x26c61c['lineCap'] = 'round', _0x26c61c['lineJoin'] = 'round', _0x26c61c['moveTo'](217.5 * _0x3aea6b, 178.75 * _0x3aea6b), _0x26c61c['bezierCurveTo'](251.5 * _0x3aea6b, 177.75 * _0x3aea6b, 263.5 * _0x3aea6b, 153.75 * _0x3aea6b, 270.5 * _0x3aea6b, 140.75 * _0x3aea6b), _0x26c61c['lineWidth'] = 0x11 * _0x3aea6b, _0x26c61c['strokeStyle'] = _0x967ec3[0x5], _0x26c61c['stroke'](), _0x26c61c['beginPath'](), _0x26c61c['lineCap'] = 'round', _0x26c61c['lineJoin'] = 'round', _0x26c61c['moveTo'](130.5 * _0x3aea6b, 124.75 * _0x3aea6b), _0x26c61c['bezierCurveTo'](153.5 * _0x3aea6b, 185.75 * _0x3aea6b, 198.5 * _0x3aea6b, 185.75 * _0x3aea6b, 213.5 * _0x3aea6b, 185.75 * _0x3aea6b), _0x26c61c['lineWidth'] = 0x11 * _0x3aea6b, _0x26c61c['strokeStyle'] = _0x967ec3[0x5], _0x26c61c['stroke'](), _0x26c61c['beginPath'](), _0x26c61c['lineCap'] = 'round', _0x26c61c['lineJoin'] = 'round', _0x26c61c['moveTo'](214.5 * _0x3aea6b, 183.75 * _0x3aea6b), _0x26c61c['bezierCurveTo'](265.5 * _0x3aea6b, 192.75 * _0x3aea6b, 293.5 * _0x3aea6b, 141.75 * _0x3aea6b, 297.5 * _0x3aea6b, 124.75 * _0x3aea6b), _0x26c61c['lineWidth'] = 0x11 * _0x3aea6b, _0x26c61c['strokeStyle'] = _0x967ec3[0x5], _0x26c61c['stroke'](), _0x26c61c['beginPath'](), _0x26c61c['lineCap'] = 'round', _0x26c61c['lineJoin'] = 'round', _0x26c61c['moveTo'](107.5 * _0x3aea6b, 213.75 * _0x3aea6b), _0x26c61c['bezierCurveTo'](151.5 * _0x3aea6b, 190.75 * _0x3aea6b, 198.5 * _0x3aea6b, 184.75 * _0x3aea6b, 210.5 * _0x3aea6b, 184.75 * _0x3aea6b), _0x26c61c['lineWidth'] = 0x11 * _0x3aea6b, _0x26c61c['strokeStyle'] = _0x967ec3[0x5], _0x26c61c['stroke'](), _0x26c61c['beginPath'](), _0x26c61c['lineCap'] = 'round', _0x26c61c['lineJoin'] = 'round', _0x26c61c['moveTo'](212.5 * _0x3aea6b, 187.75 * _0x3aea6b), _0x26c61c['bezierCurveTo'](258.5 * _0x3aea6b, 182.75 * _0x3aea6b, 286.5 * _0x3aea6b, 194.75 * _0x3aea6b, 314.5 * _0x3aea6b, 206.75 * _0x3aea6b), _0x26c61c['lineWidth'] = 0x11 * _0x3aea6b, _0x26c61c['strokeStyle'] = _0x967ec3[0x5], _0x26c61c['stroke'](), _0x26c61c['beginPath'](), _0x26c61c['lineCap'] = 'round', _0x26c61c['lineJoin'] = 'round', _0x26c61c['moveTo'](102.5 * _0x3aea6b, 258.75 * _0x3aea6b), _0x26c61c['bezierCurveTo'](142.5 * _0x3aea6b, 200.75 * _0x3aea6b, 193.5 * _0x3aea6b, 194.75 * _0x3aea6b, 211.5 * _0x3aea6b, 185.75 * _0x3aea6b), _0x26c61c['lineWidth'] = 0x11 * _0x3aea6b, _0x26c61c['strokeStyle'] = _0x967ec3[0x5], _0x26c61c['stroke'](), _0x26c61c['beginPath'](), _0x26c61c['lineCap'] = 'round', _0x26c61c['lineJoin'] = 'round', _0x26c61c['moveTo'](214.5 * _0x3aea6b, 192.75 * _0x3aea6b), _0x26c61c['bezierCurveTo'](276.5 * _0x3aea6b, 194.75 * _0x3aea6b, 306.5 * _0x3aea6b, 233.75 * _0x3aea6b, 316.5 * _0x3aea6b, 246.75 * _0x3aea6b), _0x26c61c['lineWidth'] = 0x11 * _0x3aea6b, _0x26c61c['strokeStyle'] = _0x967ec3[0x5], _0x26c61c['stroke'](), _0x26c61c['translate'](0x0, -0x5), _0x26c61c['globalAlpha'] = 0x1, circle(_0x26c61c, 213.5 * _0x3aea6b, 256.75 * _0x3aea6b, 0x4b * _0x3aea6b), fill_path(_0x26c61c, _0x967ec3[0x3]), circle(_0x26c61c, 213.5 * _0x3aea6b, 175.75 * _0x3aea6b, 0x19 * _0x3aea6b), fill_path(_0x26c61c, _0x967ec3[0x3]), _0x26c61c['beginPath'](), _0x26c61c['lineCap'] = 'round', _0x26c61c['lineJoin'] = 'round', _0x26c61c['moveTo'](219.5 * _0x3aea6b, 158.75 * _0x3aea6b), _0x26c61c['bezierCurveTo'](226.5 * _0x3aea6b, 159.75 * _0x3aea6b, 227.5 * _0x3aea6b, 147.75 * _0x3aea6b, 219.5 * _0x3aea6b, 145.75 * _0x3aea6b), _0x26c61c['closePath'](), _0x26c61c['lineWidth'] = 0xa * _0x3aea6b, _0x26c61c['strokeStyle'] = _0x967ec3[0x3], _0x26c61c['stroke'](), _0x26c61c['beginPath'](), _0x26c61c['lineCap'] = 'round', _0x26c61c['lineJoin'] = 'round', _0x26c61c['moveTo'](210.5 * _0x3aea6b, 160.75 * _0x3aea6b), _0x26c61c['bezierCurveTo'](203.5 * _0x3aea6b, 159.75 * _0x3aea6b, 199.5 * _0x3aea6b, 146.75 * _0x3aea6b, 210.5 * _0x3aea6b, 145.75 * _0x3aea6b), _0x26c61c['closePath'](), _0x26c61c['lineWidth'] = 0xa * _0x3aea6b, _0x26c61c['strokeStyle'] = _0x967ec3[0x3], _0x26c61c['stroke'](), _0x26c61c['beginPath'](), _0x26c61c['lineCap'] = 'round', _0x26c61c['lineJoin'] = 'round', _0x26c61c['moveTo'](219.5 * _0x3aea6b, 158.75 * _0x3aea6b), _0x26c61c['bezierCurveTo'](226.5 * _0x3aea6b, 159.75 * _0x3aea6b, 227.5 * _0x3aea6b, 147.75 * _0x3aea6b, 219.5 * _0x3aea6b, 145.75 * _0x3aea6b), _0x26c61c['closePath'](), _0x26c61c['fillStyle'] = _0x967ec3[0x0], _0x26c61c['fill'](), _0x26c61c['beginPath'](), _0x26c61c['lineCap'] = 'round', _0x26c61c['lineJoin'] = 'round', _0x26c61c['moveTo'](210.5 * _0x3aea6b, 160.75 * _0x3aea6b), _0x26c61c['bezierCurveTo'](203.5 * _0x3aea6b, 159.75 * _0x3aea6b, 199.5 * _0x3aea6b, 146.75 * _0x3aea6b, 210.5 * _0x3aea6b, 145.75 * _0x3aea6b), _0x26c61c['closePath'](), _0x26c61c['fillStyle'] = _0x967ec3[0x0], _0x26c61c['fill'](), _0x26c61c['beginPath'](), _0x26c61c['lineCap'] = 'round', _0x26c61c['lineJoin'] = 'round', _0x26c61c['moveTo'](156.5 * _0x3aea6b, 137.75 * _0x3aea6b), _0x26c61c['bezierCurveTo'](170.5 * _0x3aea6b, 173.75 * _0x3aea6b, 195.5 * _0x3aea6b, 177.75 * _0x3aea6b, 209.5 * _0x3aea6b, 177.75 * _0x3aea6b), _0x26c61c['lineWidth'] = 0x11 * _0x3aea6b, _0x26c61c['strokeStyle'] = _0x967ec3[0x3], _0x26c61c['stroke'](), _0x26c61c['beginPath'](), _0x26c61c['lineCap'] = 'round', _0x26c61c['lineJoin'] = 'round', _0x26c61c['moveTo'](217.5 * _0x3aea6b, 178.75 * _0x3aea6b), _0x26c61c['bezierCurveTo'](251.5 * _0x3aea6b, 177.75 * _0x3aea6b, 263.5 * _0x3aea6b, 153.75 * _0x3aea6b, 270.5 * _0x3aea6b, 140.75 * _0x3aea6b), _0x26c61c['lineWidth'] = 0x11 * _0x3aea6b, _0x26c61c['strokeStyle'] = _0x967ec3[0x3], _0x26c61c['stroke'](), _0x26c61c['beginPath'](), _0x26c61c['lineCap'] = 'round', _0x26c61c['lineJoin'] = 'round', _0x26c61c['moveTo'](130.5 * _0x3aea6b, 124.75 * _0x3aea6b), _0x26c61c['bezierCurveTo'](153.5 * _0x3aea6b, 185.75 * _0x3aea6b, 198.5 * _0x3aea6b, 185.75 * _0x3aea6b, 213.5 * _0x3aea6b, 185.75 * _0x3aea6b), _0x26c61c['lineWidth'] = 0x11 * _0x3aea6b, _0x26c61c['strokeStyle'] = _0x967ec3[0x3], _0x26c61c['stroke'](), _0x26c61c['beginPath'](), _0x26c61c['lineCap'] = 'round', _0x26c61c['lineJoin'] = 'round', _0x26c61c['moveTo'](214.5 * _0x3aea6b, 183.75 * _0x3aea6b), _0x26c61c['bezierCurveTo'](265.5 * _0x3aea6b, 192.75 * _0x3aea6b, 293.5 * _0x3aea6b, 141.75 * _0x3aea6b, 297.5 * _0x3aea6b, 124.75 * _0x3aea6b), _0x26c61c['lineWidth'] = 0x11 * _0x3aea6b, _0x26c61c['strokeStyle'] = _0x967ec3[0x3], _0x26c61c['stroke'](), _0x26c61c['beginPath'](), _0x26c61c['lineCap'] = 'round', _0x26c61c['lineJoin'] = 'round', _0x26c61c['moveTo'](107.5 * _0x3aea6b, 213.75 * _0x3aea6b), _0x26c61c['bezierCurveTo'](151.5 * _0x3aea6b, 190.75 * _0x3aea6b, 198.5 * _0x3aea6b, 184.75 * _0x3aea6b, 210.5 * _0x3aea6b, 184.75 * _0x3aea6b), _0x26c61c['lineWidth'] = 0x11 * _0x3aea6b, _0x26c61c['strokeStyle'] = _0x967ec3[0x3], _0x26c61c['stroke'](), _0x26c61c['beginPath'](), _0x26c61c['lineCap'] = 'round', _0x26c61c['lineJoin'] = 'round', _0x26c61c['moveTo'](212.5 * _0x3aea6b, 187.75 * _0x3aea6b), _0x26c61c['bezierCurveTo'](258.5 * _0x3aea6b, 182.75 * _0x3aea6b, 286.5 * _0x3aea6b, 194.75 * _0x3aea6b, 314.5 * _0x3aea6b, 206.75 * _0x3aea6b), _0x26c61c['lineWidth'] = 0x11 * _0x3aea6b, _0x26c61c['strokeStyle'] = _0x967ec3[0x3], _0x26c61c['stroke'](), _0x26c61c['beginPath'](), _0x26c61c['lineCap'] = 'round', _0x26c61c['lineJoin'] = 'round', _0x26c61c['moveTo'](102.5 * _0x3aea6b, 258.75 * _0x3aea6b), _0x26c61c['bezierCurveTo'](142.5 * _0x3aea6b, 200.75 * _0x3aea6b, 193.5 * _0x3aea6b, 194.75 * _0x3aea6b, 211.5 * _0x3aea6b, 185.75 * _0x3aea6b), _0x26c61c['lineWidth'] = 0x11 * _0x3aea6b, _0x26c61c['strokeStyle'] = _0x967ec3[0x3], _0x26c61c['stroke'](), _0x26c61c['beginPath'](), _0x26c61c['lineCap'] = 'round', _0x26c61c['lineJoin'] = 'round', _0x26c61c['moveTo'](214.5 * _0x3aea6b, 192.75 * _0x3aea6b), _0x26c61c['bezierCurveTo'](276.5 * _0x3aea6b, 194.75 * _0x3aea6b, 306.5 * _0x3aea6b, 233.75 * _0x3aea6b, 316.5 * _0x3aea6b, 246.75 * _0x3aea6b), _0x26c61c['lineWidth'] = 0x11 * _0x3aea6b, _0x26c61c['strokeStyle'] = _0x967ec3[0x3], _0x26c61c['stroke'](), _0x26c61c['beginPath'](), _0x26c61c['lineCap'] = 'round', _0x26c61c['lineJoin'] = 'round', _0x26c61c['moveTo'](156.5 * _0x3aea6b, 137.75 * _0x3aea6b), _0x26c61c['bezierCurveTo'](170.5 * _0x3aea6b, 173.75 * _0x3aea6b, 195.5 * _0x3aea6b, 177.75 * _0x3aea6b, 209.5 * _0x3aea6b, 177.75 * _0x3aea6b), _0x26c61c['lineWidth'] = 0x8 * _0x3aea6b, _0x26c61c['strokeStyle'] = _0x967ec3[0x0], _0x26c61c['stroke'](), _0x26c61c['beginPath'](), _0x26c61c['lineCap'] = 'round', _0x26c61c['lineJoin'] = 'round', _0x26c61c['moveTo'](217.5 * _0x3aea6b, 178.75 * _0x3aea6b), _0x26c61c['bezierCurveTo'](251.5 * _0x3aea6b, 177.75 * _0x3aea6b, 263.5 * _0x3aea6b, 153.75 * _0x3aea6b, 270.5 * _0x3aea6b, 140.75 * _0x3aea6b), _0x26c61c['lineWidth'] = 0x8 * _0x3aea6b, _0x26c61c['strokeStyle'] = _0x967ec3[0x0], _0x26c61c['stroke'](), _0x26c61c['beginPath'](), _0x26c61c['lineCap'] = 'round', _0x26c61c['lineJoin'] = 'round', _0x26c61c['moveTo'](130.5 * _0x3aea6b, 124.75 * _0x3aea6b), _0x26c61c['bezierCurveTo'](153.5 * _0x3aea6b, 185.75 * _0x3aea6b, 198.5 * _0x3aea6b, 185.75 * _0x3aea6b, 213.5 * _0x3aea6b, 185.75 * _0x3aea6b), _0x26c61c['lineWidth'] = 0x8 * _0x3aea6b, _0x26c61c['strokeStyle'] = _0x967ec3[0x0], _0x26c61c['stroke'](), _0x26c61c['beginPath'](), _0x26c61c['lineCap'] = 'round', _0x26c61c['lineJoin'] = 'round', _0x26c61c['moveTo'](214.5 * _0x3aea6b, 183.75 * _0x3aea6b), _0x26c61c['bezierCurveTo'](265.5 * _0x3aea6b, 192.75 * _0x3aea6b, 293.5 * _0x3aea6b, 141.75 * _0x3aea6b, 297.5 * _0x3aea6b, 124.75 * _0x3aea6b), _0x26c61c['lineWidth'] = 0x8 * _0x3aea6b, _0x26c61c['strokeStyle'] = _0x967ec3[0x0], _0x26c61c['stroke'](), _0x26c61c['beginPath'](), _0x26c61c['lineCap'] = 'round', _0x26c61c['lineJoin'] = 'round', _0x26c61c['moveTo'](107.5 * _0x3aea6b, 213.75 * _0x3aea6b), _0x26c61c['bezierCurveTo'](151.5 * _0x3aea6b, 190.75 * _0x3aea6b, 198.5 * _0x3aea6b, 184.75 * _0x3aea6b, 210.5 * _0x3aea6b, 184.75 * _0x3aea6b), _0x26c61c['lineWidth'] = 0x8 * _0x3aea6b, _0x26c61c['strokeStyle'] = _0x967ec3[0x0], _0x26c61c['stroke'](), _0x26c61c['beginPath'](), _0x26c61c['lineCap'] = 'round', _0x26c61c['lineJoin'] = 'round', _0x26c61c['moveTo'](212.5 * _0x3aea6b, 187.75 * _0x3aea6b), _0x26c61c['bezierCurveTo'](258.5 * _0x3aea6b, 182.75 * _0x3aea6b, 286.5 * _0x3aea6b, 194.75 * _0x3aea6b, 314.5 * _0x3aea6b, 206.75 * _0x3aea6b), _0x26c61c['lineWidth'] = 0x8 * _0x3aea6b, _0x26c61c['strokeStyle'] = _0x967ec3[0x0], _0x26c61c['stroke'](), _0x26c61c['beginPath'](), _0x26c61c['lineCap'] = 'round', _0x26c61c['lineJoin'] = 'round', _0x26c61c['moveTo'](102.5 * _0x3aea6b, 258.75 * _0x3aea6b), _0x26c61c['bezierCurveTo'](142.5 * _0x3aea6b, 200.75 * _0x3aea6b, 193.5 * _0x3aea6b, 194.75 * _0x3aea6b, 211.5 * _0x3aea6b, 185.75 * _0x3aea6b), _0x26c61c['lineWidth'] = 0x8 * _0x3aea6b, _0x26c61c['strokeStyle'] = _0x967ec3[0x0], _0x26c61c['stroke'](), _0x26c61c['beginPath'](), _0x26c61c['lineCap'] = 'round', _0x26c61c['lineJoin'] = 'round', _0x26c61c['moveTo'](214.5 * _0x3aea6b, 192.75 * _0x3aea6b), _0x26c61c['bezierCurveTo'](276.5 * _0x3aea6b, 194.75 * _0x3aea6b, 306.5 * _0x3aea6b, 233.75 * _0x3aea6b, 316.5 * _0x3aea6b, 246.75 * _0x3aea6b), _0x26c61c['lineWidth'] = 0x8 * _0x3aea6b, _0x26c61c['strokeStyle'] = _0x967ec3[0x0], _0x26c61c['stroke'](), circle(_0x26c61c, 213.5 * _0x3aea6b, 256.75 * _0x3aea6b, 0x46 * _0x3aea6b), fill_path(_0x26c61c, _0x967ec3[0x0]), circle(_0x26c61c, 213.5 * _0x3aea6b, 175.75 * _0x3aea6b, 0x14 * _0x3aea6b), fill_path(_0x26c61c, _0x967ec3[0x0]), circle(_0x26c61c, 0xde * _0x3aea6b, 0xa6 * _0x3aea6b, 0x5 * _0x3aea6b), _0x26c61c['fillStyle'] = _0x967ec3[0x2], _0x26c61c['fill'](), circle(_0x26c61c, 0xcd * _0x3aea6b, 0xa6 * _0x3aea6b, 0x5 * _0x3aea6b), _0x26c61c['fillStyle'] = _0x967ec3[0x2], _0x26c61c['fill'](), circle(_0x26c61c, 206.2 * _0x3aea6b, 0xa7 * _0x3aea6b, 2.5 * _0x3aea6b), _0x26c61c['fillStyle'] = _0x967ec3[0x4], _0x26c61c['fill'](), circle(_0x26c61c, 223.2 * _0x3aea6b, 0xa7 * _0x3aea6b, 2.5 * _0x3aea6b), _0x26c61c['fillStyle'] = _0x967ec3[0x4], _0x26c61c['fill'](), _0x26c61c['save'](), _0x26c61c['translate'](213.5 * _0x3aea6b, 293.75 * _0x3aea6b), _0x26c61c['rotate'](0.76), round_rect(_0x26c61c, -0x16 * _0x3aea6b, -0x15 * _0x3aea6b, 0x2c * _0x3aea6b, 0x2a * _0x3aea6b, 0x6 * _0x3aea6b), _0x26c61c['restore'](), _0x26c61c['fillStyle'] = _0x967ec3[0x1], _0x26c61c['fill'](), _0x26c61c['save'](), _0x26c61c['translate'](212.5 * _0x3aea6b, 258.25 * _0x3aea6b), _0x26c61c['rotate'](0.8), round_rect(_0x26c61c, -0xf * _0x3aea6b, -14.5 * _0x3aea6b, 0x1e * _0x3aea6b, 0x1d * _0x3aea6b, 0x6 * _0x3aea6b), _0x26c61c['restore'](), _0x26c61c['fillStyle'] = _0x967ec3[0x1], _0x26c61c['fill'](), _0x31b97e;
}

function create_web(_0xbe16bb, _0x24f1ab) {
    var _0x2d8598 = document['createElement']('canvas'),
        _0x14931f = _0x2d8598['getContext']('2d');
    return _0x2d8598['width'] = 0x1c2 * _0xbe16bb, _0x2d8598['height'] = 0x1d6 * _0xbe16bb, _0x14931f['beginPath'](), _0x14931f['lineCap'] = 'round', _0x14931f['lineJoin'] = 'round', _0x14931f['moveTo'](226.5 * _0xbe16bb, 91.546875 * _0xbe16bb), _0x14931f['bezierCurveTo'](254.5 * _0xbe16bb, 115.546875 * _0xbe16bb, 261.5 * _0xbe16bb, 115.546875 * _0xbe16bb, 294.5 * _0xbe16bb, 109.546875 * _0xbe16bb), _0x14931f['bezierCurveTo'](299.5 * _0xbe16bb, 141.546875 * _0xbe16bb, 315.5 * _0xbe16bb, 151.546875 * _0xbe16bb, 344.5 * _0xbe16bb, 158.546875 * _0xbe16bb), _0x14931f['bezierCurveTo'](330.5 * _0xbe16bb, 195.546875 * _0xbe16bb, 341.5 * _0xbe16bb, 207.546875 * _0xbe16bb, 361.5 * _0xbe16bb, 226.546875 * _0xbe16bb), _0x14931f['bezierCurveTo'](331.5 * _0xbe16bb, 251.546875 * _0xbe16bb, 335.5 * _0xbe16bb, 270.546875 * _0xbe16bb, 342.5 * _0xbe16bb, 295.546875 * _0xbe16bb), _0x14931f['bezierCurveTo'](300.5 * _0xbe16bb, 296.546875 * _0xbe16bb, 293.5 * _0xbe16bb, 325.546875 * _0xbe16bb, 292.5 * _0xbe16bb, 344.546875 * _0xbe16bb), _0x14931f['bezierCurveTo'](257.5 * _0xbe16bb, 326.546875 * _0xbe16bb, 242.5 * _0xbe16bb, 338.546875 * _0xbe16bb, 224.5 * _0xbe16bb, 361.546875 * _0xbe16bb), _0x14931f['bezierCurveTo'](200.5 * _0xbe16bb, 329.546875 * _0xbe16bb, 180.5 * _0xbe16bb, 334.546875 * _0xbe16bb, 155.5 * _0xbe16bb, 341.546875 * _0xbe16bb), _0x14931f['bezierCurveTo'](146.5 * _0xbe16bb, 307.546875 * _0xbe16bb, 140.5 * _0xbe16bb, 302.546875 * _0xbe16bb, 107.5 * _0xbe16bb, 292.546875 * _0xbe16bb), _0x14931f['bezierCurveTo'](117.5 * _0xbe16bb, 253.546875 * _0xbe16bb, 109.5 * _0xbe16bb, 244.546875 * _0xbe16bb, 89.5 * _0xbe16bb, 224.546875 * _0xbe16bb), _0x14931f['bezierCurveTo'](118.5 * _0xbe16bb, 191.546875 * _0xbe16bb, 114.5 * _0xbe16bb, 182.546875 * _0xbe16bb, 108.5 * _0xbe16bb, 156.546875 * _0xbe16bb), _0x14931f['bezierCurveTo'](143.5 * _0xbe16bb, 149.546875 * _0xbe16bb, 150.5 * _0xbe16bb, 136.546875 * _0xbe16bb, 157.5 * _0xbe16bb, 106.546875 * _0xbe16bb), _0x14931f['bezierCurveTo'](202.5 * _0xbe16bb, 120.546875 * _0xbe16bb, 211.5 * _0xbe16bb, 103.546875 * _0xbe16bb, 228.5 * _0xbe16bb, 91.546875 * _0xbe16bb), _0x14931f['closePath'](), fill_path(_0x14931f, undefined, _0x24f1ab[0x0], 0x4), _0x14931f['beginPath'](), _0x14931f['lineCap'] = 'round', _0x14931f['lineJoin'] = 'round', _0x14931f['moveTo'](224.5 * _0xbe16bb, 129.546875 * _0xbe16bb), _0x14931f['bezierCurveTo'](247.5 * _0xbe16bb, 147.546875 * _0xbe16bb, 252.5 * _0xbe16bb, 143.546875 * _0xbe16bb, 274.5 * _0xbe16bb, 141.546875 * _0xbe16bb), _0x14931f['bezierCurveTo'](279.5 * _0xbe16bb, 163.546875 * _0xbe16bb, 289.5 * _0xbe16bb, 168.546875 * _0xbe16bb, 311.5 * _0xbe16bb, 178.546875 * _0xbe16bb), _0x14931f['bezierCurveTo'](301.5 * _0xbe16bb, 199.546875 * _0xbe16bb, 307.5 * _0xbe16bb, 213.546875 * _0xbe16bb, 323.5 * _0xbe16bb, 226.546875 * _0xbe16bb), _0x14931f['bezierCurveTo'](303.5 * _0xbe16bb, 240.546875 * _0xbe16bb, 303.5 * _0xbe16bb, 255.546875 * _0xbe16bb, 312.5 * _0xbe16bb, 275.546875 * _0xbe16bb), _0x14931f['bezierCurveTo'](281.5 * _0xbe16bb, 278.546875 * _0xbe16bb, 276.5 * _0xbe16bb, 291.546875 * _0xbe16bb, 272.5 * _0xbe16bb, 313.546875 * _0xbe16bb), _0x14931f['bezierCurveTo'](248.5 * _0xbe16bb, 301.546875 * _0xbe16bb, 239.5 * _0xbe16bb, 310.546875 * _0xbe16bb, 224.5 * _0xbe16bb, 324.546875 * _0xbe16bb), _0x14931f['bezierCurveTo'](211.5 * _0xbe16bb, 304.546875 * _0xbe16bb, 199.5 * _0xbe16bb, 301.546875 * _0xbe16bb, 176.5 * _0xbe16bb, 309.546875 * _0xbe16bb), _0x14931f['bezierCurveTo'](165.5 * _0xbe16bb, 276.546875 * _0xbe16bb, 159.5 * _0xbe16bb, 275.546875 * _0xbe16bb, 138.5 * _0xbe16bb, 274.546875 * _0xbe16bb), _0x14931f['bezierCurveTo'](148.5 * _0xbe16bb, 248.546875 * _0xbe16bb, 140.5 * _0xbe16bb, 237.546875 * _0xbe16bb, 125.5 * _0xbe16bb, 225.546875 * _0xbe16bb), _0x14931f['bezierCurveTo'](145.5 * _0xbe16bb, 205.546875 * _0xbe16bb, 146.5 * _0xbe16bb, 195.546875 * _0xbe16bb, 142.5 * _0xbe16bb, 176.546875 * _0xbe16bb), _0x14931f['bezierCurveTo'](173.5 * _0xbe16bb, 164.546875 * _0xbe16bb, 173.5 * _0xbe16bb, 155.546875 * _0xbe16bb, 178.5 * _0xbe16bb, 140.546875 * _0xbe16bb), _0x14931f['bezierCurveTo'](214.5 * _0xbe16bb, 143.546875 * _0xbe16bb, 214.5 * _0xbe16bb, 135.546875 * _0xbe16bb, 226.5 * _0xbe16bb, 129.546875 * _0xbe16bb), _0x14931f['closePath'](), fill_path(_0x14931f, undefined, _0x24f1ab[0x0], 0x4), _0x14931f['beginPath'](), _0x14931f['lineCap'] = 'round', _0x14931f['lineJoin'] = 'round', _0x14931f['moveTo'](224.5 * _0xbe16bb, 160.546875 * _0xbe16bb), _0x14931f['bezierCurveTo'](236.5 * _0xbe16bb, 168.546875 * _0xbe16bb, 239.5 * _0xbe16bb, 168.546875 * _0xbe16bb, 258.5 * _0xbe16bb, 168.546875 * _0xbe16bb), _0x14931f['bezierCurveTo'](261.5 * _0xbe16bb, 185.546875 * _0xbe16bb, 268.5 * _0xbe16bb, 187.546875 * _0xbe16bb, 282.5 * _0xbe16bb, 192.546875 * _0xbe16bb), _0x14931f['bezierCurveTo'](277.5 * _0xbe16bb, 208.546875 * _0xbe16bb, 283.5 * _0xbe16bb, 216.546875 * _0xbe16bb, 289.5 * _0xbe16bb, 228.546875 * _0xbe16bb), _0x14931f['bezierCurveTo'](277.5 * _0xbe16bb, 243.546875 * _0xbe16bb, 280.5 * _0xbe16bb, 253.546875 * _0xbe16bb, 281.5 * _0xbe16bb, 260.546875 * _0xbe16bb), _0x14931f['bezierCurveTo'](264.5 * _0xbe16bb, 260.546875 * _0xbe16bb, 259.5 * _0xbe16bb, 269.546875 * _0xbe16bb, 256.5 * _0xbe16bb, 283.546875 * _0xbe16bb), _0x14931f['bezierCurveTo'](244.5 * _0xbe16bb, 276.546875 * _0xbe16bb, 232.5 * _0xbe16bb, 283.546875 * _0xbe16bb, 223.5 * _0xbe16bb, 291.546875 * _0xbe16bb), _0x14931f['bezierCurveTo'](213.5 * _0xbe16bb, 276.546875 * _0xbe16bb, 205.5 * _0xbe16bb, 278.546875 * _0xbe16bb, 190.5 * _0xbe16bb, 281.546875 * _0xbe16bb), _0x14931f['bezierCurveTo'](181.5 * _0xbe16bb, 262.546875 * _0xbe16bb, 173.5 * _0xbe16bb, 259.546875 * _0xbe16bb, 165.5 * _0xbe16bb, 258.546875 * _0xbe16bb), _0x14931f['bezierCurveTo'](169.5 * _0xbe16bb, 239.546875 * _0xbe16bb, 167.5 * _0xbe16bb, 233.546875 * _0xbe16bb, 157.5 * _0xbe16bb, 225.546875 * _0xbe16bb), _0x14931f['bezierCurveTo'](169.5 * _0xbe16bb, 208.546875 * _0xbe16bb, 170.5 * _0xbe16bb, 203.546875 * _0xbe16bb, 168.5 * _0xbe16bb, 192.546875 * _0xbe16bb), _0x14931f['bezierCurveTo'](181.5 * _0xbe16bb, 187.546875 * _0xbe16bb, 188.5 * _0xbe16bb, 179.546875 * _0xbe16bb, 192.5 * _0xbe16bb, 168.546875 * _0xbe16bb), _0x14931f['bezierCurveTo'](216.5 * _0xbe16bb, 170.546875 * _0xbe16bb, 218.5 * _0xbe16bb, 163.546875 * _0xbe16bb, 225.5 * _0xbe16bb, 160.546875 * _0xbe16bb), _0x14931f['closePath'](), fill_path(_0x14931f, undefined, _0x24f1ab[0x0], 0x4), _0x14931f['beginPath'](), _0x14931f['lineCap'] = 'round', _0x14931f['lineJoin'] = 'round', _0x14931f['moveTo'](205.5 * _0xbe16bb, 194.546875 * _0xbe16bb), _0x14931f['bezierCurveTo'](216.5 * _0xbe16bb, 192.546875 * _0xbe16bb, 219.5 * _0xbe16bb, 191.546875 * _0xbe16bb, 225.5 * _0xbe16bb, 185.546875 * _0xbe16bb), _0x14931f['bezierCurveTo'](232.5 * _0xbe16bb, 193.546875 * _0xbe16bb, 237.5 * _0xbe16bb, 191.546875 * _0xbe16bb, 246.5 * _0xbe16bb, 192.546875 * _0xbe16bb), _0x14931f['bezierCurveTo'](249.5 * _0xbe16bb, 202.546875 * _0xbe16bb, 253.5 * _0xbe16bb, 205.546875 * _0xbe16bb, 258.5 * _0xbe16bb, 207.546875 * _0xbe16bb), _0x14931f['bezierCurveTo'](259.5 * _0xbe16bb, 222.546875 * _0xbe16bb, 256.5 * _0xbe16bb, 223.546875 * _0xbe16bb, 265.5 * _0xbe16bb, 226.546875 * _0xbe16bb), _0x14931f['bezierCurveTo'](256.5 * _0xbe16bb, 231.546875 * _0xbe16bb, 255.5 * _0xbe16bb, 241.546875 * _0xbe16bb, 259.5 * _0xbe16bb, 248.546875 * _0xbe16bb), _0x14931f['bezierCurveTo'](250.5 * _0xbe16bb, 245.546875 * _0xbe16bb, 245.5 * _0xbe16bb, 252.546875 * _0xbe16bb, 243.5 * _0xbe16bb, 260.546875 * _0xbe16bb), _0x14931f['bezierCurveTo'](234.5 * _0xbe16bb, 256.546875 * _0xbe16bb, 229.5 * _0xbe16bb, 258.546875 * _0xbe16bb, 223.5 * _0xbe16bb, 265.546875 * _0xbe16bb), _0x14931f['bezierCurveTo'](218.5 * _0xbe16bb, 255.546875 * _0xbe16bb, 213.5 * _0xbe16bb, 257.546875 * _0xbe16bb, 204.5 * _0xbe16bb, 261.546875 * _0xbe16bb), _0x14931f['bezierCurveTo'](203.5 * _0xbe16bb, 251.546875 * _0xbe16bb, 198.5 * _0xbe16bb, 248.546875 * _0xbe16bb, 189.5 * _0xbe16bb, 244.546875 * _0xbe16bb), _0x14931f['bezierCurveTo'](194.5 * _0xbe16bb, 237.546875 * _0xbe16bb, 192.5 * _0xbe16bb, 231.546875 * _0xbe16bb, 184.5 * _0xbe16bb, 225.546875 * _0xbe16bb), _0x14931f['bezierCurveTo'](191.5 * _0xbe16bb, 211.546875 * _0xbe16bb, 192.5 * _0xbe16bb, 209.546875 * _0xbe16bb, 190.5 * _0xbe16bb, 204.546875 * _0xbe16bb), _0x14931f['bezierCurveTo'](200.5 * _0xbe16bb, 204.546875 * _0xbe16bb, 204.5 * _0xbe16bb, 198.546875 * _0xbe16bb, 207.5 * _0xbe16bb, 194.546875 * _0xbe16bb), _0x14931f['closePath'](), fill_path(_0x14931f, undefined, _0x24f1ab[0x0], 0x4), _0x14931f['beginPath'](), _0x14931f['lineCap'] = 'round', _0x14931f['lineJoin'] = 'round', _0x14931f['moveTo'](149.5 * _0xbe16bb, 93.546875 * _0xbe16bb), _0x14931f['bezierCurveTo'](287.5 * _0xbe16bb, 332.546875 * _0xbe16bb, 0xe2 * _0xbe16bb, 225.546875 * _0xbe16bb, 302.5 * _0xbe16bb, 357.546875 * _0xbe16bb), _0x14931f['closePath'](), fill_path(_0x14931f, undefined, _0x24f1ab[0x0], 0x4), _0x14931f['beginPath'](), _0x14931f['lineCap'] = 'round', _0x14931f['lineJoin'] = 'round', _0x14931f['moveTo'](224.5 * _0xbe16bb, 66.546875 * _0xbe16bb), _0x14931f['bezierCurveTo'](224.5 * _0xbe16bb, 223.546875 * _0xbe16bb, 224.5 * _0xbe16bb, 223.546875 * _0xbe16bb, 224.5 * _0xbe16bb, 380.546875 * _0xbe16bb), _0x14931f['closePath'](), fill_path(_0x14931f, undefined, _0x24f1ab[0x0], 0x4), _0x14931f['beginPath'](), _0x14931f['lineCap'] = 'round', _0x14931f['lineJoin'] = 'round', _0x14931f['moveTo'](302.5 * _0xbe16bb, 88.546875 * _0xbe16bb), _0x14931f['bezierCurveTo'](222.5 * _0xbe16bb, 227.546875 * _0xbe16bb, 222.5 * _0xbe16bb, 227.546875 * _0xbe16bb, 142.5 * _0xbe16bb, 366.546875 * _0xbe16bb), _0x14931f['closePath'](), fill_path(_0x14931f, undefined, _0x24f1ab[0x0], 0x4), _0x14931f['beginPath'](), _0x14931f['lineCap'] = 'round', _0x14931f['lineJoin'] = 'round', _0x14931f['moveTo'](361.5 * _0xbe16bb, 147.546875 * _0xbe16bb), _0x14931f['bezierCurveTo'](0xdf * _0xbe16bb, 226.546875 * _0xbe16bb, 0xdf * _0xbe16bb, 226.546875 * _0xbe16bb, 84.5 * _0xbe16bb, 305.546875 * _0xbe16bb), _0x14931f['closePath'](), fill_path(_0x14931f, undefined, _0x24f1ab[0x0], 0x4), _0x14931f['beginPath'](), _0x14931f['lineCap'] = 'round', _0x14931f['lineJoin'] = 'round', _0x14931f['moveTo'](379.5 * _0xbe16bb, 225.546875 * _0xbe16bb), _0x14931f['bezierCurveTo'](0xdd * _0xbe16bb, 225.546875 * _0xbe16bb, 0xdd * _0xbe16bb, 225.546875 * _0xbe16bb, 62.5 * _0xbe16bb, 225.546875 * _0xbe16bb), _0x14931f['closePath'](), fill_path(_0x14931f, undefined, _0x24f1ab[0x0], 0x4), _0x14931f['beginPath'](), _0x14931f['lineCap'] = 'round', _0x14931f['lineJoin'] = 'round', _0x14931f['moveTo'](90.5 * _0xbe16bb, 147.546875 * _0xbe16bb), _0x14931f['bezierCurveTo'](226.5 * _0xbe16bb, 226.546875 * _0xbe16bb, 226.5 * _0xbe16bb, 226.546875 * _0xbe16bb, 362.5 * _0xbe16bb, 305.546875 * _0xbe16bb), _0x14931f['closePath'](), fill_path(_0x14931f, undefined, _0x24f1ab[0x0], 0x4), _0x2d8598;
}

function create_dead_box(_0x3a8140, _0x412d93, _0x2b4360) {
    var _0x275a36 = document['createElement']('canvas'),
        _0x909daf = _0x275a36['getContext']('2d');
    _0x275a36['width'] = 0x190 * _0x3a8140, _0x275a36['height'] = 0x190 * _0x3a8140, _0x909daf['save'](), _0x909daf['translate'](202.5 * _0x3a8140, 147.5 * _0x3a8140), round_rect(_0x909daf, -96.5 * _0x3a8140, -21.5 * _0x3a8140, 0xc1 * _0x3a8140, 0xc1 * _0x3a8140, 0x0 * _0x3a8140), _0x909daf['restore'](), fill_path(_0x909daf, _0x412d93[0x0], _0x412d93[0x1], 0xc * _0x3a8140), _0x909daf['save'](), _0x909daf['translate'](202.5 * _0x3a8140, 190.5 * _0x3a8140), round_rect(_0x909daf, 96.5 * _0x3a8140, -21.5 * _0x3a8140, -0xc1 * _0x3a8140, 0x2b * _0x3a8140, 0x0 * _0x3a8140), _0x909daf['restore'](), fill_path(_0x909daf, _0x412d93[0x2], _0x412d93[0x1], 0xc * _0x3a8140), _0x909daf['save'](), _0x909daf['save'](), _0x909daf['translate'](202.5 * _0x3a8140, 233.5 * _0x3a8140), round_rect(_0x909daf, -96.5 * _0x3a8140, -20.5 * _0x3a8140, 0xc1 * _0x3a8140, 0x29 * _0x3a8140, 0x0 * _0x3a8140), _0x909daf['restore'](), fill_path(_0x909daf, _0x412d93[0x3], _0x412d93[0x1], 0xc * _0x3a8140), _0x909daf['save'](), _0x909daf['translate'](202.5 * _0x3a8140, 0x113 * _0x3a8140), round_rect(_0x909daf, 96.5 * _0x3a8140, -0x15 * _0x3a8140, -0xc1 * _0x3a8140, 0x2a * _0x3a8140, 0x0 * _0x3a8140), _0x909daf['restore'](), fill_path(_0x909daf, _0x412d93[0x0], _0x412d93[0x1], 0xc * _0x3a8140), _0x909daf['save'](), _0x909daf['translate'](0xc9 * _0x3a8140, 0xd4 * _0x3a8140), _0x909daf['rotate'](8.64), round_rect(_0x909daf, -0x74 * _0x3a8140, -0x16 * _0x3a8140, 0xe8 * _0x3a8140, 0x2c * _0x3a8140, 0xa * _0x3a8140), _0x909daf['restore'](), fill_path(_0x909daf, _0x412d93[0x3], _0x412d93[0x1], 0xc * _0x3a8140), _0x909daf['save'](), _0x909daf['translate'](203.5 * _0x3a8140, 121.5 * _0x3a8140), round_rect(_0x909daf, -115.5 * _0x3a8140, -20.5 * _0x3a8140, 0xe7 * _0x3a8140, 0x29 * _0x3a8140, 0xa * _0x3a8140), _0x909daf['restore'](), fill_path(_0x909daf, _0x412d93[0x3], _0x412d93[0x1], 0xc * _0x3a8140), _0x909daf['save'](), _0x909daf['translate'](203.5 * _0x3a8140, 0x12b * _0x3a8140), round_rect(_0x909daf, -115.5 * _0x3a8140, -0x14 * _0x3a8140, 0xe7 * _0x3a8140, 0x28 * _0x3a8140, 0xa * _0x3a8140), _0x909daf['restore'](), fill_path(_0x909daf, _0x412d93[0x3], _0x412d93[0x1], 0xc * _0x3a8140), _0x909daf['save'](), _0x909daf['translate'](298.5 * _0x3a8140, 0xd2 * _0x3a8140), round_rect(_0x909daf, -20.5 * _0x3a8140, -0x6d * _0x3a8140, 0x29 * _0x3a8140, 0xda * _0x3a8140, 0xa * _0x3a8140), _0x909daf['restore'](), fill_path(_0x909daf, _0x412d93[0x3], _0x412d93[0x1], 0xc * _0x3a8140), _0x909daf['save'](), _0x909daf['translate'](108.5 * _0x3a8140, 0xd2 * _0x3a8140), round_rect(_0x909daf, -20.5 * _0x3a8140, -0x6d * _0x3a8140, 0x29 * _0x3a8140, 0xda * _0x3a8140, 0xa * _0x3a8140), _0x909daf['restore'](), fill_path(_0x909daf, _0x412d93[0x3], _0x412d93[0x1], 0xc * _0x3a8140), _0x909daf['save'](), _0x909daf['translate'](0xcc * _0x3a8140, 121.5 * _0x3a8140), round_rect(_0x909daf, -0x5c * _0x3a8140, -9.5 * _0x3a8140, 0xb8 * _0x3a8140, 0x13 * _0x3a8140, 0xa * _0x3a8140), _0x909daf['restore'](), fill_path(_0x909daf, _0x412d93[0x3], _0x412d93[0x3], 0xa * _0x3a8140), _0x909daf['save'](), _0x909daf['translate'](0xc5 * _0x3a8140, 0x12b * _0x3a8140), round_rect(_0x909daf, 0x55 * _0x3a8140, -0x9 * _0x3a8140, -0xaa * _0x3a8140, 0x12 * _0x3a8140, 0xa * _0x3a8140), _0x909daf['restore'](), fill_path(_0x909daf, _0x412d93[0x3], _0x412d93[0x3], 0xa * _0x3a8140), _0x909daf['beginPath'](), _0x909daf['lineCap'] = 'round', _0x909daf['lineJoin'] = 'round', _0x909daf['moveTo'](0x5e * _0x3a8140, 0x13d * _0x3a8140), _0x909daf['bezierCurveTo'](110.5 * _0x3a8140, 299.5 * _0x3a8140, 110.5 * _0x3a8140, 299.5 * _0x3a8140, 0x7f * _0x3a8140, 0x11a * _0x3a8140), _0x909daf['closePath'](), fill_path(_0x909daf, undefined, _0x412d93[0x1], 0xc * _0x3a8140), _0x909daf['beginPath'](), _0x909daf['lineCap'] = 'round', _0x909daf['lineJoin'] = 'round', _0x909daf['moveTo'](0x117 * _0x3a8140, 0x8e * _0x3a8140), _0x909daf['bezierCurveTo'](296.5 * _0x3a8140, 125.5 * _0x3a8140, 296.5 * _0x3a8140, 125.5 * _0x3a8140, 0x13a * _0x3a8140, 0x6d * _0x3a8140), _0x909daf['closePath'](), fill_path(_0x909daf, undefined, _0x412d93[0x1], 0xc * _0x3a8140), _0x909daf['beginPath'](), _0x909daf['lineCap'] = 'round', _0x909daf['lineJoin'] = 'round', _0x909daf['moveTo'](0x5d * _0x3a8140, 0x6a * _0x3a8140), _0x909daf['bezierCurveTo'](110.5 * _0x3a8140, 0x7c * _0x3a8140, 110.5 * _0x3a8140, 0x7c * _0x3a8140, 0x80 * _0x3a8140, 0x8e * _0x3a8140), _0x909daf['closePath'](), fill_path(_0x909daf, undefined, _0x412d93[0x1], 0xc * _0x3a8140), _0x909daf['beginPath'](), _0x909daf['lineCap'] = 'round', _0x909daf['lineJoin'] = 'round', _0x909daf['moveTo'](0x119 * _0x3a8140, 0x11a * _0x3a8140), _0x909daf['bezierCurveTo'](0x128 * _0x3a8140, 297.5 * _0x3a8140, 0x128 * _0x3a8140, 297.5 * _0x3a8140, 0x137 * _0x3a8140, 0x139 * _0x3a8140), _0x909daf['closePath'](), fill_path(_0x909daf, undefined, _0x412d93[0x1], 0xc * _0x3a8140);
    if (_0x2b4360 == 0x0) _0x909daf['scale'](0x2, 0x2), _0x909daf['translate'](-0x7 * _0x3a8140, 0x37 * _0x3a8140), _0x909daf['rotate'](-0.5), _0x909daf['beginPath'](), _0x909daf['lineCap'] = 'round', _0x909daf['lineJoin'] = 'round', _0x909daf['moveTo'](0x3c * _0x3a8140, 0x2f * _0x3a8140), _0x909daf['bezierCurveTo'](0x51 * _0x3a8140, 0x2e * _0x3a8140, 0x55 * _0x3a8140, 0x2f * _0x3a8140, 0x53 * _0x3a8140, 0x3f * _0x3a8140), _0x909daf['bezierCurveTo'](0x53 * _0x3a8140, 0x48 * _0x3a8140, 0x53 * _0x3a8140, 0x4b * _0x3a8140, 0x48 * _0x3a8140, 0x49 * _0x3a8140), _0x909daf['bezierCurveTo'](0x44 * _0x3a8140, 0x50 * _0x3a8140, 0x45 * _0x3a8140, 0x52 * _0x3a8140, 0x42 * _0x3a8140, 0x49 * _0x3a8140), _0x909daf['bezierCurveTo'](0x3e * _0x3a8140, 0x51 * _0x3a8140, 0x3d * _0x3a8140, 0x52 * _0x3a8140, 0x3b * _0x3a8140, 0x49 * _0x3a8140), _0x909daf['bezierCurveTo'](0x36 * _0x3a8140, 0x51 * _0x3a8140, 0x37 * _0x3a8140, 0x51 * _0x3a8140, 0x34 * _0x3a8140, 0x4a * _0x3a8140), _0x909daf['bezierCurveTo'](0x26 * _0x3a8140, 0x4c * _0x3a8140, 0x29 * _0x3a8140, 0x4a * _0x3a8140, 0x28 * _0x3a8140, 0x42 * _0x3a8140), _0x909daf['bezierCurveTo'](0x26 * _0x3a8140, 0x2d * _0x3a8140, 0x27 * _0x3a8140, 0x31 * _0x3a8140, 0x3b * _0x3a8140, 0x2f * _0x3a8140), _0x909daf['closePath'](), fill_path(_0x909daf, _0x412d93[0x4], _0x412d93[0x4], 0x5 * _0x3a8140), _0x909daf['beginPath'](), _0x909daf['lineCap'] = 'round', _0x909daf['lineJoin'] = 'round', _0x909daf['moveTo'](0x44 * _0x3a8140, 0x36 * _0x3a8140), _0x909daf['bezierCurveTo'](0x4b * _0x3a8140, 0x36 * _0x3a8140, 0x4d * _0x3a8140, 0x3e * _0x3a8140, 0x47 * _0x3a8140, 0x40 * _0x3a8140), _0x909daf['bezierCurveTo'](0x3e * _0x3a8140, 0x41 * _0x3a8140, 0x3f * _0x3a8140, 0x36 * _0x3a8140, 0x44 * _0x3a8140, 0x36 * _0x3a8140), _0x909daf['closePath'](), fill_path(_0x909daf, _0x412d93[0x3]), _0x909daf['beginPath'](), _0x909daf['lineCap'] = 'round', _0x909daf['lineJoin'] = 'round', _0x909daf['moveTo'](0x32 * _0x3a8140, 0x37 * _0x3a8140), _0x909daf['bezierCurveTo'](0x39 * _0x3a8140, 0x37 * _0x3a8140, 0x3a * _0x3a8140, 0x41 * _0x3a8140, 0x34 * _0x3a8140, 0x41 * _0x3a8140), _0x909daf['bezierCurveTo'](0x2c * _0x3a8140, 0x42 * _0x3a8140, 0x2c * _0x3a8140, 0x36 * _0x3a8140, 0x32 * _0x3a8140, 0x37 * _0x3a8140), _0x909daf['closePath'](), fill_path(_0x909daf, _0x412d93[0x3]);
    else _0x2b4360 == 0x1 && (_0x909daf['scale'](0.6, 0.6), _0x909daf['translate'](0xb9 * _0x3a8140, 0xa5 * _0x3a8140), _0x909daf['beginPath'](), _0x909daf['lineCap'] = 'round', _0x909daf['lineJoin'] = 'round', _0x909daf['moveTo'](0x6c * _0x3a8140, 0x38 * _0x3a8140), _0x909daf['bezierCurveTo'](0x88 * _0x3a8140, 0x3a * _0x3a8140, 0xcb * _0x3a8140, 0x45 * _0x3a8140, 0xea * _0x3a8140, 0x4b * _0x3a8140), _0x909daf['bezierCurveTo'](0xf6 * _0x3a8140, 0x4d * _0x3a8140, 0xf7 * _0x3a8140, 0x4e * _0x3a8140, 0xf5 * _0x3a8140, 0x5a * _0x3a8140), _0x909daf['bezierCurveTo'](0xee * _0x3a8140, 0x8f * _0x3a8140, 0xe4 * _0x3a8140, 0xc5 * _0x3a8140, 0xd6 * _0x3a8140, 0x103 * _0x3a8140), _0x909daf['bezierCurveTo'](0xd4 * _0x3a8140, 0x10b * _0x3a8140, 0xd1 * _0x3a8140, 0x10e * _0x3a8140, 0xbd * _0x3a8140, 0x10c * _0x3a8140), _0x909daf['bezierCurveTo'](0x8e * _0x3a8140, 0x108 * _0x3a8140, 0x6a * _0x3a8140, 0x104 * _0x3a8140, 0x4b * _0x3a8140, 0xfd * _0x3a8140), _0x909daf['bezierCurveTo'](0x3c * _0x3a8140, 0xfa * _0x3a8140, 0x40 * _0x3a8140, 0xfa * _0x3a8140, 0x42 * _0x3a8140, 0xdd * _0x3a8140), _0x909daf['bezierCurveTo'](0x47 * _0x3a8140, 0xa8 * _0x3a8140, 0x57 * _0x3a8140, 0x5f * _0x3a8140, 0x62 * _0x3a8140, 0x43 * _0x3a8140), _0x909daf['bezierCurveTo'](0x65 * _0x3a8140, 0x39 * _0x3a8140, 0x67 * _0x3a8140, 0x38 * _0x3a8140, 0x6a * _0x3a8140, 0x38 * _0x3a8140), _0x909daf['closePath'](), fill_path(_0x909daf, _0x412d93[0x4], _0x412d93[0x4], 0x14 * _0x3a8140), _0x909daf['beginPath'](), _0x909daf['lineCap'] = 'round', _0x909daf['lineJoin'] = 'round', _0x909daf['moveTo'](0x70 * _0x3a8140, 0x48 * _0x3a8140), _0x909daf['bezierCurveTo'](0x84 * _0x3a8140, 0x49 * _0x3a8140, 0xe3 * _0x3a8140, 0x55 * _0x3a8140, 0xe2 * _0x3a8140, 0x5b * _0x3a8140), _0x909daf['bezierCurveTo'](0xe7 * _0x3a8140, 0x59 * _0x3a8140, 0xd9 * _0x3a8140, 0xc4 * _0x3a8140, 0xc8 * _0x3a8140, 0xfa * _0x3a8140), _0x909daf['bezierCurveTo'](0xc4 * _0x3a8140, 0xfe * _0x3a8140, 0xaf * _0x3a8140, 0xf9 * _0x3a8140, 0xa6 * _0x3a8140, 0xf9 * _0x3a8140), _0x909daf['bezierCurveTo'](0x5b * _0x3a8140, 0xf1 * _0x3a8140, 0x52 * _0x3a8140, 0xec * _0x3a8140, 0x53 * _0x3a8140, 0xe8 * _0x3a8140), _0x909daf['bezierCurveTo'](0x5a * _0x3a8140, 0x90 * _0x3a8140, 0x6c * _0x3a8140, 0x47 * _0x3a8140, 0x6f * _0x3a8140, 0x48 * _0x3a8140), _0x909daf['closePath'](), fill_path(_0x909daf, undefined, _0x412d93[0x0], 0xd * _0x3a8140), _0x909daf['beginPath'](), _0x909daf['lineCap'] = 'round', _0x909daf['lineJoin'] = 'round', _0x909daf['moveTo'](0x84 * _0x3a8140, 0x75 * _0x3a8140), _0x909daf['bezierCurveTo'](0xab * _0x3a8140, 0x56 * _0x3a8140, 0xbf * _0x3a8140, 0x65 * _0x3a8140, 0xbc * _0x3a8140, 0x86 * _0x3a8140), _0x909daf['bezierCurveTo'](0xb9 * _0x3a8140, 0x9a * _0x3a8140, 0xaa * _0x3a8140, 0x9e * _0x3a8140, 0x99 * _0x3a8140, 0x9e * _0x3a8140), _0x909daf['bezierCurveTo'](0x8f * _0x3a8140, 0xac * _0x3a8140, 0x92 * _0x3a8140, 0xb4 * _0x3a8140, 0x93 * _0x3a8140, 0xc1 * _0x3a8140), fill_path(_0x909daf, undefined, _0x412d93[0x0], 0x14 * _0x3a8140), circle(_0x909daf, 0x8e * _0x3a8140, 0xdd * _0x3a8140, 16.1245154965971 * _0x3a8140), fill_path(_0x909daf, _0x412d93[0x0]));
    return _0x275a36;
}

function create_hurt_dead_box(_0x52cb60, _0x3be9a0) {
    var _0x18568b = document['createElement']('canvas'),
        _0x4d17ef = _0x18568b['getContext']('2d');
    return _0x18568b['width'] = 0x190 * _0x52cb60, _0x18568b['height'] = 0x190 * _0x52cb60, _0x4d17ef['save'](), _0x4d17ef['translate'](202.5 * _0x52cb60, 147.5 * _0x52cb60), round_rect(_0x4d17ef, -96.5 * _0x52cb60, -21.5 * _0x52cb60, 0xc1 * _0x52cb60, 0x2b * _0x52cb60, 0x0 * _0x52cb60), _0x4d17ef['restore'](), fill_path(_0x4d17ef, _0x3be9a0[0x0], _0x3be9a0[0x0], 0xc * _0x52cb60), _0x4d17ef['save'](), _0x4d17ef['translate'](202.5 * _0x52cb60, 190.5 * _0x52cb60), round_rect(_0x4d17ef, 96.5 * _0x52cb60, -21.5 * _0x52cb60, -0xc1 * _0x52cb60, 0x2b * _0x52cb60, 0x0 * _0x52cb60), _0x4d17ef['restore'](), fill_path(_0x4d17ef, _0x3be9a0[0x0], _0x3be9a0[0x0], 0xc * _0x52cb60), _0x4d17ef['save'](), _0x4d17ef['translate'](202.5 * _0x52cb60, 233.5 * _0x52cb60), round_rect(_0x4d17ef, -96.5 * _0x52cb60, -20.5 * _0x52cb60, 0xc1 * _0x52cb60, 0x29 * _0x52cb60, 0x0 * _0x52cb60), _0x4d17ef['restore'](), fill_path(_0x4d17ef, _0x3be9a0[0x0], _0x3be9a0[0x0], 0xc * _0x52cb60), _0x4d17ef['save'](), _0x4d17ef['translate'](202.5 * _0x52cb60, 0x113 * _0x52cb60), round_rect(_0x4d17ef, 96.5 * _0x52cb60, -0x15 * _0x52cb60, -0xc1 * _0x52cb60, 0x2a * _0x52cb60, 0x0 * _0x52cb60), _0x4d17ef['restore'](), fill_path(_0x4d17ef, _0x3be9a0[0x0], _0x3be9a0[0x0], 0xc * _0x52cb60), _0x4d17ef['save'](), _0x4d17ef['translate'](203.5 * _0x52cb60, 121.5 * _0x52cb60), round_rect(_0x4d17ef, -115.5 * _0x52cb60, -20.5 * _0x52cb60, 0xe7 * _0x52cb60, 0x29 * _0x52cb60, 0xa * _0x52cb60), _0x4d17ef['restore'](), fill_path(_0x4d17ef, _0x3be9a0[0x0], _0x3be9a0[0x0], 0xc * _0x52cb60), _0x4d17ef['save'](), _0x4d17ef['translate'](203.5 * _0x52cb60, 0x12b * _0x52cb60), round_rect(_0x4d17ef, -115.5 * _0x52cb60, -0x14 * _0x52cb60, 0xe7 * _0x52cb60, 0x28 * _0x52cb60, 0xa * _0x52cb60), _0x4d17ef['restore'](), fill_path(_0x4d17ef, _0x3be9a0[0x0], _0x3be9a0[0x0], 0xc * _0x52cb60), _0x4d17ef['save'](), _0x4d17ef['translate'](298.5 * _0x52cb60, 0xd2 * _0x52cb60), round_rect(_0x4d17ef, -20.5 * _0x52cb60, -0x6d * _0x52cb60, 0x29 * _0x52cb60, 0xda * _0x52cb60, 0xa * _0x52cb60), _0x4d17ef['restore'](), fill_path(_0x4d17ef, _0x3be9a0[0x0], _0x3be9a0[0x0], 0xc * _0x52cb60), _0x4d17ef['save'](), _0x4d17ef['translate'](108.5 * _0x52cb60, 0xd2 * _0x52cb60), round_rect(_0x4d17ef, -20.5 * _0x52cb60, -0x6d * _0x52cb60, 0x29 * _0x52cb60, 0xda * _0x52cb60, 0xa * _0x52cb60), _0x4d17ef['restore'](), fill_path(_0x4d17ef, _0x3be9a0[0x0], _0x3be9a0[0x0], 0xc * _0x52cb60), _0x18568b;
}

function create_dead_box_ui(_0x554cca, _0x2ba676) {
    var _0x28e6c2 = document['createElement']('canvas'),
        _0x4406d0 = _0x28e6c2['getContext']('2d');
    return _0x28e6c2['width'] = 0x28a * _0x554cca, _0x28e6c2['height'] = 0x28a * _0x554cca, _0x4406d0['scale'](1.9, 1.9), _0x4406d0['save'](), _0x4406d0['translate'](202.5 * _0x554cca, 147.5 * _0x554cca), round_rect(_0x4406d0, -96.5 * _0x554cca, -21.5 * _0x554cca, 0xc1 * _0x554cca, 0xc1 * _0x554cca, 0x0 * _0x554cca), _0x4406d0['restore'](), fill_path(_0x4406d0, _0x2ba676[0x4], _0x2ba676[0x1], 0xc * _0x554cca), _0x4406d0['save'](), _0x4406d0['translate'](203.5 * _0x554cca, 121.5 * _0x554cca), round_rect(_0x4406d0, -115.5 * _0x554cca, -20.5 * _0x554cca, 0xe7 * _0x554cca, 0x29 * _0x554cca, 0xa * _0x554cca), _0x4406d0['restore'](), fill_path(_0x4406d0, _0x2ba676[0x3], _0x2ba676[0x1], 0xc * _0x554cca), _0x4406d0['save'](), _0x4406d0['translate'](203.5 * _0x554cca, 0x12b * _0x554cca), round_rect(_0x4406d0, -115.5 * _0x554cca, -0x14 * _0x554cca, 0xe7 * _0x554cca, 0x28 * _0x554cca, 0xa * _0x554cca), _0x4406d0['restore'](), fill_path(_0x4406d0, _0x2ba676[0x3], _0x2ba676[0x1], 0xc * _0x554cca), _0x4406d0['save'](), _0x4406d0['translate'](298.5 * _0x554cca, 0xd2 * _0x554cca), round_rect(_0x4406d0, -20.5 * _0x554cca, -0x6d * _0x554cca, 0x29 * _0x554cca, 0xda * _0x554cca, 0xa * _0x554cca), _0x4406d0['restore'](), fill_path(_0x4406d0, _0x2ba676[0x3], _0x2ba676[0x1], 0xc * _0x554cca), _0x4406d0['save'](), _0x4406d0['translate'](108.5 * _0x554cca, 0xd2 * _0x554cca), round_rect(_0x4406d0, -20.5 * _0x554cca, -0x6d * _0x554cca, 0x29 * _0x554cca, 0xda * _0x554cca, 0xa * _0x554cca), _0x4406d0['restore'](), fill_path(_0x4406d0, _0x2ba676[0x3], _0x2ba676[0x1], 0xc * _0x554cca), _0x4406d0['save'](), _0x4406d0['translate'](0xcc * _0x554cca, 121.5 * _0x554cca), round_rect(_0x4406d0, -0x5c * _0x554cca, -9.5 * _0x554cca, 0xb8 * _0x554cca, 0x13 * _0x554cca, 0xa * _0x554cca), _0x4406d0['restore'](), fill_path(_0x4406d0, _0x2ba676[0x3], _0x2ba676[0x3], 0xa * _0x554cca), _0x4406d0['save'](), _0x4406d0['translate'](0xc5 * _0x554cca, 0x12b * _0x554cca), round_rect(_0x4406d0, 0x55 * _0x554cca, -0x9 * _0x554cca, -0xaa * _0x554cca, 0x12 * _0x554cca, 0xa * _0x554cca), _0x4406d0['restore'](), fill_path(_0x4406d0, _0x2ba676[0x3], _0x2ba676[0x3], 0xa * _0x554cca), _0x4406d0['beginPath'](), _0x4406d0['lineCap'] = 'round', _0x4406d0['lineJoin'] = 'round', _0x4406d0['moveTo'](0x5e * _0x554cca, 0x13d * _0x554cca), _0x4406d0['bezierCurveTo'](110.5 * _0x554cca, 299.5 * _0x554cca, 110.5 * _0x554cca, 299.5 * _0x554cca, 0x7f * _0x554cca, 0x11a * _0x554cca), _0x4406d0['closePath'](), fill_path(_0x4406d0, undefined, _0x2ba676[0x1], 0xc * _0x554cca), _0x4406d0['beginPath'](), _0x4406d0['lineCap'] = 'round', _0x4406d0['lineJoin'] = 'round', _0x4406d0['moveTo'](0x117 * _0x554cca, 0x8e * _0x554cca), _0x4406d0['bezierCurveTo'](296.5 * _0x554cca, 125.5 * _0x554cca, 296.5 * _0x554cca, 125.5 * _0x554cca, 0x13a * _0x554cca, 0x6d * _0x554cca), _0x4406d0['closePath'](), fill_path(_0x4406d0, undefined, _0x2ba676[0x1], 0xc * _0x554cca), _0x4406d0['beginPath'](), _0x4406d0['lineCap'] = 'round', _0x4406d0['lineJoin'] = 'round', _0x4406d0['moveTo'](0x5d * _0x554cca, 0x6a * _0x554cca), _0x4406d0['bezierCurveTo'](110.5 * _0x554cca, 0x7c * _0x554cca, 110.5 * _0x554cca, 0x7c * _0x554cca, 0x80 * _0x554cca, 0x8e * _0x554cca), _0x4406d0['closePath'](), fill_path(_0x4406d0, undefined, _0x2ba676[0x1], 0xc * _0x554cca), _0x4406d0['beginPath'](), _0x4406d0['lineCap'] = 'round', _0x4406d0['lineJoin'] = 'round', _0x4406d0['moveTo'](0x119 * _0x554cca, 0x11a * _0x554cca), _0x4406d0['bezierCurveTo'](0x128 * _0x554cca, 297.5 * _0x554cca, 0x128 * _0x554cca, 297.5 * _0x554cca, 0x137 * _0x554cca, 0x139 * _0x554cca), _0x4406d0['closePath'](), fill_path(_0x4406d0, undefined, _0x2ba676[0x1], 0xc * _0x554cca), _0x28e6c2;
}

function create_SANDWICH(_0x3e3847, _0x2e3c7e, _0x14d493) {
    var _0x4c0df1 = document['createElement']('canvas'),
        _0x293428 = _0x4c0df1['getContext']('2d');
    return _0x4c0df1['width'] = 0x190 * _0x3e3847, _0x4c0df1['height'] = 0x190 * _0x3e3847, _0x293428['beginPath'](), _0x293428['lineCap'] = 'round', _0x293428['lineJoin'] = 'round', _0x293428['moveTo'](0x65 * _0x3e3847, 0xff * _0x3e3847), _0x293428['bezierCurveTo'](0x71 * _0x3e3847, 0xf3 * _0x3e3847, 0xb3 * _0x3e3847, 0xd2 * _0x3e3847, 0xdb * _0x3e3847, 0xc4 * _0x3e3847), _0x293428['bezierCurveTo'](0xfc * _0x3e3847, 0xcb * _0x3e3847, 0x120 * _0x3e3847, 0xd7 * _0x3e3847, 0x13e * _0x3e3847, 0xe9 * _0x3e3847), _0x293428['bezierCurveTo'](0x130 * _0x3e3847, 0xfe * _0x3e3847, 0x102 * _0x3e3847, 0x111 * _0x3e3847, 0xd7 * _0x3e3847, 0x128 * _0x3e3847), _0x293428['bezierCurveTo'](0xa1 * _0x3e3847, 0x11f * _0x3e3847, 0x77 * _0x3e3847, 0x10e * _0x3e3847, 0x66 * _0x3e3847, 0x101 * _0x3e3847), _0x293428['closePath'](), fill_path(_0x293428, _0x14d493[0x0], _0x14d493[0x1], 0xe * _0x3e3847), _0x293428['beginPath'](), _0x293428['lineCap'] = 'round', _0x293428['lineJoin'] = 'round', _0x293428['moveTo'](0x63 * _0x3e3847, 0x102 * _0x3e3847), _0x293428['bezierCurveTo'](0x63 * _0x3e3847, 272.5 * _0x3e3847, 0x63 * _0x3e3847, 272.5 * _0x3e3847, 0x63 * _0x3e3847, 0x11f * _0x3e3847), _0x293428['bezierCurveTo'](0xa6 * _0x3e3847, 0x13f * _0x3e3847, 0xc1 * _0x3e3847, 0x140 * _0x3e3847, 0xd4 * _0x3e3847, 0x144 * _0x3e3847), _0x293428['bezierCurveTo'](0x124 * _0x3e3847, 0x11e * _0x3e3847, 0x138 * _0x3e3847, 0x10f * _0x3e3847, 0x13f * _0x3e3847, 0x107 * _0x3e3847), _0x293428['bezierCurveTo'](0x140 * _0x3e3847, 0xf9 * _0x3e3847, 0x140 * _0x3e3847, 0xf1 * _0x3e3847, 0x13e * _0x3e3847, 0xea * _0x3e3847), _0x293428['bezierCurveTo'](0x12c * _0x3e3847, 0xfe * _0x3e3847, 0xfe * _0x3e3847, 0x115 * _0x3e3847, 0xd8 * _0x3e3847, 0x126 * _0x3e3847), _0x293428['bezierCurveTo'](0xbe * _0x3e3847, 0x128 * _0x3e3847, 0x87 * _0x3e3847, 0x114 * _0x3e3847, 0x66 * _0x3e3847, 0x102 * _0x3e3847), _0x293428['closePath'](), fill_path(_0x293428, _0x14d493[0x2], _0x14d493[0x1], 0xe * _0x3e3847), _0x293428['beginPath'](), _0x293428['lineCap'] = 'round', _0x293428['lineJoin'] = 'round', _0x293428['moveTo'](0xd4 * _0x3e3847, 0x143 * _0x3e3847), _0x293428['bezierCurveTo'](211.5 * _0x3e3847, 310.5 * _0x3e3847, 211.5 * _0x3e3847, 310.5 * _0x3e3847, 0xd3 * _0x3e3847, 0x12a * _0x3e3847), _0x293428['closePath'](), fill_path(_0x293428, undefined, _0x14d493[0x1], 0xe * _0x3e3847), _0x293428['beginPath'](), _0x293428['lineCap'] = 'round', _0x293428['lineJoin'] = 'round', _0x293428['moveTo'](0xd4 * _0x3e3847, 0xd2 * _0x3e3847), _0x293428['bezierCurveTo'](0x11e * _0x3e3847, 0xd2 * _0x3e3847, 0x14b * _0x3e3847, 0xfe * _0x3e3847, 0xd4 * _0x3e3847, 0x114 * _0x3e3847), _0x293428['bezierCurveTo'](0x6c * _0x3e3847, 0x114 * _0x3e3847, 0x70 * _0x3e3847, 0xde * _0x3e3847, 0xd5 * _0x3e3847, 0xd0 * _0x3e3847), _0x293428['closePath'](), fill_path(_0x293428, _0x14d493[0x3], _0x14d493[0x4], 0xe * _0x3e3847), _0x293428['beginPath'](), _0x293428['lineCap'] = 'round', _0x293428['lineJoin'] = 'round', _0x293428['moveTo'](0x62 * _0x3e3847, 0xc8 * _0x3e3847), _0x293428['bezierCurveTo'](0x7e * _0x3e3847, 0xd8 * _0x3e3847, 0xb1 * _0x3e3847, 0xe8 * _0x3e3847, 0xd5 * _0x3e3847, 0xed * _0x3e3847), _0x293428['bezierCurveTo'](0x10a * _0x3e3847, 0xda * _0x3e3847, 0x120 * _0x3e3847, 0xd1 * _0x3e3847, 0x13e * _0x3e3847, 0xbe * _0x3e3847), _0x293428['bezierCurveTo'](0x10d * _0x3e3847, 0xa4 * _0x3e3847, 0xef * _0x3e3847, 0x9e * _0x3e3847, 0xd6 * _0x3e3847, 0x99 * _0x3e3847), _0x293428['bezierCurveTo'](0x94 * _0x3e3847, 0xac * _0x3e3847, 0x83 * _0x3e3847, 0xb6 * _0x3e3847, 0x62 * _0x3e3847, 0xc8 * _0x3e3847), _0x293428['closePath'](), fill_path(_0x293428, _0x14d493[0x0], _0x14d493[0x1], 0xe * _0x3e3847), _0x293428['beginPath'](), _0x293428['lineCap'] = 'round', _0x293428['lineJoin'] = 'round', _0x293428['moveTo'](0x61 * _0x3e3847, 0xcc * _0x3e3847), _0x293428['bezierCurveTo'](0x61 * _0x3e3847, 215.5 * _0x3e3847, 0x61 * _0x3e3847, 215.5 * _0x3e3847, 0x61 * _0x3e3847, 0xe3 * _0x3e3847), _0x293428['bezierCurveTo'](0x94 * _0x3e3847, 0xfa * _0x3e3847, 0xb3 * _0x3e3847, 0x100 * _0x3e3847, 0xd4 * _0x3e3847, 0x106 * _0x3e3847), _0x293428['bezierCurveTo'](0x10c * _0x3e3847, 0xf4 * _0x3e3847, 0x119 * _0x3e3847, 0xe9 * _0x3e3847, 0x13e * _0x3e3847, 0xd6 * _0x3e3847), _0x293428['bezierCurveTo'](0x13e * _0x3e3847, 0xcb * _0x3e3847, 0x13e * _0x3e3847, 0xcb * _0x3e3847, 0x13e * _0x3e3847, 0xc0 * _0x3e3847), _0x293428['bezierCurveTo'](0xfa * _0x3e3847, 0xe1 * _0x3e3847, 0xec * _0x3e3847, 0xe7 * _0x3e3847, 0xd6 * _0x3e3847, 0xef * _0x3e3847), _0x293428['bezierCurveTo'](0x9e * _0x3e3847, 0xe4 * _0x3e3847, 0x7e * _0x3e3847, 0xd7 * _0x3e3847, 0x63 * _0x3e3847, 0xc9 * _0x3e3847), _0x293428['closePath'](), fill_path(_0x293428, _0x14d493[0x2], _0x14d493[0x1], 0xe * _0x3e3847), _0x293428['beginPath'](), _0x293428['lineCap'] = 'round', _0x293428['lineJoin'] = 'round', _0x293428['moveTo'](0xd4 * _0x3e3847, 0x104 * _0x3e3847), _0x293428['bezierCurveTo'](0xd4 * _0x3e3847, 251.5 * _0x3e3847, 0xd4 * _0x3e3847, 251.5 * _0x3e3847, 0xd4 * _0x3e3847, 0xf3 * _0x3e3847), _0x293428['closePath'](), fill_path(_0x293428, undefined, _0x14d493[0x1], 0xe * _0x3e3847), circle(_0x293428, 0xa1 * _0x3e3847, 0xc9 * _0x3e3847, 0xd * _0x3e3847), fill_path(_0x293428, _0x14d493[0x5]), circle(_0x293428, 0xd8 * _0x3e3847, 0xcd * _0x3e3847, 8.06225774829855 * _0x3e3847), fill_path(_0x293428, _0x14d493[0x5]), circle(_0x293428, 0xd8 * _0x3e3847, 0xaf * _0x3e3847, 6.708203932499369 * _0x3e3847), fill_path(_0x293428, _0x14d493[0x5]), circle(_0x293428, 0x10f * _0x3e3847, 0xbf * _0x3e3847, 5.0990195135927845 * _0x3e3847), fill_path(_0x293428, _0x14d493[0x5]), circle(_0x293428, 0xce * _0x3e3847, 0xb4 * _0x3e3847, 11.180339887498949 * _0x3e3847), fill_path(_0x293428, _0x14d493[0x5]), _0x4c0df1;
}

function create_scales(_0xdc2ef2, _0x95e83c, _0x453525) {
    var _0x333690 = document['createElement']('canvas'),
        _0x24e6fd = _0x333690['getContext']('2d');
    return _0x333690['width'] = 0x190 * _0xdc2ef2, _0x333690['height'] = 0x190 * _0xdc2ef2, _0x24e6fd['save'](), _0x24e6fd['translate'](0x55 * _0xdc2ef2, 0xed * _0xdc2ef2), _0x24e6fd['rotate'](1.5707963267948966), round_regular_polygon(_0x24e6fd, 0x6, 54.585977194239184 * _0xdc2ef2, 0x1 * _0xdc2ef2), _0x24e6fd['restore'](), fill_path(_0x24e6fd, _0x453525[0x1], _0x453525[0x2], 0xc * _0xdc2ef2), _0x24e6fd['save'](), _0x24e6fd['translate'](0xb2 * _0xdc2ef2, 0xee * _0xdc2ef2), _0x24e6fd['rotate'](1.5707963267948966), round_regular_polygon(_0x24e6fd, 0x6, 52.53573932334064 * _0xdc2ef2, 0x1 * _0xdc2ef2), _0x24e6fd['restore'](), fill_path(_0x24e6fd, _0x453525[0x1], _0x453525[0x2], 0xc * _0xdc2ef2), _0x24e6fd['save'](), _0x24e6fd['translate'](0x10e * _0xdc2ef2, 0xef * _0xdc2ef2), _0x24e6fd['rotate'](1.5707963267948966), round_regular_polygon(_0x24e6fd, 0x6, 53.58058329516393 * _0xdc2ef2, 0x1 * _0xdc2ef2), _0x24e6fd['restore'](), fill_path(_0x24e6fd, _0x453525[0x1], _0x453525[0x2], 0xc * _0xdc2ef2), _0x24e6fd['save'](), _0x24e6fd['translate'](0xde * _0xdc2ef2, 0x138 * _0xdc2ef2), _0x24e6fd['rotate'](1.5707963267948966), round_regular_polygon(_0x24e6fd, 0x6, 52.53573932334064 * _0xdc2ef2, 0x1 * _0xdc2ef2), _0x24e6fd['restore'](), fill_path(_0x24e6fd, _0x453525[0x1], _0x453525[0x2], 0xc * _0xdc2ef2), _0x24e6fd['save'](), _0x24e6fd['translate'](0x13d * _0xdc2ef2, 0x9f * _0xdc2ef2), _0x24e6fd['rotate'](1.5707963267948966), round_regular_polygon(_0x24e6fd, 0x6, 57.63465889766331 * _0xdc2ef2, 0x1 * _0xdc2ef2), _0x24e6fd['restore'](), fill_path(_0x24e6fd, _0x453525[0x1], _0x453525[0x2], 0xc * _0xdc2ef2), _0x24e6fd['save'](), _0x24e6fd['translate'](223.5 * _0xdc2ef2, 139.0625 * _0xdc2ef2), _0x24e6fd['rotate'](1.5707963267948966), round_regular_polygon(_0x24e6fd, 0x6, 51.66236541235796 * _0xdc2ef2, 0x1 * _0xdc2ef2), _0x24e6fd['restore'](), fill_path(_0x24e6fd, _0x453525[0x1], _0x453525[0x2], 0xc * _0xdc2ef2), _0x24e6fd['save'](), _0x24e6fd['translate'](132.5 * _0xdc2ef2, 137.0625 * _0xdc2ef2), _0x24e6fd['rotate'](1.5707963267948966), round_regular_polygon(_0x24e6fd, 0x6, 52.009614495783374 * _0xdc2ef2, 0x1 * _0xdc2ef2), _0x24e6fd['restore'](), fill_path(_0x24e6fd, _0x453525[0x1], _0x453525[0x2], 0xc * _0xdc2ef2), _0x24e6fd['save'](), _0x24e6fd['translate'](178.5 * _0xdc2ef2, 58.0625 * _0xdc2ef2), _0x24e6fd['rotate'](1.5707963267948966), round_regular_polygon(_0x24e6fd, 0x6, 53.16013544000805 * _0xdc2ef2, 0x1 * _0xdc2ef2), _0x24e6fd['restore'](), fill_path(_0x24e6fd, _0x453525[0x1], _0x453525[0x2], 0xc * _0xdc2ef2), _0x24e6fd['save'](), _0x24e6fd['translate'](177.5 * _0xdc2ef2, 216.0625 * _0xdc2ef2), _0x24e6fd['rotate'](1.5707963267948966), round_regular_polygon(_0x24e6fd, 0x6, 0x32 * _0xdc2ef2, 0x1 * _0xdc2ef2), _0x24e6fd['restore'](), fill_path(_0x24e6fd, _0x453525[0x1], _0x453525[0x2], 0xc * _0xdc2ef2), _0x24e6fd['save'](), _0x24e6fd['translate'](84.5 * _0xdc2ef2, 215.0625 * _0xdc2ef2), _0x24e6fd['rotate'](1.5707963267948966), round_regular_polygon(_0x24e6fd, 0x6, 0x36 * _0xdc2ef2, 0x1 * _0xdc2ef2), _0x24e6fd['restore'](), fill_path(_0x24e6fd, _0x453525[0x1], _0x453525[0x2], 0xc * _0xdc2ef2), _0x24e6fd['save'](), _0x24e6fd['translate'](319.5 * _0xdc2ef2, 138.0625 * _0xdc2ef2), _0x24e6fd['rotate'](1.5707963267948966), round_regular_polygon(_0x24e6fd, 0x6, 55.08175741568164 * _0xdc2ef2, 0x1 * _0xdc2ef2), _0x24e6fd['restore'](), fill_path(_0x24e6fd, _0x453525[0x1], _0x453525[0x2], 0xc * _0xdc2ef2), _0x24e6fd['save'](), _0x24e6fd['translate'](269.5 * _0xdc2ef2, 216.0625 * _0xdc2ef2), _0x24e6fd['rotate'](1.5707963267948966), round_regular_polygon(_0x24e6fd, 0x6, 54.589376255824725 * _0xdc2ef2, 0x1 * _0xdc2ef2), _0x24e6fd['restore'](), fill_path(_0x24e6fd, _0x453525[0x1], _0x453525[0x2], 0xc * _0xdc2ef2), _0x24e6fd['save'](), _0x24e6fd['translate'](221.5 * _0xdc2ef2, 293.0625 * _0xdc2ef2), _0x24e6fd['rotate'](0.5235987755982988), round_regular_polygon(_0x24e6fd, 0x6, 49.49747468305833 * _0xdc2ef2, 0x1 * _0xdc2ef2), _0x24e6fd['restore'](), fill_path(_0x24e6fd, _0x453525[0x1], _0x453525[0x2], 0xc * _0xdc2ef2), _0x24e6fd['beginPath'](), _0x24e6fd['lineCap'] = 'round', _0x24e6fd['lineJoin'] = 'round', _0x24e6fd['moveTo'](221.5 * _0xdc2ef2, 342.0625 * _0xdc2ef2), _0x24e6fd['bezierCurveTo'](221.5 * _0xdc2ef2, 350.5625 * _0xdc2ef2, 221.5 * _0xdc2ef2, 350.5625 * _0xdc2ef2, 221.5 * _0xdc2ef2, 359.0625 * _0xdc2ef2), _0x24e6fd['closePath'](), fill_path(_0x24e6fd, undefined, _0x453525[0x2], 0xc * _0xdc2ef2), _0x24e6fd['beginPath'](), _0x24e6fd['lineCap'] = 'round', _0x24e6fd['lineJoin'] = 'round', _0x24e6fd['moveTo'](84.5 * _0xdc2ef2, 270.0625 * _0xdc2ef2), _0x24e6fd['bezierCurveTo'](84.5 * _0xdc2ef2, 277.0625 * _0xdc2ef2, 84.5 * _0xdc2ef2, 277.0625 * _0xdc2ef2, 84.5 * _0xdc2ef2, 284.0625 * _0xdc2ef2), _0x24e6fd['closePath'](), fill_path(_0x24e6fd, undefined, _0x453525[0x2], 0xc * _0xdc2ef2), _0x24e6fd['save'](), _0x24e6fd['translate'](84.5 * _0xdc2ef2, 215.0625 * _0xdc2ef2), _0x24e6fd['rotate'](0.5235987755982988), round_regular_polygon(_0x24e6fd, 0x6, 0x1e * _0xdc2ef2, 0xf * _0xdc2ef2), _0x24e6fd['restore'](), fill_path(_0x24e6fd, _0x453525[0x3]), _0x24e6fd['save'](), _0x24e6fd['translate'](177.5 * _0xdc2ef2, 215.0625 * _0xdc2ef2), _0x24e6fd['rotate'](0.5235987755982988), round_regular_polygon(_0x24e6fd, 0x6, 0x1e * _0xdc2ef2, 0xf * _0xdc2ef2), _0x24e6fd['restore'](), fill_path(_0x24e6fd, _0x453525[0x3]), _0x24e6fd['save'](), _0x24e6fd['translate'](222.5 * _0xdc2ef2, 294.0625 * _0xdc2ef2), _0x24e6fd['rotate'](0.5235987755982988), round_regular_polygon(_0x24e6fd, 0x6, 0x1e * _0xdc2ef2, 0xf * _0xdc2ef2), _0x24e6fd['restore'](), fill_path(_0x24e6fd, _0x453525[0x3]), _0x24e6fd['save'](), _0x24e6fd['translate'](270.5 * _0xdc2ef2, 216.0625 * _0xdc2ef2), _0x24e6fd['rotate'](0.5235987755982988), round_regular_polygon(_0x24e6fd, 0x6, 0x1e * _0xdc2ef2, 0xf * _0xdc2ef2), _0x24e6fd['restore'](), fill_path(_0x24e6fd, _0x453525[0x3]), _0x24e6fd['save'](), _0x24e6fd['translate'](320.5 * _0xdc2ef2, 134.0625 * _0xdc2ef2), _0x24e6fd['rotate'](0.5235987755982988), round_regular_polygon(_0x24e6fd, 0x6, 0x1e * _0xdc2ef2, 0xf * _0xdc2ef2), _0x24e6fd['restore'](), fill_path(_0x24e6fd, _0x453525[0x3]), _0x24e6fd['save'](), _0x24e6fd['translate'](224.5 * _0xdc2ef2, 138.0625 * _0xdc2ef2), _0x24e6fd['rotate'](0.5235987755982988), round_regular_polygon(_0x24e6fd, 0x6, 0x1e * _0xdc2ef2, 0xf * _0xdc2ef2), _0x24e6fd['restore'](), fill_path(_0x24e6fd, _0x453525[0x3]), _0x24e6fd['save'](), _0x24e6fd['translate'](133.5 * _0xdc2ef2, 137.0625 * _0xdc2ef2), _0x24e6fd['rotate'](0.5235987755982988), round_regular_polygon(_0x24e6fd, 0x6, 0x1e * _0xdc2ef2, 0xf * _0xdc2ef2), _0x24e6fd['restore'](), fill_path(_0x24e6fd, _0x453525[0x3]), _0x24e6fd['save'](), _0x24e6fd['translate'](178.5 * _0xdc2ef2, 56.0625 * _0xdc2ef2), _0x24e6fd['rotate'](0.5235987755982988), round_regular_polygon(_0x24e6fd, 0x6, 0x1e * _0xdc2ef2, 0xf * _0xdc2ef2), _0x24e6fd['restore'](), fill_path(_0x24e6fd, _0x453525[0x3]), _0x333690;
}

function create_wheat(_0x4a2701, _0x1139d2, _0xfb6c5) {
    var _0x18a782 = document['createElement']('canvas'),
        _0x538ac4 = _0x18a782['getContext']('2d');
    return _0x18a782['width'] = 0x34 * _0x4a2701, _0x18a782['height'] = 0x41 * _0x4a2701, _0x538ac4['beginPath'](), _0x538ac4['lineCap'] = 'round', _0x538ac4['lineJoin'] = 'round', _0x538ac4['moveTo'](9.833328247070312 * _0x4a2701, 12.078125 * _0x4a2701), _0x538ac4['bezierCurveTo'](15.333328247070312 * _0x4a2701, 28.078125 * _0x4a2701, 15.333328247070312 * _0x4a2701, 28.078125 * _0x4a2701, 20.833328247070312 * _0x4a2701, 44.078125 * _0x4a2701), _0x538ac4['closePath'](), fill_path(_0x538ac4, undefined, _0xfb6c5[0x1], 0x2 * _0x4a2701), _0x538ac4['beginPath'](), _0x538ac4['lineCap'] = 'round', _0x538ac4['lineJoin'] = 'round', _0x538ac4['moveTo'](7.8333282470703125 * _0x4a2701, 20.078125 * _0x4a2701), _0x538ac4['bezierCurveTo'](16.833328247070312 * _0x4a2701, 32.578125 * _0x4a2701, 16.833328247070312 * _0x4a2701, 32.578125 * _0x4a2701, 25.833328247070312 * _0x4a2701, 45.078125 * _0x4a2701), _0x538ac4['closePath'](), fill_path(_0x538ac4, undefined, _0xfb6c5[0x1], 0x2 * _0x4a2701), _0x538ac4['beginPath'](), _0x538ac4['lineCap'] = 'round', _0x538ac4['lineJoin'] = 'round', _0x538ac4['moveTo'](23.833328247070312 * _0x4a2701, 26.078125 * _0x4a2701), _0x538ac4['bezierCurveTo'](25.833328247070312 * _0x4a2701, 11.078125 * _0x4a2701, 16.833328247070312 * _0x4a2701, 8.078125 * _0x4a2701, 14.833328247070312 * _0x4a2701, 7.078125 * _0x4a2701), _0x538ac4['bezierCurveTo'](11.833328247070312 * _0x4a2701, 17.078125 * _0x4a2701, 13.833328247070312 * _0x4a2701, 22.078125 * _0x4a2701, 23.833328247070312 * _0x4a2701, 27.078125 * _0x4a2701), _0x538ac4['closePath'](), fill_path(_0x538ac4, _0xfb6c5[0x0], _0xfb6c5[0x1], 0x2 * _0x4a2701), _0x538ac4['beginPath'](), _0x538ac4['lineCap'] = 'round', _0x538ac4['lineJoin'] = 'round', _0x538ac4['moveTo'](35.83332824707031 * _0x4a2701, 8.078125 * _0x4a2701), _0x538ac4['bezierCurveTo'](34.83332824707031 * _0x4a2701, 27.078125 * _0x4a2701, 28.833328247070312 * _0x4a2701, 27.078125 * _0x4a2701, 23.833328247070312 * _0x4a2701, 28.078125 * _0x4a2701), _0x538ac4['bezierCurveTo'](21.833328247070312 * _0x4a2701, 14.078125 * _0x4a2701, 26.833328247070312 * _0x4a2701, 11.078125 * _0x4a2701, 35.83332824707031 * _0x4a2701, 8.078125 * _0x4a2701), _0x538ac4['closePath'](), fill_path(_0x538ac4, _0xfb6c5[0x0], _0xfb6c5[0x1], 0x2 * _0x4a2701), _0x538ac4['beginPath'](), _0x538ac4['lineCap'] = 'round', _0x538ac4['lineJoin'] = 'round', _0x538ac4['moveTo'](25.833328247070312 * _0x4a2701, 39.078125 * _0x4a2701), _0x538ac4['bezierCurveTo'](20.833328247070312 * _0x4a2701, 29.078125 * _0x4a2701, 14.833328247070312 * _0x4a2701, 27.078125 * _0x4a2701, 5.8333282470703125 * _0x4a2701, 29.078125 * _0x4a2701), _0x538ac4['bezierCurveTo'](9.833328247070312 * _0x4a2701, 39.078125 * _0x4a2701, 16.833328247070312 * _0x4a2701, 42.078125 * _0x4a2701, 25.833328247070312 * _0x4a2701, 40.078125 * _0x4a2701), _0x538ac4['closePath'](), fill_path(_0x538ac4, _0xfb6c5[0x0], _0xfb6c5[0x1], 0x2 * _0x4a2701), _0x538ac4['beginPath'](), _0x538ac4['lineCap'] = 'round', _0x538ac4['lineJoin'] = 'round', _0x538ac4['moveTo'](42.83332824707031 * _0x4a2701, 23.078125 * _0x4a2701), _0x538ac4['bezierCurveTo'](35.83332824707031 * _0x4a2701, 35.078125 * _0x4a2701, 31.833328247070312 * _0x4a2701, 37.078125 * _0x4a2701, 25.833328247070312 * _0x4a2701, 36.078125 * _0x4a2701), _0x538ac4['bezierCurveTo'](25.833328247070312 * _0x4a2701, 24.078125 * _0x4a2701, 33.83332824707031 * _0x4a2701, 21.078125 * _0x4a2701, 42.83332824707031 * _0x4a2701, 23.078125 * _0x4a2701), _0x538ac4['closePath'](), fill_path(_0x538ac4, _0xfb6c5[0x0], _0xfb6c5[0x1], 0x2 * _0x4a2701), _0x538ac4['beginPath'](), _0x538ac4['lineCap'] = 'round', _0x538ac4['lineJoin'] = 'round', _0x538ac4['moveTo'](23.833328247070312 * _0x4a2701, 24.078125 * _0x4a2701), _0x538ac4['bezierCurveTo'](20.833328247070312 * _0x4a2701, 34.078125 * _0x4a2701, 23.833328247070312 * _0x4a2701, 40.078125 * _0x4a2701, 27.833328247070312 * _0x4a2701, 43.078125 * _0x4a2701), _0x538ac4['bezierCurveTo'](37.33332824707031 * _0x4a2701, 28.078125 * _0x4a2701, 37.33332824707031 * _0x4a2701, 28.078125 * _0x4a2701, 46.83332824707031 * _0x4a2701, 13.078125 * _0x4a2701), fill_path(_0x538ac4, undefined, _0xfb6c5[0x1], 0x2 * _0x4a2701), _0x538ac4['beginPath'](), _0x538ac4['lineCap'] = 'round', _0x538ac4['lineJoin'] = 'round', _0x538ac4['moveTo'](38.83332824707031 * _0x4a2701, 14.078125 * _0x4a2701), _0x538ac4['bezierCurveTo'](34.83332824707031 * _0x4a2701, 24.078125 * _0x4a2701, 34.83332824707031 * _0x4a2701, 24.078125 * _0x4a2701, 30.833328247070312 * _0x4a2701, 34.078125 * _0x4a2701), fill_path(_0x538ac4, undefined, _0xfb6c5[0x1], 0x2 * _0x4a2701), _0x18a782;
}

function create_windmill(_0x1ec1d1, _0x4fcc56, _0x1949e5) {
    var _0x11d9b6 = document['createElement']('canvas'),
        _0x18674b = _0x11d9b6['getContext']('2d');
    return _0x11d9b6['width'] = 0xaa * _0x1ec1d1, _0x11d9b6['height'] = 0xad * _0x1ec1d1, _0x18674b['translate'](0x5 * _0x1ec1d1, 0x5 * _0x1ec1d1), _0x18674b['globalAlpha'] = _0x4fcc56 ? 0.5 : 0x1, _0x18674b['save'](), _0x18674b['translate'](86.25 * _0x1ec1d1, 84.953125 * _0x1ec1d1), _0x18674b['rotate'](0.32), round_regular_polygon(_0x18674b, 0x7, 42.15447781671598 * _0x1ec1d1, 0xa * _0x1ec1d1), _0x18674b['restore'](), fill_path(_0x18674b, _0x1949e5[0x0]), _0x18674b['globalAlpha'] = 0x1, _0x18674b['translate'](-0x5 * _0x1ec1d1, -0x5 * _0x1ec1d1), _0x18674b['save'](), _0x18674b['translate'](86.25 * _0x1ec1d1, 84.953125 * _0x1ec1d1), _0x18674b['rotate'](0.32), round_regular_polygon(_0x18674b, 0x7, 42.15447781671598 * _0x1ec1d1, 0xa * _0x1ec1d1), _0x18674b['restore'](), fill_path(_0x18674b, _0x1949e5[0x1], _0x1949e5[0x2], 0x4 * _0x1ec1d1), _0x18674b['globalAlpha'] = _0x4fcc56 ? 0.5 : 0x1, _0x18674b['translate'](0x5 * _0x1ec1d1, 0x5 * _0x1ec1d1), _0x18674b['save'](), _0x18674b['translate'](86.25 * _0x1ec1d1, 84.953125 * _0x1ec1d1), _0x18674b['rotate'](0.28), round_regular_polygon(_0x18674b, 0x7, 30.463092423455635 * _0x1ec1d1, 0xa * _0x1ec1d1), _0x18674b['restore'](), fill_path(_0x18674b, _0x1949e5[0x0]), _0x18674b['globalAlpha'] = 0x1, _0x18674b['translate'](-0x5 * _0x1ec1d1, -0x5 * _0x1ec1d1), _0x18674b['save'](), _0x18674b['translate'](86.25 * _0x1ec1d1, 84.953125 * _0x1ec1d1), _0x18674b['rotate'](0.28), round_regular_polygon(_0x18674b, 0x7, 30.463092423455635 * _0x1ec1d1, 0xa * _0x1ec1d1), _0x18674b['restore'](), fill_path(_0x18674b, _0x1949e5[0x3], _0x1949e5[0x4], 0x4 * _0x1ec1d1), _0x18674b['globalAlpha'] = _0x4fcc56 ? 0.5 : 0x1, _0x18674b['translate'](0x5 * _0x1ec1d1, 0x5 * _0x1ec1d1), circle(_0x18674b, 86.25 * _0x1ec1d1, 84.953125 * _0x1ec1d1, 18.867962264113206 * _0x1ec1d1), fill_path(_0x18674b, _0x1949e5[0x0]), _0x18674b['globalAlpha'] = 0x1, _0x18674b['translate'](-0x5 * _0x1ec1d1, -0x5 * _0x1ec1d1), circle(_0x18674b, 86.25 * _0x1ec1d1, 84.953125 * _0x1ec1d1, 18.867962264113206 * _0x1ec1d1), fill_path(_0x18674b, _0x1949e5[0x5], _0x1949e5[0x6], 0x4 * _0x1ec1d1), _0x11d9b6;
}

function create_windmill_wing(_0x2ed4cd, _0x29b461, _0xddf6a) {
    var _0x27bfff = document['createElement']('canvas'),
        _0x1a6f3f = _0x27bfff['getContext']('2d');
    return _0x27bfff['width'] = 0xaa * _0x2ed4cd, _0x27bfff['height'] = 0xad * _0x2ed4cd, _0x1a6f3f['globalAlpha'] = _0x29b461 ? 0.5 : 0x1, _0x1a6f3f['translate'](0x5 * _0x2ed4cd, 0x5 * _0x2ed4cd), _0x1a6f3f['beginPath'](), _0x1a6f3f['lineCap'] = 'round', _0x1a6f3f['lineJoin'] = 'round', _0x1a6f3f['moveTo'](85.25 * _0x2ed4cd, 82.953125 * _0x2ed4cd), _0x1a6f3f['bezierCurveTo'](98.25 * _0x2ed4cd, 46.453125 * _0x2ed4cd, 98.25 * _0x2ed4cd, 46.453125 * _0x2ed4cd, 111.25 * _0x2ed4cd, 9.953125 * _0x2ed4cd), _0x1a6f3f['closePath'](), fill_path(_0x1a6f3f, undefined, _0xddf6a[0x0], 0x4 * _0x2ed4cd), _0x1a6f3f['beginPath'](), _0x1a6f3f['lineCap'] = 'round', _0x1a6f3f['lineJoin'] = 'round', _0x1a6f3f['moveTo'](111.25 * _0x2ed4cd, 8.953125 * _0x2ed4cd), _0x1a6f3f['bezierCurveTo'](117.75 * _0x2ed4cd, 12.453125 * _0x2ed4cd, 117.75 * _0x2ed4cd, 12.453125 * _0x2ed4cd, 124.25 * _0x2ed4cd, 15.953125 * _0x2ed4cd), _0x1a6f3f['bezierCurveTo'](113.75 * _0x2ed4cd, 39.953125 * _0x2ed4cd, 113.75 * _0x2ed4cd, 39.953125 * _0x2ed4cd, 103.25 * _0x2ed4cd, 63.953125 * _0x2ed4cd), _0x1a6f3f['bezierCurveTo'](97.75 * _0x2ed4cd, 64.953125 * _0x2ed4cd, 97.75 * _0x2ed4cd, 64.953125 * _0x2ed4cd, 92.25 * _0x2ed4cd, 65.953125 * _0x2ed4cd), _0x1a6f3f['closePath'](), fill_path(_0x1a6f3f, _0xddf6a[0x0]), _0x1a6f3f['globalAlpha'] = 0x1, _0x1a6f3f['translate'](-0x5 * _0x2ed4cd, -0x5 * _0x2ed4cd), _0x1a6f3f['beginPath'](), _0x1a6f3f['lineCap'] = 'round', _0x1a6f3f['lineJoin'] = 'round', _0x1a6f3f['moveTo'](111.25 * _0x2ed4cd, 8.953125 * _0x2ed4cd), _0x1a6f3f['bezierCurveTo'](117.75 * _0x2ed4cd, 12.453125 * _0x2ed4cd, 117.75 * _0x2ed4cd, 12.453125 * _0x2ed4cd, 124.25 * _0x2ed4cd, 15.953125 * _0x2ed4cd), _0x1a6f3f['bezierCurveTo'](113.75 * _0x2ed4cd, 39.953125 * _0x2ed4cd, 113.75 * _0x2ed4cd, 39.953125 * _0x2ed4cd, 103.25 * _0x2ed4cd, 63.953125 * _0x2ed4cd), _0x1a6f3f['bezierCurveTo'](97.75 * _0x2ed4cd, 64.953125 * _0x2ed4cd, 97.75 * _0x2ed4cd, 64.953125 * _0x2ed4cd, 92.25 * _0x2ed4cd, 65.953125 * _0x2ed4cd), _0x1a6f3f['closePath'](), fill_path(_0x1a6f3f, _0xddf6a[0x7]), _0x1a6f3f['beginPath'](), _0x1a6f3f['lineCap'] = 'round', _0x1a6f3f['lineJoin'] = 'round', _0x1a6f3f['moveTo'](85.25 * _0x2ed4cd, 82.953125 * _0x2ed4cd), _0x1a6f3f['bezierCurveTo'](98.25 * _0x2ed4cd, 46.453125 * _0x2ed4cd, 98.25 * _0x2ed4cd, 46.453125 * _0x2ed4cd, 111.25 * _0x2ed4cd, 9.953125 * _0x2ed4cd), _0x1a6f3f['closePath'](), fill_path(_0x1a6f3f, undefined, _0xddf6a[0x6], 0x4 * _0x2ed4cd), _0x1a6f3f['globalAlpha'] = _0x29b461 ? 0.5 : 0x1, _0x1a6f3f['translate'](0x5 * _0x2ed4cd, 0x5 * _0x2ed4cd), _0x1a6f3f['beginPath'](), _0x1a6f3f['lineCap'] = 'round', _0x1a6f3f['lineJoin'] = 'round', _0x1a6f3f['moveTo'](87.25 * _0x2ed4cd, 84.953125 * _0x2ed4cd), _0x1a6f3f['bezierCurveTo'](123.75 * _0x2ed4cd, 100.453125 * _0x2ed4cd, 123.75 * _0x2ed4cd, 100.453125 * _0x2ed4cd, 160.25 * _0x2ed4cd, 115.953125 * _0x2ed4cd), _0x1a6f3f['closePath'](), fill_path(_0x1a6f3f, undefined, _0xddf6a[0x0], 0x4 * _0x2ed4cd), _0x1a6f3f['beginPath'](), _0x1a6f3f['lineCap'] = 'round', _0x1a6f3f['lineJoin'] = 'round', _0x1a6f3f['moveTo'](160.25 * _0x2ed4cd, 114.953125 * _0x2ed4cd), _0x1a6f3f['bezierCurveTo'](156.25 * _0x2ed4cd, 122.453125 * _0x2ed4cd, 156.25 * _0x2ed4cd, 122.453125 * _0x2ed4cd, 152.25 * _0x2ed4cd, 129.953125 * _0x2ed4cd), _0x1a6f3f['bezierCurveTo'](130.25 * _0x2ed4cd, 117.953125 * _0x2ed4cd, 130.25 * _0x2ed4cd, 117.953125 * _0x2ed4cd, 108.25 * _0x2ed4cd, 105.953125 * _0x2ed4cd), _0x1a6f3f['bezierCurveTo'](107.25 * _0x2ed4cd, 98.953125 * _0x2ed4cd, 107.25 * _0x2ed4cd, 98.953125 * _0x2ed4cd, 106.25 * _0x2ed4cd, 91.953125 * _0x2ed4cd), _0x1a6f3f['closePath'](), fill_path(_0x1a6f3f, _0xddf6a[0x0]), _0x1a6f3f['globalAlpha'] = 0x1, _0x1a6f3f['translate'](-0x5 * _0x2ed4cd, -0x5 * _0x2ed4cd), _0x1a6f3f['beginPath'](), _0x1a6f3f['lineCap'] = 'round', _0x1a6f3f['lineJoin'] = 'round', _0x1a6f3f['moveTo'](160.25 * _0x2ed4cd, 114.953125 * _0x2ed4cd), _0x1a6f3f['bezierCurveTo'](156.25 * _0x2ed4cd, 122.453125 * _0x2ed4cd, 156.25 * _0x2ed4cd, 122.453125 * _0x2ed4cd, 152.25 * _0x2ed4cd, 129.953125 * _0x2ed4cd), _0x1a6f3f['bezierCurveTo'](130.25 * _0x2ed4cd, 117.953125 * _0x2ed4cd, 130.25 * _0x2ed4cd, 117.953125 * _0x2ed4cd, 108.25 * _0x2ed4cd, 105.953125 * _0x2ed4cd), _0x1a6f3f['bezierCurveTo'](107.25 * _0x2ed4cd, 98.953125 * _0x2ed4cd, 107.25 * _0x2ed4cd, 98.953125 * _0x2ed4cd, 106.25 * _0x2ed4cd, 91.953125 * _0x2ed4cd), _0x1a6f3f['closePath'](), fill_path(_0x1a6f3f, _0xddf6a[0x7]), _0x1a6f3f['beginPath'](), _0x1a6f3f['lineCap'] = 'round', _0x1a6f3f['lineJoin'] = 'round', _0x1a6f3f['moveTo'](87.25 * _0x2ed4cd, 84.953125 * _0x2ed4cd), _0x1a6f3f['bezierCurveTo'](123.75 * _0x2ed4cd, 100.453125 * _0x2ed4cd, 123.75 * _0x2ed4cd, 100.453125 * _0x2ed4cd, 160.25 * _0x2ed4cd, 115.953125 * _0x2ed4cd), _0x1a6f3f['closePath'](), fill_path(_0x1a6f3f, undefined, _0xddf6a[0x6], 0x4 * _0x2ed4cd), _0x1a6f3f['globalAlpha'] = _0x29b461 ? 0.5 : 0x1, _0x1a6f3f['translate'](0x5 * _0x2ed4cd, 0x5 * _0x2ed4cd), _0x1a6f3f['beginPath'](), _0x1a6f3f['lineCap'] = 'round', _0x1a6f3f['lineJoin'] = 'round', _0x1a6f3f['moveTo'](83.25 * _0x2ed4cd, 83.953125 * _0x2ed4cd), _0x1a6f3f['bezierCurveTo'](47.75 * _0x2ed4cd, 68.453125 * _0x2ed4cd, 47.75 * _0x2ed4cd, 68.453125 * _0x2ed4cd, 12.25 * _0x2ed4cd, 52.953125 * _0x2ed4cd), _0x1a6f3f['closePath'](), fill_path(_0x1a6f3f, undefined, _0xddf6a[0x0], 0x4 * _0x2ed4cd), _0x1a6f3f['beginPath'](), _0x1a6f3f['lineCap'] = 'round', _0x1a6f3f['lineJoin'] = 'round', _0x1a6f3f['moveTo'](13.25 * _0x2ed4cd, 53.953125 * _0x2ed4cd), _0x1a6f3f['bezierCurveTo'](17.25 * _0x2ed4cd, 46.953125 * _0x2ed4cd, 17.25 * _0x2ed4cd, 46.953125 * _0x2ed4cd, 21.25 * _0x2ed4cd, 39.953125 * _0x2ed4cd), _0x1a6f3f['bezierCurveTo'](42.75 * _0x2ed4cd, 52.453125 * _0x2ed4cd, 42.75 * _0x2ed4cd, 52.453125 * _0x2ed4cd, 64.25 * _0x2ed4cd, 64.953125 * _0x2ed4cd), _0x1a6f3f['bezierCurveTo'](64.25 * _0x2ed4cd, 70.953125 * _0x2ed4cd, 64.25 * _0x2ed4cd, 70.953125 * _0x2ed4cd, 64.25 * _0x2ed4cd, 76.953125 * _0x2ed4cd), _0x1a6f3f['closePath'](), fill_path(_0x1a6f3f, _0xddf6a[0x0]), _0x1a6f3f['globalAlpha'] = 0x1, _0x1a6f3f['translate'](-0x5 * _0x2ed4cd, -0x5 * _0x2ed4cd), _0x1a6f3f['beginPath'](), _0x1a6f3f['lineCap'] = 'round', _0x1a6f3f['lineJoin'] = 'round', _0x1a6f3f['moveTo'](13.25 * _0x2ed4cd, 53.953125 * _0x2ed4cd), _0x1a6f3f['bezierCurveTo'](17.25 * _0x2ed4cd, 46.953125 * _0x2ed4cd, 17.25 * _0x2ed4cd, 46.953125 * _0x2ed4cd, 21.25 * _0x2ed4cd, 39.953125 * _0x2ed4cd), _0x1a6f3f['bezierCurveTo'](42.75 * _0x2ed4cd, 52.453125 * _0x2ed4cd, 42.75 * _0x2ed4cd, 52.453125 * _0x2ed4cd, 64.25 * _0x2ed4cd, 64.953125 * _0x2ed4cd), _0x1a6f3f['bezierCurveTo'](64.25 * _0x2ed4cd, 70.953125 * _0x2ed4cd, 64.25 * _0x2ed4cd, 70.953125 * _0x2ed4cd, 64.25 * _0x2ed4cd, 76.953125 * _0x2ed4cd), _0x1a6f3f['closePath'](), fill_path(_0x1a6f3f, _0xddf6a[0x7]), _0x1a6f3f['beginPath'](), _0x1a6f3f['lineCap'] = 'round', _0x1a6f3f['lineJoin'] = 'round', _0x1a6f3f['moveTo'](83.25 * _0x2ed4cd, 83.953125 * _0x2ed4cd), _0x1a6f3f['bezierCurveTo'](47.75 * _0x2ed4cd, 68.453125 * _0x2ed4cd, 47.75 * _0x2ed4cd, 68.453125 * _0x2ed4cd, 12.25 * _0x2ed4cd, 52.953125 * _0x2ed4cd), _0x1a6f3f['closePath'](), fill_path(_0x1a6f3f, undefined, _0xddf6a[0x6], 0x4 * _0x2ed4cd), _0x1a6f3f['globalAlpha'] = _0x29b461 ? 0.5 : 0x1, _0x1a6f3f['translate'](0x5 * _0x2ed4cd, 0x5 * _0x2ed4cd), _0x1a6f3f['beginPath'](), _0x1a6f3f['lineCap'] = 'round', _0x1a6f3f['lineJoin'] = 'round', _0x1a6f3f['moveTo'](84.25 * _0x2ed4cd, 86.953125 * _0x2ed4cd), _0x1a6f3f['bezierCurveTo'](70.25 * _0x2ed4cd, 123.953125 * _0x2ed4cd, 70.25 * _0x2ed4cd, 123.953125 * _0x2ed4cd, 56.25 * _0x2ed4cd, 160.953125 * _0x2ed4cd), _0x1a6f3f['closePath'](), fill_path(_0x1a6f3f, undefined, _0xddf6a[0x0], 0x4 * _0x2ed4cd), _0x1a6f3f['beginPath'](), _0x1a6f3f['lineCap'] = 'round', _0x1a6f3f['lineJoin'] = 'round', _0x1a6f3f['moveTo'](56.25 * _0x2ed4cd, 159.953125 * _0x2ed4cd), _0x1a6f3f['bezierCurveTo'](49.25 * _0x2ed4cd, 155.453125 * _0x2ed4cd, 49.25 * _0x2ed4cd, 155.453125 * _0x2ed4cd, 42.25 * _0x2ed4cd, 150.953125 * _0x2ed4cd), _0x1a6f3f['bezierCurveTo'](54.25 * _0x2ed4cd, 127.953125 * _0x2ed4cd, 54.25 * _0x2ed4cd, 127.953125 * _0x2ed4cd, 66.25 * _0x2ed4cd, 104.953125 * _0x2ed4cd), _0x1a6f3f['bezierCurveTo'](71.25 * _0x2ed4cd, 104.953125 * _0x2ed4cd, 71.25 * _0x2ed4cd, 104.953125 * _0x2ed4cd, 76.25 * _0x2ed4cd, 104.953125 * _0x2ed4cd), _0x1a6f3f['closePath'](), fill_path(_0x1a6f3f, _0xddf6a[0x0]), _0x1a6f3f['globalAlpha'] = 0x1, _0x1a6f3f['translate'](-0x5 * _0x2ed4cd, -0x5 * _0x2ed4cd), _0x1a6f3f['beginPath'](), _0x1a6f3f['lineCap'] = 'round', _0x1a6f3f['lineJoin'] = 'round', _0x1a6f3f['moveTo'](56.25 * _0x2ed4cd, 159.953125 * _0x2ed4cd), _0x1a6f3f['bezierCurveTo'](49.25 * _0x2ed4cd, 155.453125 * _0x2ed4cd, 49.25 * _0x2ed4cd, 155.453125 * _0x2ed4cd, 42.25 * _0x2ed4cd, 150.953125 * _0x2ed4cd), _0x1a6f3f['bezierCurveTo'](54.25 * _0x2ed4cd, 127.953125 * _0x2ed4cd, 54.25 * _0x2ed4cd, 127.953125 * _0x2ed4cd, 66.25 * _0x2ed4cd, 104.953125 * _0x2ed4cd), _0x1a6f3f['bezierCurveTo'](71.25 * _0x2ed4cd, 104.953125 * _0x2ed4cd, 71.25 * _0x2ed4cd, 104.953125 * _0x2ed4cd, 76.25 * _0x2ed4cd, 104.953125 * _0x2ed4cd), _0x1a6f3f['closePath'](), fill_path(_0x1a6f3f, _0xddf6a[0x7]), _0x1a6f3f['beginPath'](), _0x1a6f3f['lineCap'] = 'round', _0x1a6f3f['lineJoin'] = 'round', _0x1a6f3f['moveTo'](84.25 * _0x2ed4cd, 86.953125 * _0x2ed4cd), _0x1a6f3f['bezierCurveTo'](70.25 * _0x2ed4cd, 123.953125 * _0x2ed4cd, 70.25 * _0x2ed4cd, 123.953125 * _0x2ed4cd, 56.25 * _0x2ed4cd, 160.953125 * _0x2ed4cd), _0x1a6f3f['closePath'](), fill_path(_0x1a6f3f, undefined, _0xddf6a[0x6], 0x4 * _0x2ed4cd), _0x27bfff;
}

function create_windmill_head(_0x34b12b, _0x23efba, _0x346f53) {
    var _0x1e6cc4 = document['createElement']('canvas'),
        _0x3a4bad = _0x1e6cc4['getContext']('2d');
    return _0x1e6cc4['width'] = 0xaa * _0x34b12b, _0x1e6cc4['height'] = 0xad * _0x34b12b, _0x3a4bad['globalAlpha'] = _0x23efba ? 0.5 : 0x1, _0x3a4bad['translate'](0x5 * _0x34b12b, 0x5 * _0x34b12b), _0x3a4bad['save'](), _0x3a4bad['translate'](86.25 * _0x34b12b, 84.953125 * _0x34b12b), round_regular_polygon(_0x3a4bad, 0x7, 9.848857801796104 * _0x34b12b, 0x5 * _0x34b12b), _0x3a4bad['restore'](), fill_path(_0x3a4bad, _0x346f53[0x0]), _0x3a4bad['globalAlpha'] = 0x1, _0x3a4bad['translate'](-0x5 * _0x34b12b, -0x5 * _0x34b12b), _0x3a4bad['save'](), _0x3a4bad['translate'](86.25 * _0x34b12b, 84.953125 * _0x34b12b), round_regular_polygon(_0x3a4bad, 0x7, 9.848857801796104 * _0x34b12b, 0x5 * _0x34b12b), _0x3a4bad['restore'](), fill_path(_0x3a4bad, _0x346f53[0x8], _0x346f53[0x9], 0x4 * _0x34b12b), _0x1e6cc4;
}

function create_cord(_0x318e49, _0x2b4013, _0x542faf) {
    var _0x33d918 = document['createElement']('canvas'),
        _0x1ea9f5 = _0x33d918['getContext']('2d'),
        _0x1aa3d5 = _0x318e49 * 0x4b,
        _0x46b8b8 = _0x318e49 * 0x37,
        _0x38e0fa = _0x318e49 * 0x4;
    return _0x33d918['width'] = _0x1aa3d5, _0x33d918['height'] = _0x46b8b8, _0x1ea9f5['translate'](-0x1e * _0x318e49, -0x28 * _0x318e49), _0x1ea9f5['globalAlpha'] = 0x1, _0x1ea9f5['beginPath'](), _0x1ea9f5['bezierCurveTo'](0x43 * _0x318e49, 0x38 * _0x318e49, 0x48 * _0x318e49, 0x47 * _0x318e49, 0x48 * _0x318e49, 0x47 * _0x318e49), _0x1ea9f5['bezierCurveTo'](0x48 * _0x318e49, 0x47 * _0x318e49, 0x54 * _0x318e49, 0x46 * _0x318e49, 0x4b * _0x318e49, 0x52 * _0x318e49), _0x1ea9f5['bezierCurveTo'](0x46 * _0x318e49, 0x58 * _0x318e49, 0x3d * _0x318e49, 0x59 * _0x318e49, 0x3a * _0x318e49, 0x59 * _0x318e49), _0x1ea9f5['bezierCurveTo'](0x37 * _0x318e49, 0x59 * _0x318e49, 0x28 * _0x318e49, 0x59 * _0x318e49, 0x2e * _0x318e49, 0x4d * _0x318e49), _0x1ea9f5['bezierCurveTo'](0x2e * _0x318e49, 0x4d * _0x318e49, 0x2b * _0x318e49, 0x3f * _0x318e49, 0x2b * _0x318e49, 0x3f * _0x318e49), _0x1ea9f5['bezierCurveTo'](0x23 * _0x318e49, 0x3d * _0x318e49, 0x23 * _0x318e49, 0x35 * _0x318e49, 0x2a * _0x318e49, 0x2f * _0x318e49), _0x1ea9f5['bezierCurveTo'](0x30 * _0x318e49, 0x2a * _0x318e49, 0x3e * _0x318e49, 0x29 * _0x318e49, 0x42 * _0x318e49, 0x2b * _0x318e49), _0x1ea9f5['bezierCurveTo'](0x46 * _0x318e49, 0x2d * _0x318e49, 0x48 * _0x318e49, 0x30 * _0x318e49, 0x43 * _0x318e49, 0x38 * _0x318e49), _0x1ea9f5['closePath'](), fill_path(_0x1ea9f5, _0x542faf[0x0]), _0x1ea9f5['beginPath'](), _0x1ea9f5['bezierCurveTo'](0x44 * _0x318e49, 0x3d * _0x318e49, 0x48 * _0x318e49, 0x4c * _0x318e49, 0x48 * _0x318e49, 0x4c * _0x318e49), _0x1ea9f5['bezierCurveTo'](0x41 * _0x318e49, 0x55 * _0x318e49, 0x3d * _0x318e49, 0x55 * _0x318e49, 0x31 * _0x318e49, 0x53 * _0x318e49), _0x1ea9f5['bezierCurveTo'](0x31 * _0x318e49, 0x53 * _0x318e49, 0x2c * _0x318e49, 0x3f * _0x318e49, 0x2c * _0x318e49, 0x3f * _0x318e49), _0x1ea9f5['bezierCurveTo'](0x36 * _0x318e49, 0x3f * _0x318e49, 0x3c * _0x318e49, 0x3f * _0x318e49, 0x43 * _0x318e49, 0x37 * _0x318e49), _0x1ea9f5['closePath'](), fill_path(_0x1ea9f5, _0x542faf[0x1]), _0x1ea9f5['beginPath'](), _0x1ea9f5['moveTo'](0x45 * _0x318e49, 0x41 * _0x318e49), _0x1ea9f5['bezierCurveTo'](0x46 * _0x318e49, 0x3d * _0x318e49, 0x51 * _0x318e49, 0x42 * _0x318e49, 0x56 * _0x318e49, 0x42 * _0x318e49), _0x1ea9f5['bezierCurveTo'](0x5a * _0x318e49, 0x42 * _0x318e49, 0x61 * _0x318e49, 0x3f * _0x318e49, 0x61 * _0x318e49, 0x38 * _0x318e49), _0x1ea9f5['bezierCurveTo'](0x61 * _0x318e49, 0x32 * _0x318e49, 0x5d * _0x318e49, 0x2f * _0x318e49, 0x58 * _0x318e49, 0x2c * _0x318e49), fill_path(_0x1ea9f5, ![], _0x542faf[0x1], 0x2), _0x1ea9f5['beginPath'](), _0x1ea9f5['moveTo'](0x32 * _0x318e49, 0x30 * _0x318e49), _0x1ea9f5['bezierCurveTo'](0x2b * _0x318e49, 0x34 * _0x318e49, 0x32 * _0x318e49, 0x36 * _0x318e49, 0x33 * _0x318e49, 0x36 * _0x318e49), _0x1ea9f5['bezierCurveTo'](0x36 * _0x318e49, 0x36 * _0x318e49, 0x3b * _0x318e49, 0x34 * _0x318e49, 0x3b * _0x318e49, 0x31 * _0x318e49), _0x1ea9f5['bezierCurveTo'](0x3b * _0x318e49, 0x30 * _0x318e49, 0x37 * _0x318e49, 0x2e * _0x318e49, 0x32 * _0x318e49, 0x30 * _0x318e49), fill_path(_0x1ea9f5, _0x542faf[0x2]), _0x33d918;
}

function create_bandage(_0xcd58ae, _0x3a76a3, _0x29c9c7) {
    var _0x2464e1 = document['createElement']('canvas'),
        _0x14f65e = _0x2464e1['getContext']('2d'),
        _0x138417 = _0xcd58ae * 0xc3,
        _0x347fd3 = _0xcd58ae * 0xbe,
        _0x316363 = _0x138417 / 0x2,
        _0x4ebbad = _0x347fd3 / 0x2;
    _0x2464e1['width'] = _0x138417, _0x2464e1['height'] = _0x347fd3;
    var _0x5d5a8e = _0xcd58ae * 0xa,
        _0x324b48 = _0xcd58ae * 0x23,
        _0x5b0ff2 = _0xcd58ae * 0x96,
        _0x10104a = _0x324b48 / 0x2,
        _0xdd11a4 = _0x5b0ff2 / 0x2,
        _0x7d1b6b = _0xcd58ae * 0x4;
    return _0x14f65e['translate'](_0x316363 - 0x5 * _0xcd58ae, _0x4ebbad - 0x5 * _0xcd58ae), _0x14f65e['rotate'](-Math['PI'] / 1.25), _0x14f65e['globalAlpha'] = 0x1, round_rect(_0x14f65e, -_0x10104a, -_0xdd11a4, _0x324b48, _0x5b0ff2, _0x5d5a8e), fill_path(_0x14f65e, _0x29c9c7[0x0], _0x29c9c7[0x1], _0x7d1b6b), _0x14f65e['translate'](0x0, 0x0), _0x14f65e['rotate'](Math['PI'] / 0x3), _0x14f65e['globalAlpha'] = 0x1, round_rect(_0x14f65e, -_0x10104a, -_0xdd11a4, _0x324b48, _0x5b0ff2, _0x5d5a8e), fill_path(_0x14f65e, _0x29c9c7[0x0], _0x29c9c7[0x1], _0x7d1b6b), _0x14f65e['translate'](0x0, 0x5), round_rect(_0x14f65e, -_0x10104a / 0x2, -_0xdd11a4 / 0x2, _0x324b48 / 0x2, _0x5b0ff2 / 0x3, _0x5d5a8e - 0x2), fill_path(_0x14f65e, _0x29c9c7[0x1]), _0x2464e1;
}

function create_craft_button(_0x2a5827, _0x41f7ad, _0xa08667, _0x56b39c, _0xe59ea1) {
    var _0x501d1b = document['createElement']('canvas'),
        _0x237492 = _0x501d1b['getContext']('2d'),
        _0x2a9798 = _0x2a5827 * 0x46,
        _0x18e753 = _0x2a5827 * 0x46,
        _0x371505 = _0x2a5827 * 0xa,
        _0x1ce62c = _0x2a5827 * 0x5;
    _0x501d1b['width'] = _0x2a9798, _0x501d1b['height'] = _0x18e753 + _0x1ce62c;
    for (var _0xdb4e90 = 0x0; _0xdb4e90 < _0x41f7ad['length']; _0xdb4e90++) {
        var _0x41c959 = _0x41f7ad[_0xdb4e90];
        _0x237492['globalAlpha'] = _0x41c959['a'];
        var _0x202027 = _0x41c959['f'](_0xa08667, ![], _0x41c959['c']);
        _0x237492['save'](), _0x237492['translate'](_0x2a9798 / 0x2 + _0x41c959['x'] * _0x2a5827, _0x18e753 / 0x2 + _0x41c959['y'] * _0x2a5827), _0x237492['rotate'](_0x41c959['r']), _0x237492['drawImage'](_0x202027, -_0x202027['width'] / 0x2, -_0x202027['height'] / 0x2), _0x237492['restore']();
    }
    var _0x2ddc37 = [];
    for (var _0xdb4e90 = 0x0; _0xdb4e90 < _0x56b39c['length']; _0xdb4e90++) {
        var _0x44de36 = document['createElement']('canvas'),
            _0x55d260 = _0x44de36['getContext']('2d');
        _0x44de36['width'] = _0x2a9798, _0x44de36['height'] = _0x18e753 + _0x1ce62c, _0x55d260['globalAlpha'] = _0xe59ea1 / 0x2;
        if (_0xdb4e90 == 0x2) round_rect(_0x55d260, 0x0, _0x1ce62c, _0x2a9798, _0x18e753, _0x371505);
        else round_rect(_0x55d260, 0x0, 0x0, _0x2a9798, _0x18e753 + _0x1ce62c, _0x371505);
        fill_path(_0x55d260, '#081a19'), _0x55d260['globalAlpha'] = _0xe59ea1;
        if (_0xdb4e90 == 0x2) round_rect(_0x55d260, 0x0, _0x1ce62c, _0x2a9798, _0x18e753, _0x371505);
        else round_rect(_0x55d260, 0x0, 0x0, _0x2a9798, _0x18e753, _0x371505);
        fill_path(_0x55d260, _0x56b39c[_0xdb4e90]), _0x55d260['globalAlpha'] = 0x1;
        if (_0xdb4e90 == 0x2) _0x55d260['drawImage'](_0x501d1b, 0x0, _0x1ce62c);
        else _0x55d260['drawImage'](_0x501d1b, 0x0, 0x0);
        _0x2ddc37['push'](CTI(_0x44de36));
    }
    return _0x2ddc37;
}

function create_bread_oven_ui(_0x208b26, _0x3f4f75) {
    var _0x102050 = document['createElement']('canvas'),
        _0x1866a9 = _0x102050['getContext']('2d');
    return _0x102050['width'] = 0x95 * _0x208b26, _0x102050['height'] = 0x164 * _0x208b26, _0x1866a9['save'](), _0x1866a9['translate'](74.5 * _0x208b26, 177.5 * _0x208b26), round_rect(_0x1866a9, -57.5 * _0x208b26, -161.5 * _0x208b26, 0x64 * _0x208b26, 0x143 * _0x208b26, 0xa * _0x208b26), _0x1866a9['restore'](), fill_path(_0x1866a9, _0x3f4f75[0x0], _0x3f4f75[0x1], 0x4 * _0x208b26), _0x1866a9['save'](), _0x1866a9['translate'](74.5 * _0x208b26, 177.5 * _0x208b26), round_rect(_0x1866a9, -57.5 * _0x208b26, 50.5 * _0x208b26, 0x64 * _0x208b26, 0x69 * _0x208b26, 0xa * _0x208b26), _0x1866a9['restore'](), fill_path(_0x1866a9, _0x3f4f75[0x6], _0x3f4f75[0x1], 0x4 * _0x208b26), _0x1866a9['beginPath'](), _0x1866a9['lineCap'] = 'round', _0x1866a9['lineJoin'] = 'round', _0x1866a9['moveTo'](0x10 * _0x208b26, 0x7d * _0x208b26), _0x1866a9['bezierCurveTo'](74.5 * _0x208b26, 0x7d * _0x208b26, 0x76 * _0x208b26, 0x7d * _0x208b26, 0x76 * _0x208b26, 0x7d * _0x208b26), _0x1866a9['closePath'](), fill_path(_0x1866a9, _0x3f4f75[0x2], _0x3f4f75[0x2], 0xa * _0x208b26), _0x1866a9['beginPath'](), _0x1866a9['lineCap'] = 'round', _0x1866a9['lineJoin'] = 'round', _0x1866a9['moveTo'](0x10 * _0x208b26, 0x78 * _0x208b26), _0x1866a9['bezierCurveTo'](74.5 * _0x208b26, 0x78 * _0x208b26, 74.5 * _0x208b26, 0x78 * _0x208b26, 0x76 * _0x208b26, 0x78 * _0x208b26), _0x1866a9['closePath'](), fill_path(_0x1866a9, _0x3f4f75[0x3], _0x3f4f75[0x3], 0xa * _0x208b26), _0x1866a9['beginPath'](), _0x1866a9['lineCap'] = 'round', _0x1866a9['lineJoin'] = 'round', _0x1866a9['moveTo'](0x10 * _0x208b26, 0xe4 * _0x208b26), _0x1866a9['bezierCurveTo'](0x4b * _0x208b26, 228.5 * _0x208b26, 0x76 * _0x208b26, 228.5 * _0x208b26, 0x76 * _0x208b26, 0xe5 * _0x208b26), _0x1866a9['closePath'](), fill_path(_0x1866a9, _0x3f4f75[0x2], _0x3f4f75[0x2], 0xa * _0x208b26), _0x1866a9['beginPath'](), _0x1866a9['lineCap'] = 'round', _0x1866a9['lineJoin'] = 'round', _0x1866a9['moveTo'](0x10 * _0x208b26, 0xe0 * _0x208b26), _0x1866a9['bezierCurveTo'](0x4b * _0x208b26, 0xe0 * _0x208b26, 0x76 * _0x208b26, 0xe0 * _0x208b26, 0x76 * _0x208b26, 0xe0 * _0x208b26), _0x1866a9['closePath'](), fill_path(_0x1866a9, _0x3f4f75[0x3], _0x3f4f75[0x3], 0xa * _0x208b26), _0x1866a9['save'](), _0x1866a9['translate'](0x48 * _0x208b26, 68.5 * _0x208b26), round_rect(_0x1866a9, -41.5 * _0x208b26, -36.5 * _0x208b26, 0x49 * _0x208b26, 0x49 * _0x208b26, 0xd * _0x208b26), _0x1866a9['restore'](), fill_path(_0x1866a9, _0x3f4f75[0x4]), _0x1866a9['save'](), _0x1866a9['translate'](0x48 * _0x208b26, 175.5 * _0x208b26), round_rect(_0x1866a9, -41.5 * _0x208b26, -38.5 * _0x208b26, 0x49 * _0x208b26, 0x49 * _0x208b26, 0xd * _0x208b26), _0x1866a9['restore'](), fill_path(_0x1866a9, _0x3f4f75[0x4]), _0x1866a9['save'](), _0x1866a9['translate'](0x48 * _0x208b26, 279.5 * _0x208b26), round_rect(_0x1866a9, -41.5 * _0x208b26, -40.5 * _0x208b26, 0x49 * _0x208b26, 0x49 * _0x208b26, 0xd * _0x208b26), _0x1866a9['restore'](), fill_path(_0x1866a9, _0x3f4f75[0x4]), _0x1866a9['beginPath'](), _0x1866a9['lineCap'] = 'round', _0x1866a9['lineJoin'] = 'round', _0x1866a9['moveTo'](0x10 * _0x208b26, 0x152 * _0x208b26), _0x1866a9['bezierCurveTo'](0x4b * _0x208b26, 0x152 * _0x208b26, 0x76 * _0x208b26, 0x152 * _0x208b26, 0x76 * _0x208b26, 0x152 * _0x208b26), _0x1866a9['closePath'](), fill_path(_0x1866a9, _0x3f4f75[0x2], _0x3f4f75[0x2], 0xa * _0x208b26), _0x1866a9['beginPath'](), _0x1866a9['lineCap'] = 'round', _0x1866a9['lineJoin'] = 'round', _0x1866a9['moveTo'](0x10 * _0x208b26, 0x14d * _0x208b26), _0x1866a9['bezierCurveTo'](0x4b * _0x208b26, 0x14d * _0x208b26, 0x76 * _0x208b26, 0x14d * _0x208b26, 0x76 * _0x208b26, 0x14d * _0x208b26), _0x1866a9['closePath'](), fill_path(_0x1866a9, _0x3f4f75[0x3], _0x3f4f75[0x3], 0xa * _0x208b26), _0x102050;
}

function create_big_fire_wood(_0x549e7e, _0xcf83a, _0x47060e) {
    var _0x21bd46 = document['createElement']('canvas'),
        _0x372f6e = _0x21bd46['getContext']('2d'),
        _0x47fea7 = _0x549e7e * 0xc1,
        _0x453046 = _0x549e7e * 0xc6,
        _0x294ba1 = 0x8c * _0x549e7e,
        _0x21d84c = 0x5a * _0x549e7e;
    _0x21bd46['width'] = _0x47fea7, _0x21bd46['height'] = _0x453046;
    var _0x1c692c = _0x549e7e * 0xa,
        _0x470fbc = _0x549e7e * 0x19,
        _0x5c4d8a = _0x549e7e * 0xb4,
        _0x507dcf = _0x470fbc / 0x2,
        _0x484970 = _0x5c4d8a / 0x2,
        _0xec22e0 = _0x549e7e * 0x4;
    return _0x372f6e['translate'](-0x19 * _0x549e7e, 0x1 * _0x549e7e), _0x372f6e['translate'](_0x294ba1, _0x21d84c), _0x372f6e['rotate'](-Math['PI'] / 0x5), round_rect(_0x372f6e, -_0x507dcf, -_0x484970, _0x470fbc, _0x5c4d8a, _0x1c692c), fill_path(_0x372f6e, _0x47060e[0x0], _0x47060e[0x1], _0xec22e0), _0x372f6e['translate'](-0x1e * _0x549e7e, -0x19 * _0x549e7e), _0x372f6e['rotate'](Math['PI'] / 0x3), round_rect(_0x372f6e, -_0x507dcf, -_0x484970, _0x470fbc, _0x5c4d8a, _0x1c692c), fill_path(_0x372f6e, _0x47060e[0x0], _0x47060e[0x1], _0xec22e0), _0x372f6e['translate'](0x23 * _0x549e7e, 0x1e * _0x549e7e), _0x372f6e['rotate'](Math['PI'] / 0x3), round_rect(_0x372f6e, -_0x507dcf, -_0x484970, _0x470fbc, _0x5c4d8a, _0x1c692c), fill_path(_0x372f6e, _0x47060e[0x0], _0x47060e[0x1], _0xec22e0), _0x21bd46;
}

function create_fire(_0x4c707d, _0x4fc1d4, _0x2607cd) {
    var _0x4411f0 = document['createElement']('canvas'),
        _0x39e909 = _0x4411f0['getContext']('2d'),
        _0x4a0b91 = _0x4c707d * 0x91,
        _0x110fc7 = _0x4c707d * 0x91,
        _0x549559 = _0x4a0b91 / 0x2,
        _0x54fd72 = _0x110fc7 / 0x2;
    _0x4411f0['width'] = _0x4a0b91, _0x4411f0['height'] = _0x110fc7;
    var _0x354d99 = _0x4c707d * 0x46;
    _0x39e909['translate'](_0x549559, _0x54fd72), _0x39e909['globalAlpha'] = 0.4, circle(_0x39e909, 0x0, 0x0, _0x354d99), fill_path(_0x39e909, _0x2607cd[0x0]);
    var _0x354d99 = _0x4c707d * 0x32;
    _0x39e909['translate'](0x0, 0x0), _0x39e909['globalAlpha'] = 0.8, circle(_0x39e909, 0x0, 0x0, _0x354d99), fill_path(_0x39e909, _0x2607cd[0x0]);
    var _0x354d99 = _0x4c707d * 0x23;
    _0x39e909['translate'](0x0, 0x0), _0x39e909['globalAlpha'] = 0.8, circle(_0x39e909, 0x0, 0x0, _0x354d99), fill_path(_0x39e909, _0x2607cd[0x1]);
    var _0x354d99 = _0x4c707d * 0x14;
    return _0x39e909['translate'](0x0, 0x0), _0x39e909['globalAlpha'] = 0.8, circle(_0x39e909, 0x0, 0x0, _0x354d99), fill_path(_0x39e909, _0x2607cd[0x2]), _0x4411f0;
}

function create_wood_fire(_0x3aa2a6, _0x55bdc6, _0x56da2d) {
    var _0x3c34e0 = document['createElement']('canvas'),
        _0x147415 = _0x3c34e0['getContext']('2d'),
        _0xc25e56 = _0x3aa2a6 * 0x87,
        _0x1329a6 = _0x3aa2a6 * 0xbe,
        _0x470d9 = _0xc25e56 / 0x2,
        _0x10fae9 = _0x1329a6 / 0x2;
    _0x3c34e0['width'] = _0xc25e56, _0x3c34e0['height'] = _0x1329a6;
    var _0x5faf31 = _0x3aa2a6 * 0xa,
        _0x9f083 = _0x3aa2a6 * 0x19,
        _0x1fd477 = _0x3aa2a6 * 0xb4,
        _0xd786ca = _0x9f083 / 0x2,
        _0x1eb48c = _0x1fd477 / 0x2,
        _0x31a1bb = _0x3aa2a6 * 0x4;
    return _0x147415['translate'](_0x470d9, _0x10fae9), _0x147415['rotate'](-Math['PI'] / 0x5), _0x147415['globalAlpha'] = 0x1, round_rect(_0x147415, -_0xd786ca, -_0x1eb48c, _0x9f083, _0x1fd477, _0x5faf31), fill_path(_0x147415, _0x56da2d[0x0], _0x56da2d[0x1], _0x31a1bb), _0x147415['translate'](0x0, 0x0), _0x147415['rotate'](Math['PI'] / 0x5), _0x147415['globalAlpha'] = 0x1, round_rect(_0x147415, -_0xd786ca, -_0x1eb48c, _0x9f083, _0x1fd477, _0x5faf31), fill_path(_0x147415, _0x56da2d[0x0], _0x56da2d[0x1], _0x31a1bb), _0x3c34e0;
}

function create_ground_fire(_0x4f5230, _0x98e4c6, _0x3158e5) {
    var _0x2e7c88 = document['createElement']('canvas'),
        _0x45cb9d = _0x2e7c88['getContext']('2d'),
        _0xfa59ef = _0x4f5230 * 0xcd,
        _0x4ad5a8 = _0x4f5230 * 0xcd,
        _0x22e5bc = _0xfa59ef / 0x2,
        _0x266cde = _0x4ad5a8 / 0x2;
    _0x2e7c88['width'] = _0xfa59ef, _0x2e7c88['height'] = _0x4ad5a8;
    var _0x21c4b3 = _0x4f5230 * 0x64;
    return _0x45cb9d['translate'](_0x22e5bc, _0x266cde), _0x45cb9d['globalAlpha'] = 0x1, circle(_0x45cb9d, 0x0, 0x0, _0x21c4b3), fill_path(_0x45cb9d, _0x3158e5[0x0]), _0x2e7c88;
}

function create_halo_fire(_0x2a2c42, _0x2cb2e4, _0x51cf18) {
    var _0x51dcfd = document['createElement']('canvas'),
        _0x4bc710 = _0x51dcfd['getContext']('2d'),
        _0x261afb = _0x2a2c42 * 0x172,
        _0x2709f3 = _0x2a2c42 * 0x172,
        _0x231e9c = _0x261afb / 0x2,
        _0x4727ee = _0x2709f3 / 0x2;
    _0x51dcfd['width'] = _0x261afb, _0x51dcfd['height'] = _0x2709f3;
    var _0x1afcac = _0x2a2c42 * 0xb4;
    return _0x4bc710['globalAlpha'] = 0.2, circle(_0x4bc710, _0x231e9c, _0x4727ee, _0x1afcac), fill_path(_0x4bc710, _0x51cf18[0x0]), _0x51dcfd;
}

function create_elf_hat(_0x209057, _0x1c931c, _0x523352) {
    var _0x8c805d = document['createElement']('canvas'),
        _0x11d180 = _0x8c805d['getContext']('2d');
    return _0x8c805d['width'] = 0x9b * _0x209057, _0x8c805d['height'] = 0x7f * _0x209057, _0x11d180['globalAlpha'] = 0.5, _0x11d180['translate'](0x0, 0x8 * _0x209057), _0x11d180['translate'](-0x7 * _0x209057, -0x14 * _0x209057), _0x11d180['beginPath'](), _0x11d180['lineCap'] = 'round', _0x11d180['lineJoin'] = 'round', _0x11d180['moveTo'](0x37 * _0x209057, 0x44 * _0x209057), _0x11d180['bezierCurveTo'](0x56 * _0x209057, 0x40 * _0x209057, 0x75 * _0x209057, 0x42 * _0x209057, 0x86 * _0x209057, 0x44 * _0x209057), _0x11d180['bezierCurveTo'](0x98 * _0x209057, 0x45 * _0x209057, 0xa5 * _0x209057, 0x56 * _0x209057, 0x98 * _0x209057, 0x68 * _0x209057), _0x11d180['bezierCurveTo'](0x92 * _0x209057, 0x57 * _0x209057, 0x7a * _0x209057, 0x59 * _0x209057, 0x62 * _0x209057, 0x5a * _0x209057), _0x11d180['bezierCurveTo'](0x40 * _0x209057, 0x59 * _0x209057, 0x29 * _0x209057, 0x5b * _0x209057, 0x24 * _0x209057, 0x6a * _0x209057), _0x11d180['bezierCurveTo'](0x13 * _0x209057, 0x5c * _0x209057, 0x1f * _0x209057, 0x47 * _0x209057, 0x36 * _0x209057, 0x45 * _0x209057), _0x11d180['closePath'](), fill_path(_0x11d180, _0x523352[0x0]), _0x11d180['globalAlpha'] = 0x1, _0x11d180['translate'](0x0, -0x8 * _0x209057), _0x11d180['translate'](0x7 * _0x209057, 0x14 * _0x209057), _0x11d180['beginPath'](), _0x11d180['lineCap'] = 'round', _0x11d180['lineJoin'] = 'round', _0x11d180['moveTo'](0x18 * _0x209057, 0x1c * _0x209057), _0x11d180['bezierCurveTo'](0x27 * _0x209057, 0x1e * _0x209057, 0x25 * _0x209057, 0x1f * _0x209057, 0x28 * _0x209057, 0x20 * _0x209057), _0x11d180['bezierCurveTo'](0x16 * _0x209057, 0x2d * _0x209057, 0x1a * _0x209057, 0x3a * _0x209057, 0x1d * _0x209057, 0x42 * _0x209057), _0x11d180['bezierCurveTo'](86.5 * _0x209057, 0x41 * _0x209057, 86.5 * _0x209057, 0x41 * _0x209057, 0x90 * _0x209057, 0x40 * _0x209057), _0x11d180['bezierCurveTo'](0x97 * _0x209057, 0x2a * _0x209057, 0x84 * _0x209057, 0x14 * _0x209057, 0x78 * _0x209057, 0x10 * _0x209057), _0x11d180['bezierCurveTo'](0x6a * _0x209057, 0xc * _0x209057, 0x59 * _0x209057, 0x0 * _0x209057, 0x49 * _0x209057, 0x3 * _0x209057), _0x11d180['bezierCurveTo'](0x33 * _0x209057, 0x5 * _0x209057, 0x24 * _0x209057, 0x14 * _0x209057, 0x19 * _0x209057, 0x1c * _0x209057), _0x11d180['closePath'](), fill_path(_0x11d180, _0x523352[0x1], _0x523352[0x2], 0x4 * _0x209057), _0x11d180['beginPath'](), _0x11d180['lineCap'] = 'round', _0x11d180['lineJoin'] = 'round', _0x11d180['moveTo'](0x1e * _0x209057, 0x29 * _0x209057), _0x11d180['bezierCurveTo'](0x31 * _0x209057, 0x1f * _0x209057, 0x35 * _0x209057, 0x1d * _0x209057, 0x3e * _0x209057, 0x1b * _0x209057), _0x11d180['bezierCurveTo'](0x3b * _0x209057, 0x18 * _0x209057, 0x38 * _0x209057, 0x19 * _0x209057, 0x35 * _0x209057, 0x18 * _0x209057), _0x11d180['bezierCurveTo'](0x43 * _0x209057, 0xf * _0x209057, 0x54 * _0x209057, 0xc * _0x209057, 0x78 * _0x209057, 0x10 * _0x209057), _0x11d180['bezierCurveTo'](0x6b * _0x209057, 0xb * _0x209057, 0x60 * _0x209057, 0x6 * _0x209057, 0x55 * _0x209057, 0x2 * _0x209057), _0x11d180['bezierCurveTo'](0x3b * _0x209057, 0x3 * _0x209057, 0x36 * _0x209057, 0x7 * _0x209057, 0x28 * _0x209057, 0x11 * _0x209057), _0x11d180['bezierCurveTo'](32.5 * _0x209057, 22.5 * _0x209057, 32.5 * _0x209057, 22.5 * _0x209057, 0x19 * _0x209057, 0x1c * _0x209057), _0x11d180['bezierCurveTo'](0x20 * _0x209057, 0x1e * _0x209057, 0x20 * _0x209057, 0x1e * _0x209057, 0x27 * _0x209057, 0x20 * _0x209057), _0x11d180['closePath'](), fill_path(_0x11d180, _0x523352[0x3]), _0x11d180['beginPath'](), _0x11d180['lineCap'] = 'round', _0x11d180['lineJoin'] = 'round', _0x11d180['moveTo'](0x18 * _0x209057, 0x1c * _0x209057), _0x11d180['bezierCurveTo'](0x27 * _0x209057, 0x1e * _0x209057, 0x25 * _0x209057, 0x1f * _0x209057, 0x28 * _0x209057, 0x20 * _0x209057), _0x11d180['bezierCurveTo'](0x16 * _0x209057, 0x2d * _0x209057, 0x1a * _0x209057, 0x3a * _0x209057, 0x1d * _0x209057, 0x42 * _0x209057), _0x11d180['bezierCurveTo'](86.5 * _0x209057, 0x41 * _0x209057, 86.5 * _0x209057, 0x41 * _0x209057, 0x90 * _0x209057, 0x40 * _0x209057), _0x11d180['bezierCurveTo'](0x97 * _0x209057, 0x2a * _0x209057, 0x84 * _0x209057, 0x14 * _0x209057, 0x78 * _0x209057, 0x10 * _0x209057), _0x11d180['bezierCurveTo'](0x6a * _0x209057, 0xc * _0x209057, 0x59 * _0x209057, 0x0 * _0x209057, 0x49 * _0x209057, 0x3 * _0x209057), _0x11d180['bezierCurveTo'](0x33 * _0x209057, 0x5 * _0x209057, 0x24 * _0x209057, 0x14 * _0x209057, 0x19 * _0x209057, 0x1c * _0x209057), _0x11d180['closePath'](), fill_path(_0x11d180, undefined, _0x523352[0x2], 0x4 * _0x209057), circle(_0x11d180, 0x12 * _0x209057, 0x26 * _0x209057, 14.866068747318506 * _0x209057), fill_path(_0x11d180, _0x523352[0x4], _0x523352[0x5], 0x4 * _0x209057), _0x11d180['beginPath'](), _0x11d180['lineCap'] = 'round', _0x11d180['lineJoin'] = 'round', _0x11d180['moveTo'](0x27 * _0x209057, 0x1e * _0x209057), _0x11d180['bezierCurveTo'](0x1b * _0x209057, 0x26 * _0x209057, 0x19 * _0x209057, 0x32 * _0x209057, 0x1a * _0x209057, 0x3c * _0x209057), _0x11d180['bezierCurveTo'](36.5 * _0x209057, 58.5 * _0x209057, 36.5 * _0x209057, 58.5 * _0x209057, 0x2f * _0x209057, 0x39 * _0x209057), fill_path(_0x11d180, _0x523352[0x1], _0x523352[0x2], 0x4 * _0x209057), _0x11d180['translate'](-0x7 * _0x209057, -0x14 * _0x209057), _0x11d180['beginPath'](), _0x11d180['lineCap'] = 'round', _0x11d180['lineJoin'] = 'round', _0x11d180['moveTo'](0x1b * _0x209057, 0x4a * _0x209057), _0x11d180['bezierCurveTo'](0x26 * _0x209057, 77.5 * _0x209057, 0x26 * _0x209057, 77.5 * _0x209057, 0x31 * _0x209057, 0x51 * _0x209057), _0x11d180['bezierCurveTo'](54.5 * _0x209057, 75.5 * _0x209057, 54.5 * _0x209057, 75.5 * _0x209057, 0x3c * _0x209057, 0x46 * _0x209057), _0x11d180['bezierCurveTo'](0x40 * _0x209057, 0x48 * _0x209057, 0x40 * _0x209057, 0x48 * _0x209057, 0x44 * _0x209057, 0x4a * _0x209057), _0x11d180['bezierCurveTo'](80.5 * _0x209057, 67.5 * _0x209057, 80.5 * _0x209057, 67.5 * _0x209057, 0x5d * _0x209057, 0x3d * _0x209057), _0x11d180['bezierCurveTo'](104.5 * _0x209057, 0x44 * _0x209057, 104.5 * _0x209057, 0x44 * _0x209057, 0x74 * _0x209057, 0x4b * _0x209057), _0x11d180['bezierCurveTo'](120.5 * _0x209057, 72.5 * _0x209057, 120.5 * _0x209057, 72.5 * _0x209057, 0x7d * _0x209057, 0x46 * _0x209057), _0x11d180['bezierCurveTo'](0x81 * _0x209057, 0x4b * _0x209057, 0x81 * _0x209057, 0x4b * _0x209057, 0x85 * _0x209057, 0x50 * _0x209057), _0x11d180['bezierCurveTo'](145.5 * _0x209057, 76.5 * _0x209057, 145.5 * _0x209057, 76.5 * _0x209057, 0x9e * _0x209057, 0x49 * _0x209057), _0x11d180['bezierCurveTo'](0x9e * _0x209057, 0x57 * _0x209057, 0x9e * _0x209057, 0x5d * _0x209057, 0x9b * _0x209057, 0x5f * _0x209057), _0x11d180['bezierCurveTo'](152.5 * _0x209057, 0x60 * _0x209057, 152.5 * _0x209057, 0x60 * _0x209057, 0x96 * _0x209057, 0x61 * _0x209057), _0x11d180['bezierCurveTo'](0x79 * _0x209057, 0x55 * _0x209057, 0x6c * _0x209057, 0x56 * _0x209057, 0x5d * _0x209057, 0x55 * _0x209057), _0x11d180['bezierCurveTo'](0x40 * _0x209057, 0x55 * _0x209057, 0x34 * _0x209057, 0x5f * _0x209057, 0x26 * _0x209057, 0x63 * _0x209057), _0x11d180['bezierCurveTo'](0x24 * _0x209057, 98.5 * _0x209057, 0x24 * _0x209057, 98.5 * _0x209057, 0x22 * _0x209057, 0x62 * _0x209057), _0x11d180['bezierCurveTo'](0x19 * _0x209057, 0x62 * _0x209057, 0x1b * _0x209057, 0x5b * _0x209057, 0x1b * _0x209057, 0x4c * _0x209057), _0x11d180['closePath'](), fill_path(_0x11d180, _0x523352[0x6], _0x523352[0x7], 0x6 * _0x209057), _0x8c805d;
}

function create_christmas_hat(_0x283725, _0x214f57, _0x2fd7b8) {
    var _0x129f6a = document['createElement']('canvas'),
        _0xb96e79 = _0x129f6a['getContext']('2d');
    return _0x129f6a['width'] = 0x9b * _0x283725, _0x129f6a['height'] = 0x7f * _0x283725, _0xb96e79['globalAlpha'] = 0.5, _0xb96e79['translate'](0x0, 0x8 * _0x283725), _0xb96e79['translate'](-0x7 * _0x283725, -0x14 * _0x283725), _0xb96e79['beginPath'](), _0xb96e79['lineCap'] = 'round', _0xb96e79['lineJoin'] = 'round', _0xb96e79['moveTo'](0x37 * _0x283725, 0x44 * _0x283725), _0xb96e79['bezierCurveTo'](0x56 * _0x283725, 0x40 * _0x283725, 0x75 * _0x283725, 0x42 * _0x283725, 0x86 * _0x283725, 0x44 * _0x283725), _0xb96e79['bezierCurveTo'](0x98 * _0x283725, 0x45 * _0x283725, 0xa5 * _0x283725, 0x56 * _0x283725, 0x98 * _0x283725, 0x68 * _0x283725), _0xb96e79['bezierCurveTo'](0x92 * _0x283725, 0x57 * _0x283725, 0x7a * _0x283725, 0x59 * _0x283725, 0x62 * _0x283725, 0x5a * _0x283725), _0xb96e79['bezierCurveTo'](0x40 * _0x283725, 0x59 * _0x283725, 0x29 * _0x283725, 0x5b * _0x283725, 0x24 * _0x283725, 0x6a * _0x283725), _0xb96e79['bezierCurveTo'](0x13 * _0x283725, 0x5c * _0x283725, 0x1f * _0x283725, 0x47 * _0x283725, 0x36 * _0x283725, 0x45 * _0x283725), _0xb96e79['closePath'](), fill_path(_0xb96e79, _0x2fd7b8[0x0]), _0xb96e79['globalAlpha'] = 0x1, _0xb96e79['translate'](0x0, -0x8 * _0x283725), _0xb96e79['translate'](0x7 * _0x283725, 0x14 * _0x283725), _0xb96e79['beginPath'](), _0xb96e79['lineCap'] = 'round', _0xb96e79['lineJoin'] = 'round', _0xb96e79['moveTo'](0x18 * _0x283725, 0x1c * _0x283725), _0xb96e79['bezierCurveTo'](0x27 * _0x283725, 0x1e * _0x283725, 0x25 * _0x283725, 0x1f * _0x283725, 0x28 * _0x283725, 0x20 * _0x283725), _0xb96e79['bezierCurveTo'](0x16 * _0x283725, 0x2d * _0x283725, 0x1a * _0x283725, 0x3a * _0x283725, 0x1d * _0x283725, 0x42 * _0x283725), _0xb96e79['bezierCurveTo'](86.5 * _0x283725, 0x41 * _0x283725, 86.5 * _0x283725, 0x41 * _0x283725, 0x90 * _0x283725, 0x40 * _0x283725), _0xb96e79['bezierCurveTo'](0x97 * _0x283725, 0x2a * _0x283725, 0x84 * _0x283725, 0x14 * _0x283725, 0x78 * _0x283725, 0x10 * _0x283725), _0xb96e79['bezierCurveTo'](0x6a * _0x283725, 0xc * _0x283725, 0x59 * _0x283725, 0x0 * _0x283725, 0x49 * _0x283725, 0x3 * _0x283725), _0xb96e79['bezierCurveTo'](0x33 * _0x283725, 0x5 * _0x283725, 0x24 * _0x283725, 0x14 * _0x283725, 0x19 * _0x283725, 0x1c * _0x283725), _0xb96e79['closePath'](), fill_path(_0xb96e79, _0x2fd7b8[0x1], _0x2fd7b8[0x2], 0x4 * _0x283725), _0xb96e79['beginPath'](), _0xb96e79['lineCap'] = 'round', _0xb96e79['lineJoin'] = 'round', _0xb96e79['moveTo'](0x1e * _0x283725, 0x29 * _0x283725), _0xb96e79['bezierCurveTo'](0x31 * _0x283725, 0x1f * _0x283725, 0x35 * _0x283725, 0x1d * _0x283725, 0x3e * _0x283725, 0x1b * _0x283725), _0xb96e79['bezierCurveTo'](0x3b * _0x283725, 0x18 * _0x283725, 0x38 * _0x283725, 0x19 * _0x283725, 0x35 * _0x283725, 0x18 * _0x283725), _0xb96e79['bezierCurveTo'](0x43 * _0x283725, 0xf * _0x283725, 0x54 * _0x283725, 0xc * _0x283725, 0x78 * _0x283725, 0x10 * _0x283725), _0xb96e79['bezierCurveTo'](0x6b * _0x283725, 0xb * _0x283725, 0x60 * _0x283725, 0x6 * _0x283725, 0x55 * _0x283725, 0x2 * _0x283725), _0xb96e79['bezierCurveTo'](0x3b * _0x283725, 0x3 * _0x283725, 0x36 * _0x283725, 0x7 * _0x283725, 0x28 * _0x283725, 0x11 * _0x283725), _0xb96e79['bezierCurveTo'](32.5 * _0x283725, 22.5 * _0x283725, 32.5 * _0x283725, 22.5 * _0x283725, 0x19 * _0x283725, 0x1c * _0x283725), _0xb96e79['bezierCurveTo'](0x20 * _0x283725, 0x1e * _0x283725, 0x20 * _0x283725, 0x1e * _0x283725, 0x27 * _0x283725, 0x20 * _0x283725), _0xb96e79['closePath'](), fill_path(_0xb96e79, _0x2fd7b8[0x3]), _0xb96e79['beginPath'](), _0xb96e79['lineCap'] = 'round', _0xb96e79['lineJoin'] = 'round', _0xb96e79['moveTo'](0x18 * _0x283725, 0x1c * _0x283725), _0xb96e79['bezierCurveTo'](0x27 * _0x283725, 0x1e * _0x283725, 0x25 * _0x283725, 0x1f * _0x283725, 0x28 * _0x283725, 0x20 * _0x283725), _0xb96e79['bezierCurveTo'](0x16 * _0x283725, 0x2d * _0x283725, 0x1a * _0x283725, 0x3a * _0x283725, 0x1d * _0x283725, 0x42 * _0x283725), _0xb96e79['bezierCurveTo'](86.5 * _0x283725, 0x41 * _0x283725, 86.5 * _0x283725, 0x41 * _0x283725, 0x90 * _0x283725, 0x40 * _0x283725), _0xb96e79['bezierCurveTo'](0x97 * _0x283725, 0x2a * _0x283725, 0x84 * _0x283725, 0x14 * _0x283725, 0x78 * _0x283725, 0x10 * _0x283725), _0xb96e79['bezierCurveTo'](0x6a * _0x283725, 0xc * _0x283725, 0x59 * _0x283725, 0x0 * _0x283725, 0x49 * _0x283725, 0x3 * _0x283725), _0xb96e79['bezierCurveTo'](0x33 * _0x283725, 0x5 * _0x283725, 0x24 * _0x283725, 0x14 * _0x283725, 0x19 * _0x283725, 0x1c * _0x283725), _0xb96e79['closePath'](), fill_path(_0xb96e79, undefined, _0x2fd7b8[0x2], 0x4 * _0x283725), circle(_0xb96e79, 0x12 * _0x283725, 0x26 * _0x283725, 14.866068747318506 * _0x283725), fill_path(_0xb96e79, _0x2fd7b8[0x4], _0x2fd7b8[0x5], 0x4 * _0x283725), _0xb96e79['beginPath'](), _0xb96e79['lineCap'] = 'round', _0xb96e79['lineJoin'] = 'round', _0xb96e79['moveTo'](0x27 * _0x283725, 0x1e * _0x283725), _0xb96e79['bezierCurveTo'](0x1b * _0x283725, 0x26 * _0x283725, 0x19 * _0x283725, 0x32 * _0x283725, 0x1a * _0x283725, 0x3c * _0x283725), _0xb96e79['bezierCurveTo'](36.5 * _0x283725, 58.5 * _0x283725, 36.5 * _0x283725, 58.5 * _0x283725, 0x2f * _0x283725, 0x39 * _0x283725), fill_path(_0xb96e79, _0x2fd7b8[0x1], _0x2fd7b8[0x2], 0x4 * _0x283725), _0xb96e79['translate'](-0x7 * _0x283725, -0x14 * _0x283725), _0xb96e79['beginPath'](), _0xb96e79['lineCap'] = 'round', _0xb96e79['lineJoin'] = 'round', _0xb96e79['moveTo'](0x37 * _0x283725, 0x44 * _0x283725), _0xb96e79['bezierCurveTo'](0x56 * _0x283725, 0x40 * _0x283725, 0x75 * _0x283725, 0x42 * _0x283725, 0x86 * _0x283725, 0x44 * _0x283725), _0xb96e79['bezierCurveTo'](0x98 * _0x283725, 0x45 * _0x283725, 0xa5 * _0x283725, 0x56 * _0x283725, 0x98 * _0x283725, 0x68 * _0x283725), _0xb96e79['bezierCurveTo'](0x92 * _0x283725, 0x57 * _0x283725, 0x7a * _0x283725, 0x59 * _0x283725, 0x62 * _0x283725, 0x5a * _0x283725), _0xb96e79['bezierCurveTo'](0x40 * _0x283725, 0x59 * _0x283725, 0x29 * _0x283725, 0x5b * _0x283725, 0x24 * _0x283725, 0x6a * _0x283725), _0xb96e79['bezierCurveTo'](0x13 * _0x283725, 0x5c * _0x283725, 0x1f * _0x283725, 0x47 * _0x283725, 0x36 * _0x283725, 0x45 * _0x283725), _0xb96e79['closePath'](), fill_path(_0xb96e79, _0x2fd7b8[0x4], _0x2fd7b8[0x5], 0x4 * _0x283725), _0x129f6a;
}

function create_zombie_hand(_0x2d2b39, _0x3a593b) {
    var _0x1d45a4 = document['createElement']('canvas'),
        _0xabbc6f = _0x1d45a4['getContext']('2d'),
        _0x327774 = _0x2d2b39 * 0xdc,
        _0x3fa62b = _0x2d2b39 * 0xdc,
        _0x4a8202 = _0x2d2b39 * 0x20,
        _0x392138 = _0x2d2b39 * 0x4;
    return _0x1d45a4['width'] = _0x327774, _0x1d45a4['height'] = _0x3fa62b, _0xabbc6f['translate'](_0x327774 / 0x2, _0x3fa62b / 0x2 + 0xa * _0x2d2b39), _0xabbc6f['globalAlpha'] = 0.5, circle(_0xabbc6f, 0x0, 0x0, _0x4a8202), fill_path(_0xabbc6f, _0x3a593b[0x0], _0x3a593b[0x0]), _0xabbc6f['translate'](0x0, -0x8 * _0x2d2b39), _0xabbc6f['globalAlpha'] = 0x1, circle(_0xabbc6f, 0x0, 0x0, _0x4a8202), fill_path(_0xabbc6f, _0x3a593b[0x1], _0x3a593b[0x2], _0x392138), _0x1d45a4;
}

function create_hand(_0x37b949, _0x51f6fb) {
    var _0x1cb026 = document['createElement']('canvas'),
        _0x55383e = _0x1cb026['getContext']('2d'),
        _0x46dbec = _0x37b949 * 0x28,
        _0x3733ac = _0x37b949 * 0x28,
        _0x5e03cb = _0x37b949 * 0x10,
        _0x3266fe = _0x37b949 * 0x4;
    return _0x1cb026['width'] = _0x46dbec, _0x1cb026['height'] = _0x3733ac, _0x55383e['translate'](_0x46dbec / 0x2, _0x3733ac / 0x2), _0x55383e['globalAlpha'] = 0x1, circle(_0x55383e, 0x0, 0x0, _0x5e03cb), fill_path(_0x55383e, _0x51f6fb[0x0], _0x51f6fb[0x1], _0x3266fe), _0x1cb026;
}

function create_hand_shadow(_0xcc56dc, _0x385463) {
    var _0x572bbb = document['createElement']('canvas'),
        _0x5aae37 = _0x572bbb['getContext']('2d'),
        _0x1ba68b = _0xcc56dc * 0xdc,
        _0x2b5732 = _0xcc56dc * 0xdc,
        _0x321f53 = _0xcc56dc * 0x10;
    return _0x572bbb['width'] = _0x1ba68b, _0x572bbb['height'] = _0x2b5732, _0x5aae37['translate'](_0x1ba68b / 0x2, _0x2b5732 / 0x2), _0x5aae37['globalAlpha'] = 0.5, circle(_0x5aae37, 0x0, 0x0, _0x321f53), fill_path(_0x5aae37, _0x385463[0x0]), _0x5aae37['globalAlpha'] = 0x1, _0x572bbb;
}

function create_apricot_tree(_0x1b2e92, _0x2aeeeb, _0x3cdb75, _0x1bda35) {
    var _0x228bdf = document['createElement']('canvas'),
        _0x54a344 = _0x228bdf['getContext']('2d'),
        _0x519673 = _0x1b2e92 * 0xd2,
        _0x112d87 = _0x1b2e92 * 0xcd,
        _0x2d8713 = _0x519673 / 0x2,
        _0x2d5344 = _0x112d87 / 0x2,
        _0x5fc3c2 = _0x1b2e92 * 0x1e,
        _0x919f5a = _0x1b2e92 * 0x14,
        _0x4a6e2d = _0x1b2e92 * 0xc8,
        _0x4a9598 = _0x1b2e92 * 0xb4,
        _0x43e87a = _0x1b2e92 * 0x50,
        _0xef38d0 = _0x4a6e2d / 0x2,
        _0x2b358e = _0x4a9598 / 0x2,
        _0x2c4235 = 0x4;
    _0x228bdf['width'] = _0x519673, _0x228bdf['height'] = _0x112d87, _0x228bdf['width'] = 0x1a3 * _0x1b2e92, _0x228bdf['height'] = 0x19c * _0x1b2e92;
    if (_0x1bda35 == 0x1) _0x54a344['save'](), _0x54a344['translate'](0xa * _0x1b2e92, 0x0 * _0x1b2e92), _0x54a344['beginPath'](), _0x54a344['lineCap'] = 'round', _0x54a344['lineJoin'] = 'round', _0x54a344['moveTo'](117.99996948242188 * _0x1b2e92, 216.40621948242188 * _0x1b2e92), _0x54a344['bezierCurveTo'](86.99996948242188 * _0x1b2e92, 221.40621948242188 * _0x1b2e92, 74.99996948242188 * _0x1b2e92, 217.40621948242188 * _0x1b2e92, 60.999969482421875 * _0x1b2e92, 205.40621948242188 * _0x1b2e92), fill_path(_0x54a344, undefined, _0x2aeeeb[0x4], 0x3 * _0x1b2e92), _0x54a344['beginPath'](), _0x54a344['lineCap'] = 'round', _0x54a344['lineJoin'] = 'round', _0x54a344['moveTo'](114.99996948242188 * _0x1b2e92, 227.40621948242188 * _0x1b2e92), _0x54a344['bezierCurveTo'](90.99996948242188 * _0x1b2e92, 233.40621948242188 * _0x1b2e92, 66.99996948242188 * _0x1b2e92, 228.40621948242188 * _0x1b2e92, 43.999969482421875 * _0x1b2e92, 225.40621948242188 * _0x1b2e92), fill_path(_0x54a344, undefined, _0x2aeeeb[0x4], 0x3 * _0x1b2e92), _0x54a344['beginPath'](), _0x54a344['lineCap'] = 'round', _0x54a344['lineJoin'] = 'round', _0x54a344['moveTo'](110.99996948242188 * _0x1b2e92, 236.40621948242188 * _0x1b2e92), _0x54a344['bezierCurveTo'](94.99996948242188 * _0x1b2e92, 244.40621948242188 * _0x1b2e92, 79.99996948242188 * _0x1b2e92, 249.40621948242188 * _0x1b2e92, 60.999969482421875 * _0x1b2e92, 249.40621948242188 * _0x1b2e92), fill_path(_0x54a344, undefined, _0x2aeeeb[0x4], 0x3 * _0x1b2e92), _0x54a344['beginPath'](), _0x54a344['lineCap'] = 'round', _0x54a344['lineJoin'] = 'round', _0x54a344['moveTo'](111.99996948242188 * _0x1b2e92, 206.29513549804688 * _0x1b2e92), _0x54a344['bezierCurveTo'](91.99996948242188 * _0x1b2e92, 206.29513549804688 * _0x1b2e92, 87.99996948242188 * _0x1b2e92, 201.29513549804688 * _0x1b2e92, 79.99996948242188 * _0x1b2e92, 192.29513549804688 * _0x1b2e92), fill_path(_0x54a344, undefined, _0x2aeeeb[0x4], 0x3 * _0x1b2e92), _0x54a344['beginPath'](), _0x54a344['lineCap'] = 'round', _0x54a344['lineJoin'] = 'round', _0x54a344['moveTo'](109.99996948242188 * _0x1b2e92, 249.18402099609375 * _0x1b2e92), _0x54a344['bezierCurveTo'](97.99996948242188 * _0x1b2e92, 263.18402099609375 * _0x1b2e92, 85.99996948242188 * _0x1b2e92, 271.18402099609375 * _0x1b2e92, 65.99996948242188 * _0x1b2e92, 277.18402099609375 * _0x1b2e92), fill_path(_0x54a344, undefined, _0x2aeeeb[0x4], 0x3 * _0x1b2e92), _0x54a344['beginPath'](), _0x54a344['lineCap'] = 'round', _0x54a344['lineJoin'] = 'round', _0x54a344['moveTo'](105.99996948242188 * _0x1b2e92, 192.18402099609375 * _0x1b2e92), _0x54a344['bezierCurveTo'](99.49996948242188 * _0x1b2e92, 197.68402099609375 * _0x1b2e92, 99.49996948242188 * _0x1b2e92, 197.68402099609375 * _0x1b2e92, 92.99996948242188 * _0x1b2e92, 203.18402099609375 * _0x1b2e92), _0x54a344['bezierCurveTo'](95.99996948242188 * _0x1b2e92, 213.18402099609375 * _0x1b2e92, 95.99996948242188 * _0x1b2e92, 215.18402099609375 * _0x1b2e92, 89.99996948242188 * _0x1b2e92, 219.18402099609375 * _0x1b2e92), _0x54a344['bezierCurveTo'](91.99996948242188 * _0x1b2e92, 223.18402099609375 * _0x1b2e92, 91.99996948242188 * _0x1b2e92, 226.18402099609375 * _0x1b2e92, 87.99996948242188 * _0x1b2e92, 230.18402099609375 * _0x1b2e92), _0x54a344['bezierCurveTo'](89.99996948242188 * _0x1b2e92, 234.18402099609375 * _0x1b2e92, 91.99996948242188 * _0x1b2e92, 237.18402099609375 * _0x1b2e92, 90.99996948242188 * _0x1b2e92, 244.18402099609375 * _0x1b2e92), _0x54a344['bezierCurveTo'](96.99996948242188 * _0x1b2e92, 252.18402099609375 * _0x1b2e92, 96.99996948242188 * _0x1b2e92, 256.18402099609375 * _0x1b2e92, 95.99996948242188 * _0x1b2e92, 262.18402099609375 * _0x1b2e92), _0x54a344['bezierCurveTo'](106.49996948242188 * _0x1b2e92, 264.18402099609375 * _0x1b2e92, 106.49996948242188 * _0x1b2e92, 264.18402099609375 * _0x1b2e92, 116.99996948242188 * _0x1b2e92, 266.18402099609375 * _0x1b2e92), fill_path(_0x54a344, undefined, _0x2aeeeb[0x4], 0x3 * _0x1b2e92), _0x54a344['beginPath'](), _0x54a344['lineCap'] = 'round', _0x54a344['lineJoin'] = 'round', _0x54a344['moveTo'](104.99996948242188 * _0x1b2e92, 183.29513549804688 * _0x1b2e92), _0x54a344['bezierCurveTo'](99.99996948242188 * _0x1b2e92, 193.29513549804688 * _0x1b2e92, 93.99996948242188 * _0x1b2e92, 195.29513549804688 * _0x1b2e92, 89.99996948242188 * _0x1b2e92, 201.29513549804688 * _0x1b2e92), _0x54a344['bezierCurveTo'](86.99996948242188 * _0x1b2e92, 212.29513549804688 * _0x1b2e92, 85.99996948242188 * _0x1b2e92, 214.29513549804688 * _0x1b2e92, 81.99996948242188 * _0x1b2e92, 215.29513549804688 * _0x1b2e92), _0x54a344['bezierCurveTo'](83.99996948242188 * _0x1b2e92, 223.29513549804688 * _0x1b2e92, 83.99996948242188 * _0x1b2e92, 227.29513549804688 * _0x1b2e92, 79.99996948242188 * _0x1b2e92, 230.29513549804688 * _0x1b2e92), _0x54a344['bezierCurveTo'](83.99996948242188 * _0x1b2e92, 235.29513549804688 * _0x1b2e92, 84.99996948242188 * _0x1b2e92, 240.29513549804688 * _0x1b2e92, 79.99996948242188 * _0x1b2e92, 246.29513549804688 * _0x1b2e92), _0x54a344['bezierCurveTo'](86.99996948242188 * _0x1b2e92, 251.29513549804688 * _0x1b2e92, 91.99996948242188 * _0x1b2e92, 256.2951354980469 * _0x1b2e92, 89.99996948242188 * _0x1b2e92, 266.2951354980469 * _0x1b2e92), _0x54a344['bezierCurveTo'](102.99996948242188 * _0x1b2e92, 269.2951354980469 * _0x1b2e92, 102.99996948242188 * _0x1b2e92, 269.2951354980469 * _0x1b2e92, 115.99996948242188 * _0x1b2e92, 272.2951354980469 * _0x1b2e92), fill_path(_0x54a344, undefined, _0x2aeeeb[0x4], 0x3 * _0x1b2e92), _0x54a344['beginPath'](), _0x54a344['lineCap'] = 'round', _0x54a344['lineJoin'] = 'round', _0x54a344['moveTo'](107.99996948242188 * _0x1b2e92, 177.85067749023438 * _0x1b2e92), _0x54a344['bezierCurveTo'](95.99996948242188 * _0x1b2e92, 187.35067749023438 * _0x1b2e92, 95.99996948242188 * _0x1b2e92, 187.35067749023438 * _0x1b2e92, 83.99996948242188 * _0x1b2e92, 196.85067749023438 * _0x1b2e92), _0x54a344['bezierCurveTo'](82.99996948242188 * _0x1b2e92, 203.85067749023438 * _0x1b2e92, 80.99996948242188 * _0x1b2e92, 209.85067749023438 * _0x1b2e92, 72.99996948242188 * _0x1b2e92, 210.85067749023438 * _0x1b2e92), _0x54a344['bezierCurveTo'](73.99996948242188 * _0x1b2e92, 220.85067749023438 * _0x1b2e92, 73.99996948242188 * _0x1b2e92, 221.85067749023438 * _0x1b2e92, 66.99996948242188 * _0x1b2e92, 227.85067749023438 * _0x1b2e92), _0x54a344['bezierCurveTo'](71.99996948242188 * _0x1b2e92, 235.85067749023438 * _0x1b2e92, 73.99996948242188 * _0x1b2e92, 239.85067749023438 * _0x1b2e92, 71.99996948242188 * _0x1b2e92, 247.85067749023438 * _0x1b2e92), _0x54a344['bezierCurveTo'](80.99996948242188 * _0x1b2e92, 257.8506774902344 * _0x1b2e92, 81.99996948242188 * _0x1b2e92, 263.8506774902344 * _0x1b2e92, 77.99996948242188 * _0x1b2e92, 271.8506774902344 * _0x1b2e92), _0x54a344['bezierCurveTo'](95.49996948242188 * _0x1b2e92, 272.8506774902344 * _0x1b2e92, 95.49996948242188 * _0x1b2e92, 272.8506774902344 * _0x1b2e92, 112.99996948242188 * _0x1b2e92, 273.8506774902344 * _0x1b2e92), fill_path(_0x54a344, undefined, _0x2aeeeb[0x4], 0x3 * _0x1b2e92), _0x54a344['restore']();
    else _0x1bda35 == 0x2 && (_0x54a344['save'](), _0x54a344['translate'](0x82 * _0x1b2e92, 0x23 * _0x1b2e92), _0x54a344['beginPath'](), _0x54a344['lineCap'] = 'round', _0x54a344['lineJoin'] = 'round', _0x54a344['moveTo'](170.99996948242188 * _0x1b2e92, 133.85067749023438 * _0x1b2e92), _0x54a344['bezierCurveTo'](195.99996948242188 * _0x1b2e92, 129.85067749023438 * _0x1b2e92, 196.99996948242188 * _0x1b2e92, 111.85067749023438 * _0x1b2e92, 200.99996948242188 * _0x1b2e92, 88.85067749023438 * _0x1b2e92), fill_path(_0x54a344, undefined, _0x2aeeeb[0x4], 0x3 * _0x1b2e92), _0x54a344['beginPath'](), _0x54a344['lineCap'] = 'round', _0x54a344['lineJoin'] = 'round', _0x54a344['moveTo'](169.99996948242188 * _0x1b2e92, 143.85067749023438 * _0x1b2e92), _0x54a344['bezierCurveTo'](189.99996948242188 * _0x1b2e92, 145.85067749023438 * _0x1b2e92, 207.99996948242188 * _0x1b2e92, 126.85067749023438 * _0x1b2e92, 222.99996948242188 * _0x1b2e92, 100.85067749023438 * _0x1b2e92), fill_path(_0x54a344, undefined, _0x2aeeeb[0x4], 0x3 * _0x1b2e92), _0x54a344['beginPath'](), _0x54a344['lineCap'] = 'round', _0x54a344['lineJoin'] = 'round', _0x54a344['moveTo'](170.99996948242188 * _0x1b2e92, 157.85067749023438 * _0x1b2e92), _0x54a344['bezierCurveTo'](193.99996948242188 * _0x1b2e92, 160.85067749023438 * _0x1b2e92, 210.99996948242188 * _0x1b2e92, 151.85067749023438 * _0x1b2e92, 232.99996948242188 * _0x1b2e92, 139.85067749023438 * _0x1b2e92), fill_path(_0x54a344, undefined, _0x2aeeeb[0x4], 0x3 * _0x1b2e92), _0x54a344['beginPath'](), _0x54a344['lineCap'] = 'round', _0x54a344['lineJoin'] = 'round', _0x54a344['moveTo'](169.99996948242188 * _0x1b2e92, 168.85067749023438 * _0x1b2e92), _0x54a344['bezierCurveTo'](192.99996948242188 * _0x1b2e92, 175.85067749023438 * _0x1b2e92, 203.99996948242188 * _0x1b2e92, 177.85067749023438 * _0x1b2e92, 245.99996948242188 * _0x1b2e92, 168.85067749023438 * _0x1b2e92), fill_path(_0x54a344, undefined, _0x2aeeeb[0x4], 0x3 * _0x1b2e92), _0x54a344['beginPath'](), _0x54a344['lineCap'] = 'round', _0x54a344['lineJoin'] = 'round', _0x54a344['moveTo'](167.99996948242188 * _0x1b2e92, 168.85067749023438 * _0x1b2e92), _0x54a344['bezierCurveTo'](183.99996948242188 * _0x1b2e92, 189.85067749023438 * _0x1b2e92, 191.99996948242188 * _0x1b2e92, 193.85067749023438 * _0x1b2e92, 220.99996948242188 * _0x1b2e92, 196.85067749023438 * _0x1b2e92), fill_path(_0x54a344, undefined, _0x2aeeeb[0x4], 0x3 * _0x1b2e92), _0x54a344['beginPath'](), _0x54a344['lineCap'] = 'round', _0x54a344['lineJoin'] = 'round', _0x54a344['moveTo'](176.99996948242188 * _0x1b2e92, 117.85067749023438 * _0x1b2e92), _0x54a344['bezierCurveTo'](181.99996948242188 * _0x1b2e92, 120.85067749023438 * _0x1b2e92, 181.99996948242188 * _0x1b2e92, 120.85067749023438 * _0x1b2e92, 186.99996948242188 * _0x1b2e92, 123.85067749023438 * _0x1b2e92), _0x54a344['bezierCurveTo'](183.99996948242188 * _0x1b2e92, 137.85067749023438 * _0x1b2e92, 185.99996948242188 * _0x1b2e92, 136.85067749023438 * _0x1b2e92, 190.99996948242188 * _0x1b2e92, 136.85067749023438 * _0x1b2e92), _0x54a344['bezierCurveTo'](186.99996948242188 * _0x1b2e92, 147.85067749023438 * _0x1b2e92, 189.99996948242188 * _0x1b2e92, 152.85067749023438 * _0x1b2e92, 193.99996948242188 * _0x1b2e92, 155.85067749023438 * _0x1b2e92), _0x54a344['bezierCurveTo'](187.99996948242188 * _0x1b2e92, 165.85067749023438 * _0x1b2e92, 190.99996948242188 * _0x1b2e92, 169.85067749023438 * _0x1b2e92, 190.99996948242188 * _0x1b2e92, 172.85067749023438 * _0x1b2e92), _0x54a344['bezierCurveTo'](186.99996948242188 * _0x1b2e92, 183.85067749023438 * _0x1b2e92, 186.99996948242188 * _0x1b2e92, 185.85067749023438 * _0x1b2e92, 189.99996948242188 * _0x1b2e92, 188.85067749023438 * _0x1b2e92), _0x54a344['bezierCurveTo'](182.49996948242188 * _0x1b2e92, 195.35067749023438 * _0x1b2e92, 182.49996948242188 * _0x1b2e92, 195.35067749023438 * _0x1b2e92, 174.99996948242188 * _0x1b2e92, 201.85067749023438 * _0x1b2e92), fill_path(_0x54a344, undefined, _0x2aeeeb[0x4], 0x3 * _0x1b2e92), _0x54a344['beginPath'](), _0x54a344['lineCap'] = 'round', _0x54a344['lineJoin'] = 'round', _0x54a344['moveTo'](176.99996948242188 * _0x1b2e92, 112.18402099609375 * _0x1b2e92), _0x54a344['bezierCurveTo'](183.99996948242188 * _0x1b2e92, 119.18402099609375 * _0x1b2e92, 186.99996948242188 * _0x1b2e92, 117.18402099609375 * _0x1b2e92, 192.99996948242188 * _0x1b2e92, 116.18402099609375 * _0x1b2e92), _0x54a344['bezierCurveTo'](191.99996948242188 * _0x1b2e92, 126.18402099609375 * _0x1b2e92, 193.99996948242188 * _0x1b2e92, 130.18402099609375 * _0x1b2e92, 199.99996948242188 * _0x1b2e92, 130.18402099609375 * _0x1b2e92), _0x54a344['bezierCurveTo'](194.99996948242188 * _0x1b2e92, 145.18402099609375 * _0x1b2e92, 197.99996948242188 * _0x1b2e92, 147.18402099609375 * _0x1b2e92, 201.99996948242188 * _0x1b2e92, 153.18402099609375 * _0x1b2e92), _0x54a344['bezierCurveTo'](196.99996948242188 * _0x1b2e92, 164.18402099609375 * _0x1b2e92, 197.99996948242188 * _0x1b2e92, 169.18402099609375 * _0x1b2e92, 201.99996948242188 * _0x1b2e92, 174.18402099609375 * _0x1b2e92), _0x54a344['bezierCurveTo'](194.99996948242188 * _0x1b2e92, 184.18402099609375 * _0x1b2e92, 196.99996948242188 * _0x1b2e92, 187.18402099609375 * _0x1b2e92, 200.99996948242188 * _0x1b2e92, 193.18402099609375 * _0x1b2e92), _0x54a344['bezierCurveTo'](185.99996948242188 * _0x1b2e92, 195.18402099609375 * _0x1b2e92, 181.99996948242188 * _0x1b2e92, 201.18402099609375 * _0x1b2e92, 174.99996948242188 * _0x1b2e92, 210.18402099609375 * _0x1b2e92), fill_path(_0x54a344, undefined, _0x2aeeeb[0x4], 0x3 * _0x1b2e92), _0x54a344['beginPath'](), _0x54a344['lineCap'] = 'round', _0x54a344['lineJoin'] = 'round', _0x54a344['moveTo'](176.99996948242188 * _0x1b2e92, 101.29513549804688 * _0x1b2e92), _0x54a344['bezierCurveTo'](181.99996948242188 * _0x1b2e92, 108.29513549804688 * _0x1b2e92, 189.99996948242188 * _0x1b2e92, 110.29513549804688 * _0x1b2e92, 195.99996948242188 * _0x1b2e92, 107.29513549804688 * _0x1b2e92), _0x54a344['bezierCurveTo'](197.99996948242188 * _0x1b2e92, 121.29513549804688 * _0x1b2e92, 200.99996948242188 * _0x1b2e92, 122.29513549804688 * _0x1b2e92, 206.99996948242188 * _0x1b2e92, 122.29513549804688 * _0x1b2e92), _0x54a344['bezierCurveTo'](201.99996948242188 * _0x1b2e92, 138.29513549804688 * _0x1b2e92, 204.99996948242188 * _0x1b2e92, 142.29513549804688 * _0x1b2e92, 211.99996948242188 * _0x1b2e92, 148.29513549804688 * _0x1b2e92), _0x54a344['bezierCurveTo'](201.99996948242188 * _0x1b2e92, 156.29513549804688 * _0x1b2e92, 205.99996948242188 * _0x1b2e92, 167.29513549804688 * _0x1b2e92, 213.99996948242188 * _0x1b2e92, 173.29513549804688 * _0x1b2e92), _0x54a344['bezierCurveTo'](204.99996948242188 * _0x1b2e92, 181.29513549804688 * _0x1b2e92, 204.99996948242188 * _0x1b2e92, 187.29513549804688 * _0x1b2e92, 205.99996948242188 * _0x1b2e92, 193.29513549804688 * _0x1b2e92), _0x54a344['bezierCurveTo'](190.99996948242188 * _0x1b2e92, 198.29513549804688 * _0x1b2e92, 181.99996948242188 * _0x1b2e92, 205.29513549804688 * _0x1b2e92, 174.99996948242188 * _0x1b2e92, 214.29513549804688 * _0x1b2e92), fill_path(_0x54a344, undefined, _0x2aeeeb[0x4], 0x3 * _0x1b2e92), _0x54a344['restore']());
    _0x54a344['translate'](_0x228bdf['width'] / 0x2, _0x228bdf['height'] / 0x2);
    if (!_0x1bda35) {
        _0x54a344['globalAlpha'] = 0.5, round_rect(_0x54a344, -_0xef38d0, -_0x2b358e, _0x4a6e2d, _0x4a9598 + _0x919f5a, _0x5fc3c2), fill_path(_0x54a344, _0x2aeeeb[0x0]);
        if (_0x3cdb75) _0x54a344['rotate'](Math['PI']);
        _0x54a344['globalAlpha'] = 0x1, round_rect(_0x54a344, -_0xef38d0, -_0x2b358e, _0x4a6e2d, _0x4a9598, _0x5fc3c2), fill_path(_0x54a344, _0x2aeeeb[0x1], _0x2aeeeb[0x2], _0x2c4235), _0x54a344['globalAlpha'] = 0x1, round_rect(_0x54a344, -_0xef38d0 + 0x23 * _0x1b2e92, -_0x2b358e + 0x14 * _0x1b2e92, _0x4a6e2d - 0x32 * _0x1b2e92, _0x4a9598 - 0x32 * _0x1b2e92, _0x5fc3c2 - 0xa * _0x1b2e92), fill_path(_0x54a344, _0x2aeeeb[0x3]);
    }
    if (_0x1bda35 == 0x3) _0x54a344['translate'](-_0x228bdf['width'] / 0x2, -_0x228bdf['height'] / 0x2), _0x54a344['beginPath'](), _0x54a344['lineCap'] = 'round', _0x54a344['lineJoin'] = 'round', _0x54a344['moveTo'](0x79 * _0x1b2e92, 0xbe * _0x1b2e92), _0x54a344['bezierCurveTo'](0x81 * _0x1b2e92, 0xba * _0x1b2e92, 0x89 * _0x1b2e92, 0xb7 * _0x1b2e92, 0x87 * _0x1b2e92, 0xa3 * _0x1b2e92), _0x54a344['bezierCurveTo'](0x83 * _0x1b2e92, 0x87 * _0x1b2e92, 0x99 * _0x1b2e92, 0x7f * _0x1b2e92, 0xb1 * _0x1b2e92, 0x7c * _0x1b2e92), _0x54a344['bezierCurveTo'](0xc6 * _0x1b2e92, 0x78 * _0x1b2e92, 0xd0 * _0x1b2e92, 0x7a * _0x1b2e92, 0xe2 * _0x1b2e92, 0x80 * _0x1b2e92), _0x54a344['bezierCurveTo'](0x105 * _0x1b2e92, 0x70 * _0x1b2e92, 0x10f * _0x1b2e92, 0x7e * _0x1b2e92, 0x11f * _0x1b2e92, 0x93 * _0x1b2e92), _0x54a344['bezierCurveTo'](0x136 * _0x1b2e92, 0xa3 * _0x1b2e92, 0x130 * _0x1b2e92, 0xb7 * _0x1b2e92, 0x11b * _0x1b2e92, 0xc4 * _0x1b2e92), _0x54a344['bezierCurveTo'](0x128 * _0x1b2e92, 0xf9 * _0x1b2e92, 0x116 * _0x1b2e92, 0x106 * _0x1b2e92, 0xfd * _0x1b2e92, 0x107 * _0x1b2e92), _0x54a344['bezierCurveTo'](0xd2 * _0x1b2e92, 0x108 * _0x1b2e92, 0xbc * _0x1b2e92, 0xfc * _0x1b2e92, 0xb1 * _0x1b2e92, 0xea * _0x1b2e92), _0x54a344['bezierCurveTo'](0x85 * _0x1b2e92, 0xf2 * _0x1b2e92, 0x7b * _0x1b2e92, 0xf1 * _0x1b2e92, 0x73 * _0x1b2e92, 0xe1 * _0x1b2e92), _0x54a344['bezierCurveTo'](0x6d * _0x1b2e92, 0xce * _0x1b2e92, 0x73 * _0x1b2e92, 0xc1 * _0x1b2e92, 0x79 * _0x1b2e92, 0xbe * _0x1b2e92), _0x54a344['closePath'](), fill_path(_0x54a344, _0x2aeeeb[0x4]), _0x54a344['beginPath'](), _0x54a344['lineCap'] = 'round', _0x54a344['lineJoin'] = 'round', _0x54a344['moveTo'](0xdb * _0x1b2e92, 0x90 * _0x1b2e92), _0x54a344['bezierCurveTo'](0xfb * _0x1b2e92, 0x79 * _0x1b2e92, 0x115 * _0x1b2e92, 0x88 * _0x1b2e92, 0x114 * _0x1b2e92, 0x9f * _0x1b2e92), _0x54a344['bezierCurveTo'](0x114 * _0x1b2e92, 0xb0 * _0x1b2e92, 0x111 * _0x1b2e92, 0xbf * _0x1b2e92, 0xf2 * _0x1b2e92, 0xc1 * _0x1b2e92), _0x54a344['bezierCurveTo'](0xe2 * _0x1b2e92, 0xe4 * _0x1b2e92, 0x9b * _0x1b2e92, 0xdb * _0x1b2e92, 0x96 * _0x1b2e92, 0xb7 * _0x1b2e92), _0x54a344['bezierCurveTo'](0x8e * _0x1b2e92, 0x90 * _0x1b2e92, 0xae * _0x1b2e92, 0x7f * _0x1b2e92, 0xdb * _0x1b2e92, 0x90 * _0x1b2e92), _0x54a344['closePath'](), fill_path(_0x54a344, _0x2aeeeb[0x5]), _0x54a344['beginPath'](), _0x54a344['lineCap'] = 'round', _0x54a344['lineJoin'] = 'round', _0x54a344['moveTo'](0x7b * _0x1b2e92, 0xd6 * _0x1b2e92), _0x54a344['bezierCurveTo'](0x77 * _0x1b2e92, 0xc6 * _0x1b2e92, 0x81 * _0x1b2e92, 0xbd * _0x1b2e92, 0x92 * _0x1b2e92, 0xc2 * _0x1b2e92), _0x54a344['bezierCurveTo'](0x9e * _0x1b2e92, 0xc9 * _0x1b2e92, 0xa5 * _0x1b2e92, 0xda * _0x1b2e92, 0x93 * _0x1b2e92, 0xe2 * _0x1b2e92), _0x54a344['bezierCurveTo'](0x87 * _0x1b2e92, 0xe6 * _0x1b2e92, 0x7d * _0x1b2e92, 0xde * _0x1b2e92, 0x7b * _0x1b2e92, 0xd6 * _0x1b2e92), _0x54a344['closePath'](), fill_path(_0x54a344, _0x2aeeeb[0x5]), _0x54a344['beginPath'](), _0x54a344['lineCap'] = 'round', _0x54a344['lineJoin'] = 'round', _0x54a344['moveTo'](0x101 * _0x1b2e92, 0xc7 * _0x1b2e92), _0x54a344['bezierCurveTo'](0x108 * _0x1b2e92, 0xc7 * _0x1b2e92, 0x113 * _0x1b2e92, 0xd5 * _0x1b2e92, 0x105 * _0x1b2e92, 0xdc * _0x1b2e92), _0x54a344['bezierCurveTo'](0xf6 * _0x1b2e92, 0xe1 * _0x1b2e92, 0xeb * _0x1b2e92, 0xc8 * _0x1b2e92, 0x101 * _0x1b2e92, 0xc7 * _0x1b2e92), _0x54a344['closePath'](), fill_path(_0x54a344, _0x2aeeeb[0x5]), _0x54a344['translate'](-0x5 * _0x1b2e92, 0x37 * _0x1b2e92), _0x54a344['beginPath'](), _0x54a344['lineCap'] = 'round', _0x54a344['lineJoin'] = 'round', _0x54a344['moveTo'](0xba * _0x1b2e92, 0x7b * _0x1b2e92), _0x54a344['bezierCurveTo'](0xc6 * _0x1b2e92, 0x73 * _0x1b2e92, 0xdb * _0x1b2e92, 0x6e * _0x1b2e92, 0xdb * _0x1b2e92, 0x7b * _0x1b2e92), _0x54a344['bezierCurveTo'](0xd8 * _0x1b2e92, 0x87 * _0x1b2e92, 0xab * _0x1b2e92, 0x8f * _0x1b2e92, 0xba * _0x1b2e92, 0x7b * _0x1b2e92), _0x54a344['closePath'](), fill_path(_0x54a344, _0x2aeeeb[0x5]), _0x54a344['translate'](0x5 * _0x1b2e92, -0x37 * _0x1b2e92), _0x54a344['translate'](-0x5 * _0x1b2e92, 0xf * _0x1b2e92), _0x54a344['beginPath'](), _0x54a344['lineCap'] = 'round', _0x54a344['lineJoin'] = 'round', _0x54a344['moveTo'](0xab * _0x1b2e92, 0xf1 * _0x1b2e92), _0x54a344['bezierCurveTo'](0xbd * _0x1b2e92, 0xea * _0x1b2e92, 0xc8 * _0x1b2e92, 0xf8 * _0x1b2e92, 0xbd * _0x1b2e92, 0xfe * _0x1b2e92), _0x54a344['bezierCurveTo'](0xb3 * _0x1b2e92, 0x104 * _0x1b2e92, 0x9e * _0x1b2e92, 0xf6 * _0x1b2e92, 0xab * _0x1b2e92, 0xf1 * _0x1b2e92), _0x54a344['closePath'](), fill_path(_0x54a344, _0x2aeeeb[0x5]);
    else _0x1bda35 == 0x4 && (_0x54a344['translate'](-_0x228bdf['width'] / 0x2, -_0x228bdf['height'] / 0x2), _0x54a344['beginPath'](), _0x54a344['lineCap'] = 'round', _0x54a344['lineJoin'] = 'round', _0x54a344['moveTo'](0x1e * _0x1b2e92, 0xa7 * _0x1b2e92), _0x54a344['bezierCurveTo'](0x2f * _0x1b2e92, 0x90 * _0x1b2e92, 0x40 * _0x1b2e92, 0x8c * _0x1b2e92, 0x50 * _0x1b2e92, 0x93 * _0x1b2e92), _0x54a344['bezierCurveTo'](0x5f * _0x1b2e92, 0x9a * _0x1b2e92, 0x5f * _0x1b2e92, 0x9f * _0x1b2e92, 0x64 * _0x1b2e92, 0xb3 * _0x1b2e92), _0x54a344['bezierCurveTo'](0x69 * _0x1b2e92, 0xca * _0x1b2e92, 0x5f * _0x1b2e92, 0xda * _0x1b2e92, 0x45 * _0x1b2e92, 0xda * _0x1b2e92), _0x54a344['bezierCurveTo'](0x30 * _0x1b2e92, 0xec * _0x1b2e92, 0x1a * _0x1b2e92, 0xdf * _0x1b2e92, 0x1c * _0x1b2e92, 0xd5 * _0x1b2e92), _0x54a344['bezierCurveTo'](0x1c * _0x1b2e92, 0xcd * _0x1b2e92, 0x1d * _0x1b2e92, 0xc7 * _0x1b2e92, 0x20 * _0x1b2e92, 0xc3 * _0x1b2e92), _0x54a344['bezierCurveTo'](0x15 * _0x1b2e92, 0xb7 * _0x1b2e92, 0x1b * _0x1b2e92, 0xad * _0x1b2e92, 0x1e * _0x1b2e92, 0xa7 * _0x1b2e92), _0x54a344['closePath'](), fill_path(_0x54a344, _0x2aeeeb[0x4]), _0x54a344['beginPath'](), _0x54a344['lineCap'] = 'round', _0x54a344['lineJoin'] = 'round', _0x54a344['moveTo'](0x1a * _0x1b2e92, 0x91 * _0x1b2e92), _0x54a344['bezierCurveTo'](0x20 * _0x1b2e92, 0x8a * _0x1b2e92, 0x25 * _0x1b2e92, 0x89 * _0x1b2e92, 0x28 * _0x1b2e92, 0x8b * _0x1b2e92), _0x54a344['bezierCurveTo'](0x2b * _0x1b2e92, 0x8c * _0x1b2e92, 0x29 * _0x1b2e92, 0x96 * _0x1b2e92, 0x1f * _0x1b2e92, 0x9f * _0x1b2e92), _0x54a344['bezierCurveTo'](0x17 * _0x1b2e92, 0xa6 * _0x1b2e92, 0x11 * _0x1b2e92, 0x9e * _0x1b2e92, 0x1a * _0x1b2e92, 0x91 * _0x1b2e92), _0x54a344['closePath'](), fill_path(_0x54a344, _0x2aeeeb[0x4]), _0x54a344['beginPath'](), _0x54a344['lineCap'] = 'round', _0x54a344['lineJoin'] = 'round', _0x54a344['moveTo'](0xd * _0x1b2e92, 0xc1 * _0x1b2e92), _0x54a344['bezierCurveTo'](0x15 * _0x1b2e92, 0xbb * _0x1b2e92, 0x1e * _0x1b2e92, 0xbe * _0x1b2e92, 0x14 * _0x1b2e92, 0xca * _0x1b2e92), _0x54a344['bezierCurveTo'](0xd * _0x1b2e92, 0xd0 * _0x1b2e92, 0x7 * _0x1b2e92, 0xca * _0x1b2e92, 0xd * _0x1b2e92, 0xc1 * _0x1b2e92), _0x54a344['closePath'](), fill_path(_0x54a344, _0x2aeeeb[0x4]), _0x54a344['beginPath'](), _0x54a344['lineCap'] = 'round', _0x54a344['lineJoin'] = 'round', _0x54a344['moveTo'](0x79 * _0x1b2e92, 0xbe * _0x1b2e92), _0x54a344['bezierCurveTo'](0x81 * _0x1b2e92, 0xba * _0x1b2e92, 0x89 * _0x1b2e92, 0xb7 * _0x1b2e92, 0x87 * _0x1b2e92, 0xa3 * _0x1b2e92), _0x54a344['bezierCurveTo'](0x83 * _0x1b2e92, 0x87 * _0x1b2e92, 0x99 * _0x1b2e92, 0x7f * _0x1b2e92, 0xb1 * _0x1b2e92, 0x7c * _0x1b2e92), _0x54a344['bezierCurveTo'](0xc6 * _0x1b2e92, 0x78 * _0x1b2e92, 0xd0 * _0x1b2e92, 0x7a * _0x1b2e92, 0xe2 * _0x1b2e92, 0x80 * _0x1b2e92), _0x54a344['bezierCurveTo'](0x105 * _0x1b2e92, 0x70 * _0x1b2e92, 0x10f * _0x1b2e92, 0x7e * _0x1b2e92, 0x11f * _0x1b2e92, 0x93 * _0x1b2e92), _0x54a344['bezierCurveTo'](0x136 * _0x1b2e92, 0xa3 * _0x1b2e92, 0x130 * _0x1b2e92, 0xb7 * _0x1b2e92, 0x11b * _0x1b2e92, 0xc4 * _0x1b2e92), _0x54a344['bezierCurveTo'](0x128 * _0x1b2e92, 0xf9 * _0x1b2e92, 0x116 * _0x1b2e92, 0x106 * _0x1b2e92, 0xfd * _0x1b2e92, 0x107 * _0x1b2e92), _0x54a344['bezierCurveTo'](0xd2 * _0x1b2e92, 0x108 * _0x1b2e92, 0xbc * _0x1b2e92, 0xfc * _0x1b2e92, 0xb1 * _0x1b2e92, 0xea * _0x1b2e92), _0x54a344['bezierCurveTo'](0x85 * _0x1b2e92, 0xf2 * _0x1b2e92, 0x7b * _0x1b2e92, 0xf1 * _0x1b2e92, 0x73 * _0x1b2e92, 0xe1 * _0x1b2e92), _0x54a344['bezierCurveTo'](0x6d * _0x1b2e92, 0xce * _0x1b2e92, 0x73 * _0x1b2e92, 0xc1 * _0x1b2e92, 0x79 * _0x1b2e92, 0xbe * _0x1b2e92), _0x54a344['closePath'](), fill_path(_0x54a344, _0x2aeeeb[0x4]), _0x54a344['beginPath'](), _0x54a344['lineCap'] = 'round', _0x54a344['lineJoin'] = 'round', _0x54a344['moveTo'](0x14f * _0x1b2e92, 0xc4 * _0x1b2e92), _0x54a344['bezierCurveTo'](0x138 * _0x1b2e92, 0xd0 * _0x1b2e92, 0x12c * _0x1b2e92, 0xb9 * _0x1b2e92, 0x135 * _0x1b2e92, 0xa7 * _0x1b2e92), _0x54a344['bezierCurveTo'](0x13a * _0x1b2e92, 0x8d * _0x1b2e92, 0x153 * _0x1b2e92, 0x7f * _0x1b2e92, 0x167 * _0x1b2e92, 0x90 * _0x1b2e92), _0x54a344['bezierCurveTo'](0x16b * _0x1b2e92, 0x94 * _0x1b2e92, 0x16c * _0x1b2e92, 0x96 * _0x1b2e92, 0x16c * _0x1b2e92, 0x96 * _0x1b2e92), _0x54a344['bezierCurveTo'](0x188 * _0x1b2e92, 0x8f * _0x1b2e92, 0x18c * _0x1b2e92, 0xb7 * _0x1b2e92, 0x17a * _0x1b2e92, 0xcc * _0x1b2e92), _0x54a344['bezierCurveTo'](0x16f * _0x1b2e92, 0xd7 * _0x1b2e92, 0x153 * _0x1b2e92, 0xd0 * _0x1b2e92, 0x14f * _0x1b2e92, 0xc4 * _0x1b2e92), _0x54a344['closePath'](), fill_path(_0x54a344, _0x2aeeeb[0x4]), _0x54a344['beginPath'](), _0x54a344['lineCap'] = 'round', _0x54a344['lineJoin'] = 'round', _0x54a344['moveTo'](0x15d * _0x1b2e92, 0xd4 * _0x1b2e92), _0x54a344['bezierCurveTo'](0x153 * _0x1b2e92, 0xd8 * _0x1b2e92, 0x14e * _0x1b2e92, 0xd0 * _0x1b2e92, 0x155 * _0x1b2e92, 0xcb * _0x1b2e92), _0x54a344['bezierCurveTo'](0x161 * _0x1b2e92, 0xc6 * _0x1b2e92, 0x169 * _0x1b2e92, 0xcd * _0x1b2e92, 0x15d * _0x1b2e92, 0xd4 * _0x1b2e92), _0x54a344['closePath'](), fill_path(_0x54a344, _0x2aeeeb[0x4]), _0x54a344['beginPath'](), _0x54a344['lineCap'] = 'round', _0x54a344['lineJoin'] = 'round', _0x54a344['moveTo'](0x2e * _0x1b2e92, 0xa5 * _0x1b2e92), _0x54a344['bezierCurveTo'](0x37 * _0x1b2e92, 0x94 * _0x1b2e92, 0x55 * _0x1b2e92, 0x9d * _0x1b2e92, 0x53 * _0x1b2e92, 0xaf * _0x1b2e92), _0x54a344['bezierCurveTo'](0x63 * _0x1b2e92, 0xb9 * _0x1b2e92, 0x59 * _0x1b2e92, 0xd4 * _0x1b2e92, 0x42 * _0x1b2e92, 0xcc * _0x1b2e92), _0x54a344['bezierCurveTo'](0x37 * _0x1b2e92, 0xd4 * _0x1b2e92, 0x2b * _0x1b2e92, 0xd4 * _0x1b2e92, 0x29 * _0x1b2e92, 0xca * _0x1b2e92), _0x54a344['bezierCurveTo'](0x27 * _0x1b2e92, 0xc2 * _0x1b2e92, 0x2a * _0x1b2e92, 0xbb * _0x1b2e92, 0x31 * _0x1b2e92, 0xb9 * _0x1b2e92), _0x54a344['bezierCurveTo'](0x2c * _0x1b2e92, 0xaf * _0x1b2e92, 0x2d * _0x1b2e92, 0xac * _0x1b2e92, 0x2e * _0x1b2e92, 0xa5 * _0x1b2e92), _0x54a344['closePath'](), fill_path(_0x54a344, _0x2aeeeb[0x4]), _0x54a344['beginPath'](), _0x54a344['lineCap'] = 'round', _0x54a344['lineJoin'] = 'round', _0x54a344['moveTo'](0xdb * _0x1b2e92, 0x90 * _0x1b2e92), _0x54a344['bezierCurveTo'](0xfb * _0x1b2e92, 0x79 * _0x1b2e92, 0x115 * _0x1b2e92, 0x88 * _0x1b2e92, 0x114 * _0x1b2e92, 0x9f * _0x1b2e92), _0x54a344['bezierCurveTo'](0x114 * _0x1b2e92, 0xb0 * _0x1b2e92, 0x111 * _0x1b2e92, 0xbf * _0x1b2e92, 0xf2 * _0x1b2e92, 0xc1 * _0x1b2e92), _0x54a344['bezierCurveTo'](0xe2 * _0x1b2e92, 0xe4 * _0x1b2e92, 0x9b * _0x1b2e92, 0xdb * _0x1b2e92, 0x96 * _0x1b2e92, 0xb7 * _0x1b2e92), _0x54a344['bezierCurveTo'](0x8e * _0x1b2e92, 0x90 * _0x1b2e92, 0xae * _0x1b2e92, 0x7f * _0x1b2e92, 0xdb * _0x1b2e92, 0x90 * _0x1b2e92), _0x54a344['closePath'](), fill_path(_0x54a344, _0x2aeeeb[0x5]), _0x54a344['beginPath'](), _0x54a344['lineCap'] = 'round', _0x54a344['lineJoin'] = 'round', _0x54a344['moveTo'](0x7b * _0x1b2e92, 0xd6 * _0x1b2e92), _0x54a344['bezierCurveTo'](0x77 * _0x1b2e92, 0xc6 * _0x1b2e92, 0x81 * _0x1b2e92, 0xbd * _0x1b2e92, 0x92 * _0x1b2e92, 0xc2 * _0x1b2e92), _0x54a344['bezierCurveTo'](0x9e * _0x1b2e92, 0xc9 * _0x1b2e92, 0xa5 * _0x1b2e92, 0xda * _0x1b2e92, 0x93 * _0x1b2e92, 0xe2 * _0x1b2e92), _0x54a344['bezierCurveTo'](0x87 * _0x1b2e92, 0xe6 * _0x1b2e92, 0x7d * _0x1b2e92, 0xde * _0x1b2e92, 0x7b * _0x1b2e92, 0xd6 * _0x1b2e92), _0x54a344['closePath'](), fill_path(_0x54a344, _0x2aeeeb[0x5]), _0x54a344['beginPath'](), _0x54a344['lineCap'] = 'round', _0x54a344['lineJoin'] = 'round', _0x54a344['moveTo'](0x101 * _0x1b2e92, 0xc7 * _0x1b2e92), _0x54a344['bezierCurveTo'](0x108 * _0x1b2e92, 0xc7 * _0x1b2e92, 0x113 * _0x1b2e92, 0xd5 * _0x1b2e92, 0x105 * _0x1b2e92, 0xdc * _0x1b2e92), _0x54a344['bezierCurveTo'](0xf6 * _0x1b2e92, 0xe1 * _0x1b2e92, 0xeb * _0x1b2e92, 0xc8 * _0x1b2e92, 0x101 * _0x1b2e92, 0xc7 * _0x1b2e92), _0x54a344['closePath'](), fill_path(_0x54a344, _0x2aeeeb[0x5]), _0x54a344['translate'](-0x5 * _0x1b2e92, 0x37 * _0x1b2e92), _0x54a344['beginPath'](), _0x54a344['lineCap'] = 'round', _0x54a344['lineJoin'] = 'round', _0x54a344['moveTo'](0xba * _0x1b2e92, 0x7b * _0x1b2e92), _0x54a344['bezierCurveTo'](0xc6 * _0x1b2e92, 0x73 * _0x1b2e92, 0xdb * _0x1b2e92, 0x6e * _0x1b2e92, 0xdb * _0x1b2e92, 0x7b * _0x1b2e92), _0x54a344['bezierCurveTo'](0xd8 * _0x1b2e92, 0x87 * _0x1b2e92, 0xab * _0x1b2e92, 0x8f * _0x1b2e92, 0xba * _0x1b2e92, 0x7b * _0x1b2e92), _0x54a344['closePath'](), fill_path(_0x54a344, _0x2aeeeb[0x5]), _0x54a344['translate'](0x5 * _0x1b2e92, -0x37 * _0x1b2e92), _0x54a344['translate'](-0x5 * _0x1b2e92, 0xf * _0x1b2e92), _0x54a344['beginPath'](), _0x54a344['lineCap'] = 'round', _0x54a344['lineJoin'] = 'round', _0x54a344['moveTo'](0xab * _0x1b2e92, 0xf1 * _0x1b2e92), _0x54a344['bezierCurveTo'](0xbd * _0x1b2e92, 0xea * _0x1b2e92, 0xc8 * _0x1b2e92, 0xf8 * _0x1b2e92, 0xbd * _0x1b2e92, 0xfe * _0x1b2e92), _0x54a344['bezierCurveTo'](0xb3 * _0x1b2e92, 0x104 * _0x1b2e92, 0x9e * _0x1b2e92, 0xf6 * _0x1b2e92, 0xab * _0x1b2e92, 0xf1 * _0x1b2e92), _0x54a344['closePath'](), fill_path(_0x54a344, _0x2aeeeb[0x5]), _0x54a344['beginPath'](), _0x54a344['lineCap'] = 'round', _0x54a344['lineJoin'] = 'round', _0x54a344['moveTo'](0x16f * _0x1b2e92, 0xa4 * _0x1b2e92), _0x54a344['bezierCurveTo'](0x17c * _0x1b2e92, 0xa0 * _0x1b2e92, 0x187 * _0x1b2e92, 0xb9 * _0x1b2e92, 0x173 * _0x1b2e92, 0xbd * _0x1b2e92), _0x54a344['bezierCurveTo'](0x16a * _0x1b2e92, 0xc0 * _0x1b2e92, 0x162 * _0x1b2e92, 0xbf * _0x1b2e92, 0x15e * _0x1b2e92, 0xb9 * _0x1b2e92), _0x54a344['bezierCurveTo'](0x146 * _0x1b2e92, 0xcd * _0x1b2e92, 0x13a * _0x1b2e92, 0xb6 * _0x1b2e92, 0x13c * _0x1b2e92, 0xab * _0x1b2e92), _0x54a344['bezierCurveTo'](0x13d * _0x1b2e92, 0x96 * _0x1b2e92, 0x14c * _0x1b2e92, 0x8f * _0x1b2e92, 0x15b * _0x1b2e92, 0x93 * _0x1b2e92), _0x54a344['bezierCurveTo'](0x169 * _0x1b2e92, 0x97 * _0x1b2e92, 0x16e * _0x1b2e92, 0x9e * _0x1b2e92, 0x16f * _0x1b2e92, 0xa4 * _0x1b2e92), _0x54a344['closePath'](), fill_path(_0x54a344, _0x2aeeeb[0x4]));
    return _0x228bdf;
}

function create_music_button(_0xf98114, _0x220ca2, _0x424432, _0x26a7c6) {
    var _0x4aec65 = document['createElement']('canvas'),
        _0x45426b = _0x4aec65['getContext']('2d');
    return _0x4aec65['width'] = 0x79 * _0xf98114, _0x4aec65['height'] = 0x82 * _0xf98114, _0x45426b['translate'](0x0, 0x14 * _0xf98114), _0x424432 == 0x1 && (_0x45426b['beginPath'](), _0x45426b['lineCap'] = 'round', _0x45426b['lineJoin'] = 'round', _0x45426b['moveTo'](0x6 * _0xf98114, 0x17 * _0xf98114), _0x45426b['bezierCurveTo'](0x6 * _0xf98114, 0x2e * _0xf98114, 0x6 * _0xf98114, 0x2e * _0xf98114, 0x6 * _0xf98114, 0x45 * _0xf98114), _0x45426b['bezierCurveTo'](0x15 * _0xf98114, 0x45 * _0xf98114, 0x15 * _0xf98114, 0x45 * _0xf98114, 0x24 * _0xf98114, 0x45 * _0xf98114), _0x45426b['bezierCurveTo'](45.5 * _0xf98114, 78.5 * _0xf98114, 45.5 * _0xf98114, 78.5 * _0xf98114, 0x37 * _0xf98114, 0x58 * _0xf98114), _0x45426b['bezierCurveTo'](55.5 * _0xf98114, 45.5 * _0xf98114, 55.5 * _0xf98114, 45.5 * _0xf98114, 0x38 * _0xf98114, 0x3 * _0xf98114), _0x45426b['bezierCurveTo'](0x2f * _0xf98114, 0xe * _0xf98114, 0x2f * _0xf98114, 0xe * _0xf98114, 0x26 * _0xf98114, 0x19 * _0xf98114), _0x45426b['bezierCurveTo'](0x17 * _0xf98114, 0x19 * _0xf98114, 0x17 * _0xf98114, 0x19 * _0xf98114, 0x6 * _0xf98114, 0x17 * _0xf98114), _0x45426b['closePath'](), fill_path(_0x45426b, undefined, _0x220ca2[0x3], 0xd * _0xf98114)), _0x45426b['beginPath'](), _0x45426b['lineCap'] = 'round', _0x45426b['lineJoin'] = 'round', _0x45426b['moveTo'](0x6 * _0xf98114, 0x17 * _0xf98114), _0x45426b['bezierCurveTo'](0x6 * _0xf98114, 0x2e * _0xf98114, 0x6 * _0xf98114, 0x2e * _0xf98114, 0x6 * _0xf98114, 0x45 * _0xf98114), _0x45426b['bezierCurveTo'](0x15 * _0xf98114, 0x45 * _0xf98114, 0x15 * _0xf98114, 0x45 * _0xf98114, 0x24 * _0xf98114, 0x45 * _0xf98114), _0x45426b['bezierCurveTo'](45.5 * _0xf98114, 78.5 * _0xf98114, 45.5 * _0xf98114, 78.5 * _0xf98114, 0x37 * _0xf98114, 0x58 * _0xf98114), _0x45426b['bezierCurveTo'](55.5 * _0xf98114, 45.5 * _0xf98114, 55.5 * _0xf98114, 45.5 * _0xf98114, 0x38 * _0xf98114, 0x3 * _0xf98114), _0x45426b['bezierCurveTo'](0x2f * _0xf98114, 0xe * _0xf98114, 0x2f * _0xf98114, 0xe * _0xf98114, 0x26 * _0xf98114, 0x19 * _0xf98114), _0x45426b['bezierCurveTo'](0x17 * _0xf98114, 0x19 * _0xf98114, 0x17 * _0xf98114, 0x19 * _0xf98114, 0x6 * _0xf98114, 0x17 * _0xf98114), _0x45426b['closePath'](), fill_path(_0x45426b, _0x220ca2[0x1], _0x220ca2[0x2], 0x4 * _0xf98114), _0x26a7c6 == 0x1 ? (_0x45426b['translate'](0x0, 0x5 * _0xf98114), _0x45426b['beginPath'](), _0x45426b['lineCap'] = 'round', _0x45426b['lineJoin'] = 'round', _0x45426b['moveTo'](0x43 * _0xf98114, 0x1e * _0xf98114), _0x45426b['bezierCurveTo'](0x49 * _0xf98114, 0x2f * _0xf98114, 0x45 * _0xf98114, 0x2d * _0xf98114, 0x43 * _0xf98114, 0x3a * _0xf98114), fill_path(_0x45426b, undefined, _0x220ca2[0x0], 0xa * _0xf98114), _0x45426b['translate'](0x3, 0x0 * _0xf98114), _0x45426b['beginPath'](), _0x45426b['lineCap'] = 'round', _0x45426b['lineJoin'] = 'round', _0x45426b['moveTo'](0x46 * _0xf98114, 0x11 * _0xf98114), _0x45426b['bezierCurveTo'](0x53 * _0xf98114, 0x2d * _0xf98114, 0x4c * _0xf98114, 0x37 * _0xf98114, 0x46 * _0xf98114, 0x45 * _0xf98114), fill_path(_0x45426b, undefined, _0x220ca2[0x0], 0xa * _0xf98114), _0x45426b['translate'](0x3, 0x0 * _0xf98114), _0x45426b['beginPath'](), _0x45426b['lineCap'] = 'round', _0x45426b['lineJoin'] = 'round', _0x45426b['moveTo'](0x4c * _0xf98114, 0x8 * _0xf98114), _0x45426b['bezierCurveTo'](0x58 * _0xf98114, 0x1f * _0xf98114, 0x59 * _0xf98114, 0x37 * _0xf98114, 0x4c * _0xf98114, 0x4f * _0xf98114), fill_path(_0x45426b, undefined, _0x220ca2[0x0], 0xa * _0xf98114), _0x424432 == 0x1 ? (_0x45426b['translate'](-0x6 * _0xf98114, -0x5 * _0xf98114), _0x45426b['beginPath'](), _0x45426b['lineCap'] = 'round', _0x45426b['lineJoin'] = 'round', _0x45426b['moveTo'](0x43 * _0xf98114, 0x1e * _0xf98114), _0x45426b['bezierCurveTo'](0x49 * _0xf98114, 0x2f * _0xf98114, 0x45 * _0xf98114, 0x2d * _0xf98114, 0x43 * _0xf98114, 0x3a * _0xf98114), fill_path(_0x45426b, undefined, _0x220ca2[0x3], 0x12 * _0xf98114), _0x45426b['translate'](0x3, 0x0 * _0xf98114), _0x45426b['beginPath'](), _0x45426b['lineCap'] = 'round', _0x45426b['lineJoin'] = 'round', _0x45426b['moveTo'](0x46 * _0xf98114, 0x11 * _0xf98114), _0x45426b['bezierCurveTo'](0x53 * _0xf98114, 0x2d * _0xf98114, 0x4c * _0xf98114, 0x37 * _0xf98114, 0x46 * _0xf98114, 0x45 * _0xf98114), fill_path(_0x45426b, undefined, _0x220ca2[0x3], 0x12 * _0xf98114), _0x45426b['translate'](0x3, 0x0 * _0xf98114), _0x45426b['beginPath'](), _0x45426b['lineCap'] = 'round', _0x45426b['lineJoin'] = 'round', _0x45426b['moveTo'](0x4c * _0xf98114, 0x8 * _0xf98114), _0x45426b['bezierCurveTo'](0x58 * _0xf98114, 0x1f * _0xf98114, 0x59 * _0xf98114, 0x37 * _0xf98114, 0x4c * _0xf98114, 0x4f * _0xf98114), fill_path(_0x45426b, undefined, _0x220ca2[0x3], 0x12 * _0xf98114), _0x45426b['translate'](-0x6, 0x0 * _0xf98114)) : _0x45426b['translate'](-0x6 * _0xf98114, -0x5 * _0xf98114), _0x45426b['beginPath'](), _0x45426b['lineCap'] = 'round', _0x45426b['lineJoin'] = 'round', _0x45426b['moveTo'](0x43 * _0xf98114, 0x1e * _0xf98114), _0x45426b['bezierCurveTo'](0x49 * _0xf98114, 0x2f * _0xf98114, 0x45 * _0xf98114, 0x2d * _0xf98114, 0x43 * _0xf98114, 0x3a * _0xf98114), fill_path(_0x45426b, undefined, _0x220ca2[0x2], 0xa * _0xf98114), _0x45426b['translate'](0x3, 0x0 * _0xf98114), _0x45426b['beginPath'](), _0x45426b['lineCap'] = 'round', _0x45426b['lineJoin'] = 'round', _0x45426b['moveTo'](0x46 * _0xf98114, 0x11 * _0xf98114), _0x45426b['bezierCurveTo'](0x53 * _0xf98114, 0x2d * _0xf98114, 0x4c * _0xf98114, 0x37 * _0xf98114, 0x46 * _0xf98114, 0x45 * _0xf98114), fill_path(_0x45426b, undefined, _0x220ca2[0x2], 0xa * _0xf98114), _0x45426b['translate'](0x3, 0x0 * _0xf98114), _0x45426b['beginPath'](), _0x45426b['lineCap'] = 'round', _0x45426b['lineJoin'] = 'round', _0x45426b['moveTo'](0x4c * _0xf98114, 0x8 * _0xf98114), _0x45426b['bezierCurveTo'](0x58 * _0xf98114, 0x1f * _0xf98114, 0x59 * _0xf98114, 0x37 * _0xf98114, 0x4c * _0xf98114, 0x4f * _0xf98114), fill_path(_0x45426b, undefined, _0x220ca2[0x2], 0xa * _0xf98114)) : (_0x424432 == 0x1 ? (_0x45426b['beginPath'](), _0x45426b['lineCap'] = 'round', _0x45426b['lineJoin'] = 'round', _0x45426b['moveTo'](0x6c * _0xf98114, 0x1b * _0xf98114), _0x45426b['bezierCurveTo'](0x5e * _0xf98114, 45.5 * _0xf98114, 0x5e * _0xf98114, 45.5 * _0xf98114, 0x50 * _0xf98114, 0x40 * _0xf98114), _0x45426b['closePath'](), fill_path(_0x45426b, undefined, _0x220ca2[0x3], 0x12 * _0xf98114), _0x45426b['beginPath'](), _0x45426b['lineCap'] = 'round', _0x45426b['lineJoin'] = 'round', _0x45426b['moveTo'](0x4f * _0xf98114, 0x1e * _0xf98114), _0x45426b['bezierCurveTo'](0x5d * _0xf98114, 0x2f * _0xf98114, 0x5d * _0xf98114, 0x2f * _0xf98114, 0x6b * _0xf98114, 0x40 * _0xf98114), _0x45426b['closePath'](), fill_path(_0x45426b, undefined, _0x220ca2[0x3], 0x12 * _0xf98114)) : (_0x45426b['translate'](0x0, -0x5 * _0xf98114), _0x45426b['beginPath'](), _0x45426b['lineCap'] = 'round', _0x45426b['lineJoin'] = 'round', _0x45426b['moveTo'](0x6c * _0xf98114, 0x1b * _0xf98114), _0x45426b['bezierCurveTo'](0x5e * _0xf98114, 45.5 * _0xf98114, 0x5e * _0xf98114, 45.5 * _0xf98114, 0x50 * _0xf98114, 0x40 * _0xf98114), _0x45426b['closePath'](), fill_path(_0x45426b, undefined, _0x220ca2[0x0], 0x7 * _0xf98114), _0x45426b['beginPath'](), _0x45426b['lineCap'] = 'round', _0x45426b['lineJoin'] = 'round', _0x45426b['moveTo'](0x4f * _0xf98114, 0x1e * _0xf98114), _0x45426b['bezierCurveTo'](0x5d * _0xf98114, 0x2f * _0xf98114, 0x5d * _0xf98114, 0x2f * _0xf98114, 0x6b * _0xf98114, 0x40 * _0xf98114), _0x45426b['closePath'](), fill_path(_0x45426b, undefined, _0x220ca2[0x0], 0x7 * _0xf98114), _0x45426b['translate'](0x0, 0x5 * _0xf98114)), _0x45426b['beginPath'](), _0x45426b['lineCap'] = 'round', _0x45426b['lineJoin'] = 'round', _0x45426b['moveTo'](0x6c * _0xf98114, 0x1b * _0xf98114), _0x45426b['bezierCurveTo'](0x5e * _0xf98114, 45.5 * _0xf98114, 0x5e * _0xf98114, 45.5 * _0xf98114, 0x50 * _0xf98114, 0x40 * _0xf98114), _0x45426b['closePath'](), fill_path(_0x45426b, undefined, _0x220ca2[0x2], 0x7 * _0xf98114), _0x45426b['beginPath'](), _0x45426b['lineCap'] = 'round', _0x45426b['lineJoin'] = 'round', _0x45426b['moveTo'](0x4f * _0xf98114, 0x1e * _0xf98114), _0x45426b['bezierCurveTo'](0x5d * _0xf98114, 0x2f * _0xf98114, 0x5d * _0xf98114, 0x2f * _0xf98114, 0x6b * _0xf98114, 0x40 * _0xf98114), _0x45426b['closePath'](), fill_path(_0x45426b, undefined, _0x220ca2[0x2], 0x7 * _0xf98114)), _0x4aec65;
}

function create_tree_snow(_0x58f530, _0x40994d, _0x9881c4) {
    var _0x202043 = document['createElement']('canvas'),
        _0x37e262 = _0x202043['getContext']('2d');
    _0x37e262['rotate'](Math['PI'] / 0x2);
}

function create_tree_branch(_0x4bebfd, _0x355bf6, _0x3b199b) {
    var _0x1036cf = document['createElement']('canvas'),
        _0x5ad9b2 = _0x1036cf['getContext']('2d'),
        _0x1353b4 = _0x4bebfd * 0x1c2,
        _0x2f4452 = _0x4bebfd * 0x91,
        _0x2d729a = _0x1353b4 / 0x2,
        _0x2d229d = _0x2f4452 / 0x2,
        _0x340348 = _0x4bebfd * 0xa,
        _0x8bff60 = _0x4bebfd * 0x14,
        _0x119ac2 = _0x4bebfd * 0x12c,
        _0x4e2419 = _0x4bebfd * 0x1e,
        _0x1dc0ec = _0x4bebfd * 0x50,
        _0x46f7df = _0x119ac2 / 0x2,
        _0xe7fd12 = _0x4e2419 / 0x2,
        _0x567b2e = 0x4;
    if (_0x3b199b) {
        var _0x1353b4 = _0x4bebfd * 0x91,
            _0x2f4452 = _0x4bebfd * 0x1c2;
        _0x1036cf['width'] = _0x1353b4, _0x1036cf['height'] = _0x2f4452, _0x5ad9b2['rotate'](Math['PI'] / 0x2), _0x5ad9b2['save'](), _0x5ad9b2['globalAlpha'] = 0.5, round_rect(_0x5ad9b2, 0x64 * _0x4bebfd, -0x6e * _0x4bebfd, _0x119ac2, _0x4e2419, _0x340348), fill_path(_0x5ad9b2, _0x355bf6[0x0]), _0x5ad9b2['translate'](0xb2 * _0x4bebfd, -0x62 * _0x4bebfd), round_rect(_0x5ad9b2, -_0x46f7df, -_0xe7fd12 - 0x6 * _0x4bebfd, 0x64 * _0x4bebfd, 0x64 * _0x4bebfd, _0x340348), fill_path(_0x5ad9b2, _0x355bf6[0x0]), _0x5ad9b2['translate'](-0x32 * _0x4bebfd, 0x5 * _0x4bebfd), round_rect(_0x5ad9b2, 0xdc * _0x4bebfd, -0xf * _0x4bebfd, 0x5a * _0x4bebfd, 0x5a * _0x4bebfd, _0x340348), fill_path(_0x5ad9b2, _0x355bf6[0x0]), _0x5ad9b2['restore'](), _0x5ad9b2['save'](), _0x5ad9b2['globalAlpha'] = 0x1, _0x5ad9b2['translate'](0xfa * _0x4bebfd, -0x3f * _0x4bebfd), round_rect(_0x5ad9b2, -_0x46f7df - 0x14 * _0x4bebfd, -_0xe7fd12, _0x119ac2, _0x4e2419, _0x340348), fill_path(_0x5ad9b2, _0x355bf6[0x1], _0x355bf6[0x2], _0x567b2e), _0x5ad9b2['translate'](-0x46 * _0x4bebfd, -0x28 * _0x4bebfd), round_rect(_0x5ad9b2, -_0x46f7df - 0x14 * _0x4bebfd, -_0xe7fd12, 0x64 * _0x4bebfd, 0x64 * _0x4bebfd, _0x340348), fill_path(_0x5ad9b2, _0x355bf6[0x3], _0x355bf6[0x4], _0x567b2e), _0x5ad9b2['translate'](-0x46 * _0x4bebfd, 0xf * _0x4bebfd), round_rect(_0x5ad9b2, 0xdc * _0x4bebfd, -0x16 * _0x4bebfd, 0x5a * _0x4bebfd, 0x5a * _0x4bebfd, _0x340348), fill_path(_0x5ad9b2, _0x355bf6[0x3], _0x355bf6[0x4], _0x567b2e), round_rect(_0x5ad9b2, 0xe6 * _0x4bebfd, -0xc * _0x4bebfd, 0x37 * _0x4bebfd, 0x37 * _0x4bebfd, _0x340348), fill_path(_0x5ad9b2, _0x355bf6[0x5]), _0x5ad9b2['translate'](-0x46 * _0x4bebfd, 0x0), round_rect(_0x5ad9b2, -0xf * _0x4bebfd, -0x2 * _0x4bebfd, 0x3c * _0x4bebfd, 0x3c * _0x4bebfd, _0x340348), fill_path(_0x5ad9b2, _0x355bf6[0x5]), _0x5ad9b2['restore']();
    } else _0x1036cf['width'] = _0x1353b4, _0x1036cf['height'] = _0x2f4452, _0x5ad9b2['save'](), _0x5ad9b2['globalAlpha'] = 0.5, _0x5ad9b2['translate'](_0x2d729a, _0x2d229d + 0xa * _0x4bebfd), round_rect(_0x5ad9b2, -_0x46f7df, -_0xe7fd12, _0x119ac2, _0x4e2419, _0x340348), fill_path(_0x5ad9b2, _0x355bf6[0x0]), _0x5ad9b2['translate'](-0x41 * _0x4bebfd, -0x19 * _0x4bebfd), round_rect(_0x5ad9b2, -_0x46f7df, -_0xe7fd12 - 0x6 * _0x4bebfd, 0x64 * _0x4bebfd, 0x64 * _0x4bebfd, 0xf * _0x4bebfd), fill_path(_0x5ad9b2, _0x355bf6[0x0]), _0x5ad9b2['translate'](-0x23 * _0x4bebfd, -0x5 * _0x4bebfd), round_rect(_0x5ad9b2, 0xdc * _0x4bebfd, -0xf * _0x4bebfd, 0x5a * _0x4bebfd, 0x5a * _0x4bebfd, 0xf * _0x4bebfd), fill_path(_0x5ad9b2, _0x355bf6[0x0]), _0x5ad9b2['restore'](), _0x5ad9b2['save'](), _0x5ad9b2['globalAlpha'] = 0x1, _0x5ad9b2['translate'](0xf0 * _0x4bebfd, 0x46 * _0x4bebfd), round_rect(_0x5ad9b2, -_0x46f7df, -_0xe7fd12, _0x119ac2, _0x4e2419, _0x340348), fill_path(_0x5ad9b2, _0x355bf6[0x1], _0x355bf6[0x2], _0x567b2e), _0x5ad9b2['translate'](-0x3c * _0x4bebfd, -0x28 * _0x4bebfd), round_rect(_0x5ad9b2, -_0x46f7df - 0x14 * _0x4bebfd, -_0xe7fd12, 0x64 * _0x4bebfd, 0x64 * _0x4bebfd, 0xf * _0x4bebfd), fill_path(_0x5ad9b2, _0x355bf6[0x3], _0x355bf6[0x4], _0x567b2e), _0x5ad9b2['translate'](-0x37 * _0x4bebfd, 0xa * _0x4bebfd), round_rect(_0x5ad9b2, 0xdc * _0x4bebfd, -0x16 * _0x4bebfd, 0x5a * _0x4bebfd, 0x5a * _0x4bebfd, 0xf * _0x4bebfd), fill_path(_0x5ad9b2, _0x355bf6[0x3], _0x355bf6[0x4], _0x567b2e), round_rect(_0x5ad9b2, 0xf0 * _0x4bebfd, -0xc * _0x4bebfd, 0x37 * _0x4bebfd, 0x37 * _0x4bebfd, 0xc * _0x4bebfd), fill_path(_0x5ad9b2, _0x355bf6[0x5]), _0x5ad9b2['translate'](0x2d * _0x4bebfd, 0x0 * _0x4bebfd), round_rect(_0x5ad9b2, -0x91 * _0x4bebfd, -0x2 * _0x4bebfd, 0x3c * _0x4bebfd, 0x3c * _0x4bebfd, 0xc * _0x4bebfd), fill_path(_0x5ad9b2, _0x355bf6[0x5]), _0x5ad9b2['restore']();
    return _0x1036cf;
}

function create_apricot_forest(_0x59bd76, _0x4b23a9) {
    var _0x506e55 = document['createElement']('canvas'),
        _0x15ce9b = _0x506e55['getContext']('2d'),
        _0x37b95b = Math['max'](_0x4b23a9['width'], _0x59bd76['width']),
        _0x25142e = Math['max'](_0x4b23a9['height'], _0x59bd76['height']);
    return _0x506e55['width'] = _0x37b95b, _0x506e55['height'] = _0x25142e, _0x15ce9b['drawImage'](_0x59bd76, (_0x37b95b - _0x59bd76['width']) / 0x2, (_0x25142e - _0x59bd76['height']) / 0x2), _0x15ce9b['drawImage'](_0x4b23a9, (_0x37b95b - _0x4b23a9['width']) / 0x2, (_0x25142e - _0x4b23a9['height']) / 0x2), _0x506e55;
}

function create_pickaxe(_0x29278c, _0x116cbb, _0x5083ef) {
    var _0xdc9b91 = document['createElement']('canvas'),
        _0x3aa1e0 = _0xdc9b91['getContext']('2d'),
        _0x37801e = _0x29278c * 0x69,
        _0x3e9bbd = _0x29278c * 0x7d,
        _0x274c5b = _0x29278c * 0x4,
        _0x3d4bd9 = _0x37801e / 0x2,
        _0x14891d = _0x3e9bbd / 0x2,
        _0x5a32bc = _0x29278c * 0xa,
        _0x24a9aa = _0x29278c * 0x5,
        _0x5bdf72 = _0x29278c * 0xa,
        _0x38b6be = _0x29278c * 0x6e,
        _0x6ddf06 = _0x5bdf72 / 0x2,
        _0x1546f5 = _0x38b6be / 0x2;
    _0xdc9b91['width'] = _0x37801e, _0xdc9b91['height'] = _0x3e9bbd, _0x3aa1e0['save'](), _0x3aa1e0['globalAlpha'] = _0x116cbb ? 0.5 : 0x1, _0x3aa1e0['translate'](_0x37801e / 0x2 + 0x8 * _0x29278c, _0x3e9bbd / 0x2 + _0x24a9aa), round_rect(_0x3aa1e0, -_0x6ddf06, -_0x1546f5, _0x5bdf72, _0x38b6be, _0x5a32bc);
    _0x116cbb ? fill_path(_0x3aa1e0, _0x5083ef[0x0]) : fill_path(_0x3aa1e0, _0x5083ef[0x1]);;
    return _0x3aa1e0['translate'](-0x82 * _0x29278c + _0x24a9aa, -0x80 * _0x29278c + _0x24a9aa), _0x3aa1e0['beginPath'](), _0x3aa1e0['bezierCurveTo'](0x9f * _0x29278c, 0x5d * _0x29278c, 0x9c * _0x29278c, 0x63 * _0x29278c, 0x9a * _0x29278c, 0x66 * _0x29278c), _0x3aa1e0['bezierCurveTo'](0x80 * _0x29278c, 0x5c * _0x29278c, 0x5a * _0x29278c, 0x5d * _0x29278c, 0x48 * _0x29278c, 0x60 * _0x29278c), _0x3aa1e0['bezierCurveTo'](0x44 * _0x29278c, 0x54 * _0x29278c, 0x8f * _0x29278c, 0x49 * _0x29278c, 0xa2 * _0x29278c, 0x56 * _0x29278c), _0x3aa1e0['closePath'](), fill_path(_0x3aa1e0, _0x5083ef[0x2]), _0x3aa1e0['restore'](), _0x3aa1e0['translate'](_0x37801e / 0x2 + 0x8, _0x3e9bbd / 0x2), _0x3aa1e0['globalAlpha'] = 0x1, round_rect(_0x3aa1e0, -_0x6ddf06, -_0x1546f5, _0x5bdf72, _0x38b6be, _0x5a32bc), fill_path(_0x3aa1e0, _0x5083ef[0x3], _0x5083ef[0x4], _0x274c5b), _0x3aa1e0['translate'](-0x82 * _0x29278c, -0x7d * _0x29278c), _0x3aa1e0['beginPath'](), _0x3aa1e0['bezierCurveTo'](0x9f * _0x29278c, 0x5d * _0x29278c, 0x9c * _0x29278c, 0x63 * _0x29278c, 0x9a * _0x29278c, 0x66 * _0x29278c), _0x3aa1e0['bezierCurveTo'](0x80 * _0x29278c, 0x5c * _0x29278c, 0x5a * _0x29278c, 0x5d * _0x29278c, 0x48 * _0x29278c, 0x60 * _0x29278c), _0x3aa1e0['bezierCurveTo'](0x44 * _0x29278c, 0x54 * _0x29278c, 0x8f * _0x29278c, 0x49 * _0x29278c, 0xa2 * _0x29278c, 0x56 * _0x29278c), _0x3aa1e0['closePath'](), fill_path(_0x3aa1e0, _0x5083ef[0x5], _0x5083ef[0x6], _0x274c5b), _0xdc9b91;
}

function create_sword_wood(_0x552db5, _0x401095, _0x46502f) {
    var _0x4356ad = document['createElement']('canvas'),
        _0x21685e = _0x4356ad['getContext']('2d');
    return _0x4356ad['width'] = 0xaa * _0x552db5, _0x4356ad['height'] = 0x1d5 * _0x552db5, _0x21685e['globalAlpha'] = _0x401095 ? 0.5 : 0x1, _0x21685e['translate'](0x14 * _0x552db5, 0x14 * _0x552db5), _0x21685e['beginPath'](), _0x21685e['lineCap'] = 'round', _0x21685e['lineJoin'] = 'round', _0x21685e['moveTo'](0x58 * _0x552db5, 0x1e * _0x552db5), _0x21685e['bezierCurveTo'](0x60 * _0x552db5, 49.5 * _0x552db5, 0x60 * _0x552db5, 49.5 * _0x552db5, 0x68 * _0x552db5, 0x45 * _0x552db5), _0x21685e['bezierCurveTo'](105.5 * _0x552db5, 41.5 * _0x552db5, 105.5 * _0x552db5, 41.5 * _0x552db5, 0x6b * _0x552db5, 0xe * _0x552db5), _0x21685e['bezierCurveTo'](0x72 * _0x552db5, 9.5 * _0x552db5, 0x72 * _0x552db5, 9.5 * _0x552db5, 0x79 * _0x552db5, 0x5 * _0x552db5), _0x21685e['bezierCurveTo'](135.5 * _0x552db5, 27.5 * _0x552db5, 135.5 * _0x552db5, 27.5 * _0x552db5, 0x96 * _0x552db5, 0x32 * _0x552db5), _0x21685e['bezierCurveTo'](110.5 * _0x552db5, 0x11e * _0x552db5, 110.5 * _0x552db5, 0x11e * _0x552db5, 0x67 * _0x552db5, 0x14b * _0x552db5), _0x21685e['bezierCurveTo'](69.5 * _0x552db5, 0x145 * _0x552db5, 69.5 * _0x552db5, 0x145 * _0x552db5, 0x24 * _0x552db5, 0x13f * _0x552db5), _0x21685e['bezierCurveTo'](56.5 * _0x552db5, 0xb4 * _0x552db5, 56.5 * _0x552db5, 0xb4 * _0x552db5, 0x4d * _0x552db5, 0x29 * _0x552db5), _0x21685e['closePath'](), fill_path(_0x21685e, _0x46502f[0x0]), _0x21685e['beginPath'](), _0x21685e['lineCap'] = 'round', _0x21685e['lineJoin'] = 'round', _0x21685e['moveTo'](0x76 * _0x552db5, 0x1f * _0x552db5), _0x21685e['bezierCurveTo'](0x7d * _0x552db5, 0x2b * _0x552db5, 0x7d * _0x552db5, 0x2b * _0x552db5, 0x84 * _0x552db5, 0x37 * _0x552db5), _0x21685e['bezierCurveTo'](109.5 * _0x552db5, 185.5 * _0x552db5, 109.5 * _0x552db5, 185.5 * _0x552db5, 0x57 * _0x552db5, 0x13c * _0x552db5), _0x21685e['bezierCurveTo'](0x48 * _0x552db5, 313.5 * _0x552db5, 0x48 * _0x552db5, 313.5 * _0x552db5, 0x39 * _0x552db5, 0x137 * _0x552db5), _0x21685e['bezierCurveTo'](76.5 * _0x552db5, 0xb5 * _0x552db5, 76.5 * _0x552db5, 0xb5 * _0x552db5, 0x60 * _0x552db5, 0x33 * _0x552db5), _0x21685e['closePath'](), fill_path(_0x21685e, _0x46502f[0x0]), _0x21685e['beginPath'](), _0x21685e['lineCap'] = 'round', _0x21685e['lineJoin'] = 'round', _0x21685e['moveTo'](0x38 * _0x552db5, 0x148 * _0x552db5), _0x21685e['bezierCurveTo'](0x2f * _0x552db5, 385.5 * _0x552db5, 0x2f * _0x552db5, 385.5 * _0x552db5, 0x26 * _0x552db5, 0x1bb * _0x552db5), _0x21685e['bezierCurveTo'](0x34 * _0x552db5, 0x1be * _0x552db5, 0x34 * _0x552db5, 0x1be * _0x552db5, 0x42 * _0x552db5, 0x1c1 * _0x552db5), _0x21685e['bezierCurveTo'](76.5 * _0x552db5, 388.5 * _0x552db5, 76.5 * _0x552db5, 388.5 * _0x552db5, 0x57 * _0x552db5, 0x148 * _0x552db5), _0x21685e['closePath'](), fill_path(_0x21685e, _0x46502f[0x0]), _0x21685e['beginPath'](), _0x21685e['lineCap'] = 'round', _0x21685e['lineJoin'] = 'round', _0x21685e['moveTo'](0x4a * _0x552db5, 0x12e * _0x552db5), _0x21685e['bezierCurveTo'](0x68 * _0x552db5, 316.5 * _0x552db5, 0x68 * _0x552db5, 316.5 * _0x552db5, 0x86 * _0x552db5, 0x14b * _0x552db5), _0x21685e['bezierCurveTo'](0x85 * _0x552db5, 0x155 * _0x552db5, 0x85 * _0x552db5, 0x155 * _0x552db5, 0x84 * _0x552db5, 0x15f * _0x552db5), _0x21685e['bezierCurveTo'](69.5 * _0x552db5, 0x156 * _0x552db5, 69.5 * _0x552db5, 0x156 * _0x552db5, 0x7 * _0x552db5, 0x14d * _0x552db5), _0x21685e['bezierCurveTo'](0x8 * _0x552db5, 0x143 * _0x552db5, 0x8 * _0x552db5, 0x143 * _0x552db5, 0x9 * _0x552db5, 0x139 * _0x552db5), _0x21685e['closePath'](), fill_path(_0x21685e, _0x46502f[0x0]), _0x21685e['save'](), _0x21685e['translate'](51.5 * _0x552db5, 440.5 * _0x552db5), _0x21685e['rotate'](0.2), round_rect(_0x21685e, -20.5 * _0x552db5, -18.5 * _0x552db5, 0x29 * _0x552db5, 0x25 * _0x552db5, 0xa * _0x552db5), _0x21685e['restore'](), fill_path(_0x21685e, _0x46502f[0x0]), _0x21685e['beginPath'](), _0x21685e['lineCap'] = 'round', _0x21685e['lineJoin'] = 'round', _0x21685e['moveTo'](0x49 * _0x552db5, 0x13c * _0x552db5), _0x21685e['bezierCurveTo'](0x5a * _0x552db5, 324.5 * _0x552db5, 0x5a * _0x552db5, 324.5 * _0x552db5, 0x6b * _0x552db5, 0x14d * _0x552db5), _0x21685e['bezierCurveTo'](0x46 * _0x552db5, 327.5 * _0x552db5, 0x46 * _0x552db5, 327.5 * _0x552db5, 0x21 * _0x552db5, 0x142 * _0x552db5), _0x21685e['closePath'](), fill_path(_0x21685e, _0x46502f[0x0]), _0x21685e['globalAlpha'] = 0x1, _0x21685e['translate'](-0x14 * _0x552db5, -0x14 * _0x552db5), _0x21685e['beginPath'](), _0x21685e['lineCap'] = 'round', _0x21685e['lineJoin'] = 'round', _0x21685e['moveTo'](0x58 * _0x552db5, 0x1e * _0x552db5), _0x21685e['bezierCurveTo'](0x60 * _0x552db5, 49.5 * _0x552db5, 0x60 * _0x552db5, 49.5 * _0x552db5, 0x68 * _0x552db5, 0x45 * _0x552db5), _0x21685e['bezierCurveTo'](105.5 * _0x552db5, 41.5 * _0x552db5, 105.5 * _0x552db5, 41.5 * _0x552db5, 0x6b * _0x552db5, 0xe * _0x552db5), _0x21685e['bezierCurveTo'](0x72 * _0x552db5, 9.5 * _0x552db5, 0x72 * _0x552db5, 9.5 * _0x552db5, 0x79 * _0x552db5, 0x5 * _0x552db5), _0x21685e['bezierCurveTo'](135.5 * _0x552db5, 27.5 * _0x552db5, 135.5 * _0x552db5, 27.5 * _0x552db5, 0x96 * _0x552db5, 0x32 * _0x552db5), _0x21685e['bezierCurveTo'](110.5 * _0x552db5, 0x11e * _0x552db5, 110.5 * _0x552db5, 0x11e * _0x552db5, 0x67 * _0x552db5, 0x14b * _0x552db5), _0x21685e['bezierCurveTo'](69.5 * _0x552db5, 0x145 * _0x552db5, 69.5 * _0x552db5, 0x145 * _0x552db5, 0x24 * _0x552db5, 0x13f * _0x552db5), _0x21685e['bezierCurveTo'](56.5 * _0x552db5, 0xb4 * _0x552db5, 56.5 * _0x552db5, 0xb4 * _0x552db5, 0x4d * _0x552db5, 0x29 * _0x552db5), _0x21685e['closePath'](), fill_path(_0x21685e, _0x46502f[0x1], _0x46502f[0x2], 0x7 * _0x552db5), _0x21685e['beginPath'](), _0x21685e['lineCap'] = 'round', _0x21685e['lineJoin'] = 'round', _0x21685e['moveTo'](0x76 * _0x552db5, 0x1f * _0x552db5), _0x21685e['bezierCurveTo'](0x7d * _0x552db5, 0x2b * _0x552db5, 0x7d * _0x552db5, 0x2b * _0x552db5, 0x84 * _0x552db5, 0x37 * _0x552db5), _0x21685e['bezierCurveTo'](109.5 * _0x552db5, 185.5 * _0x552db5, 109.5 * _0x552db5, 185.5 * _0x552db5, 0x57 * _0x552db5, 0x13c * _0x552db5), _0x21685e['bezierCurveTo'](0x48 * _0x552db5, 313.5 * _0x552db5, 0x48 * _0x552db5, 313.5 * _0x552db5, 0x39 * _0x552db5, 0x137 * _0x552db5), _0x21685e['bezierCurveTo'](76.5 * _0x552db5, 0xb5 * _0x552db5, 76.5 * _0x552db5, 0xb5 * _0x552db5, 0x60 * _0x552db5, 0x33 * _0x552db5), _0x21685e['closePath'](), fill_path(_0x21685e, _0x46502f[0x3]), _0x21685e['beginPath'](), _0x21685e['lineCap'] = 'round', _0x21685e['lineJoin'] = 'round', _0x21685e['moveTo'](0x58 * _0x552db5, 0x1e * _0x552db5), _0x21685e['bezierCurveTo'](0x60 * _0x552db5, 49.5 * _0x552db5, 0x60 * _0x552db5, 49.5 * _0x552db5, 0x68 * _0x552db5, 0x45 * _0x552db5), _0x21685e['bezierCurveTo'](105.5 * _0x552db5, 41.5 * _0x552db5, 105.5 * _0x552db5, 41.5 * _0x552db5, 0x6b * _0x552db5, 0xe * _0x552db5), _0x21685e['bezierCurveTo'](0x72 * _0x552db5, 9.5 * _0x552db5, 0x72 * _0x552db5, 9.5 * _0x552db5, 0x79 * _0x552db5, 0x5 * _0x552db5), _0x21685e['bezierCurveTo'](135.5 * _0x552db5, 27.5 * _0x552db5, 135.5 * _0x552db5, 27.5 * _0x552db5, 0x96 * _0x552db5, 0x32 * _0x552db5), _0x21685e['bezierCurveTo'](110.5 * _0x552db5, 0x11e * _0x552db5, 110.5 * _0x552db5, 0x11e * _0x552db5, 0x67 * _0x552db5, 0x14b * _0x552db5), _0x21685e['bezierCurveTo'](69.5 * _0x552db5, 0x145 * _0x552db5, 69.5 * _0x552db5, 0x145 * _0x552db5, 0x24 * _0x552db5, 0x13f * _0x552db5), _0x21685e['bezierCurveTo'](56.5 * _0x552db5, 0xb4 * _0x552db5, 56.5 * _0x552db5, 0xb4 * _0x552db5, 0x4d * _0x552db5, 0x29 * _0x552db5), _0x21685e['closePath'](), fill_path(_0x21685e, undefined, _0x46502f[0x2], 0x7 * _0x552db5), _0x21685e['beginPath'](), _0x21685e['lineCap'] = 'round', _0x21685e['lineJoin'] = 'round', _0x21685e['moveTo'](0x38 * _0x552db5, 0x148 * _0x552db5), _0x21685e['bezierCurveTo'](0x2f * _0x552db5, 385.5 * _0x552db5, 0x2f * _0x552db5, 385.5 * _0x552db5, 0x26 * _0x552db5, 0x1bb * _0x552db5), _0x21685e['bezierCurveTo'](0x34 * _0x552db5, 0x1be * _0x552db5, 0x34 * _0x552db5, 0x1be * _0x552db5, 0x42 * _0x552db5, 0x1c1 * _0x552db5), _0x21685e['bezierCurveTo'](76.5 * _0x552db5, 388.5 * _0x552db5, 76.5 * _0x552db5, 388.5 * _0x552db5, 0x57 * _0x552db5, 0x148 * _0x552db5), _0x21685e['closePath'](), fill_path(_0x21685e, _0x46502f[0x4], _0x46502f[0x5], 0x7 * _0x552db5), _0x21685e['beginPath'](), _0x21685e['lineCap'] = 'round', _0x21685e['lineJoin'] = 'round', _0x21685e['moveTo'](0x4a * _0x552db5, 0x12e * _0x552db5), _0x21685e['bezierCurveTo'](0x68 * _0x552db5, 316.5 * _0x552db5, 0x68 * _0x552db5, 316.5 * _0x552db5, 0x86 * _0x552db5, 0x14b * _0x552db5), _0x21685e['bezierCurveTo'](0x85 * _0x552db5, 0x155 * _0x552db5, 0x85 * _0x552db5, 0x155 * _0x552db5, 0x84 * _0x552db5, 0x15f * _0x552db5), _0x21685e['bezierCurveTo'](69.5 * _0x552db5, 0x156 * _0x552db5, 69.5 * _0x552db5, 0x156 * _0x552db5, 0x7 * _0x552db5, 0x14d * _0x552db5), _0x21685e['bezierCurveTo'](0x8 * _0x552db5, 0x143 * _0x552db5, 0x8 * _0x552db5, 0x143 * _0x552db5, 0x9 * _0x552db5, 0x139 * _0x552db5), _0x21685e['closePath'](), fill_path(_0x21685e, _0x46502f[0x4], _0x46502f[0x5], 0x7 * _0x552db5), _0x21685e['save'](), _0x21685e['translate'](51.5 * _0x552db5, 440.5 * _0x552db5), _0x21685e['rotate'](0.2), round_rect(_0x21685e, -20.5 * _0x552db5, -18.5 * _0x552db5, 0x29 * _0x552db5, 0x25 * _0x552db5, 0xa * _0x552db5), _0x21685e['restore'](), fill_path(_0x21685e, _0x46502f[0x4], _0x46502f[0x5], 0x7 * _0x552db5), _0x21685e['beginPath'](), _0x21685e['lineCap'] = 'round', _0x21685e['lineJoin'] = 'round', _0x21685e['moveTo'](0x49 * _0x552db5, 0x13c * _0x552db5), _0x21685e['bezierCurveTo'](0x5a * _0x552db5, 324.5 * _0x552db5, 0x5a * _0x552db5, 324.5 * _0x552db5, 0x6b * _0x552db5, 0x14d * _0x552db5), _0x21685e['bezierCurveTo'](0x46 * _0x552db5, 327.5 * _0x552db5, 0x46 * _0x552db5, 327.5 * _0x552db5, 0x21 * _0x552db5, 0x142 * _0x552db5), _0x21685e['closePath'](), fill_path(_0x21685e, _0x46502f[0x6]), _0x4356ad;
}

function create_pirate_sword(_0x3a5626, _0x5d05e6, _0x450814) {
    var _0x1c2181 = document['createElement']('canvas'),
        _0x32b023 = _0x1c2181['getContext']('2d');
    return _0x1c2181['width'] = 0x1a8 * _0x3a5626, _0x1c2181['height'] = 0x314 * _0x3a5626, _0x32b023['translate'](0x19 * _0x3a5626, 0x19 * _0x3a5626), _0x32b023['globalAlpha'] = _0x5d05e6 ? 0.5 : 0x1, _0x32b023['save'](), _0x32b023['translate'](193.5 * _0x3a5626, 602.5 * _0x3a5626), _0x32b023['rotate'](-0.12), round_rect(_0x32b023, -26.5 * _0x3a5626, -97.5 * _0x3a5626, 0x35 * _0x3a5626, 0xc3 * _0x3a5626, 0x19 * _0x3a5626), _0x32b023['restore'](), fill_path(_0x32b023, _0x450814[0x0]), _0x32b023['beginPath'](), _0x32b023['lineCap'] = 'round', _0x32b023['lineJoin'] = 'round', _0x32b023['moveTo'](0x89 * _0x3a5626, 0x207 * _0x3a5626), _0x32b023['bezierCurveTo'](0xb6 * _0x3a5626, 0x201 * _0x3a5626, 0xb6 * _0x3a5626, 0x201 * _0x3a5626, 0xe3 * _0x3a5626, 0x1fb * _0x3a5626), _0x32b023['bezierCurveTo'](0xd6 * _0x3a5626, 0x1a1 * _0x3a5626, 0xbd * _0x3a5626, 0x130 * _0x3a5626, 0xdd * _0x3a5626, 0xb4 * _0x3a5626), _0x32b023['bezierCurveTo'](0xbf * _0x3a5626, 0x7e * _0x3a5626, 0xc0 * _0x3a5626, 0x69 * _0x3a5626, 0xc6 * _0x3a5626, 0x40 * _0x3a5626), _0x32b023['bezierCurveTo'](0x7b * _0x3a5626, 0x66 * _0x3a5626, 0x63 * _0x3a5626, 0x11d * _0x3a5626, 0x89 * _0x3a5626, 0x205 * _0x3a5626), _0x32b023['closePath'](), fill_path(_0x32b023, _0x450814[0x0]), _0x32b023['beginPath'](), _0x32b023['lineCap'] = 'round', _0x32b023['lineJoin'] = 'round', _0x32b023['moveTo'](0xaf * _0x3a5626, 0x77 * _0x3a5626), _0x32b023['bezierCurveTo'](0xb0 * _0x3a5626, 0x8e * _0x3a5626, 0xb8 * _0x3a5626, 0xa5 * _0x3a5626, 0xc5 * _0x3a5626, 0xb7 * _0x3a5626), _0x32b023['bezierCurveTo'](0xa7 * _0x3a5626, 0x145 * _0x3a5626, 0xbf * _0x3a5626, 0x195 * _0x3a5626, 0xca * _0x3a5626, 0x1f6 * _0x3a5626), _0x32b023['bezierCurveTo'](0xb4 * _0x3a5626, 0x1f7 * _0x3a5626, 0xb4 * _0x3a5626, 0x1f7 * _0x3a5626, 0x9e * _0x3a5626, 0x1f8 * _0x3a5626), _0x32b023['bezierCurveTo'](0x87 * _0x3a5626, 0x18c * _0x3a5626, 0x86 * _0x3a5626, 0xb9 * _0x3a5626, 0xaf * _0x3a5626, 0x77 * _0x3a5626), _0x32b023['closePath'](), fill_path(_0x32b023, _0x450814[0x0]), _0x32b023['beginPath'](), _0x32b023['lineCap'] = 'round', _0x32b023['lineJoin'] = 'round', _0x32b023['moveTo'](0x6e * _0x3a5626, 0x206 * _0x3a5626), _0x32b023['bezierCurveTo'](111.5 * _0x3a5626, 0x215 * _0x3a5626, 111.5 * _0x3a5626, 0x215 * _0x3a5626, 0x71 * _0x3a5626, 0x224 * _0x3a5626), _0x32b023['bezierCurveTo'](162.5 * _0x3a5626, 0x220 * _0x3a5626, 162.5 * _0x3a5626, 0x220 * _0x3a5626, 0xd4 * _0x3a5626, 0x21c * _0x3a5626), _0x32b023['bezierCurveTo'](0x138 * _0x3a5626, 0x217 * _0x3a5626, 0x119 * _0x3a5626, 0x299 * _0x3a5626, 0xe1 * _0x3a5626, 0x299 * _0x3a5626), _0x32b023['bezierCurveTo'](0xe3 * _0x3a5626, 686.5 * _0x3a5626, 0xe3 * _0x3a5626, 686.5 * _0x3a5626, 0xe5 * _0x3a5626, 0x2c4 * _0x3a5626), _0x32b023['bezierCurveTo'](0x157 * _0x3a5626, 0x2ac * _0x3a5626, 0x162 * _0x3a5626, 0x1f0 * _0x3a5626, 0xde * _0x3a5626, 0x1f2 * _0x3a5626), _0x32b023['bezierCurveTo'](165.5 * _0x3a5626, 0x1f7 * _0x3a5626, 165.5 * _0x3a5626, 0x1f7 * _0x3a5626, 0x6d * _0x3a5626, 0x1fc * _0x3a5626), _0x32b023['closePath'](), fill_path(_0x32b023, _0x450814[0x0]), circle(_0x32b023, 0xcc * _0x3a5626, 0x2b5 * _0x3a5626, 36.013886210738214 * _0x3a5626), fill_path(_0x32b023, _0x450814[0x0]), circle(_0x32b023, 0x69 * _0x3a5626, 0x206 * _0x3a5626, 0x1e * _0x3a5626), fill_path(_0x32b023, _0x450814[0x0]), _0x32b023['beginPath'](), _0x32b023['lineCap'] = 'round', _0x32b023['lineJoin'] = 'round', _0x32b023['moveTo'](0xab * _0x3a5626, 0x217 * _0x3a5626), _0x32b023['bezierCurveTo'](139.5 * _0x3a5626, 537.5 * _0x3a5626, 139.5 * _0x3a5626, 537.5 * _0x3a5626, 0x6c * _0x3a5626, 0x21c * _0x3a5626), _0x32b023['bezierCurveTo'](0x6e * _0x3a5626, 527.5 * _0x3a5626, 0x6e * _0x3a5626, 527.5 * _0x3a5626, 0x70 * _0x3a5626, 0x203 * _0x3a5626), _0x32b023['bezierCurveTo'](0x94 * _0x3a5626, 0x201 * _0x3a5626, 0x94 * _0x3a5626, 0x201 * _0x3a5626, 0xb8 * _0x3a5626, 0x1ff * _0x3a5626), _0x32b023['closePath'](), fill_path(_0x32b023, _0x450814[0x0]), _0x32b023['beginPath'](), _0x32b023['lineCap'] = 'round', _0x32b023['lineJoin'] = 'round', _0x32b023['moveTo'](0xf4 * _0x3a5626, 0x29d * _0x3a5626), _0x32b023['bezierCurveTo'](248.5 * _0x3a5626, 0x2a8 * _0x3a5626, 248.5 * _0x3a5626, 0x2a8 * _0x3a5626, 0xfd * _0x3a5626, 0x2b3 * _0x3a5626), _0x32b023['bezierCurveTo'](239.5 * _0x3a5626, 0x2b9 * _0x3a5626, 239.5 * _0x3a5626, 0x2b9 * _0x3a5626, 0xe2 * _0x3a5626, 0x2bf * _0x3a5626), _0x32b023['bezierCurveTo'](0xdf * _0x3a5626, 691.5 * _0x3a5626, 0xdf * _0x3a5626, 691.5 * _0x3a5626, 0xdc * _0x3a5626, 0x2a8 * _0x3a5626), _0x32b023['closePath'](), fill_path(_0x32b023, _0x450814[0x0]), _0x32b023['translate'](-0x19 * _0x3a5626, -0x19 * _0x3a5626), _0x32b023['globalAlpha'] = 0x1, _0x32b023['save'](), _0x32b023['translate'](193.5 * _0x3a5626, 602.5 * _0x3a5626), _0x32b023['rotate'](-0.12), round_rect(_0x32b023, -26.5 * _0x3a5626, -97.5 * _0x3a5626, 0x35 * _0x3a5626, 0xc3 * _0x3a5626, 0x19 * _0x3a5626), _0x32b023['restore'](), fill_path(_0x32b023, _0x450814[0x1], _0x450814[0x2], 0x10 * _0x3a5626), _0x32b023['beginPath'](), _0x32b023['lineCap'] = 'round', _0x32b023['lineJoin'] = 'round', _0x32b023['moveTo'](0x89 * _0x3a5626, 0x207 * _0x3a5626), _0x32b023['bezierCurveTo'](0xb6 * _0x3a5626, 0x201 * _0x3a5626, 0xb6 * _0x3a5626, 0x201 * _0x3a5626, 0xe3 * _0x3a5626, 0x1fb * _0x3a5626), _0x32b023['bezierCurveTo'](0xd6 * _0x3a5626, 0x1a1 * _0x3a5626, 0xbd * _0x3a5626, 0x130 * _0x3a5626, 0xdd * _0x3a5626, 0xb4 * _0x3a5626), _0x32b023['bezierCurveTo'](0xbf * _0x3a5626, 0x7e * _0x3a5626, 0xc0 * _0x3a5626, 0x69 * _0x3a5626, 0xc6 * _0x3a5626, 0x40 * _0x3a5626), _0x32b023['bezierCurveTo'](0x7b * _0x3a5626, 0x66 * _0x3a5626, 0x63 * _0x3a5626, 0x11d * _0x3a5626, 0x89 * _0x3a5626, 0x205 * _0x3a5626), _0x32b023['closePath'](), fill_path(_0x32b023, _0x450814[0x3], _0x450814[0x4], 0x10 * _0x3a5626), _0x32b023['beginPath'](), _0x32b023['lineCap'] = 'round', _0x32b023['lineJoin'] = 'round', _0x32b023['moveTo'](0xaf * _0x3a5626, 0x77 * _0x3a5626), _0x32b023['bezierCurveTo'](0xb0 * _0x3a5626, 0x8e * _0x3a5626, 0xb8 * _0x3a5626, 0xa5 * _0x3a5626, 0xc5 * _0x3a5626, 0xb7 * _0x3a5626), _0x32b023['bezierCurveTo'](0xa7 * _0x3a5626, 0x145 * _0x3a5626, 0xbf * _0x3a5626, 0x195 * _0x3a5626, 0xca * _0x3a5626, 0x1f6 * _0x3a5626), _0x32b023['bezierCurveTo'](0xb4 * _0x3a5626, 0x1f7 * _0x3a5626, 0xb4 * _0x3a5626, 0x1f7 * _0x3a5626, 0x9e * _0x3a5626, 0x1f8 * _0x3a5626), _0x32b023['bezierCurveTo'](0x87 * _0x3a5626, 0x18c * _0x3a5626, 0x86 * _0x3a5626, 0xb9 * _0x3a5626, 0xaf * _0x3a5626, 0x77 * _0x3a5626), _0x32b023['closePath'](), fill_path(_0x32b023, _0x450814[0x5]), _0x32b023['beginPath'](), _0x32b023['lineCap'] = 'round', _0x32b023['lineJoin'] = 'round', _0x32b023['moveTo'](0x6e * _0x3a5626, 0x206 * _0x3a5626), _0x32b023['bezierCurveTo'](111.5 * _0x3a5626, 0x215 * _0x3a5626, 111.5 * _0x3a5626, 0x215 * _0x3a5626, 0x71 * _0x3a5626, 0x224 * _0x3a5626), _0x32b023['bezierCurveTo'](162.5 * _0x3a5626, 0x220 * _0x3a5626, 162.5 * _0x3a5626, 0x220 * _0x3a5626, 0xd4 * _0x3a5626, 0x21c * _0x3a5626), _0x32b023['bezierCurveTo'](0x138 * _0x3a5626, 0x217 * _0x3a5626, 0x119 * _0x3a5626, 0x299 * _0x3a5626, 0xe1 * _0x3a5626, 0x299 * _0x3a5626), _0x32b023['bezierCurveTo'](0xe3 * _0x3a5626, 686.5 * _0x3a5626, 0xe3 * _0x3a5626, 686.5 * _0x3a5626, 0xe5 * _0x3a5626, 0x2c4 * _0x3a5626), _0x32b023['bezierCurveTo'](0x157 * _0x3a5626, 0x2ac * _0x3a5626, 0x162 * _0x3a5626, 0x1f0 * _0x3a5626, 0xde * _0x3a5626, 0x1f2 * _0x3a5626), _0x32b023['bezierCurveTo'](165.5 * _0x3a5626, 0x1f7 * _0x3a5626, 165.5 * _0x3a5626, 0x1f7 * _0x3a5626, 0x6d * _0x3a5626, 0x1fc * _0x3a5626), _0x32b023['closePath'](), fill_path(_0x32b023, _0x450814[0x6], _0x450814[0x4], 0x10 * _0x3a5626), circle(_0x32b023, 0xcc * _0x3a5626, 0x2b5 * _0x3a5626, 36.013886210738214 * _0x3a5626), fill_path(_0x32b023, _0x450814[0x6], _0x450814[0x4], 0x10 * _0x3a5626), circle(_0x32b023, 0x69 * _0x3a5626, 0x206 * _0x3a5626, 0x1e * _0x3a5626), fill_path(_0x32b023, _0x450814[0x6], _0x450814[0x4], 0x10 * _0x3a5626), _0x32b023['beginPath'](), _0x32b023['lineCap'] = 'round', _0x32b023['lineJoin'] = 'round', _0x32b023['moveTo'](0xab * _0x3a5626, 0x217 * _0x3a5626), _0x32b023['bezierCurveTo'](139.5 * _0x3a5626, 537.5 * _0x3a5626, 139.5 * _0x3a5626, 537.5 * _0x3a5626, 0x6c * _0x3a5626, 0x21c * _0x3a5626), _0x32b023['bezierCurveTo'](0x6e * _0x3a5626, 527.5 * _0x3a5626, 0x6e * _0x3a5626, 527.5 * _0x3a5626, 0x70 * _0x3a5626, 0x203 * _0x3a5626), _0x32b023['bezierCurveTo'](0x94 * _0x3a5626, 0x201 * _0x3a5626, 0x94 * _0x3a5626, 0x201 * _0x3a5626, 0xb8 * _0x3a5626, 0x1ff * _0x3a5626), _0x32b023['closePath'](), fill_path(_0x32b023, _0x450814[0x6]), _0x32b023['beginPath'](), _0x32b023['lineCap'] = 'round', _0x32b023['lineJoin'] = 'round', _0x32b023['moveTo'](0xf4 * _0x3a5626, 0x29d * _0x3a5626), _0x32b023['bezierCurveTo'](248.5 * _0x3a5626, 0x2a8 * _0x3a5626, 248.5 * _0x3a5626, 0x2a8 * _0x3a5626, 0xfd * _0x3a5626, 0x2b3 * _0x3a5626), _0x32b023['bezierCurveTo'](239.5 * _0x3a5626, 0x2b9 * _0x3a5626, 239.5 * _0x3a5626, 0x2b9 * _0x3a5626, 0xe2 * _0x3a5626, 0x2bf * _0x3a5626), _0x32b023['bezierCurveTo'](0xdf * _0x3a5626, 691.5 * _0x3a5626, 0xdf * _0x3a5626, 691.5 * _0x3a5626, 0xdc * _0x3a5626, 0x2a8 * _0x3a5626), _0x32b023['closePath'](), fill_path(_0x32b023, _0x450814[0x6]), circle(_0x32b023, 0xcc * _0x3a5626, 0x2b5 * _0x3a5626, 17.029386365926403 * _0x3a5626), fill_path(_0x32b023, _0x450814[0x7]), circle(_0x32b023, 0x6a * _0x3a5626, 0x206 * _0x3a5626, 0xc * _0x3a5626), fill_path(_0x32b023, _0x450814[0x7]), _0x1c2181;
}

function create_sword(_0x2d83cc, _0x31ca4e, _0x1c773a) {
    var _0x26962e = document['createElement']('canvas'),
        _0x5ef75f = _0x26962e['getContext']('2d');
    return _0x26962e['width'] = 0x64 * _0x2d83cc, _0x26962e['height'] = 0xfa * _0x2d83cc, _0x5ef75f['translate'](-0x87 * _0x2d83cc, -0x4b * _0x2d83cc), _0x5ef75f['globalAlpha'] = _0x31ca4e ? 0.8 : 0x1, _0x5ef75f['beginPath'](), _0x5ef75f['lineCap'] = 'round', _0x5ef75f['lineJoin'] = 'round', _0x5ef75f['moveTo'](178.5 * _0x2d83cc, 238.03125 * _0x2d83cc), _0x5ef75f['bezierCurveTo'](0xb1 * _0x2d83cc, 175.03125 * _0x2d83cc, 0xb1 * _0x2d83cc, 175.03125 * _0x2d83cc, 175.5 * _0x2d83cc, 112.03125 * _0x2d83cc), _0x5ef75f['bezierCurveTo'](184.5 * _0x2d83cc, 100.53125 * _0x2d83cc, 184.5 * _0x2d83cc, 100.53125 * _0x2d83cc, 193.5 * _0x2d83cc, 89.03125 * _0x2d83cc), _0x5ef75f['bezierCurveTo'](0xca * _0x2d83cc, 100.03125 * _0x2d83cc, 0xca * _0x2d83cc, 100.03125 * _0x2d83cc, 210.5 * _0x2d83cc, 111.03125 * _0x2d83cc), _0x5ef75f['bezierCurveTo'](209.5 * _0x2d83cc, 174.03125 * _0x2d83cc, 209.5 * _0x2d83cc, 174.03125 * _0x2d83cc, 208.5 * _0x2d83cc, 237.03125 * _0x2d83cc), _0x5ef75f['closePath'](), fill_path(_0x5ef75f, _0x1c773a[0x0]), _0x5ef75f['beginPath'](), _0x5ef75f['lineCap'] = 'round', _0x5ef75f['lineJoin'] = 'round', _0x5ef75f['moveTo'](155.5 * _0x2d83cc, 239.03125 * _0x2d83cc), _0x5ef75f['bezierCurveTo'](0xc2 * _0x2d83cc, 238.53125 * _0x2d83cc, 0xc2 * _0x2d83cc, 238.53125 * _0x2d83cc, 232.5 * _0x2d83cc, 238.03125 * _0x2d83cc), _0x5ef75f['bezierCurveTo'](232.5 * _0x2d83cc, 243.03125 * _0x2d83cc, 232.5 * _0x2d83cc, 243.03125 * _0x2d83cc, 232.5 * _0x2d83cc, 248.03125 * _0x2d83cc), _0x5ef75f['bezierCurveTo'](0xc2 * _0x2d83cc, 248.53125 * _0x2d83cc, 0xc2 * _0x2d83cc, 248.53125 * _0x2d83cc, 155.5 * _0x2d83cc, 249.03125 * _0x2d83cc), _0x5ef75f['closePath'](), fill_path(_0x5ef75f, _0x1c773a[0x0]), circle(_0x5ef75f, 160.5 * _0x2d83cc, 243.03125 * _0x2d83cc, 0x7 * _0x2d83cc), fill_path(_0x5ef75f, _0x1c773a[0x0]), circle(_0x5ef75f, 227.5 * _0x2d83cc, 242.03125 * _0x2d83cc, 0x7 * _0x2d83cc), fill_path(_0x5ef75f, _0x1c773a[0x0]), _0x5ef75f['beginPath'](), _0x5ef75f['lineCap'] = 'round', _0x5ef75f['lineJoin'] = 'round', _0x5ef75f['moveTo'](185.5 * _0x2d83cc, 253.03125 * _0x2d83cc), _0x5ef75f['bezierCurveTo'](193.5 * _0x2d83cc, 253.03125 * _0x2d83cc, 193.5 * _0x2d83cc, 253.03125 * _0x2d83cc, 201.5 * _0x2d83cc, 253.03125 * _0x2d83cc), _0x5ef75f['bezierCurveTo'](201.5 * _0x2d83cc, 276.03125 * _0x2d83cc, 201.5 * _0x2d83cc, 276.03125 * _0x2d83cc, 201.5 * _0x2d83cc, 299.03125 * _0x2d83cc), _0x5ef75f['bezierCurveTo'](194.5 * _0x2d83cc, 299.03125 * _0x2d83cc, 194.5 * _0x2d83cc, 299.03125 * _0x2d83cc, 187.5 * _0x2d83cc, 299.03125 * _0x2d83cc), _0x5ef75f['closePath'](), fill_path(_0x5ef75f, _0x1c773a[0x0], _0x1c773a[0x0], 0x5 * _0x2d83cc), circle(_0x5ef75f, 0xc2 * _0x2d83cc, 0x12a * _0x2d83cc, 0x9 * _0x2d83cc), fill_path(_0x5ef75f, _0x1c773a[0x0], _0x1c773a[0x0], 0x5 * _0x2d83cc), _0x5ef75f['globalAlpha'] = 0x1, _0x5ef75f['translate'](-0xa * _0x2d83cc, 0xa * _0x2d83cc), _0x5ef75f['beginPath'](), _0x5ef75f['lineCap'] = 'round', _0x5ef75f['lineJoin'] = 'round', _0x5ef75f['moveTo'](178.5 * _0x2d83cc, 238.03125 * _0x2d83cc), _0x5ef75f['bezierCurveTo'](0xb1 * _0x2d83cc, 175.03125 * _0x2d83cc, 0xb1 * _0x2d83cc, 175.03125 * _0x2d83cc, 175.5 * _0x2d83cc, 112.03125 * _0x2d83cc), _0x5ef75f['bezierCurveTo'](184.5 * _0x2d83cc, 100.53125 * _0x2d83cc, 184.5 * _0x2d83cc, 100.53125 * _0x2d83cc, 193.5 * _0x2d83cc, 89.03125 * _0x2d83cc), _0x5ef75f['bezierCurveTo'](0xca * _0x2d83cc, 100.03125 * _0x2d83cc, 0xca * _0x2d83cc, 100.03125 * _0x2d83cc, 210.5 * _0x2d83cc, 111.03125 * _0x2d83cc), _0x5ef75f['bezierCurveTo'](209.5 * _0x2d83cc, 174.03125 * _0x2d83cc, 209.5 * _0x2d83cc, 174.03125 * _0x2d83cc, 208.5 * _0x2d83cc, 237.03125 * _0x2d83cc), _0x5ef75f['closePath'](), fill_path(_0x5ef75f, _0x1c773a[0x3], _0x1c773a[0x4], 0x5 * _0x2d83cc), _0x5ef75f['beginPath'](), _0x5ef75f['lineCap'] = 'round', _0x5ef75f['lineJoin'] = 'round', _0x5ef75f['moveTo'](155.5 * _0x2d83cc, 239.03125 * _0x2d83cc), _0x5ef75f['bezierCurveTo'](0xc2 * _0x2d83cc, 238.53125 * _0x2d83cc, 0xc2 * _0x2d83cc, 238.53125 * _0x2d83cc, 232.5 * _0x2d83cc, 238.03125 * _0x2d83cc), _0x5ef75f['bezierCurveTo'](232.5 * _0x2d83cc, 243.03125 * _0x2d83cc, 232.5 * _0x2d83cc, 243.03125 * _0x2d83cc, 232.5 * _0x2d83cc, 248.03125 * _0x2d83cc), _0x5ef75f['bezierCurveTo'](0xc2 * _0x2d83cc, 248.53125 * _0x2d83cc, 0xc2 * _0x2d83cc, 248.53125 * _0x2d83cc, 155.5 * _0x2d83cc, 249.03125 * _0x2d83cc), _0x5ef75f['closePath'](), fill_path(_0x5ef75f, _0x1c773a[0x1], _0x1c773a[0x2], 0x5 * _0x2d83cc), circle(_0x5ef75f, 160.5 * _0x2d83cc, 243.03125 * _0x2d83cc, 0x7 * _0x2d83cc), fill_path(_0x5ef75f, _0x1c773a[0x1], _0x1c773a[0x2], 0x5 * _0x2d83cc), circle(_0x5ef75f, 227.5 * _0x2d83cc, 242.03125 * _0x2d83cc, 0x7 * _0x2d83cc), fill_path(_0x5ef75f, _0x1c773a[0x1], _0x1c773a[0x2], 0x5 * _0x2d83cc), _0x5ef75f['beginPath'](), _0x5ef75f['lineCap'] = 'round', _0x5ef75f['lineJoin'] = 'round', _0x5ef75f['moveTo'](185.5 * _0x2d83cc, 253.03125 * _0x2d83cc), _0x5ef75f['bezierCurveTo'](193.5 * _0x2d83cc, 253.03125 * _0x2d83cc, 193.5 * _0x2d83cc, 253.03125 * _0x2d83cc, 201.5 * _0x2d83cc, 253.03125 * _0x2d83cc), _0x5ef75f['bezierCurveTo'](201.5 * _0x2d83cc, 276.03125 * _0x2d83cc, 201.5 * _0x2d83cc, 276.03125 * _0x2d83cc, 201.5 * _0x2d83cc, 299.03125 * _0x2d83cc), _0x5ef75f['bezierCurveTo'](194.5 * _0x2d83cc, 299.03125 * _0x2d83cc, 194.5 * _0x2d83cc, 299.03125 * _0x2d83cc, 187.5 * _0x2d83cc, 299.03125 * _0x2d83cc), _0x5ef75f['closePath'](), fill_path(_0x5ef75f, _0x1c773a[0x1], _0x1c773a[0x2], 0x7 * _0x2d83cc), circle(_0x5ef75f, 0xc2 * _0x2d83cc, 0x12a * _0x2d83cc, 0x9 * _0x2d83cc), fill_path(_0x5ef75f, _0x1c773a[0x1], _0x1c773a[0x2], 0x7 * _0x2d83cc), _0x26962e;
}

function create_stonesword(_0x5ed851, _0x47cc33, _0x5e663f) {
    var _0x515aba = document['createElement']('canvas'),
        _0xe82058 = _0x515aba['getContext']('2d');
    return _0x515aba['width'] = 0x122 * _0x5ed851, _0x515aba['height'] = 0x20d * _0x5ed851, _0xe82058['globalAlpha'] = _0x47cc33 ? 0.5 : 0x1, _0xe82058['translate'](0x14 * _0x5ed851, 0x14 * _0x5ed851), _0xe82058['beginPath'](), _0xe82058['lineCap'] = 'round', _0xe82058['lineJoin'] = 'round', _0xe82058['moveTo'](0x6f * _0x5ed851, 0x15f * _0x5ed851), _0xe82058['bezierCurveTo'](0x81 * _0x5ed851, 0xda * _0x5ed851, 0x81 * _0x5ed851, 0xda * _0x5ed851, 0x93 * _0x5ed851, 0x55 * _0x5ed851), _0xe82058['bezierCurveTo'](0xa7 * _0x5ed851, 65.5 * _0x5ed851, 0xa7 * _0x5ed851, 65.5 * _0x5ed851, 0xbb * _0x5ed851, 0x2e * _0x5ed851), _0xe82058['bezierCurveTo'](201.5 * _0x5ed851, 70.5 * _0x5ed851, 201.5 * _0x5ed851, 70.5 * _0x5ed851, 0xd8 * _0x5ed851, 0x5f * _0x5ed851), _0xe82058['bezierCurveTo'](194.5 * _0x5ed851, 227.5 * _0x5ed851, 194.5 * _0x5ed851, 227.5 * _0x5ed851, 0xad * _0x5ed851, 0x168 * _0x5ed851), _0xe82058['closePath'](), fill_path(_0xe82058, _0x5e663f[0x0]), _0xe82058['save'](), _0xe82058['translate'](0x83 * _0x5ed851, 425.5 * _0x5ed851), _0xe82058['rotate'](0.16), round_rect(_0xe82058, -0xe * _0x5ed851, -56.5 * _0x5ed851, 0x1c * _0x5ed851, 0x71 * _0x5ed851, 0x8 * _0x5ed851), _0xe82058['restore'](), fill_path(_0xe82058, _0x5e663f[0x0]), circle(_0xe82058, 0x7a * _0x5ed851, 0x1e0 * _0x5ed851, 18.439088914585774 * _0x5ed851), fill_path(_0xe82058, _0x5e663f[0x0]), _0xe82058['beginPath'](), _0xe82058['lineCap'] = 'round', _0xe82058['lineJoin'] = 'round', _0xe82058['moveTo'](0x4f * _0x5ed851, 0x173 * _0x5ed851), _0xe82058['bezierCurveTo'](0x83 * _0x5ed851, 0x175 * _0x5ed851, 0x91 * _0x5ed851, 0x17a * _0x5ed851, 0xc5 * _0x5ed851, 0x184 * _0x5ed851), _0xe82058['bezierCurveTo'](0xcd * _0x5ed851, 382.5 * _0x5ed851, 0xcd * _0x5ed851, 382.5 * _0x5ed851, 0xd5 * _0x5ed851, 0x179 * _0x5ed851), _0xe82058['bezierCurveTo'](0xa7 * _0x5ed851, 0x160 * _0x5ed851, 0x75 * _0x5ed851, 0x159 * _0x5ed851, 0x45 * _0x5ed851, 0x163 * _0x5ed851), _0xe82058['closePath'](), fill_path(_0xe82058, _0x5e663f[0x0]), _0xe82058['globalAlpha'] = 0x1, _0xe82058['translate'](-0x14 * _0x5ed851, -0x14 * _0x5ed851), _0xe82058['beginPath'](), _0xe82058['lineCap'] = 'round', _0xe82058['lineJoin'] = 'round', _0xe82058['moveTo'](0x6f * _0x5ed851, 0x15f * _0x5ed851), _0xe82058['bezierCurveTo'](0x81 * _0x5ed851, 0xda * _0x5ed851, 0x81 * _0x5ed851, 0xda * _0x5ed851, 0x93 * _0x5ed851, 0x55 * _0x5ed851), _0xe82058['bezierCurveTo'](0xa7 * _0x5ed851, 65.5 * _0x5ed851, 0xa7 * _0x5ed851, 65.5 * _0x5ed851, 0xbb * _0x5ed851, 0x2e * _0x5ed851), _0xe82058['bezierCurveTo'](201.5 * _0x5ed851, 70.5 * _0x5ed851, 201.5 * _0x5ed851, 70.5 * _0x5ed851, 0xd8 * _0x5ed851, 0x5f * _0x5ed851), _0xe82058['bezierCurveTo'](194.5 * _0x5ed851, 227.5 * _0x5ed851, 194.5 * _0x5ed851, 227.5 * _0x5ed851, 0xad * _0x5ed851, 0x168 * _0x5ed851), _0xe82058['closePath'](), fill_path(_0xe82058, _0x5e663f[0x1], _0x5e663f[0x2], 12.5 * _0x5ed851), _0xe82058['save'](), _0xe82058['translate'](0x83 * _0x5ed851, 425.5 * _0x5ed851), _0xe82058['rotate'](0.16), round_rect(_0xe82058, -0xe * _0x5ed851, -56.5 * _0x5ed851, 0x1c * _0x5ed851, 0x71 * _0x5ed851, 0x8 * _0x5ed851), _0xe82058['restore'](), fill_path(_0xe82058, _0x5e663f[0x4], _0x5e663f[0x5], 12.5 * _0x5ed851), circle(_0xe82058, 0x7a * _0x5ed851, 0x1e0 * _0x5ed851, 18.439088914585774 * _0x5ed851), fill_path(_0xe82058, _0x5e663f[0x4], _0x5e663f[0x5], 12.5 * _0x5ed851), _0xe82058['beginPath'](), _0xe82058['lineCap'] = 'round', _0xe82058['lineJoin'] = 'round', _0xe82058['moveTo'](0x4f * _0x5ed851, 0x173 * _0x5ed851), _0xe82058['bezierCurveTo'](0x83 * _0x5ed851, 0x175 * _0x5ed851, 0x91 * _0x5ed851, 0x17a * _0x5ed851, 0xc5 * _0x5ed851, 0x184 * _0x5ed851), _0xe82058['bezierCurveTo'](0xcd * _0x5ed851, 382.5 * _0x5ed851, 0xcd * _0x5ed851, 382.5 * _0x5ed851, 0xd5 * _0x5ed851, 0x179 * _0x5ed851), _0xe82058['bezierCurveTo'](0xa7 * _0x5ed851, 0x160 * _0x5ed851, 0x75 * _0x5ed851, 0x159 * _0x5ed851, 0x45 * _0x5ed851, 0x163 * _0x5ed851), _0xe82058['closePath'](), fill_path(_0xe82058, _0x5e663f[0x4], _0x5e663f[0x5], 12.5 * _0x5ed851), _0xe82058['beginPath'](), _0xe82058['lineCap'] = 'round', _0xe82058['lineJoin'] = 'round', _0xe82058['moveTo'](0x80 * _0x5ed851, 0x159 * _0x5ed851), _0xe82058['bezierCurveTo'](0x8e * _0x5ed851, 0x159 * _0x5ed851, 0x93 * _0x5ed851, 0x15a * _0x5ed851, 0x9e * _0x5ed851, 0x15d * _0x5ed851), _0xe82058['bezierCurveTo'](177.5 * _0x5ed851, 224.5 * _0x5ed851, 177.5 * _0x5ed851, 224.5 * _0x5ed851, 0xc5 * _0x5ed851, 0x64 * _0x5ed851), _0xe82058['bezierCurveTo'](190.5 * _0x5ed851, 84.5 * _0x5ed851, 190.5 * _0x5ed851, 84.5 * _0x5ed851, 0xb8 * _0x5ed851, 0x45 * _0x5ed851), _0xe82058['bezierCurveTo'](173.5 * _0x5ed851, 0x52 * _0x5ed851, 173.5 * _0x5ed851, 0x52 * _0x5ed851, 0xa3 * _0x5ed851, 0x5f * _0x5ed851), _0xe82058['closePath'](), fill_path(_0xe82058, _0x5e663f[0x3]), _0x515aba;
}

function create_crab(_0x407192, _0x1b0d51, _0xf2ee05, _0x442435) {
    var _0x4ead46 = document['createElement']('canvas'),
        _0x28e24d = _0x4ead46['getContext']('2d');
    return _0x4ead46['width'] = 0x11b * _0x407192, _0x4ead46['height'] = 0xe0 * _0x407192, _0x28e24d['translate'](0x0, 0xf * _0x407192), _0x28e24d['globalAlpha'] = 0.5, _0x28e24d['beginPath'](), _0x28e24d['lineCap'] = 'round', _0x28e24d['lineJoin'] = 'round', _0x28e24d['moveTo'](0x5d * _0x407192, 0x37 * _0x407192), _0x28e24d['bezierCurveTo'](0x7f * _0x407192, 0x1b * _0x407192, 0xc3 * _0x407192, 0x2a * _0x407192, 0xd5 * _0x407192, 0x4e * _0x407192), _0x28e24d['bezierCurveTo'](0xfe * _0x407192, 0x86 * _0x407192, 0xe2 * _0x407192, 0xc6 * _0x407192, 0x99 * _0x407192, 0xc5 * _0x407192), _0x28e24d['bezierCurveTo'](0x3b * _0x407192, 0xcc * _0x407192, 0x38 * _0x407192, 0x9e * _0x407192, 0x33 * _0x407192, 0x73 * _0x407192), _0x28e24d['bezierCurveTo'](0x32 * _0x407192, 0x5d * _0x407192, 0x51 * _0x407192, 0x3e * _0x407192, 0x5a * _0x407192, 0x39 * _0x407192), _0x28e24d['closePath'](), fill_path(_0x28e24d, _0xf2ee05[0x0]), _0x28e24d['beginPath'](), _0x28e24d['lineCap'] = 'round', _0x28e24d['lineJoin'] = 'round', _0x28e24d['moveTo'](0x64 * _0x407192, 0x21 * _0x407192), _0x28e24d['bezierCurveTo'](0x55 * _0x407192, 0x3e * _0x407192, 0x66 * _0x407192, 0x42 * _0x407192, 0x6e * _0x407192, 0x53 * _0x407192), _0x28e24d['closePath'](), fill_path(_0x28e24d, _0xf2ee05[0x0]), _0x28e24d['beginPath'](), _0x28e24d['lineCap'] = 'round', _0x28e24d['lineJoin'] = 'round', _0x28e24d['moveTo'](0xb5 * _0x407192, 0x20 * _0x407192), _0x28e24d['bezierCurveTo'](0xc4 * _0x407192, 0x3e * _0x407192, 0xb5 * _0x407192, 0x44 * _0x407192, 0xb2 * _0x407192, 0x45 * _0x407192), fill_path(_0x28e24d, _0xf2ee05[0x0]), _0x28e24d['beginPath'](), _0x28e24d['lineCap'] = 'round', _0x28e24d['lineJoin'] = 'round', _0x28e24d['moveTo'](0xe1 * _0x407192, 0x34 * _0x407192), _0x28e24d['bezierCurveTo'](0xe4 * _0x407192, 0x4e * _0x407192, 0xcf * _0x407192, 0x4d * _0x407192, 0xc0 * _0x407192, 0x58 * _0x407192), fill_path(_0x28e24d, _0xf2ee05[0x0]), _0x28e24d['beginPath'](), _0x28e24d['lineCap'] = 'round', _0x28e24d['lineJoin'] = 'round', _0x28e24d['moveTo'](0x22 * _0x407192, 0x86 * _0x407192), _0x28e24d['bezierCurveTo'](0x2e * _0x407192, 0x6f * _0x407192, 0x39 * _0x407192, 0x6f * _0x407192, 0x4f * _0x407192, 0x6d * _0x407192), fill_path(_0x28e24d, _0xf2ee05[0x0]), _0x28e24d['beginPath'](), _0x28e24d['lineCap'] = 'round', _0x28e24d['lineJoin'] = 'round', _0x28e24d['moveTo'](0xf9 * _0x407192, 0x87 * _0x407192), _0x28e24d['bezierCurveTo'](0xe9 * _0x407192, 0x6b * _0x407192, 0xd4 * _0x407192, 0x70 * _0x407192, 0xca * _0x407192, 0x73 * _0x407192), fill_path(_0x28e24d, _0xf2ee05[0x0]), _0x28e24d['beginPath'](), _0x28e24d['lineCap'] = 'round', _0x28e24d['lineJoin'] = 'round', _0x28e24d['moveTo'](0x38 * _0x407192, 0x32 * _0x407192), _0x28e24d['bezierCurveTo'](0x38 * _0x407192, 0x52 * _0x407192, 0x49 * _0x407192, 0x52 * _0x407192, 0x5d * _0x407192, 0x59 * _0x407192), fill_path(_0x28e24d, _0xf2ee05[0x0]), _0x28e24d['translate'](0x0, -0xf * _0x407192), _0x28e24d['globalAlpha'] = 0x1, _0x28e24d['beginPath'](), _0x28e24d['lineCap'] = 'round', _0x28e24d['lineJoin'] = 'round', _0x28e24d['moveTo'](0x64 * _0x407192, 0x21 * _0x407192), _0x28e24d['bezierCurveTo'](0x55 * _0x407192, 0x3e * _0x407192, 0x66 * _0x407192, 0x42 * _0x407192, 0x6e * _0x407192, 0x53 * _0x407192), fill_path(_0x28e24d, undefined, _0xf2ee05[0x2], 0x28 * _0x407192), _0x28e24d['beginPath'](), _0x28e24d['lineCap'] = 'round', _0x28e24d['lineJoin'] = 'round', _0x28e24d['moveTo'](0xb5 * _0x407192, 0x20 * _0x407192), _0x28e24d['bezierCurveTo'](0xc4 * _0x407192, 0x3e * _0x407192, 0xb5 * _0x407192, 0x44 * _0x407192, 0xb2 * _0x407192, 0x45 * _0x407192), fill_path(_0x28e24d, undefined, _0xf2ee05[0x2], 0x28 * _0x407192), _0x28e24d['beginPath'](), _0x28e24d['lineCap'] = 'round', _0x28e24d['lineJoin'] = 'round', _0x28e24d['moveTo'](0xe1 * _0x407192, 0x34 * _0x407192), _0x28e24d['bezierCurveTo'](0xe4 * _0x407192, 0x4e * _0x407192, 0xcf * _0x407192, 0x4d * _0x407192, 0xc0 * _0x407192, 0x58 * _0x407192), fill_path(_0x28e24d, undefined, _0xf2ee05[0x2], 0x28 * _0x407192), _0x28e24d['beginPath'](), _0x28e24d['lineCap'] = 'round', _0x28e24d['lineJoin'] = 'round', _0x28e24d['moveTo'](0x22 * _0x407192, 0x86 * _0x407192), _0x28e24d['bezierCurveTo'](0x2e * _0x407192, 0x6f * _0x407192, 0x39 * _0x407192, 0x6f * _0x407192, 0x4f * _0x407192, 0x6d * _0x407192), fill_path(_0x28e24d, undefined, _0xf2ee05[0x2], 0x28 * _0x407192), _0x28e24d['beginPath'](), _0x28e24d['lineCap'] = 'round', _0x28e24d['lineJoin'] = 'round', _0x28e24d['moveTo'](0xf9 * _0x407192, 0x87 * _0x407192), _0x28e24d['bezierCurveTo'](0xe9 * _0x407192, 0x6b * _0x407192, 0xd4 * _0x407192, 0x70 * _0x407192, 0xca * _0x407192, 0x73 * _0x407192), fill_path(_0x28e24d, undefined, _0xf2ee05[0x2], 0x28 * _0x407192), _0x28e24d['beginPath'](), _0x28e24d['lineCap'] = 'round', _0x28e24d['lineJoin'] = 'round', _0x28e24d['moveTo'](0x38 * _0x407192, 0x32 * _0x407192), _0x28e24d['bezierCurveTo'](0x38 * _0x407192, 0x52 * _0x407192, 0x49 * _0x407192, 0x52 * _0x407192, 0x5d * _0x407192, 0x59 * _0x407192), fill_path(_0x28e24d, undefined, _0xf2ee05[0x2], 0x28 * _0x407192), _0x28e24d['beginPath'](), _0x28e24d['lineCap'] = 'round', _0x28e24d['lineJoin'] = 'round', _0x28e24d['moveTo'](0x5d * _0x407192, 0x37 * _0x407192), _0x28e24d['bezierCurveTo'](0x7f * _0x407192, 0x1b * _0x407192, 0xc3 * _0x407192, 0x2a * _0x407192, 0xd5 * _0x407192, 0x4e * _0x407192), _0x28e24d['bezierCurveTo'](0xfe * _0x407192, 0x86 * _0x407192, 0xe2 * _0x407192, 0xc6 * _0x407192, 0x99 * _0x407192, 0xc5 * _0x407192), _0x28e24d['bezierCurveTo'](0x3b * _0x407192, 0xcc * _0x407192, 0x38 * _0x407192, 0x9e * _0x407192, 0x33 * _0x407192, 0x73 * _0x407192), _0x28e24d['bezierCurveTo'](0x32 * _0x407192, 0x5d * _0x407192, 0x51 * _0x407192, 0x3e * _0x407192, 0x5a * _0x407192, 0x39 * _0x407192), _0x28e24d['closePath'](), fill_path(_0x28e24d, _0xf2ee05[0x1], _0xf2ee05[0x2], 0xa * _0x407192), _0x28e24d['beginPath'](), _0x28e24d['lineCap'] = 'round', _0x28e24d['lineJoin'] = 'round', _0x28e24d['moveTo'](0x64 * _0x407192, 0x21 * _0x407192), _0x28e24d['bezierCurveTo'](0x55 * _0x407192, 0x3e * _0x407192, 0x66 * _0x407192, 0x42 * _0x407192, 0x6e * _0x407192, 0x53 * _0x407192), fill_path(_0x28e24d, undefined, _0xf2ee05[0x1], 0x14 * _0x407192), _0x28e24d['beginPath'](), _0x28e24d['lineCap'] = 'round', _0x28e24d['lineJoin'] = 'round', _0x28e24d['moveTo'](0xb5 * _0x407192, 0x20 * _0x407192), _0x28e24d['bezierCurveTo'](0xc4 * _0x407192, 0x3e * _0x407192, 0xb5 * _0x407192, 0x44 * _0x407192, 0xb2 * _0x407192, 0x45 * _0x407192), fill_path(_0x28e24d, undefined, _0xf2ee05[0x1], 0x14 * _0x407192), _0x28e24d['beginPath'](), _0x28e24d['lineCap'] = 'round', _0x28e24d['lineJoin'] = 'round', _0x28e24d['moveTo'](0xe1 * _0x407192, 0x34 * _0x407192), _0x28e24d['bezierCurveTo'](0xe4 * _0x407192, 0x4e * _0x407192, 0xcf * _0x407192, 0x4d * _0x407192, 0xc0 * _0x407192, 0x58 * _0x407192), fill_path(_0x28e24d, undefined, _0xf2ee05[0x1], 0x14 * _0x407192), _0x28e24d['beginPath'](), _0x28e24d['lineCap'] = 'round', _0x28e24d['lineJoin'] = 'round', _0x28e24d['moveTo'](0x22 * _0x407192, 0x86 * _0x407192), _0x28e24d['bezierCurveTo'](0x2e * _0x407192, 0x6f * _0x407192, 0x39 * _0x407192, 0x6f * _0x407192, 0x4f * _0x407192, 0x6d * _0x407192), fill_path(_0x28e24d, undefined, _0xf2ee05[0x1], 0x14 * _0x407192), _0x28e24d['beginPath'](), _0x28e24d['lineCap'] = 'round', _0x28e24d['lineJoin'] = 'round', _0x28e24d['moveTo'](0xf9 * _0x407192, 0x87 * _0x407192), _0x28e24d['bezierCurveTo'](0xe9 * _0x407192, 0x6b * _0x407192, 0xd4 * _0x407192, 0x70 * _0x407192, 0xca * _0x407192, 0x73 * _0x407192), fill_path(_0x28e24d, undefined, _0xf2ee05[0x1], 0x14 * _0x407192), _0x28e24d['beginPath'](), _0x28e24d['lineCap'] = 'round', _0x28e24d['lineJoin'] = 'round', _0x28e24d['moveTo'](0x38 * _0x407192, 0x32 * _0x407192), _0x28e24d['bezierCurveTo'](0x38 * _0x407192, 0x52 * _0x407192, 0x49 * _0x407192, 0x52 * _0x407192, 0x5d * _0x407192, 0x59 * _0x407192), fill_path(_0x28e24d, undefined, _0xf2ee05[0x1], 0x14 * _0x407192), circle(_0x28e24d, 0x65 * _0x407192, 0x9b * _0x407192, 20.591260281974 * _0x407192), fill_path(_0x28e24d, _0xf2ee05[0x3]), circle(_0x28e24d, 0xb4 * _0x407192, 0x9b * _0x407192, 20.591260281974 * _0x407192), fill_path(_0x28e24d, _0xf2ee05[0x3]), circle(_0x28e24d, 0x5f * _0x407192, 0x94 * _0x407192, 7.211102550927978 * _0x407192), fill_path(_0x28e24d, _0xf2ee05[0x4]), circle(_0x28e24d, 0xad * _0x407192, 0x94 * _0x407192, 7.211102550927978 * _0x407192), fill_path(_0x28e24d, _0xf2ee05[0x4]), _0x442435 === 0x1 && (_0x28e24d['beginPath'](), _0x28e24d['lineCap'] = 'round', _0x28e24d['lineJoin'] = 'round', _0x28e24d['moveTo'](0xbf * _0x407192, 0x6b * _0x407192), _0x28e24d['bezierCurveTo'](0xb4 * _0x407192, 0x68 * _0x407192, 0xaf * _0x407192, 0x65 * _0x407192, 0xb4 * _0x407192, 0x5f * _0x407192), _0x28e24d['bezierCurveTo'](0xb4 * _0x407192, 0x5f * _0x407192, 0xb5 * _0x407192, 0x63 * _0x407192, 0xbc * _0x407192, 0x67 * _0x407192), _0x28e24d['bezierCurveTo'](0xbf * _0x407192, 0x65 * _0x407192, 0xbf * _0x407192, 0x5f * _0x407192, 0xbe * _0x407192, 0x5b * _0x407192), _0x28e24d['bezierCurveTo'](0xbe * _0x407192, 0x5b * _0x407192, 0xc4 * _0x407192, 0x59 * _0x407192, 0xc3 * _0x407192, 0x63 * _0x407192), _0x28e24d['closePath'](), fill_path(_0x28e24d, _0xf2ee05[0x2]), _0x28e24d['beginPath'](), _0x28e24d['lineCap'] = 'round', _0x28e24d['lineJoin'] = 'round', _0x28e24d['moveTo'](0xce * _0x407192, 0x62 * _0x407192), _0x28e24d['bezierCurveTo'](0xcb * _0x407192, 0x5f * _0x407192, 0xc8 * _0x407192, 0x5d * _0x407192, 0xc6 * _0x407192, 0x65 * _0x407192), _0x28e24d['bezierCurveTo'](0xc2 * _0x407192, 0x6d * _0x407192, 0xc1 * _0x407192, 0x6d * _0x407192, 0xc4 * _0x407192, 0x6e * _0x407192), _0x28e24d['bezierCurveTo'](0xce * _0x407192, 0x73 * _0x407192, 0xd1 * _0x407192, 0x72 * _0x407192, 0xd3 * _0x407192, 0x6f * _0x407192), _0x28e24d['bezierCurveTo'](0xd3 * _0x407192, 0x6a * _0x407192, 0xd0 * _0x407192, 0x6c * _0x407192, 0xcb * _0x407192, 0x6c * _0x407192), _0x28e24d['bezierCurveTo'](0xc1 * _0x407192, 0x6b * _0x407192, 0xcc * _0x407192, 0x65 * _0x407192, 0xce * _0x407192, 0x63 * _0x407192), _0x28e24d['closePath'](), fill_path(_0x28e24d, _0xf2ee05[0x2]), _0x28e24d['beginPath'](), _0x28e24d['lineCap'] = 'round', _0x28e24d['lineJoin'] = 'round', _0x28e24d['moveTo'](0xac * _0x407192, 0x6f * _0x407192), _0x28e24d['bezierCurveTo'](0xac * _0x407192, 0x6a * _0x407192, 0xae * _0x407192, 0x69 * _0x407192, 0xb9 * _0x407192, 0x6d * _0x407192), _0x28e24d['bezierCurveTo'](0xbe * _0x407192, 0x6d * _0x407192, 0xbd * _0x407192, 0x72 * _0x407192, 0xb9 * _0x407192, 0x78 * _0x407192), _0x28e24d['bezierCurveTo'](0xb5 * _0x407192, 0x7d * _0x407192, 0xb4 * _0x407192, 0x7e * _0x407192, 0xb0 * _0x407192, 0x7a * _0x407192), _0x28e24d['bezierCurveTo'](0xb6 * _0x407192, 0x77 * _0x407192, 0xbb * _0x407192, 0x6e * _0x407192, 0xb6 * _0x407192, 0x70 * _0x407192), _0x28e24d['closePath'](), fill_path(_0x28e24d, _0xf2ee05[0x2]), _0x28e24d['beginPath'](), _0x28e24d['lineCap'] = 'round', _0x28e24d['lineJoin'] = 'round', _0x28e24d['moveTo'](0xca * _0x407192, 0x7d * _0x407192), _0x28e24d['bezierCurveTo'](0xc5 * _0x407192, 0x75 * _0x407192, 0xc1 * _0x407192, 0x74 * _0x407192, 0xc1 * _0x407192, 0x78 * _0x407192), _0x28e24d['bezierCurveTo'](192.5 * _0x407192, 124.5 * _0x407192, 192.5 * _0x407192, 124.5 * _0x407192, 0xc0 * _0x407192, 0x81 * _0x407192), _0x28e24d['bezierCurveTo'](0xbc * _0x407192, 0x81 * _0x407192, 0xbb * _0x407192, 0x7c * _0x407192, 0xbd * _0x407192, 0x78 * _0x407192), _0x28e24d['bezierCurveTo'](0xbf * _0x407192, 0x6e * _0x407192, 0xc0 * _0x407192, 0x6e * _0x407192, 0xc8 * _0x407192, 0x74 * _0x407192), _0x28e24d['bezierCurveTo'](0xd0 * _0x407192, 0x78 * _0x407192, 0xcf * _0x407192, 0x7b * _0x407192, 0xca * _0x407192, 0x7d * _0x407192), _0x28e24d['closePath'](), fill_path(_0x28e24d, _0xf2ee05[0x2])), _0x4ead46;
}

function create_hurt_crab(_0x5a21f6, _0x22c01f) {
    var _0x370739 = document['createElement']('canvas'),
        _0x5cc096 = _0x370739['getContext']('2d');
    return _0x370739['width'] = 0x11b * _0x5a21f6, _0x370739['height'] = 0xe0 * _0x5a21f6, _0x5cc096['beginPath'](), _0x5cc096['lineCap'] = 'round', _0x5cc096['lineJoin'] = 'round', _0x5cc096['moveTo'](0x64 * _0x5a21f6, 0x21 * _0x5a21f6), _0x5cc096['bezierCurveTo'](0x55 * _0x5a21f6, 0x3e * _0x5a21f6, 0x66 * _0x5a21f6, 0x42 * _0x5a21f6, 0x6e * _0x5a21f6, 0x53 * _0x5a21f6), fill_path(_0x5cc096, undefined, _0x22c01f[0x0], 0x28 * _0x5a21f6), _0x5cc096['beginPath'](), _0x5cc096['lineCap'] = 'round', _0x5cc096['lineJoin'] = 'round', _0x5cc096['moveTo'](0xb5 * _0x5a21f6, 0x20 * _0x5a21f6), _0x5cc096['bezierCurveTo'](0xc4 * _0x5a21f6, 0x3e * _0x5a21f6, 0xb5 * _0x5a21f6, 0x44 * _0x5a21f6, 0xb2 * _0x5a21f6, 0x45 * _0x5a21f6), fill_path(_0x5cc096, undefined, _0x22c01f[0x0], 0x28 * _0x5a21f6), _0x5cc096['beginPath'](), _0x5cc096['lineCap'] = 'round', _0x5cc096['lineJoin'] = 'round', _0x5cc096['moveTo'](0xe1 * _0x5a21f6, 0x34 * _0x5a21f6), _0x5cc096['bezierCurveTo'](0xe4 * _0x5a21f6, 0x4e * _0x5a21f6, 0xcf * _0x5a21f6, 0x4d * _0x5a21f6, 0xc0 * _0x5a21f6, 0x58 * _0x5a21f6), fill_path(_0x5cc096, undefined, _0x22c01f[0x0], 0x28 * _0x5a21f6), _0x5cc096['beginPath'](), _0x5cc096['lineCap'] = 'round', _0x5cc096['lineJoin'] = 'round', _0x5cc096['moveTo'](0x22 * _0x5a21f6, 0x86 * _0x5a21f6), _0x5cc096['bezierCurveTo'](0x2e * _0x5a21f6, 0x6f * _0x5a21f6, 0x39 * _0x5a21f6, 0x6f * _0x5a21f6, 0x4f * _0x5a21f6, 0x6d * _0x5a21f6), fill_path(_0x5cc096, undefined, _0x22c01f[0x0], 0x28 * _0x5a21f6), _0x5cc096['beginPath'](), _0x5cc096['lineCap'] = 'round', _0x5cc096['lineJoin'] = 'round', _0x5cc096['moveTo'](0xf9 * _0x5a21f6, 0x87 * _0x5a21f6), _0x5cc096['bezierCurveTo'](0xe9 * _0x5a21f6, 0x6b * _0x5a21f6, 0xd4 * _0x5a21f6, 0x70 * _0x5a21f6, 0xca * _0x5a21f6, 0x73 * _0x5a21f6), fill_path(_0x5cc096, undefined, _0x22c01f[0x0], 0x28 * _0x5a21f6), _0x5cc096['beginPath'](), _0x5cc096['lineCap'] = 'round', _0x5cc096['lineJoin'] = 'round', _0x5cc096['moveTo'](0x38 * _0x5a21f6, 0x32 * _0x5a21f6), _0x5cc096['bezierCurveTo'](0x38 * _0x5a21f6, 0x52 * _0x5a21f6, 0x49 * _0x5a21f6, 0x52 * _0x5a21f6, 0x5d * _0x5a21f6, 0x59 * _0x5a21f6), fill_path(_0x5cc096, undefined, _0x22c01f[0x0], 0x28 * _0x5a21f6), _0x5cc096['beginPath'](), _0x5cc096['lineCap'] = 'round', _0x5cc096['lineJoin'] = 'round', _0x5cc096['moveTo'](0x5d * _0x5a21f6, 0x37 * _0x5a21f6), _0x5cc096['bezierCurveTo'](0x7c * _0x5a21f6, 0x1d * _0x5a21f6, 0xb3 * _0x5a21f6, 0x2c * _0x5a21f6, 0xbc * _0x5a21f6, 0x34 * _0x5a21f6), _0x5cc096['bezierCurveTo'](0xcf * _0x5a21f6, 0x40 * _0x5a21f6, 0xe2 * _0x5a21f6, 0x5e * _0x5a21f6, 0xe7 * _0x5a21f6, 0x76 * _0x5a21f6), _0x5cc096['bezierCurveTo'](0xec * _0x5a21f6, 0x91 * _0x5a21f6, 0xde * _0x5a21f6, 0xb8 * _0x5a21f6, 0xc1 * _0x5a21f6, 0xc0 * _0x5a21f6), _0x5cc096['bezierCurveTo'](0x93 * _0x5a21f6, 0xc9 * _0x5a21f6, 0x74 * _0x5a21f6, 0xc8 * _0x5a21f6, 0x5d * _0x5a21f6, 0xc1 * _0x5a21f6), _0x5cc096['bezierCurveTo'](0x3d * _0x5a21f6, 0xb4 * _0x5a21f6, 0x30 * _0x5a21f6, 0x93 * _0x5a21f6, 0x32 * _0x5a21f6, 0x7b * _0x5a21f6), _0x5cc096['bezierCurveTo'](0x32 * _0x5a21f6, 0x5d * _0x5a21f6, 0x4c * _0x5a21f6, 0x42 * _0x5a21f6, 0x5c * _0x5a21f6, 0x38 * _0x5a21f6), _0x5cc096['closePath'](), fill_path(_0x5cc096, _0x22c01f[0x0]), _0x370739;
}

function create_crab_claw_left(_0x15df80, _0x327781, _0x22aa16) {
    var _0x2820d2 = document['createElement']('canvas'),
        _0x51bafb = _0x2820d2['getContext']('2d');
    return _0x2820d2['width'] = 0x83 * _0x15df80, _0x2820d2['height'] = 0x79 * _0x15df80, _0x51bafb['translate'](0x0, 0x14 * _0x15df80), _0x51bafb['beginPath'](), _0x51bafb['lineCap'] = 'round', _0x51bafb['lineJoin'] = 'round', _0x51bafb['moveTo'](0x6e * _0x15df80, 0x3b * _0x15df80), _0x51bafb['bezierCurveTo'](0x5d * _0x15df80, 61.5 * _0x15df80, 0x5d * _0x15df80, 61.5 * _0x15df80, 0x4c * _0x15df80, 0x40 * _0x15df80), _0x51bafb['bezierCurveTo'](84.5 * _0x15df80, 78.5 * _0x15df80, 84.5 * _0x15df80, 78.5 * _0x15df80, 0x5d * _0x15df80, 0x5d * _0x15df80), _0x51bafb['bezierCurveTo'](0x46 * _0x15df80, 0x6f * _0x15df80, 0x2b * _0x15df80, 0x67 * _0x15df80, 0x1e * _0x15df80, 0x52 * _0x15df80), _0x51bafb['bezierCurveTo'](0x11 * _0x15df80, 0x3d * _0x15df80, 0x19 * _0x15df80, 0x1e * _0x15df80, 0x33 * _0x15df80, 0x15 * _0x15df80), _0x51bafb['bezierCurveTo'](0x42 * _0x15df80, 0xf * _0x15df80, 0x53 * _0x15df80, 0x12 * _0x15df80, 0x60 * _0x15df80, 0x1d * _0x15df80), _0x51bafb['bezierCurveTo'](0x68 * _0x15df80, 0x23 * _0x15df80, 0x6d * _0x15df80, 0x2f * _0x15df80, 0x6e * _0x15df80, 0x3a * _0x15df80), _0x51bafb['closePath'](), fill_path(_0x51bafb, _0x22aa16[0x0]), _0x51bafb['globalAlpha'] = 0x1, _0x51bafb['translate'](0x0, -0x14 * _0x15df80), _0x51bafb['beginPath'](), _0x51bafb['lineCap'] = 'round', _0x51bafb['lineJoin'] = 'round', _0x51bafb['moveTo'](0x6e * _0x15df80, 0x3b * _0x15df80), _0x51bafb['bezierCurveTo'](0x5d * _0x15df80, 61.5 * _0x15df80, 0x5d * _0x15df80, 61.5 * _0x15df80, 0x4c * _0x15df80, 0x40 * _0x15df80), _0x51bafb['bezierCurveTo'](84.5 * _0x15df80, 78.5 * _0x15df80, 84.5 * _0x15df80, 78.5 * _0x15df80, 0x5d * _0x15df80, 0x5d * _0x15df80), _0x51bafb['bezierCurveTo'](0x46 * _0x15df80, 0x6f * _0x15df80, 0x2b * _0x15df80, 0x67 * _0x15df80, 0x1e * _0x15df80, 0x52 * _0x15df80), _0x51bafb['bezierCurveTo'](0x11 * _0x15df80, 0x3d * _0x15df80, 0x19 * _0x15df80, 0x1e * _0x15df80, 0x33 * _0x15df80, 0x15 * _0x15df80), _0x51bafb['bezierCurveTo'](0x42 * _0x15df80, 0xf * _0x15df80, 0x53 * _0x15df80, 0x12 * _0x15df80, 0x60 * _0x15df80, 0x1d * _0x15df80), _0x51bafb['bezierCurveTo'](0x68 * _0x15df80, 0x23 * _0x15df80, 0x6d * _0x15df80, 0x2f * _0x15df80, 0x6e * _0x15df80, 0x3a * _0x15df80), _0x51bafb['closePath'](), fill_path(_0x51bafb, _0x22aa16[0x1], _0x22aa16[0x2], 0xa * _0x15df80), _0x2820d2;
}

function create_crab_claw_right(_0x211fe2, _0x187757, _0x1293ed) {
    var _0x59a0d2 = document['createElement']('canvas'),
        _0x30749b = _0x59a0d2['getContext']('2d');
    return _0x59a0d2['width'] = 0x68 * _0x211fe2, _0x59a0d2['height'] = 0x70 * _0x211fe2, _0x30749b['translate'](0x0, 0xf * _0x211fe2), _0x30749b['beginPath'](), _0x30749b['lineCap'] = 'round', _0x30749b['lineJoin'] = 'round', _0x30749b['moveTo'](0x10 * _0x211fe2, 0x2c * _0x211fe2), _0x30749b['bezierCurveTo'](30.5 * _0x211fe2, 0x30 * _0x211fe2, 30.5 * _0x211fe2, 0x30 * _0x211fe2, 0x2d * _0x211fe2, 0x34 * _0x211fe2), _0x30749b['bezierCurveTo'](36.5 * _0x211fe2, 0x3f * _0x211fe2, 36.5 * _0x211fe2, 0x3f * _0x211fe2, 0x1c * _0x211fe2, 0x4a * _0x211fe2), _0x30749b['bezierCurveTo'](0x20 * _0x211fe2, 0x56 * _0x211fe2, 0x3d * _0x211fe2, 0x5c * _0x211fe2, 0x4e * _0x211fe2, 0x4c * _0x211fe2), _0x30749b['bezierCurveTo'](0x5d * _0x211fe2, 0x3e * _0x211fe2, 0x5c * _0x211fe2, 0x28 * _0x211fe2, 0x50 * _0x211fe2, 0x1a * _0x211fe2), _0x30749b['bezierCurveTo'](0x41 * _0x211fe2, 0xb * _0x211fe2, 0x2a * _0x211fe2, 0x10 * _0x211fe2, 0x22 * _0x211fe2, 0x15 * _0x211fe2), _0x30749b['bezierCurveTo'](0x16 * _0x211fe2, 0x1b * _0x211fe2, 0x10 * _0x211fe2, 0x27 * _0x211fe2, 0x10 * _0x211fe2, 0x2c * _0x211fe2), _0x30749b['closePath'](), fill_path(_0x30749b, _0x1293ed[0x0]), _0x30749b['globalAlpha'] = 0x1, _0x30749b['translate'](0x0, -0xf * _0x211fe2), _0x30749b['beginPath'](), _0x30749b['lineCap'] = 'round', _0x30749b['lineJoin'] = 'round', _0x30749b['moveTo'](0x10 * _0x211fe2, 0x2c * _0x211fe2), _0x30749b['bezierCurveTo'](30.5 * _0x211fe2, 0x30 * _0x211fe2, 30.5 * _0x211fe2, 0x30 * _0x211fe2, 0x2d * _0x211fe2, 0x34 * _0x211fe2), _0x30749b['bezierCurveTo'](36.5 * _0x211fe2, 0x3f * _0x211fe2, 36.5 * _0x211fe2, 0x3f * _0x211fe2, 0x1c * _0x211fe2, 0x4a * _0x211fe2), _0x30749b['bezierCurveTo'](0x20 * _0x211fe2, 0x56 * _0x211fe2, 0x3d * _0x211fe2, 0x5c * _0x211fe2, 0x4e * _0x211fe2, 0x4c * _0x211fe2), _0x30749b['bezierCurveTo'](0x5d * _0x211fe2, 0x3e * _0x211fe2, 0x5c * _0x211fe2, 0x28 * _0x211fe2, 0x50 * _0x211fe2, 0x1a * _0x211fe2), _0x30749b['bezierCurveTo'](0x41 * _0x211fe2, 0xb * _0x211fe2, 0x2a * _0x211fe2, 0x10 * _0x211fe2, 0x22 * _0x211fe2, 0x15 * _0x211fe2), _0x30749b['bezierCurveTo'](0x16 * _0x211fe2, 0x1b * _0x211fe2, 0x10 * _0x211fe2, 0x27 * _0x211fe2, 0x10 * _0x211fe2, 0x2c * _0x211fe2), _0x30749b['closePath'](), fill_path(_0x30749b, _0x1293ed[0x1], _0x1293ed[0x2], 0x8 * _0x211fe2), _0x59a0d2;
}

function create_crab_stick(_0x5b3926, _0x3313ad, _0x50dbea) {
    var _0x44be2e = document['createElement']('canvas'),
        _0x46722b = _0x44be2e['getContext']('2d');
    return _0x44be2e['width'] = 0x141 * _0x5b3926, _0x44be2e['height'] = 0x11c * _0x5b3926, _0x46722b['translate'](0x64 * _0x5b3926, 0x1e * _0x5b3926), _0x46722b['translate'](0x5 * _0x5b3926, 0xa * _0x5b3926), _0x46722b['globalAlpha'] = _0x3313ad ? 0.5 : 0x1, _0x46722b['beginPath'](), _0x46722b['lineCap'] = 'round', _0x46722b['lineJoin'] = 'round', _0x46722b['moveTo'](0x3a * _0x5b3926, 0x21 * _0x5b3926), _0x46722b['bezierCurveTo'](0x51 * _0x5b3926, 0x16 * _0x5b3926, 0x5d * _0x5b3926, 0x1a * _0x5b3926, 0x7b * _0x5b3926, 0x2f * _0x5b3926), _0x46722b['bezierCurveTo'](0xa0 * _0x5b3926, 0x49 * _0x5b3926, 0xa9 * _0x5b3926, 0x50 * _0x5b3926, 0xbf * _0x5b3926, 0x63 * _0x5b3926), _0x46722b['bezierCurveTo'](0xca * _0x5b3926, 0x6b * _0x5b3926, 0xd3 * _0x5b3926, 0x76 * _0x5b3926, 0xc3 * _0x5b3926, 0x97 * _0x5b3926), _0x46722b['bezierCurveTo'](0xb5 * _0x5b3926, 0xb7 * _0x5b3926, 0x9d * _0x5b3926, 0xc0 * _0x5b3926, 0x81 * _0x5b3926, 0xae * _0x5b3926), _0x46722b['bezierCurveTo'](0x4e * _0x5b3926, 0x8c * _0x5b3926, 0x44 * _0x5b3926, 0x81 * _0x5b3926, 0x25 * _0x5b3926, 0x5e * _0x5b3926), _0x46722b['bezierCurveTo'](0xf * _0x5b3926, 0x44 * _0x5b3926, 0x19 * _0x5b3926, 0x34 * _0x5b3926, 0x38 * _0x5b3926, 0x22 * _0x5b3926), _0x46722b['closePath'](), fill_path(_0x46722b, _0x50dbea[0x0]), _0x46722b['globalAlpha'] = 0x1, _0x46722b['translate'](-0x5 * _0x5b3926, -0xa * _0x5b3926), _0x46722b['beginPath'](), _0x46722b['lineCap'] = 'round', _0x46722b['lineJoin'] = 'round', _0x46722b['moveTo'](0x3a * _0x5b3926, 0x21 * _0x5b3926), _0x46722b['bezierCurveTo'](0x51 * _0x5b3926, 0x16 * _0x5b3926, 0x5d * _0x5b3926, 0x1a * _0x5b3926, 0x7b * _0x5b3926, 0x2f * _0x5b3926), _0x46722b['bezierCurveTo'](0xa0 * _0x5b3926, 0x49 * _0x5b3926, 0xa9 * _0x5b3926, 0x50 * _0x5b3926, 0xbf * _0x5b3926, 0x63 * _0x5b3926), _0x46722b['bezierCurveTo'](0xca * _0x5b3926, 0x6b * _0x5b3926, 0xd3 * _0x5b3926, 0x76 * _0x5b3926, 0xc3 * _0x5b3926, 0x97 * _0x5b3926), _0x46722b['bezierCurveTo'](0xb5 * _0x5b3926, 0xb7 * _0x5b3926, 0x9d * _0x5b3926, 0xc0 * _0x5b3926, 0x81 * _0x5b3926, 0xae * _0x5b3926), _0x46722b['bezierCurveTo'](0x4e * _0x5b3926, 0x8c * _0x5b3926, 0x44 * _0x5b3926, 0x81 * _0x5b3926, 0x25 * _0x5b3926, 0x5e * _0x5b3926), _0x46722b['bezierCurveTo'](0xf * _0x5b3926, 0x44 * _0x5b3926, 0x19 * _0x5b3926, 0x34 * _0x5b3926, 0x38 * _0x5b3926, 0x22 * _0x5b3926), _0x46722b['closePath'](), fill_path(_0x46722b, _0x50dbea[0x1], _0x50dbea[0x2], 0xa * _0x5b3926), _0x46722b['beginPath'](), _0x46722b['lineCap'] = 'round', _0x46722b['lineJoin'] = 'round', _0x46722b['moveTo'](0xa7 * _0x5b3926, 0x78 * _0x5b3926), _0x46722b['bezierCurveTo'](0xc4 * _0x5b3926, 0x6a * _0x5b3926, 0xcf * _0x5b3926, 0x6f * _0x5b3926, 0xc7 * _0x5b3926, 0x87 * _0x5b3926), _0x46722b['bezierCurveTo'](0xb9 * _0x5b3926, 0xac * _0x5b3926, 0xa6 * _0x5b3926, 0xbb * _0x5b3926, 0x91 * _0x5b3926, 0xb3 * _0x5b3926), _0x46722b['bezierCurveTo'](0x76 * _0x5b3926, 0xa6 * _0x5b3926, 0x7f * _0x5b3926, 0x8b * _0x5b3926, 0xa6 * _0x5b3926, 0x79 * _0x5b3926), _0x46722b['closePath'](), fill_path(_0x46722b, _0x50dbea[0x3]), _0x46722b['beginPath'](), _0x46722b['lineCap'] = 'round', _0x46722b['lineJoin'] = 'round', _0x46722b['moveTo'](0x19 * _0x5b3926, 0x40 * _0x5b3926), _0x46722b['bezierCurveTo'](0x3b * _0x5b3926, 0x60 * _0x5b3926, 0x61 * _0x5b3926, 0x80 * _0x5b3926, 0x81 * _0x5b3926, 0x97 * _0x5b3926), _0x46722b['bezierCurveTo'](0x7e * _0x5b3926, 0xa3 * _0x5b3926, 0x86 * _0x5b3926, 0xae * _0x5b3926, 0x8e * _0x5b3926, 0xb4 * _0x5b3926), _0x46722b['bezierCurveTo'](0x72 * _0x5b3926, 0xaa * _0x5b3926, 0x44 * _0x5b3926, 0x86 * _0x5b3926, 0x1f * _0x5b3926, 0x55 * _0x5b3926), _0x46722b['bezierCurveTo'](0x18 * _0x5b3926, 0x47 * _0x5b3926, 0x18 * _0x5b3926, 0x46 * _0x5b3926, 0x19 * _0x5b3926, 0x41 * _0x5b3926), _0x46722b['closePath'](), fill_path(_0x46722b, _0x50dbea[0x2]), _0x46722b['beginPath'](), _0x46722b['lineCap'] = 'round', _0x46722b['lineJoin'] = 'round', _0x46722b['moveTo'](0xa1 * _0x5b3926, 0x8d * _0x5b3926), _0x46722b['bezierCurveTo'](0xb5 * _0x5b3926, 0x83 * _0x5b3926, 0xba * _0x5b3926, 0x87 * _0x5b3926, 0xad * _0x5b3926, 0x98 * _0x5b3926), _0x46722b['bezierCurveTo'](0xa3 * _0x5b3926, 0xa3 * _0x5b3926, 0x9b * _0x5b3926, 0xa1 * _0x5b3926, 0x97 * _0x5b3926, 0x96 * _0x5b3926), _0x46722b['bezierCurveTo'](0x93 * _0x5b3926, 0x8c * _0x5b3926, 0x9b * _0x5b3926, 0x83 * _0x5b3926, 0xaf * _0x5b3926, 0x7d * _0x5b3926), _0x46722b['bezierCurveTo'](0xbe * _0x5b3926, 0x78 * _0x5b3926, 0xc4 * _0x5b3926, 0x79 * _0x5b3926, 0xbd * _0x5b3926, 0x8f * _0x5b3926), _0x46722b['bezierCurveTo'](0xb6 * _0x5b3926, 0xa7 * _0x5b3926, 0xa9 * _0x5b3926, 0xae * _0x5b3926, 0x9d * _0x5b3926, 0xae * _0x5b3926), _0x46722b['bezierCurveTo'](0x8a * _0x5b3926, 0xac * _0x5b3926, 0x8b * _0x5b3926, 0xa2 * _0x5b3926, 0x8c * _0x5b3926, 0x9c * _0x5b3926), fill_path(_0x46722b, undefined, _0x50dbea[0x4], 0x4 * _0x5b3926), _0x46722b['translate'](-0x64 * _0x5b3926, -0x1e * _0x5b3926), _0x46722b['translate'](0xa * _0x5b3926, 0x46 * _0x5b3926), _0x46722b['translate'](0x5 * _0x5b3926, 0xa * _0x5b3926), _0x46722b['globalAlpha'] = _0x3313ad ? 0.5 : 0x1, _0x46722b['beginPath'](), _0x46722b['lineCap'] = 'round', _0x46722b['lineJoin'] = 'round', _0x46722b['moveTo'](0x3a * _0x5b3926, 0x21 * _0x5b3926), _0x46722b['bezierCurveTo'](0x51 * _0x5b3926, 0x16 * _0x5b3926, 0x5d * _0x5b3926, 0x1a * _0x5b3926, 0x7b * _0x5b3926, 0x2f * _0x5b3926), _0x46722b['bezierCurveTo'](0xa0 * _0x5b3926, 0x49 * _0x5b3926, 0xa9 * _0x5b3926, 0x50 * _0x5b3926, 0xbf * _0x5b3926, 0x63 * _0x5b3926), _0x46722b['bezierCurveTo'](0xca * _0x5b3926, 0x6b * _0x5b3926, 0xd3 * _0x5b3926, 0x76 * _0x5b3926, 0xc3 * _0x5b3926, 0x97 * _0x5b3926), _0x46722b['bezierCurveTo'](0xb5 * _0x5b3926, 0xb7 * _0x5b3926, 0x9d * _0x5b3926, 0xc0 * _0x5b3926, 0x81 * _0x5b3926, 0xae * _0x5b3926), _0x46722b['bezierCurveTo'](0x4e * _0x5b3926, 0x8c * _0x5b3926, 0x44 * _0x5b3926, 0x81 * _0x5b3926, 0x25 * _0x5b3926, 0x5e * _0x5b3926), _0x46722b['bezierCurveTo'](0xf * _0x5b3926, 0x44 * _0x5b3926, 0x19 * _0x5b3926, 0x34 * _0x5b3926, 0x38 * _0x5b3926, 0x22 * _0x5b3926), _0x46722b['closePath'](), fill_path(_0x46722b, _0x50dbea[0x0]), _0x46722b['globalAlpha'] = 0x1, _0x46722b['translate'](-0x5 * _0x5b3926, -0xa * _0x5b3926), _0x46722b['beginPath'](), _0x46722b['lineCap'] = 'round', _0x46722b['lineJoin'] = 'round', _0x46722b['moveTo'](0x3a * _0x5b3926, 0x21 * _0x5b3926), _0x46722b['bezierCurveTo'](0x51 * _0x5b3926, 0x16 * _0x5b3926, 0x5d * _0x5b3926, 0x1a * _0x5b3926, 0x7b * _0x5b3926, 0x2f * _0x5b3926), _0x46722b['bezierCurveTo'](0xa0 * _0x5b3926, 0x49 * _0x5b3926, 0xa9 * _0x5b3926, 0x50 * _0x5b3926, 0xbf * _0x5b3926, 0x63 * _0x5b3926), _0x46722b['bezierCurveTo'](0xca * _0x5b3926, 0x6b * _0x5b3926, 0xd3 * _0x5b3926, 0x76 * _0x5b3926, 0xc3 * _0x5b3926, 0x97 * _0x5b3926), _0x46722b['bezierCurveTo'](0xb5 * _0x5b3926, 0xb7 * _0x5b3926, 0x9d * _0x5b3926, 0xc0 * _0x5b3926, 0x81 * _0x5b3926, 0xae * _0x5b3926), _0x46722b['bezierCurveTo'](0x4e * _0x5b3926, 0x8c * _0x5b3926, 0x44 * _0x5b3926, 0x81 * _0x5b3926, 0x25 * _0x5b3926, 0x5e * _0x5b3926), _0x46722b['bezierCurveTo'](0xf * _0x5b3926, 0x44 * _0x5b3926, 0x19 * _0x5b3926, 0x34 * _0x5b3926, 0x38 * _0x5b3926, 0x22 * _0x5b3926), _0x46722b['closePath'](), fill_path(_0x46722b, _0x50dbea[0x1], _0x50dbea[0x2], 0xa * _0x5b3926), _0x46722b['beginPath'](), _0x46722b['lineCap'] = 'round', _0x46722b['lineJoin'] = 'round', _0x46722b['moveTo'](0xa7 * _0x5b3926, 0x78 * _0x5b3926), _0x46722b['bezierCurveTo'](0xc4 * _0x5b3926, 0x6a * _0x5b3926, 0xcf * _0x5b3926, 0x6f * _0x5b3926, 0xc7 * _0x5b3926, 0x87 * _0x5b3926), _0x46722b['bezierCurveTo'](0xb9 * _0x5b3926, 0xac * _0x5b3926, 0xa6 * _0x5b3926, 0xbb * _0x5b3926, 0x91 * _0x5b3926, 0xb3 * _0x5b3926), _0x46722b['bezierCurveTo'](0x76 * _0x5b3926, 0xa6 * _0x5b3926, 0x7f * _0x5b3926, 0x8b * _0x5b3926, 0xa6 * _0x5b3926, 0x79 * _0x5b3926), _0x46722b['closePath'](), fill_path(_0x46722b, _0x50dbea[0x3]), _0x46722b['beginPath'](), _0x46722b['lineCap'] = 'round', _0x46722b['lineJoin'] = 'round', _0x46722b['moveTo'](0x19 * _0x5b3926, 0x40 * _0x5b3926), _0x46722b['bezierCurveTo'](0x3b * _0x5b3926, 0x60 * _0x5b3926, 0x61 * _0x5b3926, 0x80 * _0x5b3926, 0x81 * _0x5b3926, 0x97 * _0x5b3926), _0x46722b['bezierCurveTo'](0x7e * _0x5b3926, 0xa3 * _0x5b3926, 0x86 * _0x5b3926, 0xae * _0x5b3926, 0x8e * _0x5b3926, 0xb4 * _0x5b3926), _0x46722b['bezierCurveTo'](0x72 * _0x5b3926, 0xaa * _0x5b3926, 0x44 * _0x5b3926, 0x86 * _0x5b3926, 0x1f * _0x5b3926, 0x55 * _0x5b3926), _0x46722b['bezierCurveTo'](0x18 * _0x5b3926, 0x47 * _0x5b3926, 0x18 * _0x5b3926, 0x46 * _0x5b3926, 0x19 * _0x5b3926, 0x41 * _0x5b3926), _0x46722b['closePath'](), fill_path(_0x46722b, _0x50dbea[0x2]), _0x46722b['beginPath'](), _0x46722b['lineCap'] = 'round', _0x46722b['lineJoin'] = 'round', _0x46722b['moveTo'](0xa1 * _0x5b3926, 0x8d * _0x5b3926), _0x46722b['bezierCurveTo'](0xb5 * _0x5b3926, 0x83 * _0x5b3926, 0xba * _0x5b3926, 0x87 * _0x5b3926, 0xad * _0x5b3926, 0x98 * _0x5b3926), _0x46722b['bezierCurveTo'](0xa3 * _0x5b3926, 0xa3 * _0x5b3926, 0x9b * _0x5b3926, 0xa1 * _0x5b3926, 0x97 * _0x5b3926, 0x96 * _0x5b3926), _0x46722b['bezierCurveTo'](0x93 * _0x5b3926, 0x8c * _0x5b3926, 0x9b * _0x5b3926, 0x83 * _0x5b3926, 0xaf * _0x5b3926, 0x7d * _0x5b3926), _0x46722b['bezierCurveTo'](0xbe * _0x5b3926, 0x78 * _0x5b3926, 0xc4 * _0x5b3926, 0x79 * _0x5b3926, 0xbd * _0x5b3926, 0x8f * _0x5b3926), _0x46722b['bezierCurveTo'](0xb6 * _0x5b3926, 0xa7 * _0x5b3926, 0xa9 * _0x5b3926, 0xae * _0x5b3926, 0x9d * _0x5b3926, 0xae * _0x5b3926), _0x46722b['bezierCurveTo'](0x8a * _0x5b3926, 0xac * _0x5b3926, 0x8b * _0x5b3926, 0xa2 * _0x5b3926, 0x8c * _0x5b3926, 0x9c * _0x5b3926), fill_path(_0x46722b, undefined, _0x50dbea[0x4], 0x4 * _0x5b3926), _0x46722b['translate'](0x14 * _0x5b3926, -0x50 * _0x5b3926), _0x46722b['translate'](0x5 * _0x5b3926, 0xa * _0x5b3926), _0x46722b['globalAlpha'] = _0x3313ad ? 0.5 : 0x1, _0x46722b['beginPath'](), _0x46722b['lineCap'] = 'round', _0x46722b['lineJoin'] = 'round', _0x46722b['moveTo'](0x3a * _0x5b3926, 0x21 * _0x5b3926), _0x46722b['bezierCurveTo'](0x51 * _0x5b3926, 0x16 * _0x5b3926, 0x5d * _0x5b3926, 0x1a * _0x5b3926, 0x7b * _0x5b3926, 0x2f * _0x5b3926), _0x46722b['bezierCurveTo'](0xa0 * _0x5b3926, 0x49 * _0x5b3926, 0xa9 * _0x5b3926, 0x50 * _0x5b3926, 0xbf * _0x5b3926, 0x63 * _0x5b3926), _0x46722b['bezierCurveTo'](0xca * _0x5b3926, 0x6b * _0x5b3926, 0xd3 * _0x5b3926, 0x76 * _0x5b3926, 0xc3 * _0x5b3926, 0x97 * _0x5b3926), _0x46722b['bezierCurveTo'](0xb5 * _0x5b3926, 0xb7 * _0x5b3926, 0x9d * _0x5b3926, 0xc0 * _0x5b3926, 0x81 * _0x5b3926, 0xae * _0x5b3926), _0x46722b['bezierCurveTo'](0x4e * _0x5b3926, 0x8c * _0x5b3926, 0x44 * _0x5b3926, 0x81 * _0x5b3926, 0x25 * _0x5b3926, 0x5e * _0x5b3926), _0x46722b['bezierCurveTo'](0xf * _0x5b3926, 0x44 * _0x5b3926, 0x19 * _0x5b3926, 0x34 * _0x5b3926, 0x38 * _0x5b3926, 0x22 * _0x5b3926), _0x46722b['closePath'](), fill_path(_0x46722b, _0x50dbea[0x0]), _0x46722b['globalAlpha'] = 0x1, _0x46722b['translate'](-0x5 * _0x5b3926, -0xa * _0x5b3926), _0x46722b['beginPath'](), _0x46722b['lineCap'] = 'round', _0x46722b['lineJoin'] = 'round', _0x46722b['moveTo'](0x3a * _0x5b3926, 0x21 * _0x5b3926), _0x46722b['bezierCurveTo'](0x51 * _0x5b3926, 0x16 * _0x5b3926, 0x5d * _0x5b3926, 0x1a * _0x5b3926, 0x7b * _0x5b3926, 0x2f * _0x5b3926), _0x46722b['bezierCurveTo'](0xa0 * _0x5b3926, 0x49 * _0x5b3926, 0xa9 * _0x5b3926, 0x50 * _0x5b3926, 0xbf * _0x5b3926, 0x63 * _0x5b3926), _0x46722b['bezierCurveTo'](0xca * _0x5b3926, 0x6b * _0x5b3926, 0xd3 * _0x5b3926, 0x76 * _0x5b3926, 0xc3 * _0x5b3926, 0x97 * _0x5b3926), _0x46722b['bezierCurveTo'](0xb5 * _0x5b3926, 0xb7 * _0x5b3926, 0x9d * _0x5b3926, 0xc0 * _0x5b3926, 0x81 * _0x5b3926, 0xae * _0x5b3926), _0x46722b['bezierCurveTo'](0x4e * _0x5b3926, 0x8c * _0x5b3926, 0x44 * _0x5b3926, 0x81 * _0x5b3926, 0x25 * _0x5b3926, 0x5e * _0x5b3926), _0x46722b['bezierCurveTo'](0xf * _0x5b3926, 0x44 * _0x5b3926, 0x19 * _0x5b3926, 0x34 * _0x5b3926, 0x38 * _0x5b3926, 0x22 * _0x5b3926), _0x46722b['closePath'](), fill_path(_0x46722b, _0x50dbea[0x1], _0x50dbea[0x2], 0xa * _0x5b3926), _0x46722b['beginPath'](), _0x46722b['lineCap'] = 'round', _0x46722b['lineJoin'] = 'round', _0x46722b['moveTo'](0xa7 * _0x5b3926, 0x78 * _0x5b3926), _0x46722b['bezierCurveTo'](0xc4 * _0x5b3926, 0x6a * _0x5b3926, 0xcf * _0x5b3926, 0x6f * _0x5b3926, 0xc7 * _0x5b3926, 0x87 * _0x5b3926), _0x46722b['bezierCurveTo'](0xb9 * _0x5b3926, 0xac * _0x5b3926, 0xa6 * _0x5b3926, 0xbb * _0x5b3926, 0x91 * _0x5b3926, 0xb3 * _0x5b3926), _0x46722b['bezierCurveTo'](0x76 * _0x5b3926, 0xa6 * _0x5b3926, 0x7f * _0x5b3926, 0x8b * _0x5b3926, 0xa6 * _0x5b3926, 0x79 * _0x5b3926), _0x46722b['closePath'](), fill_path(_0x46722b, _0x50dbea[0x3]), _0x46722b['beginPath'](), _0x46722b['lineCap'] = 'round', _0x46722b['lineJoin'] = 'round', _0x46722b['moveTo'](0x19 * _0x5b3926, 0x40 * _0x5b3926), _0x46722b['bezierCurveTo'](0x3b * _0x5b3926, 0x60 * _0x5b3926, 0x61 * _0x5b3926, 0x80 * _0x5b3926, 0x81 * _0x5b3926, 0x97 * _0x5b3926), _0x46722b['bezierCurveTo'](0x7e * _0x5b3926, 0xa3 * _0x5b3926, 0x86 * _0x5b3926, 0xae * _0x5b3926, 0x8e * _0x5b3926, 0xb4 * _0x5b3926), _0x46722b['bezierCurveTo'](0x72 * _0x5b3926, 0xaa * _0x5b3926, 0x44 * _0x5b3926, 0x86 * _0x5b3926, 0x1f * _0x5b3926, 0x55 * _0x5b3926), _0x46722b['bezierCurveTo'](0x18 * _0x5b3926, 0x47 * _0x5b3926, 0x18 * _0x5b3926, 0x46 * _0x5b3926, 0x19 * _0x5b3926, 0x41 * _0x5b3926), _0x46722b['closePath'](), fill_path(_0x46722b, _0x50dbea[0x2]), _0x46722b['beginPath'](), _0x46722b['lineCap'] = 'round', _0x46722b['lineJoin'] = 'round', _0x46722b['moveTo'](0xa1 * _0x5b3926, 0x8d * _0x5b3926), _0x46722b['bezierCurveTo'](0xb5 * _0x5b3926, 0x83 * _0x5b3926, 0xba * _0x5b3926, 0x87 * _0x5b3926, 0xad * _0x5b3926, 0x98 * _0x5b3926), _0x46722b['bezierCurveTo'](0xa3 * _0x5b3926, 0xa3 * _0x5b3926, 0x9b * _0x5b3926, 0xa1 * _0x5b3926, 0x97 * _0x5b3926, 0x96 * _0x5b3926), _0x46722b['bezierCurveTo'](0x93 * _0x5b3926, 0x8c * _0x5b3926, 0x9b * _0x5b3926, 0x83 * _0x5b3926, 0xaf * _0x5b3926, 0x7d * _0x5b3926), _0x46722b['bezierCurveTo'](0xbe * _0x5b3926, 0x78 * _0x5b3926, 0xc4 * _0x5b3926, 0x79 * _0x5b3926, 0xbd * _0x5b3926, 0x8f * _0x5b3926), _0x46722b['bezierCurveTo'](0xb6 * _0x5b3926, 0xa7 * _0x5b3926, 0xa9 * _0x5b3926, 0xae * _0x5b3926, 0x9d * _0x5b3926, 0xae * _0x5b3926), _0x46722b['bezierCurveTo'](0x8a * _0x5b3926, 0xac * _0x5b3926, 0x8b * _0x5b3926, 0xa2 * _0x5b3926, 0x8c * _0x5b3926, 0x9c * _0x5b3926), fill_path(_0x46722b, undefined, _0x50dbea[0x4], 0x4 * _0x5b3926), _0x44be2e;
}

function create_goldsword(_0x3b41d9, _0x909983, _0x5b738f) {
    var _0x33648f = document['createElement']('canvas'),
        _0x36de6b = _0x33648f['getContext']('2d');
    return _0x33648f['width'] = 0x122 * _0x3b41d9, _0x33648f['height'] = 0x20d * _0x3b41d9, _0x36de6b['globalAlpha'] = _0x909983 ? 0.5 : 0x1, _0x36de6b['translate'](0x14 * _0x3b41d9, 0x14 * _0x3b41d9), _0x36de6b['beginPath'](), _0x36de6b['lineCap'] = 'round', _0x36de6b['lineJoin'] = 'round', _0x36de6b['moveTo'](0x6f * _0x3b41d9, 0x15f * _0x3b41d9), _0x36de6b['bezierCurveTo'](128.5 * _0x3b41d9, 218.5 * _0x3b41d9, 128.5 * _0x3b41d9, 218.5 * _0x3b41d9, 0x92 * _0x3b41d9, 0x56 * _0x3b41d9), _0x36de6b['bezierCurveTo'](166.5 * _0x3b41d9, 66.5 * _0x3b41d9, 166.5 * _0x3b41d9, 66.5 * _0x3b41d9, 0xbb * _0x3b41d9, 0x2f * _0x3b41d9), _0x36de6b['bezierCurveTo'](0xc9 * _0x3b41d9, 71.5 * _0x3b41d9, 0xc9 * _0x3b41d9, 71.5 * _0x3b41d9, 0xd7 * _0x3b41d9, 0x60 * _0x3b41d9), _0x36de6b['bezierCurveTo'](0xc1 * _0x3b41d9, 228.5 * _0x3b41d9, 0xc1 * _0x3b41d9, 228.5 * _0x3b41d9, 0xab * _0x3b41d9, 0x169 * _0x3b41d9), _0x36de6b['closePath'](), fill_path(_0x36de6b, _0x5b738f[0x0]), _0x36de6b['save'](), _0x36de6b['translate'](129.5 * _0x3b41d9, 0x1a8 * _0x3b41d9), _0x36de6b['rotate'](0.16), round_rect(_0x36de6b, -15.5 * _0x3b41d9, -0x3f * _0x3b41d9, 0x1f * _0x3b41d9, 0x7e * _0x3b41d9, 0xa * _0x3b41d9), _0x36de6b['restore'](), fill_path(_0x36de6b, _0x5b738f[0x0]), circle(_0x36de6b, 0x79 * _0x3b41d9, 0x1e0 * _0x3b41d9, 20.396078054371138 * _0x3b41d9), fill_path(_0x36de6b, _0x5b738f[0x0]), _0x36de6b['beginPath'](), _0x36de6b['lineCap'] = 'round', _0x36de6b['lineJoin'] = 'round', _0x36de6b['moveTo'](0x5a * _0x3b41d9, 0x137 * _0x3b41d9), _0x36de6b['bezierCurveTo'](0x5f * _0x3b41d9, 0x144 * _0x3b41d9, 0x5f * _0x3b41d9, 0x144 * _0x3b41d9, 0x64 * _0x3b41d9, 0x151 * _0x3b41d9), _0x36de6b['bezierCurveTo'](141.5 * _0x3b41d9, 345.5 * _0x3b41d9, 141.5 * _0x3b41d9, 345.5 * _0x3b41d9, 0xb7 * _0x3b41d9, 0x162 * _0x3b41d9), _0x36de6b['bezierCurveTo'](193.5 * _0x3b41d9, 342.5 * _0x3b41d9, 193.5 * _0x3b41d9, 342.5 * _0x3b41d9, 0xcc * _0x3b41d9, 0x14b * _0x3b41d9), _0x36de6b['bezierCurveTo'](0xca * _0x3b41d9, 0x162 * _0x3b41d9, 0xca * _0x3b41d9, 0x162 * _0x3b41d9, 0xc8 * _0x3b41d9, 0x179 * _0x3b41d9), _0x36de6b['bezierCurveTo'](0x93 * _0x3b41d9, 0x184 * _0x3b41d9, 0x6a * _0x3b41d9, 0x173 * _0x3b41d9, 0x4f * _0x3b41d9, 0x164 * _0x3b41d9), _0x36de6b['closePath'](), fill_path(_0x36de6b, _0x5b738f[0x0]), _0x36de6b['globalAlpha'] = 0x1, _0x36de6b['translate'](-0x14 * _0x3b41d9, -0x14 * _0x3b41d9), _0x36de6b['beginPath'](), _0x36de6b['lineCap'] = 'round', _0x36de6b['lineJoin'] = 'round', _0x36de6b['moveTo'](0x6f * _0x3b41d9, 0x15f * _0x3b41d9), _0x36de6b['bezierCurveTo'](128.5 * _0x3b41d9, 218.5 * _0x3b41d9, 128.5 * _0x3b41d9, 218.5 * _0x3b41d9, 0x92 * _0x3b41d9, 0x56 * _0x3b41d9), _0x36de6b['bezierCurveTo'](166.5 * _0x3b41d9, 66.5 * _0x3b41d9, 166.5 * _0x3b41d9, 66.5 * _0x3b41d9, 0xbb * _0x3b41d9, 0x2f * _0x3b41d9), _0x36de6b['bezierCurveTo'](0xc9 * _0x3b41d9, 71.5 * _0x3b41d9, 0xc9 * _0x3b41d9, 71.5 * _0x3b41d9, 0xd7 * _0x3b41d9, 0x60 * _0x3b41d9), _0x36de6b['bezierCurveTo'](0xc1 * _0x3b41d9, 228.5 * _0x3b41d9, 0xc1 * _0x3b41d9, 228.5 * _0x3b41d9, 0xab * _0x3b41d9, 0x169 * _0x3b41d9), _0x36de6b['closePath'](), fill_path(_0x36de6b, _0x5b738f[0x1], _0x5b738f[0x2], 12.5 * _0x3b41d9), _0x36de6b['save'](), _0x36de6b['translate'](129.5 * _0x3b41d9, 0x1a8 * _0x3b41d9), _0x36de6b['rotate'](0.16), round_rect(_0x36de6b, -15.5 * _0x3b41d9, -0x3f * _0x3b41d9, 0x1f * _0x3b41d9, 0x7e * _0x3b41d9, 0xa * _0x3b41d9), _0x36de6b['restore'](), fill_path(_0x36de6b, _0x5b738f[0x4], _0x5b738f[0x5], 12.5 * _0x3b41d9), circle(_0x36de6b, 0x79 * _0x3b41d9, 0x1e0 * _0x3b41d9, 20.396078054371138 * _0x3b41d9), fill_path(_0x36de6b, _0x5b738f[0x4], _0x5b738f[0x5], 12.5 * _0x3b41d9), _0x36de6b['beginPath'](), _0x36de6b['lineCap'] = 'round', _0x36de6b['lineJoin'] = 'round', _0x36de6b['moveTo'](0x5a * _0x3b41d9, 0x137 * _0x3b41d9), _0x36de6b['bezierCurveTo'](0x5f * _0x3b41d9, 0x144 * _0x3b41d9, 0x5f * _0x3b41d9, 0x144 * _0x3b41d9, 0x64 * _0x3b41d9, 0x151 * _0x3b41d9), _0x36de6b['bezierCurveTo'](141.5 * _0x3b41d9, 345.5 * _0x3b41d9, 141.5 * _0x3b41d9, 345.5 * _0x3b41d9, 0xb7 * _0x3b41d9, 0x162 * _0x3b41d9), _0x36de6b['bezierCurveTo'](193.5 * _0x3b41d9, 342.5 * _0x3b41d9, 193.5 * _0x3b41d9, 342.5 * _0x3b41d9, 0xcc * _0x3b41d9, 0x14b * _0x3b41d9), _0x36de6b['bezierCurveTo'](0xca * _0x3b41d9, 0x162 * _0x3b41d9, 0xca * _0x3b41d9, 0x162 * _0x3b41d9, 0xc8 * _0x3b41d9, 0x179 * _0x3b41d9), _0x36de6b['bezierCurveTo'](0x93 * _0x3b41d9, 0x184 * _0x3b41d9, 0x6a * _0x3b41d9, 0x173 * _0x3b41d9, 0x4f * _0x3b41d9, 0x164 * _0x3b41d9), _0x36de6b['closePath'](), fill_path(_0x36de6b, _0x5b738f[0x1], _0x5b738f[0x2], 12.5 * _0x3b41d9), _0x33648f;
}

function create_diamondsword(_0x31890b, _0x5627f9, _0x640095) {
    var _0x3ace39 = document['createElement']('canvas'),
        _0x11e61f = _0x3ace39['getContext']('2d');
    return _0x3ace39['width'] = 0x122 * _0x31890b, _0x3ace39['height'] = 0x20d * _0x31890b, _0x11e61f['globalAlpha'] = _0x5627f9 ? 0.5 : 0x1, _0x11e61f['translate'](0x14 * _0x31890b, 0x14 * _0x31890b), _0x11e61f['beginPath'](), _0x11e61f['lineCap'] = 'round', _0x11e61f['lineJoin'] = 'round', _0x11e61f['moveTo'](0x70 * _0x31890b, 0x164 * _0x31890b), _0x11e61f['bezierCurveTo'](0x7c * _0x31890b, 220.5 * _0x31890b, 0x7c * _0x31890b, 220.5 * _0x31890b, 0x88 * _0x31890b, 0x55 * _0x31890b), _0x11e61f['bezierCurveTo'](162.5 * _0x31890b, 65.5 * _0x31890b, 162.5 * _0x31890b, 65.5 * _0x31890b, 0xbd * _0x31890b, 0x2e * _0x31890b), _0x11e61f['bezierCurveTo'](208.5 * _0x31890b, 72.5 * _0x31890b, 208.5 * _0x31890b, 72.5 * _0x31890b, 0xe4 * _0x31890b, 0x63 * _0x31890b), _0x11e61f['bezierCurveTo'](0xc8 * _0x31890b, 0xe8 * _0x31890b, 0xc8 * _0x31890b, 0xe8 * _0x31890b, 0xac * _0x31890b, 0x16d * _0x31890b), _0x11e61f['closePath'](), fill_path(_0x11e61f, _0x640095[0x0]), _0x11e61f['save'](), _0x11e61f['translate'](0x83 * _0x31890b, 0x1a7 * _0x31890b), _0x11e61f['rotate'](0.16), round_rect(_0x11e61f, -0xe * _0x31890b, -0x35 * _0x31890b, 0x1c * _0x31890b, 0x6a * _0x31890b, 0xa * _0x31890b), _0x11e61f['restore'](), fill_path(_0x11e61f, _0x640095[0x0]), _0x11e61f['save'](), _0x11e61f['translate'](0x7a * _0x31890b, 0x1e0 * _0x31890b), _0x11e61f['rotate'](1.72), round_regular_polygon(_0x11e61f, 0x4, 26.476404589747453 * _0x31890b, 0xa * _0x31890b), _0x11e61f['restore'](), fill_path(_0x11e61f, _0x640095[0x0]), _0x11e61f['beginPath'](), _0x11e61f['lineCap'] = 'round', _0x11e61f['lineJoin'] = 'round', _0x11e61f['moveTo'](0xd2 * _0x31890b, 0x183 * _0x31890b), _0x11e61f['bezierCurveTo'](0x8a * _0x31890b, 0x178 * _0x31890b, 0x8a * _0x31890b, 0x178 * _0x31890b, 0x42 * _0x31890b, 0x16d * _0x31890b), _0x11e61f['bezierCurveTo'](0x4c * _0x31890b, 0x163 * _0x31890b, 0x4c * _0x31890b, 0x163 * _0x31890b, 0x56 * _0x31890b, 0x159 * _0x31890b), _0x11e61f['bezierCurveTo'](0x63 * _0x31890b, 346.5 * _0x31890b, 0x63 * _0x31890b, 346.5 * _0x31890b, 0x70 * _0x31890b, 0x15c * _0x31890b), _0x11e61f['bezierCurveTo'](128.5 * _0x31890b, 0x158 * _0x31890b, 128.5 * _0x31890b, 0x158 * _0x31890b, 0x91 * _0x31890b, 0x154 * _0x31890b), _0x11e61f['bezierCurveTo'](0x9e * _0x31890b, 0x15c * _0x31890b, 0x9e * _0x31890b, 0x15c * _0x31890b, 0xab * _0x31890b, 0x164 * _0x31890b), _0x11e61f['bezierCurveTo'](0xb8 * _0x31890b, 0x166 * _0x31890b, 0xb8 * _0x31890b, 0x166 * _0x31890b, 0xc5 * _0x31890b, 0x168 * _0x31890b), _0x11e61f['closePath'](), fill_path(_0x11e61f, _0x640095[0x0]), _0x11e61f['beginPath'](), _0x11e61f['lineCap'] = 'round', _0x11e61f['lineJoin'] = 'round', _0x11e61f['moveTo'](0x81 * _0x31890b, 0x152 * _0x31890b), _0x11e61f['bezierCurveTo'](0x89 * _0x31890b, 0x150 * _0x31890b, 0x89 * _0x31890b, 0x150 * _0x31890b, 0x91 * _0x31890b, 0x14e * _0x31890b), _0x11e61f['bezierCurveTo'](152.5 * _0x31890b, 0x152 * _0x31890b, 152.5 * _0x31890b, 0x152 * _0x31890b, 0xa0 * _0x31890b, 0x156 * _0x31890b), _0x11e61f['bezierCurveTo'](0xb8 * _0x31890b, 0xe0 * _0x31890b, 0xb8 * _0x31890b, 0xe0 * _0x31890b, 0xd0 * _0x31890b, 0x6a * _0x31890b), _0x11e61f['bezierCurveTo'](0xc5 * _0x31890b, 0x58 * _0x31890b, 0xbb * _0x31890b, 0x46 * _0x31890b, 0xba * _0x31890b, 0x46 * _0x31890b), _0x11e61f['bezierCurveTo'](169.5 * _0x31890b, 0x53 * _0x31890b, 169.5 * _0x31890b, 0x53 * _0x31890b, 0x99 * _0x31890b, 0x60 * _0x31890b), _0x11e61f['closePath'](), fill_path(_0x11e61f, _0x640095[0x0]), _0x11e61f['globalAlpha'] = 0x1, _0x11e61f['translate'](-0x14 * _0x31890b, -0x14 * _0x31890b), _0x11e61f['beginPath'](), _0x11e61f['lineCap'] = 'round', _0x11e61f['lineJoin'] = 'round', _0x11e61f['moveTo'](0x70 * _0x31890b, 0x164 * _0x31890b), _0x11e61f['bezierCurveTo'](0x7c * _0x31890b, 220.5 * _0x31890b, 0x7c * _0x31890b, 220.5 * _0x31890b, 0x88 * _0x31890b, 0x55 * _0x31890b), _0x11e61f['bezierCurveTo'](162.5 * _0x31890b, 65.5 * _0x31890b, 162.5 * _0x31890b, 65.5 * _0x31890b, 0xbd * _0x31890b, 0x2e * _0x31890b), _0x11e61f['bezierCurveTo'](208.5 * _0x31890b, 72.5 * _0x31890b, 208.5 * _0x31890b, 72.5 * _0x31890b, 0xe4 * _0x31890b, 0x63 * _0x31890b), _0x11e61f['bezierCurveTo'](0xc8 * _0x31890b, 0xe8 * _0x31890b, 0xc8 * _0x31890b, 0xe8 * _0x31890b, 0xac * _0x31890b, 0x16d * _0x31890b), _0x11e61f['closePath'](), fill_path(_0x11e61f, _0x640095[0x1], _0x640095[0x2], 12.5 * _0x31890b), _0x11e61f['save'](), _0x11e61f['translate'](0x83 * _0x31890b, 0x1a7 * _0x31890b), _0x11e61f['rotate'](0.16), round_rect(_0x11e61f, -0xe * _0x31890b, -0x35 * _0x31890b, 0x1c * _0x31890b, 0x6a * _0x31890b, 0xa * _0x31890b), _0x11e61f['restore'](), fill_path(_0x11e61f, _0x640095[0x4], _0x640095[0x5], 12.5 * _0x31890b), _0x11e61f['save'](), _0x11e61f['translate'](0x7a * _0x31890b, 0x1e0 * _0x31890b), _0x11e61f['rotate'](1.72), round_regular_polygon(_0x11e61f, 0x4, 26.476404589747453 * _0x31890b, 0xa * _0x31890b), _0x11e61f['restore'](), fill_path(_0x11e61f, _0x640095[0x1], _0x640095[0x2], 12.5 * _0x31890b), _0x11e61f['beginPath'](), _0x11e61f['lineCap'] = 'round', _0x11e61f['lineJoin'] = 'round', _0x11e61f['moveTo'](0xd2 * _0x31890b, 0x183 * _0x31890b), _0x11e61f['bezierCurveTo'](0x8a * _0x31890b, 0x178 * _0x31890b, 0x8a * _0x31890b, 0x178 * _0x31890b, 0x42 * _0x31890b, 0x16d * _0x31890b), _0x11e61f['bezierCurveTo'](0x4c * _0x31890b, 0x163 * _0x31890b, 0x4c * _0x31890b, 0x163 * _0x31890b, 0x56 * _0x31890b, 0x159 * _0x31890b), _0x11e61f['bezierCurveTo'](0x63 * _0x31890b, 346.5 * _0x31890b, 0x63 * _0x31890b, 346.5 * _0x31890b, 0x70 * _0x31890b, 0x15c * _0x31890b), _0x11e61f['bezierCurveTo'](128.5 * _0x31890b, 0x158 * _0x31890b, 128.5 * _0x31890b, 0x158 * _0x31890b, 0x91 * _0x31890b, 0x154 * _0x31890b), _0x11e61f['bezierCurveTo'](0x9e * _0x31890b, 0x15c * _0x31890b, 0x9e * _0x31890b, 0x15c * _0x31890b, 0xab * _0x31890b, 0x164 * _0x31890b), _0x11e61f['bezierCurveTo'](0xb8 * _0x31890b, 0x166 * _0x31890b, 0xb8 * _0x31890b, 0x166 * _0x31890b, 0xc5 * _0x31890b, 0x168 * _0x31890b), _0x11e61f['closePath'](), fill_path(_0x11e61f, _0x640095[0x1], _0x640095[0x2], 12.5 * _0x31890b), _0x11e61f['beginPath'](), _0x11e61f['lineCap'] = 'round', _0x11e61f['lineJoin'] = 'round', _0x11e61f['moveTo'](0x81 * _0x31890b, 0x152 * _0x31890b), _0x11e61f['bezierCurveTo'](0x89 * _0x31890b, 0x150 * _0x31890b, 0x89 * _0x31890b, 0x150 * _0x31890b, 0x91 * _0x31890b, 0x14e * _0x31890b), _0x11e61f['bezierCurveTo'](152.5 * _0x31890b, 0x152 * _0x31890b, 152.5 * _0x31890b, 0x152 * _0x31890b, 0xa0 * _0x31890b, 0x156 * _0x31890b), _0x11e61f['bezierCurveTo'](0xb8 * _0x31890b, 0xe0 * _0x31890b, 0xb8 * _0x31890b, 0xe0 * _0x31890b, 0xd0 * _0x31890b, 0x6a * _0x31890b), _0x11e61f['bezierCurveTo'](0xc5 * _0x31890b, 0x58 * _0x31890b, 0xbb * _0x31890b, 0x46 * _0x31890b, 0xba * _0x31890b, 0x46 * _0x31890b), _0x11e61f['bezierCurveTo'](169.5 * _0x31890b, 0x53 * _0x31890b, 169.5 * _0x31890b, 0x53 * _0x31890b, 0x99 * _0x31890b, 0x60 * _0x31890b), _0x11e61f['closePath'](), fill_path(_0x11e61f, _0x640095[0x3]), _0x3ace39;
}

function create_amesword(_0x25f2eb, _0x382824, _0x44eaeb) {
    var _0xc68dc2 = document['createElement']('canvas'),
        _0x12b1db = _0xc68dc2['getContext']('2d');
    return _0xc68dc2['width'] = 0x122 * _0x25f2eb, _0xc68dc2['height'] = 0x20d * _0x25f2eb, _0x12b1db['globalAlpha'] = _0x382824 ? 0.5 : 0x1, _0x12b1db['translate'](0x14 * _0x25f2eb, 0x14 * _0x25f2eb), _0x12b1db['translate'](-0x14 * _0x25f2eb, -0x14 * _0x25f2eb), _0x12b1db['save'](), _0x12b1db['translate'](0x84 * _0x25f2eb, 0x1a7 * _0x25f2eb), _0x12b1db['rotate'](0.16), round_rect(_0x12b1db, -0xe * _0x25f2eb, -0x3d * _0x25f2eb, 0x1c * _0x25f2eb, 0x7a * _0x25f2eb, 0xa * _0x25f2eb), _0x12b1db['restore'](), fill_path(_0x12b1db, _0x44eaeb[0x0]), _0x12b1db['beginPath'](), _0x12b1db['lineCap'] = 'round', _0x12b1db['lineJoin'] = 'round', _0x12b1db['moveTo'](0x64 * _0x25f2eb, 0x158 * _0x25f2eb), _0x12b1db['bezierCurveTo'](0x7b * _0x25f2eb, 0xd6 * _0x25f2eb, 0x7b * _0x25f2eb, 0xd6 * _0x25f2eb, 0x92 * _0x25f2eb, 0x54 * _0x25f2eb), _0x12b1db['bezierCurveTo'](166.5 * _0x25f2eb, 0x41 * _0x25f2eb, 166.5 * _0x25f2eb, 0x41 * _0x25f2eb, 0xbb * _0x25f2eb, 0x2e * _0x25f2eb), _0x12b1db['bezierCurveTo'](0xc9 * _0x25f2eb, 0x47 * _0x25f2eb, 0xc9 * _0x25f2eb, 0x47 * _0x25f2eb, 0xd7 * _0x25f2eb, 0x60 * _0x25f2eb), _0x12b1db['bezierCurveTo'](199.5 * _0x25f2eb, 226.5 * _0x25f2eb, 199.5 * _0x25f2eb, 226.5 * _0x25f2eb, 0xb8 * _0x25f2eb, 0x165 * _0x25f2eb), _0x12b1db['bezierCurveTo'](162.5 * _0x25f2eb, 362.5 * _0x25f2eb, 162.5 * _0x25f2eb, 362.5 * _0x25f2eb, 0x8d * _0x25f2eb, 0x170 * _0x25f2eb), _0x12b1db['closePath'](), fill_path(_0x12b1db, _0x44eaeb[0x0]), _0x12b1db['beginPath'](), _0x12b1db['lineCap'] = 'round', _0x12b1db['lineJoin'] = 'round', _0x12b1db['moveTo'](0x4b * _0x25f2eb, 0x148 * _0x25f2eb), _0x12b1db['bezierCurveTo'](0x58 * _0x25f2eb, 336.5 * _0x25f2eb, 0x58 * _0x25f2eb, 336.5 * _0x25f2eb, 0x65 * _0x25f2eb, 0x159 * _0x25f2eb), _0x12b1db['bezierCurveTo'](123.5 * _0x25f2eb, 337.5 * _0x25f2eb, 123.5 * _0x25f2eb, 337.5 * _0x25f2eb, 0x92 * _0x25f2eb, 0x14a * _0x25f2eb), _0x12b1db['bezierCurveTo'](0xa5 * _0x25f2eb, 343.5 * _0x25f2eb, 0xa5 * _0x25f2eb, 343.5 * _0x25f2eb, 0xb8 * _0x25f2eb, 0x165 * _0x25f2eb), _0x12b1db['bezierCurveTo'](198.5 * _0x25f2eb, 0x161 * _0x25f2eb, 198.5 * _0x25f2eb, 0x161 * _0x25f2eb, 0xd5 * _0x25f2eb, 0x15d * _0x25f2eb), _0x12b1db['bezierCurveTo'](200.5 * _0x25f2eb, 364.5 * _0x25f2eb, 200.5 * _0x25f2eb, 364.5 * _0x25f2eb, 0xbc * _0x25f2eb, 0x17c * _0x25f2eb), _0x12b1db['bezierCurveTo'](0xa3 * _0x25f2eb, 380.5 * _0x25f2eb, 0xa3 * _0x25f2eb, 380.5 * _0x25f2eb, 0x8a * _0x25f2eb, 0x17d * _0x25f2eb), _0x12b1db['bezierCurveTo'](0x70 * _0x25f2eb, 373.5 * _0x25f2eb, 0x70 * _0x25f2eb, 373.5 * _0x25f2eb, 0x56 * _0x25f2eb, 0x16e * _0x25f2eb), _0x12b1db['closePath'](), fill_path(_0x12b1db, _0x44eaeb[0x0]), _0x12b1db['beginPath'](), _0x12b1db['lineCap'] = 'round', _0x12b1db['lineJoin'] = 'round', _0x12b1db['moveTo'](0x79 * _0x25f2eb, 0x14c * _0x25f2eb), _0x12b1db['bezierCurveTo'](133.5 * _0x25f2eb, 327.5 * _0x25f2eb, 133.5 * _0x25f2eb, 327.5 * _0x25f2eb, 0x92 * _0x25f2eb, 0x143 * _0x25f2eb), _0x12b1db['bezierCurveTo'](0x9d * _0x25f2eb, 330.5 * _0x25f2eb, 0x9d * _0x25f2eb, 330.5 * _0x25f2eb, 0xa8 * _0x25f2eb, 0x152 * _0x25f2eb), _0x12b1db['bezierCurveTo'](182.5 * _0x25f2eb, 219.5 * _0x25f2eb, 182.5 * _0x25f2eb, 219.5 * _0x25f2eb, 0xc5 * _0x25f2eb, 0x65 * _0x25f2eb), _0x12b1db['bezierCurveTo'](0xbe * _0x25f2eb, 84.5 * _0x25f2eb, 0xbe * _0x25f2eb, 84.5 * _0x25f2eb, 0xb7 * _0x25f2eb, 0x44 * _0x25f2eb), _0x12b1db['bezierCurveTo'](172.5 * _0x25f2eb, 0x51 * _0x25f2eb, 172.5 * _0x25f2eb, 0x51 * _0x25f2eb, 0xa2 * _0x25f2eb, 0x5e * _0x25f2eb), _0x12b1db['closePath'](), fill_path(_0x12b1db, _0x44eaeb[0x0]), _0x12b1db['beginPath'](), _0x12b1db['lineCap'] = 'round', _0x12b1db['lineJoin'] = 'round', _0x12b1db['moveTo'](0x69 * _0x25f2eb, 0x1cf * _0x25f2eb), _0x12b1db['bezierCurveTo'](124.5 * _0x25f2eb, 0x1d2 * _0x25f2eb, 124.5 * _0x25f2eb, 0x1d2 * _0x25f2eb, 0x90 * _0x25f2eb, 0x1d5 * _0x25f2eb), _0x12b1db['bezierCurveTo'](145.5 * _0x25f2eb, 478.5 * _0x25f2eb, 145.5 * _0x25f2eb, 478.5 * _0x25f2eb, 0x93 * _0x25f2eb, 0x1e8 * _0x25f2eb), _0x12b1db['bezierCurveTo'](133.5 * _0x25f2eb, 495.5 * _0x25f2eb, 133.5 * _0x25f2eb, 495.5 * _0x25f2eb, 0x78 * _0x25f2eb, 0x1f7 * _0x25f2eb), _0x12b1db['bezierCurveTo'](108.5 * _0x25f2eb, 0x1ec * _0x25f2eb, 108.5 * _0x25f2eb, 0x1ec * _0x25f2eb, 0x61 * _0x25f2eb, 0x1e1 * _0x25f2eb), _0x12b1db['closePath'](), fill_path(_0x12b1db, _0x44eaeb[0x0]), _0x12b1db['globalAlpha'] = 0x1, _0x12b1db['translate'](-0x14 * _0x25f2eb, -0x14 * _0x25f2eb), _0x12b1db['save'](), _0x12b1db['translate'](0x84 * _0x25f2eb, 0x1a7 * _0x25f2eb), _0x12b1db['rotate'](0.16), round_rect(_0x12b1db, -0xe * _0x25f2eb, -0x3d * _0x25f2eb, 0x1c * _0x25f2eb, 0x7a * _0x25f2eb, 0xa * _0x25f2eb), _0x12b1db['restore'](), fill_path(_0x12b1db, _0x44eaeb[0x4], _0x44eaeb[0x5], 12.5 * _0x25f2eb), _0x12b1db['beginPath'](), _0x12b1db['lineCap'] = 'round', _0x12b1db['lineJoin'] = 'round', _0x12b1db['moveTo'](0x64 * _0x25f2eb, 0x158 * _0x25f2eb), _0x12b1db['bezierCurveTo'](0x7b * _0x25f2eb, 0xd6 * _0x25f2eb, 0x7b * _0x25f2eb, 0xd6 * _0x25f2eb, 0x92 * _0x25f2eb, 0x54 * _0x25f2eb), _0x12b1db['bezierCurveTo'](166.5 * _0x25f2eb, 0x41 * _0x25f2eb, 166.5 * _0x25f2eb, 0x41 * _0x25f2eb, 0xbb * _0x25f2eb, 0x2e * _0x25f2eb), _0x12b1db['bezierCurveTo'](0xc9 * _0x25f2eb, 0x47 * _0x25f2eb, 0xc9 * _0x25f2eb, 0x47 * _0x25f2eb, 0xd7 * _0x25f2eb, 0x60 * _0x25f2eb), _0x12b1db['bezierCurveTo'](199.5 * _0x25f2eb, 226.5 * _0x25f2eb, 199.5 * _0x25f2eb, 226.5 * _0x25f2eb, 0xb8 * _0x25f2eb, 0x165 * _0x25f2eb), _0x12b1db['bezierCurveTo'](162.5 * _0x25f2eb, 362.5 * _0x25f2eb, 162.5 * _0x25f2eb, 362.5 * _0x25f2eb, 0x8d * _0x25f2eb, 0x170 * _0x25f2eb), _0x12b1db['closePath'](), fill_path(_0x12b1db, _0x44eaeb[0x1], _0x44eaeb[0x2], 12.5 * _0x25f2eb), _0x12b1db['beginPath'](), _0x12b1db['lineCap'] = 'round', _0x12b1db['lineJoin'] = 'round', _0x12b1db['moveTo'](0x4b * _0x25f2eb, 0x148 * _0x25f2eb), _0x12b1db['bezierCurveTo'](0x58 * _0x25f2eb, 336.5 * _0x25f2eb, 0x58 * _0x25f2eb, 336.5 * _0x25f2eb, 0x65 * _0x25f2eb, 0x159 * _0x25f2eb), _0x12b1db['bezierCurveTo'](123.5 * _0x25f2eb, 337.5 * _0x25f2eb, 123.5 * _0x25f2eb, 337.5 * _0x25f2eb, 0x92 * _0x25f2eb, 0x14a * _0x25f2eb), _0x12b1db['bezierCurveTo'](0xa5 * _0x25f2eb, 343.5 * _0x25f2eb, 0xa5 * _0x25f2eb, 343.5 * _0x25f2eb, 0xb8 * _0x25f2eb, 0x165 * _0x25f2eb), _0x12b1db['bezierCurveTo'](198.5 * _0x25f2eb, 0x161 * _0x25f2eb, 198.5 * _0x25f2eb, 0x161 * _0x25f2eb, 0xd5 * _0x25f2eb, 0x15d * _0x25f2eb), _0x12b1db['bezierCurveTo'](200.5 * _0x25f2eb, 364.5 * _0x25f2eb, 200.5 * _0x25f2eb, 364.5 * _0x25f2eb, 0xbc * _0x25f2eb, 0x17c * _0x25f2eb), _0x12b1db['bezierCurveTo'](0xa3 * _0x25f2eb, 380.5 * _0x25f2eb, 0xa3 * _0x25f2eb, 380.5 * _0x25f2eb, 0x8a * _0x25f2eb, 0x17d * _0x25f2eb), _0x12b1db['bezierCurveTo'](0x70 * _0x25f2eb, 373.5 * _0x25f2eb, 0x70 * _0x25f2eb, 373.5 * _0x25f2eb, 0x56 * _0x25f2eb, 0x16e * _0x25f2eb), _0x12b1db['closePath'](), fill_path(_0x12b1db, _0x44eaeb[0x1], _0x44eaeb[0x2], 12.5 * _0x25f2eb), _0x12b1db['beginPath'](), _0x12b1db['lineCap'] = 'round', _0x12b1db['lineJoin'] = 'round', _0x12b1db['moveTo'](0x79 * _0x25f2eb, 0x14c * _0x25f2eb), _0x12b1db['bezierCurveTo'](133.5 * _0x25f2eb, 327.5 * _0x25f2eb, 133.5 * _0x25f2eb, 327.5 * _0x25f2eb, 0x92 * _0x25f2eb, 0x143 * _0x25f2eb), _0x12b1db['bezierCurveTo'](0x9d * _0x25f2eb, 330.5 * _0x25f2eb, 0x9d * _0x25f2eb, 330.5 * _0x25f2eb, 0xa8 * _0x25f2eb, 0x152 * _0x25f2eb), _0x12b1db['bezierCurveTo'](182.5 * _0x25f2eb, 219.5 * _0x25f2eb, 182.5 * _0x25f2eb, 219.5 * _0x25f2eb, 0xc5 * _0x25f2eb, 0x65 * _0x25f2eb), _0x12b1db['bezierCurveTo'](0xbe * _0x25f2eb, 84.5 * _0x25f2eb, 0xbe * _0x25f2eb, 84.5 * _0x25f2eb, 0xb7 * _0x25f2eb, 0x44 * _0x25f2eb), _0x12b1db['bezierCurveTo'](172.5 * _0x25f2eb, 0x51 * _0x25f2eb, 172.5 * _0x25f2eb, 0x51 * _0x25f2eb, 0xa2 * _0x25f2eb, 0x5e * _0x25f2eb), _0x12b1db['closePath'](), fill_path(_0x12b1db, _0x44eaeb[0x3]), _0x12b1db['beginPath'](), _0x12b1db['lineCap'] = 'round', _0x12b1db['lineJoin'] = 'round', _0x12b1db['moveTo'](0x69 * _0x25f2eb, 0x1cf * _0x25f2eb), _0x12b1db['bezierCurveTo'](124.5 * _0x25f2eb, 0x1d2 * _0x25f2eb, 124.5 * _0x25f2eb, 0x1d2 * _0x25f2eb, 0x90 * _0x25f2eb, 0x1d5 * _0x25f2eb), _0x12b1db['bezierCurveTo'](145.5 * _0x25f2eb, 478.5 * _0x25f2eb, 145.5 * _0x25f2eb, 478.5 * _0x25f2eb, 0x93 * _0x25f2eb, 0x1e8 * _0x25f2eb), _0x12b1db['bezierCurveTo'](133.5 * _0x25f2eb, 495.5 * _0x25f2eb, 133.5 * _0x25f2eb, 495.5 * _0x25f2eb, 0x78 * _0x25f2eb, 0x1f7 * _0x25f2eb), _0x12b1db['bezierCurveTo'](108.5 * _0x25f2eb, 0x1ec * _0x25f2eb, 108.5 * _0x25f2eb, 0x1ec * _0x25f2eb, 0x61 * _0x25f2eb, 0x1e1 * _0x25f2eb), _0x12b1db['closePath'](), fill_path(_0x12b1db, _0x44eaeb[0x1], _0x44eaeb[0x2], 12.5 * _0x25f2eb), _0x12b1db['globalAlpha'] = 0x1, _0x12b1db['beginPath'](), _0x12b1db['lineCap'] = 'round', _0x12b1db['lineJoin'] = 'round', _0x12b1db['moveTo'](0x8f * _0x25f2eb, 0x15a * _0x25f2eb), _0x12b1db['bezierCurveTo'](0x7d * _0x25f2eb, 0x160 * _0x25f2eb, 0x7d * _0x25f2eb, 0x160 * _0x25f2eb, 0x6b * _0x25f2eb, 0x166 * _0x25f2eb), _0x12b1db['bezierCurveTo'](0x7c * _0x25f2eb, 0x16b * _0x25f2eb, 0x8c * _0x25f2eb, 0x170 * _0x25f2eb, 0x8d * _0x25f2eb, 0x170 * _0x25f2eb), _0x12b1db['bezierCurveTo'](156.5 * _0x25f2eb, 0x16f * _0x25f2eb, 156.5 * _0x25f2eb, 0x16f * _0x25f2eb, 0xac * _0x25f2eb, 0x16e * _0x25f2eb), _0x12b1db['closePath'](), fill_path(_0x12b1db, _0x44eaeb[0x3]), _0xc68dc2;
}

function create_sugar_can(_0x932951, _0x281f74, _0x546d8c) {
    var _0xffd021 = document['createElement']('canvas'),
        _0x5c99fc = _0xffd021['getContext']('2d');
    return _0xffd021['width'] = 0x9a * _0x932951, _0xffd021['height'] = 0x105 * _0x932951, _0x5c99fc['globalAlpha'] = _0x281f74 ? 0.5 : 0x1, _0x5c99fc['translate'](0x0, 0xa * _0x932951), _0x5c99fc['beginPath'](), _0x5c99fc['lineCap'] = 'round', _0x5c99fc['lineJoin'] = 'round', _0x5c99fc['moveTo'](0x7d * _0x932951, 0x45 * _0x932951), _0x5c99fc['bezierCurveTo'](123.5 * _0x932951, 141.5 * _0x932951, 123.5 * _0x932951, 141.5 * _0x932951, 0x7a * _0x932951, 0xd6 * _0x932951), _0x5c99fc['bezierCurveTo'](0x7b * _0x932951, 0xe4 * _0x932951, 0x77 * _0x932951, 0xef * _0x932951, 0x66 * _0x932951, 0xef * _0x932951), _0x5c99fc['bezierCurveTo'](0x5a * _0x932951, 0xee * _0x932951, 0x56 * _0x932951, 0xe1 * _0x932951, 0x59 * _0x932951, 0xc5 * _0x932951), _0x5c99fc['bezierCurveTo'](0x5c * _0x932951, 0x9f * _0x932951, 0x5c * _0x932951, 0x8d * _0x932951, 0x5e * _0x932951, 0x54 * _0x932951), _0x5c99fc['bezierCurveTo'](0x5e * _0x932951, 0x3a * _0x932951, 0x57 * _0x932951, 0x32 * _0x932951, 0x49 * _0x932951, 0x34 * _0x932951), _0x5c99fc['bezierCurveTo'](0x35 * _0x932951, 0x36 * _0x932951, 0x36 * _0x932951, 0x5c * _0x932951, 0x22 * _0x932951, 0x57 * _0x932951), _0x5c99fc['bezierCurveTo'](0xd * _0x932951, 0x55 * _0x932951, 0x16 * _0x932951, 0x3a * _0x932951, 0x22 * _0x932951, 0x28 * _0x932951), _0x5c99fc['bezierCurveTo'](0x2c * _0x932951, 0x18 * _0x932951, 0x44 * _0x932951, 0x11 * _0x932951, 0x56 * _0x932951, 0x15 * _0x932951), _0x5c99fc['bezierCurveTo'](0x6f * _0x932951, 0x17 * _0x932951, 0x7b * _0x932951, 0x27 * _0x932951, 0x7d * _0x932951, 0x43 * _0x932951), _0x5c99fc['closePath'](), fill_path(_0x5c99fc, _0x546d8c[0x0]), _0x5c99fc['globalAlpha'] = 0x1, _0x5c99fc['translate'](0x0, -0xa * _0x932951), _0x5c99fc['beginPath'](), _0x5c99fc['lineCap'] = 'round', _0x5c99fc['lineJoin'] = 'round', _0x5c99fc['moveTo'](0x7d * _0x932951, 0x45 * _0x932951), _0x5c99fc['bezierCurveTo'](123.5 * _0x932951, 141.5 * _0x932951, 123.5 * _0x932951, 141.5 * _0x932951, 0x7a * _0x932951, 0xd6 * _0x932951), _0x5c99fc['bezierCurveTo'](0x7b * _0x932951, 0xe4 * _0x932951, 0x77 * _0x932951, 0xef * _0x932951, 0x66 * _0x932951, 0xef * _0x932951), _0x5c99fc['bezierCurveTo'](0x5a * _0x932951, 0xee * _0x932951, 0x56 * _0x932951, 0xe1 * _0x932951, 0x59 * _0x932951, 0xc5 * _0x932951), _0x5c99fc['bezierCurveTo'](0x5c * _0x932951, 0x9f * _0x932951, 0x5c * _0x932951, 0x8d * _0x932951, 0x5e * _0x932951, 0x54 * _0x932951), _0x5c99fc['bezierCurveTo'](0x5e * _0x932951, 0x3a * _0x932951, 0x57 * _0x932951, 0x32 * _0x932951, 0x49 * _0x932951, 0x34 * _0x932951), _0x5c99fc['bezierCurveTo'](0x35 * _0x932951, 0x36 * _0x932951, 0x36 * _0x932951, 0x5c * _0x932951, 0x22 * _0x932951, 0x57 * _0x932951), _0x5c99fc['bezierCurveTo'](0xd * _0x932951, 0x55 * _0x932951, 0x16 * _0x932951, 0x3a * _0x932951, 0x22 * _0x932951, 0x28 * _0x932951), _0x5c99fc['bezierCurveTo'](0x2c * _0x932951, 0x18 * _0x932951, 0x44 * _0x932951, 0x11 * _0x932951, 0x56 * _0x932951, 0x15 * _0x932951), _0x5c99fc['bezierCurveTo'](0x6f * _0x932951, 0x17 * _0x932951, 0x7b * _0x932951, 0x27 * _0x932951, 0x7d * _0x932951, 0x43 * _0x932951), _0x5c99fc['closePath'](), fill_path(_0x5c99fc, _0x546d8c[0x1], _0x546d8c[0x2], 0x4 * _0x932951), _0x5c99fc['beginPath'](), _0x5c99fc['lineCap'] = 'round', _0x5c99fc['lineJoin'] = 'round', _0x5c99fc['moveTo'](0x1f * _0x932951, 0x2b * _0x932951), _0x5c99fc['bezierCurveTo'](0x1f * _0x932951, 0x3d * _0x932951, 0x2b * _0x932951, 0x46 * _0x932951, 0x33 * _0x932951, 0x4b * _0x932951), _0x5c99fc['bezierCurveTo'](0x30 * _0x932951, 0x54 * _0x932951, 0x29 * _0x932951, 0x59 * _0x932951, 0x21 * _0x932951, 0x56 * _0x932951), _0x5c99fc['bezierCurveTo'](0x17 * _0x932951, 0x58 * _0x932951, 0x14 * _0x932951, 0x4c * _0x932951, 0x17 * _0x932951, 0x3e * _0x932951), _0x5c99fc['closePath'](), fill_path(_0x5c99fc, _0x546d8c[0x3]), _0x5c99fc['beginPath'](), _0x5c99fc['lineCap'] = 'round', _0x5c99fc['lineJoin'] = 'round', _0x5c99fc['moveTo'](0x2d * _0x932951, 0x1d * _0x932951), _0x5c99fc['bezierCurveTo'](0x31 * _0x932951, 0x2d * _0x932951, 0x3d * _0x932951, 0x36 * _0x932951, 0x40 * _0x932951, 0x37 * _0x932951), _0x5c99fc['bezierCurveTo'](67.5 * _0x932951, 0x35 * _0x932951, 67.5 * _0x932951, 0x35 * _0x932951, 0x47 * _0x932951, 0x33 * _0x932951), _0x5c99fc['bezierCurveTo'](0x50 * _0x932951, 0x2c * _0x932951, 0x53 * _0x932951, 0x21 * _0x932951, 0x52 * _0x932951, 0x14 * _0x932951), _0x5c99fc['bezierCurveTo'](0x3b * _0x932951, 0x11 * _0x932951, 0x33 * _0x932951, 0x17 * _0x932951, 0x2d * _0x932951, 0x1e * _0x932951), _0x5c99fc['closePath'](), fill_path(_0x5c99fc, _0x546d8c[0x3]), _0x5c99fc['beginPath'](), _0x5c99fc['lineCap'] = 'round', _0x5c99fc['lineJoin'] = 'round', _0x5c99fc['moveTo'](0x56 * _0x932951, 0x38 * _0x932951), _0x5c99fc['bezierCurveTo'](0x5a * _0x932951, 0x21 * _0x932951, 0x67 * _0x932951, 0x19 * _0x932951, 0x69 * _0x932951, 0x1b * _0x932951), _0x5c99fc['bezierCurveTo'](0x74 * _0x932951, 0x1f * _0x932951, 0x79 * _0x932951, 0x2d * _0x932951, 0x7a * _0x932951, 0x32 * _0x932951), _0x5c99fc['bezierCurveTo'](0x70 * _0x932951, 0x3e * _0x932951, 0x67 * _0x932951, 0x3f * _0x932951, 0x5b * _0x932951, 0x3e * _0x932951), _0x5c99fc['bezierCurveTo'](0x59 * _0x932951, 59.5 * _0x932951, 0x59 * _0x932951, 59.5 * _0x932951, 0x57 * _0x932951, 0x39 * _0x932951), _0x5c99fc['closePath'](), fill_path(_0x5c99fc, _0x546d8c[0x3]), _0x5c99fc['beginPath'](), _0x5c99fc['lineCap'] = 'round', _0x5c99fc['lineJoin'] = 'round', _0x5c99fc['moveTo'](0x5d * _0x932951, 0x51 * _0x932951), _0x5c99fc['bezierCurveTo'](0x6d * _0x932951, 0x52 * _0x932951, 0x7b * _0x932951, 0x46 * _0x932951, 0x7c * _0x932951, 0x3f * _0x932951), _0x5c99fc['bezierCurveTo'](0x7c * _0x932951, 75.5 * _0x932951, 0x7c * _0x932951, 75.5 * _0x932951, 0x7c * _0x932951, 0x58 * _0x932951), _0x5c99fc['bezierCurveTo'](0x77 * _0x932951, 0x63 * _0x932951, 0x67 * _0x932951, 0x67 * _0x932951, 0x5e * _0x932951, 0x67 * _0x932951), _0x5c99fc['closePath'](), fill_path(_0x5c99fc, _0x546d8c[0x3]), _0x5c99fc['beginPath'](), _0x5c99fc['lineCap'] = 'round', _0x5c99fc['lineJoin'] = 'round', _0x5c99fc['moveTo'](0x5d * _0x932951, 0x7c * _0x932951), _0x5c99fc['bezierCurveTo'](0x6c * _0x932951, 0x7d * _0x932951, 0x7a * _0x932951, 0x71 * _0x932951, 0x7c * _0x932951, 0x6a * _0x932951), _0x5c99fc['bezierCurveTo'](0x7c * _0x932951, 0x77 * _0x932951, 0x7c * _0x932951, 0x81 * _0x932951, 0x7c * _0x932951, 0x84 * _0x932951), _0x5c99fc['bezierCurveTo'](0x6e * _0x932951, 0x93 * _0x932951, 0x5e * _0x932951, 0x94 * _0x932951, 0x5a * _0x932951, 0x93 * _0x932951), _0x5c99fc['closePath'](), fill_path(_0x5c99fc, _0x546d8c[0x3]), _0x5c99fc['beginPath'](), _0x5c99fc['lineCap'] = 'round', _0x5c99fc['lineJoin'] = 'round', _0x5c99fc['moveTo'](0x5a * _0x932951, 0xaa * _0x932951), _0x5c99fc['bezierCurveTo'](0x68 * _0x932951, 0xa6 * _0x932951, 0x7a * _0x932951, 0x9e * _0x932951, 0x7a * _0x932951, 0x97 * _0x932951), _0x5c99fc['bezierCurveTo'](0x7a * _0x932951, 162.5 * _0x932951, 0x7a * _0x932951, 162.5 * _0x932951, 0x7a * _0x932951, 0xae * _0x932951), _0x5c99fc['bezierCurveTo'](0x6f * _0x932951, 0xbf * _0x932951, 0x61 * _0x932951, 0xbf * _0x932951, 0x59 * _0x932951, 0xbf * _0x932951), _0x5c99fc['closePath'](), fill_path(_0x5c99fc, _0x546d8c[0x3]), _0x5c99fc['beginPath'](), _0x5c99fc['lineCap'] = 'round', _0x5c99fc['lineJoin'] = 'round', _0x5c99fc['moveTo'](0x58 * _0x932951, 0xd0 * _0x932951), _0x5c99fc['bezierCurveTo'](0x64 * _0x932951, 0xd1 * _0x932951, 0x73 * _0x932951, 0xcd * _0x932951, 0x7a * _0x932951, 0xc1 * _0x932951), _0x5c99fc['bezierCurveTo'](0x7a * _0x932951, 205.5 * _0x932951, 0x7a * _0x932951, 205.5 * _0x932951, 0x7a * _0x932951, 0xda * _0x932951), _0x5c99fc['bezierCurveTo'](0x73 * _0x932951, 0xe5 * _0x932951, 0x67 * _0x932951, 0xeb * _0x932951, 0x5a * _0x932951, 0xe4 * _0x932951), _0x5c99fc['bezierCurveTo'](0x58 * _0x932951, 0xe0 * _0x932951, 0x58 * _0x932951, 0xd9 * _0x932951, 0x58 * _0x932951, 0xd3 * _0x932951), _0x5c99fc['closePath'](), fill_path(_0x5c99fc, _0x546d8c[0x3]), _0x5c99fc['globalAlpha'] = 0.4, _0x5c99fc['beginPath'](), _0x5c99fc['lineCap'] = 'round', _0x5c99fc['lineJoin'] = 'round', _0x5c99fc['moveTo'](0x16 * _0x932951, 0x51 * _0x932951), _0x5c99fc['bezierCurveTo'](0x20 * _0x932951, 0x54 * _0x932951, 0x29 * _0x932951, 0x51 * _0x932951, 0x2d * _0x932951, 0x44 * _0x932951), _0x5c99fc['bezierCurveTo'](0x32 * _0x932951, 0x32 * _0x932951, 0x3e * _0x932951, 0x28 * _0x932951, 0x4f * _0x932951, 0x2b * _0x932951), _0x5c99fc['bezierCurveTo'](0x5f * _0x932951, 0x2d * _0x932951, 0x66 * _0x932951, 0x3a * _0x932951, 0x65 * _0x932951, 0x51 * _0x932951), _0x5c99fc['bezierCurveTo'](99.5 * _0x932951, 120.5 * _0x932951, 99.5 * _0x932951, 120.5 * _0x932951, 0x62 * _0x932951, 0xa0 * _0x932951), _0x5c99fc['bezierCurveTo'](96.5 * _0x932951, 191.5 * _0x932951, 96.5 * _0x932951, 191.5 * _0x932951, 0x5f * _0x932951, 0xdf * _0x932951), _0x5c99fc['bezierCurveTo'](0x5d * _0x932951, 0xe8 * _0x932951, 0x65 * _0x932951, 0xeb * _0x932951, 0x6c * _0x932951, 0xee * _0x932951), _0x5c99fc['bezierCurveTo'](0x64 * _0x932951, 0xf0 * _0x932951, 0x5a * _0x932951, 0xe9 * _0x932951, 0x5a * _0x932951, 0xe0 * _0x932951), _0x5c99fc['bezierCurveTo'](0x5c * _0x932951, 0x9d * _0x932951, 0x5c * _0x932951, 0x9d * _0x932951, 0x5e * _0x932951, 0x5a * _0x932951), _0x5c99fc['bezierCurveTo'](0x5e * _0x932951, 0x38 * _0x932951, 0x59 * _0x932951, 0x35 * _0x932951, 0x4d * _0x932951, 0x33 * _0x932951), _0x5c99fc['bezierCurveTo'](0x3a * _0x932951, 0x32 * _0x932951, 0x36 * _0x932951, 0x3b * _0x932951, 0x31 * _0x932951, 0x4b * _0x932951), _0x5c99fc['bezierCurveTo'](0x2c * _0x932951, 0x5b * _0x932951, 0x1c * _0x932951, 0x5a * _0x932951, 0x17 * _0x932951, 0x51 * _0x932951), _0x5c99fc['closePath'](), fill_path(_0x5c99fc, _0x546d8c[0x0]), _0x5c99fc['globalAlpha'] = 0x1, _0x5c99fc['beginPath'](), _0x5c99fc['lineCap'] = 'round', _0x5c99fc['lineJoin'] = 'round', _0x5c99fc['moveTo'](0x52 * _0x932951, 0x7b * _0x932951), _0x5c99fc['bezierCurveTo'](0x58 * _0x932951, 0x82 * _0x932951, 0x58 * _0x932951, 0x7f * _0x932951, 0x5e * _0x932951, 0x80 * _0x932951), _0x5c99fc['bezierCurveTo'](0x5b * _0x932951, 0x88 * _0x932951, 0x5e * _0x932951, 0x89 * _0x932951, 0x63 * _0x932951, 0x8e * _0x932951), _0x5c99fc['bezierCurveTo'](0x61 * _0x932951, 0x95 * _0x932951, 0x63 * _0x932951, 0x98 * _0x932951, 0x69 * _0x932951, 0x9b * _0x932951), _0x5c99fc['bezierCurveTo'](0x6b * _0x932951, 0x9f * _0x932951, 0x71 * _0x932951, 0x9f * _0x932951, 0x78 * _0x932951, 0x9e * _0x932951), _0x5c99fc['bezierCurveTo'](0x79 * _0x932951, 0xa0 * _0x932951, 0x7d * _0x932951, 0xa3 * _0x932951, 0x84 * _0x932951, 0xa3 * _0x932951), _0x5c99fc['bezierCurveTo'](0x85 * _0x932951, 0xa6 * _0x932951, 0x88 * _0x932951, 0xa9 * _0x932951, 0x8a * _0x932951, 0xaa * _0x932951), _0x5c99fc['bezierCurveTo'](0x85 * _0x932951, 0xab * _0x932951, 0x84 * _0x932951, 0xac * _0x932951, 0x81 * _0x932951, 0xae * _0x932951), _0x5c99fc['bezierCurveTo'](0x7a * _0x932951, 0xaa * _0x932951, 0x78 * _0x932951, 0xaa * _0x932951, 0x74 * _0x932951, 0xae * _0x932951), _0x5c99fc['bezierCurveTo'](0x6c * _0x932951, 170.5 * _0x932951, 0x6c * _0x932951, 170.5 * _0x932951, 0x64 * _0x932951, 0xa7 * _0x932951), _0x5c99fc['bezierCurveTo'](0x5f * _0x932951, 0xac * _0x932951, 0x5e * _0x932951, 0xb3 * _0x932951, 0x5f * _0x932951, 0xb8 * _0x932951), _0x5c99fc['bezierCurveTo'](0x57 * _0x932951, 0xb9 * _0x932951, 0x57 * _0x932951, 0xbd * _0x932951, 0x58 * _0x932951, 0xc2 * _0x932951), _0x5c99fc['bezierCurveTo'](0x52 * _0x932951, 0xc2 * _0x932951, 0x51 * _0x932951, 0xc3 * _0x932951, 0x4f * _0x932951, 0xc5 * _0x932951), _0x5c99fc['bezierCurveTo'](0x4e * _0x932951, 0xc0 * _0x932951, 0x4e * _0x932951, 0xbf * _0x932951, 0x4d * _0x932951, 0xbd * _0x932951), _0x5c99fc['bezierCurveTo'](0x51 * _0x932951, 0xb9 * _0x932951, 0x52 * _0x932951, 0xb7 * _0x932951, 0x50 * _0x932951, 0xb0 * _0x932951), _0x5c99fc['bezierCurveTo'](0x59 * _0x932951, 0xaa * _0x932951, 0x5c * _0x932951, 0xa8 * _0x932951, 0x5f * _0x932951, 0xa3 * _0x932951), _0x5c99fc['bezierCurveTo'](0x5b * _0x932951, 0x97 * _0x932951, 0x58 * _0x932951, 0x97 * _0x932951, 0x52 * _0x932951, 0x93 * _0x932951), _0x5c99fc['bezierCurveTo'](0x55 * _0x932951, 0x8e * _0x932951, 0x55 * _0x932951, 0x89 * _0x932951, 0x51 * _0x932951, 0x85 * _0x932951), _0x5c99fc['bezierCurveTo'](0x54 * _0x932951, 0x7f * _0x932951, 0x54 * _0x932951, 0x7d * _0x932951, 0x52 * _0x932951, 0x7c * _0x932951), _0x5c99fc['closePath'](), fill_path(_0x5c99fc, _0x546d8c[0x4], _0x546d8c[0x5], 0x4 * _0x932951), circle(_0x5c99fc, 0x6b * _0x932951, 0x98 * _0x932951, 0x9 * _0x932951), fill_path(_0x5c99fc, _0x546d8c[0x6]), circle(_0x5c99fc, 0x69 * _0x932951, 0xad * _0x932951, 0x9 * _0x932951), fill_path(_0x5c99fc, _0x546d8c[0x6]), circle(_0x5c99fc, 0x57 * _0x932951, 0xa1 * _0x932951, 0x9 * _0x932951), fill_path(_0x5c99fc, _0x546d8c[0x6]), circle(_0x5c99fc, 0x6a * _0x932951, 0x93 * _0x932951, 0x4 * _0x932951), fill_path(_0x5c99fc, _0x546d8c[0x7]), circle(_0x5c99fc, 0x68 * _0x932951, 0xa7 * _0x932951, 0x4 * _0x932951), fill_path(_0x5c99fc, _0x546d8c[0x7]), circle(_0x5c99fc, 0x56 * _0x932951, 0x9a * _0x932951, 0x4 * _0x932951), fill_path(_0x5c99fc, _0x546d8c[0x7]), _0xffd021;
}

function create_cookie(_0x29bf07, _0x3f7609, _0x13f7af) {
    var _0x3c2dcc = document['createElement']('canvas'),
        _0x3aa0b8 = _0x3c2dcc['getContext']('2d');
    return _0x3c2dcc['width'] = 0x15e * _0x29bf07, _0x3c2dcc['height'] = 0x8c * _0x29bf07, _0x3aa0b8['translate'](-0x32 * _0x29bf07, -0x96 * _0x29bf07), _0x3aa0b8['beginPath'](), _0x3aa0b8['lineCap'] = 'round', _0x3aa0b8['lineJoin'] = 'round', _0x3aa0b8['moveTo'](184.5 * _0x29bf07, 222.0625 * _0x29bf07), _0x3aa0b8['bezierCurveTo'](185.5 * _0x29bf07, 184.0625 * _0x29bf07, 302.5 * _0x29bf07, 171.0625 * _0x29bf07, 313.5 * _0x29bf07, 222.0625 * _0x29bf07), _0x3aa0b8['bezierCurveTo'](330.5 * _0x29bf07, 263.0625 * _0x29bf07, 181.5 * _0x29bf07, 274.0625 * _0x29bf07, 184.5 * _0x29bf07, 223.0625 * _0x29bf07), _0x3aa0b8['closePath'](), fill_path(_0x3aa0b8, _0x13f7af[0x0], _0x13f7af[0x1], 0x8 * _0x29bf07), _0x3aa0b8['beginPath'](), _0x3aa0b8['lineCap'] = 'round', _0x3aa0b8['lineJoin'] = 'round', _0x3aa0b8['moveTo'](131.5 * _0x29bf07, 241.0625 * _0x29bf07), _0x3aa0b8['bezierCurveTo'](144.5 * _0x29bf07, 278.0625 * _0x29bf07, 270.5 * _0x29bf07, 209.0625 * _0x29bf07, 228.5 * _0x29bf07, 174.0625 * _0x29bf07), _0x3aa0b8['bezierCurveTo'](196.5 * _0x29bf07, 147.0625 * _0x29bf07, 117.5 * _0x29bf07, 196.0625 * _0x29bf07, 131.5 * _0x29bf07, 240.0625 * _0x29bf07), _0x3aa0b8['closePath'](), fill_path(_0x3aa0b8, _0x13f7af[0x0], _0x13f7af[0x1], 0x8 * _0x29bf07), circle(_0x3aa0b8, 270.5 * _0x29bf07, 225.0625 * _0x29bf07, 15.811388300841896 * _0x29bf07), fill_path(_0x3aa0b8, _0x13f7af[0x2]), circle(_0x3aa0b8, 243.5 * _0x29bf07, 225.0625 * _0x29bf07, 6.082762530298219 * _0x29bf07), fill_path(_0x3aa0b8, _0x13f7af[0x2]), circle(_0x3aa0b8, 255.5 * _0x29bf07, 210.0625 * _0x29bf07, 10.816653826391969 * _0x29bf07), fill_path(_0x3aa0b8, _0x13f7af[0x2]), circle(_0x3aa0b8, 167.5 * _0x29bf07, 215.0625 * _0x29bf07, 15.297058540778355 * _0x29bf07), fill_path(_0x3aa0b8, _0x13f7af[0x2]), circle(_0x3aa0b8, 176.5 * _0x29bf07, 204.0625 * _0x29bf07, 7.280109889280518 * _0x29bf07), fill_path(_0x3aa0b8, _0x13f7af[0x2]), circle(_0x3aa0b8, 206.5 * _0x29bf07, 189.0625 * _0x29bf07, 7.280109889280518 * _0x29bf07), fill_path(_0x3aa0b8, _0x13f7af[0x2]), _0x3aa0b8['beginPath'](), _0x3aa0b8['lineCap'] = 'round', _0x3aa0b8['lineJoin'] = 'round', _0x3aa0b8['moveTo'](151.5 * _0x29bf07, 212.0625 * _0x29bf07), _0x3aa0b8['bezierCurveTo'](161.5 * _0x29bf07, 204.0625 * _0x29bf07, 173.5 * _0x29bf07, 214.0625 * _0x29bf07, 158.5 * _0x29bf07, 221.0625 * _0x29bf07), _0x3aa0b8['bezierCurveTo'](145.5 * _0x29bf07, 228.0625 * _0x29bf07, 144.5 * _0x29bf07, 216.0625 * _0x29bf07, 151.5 * _0x29bf07, 212.0625 * _0x29bf07), _0x3aa0b8['closePath'](), fill_path(_0x3aa0b8, _0x13f7af[0x3], _0x13f7af[0x4], 0x4 * _0x29bf07), _0x3aa0b8['beginPath'](), _0x3aa0b8['lineCap'] = 'round', _0x3aa0b8['lineJoin'] = 'round', _0x3aa0b8['moveTo'](194.5 * _0x29bf07, 209.0625 * _0x29bf07), _0x3aa0b8['bezierCurveTo'](205.5 * _0x29bf07, 202.0625 * _0x29bf07, 215.5 * _0x29bf07, 207.0625 * _0x29bf07, 199.5 * _0x29bf07, 217.0625 * _0x29bf07), _0x3aa0b8['bezierCurveTo'](187.5 * _0x29bf07, 224.0625 * _0x29bf07, 182.5 * _0x29bf07, 217.0625 * _0x29bf07, 194.5 * _0x29bf07, 209.0625 * _0x29bf07), _0x3aa0b8['closePath'](), fill_path(_0x3aa0b8, _0x13f7af[0x3], _0x13f7af[0x4], 0x4 * _0x29bf07), _0x3aa0b8['beginPath'](), _0x3aa0b8['lineCap'] = 'round', _0x3aa0b8['lineJoin'] = 'round', _0x3aa0b8['moveTo'](188.5 * _0x29bf07, 183.0625 * _0x29bf07), _0x3aa0b8['bezierCurveTo'](201.5 * _0x29bf07, 176.0625 * _0x29bf07, 213.5 * _0x29bf07, 187.0625 * _0x29bf07, 193.5 * _0x29bf07, 193.0625 * _0x29bf07), _0x3aa0b8['bezierCurveTo'](185.5 * _0x29bf07, 194.0625 * _0x29bf07, 175.5 * _0x29bf07, 189.0625 * _0x29bf07, 188.5 * _0x29bf07, 183.0625 * _0x29bf07), _0x3aa0b8['closePath'](), fill_path(_0x3aa0b8, _0x13f7af[0x3], _0x13f7af[0x4], 0x4 * _0x29bf07), _0x3aa0b8['beginPath'](), _0x3aa0b8['lineCap'] = 'round', _0x3aa0b8['lineJoin'] = 'round', _0x3aa0b8['moveTo'](261.5 * _0x29bf07, 202.0625 * _0x29bf07), _0x3aa0b8['bezierCurveTo'](274.5 * _0x29bf07, 201.0625 * _0x29bf07, 282.5 * _0x29bf07, 214.0625 * _0x29bf07, 261.5 * _0x29bf07, 215.0625 * _0x29bf07), _0x3aa0b8['bezierCurveTo'](246.5 * _0x29bf07, 214.0625 * _0x29bf07, 248.5 * _0x29bf07, 203.0625 * _0x29bf07, 261.5 * _0x29bf07, 202.0625 * _0x29bf07), _0x3aa0b8['closePath'](), fill_path(_0x3aa0b8, _0x13f7af[0x3], _0x13f7af[0x4], 0x4 * _0x29bf07), _0x3aa0b8['beginPath'](), _0x3aa0b8['lineCap'] = 'round', _0x3aa0b8['lineJoin'] = 'round', _0x3aa0b8['moveTo'](240.5 * _0x29bf07, 231.0625 * _0x29bf07), _0x3aa0b8['bezierCurveTo'](255.5 * _0x29bf07, 231.0625 * _0x29bf07, 254.5 * _0x29bf07, 243.0625 * _0x29bf07, 240.5 * _0x29bf07, 242.0625 * _0x29bf07), _0x3aa0b8['bezierCurveTo'](225.5 * _0x29bf07, 239.0625 * _0x29bf07, 225.5 * _0x29bf07, 232.0625 * _0x29bf07, 240.5 * _0x29bf07, 231.0625 * _0x29bf07), _0x3aa0b8['closePath'](), fill_path(_0x3aa0b8, _0x13f7af[0x3], _0x13f7af[0x4], 0x4 * _0x29bf07), _0x3c2dcc;
}

function create_candy(_0x2cb476, _0xf7d99f, _0x30583c) {
    var _0x58afd8 = document['createElement']('canvas'),
        _0x5c66d2 = _0x58afd8['getContext']('2d');
    return _0x58afd8['width'] = 0xd9 * _0x2cb476, _0x58afd8['height'] = 0xd7 * _0x2cb476, _0x5c66d2['beginPath'](), _0x5c66d2['lineCap'] = 'round', _0x5c66d2['lineJoin'] = 'round', _0x5c66d2['moveTo'](0x4f * _0x2cb476, 0x71 * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x87 * _0x2cb476, 0x62 * _0x2cb476, 0x88 * _0x2cb476, 0x60 * _0x2cb476, 0x8e * _0x2cb476, 0x61 * _0x2cb476), _0x5c66d2['bezierCurveTo'](0xa7 * _0x2cb476, 0x6a * _0x2cb476, 0xa7 * _0x2cb476, 0x6a * _0x2cb476, 0xab * _0x2cb476, 0x6d * _0x2cb476), _0x5c66d2['bezierCurveTo'](0xad * _0x2cb476, 0x78 * _0x2cb476, 0xad * _0x2cb476, 0x86 * _0x2cb476, 0xa9 * _0x2cb476, 0x8d * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x8c * _0x2cb476, 149.5 * _0x2cb476, 0x8c * _0x2cb476, 149.5 * _0x2cb476, 0x6f * _0x2cb476, 0x9e * _0x2cb476), _0x5c66d2['closePath'](), fill_path(_0x5c66d2, _0x30583c[0x1], _0x30583c[0x2], 0x4 * _0x2cb476), _0x5c66d2['beginPath'](), _0x5c66d2['lineCap'] = 'round', _0x5c66d2['lineJoin'] = 'round', _0x5c66d2['moveTo'](0x9a * _0x2cb476, 0x67 * _0x2cb476), _0x5c66d2['bezierCurveTo'](0xa7 * _0x2cb476, 0x5b * _0x2cb476, 0xaf * _0x2cb476, 0x57 * _0x2cb476, 0xb0 * _0x2cb476, 0x5e * _0x2cb476), _0x5c66d2['bezierCurveTo'](0xaf * _0x2cb476, 0x66 * _0x2cb476, 0xb0 * _0x2cb476, 0x66 * _0x2cb476, 0xba * _0x2cb476, 0x67 * _0x2cb476), _0x5c66d2['bezierCurveTo'](0xbf * _0x2cb476, 0x68 * _0x2cb476, 0xc0 * _0x2cb476, 0x69 * _0x2cb476, 0xb9 * _0x2cb476, 0x74 * _0x2cb476), _0x5c66d2['bezierCurveTo'](0xb7 * _0x2cb476, 0x78 * _0x2cb476, 0xbf * _0x2cb476, 0x7c * _0x2cb476, 0xbd * _0x2cb476, 0x81 * _0x2cb476), _0x5c66d2['bezierCurveTo'](0xb9 * _0x2cb476, 0x8b * _0x2cb476, 0xb2 * _0x2cb476, 0x86 * _0x2cb476, 0xa6 * _0x2cb476, 0x83 * _0x2cb476), _0x5c66d2['closePath'](), fill_path(_0x5c66d2, _0x30583c[0x1], _0x30583c[0x2], 0x4 * _0x2cb476), _0x5c66d2['beginPath'](), _0x5c66d2['lineCap'] = 'round', _0x5c66d2['lineJoin'] = 'round', _0x5c66d2['moveTo'](0x3c * _0x2cb476, 0x2e * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x3c * _0x2cb476, 0x22 * _0x2cb476, 0x3c * _0x2cb476, 0x1d * _0x2cb476, 0x38 * _0x2cb476, 0x13 * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x34 * _0x2cb476, 0xc * _0x2cb476, 0x34 * _0x2cb476, 0x10 * _0x2cb476, 0x31 * _0x2cb476, 0x18 * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x30 * _0x2cb476, 0x1b * _0x2cb476, 0x2e * _0x2cb476, 0x1c * _0x2cb476, 0x27 * _0x2cb476, 0x1b * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x21 * _0x2cb476, 0x1a * _0x2cb476, 0x22 * _0x2cb476, 0x1f * _0x2cb476, 0x23 * _0x2cb476, 0x25 * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x24 * _0x2cb476, 0x29 * _0x2cb476, 0x1b * _0x2cb476, 0x2e * _0x2cb476, 0x1d * _0x2cb476, 0x34 * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x24 * _0x2cb476, 0x37 * _0x2cb476, 0x23 * _0x2cb476, 0x38 * _0x2cb476, 0x1f * _0x2cb476, 0x3b * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x1b * _0x2cb476, 0x41 * _0x2cb476, 0x20 * _0x2cb476, 0x40 * _0x2cb476, 0x23 * _0x2cb476, 0x3e * _0x2cb476), _0x5c66d2['closePath'](), fill_path(_0x5c66d2, _0x30583c[0x4], _0x30583c[0x5], 0x4 * _0x2cb476), _0x5c66d2['beginPath'](), _0x5c66d2['lineCap'] = 'round', _0x5c66d2['lineJoin'] = 'round', _0x5c66d2['moveTo'](0x2e * _0x2cb476, 0x32 * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x33 * _0x2cb476, 0x23 * _0x2cb476, 0x46 * _0x2cb476, 0x20 * _0x2cb476, 0x4e * _0x2cb476, 0x1d * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x54 * _0x2cb476, 0x1b * _0x2cb476, 0x71 * _0x2cb476, 0x24 * _0x2cb476, 0x7f * _0x2cb476, 0x29 * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x8c * _0x2cb476, 0x2f * _0x2cb476, 0x93 * _0x2cb476, 0x45 * _0x2cb476, 0x89 * _0x2cb476, 0x49 * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x7c * _0x2cb476, 0x5c * _0x2cb476, 0x75 * _0x2cb476, 0x5c * _0x2cb476, 0x6d * _0x2cb476, 0x5e * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x65 * _0x2cb476, 0x60 * _0x2cb476, 0x59 * _0x2cb476, 0x5c * _0x2cb476, 0x41 * _0x2cb476, 0x53 * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x36 * _0x2cb476, 0x50 * _0x2cb476, 0x2e * _0x2cb476, 0x3a * _0x2cb476, 0x2e * _0x2cb476, 0x33 * _0x2cb476), _0x5c66d2['closePath'](), fill_path(_0x5c66d2, _0x30583c[0x4], _0x30583c[0x5], 0x4 * _0x2cb476), _0x5c66d2['beginPath'](), _0x5c66d2['lineCap'] = 'round', _0x5c66d2['lineJoin'] = 'round', _0x5c66d2['moveTo'](0x33 * _0x2cb476, 0x28 * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x31 * _0x2cb476, 0x22 * _0x2cb476, 0x31 * _0x2cb476, 0x22 * _0x2cb476, 0x2f * _0x2cb476, 0x1c * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x26 * _0x2cb476, 0x1c * _0x2cb476, 0x22 * _0x2cb476, 0x1b * _0x2cb476, 0x25 * _0x2cb476, 0x25 * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x2b * _0x2cb476, 40.5 * _0x2cb476, 0x2b * _0x2cb476, 40.5 * _0x2cb476, 0x31 * _0x2cb476, 0x2c * _0x2cb476), _0x5c66d2['closePath'](), fill_path(_0x5c66d2, _0x30583c[0x7]), _0x5c66d2['beginPath'](), _0x5c66d2['lineCap'] = 'round', _0x5c66d2['lineJoin'] = 'round', _0x5c66d2['moveTo'](0x1d * _0x2cb476, 0x30 * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x26 * _0x2cb476, 0x31 * _0x2cb476, 0x26 * _0x2cb476, 0x31 * _0x2cb476, 0x2f * _0x2cb476, 0x32 * _0x2cb476), _0x5c66d2['bezierCurveTo'](46.5 * _0x2cb476, 51.5 * _0x2cb476, 46.5 * _0x2cb476, 51.5 * _0x2cb476, 0x2e * _0x2cb476, 0x35 * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x28 * _0x2cb476, 53.5 * _0x2cb476, 0x28 * _0x2cb476, 53.5 * _0x2cb476, 0x22 * _0x2cb476, 0x36 * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x1d * _0x2cb476, 0x33 * _0x2cb476, 0x20 * _0x2cb476, 51.5 * _0x2cb476, 0x1e * _0x2cb476, 0x31 * _0x2cb476), _0x5c66d2['closePath'](), fill_path(_0x5c66d2, _0x30583c[0x7]), _0x5c66d2['beginPath'](), _0x5c66d2['lineCap'] = 'round', _0x5c66d2['lineJoin'] = 'round', _0x5c66d2['moveTo'](0x59 * _0x2cb476, 0x3d * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x65 * _0x2cb476, 0x46 * _0x2cb476, 0x6d * _0x2cb476, 0x5a * _0x2cb476, 0x66 * _0x2cb476, 0x5a * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x61 * _0x2cb476, 0x5b * _0x2cb476, 0x57 * _0x2cb476, 0x5b * _0x2cb476, 0x3c * _0x2cb476, 0x50 * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x30 * _0x2cb476, 0x41 * _0x2cb476, 0x2e * _0x2cb476, 0x38 * _0x2cb476, 0x30 * _0x2cb476, 0x35 * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x32 * _0x2cb476, 0x34 * _0x2cb476, 0x42 * _0x2cb476, 0x38 * _0x2cb476, 0x59 * _0x2cb476, 0x3d * _0x2cb476), _0x5c66d2['closePath'](), fill_path(_0x5c66d2, _0x30583c[0x7]), _0x5c66d2['beginPath'](), _0x5c66d2['lineCap'] = 'round', _0x5c66d2['lineJoin'] = 'round', _0x5c66d2['moveTo'](0x63 * _0x2cb476, 0x3b * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x73 * _0x2cb476, 0x2d * _0x2cb476, 0x7d * _0x2cb476, 0x2a * _0x2cb476, 0x81 * _0x2cb476, 0x2f * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x8a * _0x2cb476, 0x38 * _0x2cb476, 0x8c * _0x2cb476, 0x3f * _0x2cb476, 0x8a * _0x2cb476, 0x43 * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x83 * _0x2cb476, 0x50 * _0x2cb476, 0x7a * _0x2cb476, 0x57 * _0x2cb476, 0x72 * _0x2cb476, 0x5a * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x69 * _0x2cb476, 0x50 * _0x2cb476, 0x5f * _0x2cb476, 0x3e * _0x2cb476, 0x62 * _0x2cb476, 0x3d * _0x2cb476), _0x5c66d2['closePath'](), fill_path(_0x5c66d2, _0x30583c[0x7]), _0x5c66d2['beginPath'](), _0x5c66d2['lineCap'] = 'round', _0x5c66d2['lineJoin'] = 'round', _0x5c66d2['moveTo'](0x76 * _0x2cb476, 0x3e * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x8b * _0x2cb476, 0x2d * _0x2cb476, 0x99 * _0x2cb476, 0x28 * _0x2cb476, 0x96 * _0x2cb476, 0x30 * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x91 * _0x2cb476, 0x39 * _0x2cb476, 0x9d * _0x2cb476, 0x3f * _0x2cb476, 0x9d * _0x2cb476, 0x46 * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x9d * _0x2cb476, 0x4a * _0x2cb476, 0x8e * _0x2cb476, 0x4d * _0x2cb476, 0x8e * _0x2cb476, 0x55 * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x8f * _0x2cb476, 0x5b * _0x2cb476, 0x8d * _0x2cb476, 0x5c * _0x2cb476, 0x87 * _0x2cb476, 0x5a * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x84 * _0x2cb476, 0x5a * _0x2cb476, 0x84 * _0x2cb476, 0x60 * _0x2cb476, 0x7c * _0x2cb476, 0x63 * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x76 * _0x2cb476, 0x5d * _0x2cb476, 0x74 * _0x2cb476, 0x4d * _0x2cb476, 0x74 * _0x2cb476, 0x40 * _0x2cb476), _0x5c66d2['closePath'](), fill_path(_0x5c66d2, _0x30583c[0x4], _0x30583c[0x5], 0x4 * _0x2cb476), _0x5c66d2['beginPath'](), _0x5c66d2['lineCap'] = 'round', _0x5c66d2['lineJoin'] = 'round', _0x5c66d2['moveTo'](0x5a * _0x2cb476, 0x82 * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x9d * _0x2cb476, 0x73 * _0x2cb476, 0xa5 * _0x2cb476, 0x6f * _0x2cb476, 0xa7 * _0x2cb476, 0x73 * _0x2cb476), _0x5c66d2['bezierCurveTo'](0xaa * _0x2cb476, 0x75 * _0x2cb476, 0xab * _0x2cb476, 0x87 * _0x2cb476, 0xa7 * _0x2cb476, 0x8d * _0x2cb476), _0x5c66d2['bezierCurveTo'](135.5 * _0x2cb476, 149.5 * _0x2cb476, 135.5 * _0x2cb476, 149.5 * _0x2cb476, 0x68 * _0x2cb476, 0x9e * _0x2cb476), _0x5c66d2['closePath'](), fill_path(_0x5c66d2, _0x30583c[0x8]), _0x5c66d2['beginPath'](), _0x5c66d2['lineCap'] = 'round', _0x5c66d2['lineJoin'] = 'round', _0x5c66d2['moveTo'](0x35 * _0x2cb476, 0x77 * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x2e * _0x2cb476, 0x78 * _0x2cb476, 0x28 * _0x2cb476, 0x76 * _0x2cb476, 0x22 * _0x2cb476, 0x74 * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x1c * _0x2cb476, 0x6f * _0x2cb476, 0x29 * _0x2cb476, 0x70 * _0x2cb476, 0x27 * _0x2cb476, 0x6c * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x24 * _0x2cb476, 0x64 * _0x2cb476, 0x31 * _0x2cb476, 0x66 * _0x2cb476, 0x35 * _0x2cb476, 0x5f * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x39 * _0x2cb476, 0x54 * _0x2cb476, 0x3a * _0x2cb476, 0x55 * _0x2cb476, 0x3f * _0x2cb476, 0x5d * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x44 * _0x2cb476, 0x60 * _0x2cb476, 0x48 * _0x2cb476, 0x5e * _0x2cb476, 0x50 * _0x2cb476, 0x58 * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x50 * _0x2cb476, 0x60 * _0x2cb476, 0x4e * _0x2cb476, 0x6b * _0x2cb476, 0x42 * _0x2cb476, 0x73 * _0x2cb476), _0x5c66d2['closePath'](), fill_path(_0x5c66d2, _0x30583c[0x9], _0x30583c[0xa], 0x4 * _0x2cb476), _0x5c66d2['beginPath'](), _0x5c66d2['lineCap'] = 'round', _0x5c66d2['lineJoin'] = 'round', _0x5c66d2['moveTo'](0x76 * _0x2cb476, 0x40 * _0x2cb476), _0x5c66d2['bezierCurveTo'](133.5 * _0x2cb476, 0x39 * _0x2cb476, 133.5 * _0x2cb476, 0x39 * _0x2cb476, 0x95 * _0x2cb476, 0x32 * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x91 * _0x2cb476, 0x36 * _0x2cb476, 0x9a * _0x2cb476, 0x41 * _0x2cb476, 0x9d * _0x2cb476, 0x44 * _0x2cb476), _0x5c66d2['bezierCurveTo'](138.5 * _0x2cb476, 66.5 * _0x2cb476, 138.5 * _0x2cb476, 66.5 * _0x2cb476, 0x78 * _0x2cb476, 0x41 * _0x2cb476), _0x5c66d2['closePath'](), fill_path(_0x5c66d2, _0x30583c[0x8]), _0x5c66d2['beginPath'](), _0x5c66d2['lineCap'] = 'round', _0x5c66d2['lineJoin'] = 'round', _0x5c66d2['moveTo'](0x76 * _0x2cb476, 0x41 * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x81 * _0x2cb476, 0x4d * _0x2cb476, 0x81 * _0x2cb476, 0x4d * _0x2cb476, 0x8c * _0x2cb476, 0x59 * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x83 * _0x2cb476, 0x59 * _0x2cb476, 0x82 * _0x2cb476, 0x5c * _0x2cb476, 0x80 * _0x2cb476, 0x60 * _0x2cb476), _0x5c66d2['bezierCurveTo'](123.5 * _0x2cb476, 0x52 * _0x2cb476, 123.5 * _0x2cb476, 0x52 * _0x2cb476, 0x77 * _0x2cb476, 0x44 * _0x2cb476), _0x5c66d2['closePath'](), fill_path(_0x5c66d2, _0x30583c[0x8]), _0x5c66d2['beginPath'](), _0x5c66d2['lineCap'] = 'round', _0x5c66d2['lineJoin'] = 'round', _0x5c66d2['moveTo'](0x33 * _0x2cb476, 0x70 * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x3f * _0x2cb476, 0x6c * _0x2cb476, 0x4e * _0x2cb476, 0x6f * _0x2cb476, 0x58 * _0x2cb476, 0x70 * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x62 * _0x2cb476, 0x7a * _0x2cb476, 0x75 * _0x2cb476, 0x88 * _0x2cb476, 0x7d * _0x2cb476, 0x9d * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x7b * _0x2cb476, 0xb4 * _0x2cb476, 0x7b * _0x2cb476, 0xb9 * _0x2cb476, 0x76 * _0x2cb476, 0xba * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x65 * _0x2cb476, 0xbe * _0x2cb476, 0x59 * _0x2cb476, 0xbf * _0x2cb476, 0x4f * _0x2cb476, 0xbb * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x35 * _0x2cb476, 0xa5 * _0x2cb476, 0x32 * _0x2cb476, 0x99 * _0x2cb476, 0x2f * _0x2cb476, 0x90 * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x2e * _0x2cb476, 0x80 * _0x2cb476, 0x2e * _0x2cb476, 0x7c * _0x2cb476, 0x32 * _0x2cb476, 0x70 * _0x2cb476), _0x5c66d2['closePath'](), fill_path(_0x5c66d2, _0x30583c[0x9], _0x30583c[0xa], 0x4 * _0x2cb476), _0x5c66d2['beginPath'](), _0x5c66d2['lineCap'] = 'round', _0x5c66d2['lineJoin'] = 'round', _0x5c66d2['moveTo'](0x32 * _0x2cb476, 0x72 * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x51 * _0x2cb476, 0x95 * _0x2cb476, 0x50 * _0x2cb476, 0x93 * _0x2cb476, 0x50 * _0x2cb476, 0x95 * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x52 * _0x2cb476, 0x9b * _0x2cb476, 0x50 * _0x2cb476, 0xb6 * _0x2cb476, 0x4a * _0x2cb476, 0xb6 * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x3c * _0x2cb476, 0xac * _0x2cb476, 0x34 * _0x2cb476, 0x9d * _0x2cb476, 0x2f * _0x2cb476, 0x90 * _0x2cb476), _0x5c66d2['closePath'](), fill_path(_0x5c66d2, _0x30583c[0xb], _0x30583c[0xb], 0x4 * _0x2cb476), _0x5c66d2['beginPath'](), _0x5c66d2['lineCap'] = 'round', _0x5c66d2['lineJoin'] = 'round', _0x5c66d2['moveTo'](0x55 * _0x2cb476, 0x98 * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x63 * _0x2cb476, 0x96 * _0x2cb476, 0x6d * _0x2cb476, 0x98 * _0x2cb476, 0x77 * _0x2cb476, 0x9c * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x7a * _0x2cb476, 0xa3 * _0x2cb476, 0x7a * _0x2cb476, 0xae * _0x2cb476, 0x75 * _0x2cb476, 0xb6 * _0x2cb476), _0x5c66d2['closePath'](), _0x5c66d2['bezierCurveTo'](0x5d * _0x2cb476, 0xbc * _0x2cb476, 0x52 * _0x2cb476, 0xbb * _0x2cb476, 0x53 * _0x2cb476, 0xb3 * _0x2cb476), fill_path(_0x5c66d2, _0x30583c[0xb], _0x30583c[0xb], 0x4 * _0x2cb476), _0x5c66d2['beginPath'](), _0x5c66d2['lineCap'] = 'round', _0x5c66d2['lineJoin'] = 'round', _0x5c66d2['moveTo'](0x68 * _0x2cb476, 0xa6 * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x85 * _0x2cb476, 0xa5 * _0x2cb476, 0x8e * _0x2cb476, 0xa8 * _0x2cb476, 0x89 * _0x2cb476, 0xad * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x7f * _0x2cb476, 0xb1 * _0x2cb476, 0x89 * _0x2cb476, 0xc3 * _0x2cb476, 0x7e * _0x2cb476, 0xc4 * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x70 * _0x2cb476, 0xc3 * _0x2cb476, 0x70 * _0x2cb476, 0xc2 * _0x2cb476, 0x6d * _0x2cb476, 0xc7 * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x69 * _0x2cb476, 0xcd * _0x2cb476, 0x66 * _0x2cb476, 0xc3 * _0x2cb476, 0x60 * _0x2cb476, 0xc5 * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x54 * _0x2cb476, 0xc9 * _0x2cb476, 0x58 * _0x2cb476, 0xc6 * _0x2cb476, 0x5a * _0x2cb476, 0xbb * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x60 * _0x2cb476, 0xab * _0x2cb476, 0x61 * _0x2cb476, 0xaa * _0x2cb476, 0x67 * _0x2cb476, 0xa7 * _0x2cb476), _0x5c66d2['closePath'](), fill_path(_0x5c66d2, _0x30583c[0x9], _0x30583c[0xa], 0x4 * _0x2cb476), _0x5c66d2['beginPath'](), _0x5c66d2['lineCap'] = 'round', _0x5c66d2['lineJoin'] = 'round', _0x5c66d2['moveTo'](0x69 * _0x2cb476, 0xa8 * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x76 * _0x2cb476, 172.5 * _0x2cb476, 0x76 * _0x2cb476, 172.5 * _0x2cb476, 0x83 * _0x2cb476, 0xb1 * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x85 * _0x2cb476, 0xbe * _0x2cb476, 0x84 * _0x2cb476, 0xc7 * _0x2cb476, 0x74 * _0x2cb476, 0xc2 * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x6e * _0x2cb476, 0xb6 * _0x2cb476, 0x6e * _0x2cb476, 0xb6 * _0x2cb476, 0x68 * _0x2cb476, 0xaa * _0x2cb476), _0x5c66d2['closePath'](), fill_path(_0x5c66d2, _0x30583c[0xa]), _0x5c66d2['beginPath'](), _0x5c66d2['lineCap'] = 'round', _0x5c66d2['lineJoin'] = 'round', _0x5c66d2['moveTo'](0x66 * _0x2cb476, 0xa9 * _0x2cb476), _0x5c66d2['bezierCurveTo'](100.5 * _0x2cb476, 0xb6 * _0x2cb476, 100.5 * _0x2cb476, 0xb6 * _0x2cb476, 0x63 * _0x2cb476, 0xc3 * _0x2cb476), _0x5c66d2['bezierCurveTo'](93.5 * _0x2cb476, 196.5 * _0x2cb476, 93.5 * _0x2cb476, 196.5 * _0x2cb476, 0x58 * _0x2cb476, 0xc6 * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x5e * _0x2cb476, 0xb0 * _0x2cb476, 0x60 * _0x2cb476, 0xae * _0x2cb476, 0x65 * _0x2cb476, 0xa8 * _0x2cb476), _0x5c66d2['closePath'](), fill_path(_0x5c66d2, _0x30583c[0x9], _0x30583c[0x9], 0x4 * _0x2cb476), _0x5c66d2['beginPath'](), _0x5c66d2['lineCap'] = 'round', _0x5c66d2['lineJoin'] = 'round', _0x5c66d2['moveTo'](0x40 * _0x2cb476, 0x6b * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x40 * _0x2cb476, 0x65 * _0x2cb476, 0x40 * _0x2cb476, 0x65 * _0x2cb476, 0x40 * _0x2cb476, 0x5f * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x39 * _0x2cb476, 0x56 * _0x2cb476, 0x39 * _0x2cb476, 0x54 * _0x2cb476, 0x35 * _0x2cb476, 0x61 * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x37 * _0x2cb476, 103.5 * _0x2cb476, 0x37 * _0x2cb476, 103.5 * _0x2cb476, 0x39 * _0x2cb476, 0x6e * _0x2cb476), _0x5c66d2['closePath'](), fill_path(_0x5c66d2, _0x30583c[0xb], _0x30583c[0xb], 0x4 * _0x2cb476), _0x5c66d2['beginPath'](), _0x5c66d2['lineCap'] = 'round', _0x5c66d2['lineJoin'] = 'round', _0x5c66d2['moveTo'](0x28 * _0x2cb476, 0x6c * _0x2cb476), _0x5c66d2['bezierCurveTo'](46.5 * _0x2cb476, 0x6f * _0x2cb476, 46.5 * _0x2cb476, 0x6f * _0x2cb476, 0x35 * _0x2cb476, 0x72 * _0x2cb476), _0x5c66d2['bezierCurveTo'](50.5 * _0x2cb476, 0x75 * _0x2cb476, 50.5 * _0x2cb476, 0x75 * _0x2cb476, 0x30 * _0x2cb476, 0x78 * _0x2cb476), _0x5c66d2['bezierCurveTo'](40.5 * _0x2cb476, 117.5 * _0x2cb476, 40.5 * _0x2cb476, 117.5 * _0x2cb476, 0x21 * _0x2cb476, 0x73 * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x24 * _0x2cb476, 0x70 * _0x2cb476, 0x24 * _0x2cb476, 0x70 * _0x2cb476, 0x27 * _0x2cb476, 0x6d * _0x2cb476), _0x5c66d2['closePath'](), fill_path(_0x5c66d2, _0x30583c[0xb], _0x30583c[0xb], 0x4 * _0x2cb476), _0x5c66d2['beginPath'](), _0x5c66d2['lineCap'] = 'round', _0x5c66d2['lineJoin'] = 'round', _0x5c66d2['moveTo'](0xbd * _0x2cb476, 0x6a * _0x2cb476), _0x5c66d2['bezierCurveTo'](178.5 * _0x2cb476, 110.5 * _0x2cb476, 178.5 * _0x2cb476, 110.5 * _0x2cb476, 0xa8 * _0x2cb476, 0x73 * _0x2cb476), _0x5c66d2['bezierCurveTo'](168.5 * _0x2cb476, 0x77 * _0x2cb476, 168.5 * _0x2cb476, 0x77 * _0x2cb476, 0xa9 * _0x2cb476, 0x7b * _0x2cb476), _0x5c66d2['bezierCurveTo'](0xb3 * _0x2cb476, 124.5 * _0x2cb476, 0xb3 * _0x2cb476, 124.5 * _0x2cb476, 0xbd * _0x2cb476, 0x7e * _0x2cb476), _0x5c66d2['bezierCurveTo'](0xb6 * _0x2cb476, 0x76 * _0x2cb476, 0xb7 * _0x2cb476, 0x73 * _0x2cb476, 0xbc * _0x2cb476, 0x6a * _0x2cb476), _0x5c66d2['closePath'](), fill_path(_0x5c66d2, _0x30583c[0x8]), _0x5c66d2['beginPath'](), _0x5c66d2['lineCap'] = 'round', _0x5c66d2['lineJoin'] = 'round', _0x5c66d2['moveTo'](0x45 * _0x2cb476, 0xb2 * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x45 * _0x2cb476, 0x8d * _0x2cb476, 0x46 * _0x2cb476, 0x88 * _0x2cb476, 0x4d * _0x2cb476, 0x89 * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x58 * _0x2cb476, 0x85 * _0x2cb476, 0x65 * _0x2cb476, 0x86 * _0x2cb476, 0x6c * _0x2cb476, 0x89 * _0x2cb476), fill_path(_0x5c66d2, undefined, _0x30583c[0x3], 0x4 * _0x2cb476), _0x5c66d2['beginPath'](), _0x5c66d2['lineCap'] = 'round', _0x5c66d2['lineJoin'] = 'round', _0x5c66d2['moveTo'](0x37 * _0x2cb476, 0xa1 * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x36 * _0x2cb476, 0x7c * _0x2cb476, 0x37 * _0x2cb476, 0x77 * _0x2cb476, 0x3e * _0x2cb476, 0x77 * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x4a * _0x2cb476, 0x75 * _0x2cb476, 0x55 * _0x2cb476, 0x75 * _0x2cb476, 0x5d * _0x2cb476, 0x77 * _0x2cb476), fill_path(_0x5c66d2, undefined, _0x30583c[0x3], 0x4 * _0x2cb476), _0x5c66d2['beginPath'](), _0x5c66d2['lineCap'] = 'round', _0x5c66d2['lineJoin'] = 'round', _0x5c66d2['moveTo'](0x5b * _0x2cb476, 0x1d * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x4a * _0x2cb476, 0x21 * _0x2cb476, 0x3e * _0x2cb476, 0x2e * _0x2cb476, 0x39 * _0x2cb476, 0x36 * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x39 * _0x2cb476, 0x3f * _0x2cb476, 0x44 * _0x2cb476, 0x4c * _0x2cb476, 0x4d * _0x2cb476, 0x57 * _0x2cb476), fill_path(_0x5c66d2, undefined, _0x30583c[0x6], 0x4 * _0x2cb476), _0x5c66d2['beginPath'](), _0x5c66d2['lineCap'] = 'round', _0x5c66d2['lineJoin'] = 'round', _0x5c66d2['moveTo'](0x6b * _0x2cb476, 0x21 * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x52 * _0x2cb476, 0x33 * _0x2cb476, 0x50 * _0x2cb476, 0x34 * _0x2cb476, 0x4f * _0x2cb476, 0x3b * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x4e * _0x2cb476, 0x41 * _0x2cb476, 0x5d * _0x2cb476, 0x56 * _0x2cb476, 0x65 * _0x2cb476, 0x5d * _0x2cb476), fill_path(_0x5c66d2, undefined, _0x30583c[0x6], 0x4 * _0x2cb476), _0x5c66d2['beginPath'](), _0x5c66d2['lineCap'] = 'round', _0x5c66d2['lineJoin'] = 'round', _0x5c66d2['moveTo'](0x82 * _0x2cb476, 0x62 * _0x2cb476), _0x5c66d2['bezierCurveTo'](126.5 * _0x2cb476, 0x67 * _0x2cb476, 126.5 * _0x2cb476, 0x67 * _0x2cb476, 0x7b * _0x2cb476, 0x6c * _0x2cb476), _0x5c66d2['bezierCurveTo'](133.5 * _0x2cb476, 0x6b * _0x2cb476, 133.5 * _0x2cb476, 0x6b * _0x2cb476, 0x90 * _0x2cb476, 0x6a * _0x2cb476), _0x5c66d2['bezierCurveTo'](138.5 * _0x2cb476, 0x6e * _0x2cb476, 138.5 * _0x2cb476, 0x6e * _0x2cb476, 0x85 * _0x2cb476, 0x72 * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x8e * _0x2cb476, 0x72 * _0x2cb476, 0x8e * _0x2cb476, 0x72 * _0x2cb476, 0x97 * _0x2cb476, 0x72 * _0x2cb476), _0x5c66d2['bezierCurveTo'](146.5 * _0x2cb476, 119.5 * _0x2cb476, 146.5 * _0x2cb476, 119.5 * _0x2cb476, 0x8e * _0x2cb476, 0x7d * _0x2cb476), _0x5c66d2['bezierCurveTo'](146.5 * _0x2cb476, 0x7f * _0x2cb476, 146.5 * _0x2cb476, 0x7f * _0x2cb476, 0x97 * _0x2cb476, 0x81 * _0x2cb476), _0x5c66d2['bezierCurveTo'](147.5 * _0x2cb476, 0x84 * _0x2cb476, 147.5 * _0x2cb476, 0x84 * _0x2cb476, 0x90 * _0x2cb476, 0x87 * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x94 * _0x2cb476, 0x89 * _0x2cb476, 0x94 * _0x2cb476, 0x89 * _0x2cb476, 0x98 * _0x2cb476, 0x8b * _0x2cb476), _0x5c66d2['bezierCurveTo'](0x95 * _0x2cb476, 142.5 * _0x2cb476, 0x95 * _0x2cb476, 142.5 * _0x2cb476, 0x92 * _0x2cb476, 0x92 * _0x2cb476), fill_path(_0x5c66d2, undefined, _0x30583c[0x3], 0x4 * _0x2cb476), _0x58afd8;
}

function create_ferrero_rocher(_0x35360a, _0x157d08, _0x41da5b) {
    var _0xd29d29 = document['createElement']('canvas'),
        _0x47db54 = _0xd29d29['getContext']('2d');
    return _0xd29d29['width'] = 0x76 * _0x35360a, _0xd29d29['height'] = 0x72 * _0x35360a, _0x47db54['translate'](0x0, 0xa * _0x35360a), circle(_0x47db54, 0x2a * _0x35360a, 0x2b * _0x35360a, 24.758836806279895 * _0x35360a), fill_path(_0x47db54, _0x41da5b[0x0]), _0x47db54['beginPath'](), _0x47db54['lineCap'] = 'round', _0x47db54['lineJoin'] = 'round', _0x47db54['moveTo'](0x41 * _0x35360a, 0x5a * _0x35360a), _0x47db54['bezierCurveTo'](0x48 * _0x35360a, 0x5b * _0x35360a, 0x4b * _0x35360a, 0x5c * _0x35360a, 0x47 * _0x35360a, 0x60 * _0x35360a), _0x47db54['bezierCurveTo'](0x41 * _0x35360a, 0x62 * _0x35360a, 0x41 * _0x35360a, 0x5e * _0x35360a, 0x41 * _0x35360a, 0x5b * _0x35360a), _0x47db54['closePath'](), fill_path(_0x47db54, _0x41da5b[0x0]), _0x47db54['beginPath'](), _0x47db54['lineCap'] = 'round', _0x47db54['lineJoin'] = 'round', _0x47db54['moveTo'](0x57 * _0x35360a, 0x2d * _0x35360a), _0x47db54['bezierCurveTo'](0x6c * _0x35360a, 0x3b * _0x35360a, 0x64 * _0x35360a, 0x56 * _0x35360a, 0x55 * _0x35360a, 0x5b * _0x35360a), _0x47db54['bezierCurveTo'](0x50 * _0x35360a, 0x60 * _0x35360a, 0x44 * _0x35360a, 0x5f * _0x35360a, 0x3a * _0x35360a, 0x57 * _0x35360a), _0x47db54['bezierCurveTo'](0x35 * _0x35360a, 0x50 * _0x35360a, 0x3d * _0x35360a, 0x40 * _0x35360a, 0x42 * _0x35360a, 0x3a * _0x35360a), _0x47db54['bezierCurveTo'](0x49 * _0x35360a, 0x30 * _0x35360a, 0x4e * _0x35360a, 0x2c * _0x35360a, 0x57 * _0x35360a, 0x2d * _0x35360a), _0x47db54['closePath'](), fill_path(_0x47db54, _0x41da5b[0x0]), _0x47db54['translate'](0x0, -0xa * _0x35360a), circle(_0x47db54, 0x2a * _0x35360a, 0x2b * _0x35360a, 24.758836806279895 * _0x35360a), fill_path(_0x47db54, _0x41da5b[0x1], _0x41da5b[0x2], 0x5 * _0x35360a), _0x47db54['beginPath'](), _0x47db54['lineCap'] = 'round', _0x47db54['lineJoin'] = 'round', _0x47db54['moveTo'](0x41 * _0x35360a, 0x5a * _0x35360a), _0x47db54['bezierCurveTo'](0x48 * _0x35360a, 0x5b * _0x35360a, 0x4b * _0x35360a, 0x5c * _0x35360a, 0x47 * _0x35360a, 0x60 * _0x35360a), _0x47db54['bezierCurveTo'](0x41 * _0x35360a, 0x62 * _0x35360a, 0x41 * _0x35360a, 0x5e * _0x35360a, 0x41 * _0x35360a, 0x5b * _0x35360a), _0x47db54['closePath'](), fill_path(_0x47db54, _0x41da5b[0x1], _0x41da5b[0x2], 0x5 * _0x35360a), _0x47db54['beginPath'](), _0x47db54['lineCap'] = 'round', _0x47db54['lineJoin'] = 'round', _0x47db54['moveTo'](0x57 * _0x35360a, 0x2d * _0x35360a), _0x47db54['bezierCurveTo'](0x6c * _0x35360a, 0x3b * _0x35360a, 0x64 * _0x35360a, 0x56 * _0x35360a, 0x55 * _0x35360a, 0x5b * _0x35360a), _0x47db54['bezierCurveTo'](0x50 * _0x35360a, 0x60 * _0x35360a, 0x44 * _0x35360a, 0x5f * _0x35360a, 0x3a * _0x35360a, 0x57 * _0x35360a), _0x47db54['bezierCurveTo'](0x35 * _0x35360a, 0x50 * _0x35360a, 0x3d * _0x35360a, 0x40 * _0x35360a, 0x42 * _0x35360a, 0x3a * _0x35360a), _0x47db54['bezierCurveTo'](0x49 * _0x35360a, 0x30 * _0x35360a, 0x4e * _0x35360a, 0x2c * _0x35360a, 0x57 * _0x35360a, 0x2d * _0x35360a), _0x47db54['closePath'](), fill_path(_0x47db54, _0x41da5b[0x1], _0x41da5b[0x2], 0x5 * _0x35360a), _0x47db54['beginPath'](), _0x47db54['lineCap'] = 'round', _0x47db54['lineJoin'] = 'round', _0x47db54['moveTo'](0x34 * _0x35360a, 0x10 * _0x35360a), _0x47db54['bezierCurveTo'](0x37 * _0x35360a, 0x13 * _0x35360a, 0x36 * _0x35360a, 0x14 * _0x35360a, 0x37 * _0x35360a, 0x16 * _0x35360a), _0x47db54['bezierCurveTo'](0x34 * _0x35360a, 24.5 * _0x35360a, 0x34 * _0x35360a, 24.5 * _0x35360a, 0x31 * _0x35360a, 0x1b * _0x35360a), _0x47db54['bezierCurveTo'](0x2d * _0x35360a, 0x19 * _0x35360a, 0x2d * _0x35360a, 0x19 * _0x35360a, 0x29 * _0x35360a, 0x17 * _0x35360a), _0x47db54['bezierCurveTo'](0x2d * _0x35360a, 0x13 * _0x35360a, 0x30 * _0x35360a, 0x10 * _0x35360a, 0x34 * _0x35360a, 0x10 * _0x35360a), _0x47db54['closePath'](), fill_path(_0x47db54, _0x41da5b[0x3], _0x41da5b[0x4], 0x5 * _0x35360a), _0x47db54['beginPath'](), _0x47db54['lineCap'] = 'round', _0x47db54['lineJoin'] = 'round', _0x47db54['moveTo'](0x3e * _0x35360a, 0x1e * _0x35360a), _0x47db54['bezierCurveTo'](0x42 * _0x35360a, 0x1d * _0x35360a, 0x40 * _0x35360a, 0x1e * _0x35360a, 0x42 * _0x35360a, 0x1e * _0x35360a), _0x47db54['bezierCurveTo'](0x43 * _0x35360a, 0x1f * _0x35360a, 0x43 * _0x35360a, 0x1f * _0x35360a, 0x44 * _0x35360a, 0x20 * _0x35360a), _0x47db54['bezierCurveTo'](66.5 * _0x35360a, 33.5 * _0x35360a, 66.5 * _0x35360a, 33.5 * _0x35360a, 0x41 * _0x35360a, 0x23 * _0x35360a), _0x47db54['bezierCurveTo'](63.5 * _0x35360a, 32.5 * _0x35360a, 63.5 * _0x35360a, 32.5 * _0x35360a, 0x3e * _0x35360a, 0x1e * _0x35360a), _0x47db54['closePath'](), fill_path(_0x47db54, _0x41da5b[0x3], _0x41da5b[0x4], 0x5 * _0x35360a), _0x47db54['beginPath'](), _0x47db54['lineCap'] = 'round', _0x47db54['lineJoin'] = 'round', _0x47db54['moveTo'](0x1d * _0x35360a, 0x15 * _0x35360a), _0x47db54['bezierCurveTo'](0x1f * _0x35360a, 0x16 * _0x35360a, 0x1f * _0x35360a, 0x1a * _0x35360a, 0x1d * _0x35360a, 0x1d * _0x35360a), _0x47db54['bezierCurveTo'](0x1a * _0x35360a, 28.5 * _0x35360a, 0x1a * _0x35360a, 28.5 * _0x35360a, 0x17 * _0x35360a, 0x1c * _0x35360a), _0x47db54['bezierCurveTo'](0x17 * _0x35360a, 26.5 * _0x35360a, 0x17 * _0x35360a, 26.5 * _0x35360a, 0x17 * _0x35360a, 0x19 * _0x35360a), _0x47db54['bezierCurveTo'](0x19 * _0x35360a, 0x17 * _0x35360a, 0x19 * _0x35360a, 0x17 * _0x35360a, 0x1b * _0x35360a, 0x15 * _0x35360a), _0x47db54['closePath'](), fill_path(_0x47db54, _0x41da5b[0x3], _0x41da5b[0x4], 0x5 * _0x35360a), _0x47db54['beginPath'](), _0x47db54['lineCap'] = 'round', _0x47db54['lineJoin'] = 'round', _0x47db54['moveTo'](0x12 * _0x35360a, 0x24 * _0x35360a), _0x47db54['bezierCurveTo'](0x17 * _0x35360a, 0x24 * _0x35360a, 0x18 * _0x35360a, 0x2a * _0x35360a, 0x13 * _0x35360a, 0x2e * _0x35360a), _0x47db54['bezierCurveTo'](0xc * _0x35360a, 0x27 * _0x35360a, 0xf * _0x35360a, 0x26 * _0x35360a, 0x12 * _0x35360a, 0x25 * _0x35360a), _0x47db54['closePath'](), fill_path(_0x47db54, _0x41da5b[0x3], _0x41da5b[0x4], 0x5 * _0x35360a), _0x47db54['beginPath'](), _0x47db54['lineCap'] = 'round', _0x47db54['lineJoin'] = 'round', _0x47db54['moveTo'](0x1e * _0x35360a, 0x22 * _0x35360a), _0x47db54['bezierCurveTo'](0x23 * _0x35360a, 0x24 * _0x35360a, 0x24 * _0x35360a, 0x27 * _0x35360a, 0x20 * _0x35360a, 0x2d * _0x35360a), _0x47db54['bezierCurveTo'](0x19 * _0x35360a, 0x2e * _0x35360a, 0x19 * _0x35360a, 0x2c * _0x35360a, 0x1e * _0x35360a, 0x22 * _0x35360a), _0x47db54['closePath'](), fill_path(_0x47db54, _0x41da5b[0x3], _0x41da5b[0x4], 0x5 * _0x35360a), _0x47db54['beginPath'](), _0x47db54['lineCap'] = 'round', _0x47db54['lineJoin'] = 'round', _0x47db54['moveTo'](0x3b * _0x35360a, 0x23 * _0x35360a), _0x47db54['bezierCurveTo'](0x3a * _0x35360a, 0x1b * _0x35360a, 0x39 * _0x35360a, 0x1b * _0x35360a, 0x34 * _0x35360a, 0x1f * _0x35360a), _0x47db54['bezierCurveTo'](0x32 * _0x35360a, 0x24 * _0x35360a, 0x35 * _0x35360a, 0x26 * _0x35360a, 0x3a * _0x35360a, 0x24 * _0x35360a), _0x47db54['closePath'](), fill_path(_0x47db54, _0x41da5b[0x3], _0x41da5b[0x4], 0x5 * _0x35360a), _0x47db54['beginPath'](), _0x47db54['lineCap'] = 'round', _0x47db54['lineJoin'] = 'round', _0x47db54['moveTo'](0x3f * _0x35360a, 0x2e * _0x35360a), _0x47db54['bezierCurveTo'](64.5 * _0x35360a, 46.5 * _0x35360a, 64.5 * _0x35360a, 46.5 * _0x35360a, 0x42 * _0x35360a, 0x2f * _0x35360a), _0x47db54['bezierCurveTo'](0x46 * _0x35360a, 0x32 * _0x35360a, 0x46 * _0x35360a, 0x35 * _0x35360a, 0x3d * _0x35360a, 0x37 * _0x35360a), _0x47db54['bezierCurveTo'](0x3e * _0x35360a, 50.5 * _0x35360a, 0x3e * _0x35360a, 50.5 * _0x35360a, 0x3f * _0x35360a, 0x2e * _0x35360a), _0x47db54['closePath'](), fill_path(_0x47db54, _0x41da5b[0x3], _0x41da5b[0x4], 0x5 * _0x35360a), _0x47db54['beginPath'](), _0x47db54['lineCap'] = 'round', _0x47db54['lineJoin'] = 'round', _0x47db54['moveTo'](0x29 * _0x35360a, 0x2a * _0x35360a), _0x47db54['bezierCurveTo'](0x2f * _0x35360a, 0x29 * _0x35360a, 0x35 * _0x35360a, 0x2f * _0x35360a, 0x2e * _0x35360a, 0x33 * _0x35360a), _0x47db54['bezierCurveTo'](0x26 * _0x35360a, 0x31 * _0x35360a, 0x27 * _0x35360a, 0x2e * _0x35360a, 0x29 * _0x35360a, 0x2b * _0x35360a), _0x47db54['closePath'](), fill_path(_0x47db54, _0x41da5b[0x3], _0x41da5b[0x4], 0x5 * _0x35360a), _0x47db54['beginPath'](), _0x47db54['lineCap'] = 'round', _0x47db54['lineJoin'] = 'round', _0x47db54['moveTo'](0x2c * _0x35360a, 0x39 * _0x35360a), _0x47db54['bezierCurveTo'](0x36 * _0x35360a, 0x39 * _0x35360a, 0x36 * _0x35360a, 0x3a * _0x35360a, 0x37 * _0x35360a, 0x3d * _0x35360a), _0x47db54['bezierCurveTo'](0x36 * _0x35360a, 0x3f * _0x35360a, 0x34 * _0x35360a, 0x40 * _0x35360a, 0x30 * _0x35360a, 0x41 * _0x35360a), _0x47db54['closePath'](), fill_path(_0x47db54, _0x41da5b[0x3], _0x41da5b[0x4], 0x5 * _0x35360a), _0x47db54['beginPath'](), _0x47db54['lineCap'] = 'round', _0x47db54['lineJoin'] = 'round', _0x47db54['moveTo'](0x14 * _0x35360a, 0x34 * _0x35360a), _0x47db54['bezierCurveTo'](0x19 * _0x35360a, 0x33 * _0x35360a, 0x1b * _0x35360a, 0x32 * _0x35360a, 0x1c * _0x35360a, 0x36 * _0x35360a), _0x47db54['bezierCurveTo'](0x1b * _0x35360a, 0x3a * _0x35360a, 0x18 * _0x35360a, 0x3a * _0x35360a, 0x16 * _0x35360a, 0x3a * _0x35360a), _0x47db54['bezierCurveTo'](0x15 * _0x35360a, 55.5 * _0x35360a, 0x15 * _0x35360a, 55.5 * _0x35360a, 0x14 * _0x35360a, 0x35 * _0x35360a), _0x47db54['closePath'](), fill_path(_0x47db54, _0x41da5b[0x3], _0x41da5b[0x4], 0x5 * _0x35360a), _0x47db54['beginPath'](), _0x47db54['lineCap'] = 'round', _0x47db54['lineJoin'] = 'round', _0x47db54['moveTo'](0x1e * _0x35360a, 0x3d * _0x35360a), _0x47db54['bezierCurveTo'](0x25 * _0x35360a, 0x3d * _0x35360a, 0x27 * _0x35360a, 0x3f * _0x35360a, 0x27 * _0x35360a, 0x44 * _0x35360a), _0x47db54['bezierCurveTo'](0x24 * _0x35360a, 68.5 * _0x35360a, 0x24 * _0x35360a, 68.5 * _0x35360a, 0x21 * _0x35360a, 0x45 * _0x35360a), _0x47db54['bezierCurveTo'](30.5 * _0x35360a, 67.5 * _0x35360a, 30.5 * _0x35360a, 67.5 * _0x35360a, 0x1c * _0x35360a, 0x42 * _0x35360a), _0x47db54['closePath'](), fill_path(_0x47db54, _0x41da5b[0x3], _0x41da5b[0x4], 0x5 * _0x35360a), _0x47db54['beginPath'](), _0x47db54['lineCap'] = 'round', _0x47db54['lineJoin'] = 'round', _0x47db54['moveTo'](0x58 * _0x35360a, 0x2d * _0x35360a), _0x47db54['bezierCurveTo'](0x5a * _0x35360a, 46.5 * _0x35360a, 0x5a * _0x35360a, 46.5 * _0x35360a, 0x5c * _0x35360a, 0x30 * _0x35360a), _0x47db54['bezierCurveTo'](0x5c * _0x35360a, 0x32 * _0x35360a, 0x5c * _0x35360a, 0x32 * _0x35360a, 0x5c * _0x35360a, 0x34 * _0x35360a), _0x47db54['closePath'](), fill_path(_0x47db54, _0x41da5b[0x3], _0x41da5b[0x4], 0x5 * _0x35360a), _0x47db54['beginPath'](), _0x47db54['lineCap'] = 'round', _0x47db54['lineJoin'] = 'round', _0x47db54['moveTo'](0x60 * _0x35360a, 0x35 * _0x35360a), _0x47db54['bezierCurveTo'](97.5 * _0x35360a, 0x37 * _0x35360a, 97.5 * _0x35360a, 0x37 * _0x35360a, 0x63 * _0x35360a, 0x39 * _0x35360a), _0x47db54['bezierCurveTo'](97.5 * _0x35360a, 59.5 * _0x35360a, 97.5 * _0x35360a, 59.5 * _0x35360a, 0x60 * _0x35360a, 0x3e * _0x35360a), _0x47db54['bezierCurveTo'](93.5 * _0x35360a, 60.5 * _0x35360a, 93.5 * _0x35360a, 60.5 * _0x35360a, 0x5b * _0x35360a, 0x3b * _0x35360a), _0x47db54['bezierCurveTo'](91.5 * _0x35360a, 0x39 * _0x35360a, 91.5 * _0x35360a, 0x39 * _0x35360a, 0x5c * _0x35360a, 0x37 * _0x35360a), _0x47db54['closePath'](), fill_path(_0x47db54, _0x41da5b[0x3], _0x41da5b[0x4], 0x5 * _0x35360a), _0x47db54['beginPath'](), _0x47db54['lineCap'] = 'round', _0x47db54['lineJoin'] = 'round', _0x47db54['moveTo'](0x5c * _0x35360a, 0x47 * _0x35360a), _0x47db54['bezierCurveTo'](94.5 * _0x35360a, 70.5 * _0x35360a, 94.5 * _0x35360a, 70.5 * _0x35360a, 0x61 * _0x35360a, 0x46 * _0x35360a), _0x47db54['bezierCurveTo'](98.5 * _0x35360a, 72.5 * _0x35360a, 98.5 * _0x35360a, 72.5 * _0x35360a, 0x64 * _0x35360a, 0x4b * _0x35360a), _0x47db54['bezierCurveTo'](0x61 * _0x35360a, 76.5 * _0x35360a, 0x61 * _0x35360a, 76.5 * _0x35360a, 0x5e * _0x35360a, 0x4e * _0x35360a), _0x47db54['closePath'](), fill_path(_0x47db54, _0x41da5b[0x3], _0x41da5b[0x4], 0x5 * _0x35360a), _0x47db54['beginPath'](), _0x47db54['lineCap'] = 'round', _0x47db54['lineJoin'] = 'round', _0x47db54['moveTo'](0x5f * _0x35360a, 0x52 * _0x35360a), _0x47db54['bezierCurveTo'](0x60 * _0x35360a, 0x53 * _0x35360a, 0x60 * _0x35360a, 0x53 * _0x35360a, 0x61 * _0x35360a, 0x54 * _0x35360a), _0x47db54['bezierCurveTo'](0x61 * _0x35360a, 85.5 * _0x35360a, 0x61 * _0x35360a, 85.5 * _0x35360a, 0x61 * _0x35360a, 0x57 * _0x35360a), _0x47db54['bezierCurveTo'](93.5 * _0x35360a, 87.5 * _0x35360a, 93.5 * _0x35360a, 87.5 * _0x35360a, 0x5a * _0x35360a, 0x58 * _0x35360a), _0x47db54['closePath'](), fill_path(_0x47db54, _0x41da5b[0x3], _0x41da5b[0x4], 0x5 * _0x35360a), _0x47db54['beginPath'](), _0x47db54['lineCap'] = 'round', _0x47db54['lineJoin'] = 'round', _0x47db54['moveTo'](0x56 * _0x35360a, 0x48 * _0x35360a), _0x47db54['bezierCurveTo'](0x59 * _0x35360a, 0x4c * _0x35360a, 0x58 * _0x35360a, 0x51 * _0x35360a, 0x55 * _0x35360a, 0x52 * _0x35360a), _0x47db54['bezierCurveTo'](0x50 * _0x35360a, 0x50 * _0x35360a, 0x52 * _0x35360a, 0x4e * _0x35360a, 0x55 * _0x35360a, 0x48 * _0x35360a), _0x47db54['closePath'](), fill_path(_0x47db54, _0x41da5b[0x3], _0x41da5b[0x4], 0x5 * _0x35360a), _0x47db54['beginPath'](), _0x47db54['lineCap'] = 'round', _0x47db54['lineJoin'] = 'round', _0x47db54['moveTo'](0x50 * _0x35360a, 0x56 * _0x35360a), _0x47db54['bezierCurveTo'](0x54 * _0x35360a, 0x58 * _0x35360a, 0x56 * _0x35360a, 0x58 * _0x35360a, 0x55 * _0x35360a, 0x5d * _0x35360a), _0x47db54['bezierCurveTo'](0x50 * _0x35360a, 0x60 * _0x35360a, 0x4f * _0x35360a, 0x60 * _0x35360a, 0x4c * _0x35360a, 0x5b * _0x35360a), _0x47db54['closePath'](), fill_path(_0x47db54, _0x41da5b[0x3], _0x41da5b[0x4], 0x5 * _0x35360a), _0x47db54['beginPath'](), _0x47db54['lineCap'] = 'round', _0x47db54['lineJoin'] = 'round', _0x47db54['moveTo'](0x54 * _0x35360a, 0x2e * _0x35360a), _0x47db54['bezierCurveTo'](0x5d * _0x35360a, 0x33 * _0x35360a, 0x5b * _0x35360a, 0x3e * _0x35360a, 0x50 * _0x35360a, 0x4e * _0x35360a), _0x47db54['bezierCurveTo'](0x4a * _0x35360a, 0x56 * _0x35360a, 0x42 * _0x35360a, 0x5a * _0x35360a, 0x3c * _0x35360a, 0x56 * _0x35360a), _0x47db54['bezierCurveTo'](0x37 * _0x35360a, 0x4f * _0x35360a, 0x39 * _0x35360a, 0x49 * _0x35360a, 0x43 * _0x35360a, 0x39 * _0x35360a), _0x47db54['bezierCurveTo'](0x47 * _0x35360a, 0x33 * _0x35360a, 0x4f * _0x35360a, 0x2c * _0x35360a, 0x54 * _0x35360a, 0x2e * _0x35360a), _0x47db54['closePath'](), fill_path(_0x47db54, _0x41da5b[0x5], _0x41da5b[0x6], 0x5 * _0x35360a), _0x47db54['beginPath'](), _0x47db54['lineCap'] = 'round', _0x47db54['lineJoin'] = 'round', _0x47db54['moveTo'](0x4c * _0x35360a, 0x3c * _0x35360a), _0x47db54['bezierCurveTo'](0x50 * _0x35360a, 0x42 * _0x35360a, 0x4b * _0x35360a, 0x4a * _0x35360a, 0x44 * _0x35360a, 0x4a * _0x35360a), _0x47db54['bezierCurveTo'](0x3c * _0x35360a, 0x40 * _0x35360a, 0x44 * _0x35360a, 0x3b * _0x35360a, 0x4c * _0x35360a, 0x3b * _0x35360a), _0x47db54['closePath'](), fill_path(_0x47db54, _0x41da5b[0x7], _0x41da5b[0x8], 0x5 * _0x35360a), _0xd29d29;
}

function create_seed(_0x380d41, _0x323264, _0x2c75b6) {
    var _0x233a7b = document['createElement']('canvas'),
        _0x45ad0e = _0x233a7b['getContext']('2d'),
        _0xee6288 = _0x380d41 * 0x46,
        _0x181733 = _0x380d41 * 0x5a,
        _0x3531a0 = _0x380d41 * 0x4,
        _0x294674 = _0x380d41 * 0x5,
        _0x18f709 = _0xee6288 / 0x2,
        _0x33fd3d = _0x181733 / 0x2,
        _0x2e2d43 = _0x380d41 * 0xa,
        _0x1c599f = _0x380d41 * 0x64,
        _0x42e8ae = _0x380d41 * 0x64,
        _0x265ae8 = _0x1c599f / 0x2,
        _0xa50ddb = _0x42e8ae / 0x2;
    return _0x233a7b['width'] = _0xee6288, _0x233a7b['height'] = _0x181733, _0x45ad0e['save'](), _0x45ad0e['translate'](-0x50 * _0x380d41, -0x46 * _0x380d41 + _0x294674), _0x45ad0e['globalAlpha'] = 0.5, _0x45ad0e['beginPath'](), _0x45ad0e['bezierCurveTo'](0x82 * _0x380d41, 0x4f * _0x380d41, 0x84 * _0x380d41, 0x56 * _0x380d41, 0x82 * _0x380d41, 0x5d * _0x380d41), _0x45ad0e['bezierCurveTo'](0x80 * _0x380d41, 0x64 * _0x380d41, 0x79 * _0x380d41, 0x6b * _0x380d41, 0x78 * _0x380d41, 0x6b * _0x380d41), _0x45ad0e['bezierCurveTo'](0x78 * _0x380d41, 0x6b * _0x380d41, 0x73 * _0x380d41, 0x62 * _0x380d41, 0x73 * _0x380d41, 0x5c * _0x380d41), _0x45ad0e['bezierCurveTo'](0x73 * _0x380d41, 0x56 * _0x380d41, 0x77 * _0x380d41, 0x4c * _0x380d41, 0x7f * _0x380d41, 0x49 * _0x380d41), _0x45ad0e['closePath'](), fill_path(_0x45ad0e, '#0d1b1c'), _0x45ad0e['restore'](), _0x45ad0e['save'](), _0x45ad0e['translate'](-0x50 * _0x380d41, -0x46 * _0x380d41 + _0x294674), _0x45ad0e['globalAlpha'] = 0.5, _0x45ad0e['beginPath'](), _0x45ad0e['bezierCurveTo'](0x70 * _0x380d41, 0x6d * _0x380d41, 0x6f * _0x380d41, 0x64 * _0x380d41, 0x6a * _0x380d41, 0x5d * _0x380d41), _0x45ad0e['bezierCurveTo'](0x68 * _0x380d41, 0x5a * _0x380d41, 0x5b * _0x380d41, 0x57 * _0x380d41, 0x5b * _0x380d41, 0x57 * _0x380d41), _0x45ad0e['bezierCurveTo'](0x5b * _0x380d41, 0x58 * _0x380d41, 0x5b * _0x380d41, 0x60 * _0x380d41, 0x5e * _0x380d41, 0x66 * _0x380d41), _0x45ad0e['bezierCurveTo'](0x61 * _0x380d41, 0x6c * _0x380d41, 0x6a * _0x380d41, 0x70 * _0x380d41, 0x71 * _0x380d41, 0x70 * _0x380d41), _0x45ad0e['closePath'](), fill_path(_0x45ad0e, '#0d1b1c'), _0x45ad0e['restore'](), _0x45ad0e['save'](), _0x45ad0e['translate'](-0x50 * _0x380d41, -0x46 * _0x380d41 + _0x294674), _0x45ad0e['globalAlpha'] = 0.5, _0x45ad0e['beginPath'](), _0x45ad0e['bezierCurveTo'](0x6c * _0x380d41, 0x78 * _0x380d41, 0x64 * _0x380d41, 0x77 * _0x380d41, 0x5b * _0x380d41, 0x7f * _0x380d41), _0x45ad0e['bezierCurveTo'](0x53 * _0x380d41, 0x86 * _0x380d41, 0x52 * _0x380d41, 0x92 * _0x380d41, 0x53 * _0x380d41, 0x92 * _0x380d41), _0x45ad0e['bezierCurveTo'](0x54 * _0x380d41, 0x92 * _0x380d41, 0x62 * _0x380d41, 0x8e * _0x380d41, 0x67 * _0x380d41, 0x8a * _0x380d41), _0x45ad0e['bezierCurveTo'](0x6b * _0x380d41, 0x87 * _0x380d41, 0x6e * _0x380d41, 0x82 * _0x380d41, 0x70 * _0x380d41, 0x79 * _0x380d41), _0x45ad0e['closePath'](), fill_path(_0x45ad0e, '#0d1b1c'), _0x45ad0e['restore'](), _0x45ad0e['save'](), _0x45ad0e['translate'](0x3 * _0x380d41, -0x5d * _0x380d41 + _0x294674), _0x45ad0e['rotate'](Math['PI'] / 0x5), _0x45ad0e['globalAlpha'] = 0.5, _0x45ad0e['beginPath'](), _0x45ad0e['bezierCurveTo'](0x82 * _0x380d41, 0x4f * _0x380d41, 0x84 * _0x380d41, 0x56 * _0x380d41, 0x82 * _0x380d41, 0x5d * _0x380d41), _0x45ad0e['bezierCurveTo'](0x80 * _0x380d41, 0x64 * _0x380d41, 0x79 * _0x380d41, 0x6b * _0x380d41, 0x78 * _0x380d41, 0x6b * _0x380d41), _0x45ad0e['bezierCurveTo'](0x78 * _0x380d41, 0x6b * _0x380d41, 0x73 * _0x380d41, 0x62 * _0x380d41, 0x73 * _0x380d41, 0x5c * _0x380d41), _0x45ad0e['bezierCurveTo'](0x73 * _0x380d41, 0x56 * _0x380d41, 0x77 * _0x380d41, 0x4c * _0x380d41, 0x7f * _0x380d41, 0x49 * _0x380d41), _0x45ad0e['closePath'](), fill_path(_0x45ad0e, '#0d1b1c'), _0x45ad0e['restore'](), _0x45ad0e['save'](), _0x45ad0e['translate'](-0x50 * _0x380d41, -0x46 * _0x380d41), _0x45ad0e['globalAlpha'] = 0x1, _0x45ad0e['beginPath'](), _0x45ad0e['bezierCurveTo'](0x82 * _0x380d41, 0x4f * _0x380d41, 0x84 * _0x380d41, 0x56 * _0x380d41, 0x82 * _0x380d41, 0x5d * _0x380d41), _0x45ad0e['bezierCurveTo'](0x80 * _0x380d41, 0x64 * _0x380d41, 0x79 * _0x380d41, 0x6b * _0x380d41, 0x78 * _0x380d41, 0x6b * _0x380d41), _0x45ad0e['bezierCurveTo'](0x78 * _0x380d41, 0x6b * _0x380d41, 0x73 * _0x380d41, 0x62 * _0x380d41, 0x73 * _0x380d41, 0x5c * _0x380d41), _0x45ad0e['bezierCurveTo'](0x73 * _0x380d41, 0x56 * _0x380d41, 0x77 * _0x380d41, 0x4c * _0x380d41, 0x7f * _0x380d41, 0x49 * _0x380d41), _0x45ad0e['closePath'](), fill_path(_0x45ad0e, _0x2c75b6[0x0], _0x2c75b6[0x1], _0x3531a0), _0x45ad0e['restore'](), _0x45ad0e['save'](), _0x45ad0e['translate'](-0x50 * _0x380d41, -0x46 * _0x380d41), _0x45ad0e['globalAlpha'] = 0x1, _0x45ad0e['beginPath'](), _0x45ad0e['bezierCurveTo'](0x70 * _0x380d41, 0x6d * _0x380d41, 0x6f * _0x380d41, 0x64 * _0x380d41, 0x6a * _0x380d41, 0x5d * _0x380d41), _0x45ad0e['bezierCurveTo'](0x68 * _0x380d41, 0x5a * _0x380d41, 0x5b * _0x380d41, 0x57 * _0x380d41, 0x5b * _0x380d41, 0x57 * _0x380d41), _0x45ad0e['bezierCurveTo'](0x5b * _0x380d41, 0x58 * _0x380d41, 0x5b * _0x380d41, 0x60 * _0x380d41, 0x5e * _0x380d41, 0x66 * _0x380d41), _0x45ad0e['bezierCurveTo'](0x61 * _0x380d41, 0x6c * _0x380d41, 0x6a * _0x380d41, 0x70 * _0x380d41, 0x71 * _0x380d41, 0x70 * _0x380d41), _0x45ad0e['closePath'](), fill_path(_0x45ad0e, _0x2c75b6[0x0], _0x2c75b6[0x1], _0x3531a0), _0x45ad0e['restore'](), _0x45ad0e['save'](), _0x45ad0e['translate'](-0x50 * _0x380d41, -0x46 * _0x380d41), _0x45ad0e['globalAlpha'] = 0x1, _0x45ad0e['beginPath'](), _0x45ad0e['bezierCurveTo'](0x6c * _0x380d41, 0x78 * _0x380d41, 0x64 * _0x380d41, 0x77 * _0x380d41, 0x5b * _0x380d41, 0x7f * _0x380d41), _0x45ad0e['bezierCurveTo'](0x53 * _0x380d41, 0x86 * _0x380d41, 0x52 * _0x380d41, 0x92 * _0x380d41, 0x53 * _0x380d41, 0x92 * _0x380d41), _0x45ad0e['bezierCurveTo'](0x54 * _0x380d41, 0x92 * _0x380d41, 0x62 * _0x380d41, 0x8e * _0x380d41, 0x67 * _0x380d41, 0x8a * _0x380d41), _0x45ad0e['bezierCurveTo'](0x6b * _0x380d41, 0x87 * _0x380d41, 0x6e * _0x380d41, 0x82 * _0x380d41, 0x70 * _0x380d41, 0x79 * _0x380d41), _0x45ad0e['closePath'](), fill_path(_0x45ad0e, _0x2c75b6[0x0], _0x2c75b6[0x1], _0x3531a0), _0x45ad0e['restore'](), _0x45ad0e['save'](), _0x45ad0e['translate'](0x3 * _0x380d41, -0x5d * _0x380d41), _0x45ad0e['rotate'](Math['PI'] / 0x5), _0x45ad0e['globalAlpha'] = 0x1, _0x45ad0e['beginPath'](), _0x45ad0e['bezierCurveTo'](0x82 * _0x380d41, 0x4f * _0x380d41, 0x84 * _0x380d41, 0x56 * _0x380d41, 0x82 * _0x380d41, 0x5d * _0x380d41), _0x45ad0e['bezierCurveTo'](0x80 * _0x380d41, 0x64 * _0x380d41, 0x79 * _0x380d41, 0x6b * _0x380d41, 0x78 * _0x380d41, 0x6b * _0x380d41), _0x45ad0e['bezierCurveTo'](0x78 * _0x380d41, 0x6b * _0x380d41, 0x73 * _0x380d41, 0x62 * _0x380d41, 0x73 * _0x380d41, 0x5c * _0x380d41), _0x45ad0e['bezierCurveTo'](0x73 * _0x380d41, 0x56 * _0x380d41, 0x77 * _0x380d41, 0x4c * _0x380d41, 0x7f * _0x380d41, 0x49 * _0x380d41), _0x45ad0e['closePath'](), fill_path(_0x45ad0e, _0x2c75b6[0x0], _0x2c75b6[0x1], _0x3531a0), _0x45ad0e['restore'](), _0x233a7b;
}

function create_info_box(_0x8b79e0) {
    var _0x525999 = document['createElement']('canvas'),
        _0x103607 = _0x525999['getContext']('2d'),
        _0x38f0da = LANG[_0x8b79e0];
    _0x103607['font'] = '20px\x20Baloo\x20Paaji';
    var _0x2b1629 = 0x0;
    if (_0x38f0da['length'] >= 0x1) _0x2b1629 = Math['max'](0x0, _0x103607['measureText'](_0x38f0da[0x0])['width']);
    _0x103607['font'] = '17px\x20Baloo\x20Paaji';
    if (_0x38f0da['length'] >= 0x2) _0x2b1629 = Math['max'](_0x2b1629, _0x103607['measureText'](_0x38f0da[0x1])['width']);
    _0x103607['font'] = '14px\x20Baloo\x20Paaji';
    for (i = 0x2; i < _0x38f0da['length']; i++) _0x2b1629 = Math['max'](_0x2b1629, _0x103607['measureText'](_0x38f0da[i])['width']);
    var _0x15dc67 = _0x2b1629 + 0x23,
        _0x461f3b = 0x1a,
        _0x1eb71d = 0x0;
    if (_0x38f0da['length'] === 0x1) _0x1eb71d = 0x37;
    else {
        if (_0x38f0da['length'] === 0x2) _0x1eb71d = 0x55;
        else _0x1eb71d = (_0x38f0da['length'] - 0x2) * _0x461f3b + 0x55;
    }
    _0x525999['width'] = _0x15dc67, _0x525999['height'] = _0x1eb71d, round_rect(_0x103607, 0x0, 0x0, _0x15dc67, _0x1eb71d, 0xa), _0x103607['fillStyle'] = '#000000', _0x103607['globalAlpha'] = 0.5, _0x103607['fill']();
    _0x38f0da['length'] >= 0x1 && (_0x103607['textBaseline'] = 'middle', _0x103607['font'] = '20px\x20Baloo\x20Paaji', _0x103607['globalAlpha'] = 0x1, _0x103607['fillStyle'] = '#e2c340', _0x103607['fillText'](_0x38f0da[0x0], 0xf, 0x1c));
    _0x38f0da['length'] >= 0x2 && (_0x103607['font'] = '17px\x20Baloo\x20Paaji', _0x103607['fillStyle'] = '#ffffff', _0x103607['fillText'](_0x38f0da[0x1], 0xf, 0x37), _0x1eb71d = 0x37);
    if (_0x38f0da['length'] >= 0x3) {
        _0x103607['font'] = '14px\x20Baloo\x20Paaji', _0x103607['globalAlpha'] = 0.7;
        for (i = 0x2; i < _0x38f0da['length']; i++) {
            _0x103607['fillText'](_0x38f0da[i], 0xf, _0x1eb71d + 0x1c), _0x1eb71d += _0x461f3b;
        }
    }
    return _0x525999;
}

function create_welcome_text(_0x356ea1) {
    var _0x246348 = document['createElement']('canvas'),
        _0x5bb725 = _0x246348['getContext']('2d');
    _0x5bb725['lineJoin'] = 'round';
    while (_0x356ea1['indexOf']('\x5cn') !== -0x1) _0x356ea1 = _0x356ea1['replace']('\x5cn', '\x0a');
    _0x356ea1 = _0x356ea1['split']('\x0a'), color = [];
    var _0x15563b = 0xe,
        _0x53abf3 = _0x356ea1['length'] * (_0x15563b + 0x4) + 0xa,
        _0x457be7 = 0x0;
    _0x5bb725['font'] = _0x15563b + 'px\x20Baloo\x20Paaji';
    for (var _0x4102e9 = 0x0; _0x4102e9 < _0x356ea1['length']; _0x4102e9++) {
        if (_0x356ea1[_0x4102e9]['charAt'](0x0) === '#') color[_0x4102e9] = _0x356ea1[_0x4102e9]['substring'](0x0, 0x7), _0x356ea1[_0x4102e9] = _0x356ea1[_0x4102e9]['substring'](0x8);
        else color[_0x4102e9] = '#FFFFFF';
        _0x457be7 = Math['max'](_0x5bb725['measureText'](_0x356ea1[_0x4102e9])['width'] + 0x10, _0x457be7);
    }
    _0x246348['height'] = _0x53abf3, _0x246348['width'] = _0x457be7;
    for (var _0x4102e9 = 0x0; _0x4102e9 < _0x356ea1['length']; _0x4102e9++) {
        var _0x3a9ac8 = create_text(0x1, _0x356ea1[_0x4102e9], _0x15563b, color[_0x4102e9], null, null, null, null, null, '#000', 0x6);
        _0x5bb725['drawImage'](_0x3a9ac8, 0x8, _0x4102e9 * (_0x15563b + 0x4) + 0x5);
    }
    return _0x246348;
};

function create_text(_0x5663b7, _0x3b65e6, _0xc8dd07, _0x55836b, _0x205ac0, _0xa63548, _0x36d978, _0x29ac1a, _0x27c1ce, _0x12755e, _0x44deb7) {
    if (_0x44deb7 === undefined) _0x44deb7 = 0x0;
    var _0x447881 = document['createElement']('canvas'),
        _0x48c5f9 = _0x447881['getContext']('2d');
    _0xa63548 = !_0xa63548 ? 0x0 : _0xa63548 * _0x5663b7;
    var _0x33f245 = Math['floor'](_0x5663b7 * _0xc8dd07);
    _0x48c5f9['font'] = _0x33f245 + 'px\x20Baloo\x20Paaji', _0x48c5f9['lineJoin'] = 'round', _0x29ac1a = _0x29ac1a * _0x5663b7;
    var _0x1457dd = _0x36d978 ? _0x29ac1a * 0x2 : 0x0;
    if (_0x27c1ce) var _0x3683f8 = Math['min'](_0x48c5f9['measureText'](_0x3b65e6)['width'] + 0x2 * _0x5663b7 + _0x1457dd, _0x27c1ce);
    else var _0x3683f8 = _0x48c5f9['measureText'](_0x3b65e6)['width'] + 0x2 * _0x5663b7 + _0x1457dd + _0x44deb7 * _0x5663b7 * 0x2;
    var _0x33f245 = (_0x33f245 + _0xa63548 + _0x44deb7) * _0x5663b7 + _0x1457dd;
    return _0x447881['width'] = _0x3683f8, _0x447881['height'] = _0x33f245, _0x36d978 && (_0x48c5f9['fillStyle'] = _0x36d978, round_rect(_0x48c5f9, 0x0, 0x0, _0x3683f8, _0x33f245, _0x29ac1a * 0x2), _0x48c5f9['fill'](), _0x48c5f9['translate'](_0x29ac1a, _0x29ac1a)), _0x48c5f9['textBaseline'] = 'middle', _0x48c5f9['font'] = _0xc8dd07 + 'px\x20Baloo\x20Paaji', _0x48c5f9['lineJoin'] = 'round', _0x205ac0 && (_0x48c5f9['beginPath'](), _0x48c5f9['fillStyle'] = _0x205ac0, _0x48c5f9['fillText'](_0x3b65e6, 0x0, _0x33f245 / 0x2 + _0xa63548 - _0x1457dd / 0x2, _0x3683f8)), _0x48c5f9['beginPath'](), _0x12755e && (_0x48c5f9['strokeStyle'] = _0x12755e, _0x48c5f9['lineWidth'] = _0x44deb7, _0x48c5f9['strokeText'](_0x3b65e6, _0x44deb7, (_0x33f245 - _0x1457dd) / 0x2, _0x3683f8)), _0x48c5f9['fillStyle'] = _0x55836b, _0x48c5f9['fillText'](_0x3b65e6, _0x44deb7, (_0x33f245 - _0x1457dd) / 0x2, _0x3683f8), _0x447881;
}

function create_stone(_0x4e35b5, _0x58268e, _0x11d4e9) {
    var _0x562e51 = document['createElement']('canvas'),
        _0x30b570 = _0x562e51['getContext']('2d'),
        _0x31b9b3 = _0x4e35b5 * 0xdc,
        _0x4a891e = _0x4e35b5 * 0xe6,
        _0x5c95ee = _0x4e35b5 * 0x64,
        _0x3a75 = _0x5c95ee / 0x4,
        _0x5948ca = _0x4e35b5 * 0x14;
    return _0x562e51['width'] = _0x31b9b3, _0x562e51['height'] = _0x4a891e, _0x30b570['translate'](_0x31b9b3 / 0x2, _0x4a891e / 0x2 + _0x5948ca), _0x30b570['globalAlpha'] = 0.5, round_regular_polygon(_0x30b570, 0x7, _0x5c95ee, _0x3a75), fill_path(_0x30b570, _0x11d4e9[0x0]), _0x30b570['globalAlpha'] = 0x1, _0x30b570['translate'](0x0, -_0x5948ca), round_regular_polygon(_0x30b570, 0x7, _0x5c95ee, _0x3a75), fill_path(_0x30b570, _0x11d4e9[0x1]), round_regular_polygon(_0x30b570, 0x6, _0x5c95ee * 0.65, _0x3a75 * 0.65), fill_path(_0x30b570, _0x11d4e9[0x2]), _0x562e51;
}

function create_cave_stone(_0x3fb60a, _0x29a8ee, _0x338f37, _0xd263ca) {
    var _0x39c019 = document['createElement']('canvas'),
        _0x1081df = _0x39c019['getContext']('2d'),
        _0x46946b = _0x3fb60a * 0xdc,
        _0x2a0706 = _0x3fb60a * 0xdc,
        _0x131b47 = _0x3fb60a * 0x64,
        _0xff1ea5 = _0x131b47 / 0x4,
        _0x290c83 = _0x3fb60a * 0x14;
    _0x39c019['width'] = _0x46946b, _0x39c019['height'] = _0x2a0706, _0x1081df['translate'](_0x46946b / 0x2, _0x2a0706 / 0x2), _0x1081df['globalAlpha'] = _0x29a8ee ? 0.5 : 0x1;
    if (!_0x29a8ee) _0x1081df['translate'](0x0 * _0x3fb60a, -0x8 * _0x3fb60a);
    round_regular_polygon(_0x1081df, 0x7, _0x131b47, _0xff1ea5);
    _0x29a8ee ? fill_path(_0x1081df, _0x338f37[0x0]) : fill_path(_0x1081df, _0x338f37[0x1]);
    _0x1081df['globalAlpha'] = 0x1;
    if (_0xd263ca == 0x0) round_regular_polygon(_0x1081df, 0x6, _0x131b47 * 0.65, _0xff1ea5 * 0.65), fill_path(_0x1081df, _0x338f37[0x2]);
    else _0xd263ca == 0x1 && (_0x1081df['translate'](0x14 * _0x3fb60a, 0x14 * _0x3fb60a), round_regular_polygon(_0x1081df, 0x6, _0x131b47 * 0.45, _0xff1ea5 * 0.4), fill_path(_0x1081df, _0x338f37[0x2]));
    return _0x39c019;
}

function create_gold(_0x5bcd03, _0x36bb27, _0x425196) {
    var _0x9c0f59 = document['createElement']('canvas'),
        _0x5de1b4 = _0x9c0f59['getContext']('2d'),
        _0x54e068 = _0x5bcd03 * 0x78,
        _0x1d2332 = _0x5bcd03 * 0x96,
        _0x40bf12 = _0x5bcd03 * 0x3c,
        _0x474529 = _0x40bf12 / 0x4,
        _0x2d30a9 = _0x5bcd03 * 0xf;
    return _0x9c0f59['width'] = _0x54e068, _0x9c0f59['height'] = _0x1d2332, _0x5de1b4['save'](), _0x5de1b4['translate'](_0x54e068 / 0x2 + 0x0 * _0x5bcd03, _0x1d2332 / 0x2 + 0x0 * _0x5bcd03 + _0x2d30a9), _0x5de1b4['rotate'](Math['PI'] / 0x3), _0x5de1b4['globalAlpha'] = 0.5, round_regular_polygon(_0x5de1b4, 0x8, _0x40bf12, _0x474529), fill_path(_0x5de1b4, _0x425196[0x0]), _0x5de1b4['restore'](), _0x5de1b4['save'](), _0x5de1b4['translate'](_0x54e068 / 0x2 - 0xb * _0x5bcd03, _0x1d2332 / 0x2 + 0xc * _0x5bcd03), _0x5de1b4['globalAlpha'] = 0x1, _0x5de1b4['rotate'](Math['PI'] / 0x3), _0x5de1b4['translate'](0x0, -_0x2d30a9), round_regular_polygon(_0x5de1b4, 0x8, _0x40bf12, _0x474529), fill_path(_0x5de1b4, _0x425196[0x1]), _0x5de1b4['restore'](), _0x5de1b4['save'](), _0x5de1b4['translate'](_0x54e068 / 0x2 - 0x9 * _0x5bcd03, _0x1d2332 / 0x2 - 0xc * _0x5bcd03), _0x5de1b4['rotate'](Math['PI'] / 2.8), round_regular_polygon(_0x5de1b4, 0x5, _0x40bf12 * 0.5, _0x474529 * 0.4), fill_path(_0x5de1b4, _0x425196[0x2]), _0x5de1b4['restore'](), _0x5de1b4['save'](), _0x5de1b4['translate'](_0x54e068 / 0x2 + 0x13 * _0x5bcd03, _0x1d2332 / 0x2 + 0x5 * _0x5bcd03), _0x5de1b4['rotate'](Math['PI'] / 0x1), round_regular_polygon(_0x5de1b4, 0x5, _0x40bf12 * 0.5, _0x474529 * 0.4), fill_path(_0x5de1b4, _0x425196[0x2]), _0x5de1b4['restore'](), _0x5de1b4['save'](), _0x5de1b4['translate'](_0x54e068 / 0x2 - 0x8 * _0x5bcd03, _0x1d2332 / 0x2 + 0x14 * _0x5bcd03), _0x5de1b4['rotate'](Math['PI'] / 2.25), round_regular_polygon(_0x5de1b4, 0x5, _0x40bf12 * 0.5, _0x474529 * 0.4), fill_path(_0x5de1b4, _0x425196[0x2]), _0x5de1b4['restore'](), _0x9c0f59;
}

function create_diamond(_0x271ca5, _0x59c8c2, _0x46c3e5) {
    var _0x33cccb = document['createElement']('canvas'),
        _0x2b1408 = _0x33cccb['getContext']('2d'),
        _0x499d1d = _0x271ca5 * 0xb4,
        _0x40cecf = _0x271ca5 * 0xd2,
        _0x5c74b0 = _0x271ca5 * 0x3c,
        _0x12d108 = _0x5c74b0 / 0x4,
        _0x35739d = _0x271ca5 * 0x14;
    _0x33cccb['width'] = _0x499d1d, _0x33cccb['height'] = _0x40cecf, _0x2b1408['save'](), _0x2b1408['translate'](_0x499d1d / 0x2 - 0x0 * _0x271ca5, _0x40cecf / 0x2 - 0x23 * _0x271ca5 + _0x35739d), _0x2b1408['rotate'](Math['PI'] / -1.8), _0x2b1408['globalAlpha'] = 0.5, _0x2b1408['translate'](0x0 * _0x271ca5, -0x14 * _0x271ca5), round_regular_polygon(_0x2b1408, 0x5, _0x5c74b0, _0x12d108), fill_path(_0x2b1408, _0x46c3e5[0x0]), _0x2b1408['restore'](), _0x2b1408['save'](), _0x2b1408['translate'](_0x499d1d / 0x2 + 0xa * _0x271ca5, _0x40cecf / 0x2 + 0xf * _0x271ca5 + _0x35739d), _0x2b1408['rotate'](Math['PI'] / 0x2), _0x2b1408['globalAlpha'] = 0.5, _0x2b1408['translate'](0x0 * _0x271ca5, -0x14 * _0x271ca5), round_regular_polygon(_0x2b1408, 0x5, _0x5c74b0, _0x12d108), fill_path(_0x2b1408, _0x46c3e5[0x0]), _0x2b1408['restore'](), _0x2b1408['save'](), _0x2b1408['translate'](_0x499d1d / 0x2 - 0x32 * _0x271ca5, _0x40cecf / 0x2 + 0x28 * _0x271ca5 + _0x35739d), _0x2b1408['rotate'](Math['PI'] / 0x3), _0x2b1408['globalAlpha'] = 0.5, _0x2b1408['translate'](0x0, -0x14 * _0x271ca5), round_regular_polygon(_0x2b1408, 0x5, _0x5c74b0, _0x12d108), fill_path(_0x2b1408, _0x46c3e5[0x0]), _0x2b1408['restore'](), _0x2b1408['save'](), _0x2b1408['translate'](_0x499d1d / 0x2 - 0x0 * _0x271ca5, _0x40cecf / 0x2 - 0x23 * _0x271ca5), _0x2b1408['rotate'](Math['PI'] / -1.8), _0x2b1408['globalAlpha'] = 0x1, _0x2b1408['translate'](0x0 * _0x271ca5, -0x14 * _0x271ca5), round_regular_polygon(_0x2b1408, 0x5, _0x5c74b0, _0x12d108), fill_path(_0x2b1408, _0x46c3e5[0x1]), _0x2b1408['restore'](), _0x2b1408['save'](), _0x2b1408['translate'](_0x499d1d / 0x2 + 0xa * _0x271ca5, _0x40cecf / 0x2 + 0xf * _0x271ca5), _0x2b1408['rotate'](Math['PI'] / 0x2), _0x2b1408['globalAlpha'] = 0x1, _0x2b1408['translate'](0x0, -0x14 * _0x271ca5), round_regular_polygon(_0x2b1408, 0x5, _0x5c74b0, _0x12d108), fill_path(_0x2b1408, _0x46c3e5[0x1]), _0x2b1408['restore'](), _0x2b1408['save'](), _0x2b1408['translate'](_0x499d1d / 0x2 - 0x32 * _0x271ca5, _0x40cecf / 0x2 + 0x28 * _0x271ca5), _0x2b1408['rotate'](Math['PI'] / 0x3), _0x2b1408['globalAlpha'] = 0x1, _0x2b1408['translate'](0x0, -0x14 * _0x271ca5), round_regular_polygon(_0x2b1408, 0x5, _0x5c74b0, _0x12d108), fill_path(_0x2b1408, _0x46c3e5[0x1]), _0x2b1408['restore']();
    var _0x5c74b0 = _0x271ca5 * 0x1e,
        _0x12d108 = _0x5c74b0 / 0x4;
    return _0x2b1408['save'](), _0x2b1408['translate'](_0x499d1d / 0x2 + 0x5 * _0x271ca5, _0x40cecf / 0x2 - 0x14 * _0x271ca5), _0x2b1408['rotate'](Math['PI'] / -1.8), _0x2b1408['globalAlpha'] = 0x1, _0x2b1408['translate'](0x0, -0x14 * _0x271ca5), round_regular_polygon(_0x2b1408, 0x5, _0x5c74b0, _0x12d108), fill_path(_0x2b1408, _0x46c3e5[0x2]), _0x2b1408['restore'](), _0x2b1408['save'](), _0x2b1408['translate'](_0x499d1d / 0x2 + 0x0 * _0x271ca5, _0x40cecf / 0x2 + 0xa * _0x271ca5), _0x2b1408['rotate'](Math['PI'] / 0x2), _0x2b1408['globalAlpha'] = 0x1, _0x2b1408['translate'](0x0, -0x14 * _0x271ca5), round_regular_polygon(_0x2b1408, 0x5, _0x5c74b0, _0x12d108), fill_path(_0x2b1408, _0x46c3e5[0x2]), _0x2b1408['restore'](), _0x2b1408['save'](), _0x2b1408['translate'](_0x499d1d / 0x2 - 0x2d * _0x271ca5, _0x40cecf / 0x2 + 0x23 * _0x271ca5), _0x2b1408['rotate'](Math['PI'] / 0x3), _0x2b1408['globalAlpha'] = 0x1, _0x2b1408['translate'](0x0, -0x14 * _0x271ca5), round_regular_polygon(_0x2b1408, 0x5, _0x5c74b0, _0x12d108), fill_path(_0x2b1408, _0x46c3e5[0x2]), _0x2b1408['restore'](), circle(_0x2b1408, _0x499d1d / 0x2 - 0x7 * _0x271ca5, _0x40cecf / 0x2 + 0x7 * _0x271ca5, 0x5), fill_path(_0x2b1408, _0x46c3e5[0x2]), _0x33cccb;
}

function create_plant(_0xd19106, _0x467d76, _0x441d4c) {
    var _0x4409ed = document['createElement']('canvas'),
        _0x2648dc = _0x4409ed['getContext']('2d'),
        _0x551fd6 = _0xd19106 * 0x8c,
        _0x5e2848 = _0xd19106 * 0x96,
        _0x24532f = _0xd19106 * 0xa,
        _0x4a460d = _0xd19106 * 0x4;
    return _0x4409ed['width'] = _0x551fd6, _0x4409ed['height'] = _0x5e2848, _0x2648dc['translate'](-0x32 * _0xd19106, -0x26 * _0xd19106 + _0x24532f), _0x2648dc['globalAlpha'] = _0x467d76 ? 0.5 : 0x1, _0x2648dc['beginPath'](), _0x2648dc['bezierCurveTo'](0xa0 * _0xd19106, 0x41 * _0xd19106, 0xa0 * _0xd19106, 0x55 * _0xd19106, 0x98 * _0xd19106, 0x5f * _0xd19106), _0x2648dc['bezierCurveTo'](0x98 * _0xd19106, 0x5f * _0xd19106, 0xad * _0xd19106, 0x5e * _0xd19106, 0xbb * _0xd19106, 0x66 * _0xd19106), _0x2648dc['bezierCurveTo'](0xbb * _0xd19106, 0x66 * _0xd19106, 0xb4 * _0xd19106, 0x78 * _0xd19106, 0x9b * _0xd19106, 0x7e * _0xd19106), _0x2648dc['bezierCurveTo'](0x9a * _0xd19106, 0x7e * _0xd19106, 0xa6 * _0xd19106, 0x8a * _0xd19106, 0xa9 * _0xd19106, 0x94 * _0xd19106), _0x2648dc['bezierCurveTo'](0xa9 * _0xd19106, 0x94 * _0xd19106, 0x94 * _0xd19106, 0x98 * _0xd19106, 0x85 * _0xd19106, 0x8c * _0xd19106), _0x2648dc['bezierCurveTo'](0x85 * _0xd19106, 0x8c * _0xd19106, 0x86 * _0xd19106, 0xa0 * _0xd19106, 0x7a * _0xd19106, 0xaf * _0xd19106), _0x2648dc['bezierCurveTo'](0x7a * _0xd19106, 0xaf * _0xd19106, 0x6b * _0xd19106, 0xa2 * _0xd19106, 0x6b * _0xd19106, 0x90 * _0xd19106), _0x2648dc['bezierCurveTo'](0x6b * _0xd19106, 0x90 * _0xd19106, 0x62 * _0xd19106, 0xa4 * _0xd19106, 0x49 * _0xd19106, 0xa7 * _0xd19106), _0x2648dc['bezierCurveTo'](0x49 * _0xd19106, 0xa7 * _0xd19106, 0x48 * _0xd19106, 0x86 * _0xd19106, 0x5a * _0xd19106, 0x7f * _0xd19106), _0x2648dc['bezierCurveTo'](0x5a * _0xd19106, 0x7f * _0xd19106, 0x46 * _0xd19106, 0x86 * _0xd19106, 0x37 * _0xd19106, 0x7b * _0xd19106), _0x2648dc['bezierCurveTo'](0x37 * _0xd19106, 0x7b * _0xd19106, 0x3a * _0xd19106, 0x73 * _0xd19106, 0x4b * _0xd19106, 0x68 * _0xd19106), _0x2648dc['bezierCurveTo'](0x4b * _0xd19106, 0x68 * _0xd19106, 0x42 * _0xd19106, 0x60 * _0xd19106, 0x3d * _0xd19106, 0x4d * _0xd19106), _0x2648dc['bezierCurveTo'](0x3d * _0xd19106, 0x4d * _0xd19106, 0x53 * _0xd19106, 0x4a * _0xd19106, 0x66 * _0xd19106, 0x59 * _0xd19106), _0x2648dc['bezierCurveTo'](0x66 * _0xd19106, 0x59 * _0xd19106, 0x5c * _0xd19106, 0x42 * _0xd19106, 0x6e * _0xd19106, 0x29 * _0xd19106), _0x2648dc['bezierCurveTo'](0x6f * _0xd19106, 0x28 * _0xd19106, 0x82 * _0xd19106, 0x36 * _0xd19106, 0x82 * _0xd19106, 0x52 * _0xd19106), _0x2648dc['bezierCurveTo'](0x82 * _0xd19106, 0x52 * _0xd19106, 0x8f * _0xd19106, 0x43 * _0xd19106, 0x9f * _0xd19106, 0x41 * _0xd19106), _0x2648dc['closePath'](), fill_path(_0x2648dc, _0x441d4c[0x0]), _0x2648dc['translate'](0x0, 0x0 - _0x24532f), _0x2648dc['globalAlpha'] = 0x1, _0x2648dc['beginPath'](), _0x2648dc['bezierCurveTo'](0xa0 * _0xd19106, 0x41 * _0xd19106, 0xa0 * _0xd19106, 0x55 * _0xd19106, 0x98 * _0xd19106, 0x5f * _0xd19106), _0x2648dc['bezierCurveTo'](0x98 * _0xd19106, 0x5f * _0xd19106, 0xad * _0xd19106, 0x5e * _0xd19106, 0xbb * _0xd19106, 0x66 * _0xd19106), _0x2648dc['bezierCurveTo'](0xbb * _0xd19106, 0x66 * _0xd19106, 0xb4 * _0xd19106, 0x78 * _0xd19106, 0x9b * _0xd19106, 0x7e * _0xd19106), _0x2648dc['bezierCurveTo'](0x9a * _0xd19106, 0x7e * _0xd19106, 0xa6 * _0xd19106, 0x8a * _0xd19106, 0xa9 * _0xd19106, 0x94 * _0xd19106), _0x2648dc['bezierCurveTo'](0xa9 * _0xd19106, 0x94 * _0xd19106, 0x94 * _0xd19106, 0x98 * _0xd19106, 0x85 * _0xd19106, 0x8c * _0xd19106), _0x2648dc['bezierCurveTo'](0x85 * _0xd19106, 0x8c * _0xd19106, 0x86 * _0xd19106, 0xa0 * _0xd19106, 0x7a * _0xd19106, 0xaf * _0xd19106), _0x2648dc['bezierCurveTo'](0x7a * _0xd19106, 0xaf * _0xd19106, 0x6b * _0xd19106, 0xa2 * _0xd19106, 0x6b * _0xd19106, 0x90 * _0xd19106), _0x2648dc['bezierCurveTo'](0x6b * _0xd19106, 0x90 * _0xd19106, 0x62 * _0xd19106, 0xa4 * _0xd19106, 0x49 * _0xd19106, 0xa7 * _0xd19106), _0x2648dc['bezierCurveTo'](0x49 * _0xd19106, 0xa7 * _0xd19106, 0x48 * _0xd19106, 0x86 * _0xd19106, 0x5a * _0xd19106, 0x7f * _0xd19106), _0x2648dc['bezierCurveTo'](0x5a * _0xd19106, 0x7f * _0xd19106, 0x46 * _0xd19106, 0x86 * _0xd19106, 0x37 * _0xd19106, 0x7b * _0xd19106), _0x2648dc['bezierCurveTo'](0x37 * _0xd19106, 0x7b * _0xd19106, 0x3a * _0xd19106, 0x73 * _0xd19106, 0x4b * _0xd19106, 0x68 * _0xd19106), _0x2648dc['bezierCurveTo'](0x4b * _0xd19106, 0x68 * _0xd19106, 0x42 * _0xd19106, 0x60 * _0xd19106, 0x3d * _0xd19106, 0x4d * _0xd19106), _0x2648dc['bezierCurveTo'](0x3d * _0xd19106, 0x4d * _0xd19106, 0x53 * _0xd19106, 0x4a * _0xd19106, 0x66 * _0xd19106, 0x59 * _0xd19106), _0x2648dc['bezierCurveTo'](0x66 * _0xd19106, 0x59 * _0xd19106, 0x5c * _0xd19106, 0x42 * _0xd19106, 0x6e * _0xd19106, 0x29 * _0xd19106), _0x2648dc['bezierCurveTo'](0x6f * _0xd19106, 0x28 * _0xd19106, 0x82 * _0xd19106, 0x36 * _0xd19106, 0x82 * _0xd19106, 0x52 * _0xd19106), _0x2648dc['bezierCurveTo'](0x82 * _0xd19106, 0x52 * _0xd19106, 0x8f * _0xd19106, 0x43 * _0xd19106, 0x9f * _0xd19106, 0x41 * _0xd19106), _0x2648dc['closePath'](), fill_path(_0x2648dc, _0x441d4c[0x1], _0x441d4c[0x2], _0x4a460d), _0x4409ed;
}

function create_fruit(_0x23894b, _0x4a961a, _0x42a7e5) {
    var _0x25644d = document['createElement']('canvas'),
        _0x59f752 = _0x25644d['getContext']('2d'),
        _0x31a067 = _0x23894b * 0x12,
        _0x3ccbf2 = _0x23894b * 0x12;
    _0x25644d['width'] = _0x31a067, _0x25644d['height'] = _0x3ccbf2;
    var _0x4ad5f7 = _0x23894b * 0x9,
        _0x5c9f3c = _0x23894b * 0x9,
        _0x4cb0ba = _0x23894b * 0x8;
    _0x59f752['save'](), _0x59f752['translate'](_0x4ad5f7, _0x5c9f3c), _0x59f752['globalAlpha'] = 0x1, circle(_0x59f752, 0x0, 0x0, _0x4cb0ba), fill_path(_0x59f752, _0x42a7e5[0x0]);
    var _0x4cb0ba = 0x3 * _0x23894b,
        _0x4ad5f7 = 0x0,
        _0x5c9f3c = -0x3 * _0x23894b;
    return _0x59f752['translate'](_0x4ad5f7, _0x5c9f3c), _0x59f752['globalAlpha'] = 0x1, circle(_0x59f752, 0x0, 0x0, _0x4cb0ba), fill_path(_0x59f752, _0x42a7e5[0x1]), _0x59f752['restore'](), _0x25644d;
}

function create_leaf(_0x35aaa3, _0x540ea1) {
    var _0x5cd339 = document['createElement']('canvas'),
        _0x925745 = _0x5cd339['getContext']('2d');
    return _0x5cd339['width'] = 0x50 * _0x35aaa3, _0x5cd339['height'] = 0x64 * _0x35aaa3, _0x925745['scale'](0.5, 0.5), _0x925745['translate'](0xa, 0xf), _0x925745['globalAlpha'] = 0.5, _0x925745['beginPath'](), _0x925745['lineCap'] = 'round', _0x925745['lineJoin'] = 'round', _0x925745['moveTo'](0x2f * _0x35aaa3, 0x5 * _0x35aaa3), _0x925745['bezierCurveTo'](0x13 * _0x35aaa3, 0x1e * _0x35aaa3, 0xc * _0x35aaa3, 0x2a * _0x35aaa3, 0xa * _0x35aaa3, 0x37 * _0x35aaa3), _0x925745['bezierCurveTo'](0xb * _0x35aaa3, 0x4b * _0x35aaa3, 0x1b * _0x35aaa3, 0x4c * _0x35aaa3, 0x24 * _0x35aaa3, 0x48 * _0x35aaa3), _0x925745['bezierCurveTo'](0x34 * _0x35aaa3, 0x3c * _0x35aaa3, 0x35 * _0x35aaa3, 0x2e * _0x35aaa3, 0x36 * _0x35aaa3, 0x1f * _0x35aaa3), _0x925745['bezierCurveTo'](0x35 * _0x35aaa3, 0xe * _0x35aaa3, 0x32 * _0x35aaa3, 0x9 * _0x35aaa3, 0x30 * _0x35aaa3, 0x6 * _0x35aaa3), _0x925745['closePath'](), fill_path(_0x925745, _0x540ea1[0x0]), _0x925745['beginPath'](), _0x925745['lineCap'] = 'round', _0x925745['lineJoin'] = 'round', _0x925745['moveTo'](0x11 * _0x35aaa3, 0x46 * _0x35aaa3), _0x925745['bezierCurveTo'](0x12 * _0x35aaa3, 0x4d * _0x35aaa3, 0xa * _0x35aaa3, 0x53 * _0x35aaa3, 0x4 * _0x35aaa3, 0x57 * _0x35aaa3), fill_path(_0x925745, undefined, _0x540ea1[0x0], _0x35aaa3 * 0xa), _0x925745['translate'](0x0, -0xa), _0x925745['globalAlpha'] = 0x1, _0x925745['beginPath'](), _0x925745['lineCap'] = 'round', _0x925745['lineJoin'] = 'round', _0x925745['moveTo'](0x2f * _0x35aaa3, 0x5 * _0x35aaa3), _0x925745['bezierCurveTo'](0x13 * _0x35aaa3, 0x1e * _0x35aaa3, 0xc * _0x35aaa3, 0x2a * _0x35aaa3, 0xa * _0x35aaa3, 0x37 * _0x35aaa3), _0x925745['bezierCurveTo'](0xb * _0x35aaa3, 0x4b * _0x35aaa3, 0x1b * _0x35aaa3, 0x4c * _0x35aaa3, 0x24 * _0x35aaa3, 0x48 * _0x35aaa3), _0x925745['bezierCurveTo'](0x34 * _0x35aaa3, 0x3c * _0x35aaa3, 0x35 * _0x35aaa3, 0x2e * _0x35aaa3, 0x36 * _0x35aaa3, 0x1f * _0x35aaa3), _0x925745['bezierCurveTo'](0x35 * _0x35aaa3, 0xe * _0x35aaa3, 0x32 * _0x35aaa3, 0x9 * _0x35aaa3, 0x30 * _0x35aaa3, 0x6 * _0x35aaa3), _0x925745['closePath'](), fill_path(_0x925745, _0x540ea1[0x1], _0x540ea1[0x2], 0x8 * _0x35aaa3), _0x925745['beginPath'](), _0x925745['lineCap'] = 'round', _0x925745['lineJoin'] = 'round', _0x925745['moveTo'](0x11 * _0x35aaa3, 0x46 * _0x35aaa3), _0x925745['bezierCurveTo'](0x12 * _0x35aaa3, 0x4d * _0x35aaa3, 0xa * _0x35aaa3, 0x53 * _0x35aaa3, 0x4 * _0x35aaa3, 0x57 * _0x35aaa3), fill_path(_0x925745, undefined, _0x540ea1[0x2], 0x8 * _0x35aaa3), _0x925745['globalAlpha'] = 0.5, _0x925745['beginPath'](), _0x925745['lineCap'] = 'round', _0x925745['lineJoin'] = 'round', _0x925745['moveTo'](0x11 * _0x35aaa3, 0x46 * _0x35aaa3), _0x925745['bezierCurveTo'](0x21 * _0x35aaa3, 0x34 * _0x35aaa3, 0x27 * _0x35aaa3, 0x21 * _0x35aaa3, 0x30 * _0x35aaa3, 0x7 * _0x35aaa3), fill_path(_0x925745, undefined, _0x540ea1[0x2], 0x8 * _0x35aaa3), _0x5cd339;
}

function create_leaf(_0x1841c2, _0x47220f) {
    var _0x483e46 = document['createElement']('canvas'),
        _0x66fd34 = _0x483e46['getContext']('2d');
    return _0x483e46['width'] = 0xea * _0x1841c2, _0x483e46['height'] = 0xb7 * _0x1841c2, _0x66fd34['beginPath'](), _0x66fd34['lineCap'] = 'round', _0x66fd34['lineJoin'] = 'round', _0x66fd34['moveTo'](0x4c * _0x1841c2, 0x19 * _0x1841c2), _0x66fd34['bezierCurveTo'](0x96 * _0x1841c2, 0x3 * _0x1841c2, 0xb5 * _0x1841c2, 0x16 * _0x1841c2, 0xcb * _0x1841c2, 0x29 * _0x1841c2), _0x66fd34['bezierCurveTo'](0xe1 * _0x1841c2, 0x3f * _0x1841c2, 0xe1 * _0x1841c2, 0x69 * _0x1841c2, 0xc6 * _0x1841c2, 0x85 * _0x1841c2), _0x66fd34['bezierCurveTo'](0xb3 * _0x1841c2, 0x9d * _0x1841c2, 0x86 * _0x1841c2, 0xb2 * _0x1841c2, 0x51 * _0x1841c2, 0xa4 * _0x1841c2), _0x66fd34['bezierCurveTo'](0x13 * _0x1841c2, 0x94 * _0x1841c2, 0x6 * _0x1841c2, 0x5f * _0x1841c2, 0x15 * _0x1841c2, 0x42 * _0x1841c2), _0x66fd34['bezierCurveTo'](0x22 * _0x1841c2, 0x27 * _0x1841c2, 0x34 * _0x1841c2, 0x21 * _0x1841c2, 0x4b * _0x1841c2, 0x19 * _0x1841c2), _0x66fd34['closePath'](), fill_path(_0x66fd34, _0x47220f[0x0], _0x47220f[0x0], 0x4 * _0x1841c2), _0x483e46;
}

function create_herb(_0x520aa3, _0x57ef11, _0x1cd109, _0x161515, _0x319044) {
    var _0x3fee42 = document['createElement']('canvas'),
        _0x13b3fd = _0x3fee42['getContext']('2d');
    if (_0x161515 == 0x0) {
        var _0x4415a8 = _0x520aa3 * 0x10e,
            _0x4e3508 = _0x520aa3 * 0xfa;
        _0x3fee42['width'] = _0x4415a8, _0x3fee42['height'] = _0x4e3508, _0x13b3fd['beginPath'](), _0x13b3fd['moveTo'](0x8c * _0x520aa3, 0x3 * _0x520aa3), _0x13b3fd['translate'](-0x19 * _0x520aa3, -0x14 * _0x520aa3), _0x13b3fd['bezierCurveTo'](0xda * _0x520aa3, 0x1f * _0x520aa3, 0xfb * _0x520aa3, 0x3d * _0x520aa3, 0x109 * _0x520aa3, 0x55 * _0x520aa3), _0x13b3fd['bezierCurveTo'](0x116 * _0x520aa3, 0x6c * _0x520aa3, 0x127 * _0x520aa3, 0xa0 * _0x520aa3, 0x11d * _0x520aa3, 0xc3 * _0x520aa3), _0x13b3fd['bezierCurveTo'](0x10f * _0x520aa3, 0xf2 * _0x520aa3, 0xd5 * _0x520aa3, 0x10c * _0x520aa3, 0xbc * _0x520aa3, 0x10a * _0x520aa3), _0x13b3fd['bezierCurveTo'](0x8b * _0x520aa3, 0x106 * _0x520aa3, 0x46 * _0x520aa3, 0xf4 * _0x520aa3, 0x2f * _0x520aa3, 0xcc * _0x520aa3), _0x13b3fd['bezierCurveTo'](0x14 * _0x520aa3, 0x9e * _0x520aa3, 0x23 * _0x520aa3, 0x4e * _0x520aa3, 0x3b * _0x520aa3, 0x38 * _0x520aa3), _0x13b3fd['bezierCurveTo'](0x5a * _0x520aa3, 0x1c * _0x520aa3, 0x7c * _0x520aa3, 0x17 * _0x520aa3, 0x8c * _0x520aa3, 0x17 * _0x520aa3), _0x13b3fd['closePath'](), fill_path(_0x13b3fd, _0x1cd109[0x0]);
    } else {
        if (_0x161515 == 0x1) {
            var _0x4415a8 = _0x520aa3 * 0x1ae,
                _0x4e3508 = _0x520aa3 * 0x15e;
            _0x3fee42['width'] = _0x4415a8, _0x3fee42['height'] = _0x4e3508, _0x13b3fd['beginPath'](), _0x13b3fd['moveTo'](0xb4 * _0x520aa3, 0x5 * _0x520aa3), _0x13b3fd['translate'](-0x1e * _0x520aa3, -0x3c * _0x520aa3), _0x13b3fd['bezierCurveTo'](0x11b * _0x520aa3, 0x3c * _0x520aa3, 0x109 * _0x520aa3, 0xa3 * _0x520aa3, 0x14f * _0x520aa3, 0xce * _0x520aa3), _0x13b3fd['bezierCurveTo'](0x178 * _0x520aa3, 0xe7 * _0x520aa3, 0x1ec * _0x520aa3, 0x12b * _0x520aa3, 0x1b2 * _0x520aa3, 0x165 * _0x520aa3), _0x13b3fd['bezierCurveTo'](0x173 * _0x520aa3, 0x1a5 * _0x520aa3, 0x121 * _0x520aa3, 0x18a * _0x520aa3, 0xff * _0x520aa3, 0x182 * _0x520aa3), _0x13b3fd['bezierCurveTo'](0xda * _0x520aa3, 0x179 * _0x520aa3, 0x5b * _0x520aa3, 0x167 * _0x520aa3, 0x32 * _0x520aa3, 0x110 * _0x520aa3), _0x13b3fd['bezierCurveTo'](0xc * _0x520aa3, 0xc0 * _0x520aa3, 0x6b * _0x520aa3, 0x4b * _0x520aa3, 0xb2 * _0x520aa3, 0x45 * _0x520aa3), _0x13b3fd['closePath'](), fill_path(_0x13b3fd, _0x1cd109[0x0]);
        } else {
            if (_0x161515 == 0x2) {
                var _0x4415a8 = _0x520aa3 * 0x190,
                    _0x4e3508 = _0x520aa3 * 0x12c;
                _0x3fee42['width'] = _0x4415a8, _0x3fee42['height'] = _0x4e3508, _0x13b3fd['beginPath'](), _0x13b3fd['moveTo'](0x50 * _0x520aa3, 0x34 * _0x520aa3), _0x13b3fd['translate'](-0x28 * _0x520aa3, -0x1e * _0x520aa3), _0x13b3fd['bezierCurveTo'](0x7c * _0x520aa3, 0x4d * _0x520aa3, 0xf1 * _0x520aa3, 0x16 * _0x520aa3, 0x137 * _0x520aa3, 0x41 * _0x520aa3), _0x13b3fd['bezierCurveTo'](0x160 * _0x520aa3, 0x5a * _0x520aa3, 0x194 * _0x520aa3, 0xb0 * _0x520aa3, 0x15a * _0x520aa3, 0xea * _0x520aa3), _0x13b3fd['bezierCurveTo'](0x11b * _0x520aa3, 0x12a * _0x520aa3, 0xb3 * _0x520aa3, 0x12b * _0x520aa3, 0x91 * _0x520aa3, 0x123 * _0x520aa3), _0x13b3fd['bezierCurveTo'](0x6c * _0x520aa3, 0x11a * _0x520aa3, 0x64 * _0x520aa3, 0xef * _0x520aa3, 0x3f * _0x520aa3, 0xcd * _0x520aa3), _0x13b3fd['bezierCurveTo'](0x25 * _0x520aa3, 0xb5 * _0x520aa3, 0x2d * _0x520aa3, 0x83 * _0x520aa3, 0x50 * _0x520aa3, 0x6b * _0x520aa3), _0x13b3fd['closePath'](), fill_path(_0x13b3fd, _0x1cd109[0x0]);
            }
        }
    }
    return _0x3fee42;
}

function create_flake(_0x47f249, _0x230071, _0x430770) {
    var _0x3b5de9 = document['createElement']('canvas'),
        _0x10aee3 = _0x3b5de9['getContext']('2d'),
        _0x483222 = _0x47f249 * _0x230071 * 0x2,
        _0x3cd483 = _0x47f249 * _0x230071 * 0x2,
        _0x50df11 = _0x483222 / 0x2,
        _0x468af8 = _0x3cd483 / 0x2;
    return _0x3b5de9['width'] = _0x483222, _0x3b5de9['height'] = _0x3cd483, _0x10aee3['translate'](_0x50df11, _0x468af8), circle(_0x10aee3, 0x0, 0x0, _0x230071 * _0x47f249, 0x0), fill_path(_0x10aee3, _0x430770), _0x3b5de9;
}

function create_divingmask(_0x43ac26, _0x46afd9, _0x22c4bc) {
    var _0xfdd12d = document['createElement']('canvas'),
        _0x1d5969 = _0xfdd12d['getContext']('2d');
    return _0xfdd12d['width'] = 0x175 * _0x43ac26, _0xfdd12d['height'] = 0x13a * _0x43ac26, _0x1d5969['globalAlpha'] = _0x46afd9 ? 0.5 : 0x1, _0x1d5969['translate'](0x5 * _0x43ac26, 0x5 * _0x43ac26), _0x1d5969['save'](), _0x1d5969['translate'](184.048583984375 * _0x43ac26, 69.1805419921875 * _0x43ac26), round_rect(_0x1d5969, -0x28 * _0x43ac26, -28.5 * _0x43ac26, 0x50 * _0x43ac26, 0x39 * _0x43ac26, 0xa * _0x43ac26), _0x1d5969['restore'](), fill_path(_0x1d5969, _0x22c4bc[0x1], _0x22c4bc[0x2], 0x4 * _0x43ac26), _0x1d5969['beginPath'](), _0x1d5969['lineCap'] = 'round', _0x1d5969['lineJoin'] = 'round', _0x1d5969['moveTo'](185.048583984375 * _0x43ac26, 61.6805419921875 * _0x43ac26), _0x1d5969['bezierCurveTo'](145.048583984375 * _0x43ac26, 59.6805419921875 * _0x43ac26, 138.048583984375 * _0x43ac26, 41.6805419921875 * _0x43ac26, 148.048583984375 * _0x43ac26, 33.6805419921875 * _0x43ac26), _0x1d5969['bezierCurveTo'](169.048583984375 * _0x43ac26, 17.6805419921875 * _0x43ac26, 194.048583984375 * _0x43ac26, 20.6805419921875 * _0x43ac26, 210.048583984375 * _0x43ac26, 27.6805419921875 * _0x43ac26), _0x1d5969['bezierCurveTo'](234.048583984375 * _0x43ac26, 40.6805419921875 * _0x43ac26, 225.048583984375 * _0x43ac26, 57.6805419921875 * _0x43ac26, 186.048583984375 * _0x43ac26, 61.6805419921875 * _0x43ac26), _0x1d5969['closePath'](), fill_path(_0x1d5969, _0x22c4bc[0x0], _0x22c4bc[0x0], 0x6 * _0x43ac26), _0x1d5969['beginPath'](), _0x1d5969['lineCap'] = 'round', _0x1d5969['lineJoin'] = 'round', _0x1d5969['moveTo'](224.048583984375 * _0x43ac26, 56.6805419921875 * _0x43ac26), _0x1d5969['bezierCurveTo'](326.048583984375 * _0x43ac26, 69.6805419921875 * _0x43ac26, 363.048583984375 * _0x43ac26, 148.6805419921875 * _0x43ac26, 349.048583984375 * _0x43ac26, 206.6805419921875 * _0x43ac26), _0x1d5969['bezierCurveTo'](329.048583984375 * _0x43ac26, 278.6805419921875 * _0x43ac26, 252.048583984375 * _0x43ac26, 283.6805419921875 * _0x43ac26, 206.048583984375 * _0x43ac26, 275.6805419921875 * _0x43ac26), _0x1d5969['bezierCurveTo'](206.548583984375 * _0x43ac26, 266.6805419921875 * _0x43ac26, 206.548583984375 * _0x43ac26, 266.6805419921875 * _0x43ac26, 207.048583984375 * _0x43ac26, 257.6805419921875 * _0x43ac26), _0x1d5969['bezierCurveTo'](276.048583984375 * _0x43ac26, 268.6805419921875 * _0x43ac26, 308.048583984375 * _0x43ac26, 239.6805419921875 * _0x43ac26, 323.048583984375 * _0x43ac26, 208.6805419921875 * _0x43ac26), _0x1d5969['bezierCurveTo'](352.048583984375 * _0x43ac26, 145.6805419921875 * _0x43ac26, 292.048583984375 * _0x43ac26, 86.6805419921875 * _0x43ac26, 223.048583984375 * _0x43ac26, 74.6805419921875 * _0x43ac26), _0x1d5969['closePath'](), fill_path(_0x1d5969, _0x22c4bc[0x0], _0x22c4bc[0x0], 0x6 * _0x43ac26), _0x1d5969['save'](), _0x1d5969['translate'](183.548583984375 * _0x43ac26, 119.6805419921875 * _0x43ac26), round_rect(_0x1d5969, -121.5 * _0x43ac26, -0x2d * _0x43ac26, 0xf3 * _0x43ac26, 0x5a * _0x43ac26, 0x28 * _0x43ac26), _0x1d5969['restore'](), fill_path(_0x1d5969, _0x22c4bc[0x0], _0x22c4bc[0x0], 0x6 * _0x43ac26), _0x1d5969['save'](), _0x1d5969['translate'](183.048583984375 * _0x43ac26, 155.6805419921875 * _0x43ac26), round_rect(_0x1d5969, -0x79 * _0x43ac26, -0x34 * _0x43ac26, 0xf2 * _0x43ac26, 0x68 * _0x43ac26, 0x28 * _0x43ac26), _0x1d5969['restore'](), fill_path(_0x1d5969, _0x22c4bc[0x0], _0x22c4bc[0x0], 0x6 * _0x43ac26), _0x1d5969['save'](), _0x1d5969['translate'](183.048583984375 * _0x43ac26, 205.1805419921875 * _0x43ac26), round_rect(_0x1d5969, -0x79 * _0x43ac26, -50.5 * _0x43ac26, 0xf2 * _0x43ac26, 0x65 * _0x43ac26, 0x28 * _0x43ac26), _0x1d5969['restore'](), fill_path(_0x1d5969, _0x22c4bc[0x0], _0x22c4bc[0x0], 0x6 * _0x43ac26), _0x1d5969['save'](), _0x1d5969['translate'](185.048583984375 * _0x43ac26, 204.1805419921875 * _0x43ac26), round_rect(_0x1d5969, -0x64 * _0x43ac26, -34.5 * _0x43ac26, 0xc8 * _0x43ac26, 0x45 * _0x43ac26, 0x28 * _0x43ac26), _0x1d5969['restore'](), fill_path(_0x1d5969, _0x22c4bc[0x0], _0x22c4bc[0x0], 0x6 * _0x43ac26), circle(_0x1d5969, 185.048583984375 * _0x43ac26, 257.6805419921875 * _0x43ac26, 27.018512172212592 * _0x43ac26), fill_path(_0x1d5969, _0x22c4bc[0x0], _0x22c4bc[0x0], 0x6 * _0x43ac26), _0x1d5969['globalAlpha'] = 0x1, _0x1d5969['translate'](-0x5 * _0x43ac26, -0x5 * _0x43ac26), _0x1d5969['beginPath'](), _0x1d5969['lineCap'] = 'round', _0x1d5969['lineJoin'] = 'round', _0x1d5969['moveTo'](224.048583984375 * _0x43ac26, 56.6805419921875 * _0x43ac26), _0x1d5969['bezierCurveTo'](326.048583984375 * _0x43ac26, 69.6805419921875 * _0x43ac26, 363.048583984375 * _0x43ac26, 148.6805419921875 * _0x43ac26, 349.048583984375 * _0x43ac26, 206.6805419921875 * _0x43ac26), _0x1d5969['bezierCurveTo'](329.048583984375 * _0x43ac26, 278.6805419921875 * _0x43ac26, 252.048583984375 * _0x43ac26, 283.6805419921875 * _0x43ac26, 206.048583984375 * _0x43ac26, 275.6805419921875 * _0x43ac26), _0x1d5969['bezierCurveTo'](206.548583984375 * _0x43ac26, 266.6805419921875 * _0x43ac26, 206.548583984375 * _0x43ac26, 266.6805419921875 * _0x43ac26, 207.048583984375 * _0x43ac26, 257.6805419921875 * _0x43ac26), _0x1d5969['bezierCurveTo'](276.048583984375 * _0x43ac26, 268.6805419921875 * _0x43ac26, 308.048583984375 * _0x43ac26, 239.6805419921875 * _0x43ac26, 323.048583984375 * _0x43ac26, 208.6805419921875 * _0x43ac26), _0x1d5969['bezierCurveTo'](352.048583984375 * _0x43ac26, 145.6805419921875 * _0x43ac26, 292.048583984375 * _0x43ac26, 86.6805419921875 * _0x43ac26, 223.048583984375 * _0x43ac26, 74.6805419921875 * _0x43ac26), _0x1d5969['closePath'](), fill_path(_0x1d5969, _0x22c4bc[0x3], _0x22c4bc[0x4], 0x6 * _0x43ac26), _0x1d5969['save'](), _0x1d5969['translate'](184.048583984375 * _0x43ac26, 69.1805419921875 * _0x43ac26), round_rect(_0x1d5969, -0x28 * _0x43ac26, -28.5 * _0x43ac26, 0x50 * _0x43ac26, 0x39 * _0x43ac26, 0xa * _0x43ac26), _0x1d5969['restore'](), fill_path(_0x1d5969, _0x22c4bc[0x1], _0x22c4bc[0x2], 0x4 * _0x43ac26), _0x1d5969['beginPath'](), _0x1d5969['lineCap'] = 'round', _0x1d5969['lineJoin'] = 'round', _0x1d5969['moveTo'](185.048583984375 * _0x43ac26, 61.6805419921875 * _0x43ac26), _0x1d5969['bezierCurveTo'](145.048583984375 * _0x43ac26, 59.6805419921875 * _0x43ac26, 138.048583984375 * _0x43ac26, 41.6805419921875 * _0x43ac26, 148.048583984375 * _0x43ac26, 33.6805419921875 * _0x43ac26), _0x1d5969['bezierCurveTo'](169.048583984375 * _0x43ac26, 17.6805419921875 * _0x43ac26, 194.048583984375 * _0x43ac26, 20.6805419921875 * _0x43ac26, 210.048583984375 * _0x43ac26, 27.6805419921875 * _0x43ac26), _0x1d5969['bezierCurveTo'](234.048583984375 * _0x43ac26, 40.6805419921875 * _0x43ac26, 225.048583984375 * _0x43ac26, 57.6805419921875 * _0x43ac26, 186.048583984375 * _0x43ac26, 61.6805419921875 * _0x43ac26), _0x1d5969['closePath'](), fill_path(_0x1d5969, _0x22c4bc[0x1], _0x22c4bc[0x2], 0x6 * _0x43ac26), _0x1d5969['save'](), _0x1d5969['translate'](183.548583984375 * _0x43ac26, 119.6805419921875 * _0x43ac26), round_rect(_0x1d5969, -121.5 * _0x43ac26, -0x2d * _0x43ac26, 0xf3 * _0x43ac26, 0x5a * _0x43ac26, 0x28 * _0x43ac26), _0x1d5969['restore'](), fill_path(_0x1d5969, _0x22c4bc[0x5], _0x22c4bc[0x4], 0x6 * _0x43ac26), _0x1d5969['save'](), _0x1d5969['translate'](183.048583984375 * _0x43ac26, 155.6805419921875 * _0x43ac26), round_rect(_0x1d5969, -0x79 * _0x43ac26, -0x34 * _0x43ac26, 0xf2 * _0x43ac26, 0x68 * _0x43ac26, 0x28 * _0x43ac26), _0x1d5969['restore'](), fill_path(_0x1d5969, _0x22c4bc[0x3], _0x22c4bc[0x4], 0x6 * _0x43ac26), _0x1d5969['save'](), _0x1d5969['translate'](183.048583984375 * _0x43ac26, 205.1805419921875 * _0x43ac26), round_rect(_0x1d5969, -0x79 * _0x43ac26, -50.5 * _0x43ac26, 0xf2 * _0x43ac26, 0x65 * _0x43ac26, 0x28 * _0x43ac26), _0x1d5969['restore'](), fill_path(_0x1d5969, _0x22c4bc[0x6], _0x22c4bc[0x4], 0x6 * _0x43ac26), _0x1d5969['globalCompositeOperation'] = 'destination-out', _0x1d5969['save'](), _0x1d5969['translate'](185.048583984375 * _0x43ac26, 204.1805419921875 * _0x43ac26), round_rect(_0x1d5969, -0x64 * _0x43ac26, -34.5 * _0x43ac26, 0xc8 * _0x43ac26, 0x45 * _0x43ac26, 0x28 * _0x43ac26), _0x1d5969['restore'](), fill_path(_0x1d5969, _0x22c4bc[0x7], _0x22c4bc[0x8], 0x6 * _0x43ac26), _0x1d5969['globalCompositeOperation'] = 'source-over', _0x1d5969['globalAlpha'] = 0.5, _0x1d5969['save'](), _0x1d5969['translate'](185.048583984375 * _0x43ac26, 204.1805419921875 * _0x43ac26), round_rect(_0x1d5969, -0x64 * _0x43ac26, -34.5 * _0x43ac26, 0xc8 * _0x43ac26, 0x45 * _0x43ac26, 0x28 * _0x43ac26), _0x1d5969['restore'](), fill_path(_0x1d5969, _0x22c4bc[0x7], _0x22c4bc[0x8], 0x6 * _0x43ac26), _0x1d5969['globalAlpha'] = 0x1, _0x1d5969['save'](), circle(_0x1d5969, 185.048583984375 * _0x43ac26, 257.6805419921875 * _0x43ac26, 27.018512172212592 * _0x43ac26), fill_path(_0x1d5969, _0x22c4bc[0x3], _0x22c4bc[0x4], 0x6 * _0x43ac26), _0x1d5969['restore'](), _0xfdd12d;
}

function create_superdivingsuit(_0x5f04a3, _0x3674ec, _0x201da8) {
    var _0x2fc1de = document['createElement']('canvas'),
        _0x1d4ef1 = _0x2fc1de['getContext']('2d');
    return _0x2fc1de['width'] = 0xdc * _0x5f04a3, _0x2fc1de['height'] = 0xb4 * _0x5f04a3, _0x1d4ef1['globalAlpha'] = _0x3674ec ? 0.5 : 0x1, _0x1d4ef1['translate'](-0x5a * _0x5f04a3, -0x96 * _0x5f04a3), _0x1d4ef1['beginPath'](), _0x1d4ef1['lineCap'] = 'round', _0x1d4ef1['lineJoin'] = 'round', _0x1d4ef1['moveTo'](0x68 * _0x5f04a3, 237.8000030517578 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x6e * _0x5f04a3, 237.8000030517578 * _0x5f04a3, 0x6e * _0x5f04a3, 237.8000030517578 * _0x5f04a3, 0x74 * _0x5f04a3, 237.8000030517578 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x74 * _0x5f04a3, 241.8000030517578 * _0x5f04a3, 0x74 * _0x5f04a3, 241.8000030517578 * _0x5f04a3, 0x74 * _0x5f04a3, 245.8000030517578 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x73 * _0x5f04a3, 245.3000030517578 * _0x5f04a3, 0x73 * _0x5f04a3, 245.3000030517578 * _0x5f04a3, 0x72 * _0x5f04a3, 244.8000030517578 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](109.5 * _0x5f04a3, 244.8000030517578 * _0x5f04a3, 109.5 * _0x5f04a3, 244.8000030517578 * _0x5f04a3, 0x69 * _0x5f04a3, 244.8000030517578 * _0x5f04a3), _0x1d4ef1['closePath'](), fill_path(_0x1d4ef1, _0x201da8[0x5], _0x201da8[0x5], 0x2 * _0x5f04a3), _0x1d4ef1['beginPath'](), _0x1d4ef1['lineCap'] = 'round', _0x1d4ef1['lineJoin'] = 'round', _0x1d4ef1['moveTo'](0x73 * _0x5f04a3, 211.20000457763672 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x6a * _0x5f04a3, 216.20000457763672 * _0x5f04a3, 0x65 * _0x5f04a3, 234.20000457763672 * _0x5f04a3, 0x66 * _0x5f04a3, 241.20000457763672 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x66 * _0x5f04a3, 260.2000045776367 * _0x5f04a3, 0x73 * _0x5f04a3, 269.2000045776367 * _0x5f04a3, 0x73 * _0x5f04a3, 269.2000045776367 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x74 * _0x5f04a3, 265.2000045776367 * _0x5f04a3, 115.5 * _0x5f04a3, 265.2000045776367 * _0x5f04a3, 0x74 * _0x5f04a3, 261.2000045776367 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x70 * _0x5f04a3, 0x108 * _0x5f04a3, 0x6c * _0x5f04a3, 0xfe * _0x5f04a3, 0x6a * _0x5f04a3, 0xf2 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x69 * _0x5f04a3, 0xe8 * _0x5f04a3, 0x6e * _0x5f04a3, 0xde * _0x5f04a3, 0x73 * _0x5f04a3, 0xda * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x74 * _0x5f04a3, 216.75 * _0x5f04a3, 115.5 * _0x5f04a3, 217.375 * _0x5f04a3, 0x74 * _0x5f04a3, 216.75 * _0x5f04a3), _0x1d4ef1['closePath'](), fill_path(_0x1d4ef1, _0x201da8[0x5], _0x201da8[0x5], 0x2 * _0x5f04a3), _0x1d4ef1['beginPath'](), _0x1d4ef1['lineCap'] = 'round', _0x1d4ef1['lineJoin'] = 'round', _0x1d4ef1['moveTo'](0x78 * _0x5f04a3, 0xcf * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x73 * _0x5f04a3, 0xce * _0x5f04a3, 0x72 * _0x5f04a3, 0xd1 * _0x5f04a3, 0x72 * _0x5f04a3, 0xd3 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x72 * _0x5f04a3, 0x10c * _0x5f04a3, 0x72 * _0x5f04a3, 0xf1 * _0x5f04a3, 0x72 * _0x5f04a3, 0x10f * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x73 * _0x5f04a3, 0x114 * _0x5f04a3, 0x76 * _0x5f04a3, 0x114 * _0x5f04a3, 0x78 * _0x5f04a3, 0x114 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x7a * _0x5f04a3, 0x111 * _0x5f04a3, 120.5 * _0x5f04a3, 274.5 * _0x5f04a3, 0x79 * _0x5f04a3, 0x111 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x79 * _0x5f04a3, 0xf1 * _0x5f04a3, 0x79 * _0x5f04a3, 0xf1 * _0x5f04a3, 0x79 * _0x5f04a3, 0xd1 * _0x5f04a3), _0x1d4ef1['closePath'](), fill_path(_0x1d4ef1, _0x201da8[0x4], _0x201da8[0x4], 0x2 * _0x5f04a3), _0x1d4ef1['beginPath'](), _0x1d4ef1['lineCap'] = 'round', _0x1d4ef1['lineJoin'] = 'round', _0x1d4ef1['moveTo'](0x11c * _0x5f04a3, 0xee * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](289.5 * _0x5f04a3, 0xee * _0x5f04a3, 289.5 * _0x5f04a3, 0xee * _0x5f04a3, 0x127 * _0x5f04a3, 0xee * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x127 * _0x5f04a3, 241.5 * _0x5f04a3, 0x127 * _0x5f04a3, 241.5 * _0x5f04a3, 0x127 * _0x5f04a3, 0xf5 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](289.5 * _0x5f04a3, 0xf5 * _0x5f04a3, 289.5 * _0x5f04a3, 0xf5 * _0x5f04a3, 0x11c * _0x5f04a3, 0xf5 * _0x5f04a3), _0x1d4ef1['closePath'](), fill_path(_0x1d4ef1, _0x201da8[0x4], _0x201da8[0x4], 0x2 * _0x5f04a3), _0x1d4ef1['beginPath'](), _0x1d4ef1['lineCap'] = 'round', _0x1d4ef1['lineJoin'] = 'round', _0x1d4ef1['moveTo'](0x11b * _0x5f04a3, 0xd3 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x125 * _0x5f04a3, 0xd8 * _0x5f04a3, 0x129 * _0x5f04a3, 0xe7 * _0x5f04a3, 0x129 * _0x5f04a3, 0xf1 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x12a * _0x5f04a3, 0xfe * _0x5f04a3, 0x122 * _0x5f04a3, 0x109 * _0x5f04a3, 0x11c * _0x5f04a3, 0x10d * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x11b * _0x5f04a3, 0x10a * _0x5f04a3, 283.5 * _0x5f04a3, 0x10a * _0x5f04a3, 0x11b * _0x5f04a3, 0x107 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x122 * _0x5f04a3, 0x104 * _0x5f04a3, 0x124 * _0x5f04a3, 0xfb * _0x5f04a3, 0x125 * _0x5f04a3, 0xf2 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x124 * _0x5f04a3, 0xdf * _0x5f04a3, 0x121 * _0x5f04a3, 0xe0 * _0x5f04a3, 0x11c * _0x5f04a3, 0xda * _0x5f04a3), _0x1d4ef1['closePath'](), fill_path(_0x1d4ef1, _0x201da8[0x4], _0x201da8[0x4], 0x2 * _0x5f04a3), _0x1d4ef1['beginPath'](), _0x1d4ef1['lineCap'] = 'round', _0x1d4ef1['lineJoin'] = 'round', _0x1d4ef1['moveTo'](0x118 * _0x5f04a3, 0xce * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x11c * _0x5f04a3, 0xce * _0x5f04a3, 0x11d * _0x5f04a3, 0xd0 * _0x5f04a3, 0x11d * _0x5f04a3, 0xd3 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x11d * _0x5f04a3, 241.5 * _0x5f04a3, 0x11d * _0x5f04a3, 241.5 * _0x5f04a3, 0x11d * _0x5f04a3, 0x110 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x11c * _0x5f04a3, 0x113 * _0x5f04a3, 0x11c * _0x5f04a3, 0x113 * _0x5f04a3, 0x118 * _0x5f04a3, 0x113 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x117 * _0x5f04a3, 273.5 * _0x5f04a3, 0x117 * _0x5f04a3, 273.5 * _0x5f04a3, 0x116 * _0x5f04a3, 0x110 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x116 * _0x5f04a3, 240.5 * _0x5f04a3, 0x116 * _0x5f04a3, 240.5 * _0x5f04a3, 0x116 * _0x5f04a3, 0xd1 * _0x5f04a3), _0x1d4ef1['closePath'](), fill_path(_0x1d4ef1, _0x201da8[0x4], _0x201da8[0x4], 0x2 * _0x5f04a3), _0x1d4ef1['beginPath'](), _0x1d4ef1['lineCap'] = 'round', _0x1d4ef1['lineJoin'] = 'round', _0x1d4ef1['moveTo'](0x8a * _0x5f04a3, 298.40000915527344 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x8d * _0x5f04a3, 311.40000915527344 * _0x5f04a3, 0x97 * _0x5f04a3, 314.40000915527344 * _0x5f04a3, 0xa2 * _0x5f04a3, 316.40000915527344 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0xe0 * _0x5f04a3, 316.40000915527344 * _0x5f04a3, 0xc8 * _0x5f04a3, 315.90000915527344 * _0x5f04a3, 0xee * _0x5f04a3, 315.40000915527344 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0xfe * _0x5f04a3, 316.40000915527344 * _0x5f04a3, 0x105 * _0x5f04a3, 306.40000915527344 * _0x5f04a3, 0x108 * _0x5f04a3, 298.40000915527344 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0xff * _0x5f04a3, 304.40000915527344 * _0x5f04a3, 0xfa * _0x5f04a3, 306.40000915527344 * _0x5f04a3, 0xf4 * _0x5f04a3, 306.40000915527344 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0xc9 * _0x5f04a3, 306.90000915527344 * _0x5f04a3, 0xc9 * _0x5f04a3, 306.90000915527344 * _0x5f04a3, 0x9e * _0x5f04a3, 307.40000915527344 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x96 * _0x5f04a3, 306.40000915527344 * _0x5f04a3, 0x94 * _0x5f04a3, 306.40000915527344 * _0x5f04a3, 0x8b * _0x5f04a3, 300.40000915527344 * _0x5f04a3), _0x1d4ef1['closePath'](), fill_path(_0x1d4ef1, _0x201da8[0x4], _0x201da8[0x4], 0x2 * _0x5f04a3), _0x1d4ef1['beginPath'](), _0x1d4ef1['lineCap'] = 'round', _0x1d4ef1['lineJoin'] = 'round', _0x1d4ef1['moveTo'](0xa1 * _0x5f04a3, 177.5999984741211 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x82 * _0x5f04a3, 175.5999984741211 * _0x5f04a3, 0x7b * _0x5f04a3, 190.5999984741211 * _0x5f04a3, 0x7a * _0x5f04a3, 205.5999984741211 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x79 * _0x5f04a3, 277.5999984741211 * _0x5f04a3, 0x7a * _0x5f04a3, 242.5999984741211 * _0x5f04a3, 0x7a * _0x5f04a3, 279.5999984741211 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x80 * _0x5f04a3, 297.5999984741211 * _0x5f04a3, 0x89 * _0x5f04a3, 299.5999984741211 * _0x5f04a3, 0x8f * _0x5f04a3, 300.5999984741211 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0xa3 * _0x5f04a3, 301.0999984741211 * _0x5f04a3, 0xa3 * _0x5f04a3, 301.0999984741211 * _0x5f04a3, 0xb7 * _0x5f04a3, 301.5999984741211 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x96 * _0x5f04a3, 300.5999984741211 * _0x5f04a3, 0x87 * _0x5f04a3, 290.5999984741211 * _0x5f04a3, 0x86 * _0x5f04a3, 267.5999984741211 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x85 * _0x5f04a3, 245.5999984741211 * _0x5f04a3, 0x92 * _0x5f04a3, 235.5999984741211 * _0x5f04a3, 0xa4 * _0x5f04a3, 235.5999984741211 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0xce * _0x5f04a3, 236.0999984741211 * _0x5f04a3, 0xce * _0x5f04a3, 236.0999984741211 * _0x5f04a3, 0xf8 * _0x5f04a3, 236.5999984741211 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x10a * _0x5f04a3, 243.5999984741211 * _0x5f04a3, 0x10c * _0x5f04a3, 259.5999984741211 * _0x5f04a3, 0x10b * _0x5f04a3, 266.5999984741211 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x10a * _0x5f04a3, 288.5999984741211 * _0x5f04a3, 0xfb * _0x5f04a3, 294.5999984741211 * _0x5f04a3, 0xf4 * _0x5f04a3, 297.5999984741211 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](228.5 * _0x5f04a3, 299.5999984741211 * _0x5f04a3, 228.5 * _0x5f04a3, 299.5999984741211 * _0x5f04a3, 0xd5 * _0x5f04a3, 301.5999984741211 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0xec * _0x5f04a3, 301.0999984741211 * _0x5f04a3, 0xec * _0x5f04a3, 301.0999984741211 * _0x5f04a3, 0x103 * _0x5f04a3, 300.5999984741211 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x110 * _0x5f04a3, 295.5999984741211 * _0x5f04a3, 0x115 * _0x5f04a3, 288.5999984741211 * _0x5f04a3, 0x116 * _0x5f04a3, 271.5999984741211 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](277.5 * _0x5f04a3, 236.5999984741211 * _0x5f04a3, 277.5 * _0x5f04a3, 236.5999984741211 * _0x5f04a3, 0x115 * _0x5f04a3, 201.5999984741211 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x114 * _0x5f04a3, 186.5999984741211 * _0x5f04a3, 0x109 * _0x5f04a3, 178.5999984741211 * _0x5f04a3, 0xfe * _0x5f04a3, 177.5999984741211 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](247.5 * _0x5f04a3, 177.5999984741211 * _0x5f04a3, 247.5 * _0x5f04a3, 177.5999984741211 * _0x5f04a3, 0xf1 * _0x5f04a3, 177.5999984741211 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0xff * _0x5f04a3, 202.5999984741211 * _0x5f04a3, 0xd6 * _0x5f04a3, 217.5999984741211 * _0x5f04a3, 0xc9 * _0x5f04a3, 215.5999984741211 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0xaa * _0x5f04a3, 215.5999984741211 * _0x5f04a3, 0x98 * _0x5f04a3, 197.5999984741211 * _0x5f04a3, 0xa1 * _0x5f04a3, 178.5999984741211 * _0x5f04a3), _0x1d4ef1['closePath'](), fill_path(_0x1d4ef1, _0x201da8[0x4], _0x201da8[0x4], 0x2 * _0x5f04a3), _0x1d4ef1['beginPath'](), _0x1d4ef1['lineCap'] = 'round', _0x1d4ef1['lineJoin'] = 'round', _0x1d4ef1['moveTo'](0xa2 * _0x5f04a3, 175.5999984741211 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x99 * _0x5f04a3, 176.0999984741211 * _0x5f04a3, 0x99 * _0x5f04a3, 176.0999984741211 * _0x5f04a3, 0x90 * _0x5f04a3, 176.5999984741211 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x7d * _0x5f04a3, 178.5999984741211 * _0x5f04a3, 0x79 * _0x5f04a3, 196.5999984741211 * _0x5f04a3, 0x79 * _0x5f04a3, 207.5999984741211 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x79 * _0x5f04a3, 243.20000076293945 * _0x5f04a3, 0x79 * _0x5f04a3, 243.20000076293945 * _0x5f04a3, 0x79 * _0x5f04a3, 278.8000030517578 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x7e * _0x5f04a3, 298.8000030517578 * _0x5f04a3, 0x89 * _0x5f04a3, 300.8000030517578 * _0x5f04a3, 0x92 * _0x5f04a3, 302.8000030517578 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](200.5 * _0x5f04a3, 302.8000030517578 * _0x5f04a3, 200.5 * _0x5f04a3, 302.8000030517578 * _0x5f04a3, 0xff * _0x5f04a3, 302.8000030517578 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x10f * _0x5f04a3, 301.8000030517578 * _0x5f04a3, 0x117 * _0x5f04a3, 288.8000030517578 * _0x5f04a3, 0x117 * _0x5f04a3, 273.8000030517578 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x117 * _0x5f04a3, 236.8000030517578 * _0x5f04a3, 0x117 * _0x5f04a3, 236.8000030517578 * _0x5f04a3, 0x117 * _0x5f04a3, 199.8000030517578 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x112 * _0x5f04a3, 178.8000030517578 * _0x5f04a3, 0x107 * _0x5f04a3, 177.8000030517578 * _0x5f04a3, 0xff * _0x5f04a3, 175.8000030517578 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0xf8 * _0x5f04a3, 175.8000030517578 * _0x5f04a3, 0xf8 * _0x5f04a3, 175.8000030517578 * _0x5f04a3, 0xf1 * _0x5f04a3, 175.8000030517578 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0xf0 * _0x5f04a3, 175.8000030517578 * _0x5f04a3, 0xf0 * _0x5f04a3, 175.8000030517578 * _0x5f04a3, 0xef * _0x5f04a3, 175.8000030517578 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0xfe * _0x5f04a3, 200.8000030517578 * _0x5f04a3, 0xde * _0x5f04a3, 211.8000030517578 * _0x5f04a3, 0xca * _0x5f04a3, 212.8000030517578 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0xa8 * _0x5f04a3, 213.8000030517578 * _0x5f04a3, 0x97 * _0x5f04a3, 190.8000030517578 * _0x5f04a3, 0xa3 * _0x5f04a3, 176.8000030517578 * _0x5f04a3), _0x1d4ef1['closePath'](), fill_path(_0x1d4ef1, undefined, _0x201da8[0x4], 0x6 * _0x5f04a3), _0x1d4ef1['beginPath'](), _0x1d4ef1['lineCap'] = 'round', _0x1d4ef1['lineJoin'] = 'round', _0x1d4ef1['moveTo'](0xc6 * _0x5f04a3, 161.4000015258789 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0xc6 * _0x5f04a3, 186.9000015258789 * _0x5f04a3, 0xc6 * _0x5f04a3, 186.9000015258789 * _0x5f04a3, 0xc6 * _0x5f04a3, 212.4000015258789 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0xc9 * _0x5f04a3, 212.4000015258789 * _0x5f04a3, 0xc9 * _0x5f04a3, 212.4000015258789 * _0x5f04a3, 0xcc * _0x5f04a3, 212.4000015258789 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0xcc * _0x5f04a3, 186.9000015258789 * _0x5f04a3, 0xcc * _0x5f04a3, 186.9000015258789 * _0x5f04a3, 0xcc * _0x5f04a3, 161.4000015258789 * _0x5f04a3), _0x1d4ef1['closePath'](), fill_path(_0x1d4ef1, _0x201da8[0x4], _0x201da8[0x4], 0x2 * _0x5f04a3), _0x1d4ef1['beginPath'](), _0x1d4ef1['lineCap'] = 'round', _0x1d4ef1['lineJoin'] = 'round', _0x1d4ef1['moveTo'](0xa1 * _0x5f04a3, 0xc2 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0xbc * _0x5f04a3, 0xa9 * _0x5f04a3, 0xe7 * _0x5f04a3, 0xb3 * _0x5f04a3, 0xf1 * _0x5f04a3, 0xc2 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](239.5 * _0x5f04a3, 0xc4 * _0x5f04a3, 239.5 * _0x5f04a3, 0xc4 * _0x5f04a3, 0xee * _0x5f04a3, 0xc6 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0xdd * _0x5f04a3, 0xb3 * _0x5f04a3, 0xb6 * _0x5f04a3, 0xb6 * _0x5f04a3, 0xa5 * _0x5f04a3, 0xc6 * _0x5f04a3), _0x1d4ef1['closePath'](), fill_path(_0x1d4ef1, _0x201da8[0x4], _0x201da8[0x4], 0x2 * _0x5f04a3), _0x1d4ef1['beginPath'](), _0x1d4ef1['lineCap'] = 'round', _0x1d4ef1['lineJoin'] = 'round', _0x1d4ef1['moveTo'](0x9d * _0x5f04a3, 188.80000019073486 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0xa2 * _0x5f04a3, 150.80000019073486 * _0x5f04a3, 0xf1 * _0x5f04a3, 150.80000019073486 * _0x5f04a3, 0xf5 * _0x5f04a3, 188.80000019073486 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0xf2 * _0x5f04a3, 224.80000019073486 * _0x5f04a3, 0xa2 * _0x5f04a3, 228.80000019073486 * _0x5f04a3, 0x9d * _0x5f04a3, 188.80000019073486 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x9f * _0x5f04a3, 188.80000019073486 * _0x5f04a3, 0x9f * _0x5f04a3, 188.80000019073486 * _0x5f04a3, 0xa1 * _0x5f04a3, 188.80000019073486 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0xa8 * _0x5f04a3, 216.80000019073486 * _0x5f04a3, 0xe7 * _0x5f04a3, 218.80000019073486 * _0x5f04a3, 0xf1 * _0x5f04a3, 188.80000019073486 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0xec * _0x5f04a3, 156.80000019073486 * _0x5f04a3, 0xa9 * _0x5f04a3, 152.80000019073486 * _0x5f04a3, 0xa1 * _0x5f04a3, 188.80000019073486 * _0x5f04a3), _0x1d4ef1['closePath'](), fill_path(_0x1d4ef1, _0x201da8[0x4], _0x201da8[0x4], 0x2 * _0x5f04a3), _0x1d4ef1['beginPath'](), _0x1d4ef1['lineCap'] = 'round', _0x1d4ef1['lineJoin'] = 'round', _0x1d4ef1['moveTo'](0x9c * _0x5f04a3, 0xbc * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0xa0 * _0x5f04a3, 0xa4 * _0x5f04a3, 0xb7 * _0x5f04a3, 0x9f * _0x5f04a3, 0xc9 * _0x5f04a3, 0x9e * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0xe8 * _0x5f04a3, 0x9f * _0x5f04a3, 0xf4 * _0x5f04a3, 0xae * _0x5f04a3, 0xf6 * _0x5f04a3, 0xbc * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0xf5 * _0x5f04a3, 0xd4 * _0x5f04a3, 0xd5 * _0x5f04a3, 0xdb * _0x5f04a3, 0xc9 * _0x5f04a3, 0xda * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0xb5 * _0x5f04a3, 0xdd * _0x5f04a3, 0x9e * _0x5f04a3, 0xcf * _0x5f04a3, 0x9c * _0x5f04a3, 0xbe * _0x5f04a3), _0x1d4ef1['closePath'](), fill_path(_0x1d4ef1, undefined, _0x201da8[0x4], 0x6 * _0x5f04a3), _0x1d4ef1['beginPath'](), _0x1d4ef1['lineCap'] = 'round', _0x1d4ef1['lineJoin'] = 'round', _0x1d4ef1['moveTo'](0xa2 * _0x5f04a3, 0xbd * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0xa6 * _0x5f04a3, 0xaa * _0x5f04a3, 0xb9 * _0x5f04a3, 0xa5 * _0x5f04a3, 0xc9 * _0x5f04a3, 0xa4 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0xe3 * _0x5f04a3, 0xa5 * _0x5f04a3, 0xf0 * _0x5f04a3, 0xb2 * _0x5f04a3, 0xef * _0x5f04a3, 0xbc * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0xef * _0x5f04a3, 0xcc * _0x5f04a3, 0xd2 * _0x5f04a3, 0xd2 * _0x5f04a3, 0xc9 * _0x5f04a3, 0xd2 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0xb6 * _0x5f04a3, 0xd3 * _0x5f04a3, 0xa6 * _0x5f04a3, 0xc8 * _0x5f04a3, 0xa2 * _0x5f04a3, 0xbe * _0x5f04a3), _0x1d4ef1['closePath'](), fill_path(_0x1d4ef1, undefined, _0x201da8[0x4], 0x6 * _0x5f04a3), _0x1d4ef1['beginPath'](), _0x1d4ef1['lineCap'] = 'round', _0x1d4ef1['lineJoin'] = 'round', _0x1d4ef1['moveTo'](0x83 * _0x5f04a3, 0x106 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x88 * _0x5f04a3, 0xf1 * _0x5f04a3, 0x90 * _0x5f04a3, 0xec * _0x5f04a3, 0x9e * _0x5f04a3, 0xe9 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](200.5 * _0x5f04a3, 0xe9 * _0x5f04a3, 0xe5 * _0x5f04a3, 0xe8 * _0x5f04a3, 0xf3 * _0x5f04a3, 0xe9 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x103 * _0x5f04a3, 0xeb * _0x5f04a3, 0x10b * _0x5f04a3, 0xf8 * _0x5f04a3, 0x10d * _0x5f04a3, 0x104 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x10d * _0x5f04a3, 266.5 * _0x5f04a3, 0x10d * _0x5f04a3, 266.5 * _0x5f04a3, 0x10d * _0x5f04a3, 0x111 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x109 * _0x5f04a3, 0x122 * _0x5f04a3, 0xfb * _0x5f04a3, 0x129 * _0x5f04a3, 0xf2 * _0x5f04a3, 0x12a * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0xca * _0x5f04a3, 0x12a * _0x5f04a3, 0xca * _0x5f04a3, 0x12a * _0x5f04a3, 0xa2 * _0x5f04a3, 0x12a * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x94 * _0x5f04a3, 0x12a * _0x5f04a3, 0x88 * _0x5f04a3, 0x121 * _0x5f04a3, 0x84 * _0x5f04a3, 0x111 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](131.5 * _0x5f04a3, 0x10c * _0x5f04a3, 131.5 * _0x5f04a3, 0x10c * _0x5f04a3, 0x83 * _0x5f04a3, 0x107 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x87 * _0x5f04a3, 0x107 * _0x5f04a3, 0x87 * _0x5f04a3, 0x107 * _0x5f04a3, 0x8b * _0x5f04a3, 0x107 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x8b * _0x5f04a3, 0x119 * _0x5f04a3, 0x97 * _0x5f04a3, 0x11f * _0x5f04a3, 0xa0 * _0x5f04a3, 0x122 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](200.5 * _0x5f04a3, 0x122 * _0x5f04a3, 200.5 * _0x5f04a3, 0x122 * _0x5f04a3, 0xf1 * _0x5f04a3, 0x122 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0xfc * _0x5f04a3, 0x122 * _0x5f04a3, 0x101 * _0x5f04a3, 0x119 * _0x5f04a3, 0x106 * _0x5f04a3, 0x10f * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](261.5 * _0x5f04a3, 0x10b * _0x5f04a3, 261.5 * _0x5f04a3, 0x10b * _0x5f04a3, 0x105 * _0x5f04a3, 0x107 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x104 * _0x5f04a3, 0xf9 * _0x5f04a3, 0xfb * _0x5f04a3, 0xf2 * _0x5f04a3, 0xf1 * _0x5f04a3, 0xf1 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](240.5 * _0x5f04a3, 240.5 * _0x5f04a3, 240.5 * _0x5f04a3, 240.5 * _0x5f04a3, 0xf0 * _0x5f04a3, 0xf0 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0xc8 * _0x5f04a3, 0xf0 * _0x5f04a3, 0xc8 * _0x5f04a3, 0xf0 * _0x5f04a3, 0xa0 * _0x5f04a3, 0xf0 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x91 * _0x5f04a3, 0xf4 * _0x5f04a3, 0x8e * _0x5f04a3, 0xfa * _0x5f04a3, 0x8b * _0x5f04a3, 0x108 * _0x5f04a3), _0x1d4ef1['closePath'](), fill_path(_0x1d4ef1, _0x201da8[0x4], _0x201da8[0x4], 0x2 * _0x5f04a3), _0x1d4ef1['beginPath'](), _0x1d4ef1['lineCap'] = 'round', _0x1d4ef1['lineJoin'] = 'round', _0x1d4ef1['moveTo'](0x82 * _0x5f04a3, 0x108 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x84 * _0x5f04a3, 0xf4 * _0x5f04a3, 0x90 * _0x5f04a3, 0xeb * _0x5f04a3, 0x9d * _0x5f04a3, 0xe8 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0xf5 * _0x5f04a3, 0xe8 * _0x5f04a3, 0xc9 * _0x5f04a3, 0xe8 * _0x5f04a3, 0xf5 * _0x5f04a3, 0xe8 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x108 * _0x5f04a3, 0xeb * _0x5f04a3, 0x10d * _0x5f04a3, 0xfb * _0x5f04a3, 0x10e * _0x5f04a3, 0x108 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x110 * _0x5f04a3, 0x123 * _0x5f04a3, 0xf8 * _0x5f04a3, 0x12b * _0x5f04a3, 0xf2 * _0x5f04a3, 0x12b * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0xc8 * _0x5f04a3, 0x12b * _0x5f04a3, 0xc8 * _0x5f04a3, 0x12b * _0x5f04a3, 0x9e * _0x5f04a3, 0x12b * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x8b * _0x5f04a3, 0x12a * _0x5f04a3, 0x82 * _0x5f04a3, 0x114 * _0x5f04a3, 0x82 * _0x5f04a3, 0x109 * _0x5f04a3), _0x1d4ef1['closePath'](), fill_path(_0x1d4ef1, undefined, _0x201da8[0x4], 0x6 * _0x5f04a3), _0x1d4ef1['beginPath'](), _0x1d4ef1['lineCap'] = 'round', _0x1d4ef1['lineJoin'] = 'round', _0x1d4ef1['moveTo'](0x8c * _0x5f04a3, 265.33333587646484 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x8d * _0x5f04a3, 250.33333587646484 * _0x5f04a3, 0x94 * _0x5f04a3, 244.33333587646484 * _0x5f04a3, 0xa0 * _0x5f04a3, 241.33333587646484 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0xc8 * _0x5f04a3, 241.33333587646484 * _0x5f04a3, 0xc8 * _0x5f04a3, 241.33333587646484 * _0x5f04a3, 0xf0 * _0x5f04a3, 241.33333587646484 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x100 * _0x5f04a3, 243.33333587646484 * _0x5f04a3, 0x104 * _0x5f04a3, 255.33333587646484 * _0x5f04a3, 0x104 * _0x5f04a3, 265.33333587646484 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x105 * _0x5f04a3, 281.33333587646484 * _0x5f04a3, 0xf7 * _0x5f04a3, 289.33333587646484 * _0x5f04a3, 0xf0 * _0x5f04a3, 289.33333587646484 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0xa1 * _0x5f04a3, 289.33333587646484 * _0x5f04a3, 200.5 * _0x5f04a3, 289.33333587646484 * _0x5f04a3, 0xa1 * _0x5f04a3, 289.33333587646484 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x95 * _0x5f04a3, 288.33333587646484 * _0x5f04a3, 0x8e * _0x5f04a3, 278.33333587646484 * _0x5f04a3, 0x8c * _0x5f04a3, 266.33333587646484 * _0x5f04a3), _0x1d4ef1['closePath'](), fill_path(_0x1d4ef1, undefined, _0x201da8[0x4], 0x6 * _0x5f04a3), _0x1d4ef1['globalAlpha'] = 0.5, _0x1d4ef1['scale'](0x1, 0x1), _0x1d4ef1['translate'](0x69 * _0x5f04a3, 0x9b * _0x5f04a3), _0x1d4ef1['beginPath'](), _0x1d4ef1['lineCap'] = 'round', _0x1d4ef1['lineJoin'] = 'round', _0x1d4ef1['moveTo'](59.27557373046875 * _0x5f04a3, 20.406280517578125 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](74.27557373046875 * _0x5f04a3, 5.406280517578125 * _0x5f04a3, 90.27557373046875 * _0x5f04a3, 6.406280517578125 * _0x5f04a3, 99.27557373046875 * _0x5f04a3, 5.406280517578125 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](120.27557373046875 * _0x5f04a3, 5.406280517578125 * _0x5f04a3, 126.27557373046875 * _0x5f04a3, 10.406280517578125 * _0x5f04a3, 136.27557373046875 * _0x5f04a3, 20.406280517578125 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](157.77557373046875 * _0x5f04a3, 37.906280517578125 * _0x5f04a3, 157.77557373046875 * _0x5f04a3, 37.906280517578125 * _0x5f04a3, 179.27557373046875 * _0x5f04a3, 55.406280517578125 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](190.27557373046875 * _0x5f04a3, 63.406280517578125 * _0x5f04a3, 192.27557373046875 * _0x5f04a3, 77.40628051757812 * _0x5f04a3, 189.27557373046875 * _0x5f04a3, 91.40628051757812 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](183.27557373046875 * _0x5f04a3, 108.40628051757812 * _0x5f04a3, 176.27557373046875 * _0x5f04a3, 110.40628051757812 * _0x5f04a3, 169.27557373046875 * _0x5f04a3, 118.40628051757812 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](152.27557373046875 * _0x5f04a3, 133.40628051757812 * _0x5f04a3, 152.27557373046875 * _0x5f04a3, 133.40628051757812 * _0x5f04a3, 135.27557373046875 * _0x5f04a3, 148.40628051757812 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](87.27557373046875 * _0x5f04a3, 143.40628051757812 * _0x5f04a3, 87.27557373046875 * _0x5f04a3, 143.40628051757812 * _0x5f04a3, 39.27557373046875 * _0x5f04a3, 138.40628051757812 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](26.77557373046875 * _0x5f04a3, 123.40628051757812 * _0x5f04a3, 26.77557373046875 * _0x5f04a3, 123.40628051757812 * _0x5f04a3, 14.27557373046875 * _0x5f04a3, 108.40628051757812 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](2.27557373046875 * _0x5f04a3, 95.40628051757812 * _0x5f04a3, 2.27557373046875 * _0x5f04a3, 92.40628051757812 * _0x5f04a3, 3.27557373046875 * _0x5f04a3, 83.40628051757812 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](4.27557373046875 * _0x5f04a3, 63.406280517578125 * _0x5f04a3, 12.27557373046875 * _0x5f04a3, 60.406280517578125 * _0x5f04a3, 24.27557373046875 * _0x5f04a3, 40.406280517578125 * _0x5f04a3), _0x1d4ef1['closePath'](), fill_path(_0x1d4ef1, _0x201da8[0x5], _0x201da8[0x5], 0x4 * _0x5f04a3), _0x1d4ef1['globalAlpha'] = 0x1, _0x1d4ef1['translate'](-0x6e * _0x5f04a3, -0x9b * _0x5f04a3), _0x1d4ef1['beginPath'](), _0x1d4ef1['lineCap'] = 'round', _0x1d4ef1['lineJoin'] = 'round', _0x1d4ef1['moveTo'](0x68 * _0x5f04a3, 237.8000030517578 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x6e * _0x5f04a3, 237.8000030517578 * _0x5f04a3, 0x6e * _0x5f04a3, 237.8000030517578 * _0x5f04a3, 0x74 * _0x5f04a3, 237.8000030517578 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x74 * _0x5f04a3, 241.8000030517578 * _0x5f04a3, 0x74 * _0x5f04a3, 241.8000030517578 * _0x5f04a3, 0x74 * _0x5f04a3, 245.8000030517578 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x73 * _0x5f04a3, 245.3000030517578 * _0x5f04a3, 0x73 * _0x5f04a3, 245.3000030517578 * _0x5f04a3, 0x72 * _0x5f04a3, 244.8000030517578 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](109.5 * _0x5f04a3, 244.8000030517578 * _0x5f04a3, 109.5 * _0x5f04a3, 244.8000030517578 * _0x5f04a3, 0x69 * _0x5f04a3, 244.8000030517578 * _0x5f04a3), _0x1d4ef1['closePath'](), fill_path(_0x1d4ef1, _0x201da8[0x0], _0x201da8[0x1], 0x2 * _0x5f04a3), _0x1d4ef1['beginPath'](), _0x1d4ef1['lineCap'] = 'round', _0x1d4ef1['lineJoin'] = 'round', _0x1d4ef1['moveTo'](0x73 * _0x5f04a3, 211.20000457763672 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x6a * _0x5f04a3, 216.20000457763672 * _0x5f04a3, 0x65 * _0x5f04a3, 234.20000457763672 * _0x5f04a3, 0x66 * _0x5f04a3, 241.20000457763672 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x66 * _0x5f04a3, 260.2000045776367 * _0x5f04a3, 0x73 * _0x5f04a3, 269.2000045776367 * _0x5f04a3, 0x73 * _0x5f04a3, 269.2000045776367 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x74 * _0x5f04a3, 265.2000045776367 * _0x5f04a3, 115.5 * _0x5f04a3, 265.2000045776367 * _0x5f04a3, 0x74 * _0x5f04a3, 261.2000045776367 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x70 * _0x5f04a3, 0x108 * _0x5f04a3, 0x6c * _0x5f04a3, 0xfe * _0x5f04a3, 0x6a * _0x5f04a3, 0xf2 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x69 * _0x5f04a3, 0xe8 * _0x5f04a3, 0x6e * _0x5f04a3, 0xde * _0x5f04a3, 0x73 * _0x5f04a3, 0xda * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x74 * _0x5f04a3, 216.75 * _0x5f04a3, 115.5 * _0x5f04a3, 217.375 * _0x5f04a3, 0x74 * _0x5f04a3, 216.75 * _0x5f04a3), _0x1d4ef1['closePath'](), fill_path(_0x1d4ef1, _0x201da8[0x0], _0x201da8[0x1], 0x2 * _0x5f04a3), _0x1d4ef1['beginPath'](), _0x1d4ef1['lineCap'] = 'round', _0x1d4ef1['lineJoin'] = 'round', _0x1d4ef1['moveTo'](0x78 * _0x5f04a3, 0xcf * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x73 * _0x5f04a3, 0xce * _0x5f04a3, 0x72 * _0x5f04a3, 0xd1 * _0x5f04a3, 0x72 * _0x5f04a3, 0xd3 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x72 * _0x5f04a3, 0x10c * _0x5f04a3, 0x72 * _0x5f04a3, 0xf1 * _0x5f04a3, 0x72 * _0x5f04a3, 0x10f * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x73 * _0x5f04a3, 0x114 * _0x5f04a3, 0x76 * _0x5f04a3, 0x114 * _0x5f04a3, 0x78 * _0x5f04a3, 0x114 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x7a * _0x5f04a3, 0x111 * _0x5f04a3, 120.5 * _0x5f04a3, 274.5 * _0x5f04a3, 0x79 * _0x5f04a3, 0x111 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x79 * _0x5f04a3, 0xf1 * _0x5f04a3, 0x79 * _0x5f04a3, 0xf1 * _0x5f04a3, 0x79 * _0x5f04a3, 0xd1 * _0x5f04a3), _0x1d4ef1['closePath'](), fill_path(_0x1d4ef1, _0x201da8[0x0], _0x201da8[0x1], 0x2 * _0x5f04a3), _0x1d4ef1['beginPath'](), _0x1d4ef1['lineCap'] = 'round', _0x1d4ef1['lineJoin'] = 'round', _0x1d4ef1['moveTo'](0x11c * _0x5f04a3, 0xee * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](289.5 * _0x5f04a3, 0xee * _0x5f04a3, 289.5 * _0x5f04a3, 0xee * _0x5f04a3, 0x127 * _0x5f04a3, 0xee * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x127 * _0x5f04a3, 241.5 * _0x5f04a3, 0x127 * _0x5f04a3, 241.5 * _0x5f04a3, 0x127 * _0x5f04a3, 0xf5 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](289.5 * _0x5f04a3, 0xf5 * _0x5f04a3, 289.5 * _0x5f04a3, 0xf5 * _0x5f04a3, 0x11c * _0x5f04a3, 0xf5 * _0x5f04a3), _0x1d4ef1['closePath'](), fill_path(_0x1d4ef1, _0x201da8[0x0], _0x201da8[0x1], 0x2 * _0x5f04a3), _0x1d4ef1['beginPath'](), _0x1d4ef1['lineCap'] = 'round', _0x1d4ef1['lineJoin'] = 'round', _0x1d4ef1['moveTo'](0x11b * _0x5f04a3, 0xd3 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x125 * _0x5f04a3, 0xd8 * _0x5f04a3, 0x129 * _0x5f04a3, 0xe7 * _0x5f04a3, 0x129 * _0x5f04a3, 0xf1 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x12a * _0x5f04a3, 0xfe * _0x5f04a3, 0x122 * _0x5f04a3, 0x109 * _0x5f04a3, 0x11c * _0x5f04a3, 0x10d * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x11b * _0x5f04a3, 0x10a * _0x5f04a3, 283.5 * _0x5f04a3, 0x10a * _0x5f04a3, 0x11b * _0x5f04a3, 0x107 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x122 * _0x5f04a3, 0x104 * _0x5f04a3, 0x124 * _0x5f04a3, 0xfb * _0x5f04a3, 0x125 * _0x5f04a3, 0xf2 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x124 * _0x5f04a3, 0xdf * _0x5f04a3, 0x121 * _0x5f04a3, 0xe0 * _0x5f04a3, 0x11c * _0x5f04a3, 0xda * _0x5f04a3), _0x1d4ef1['closePath'](), fill_path(_0x1d4ef1, _0x201da8[0x0], _0x201da8[0x1], 0x2 * _0x5f04a3), _0x1d4ef1['beginPath'](), _0x1d4ef1['lineCap'] = 'round', _0x1d4ef1['lineJoin'] = 'round', _0x1d4ef1['moveTo'](0x118 * _0x5f04a3, 0xce * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x11c * _0x5f04a3, 0xce * _0x5f04a3, 0x11d * _0x5f04a3, 0xd0 * _0x5f04a3, 0x11d * _0x5f04a3, 0xd3 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x11d * _0x5f04a3, 241.5 * _0x5f04a3, 0x11d * _0x5f04a3, 241.5 * _0x5f04a3, 0x11d * _0x5f04a3, 0x110 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x11c * _0x5f04a3, 0x113 * _0x5f04a3, 0x11c * _0x5f04a3, 0x113 * _0x5f04a3, 0x118 * _0x5f04a3, 0x113 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x117 * _0x5f04a3, 273.5 * _0x5f04a3, 0x117 * _0x5f04a3, 273.5 * _0x5f04a3, 0x116 * _0x5f04a3, 0x110 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x116 * _0x5f04a3, 240.5 * _0x5f04a3, 0x116 * _0x5f04a3, 240.5 * _0x5f04a3, 0x116 * _0x5f04a3, 0xd1 * _0x5f04a3), _0x1d4ef1['closePath'](), fill_path(_0x1d4ef1, _0x201da8[0x0], _0x201da8[0x1], 0x2 * _0x5f04a3), _0x1d4ef1['beginPath'](), _0x1d4ef1['lineCap'] = 'round', _0x1d4ef1['lineJoin'] = 'round', _0x1d4ef1['moveTo'](0x8a * _0x5f04a3, 298.40000915527344 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x8d * _0x5f04a3, 311.40000915527344 * _0x5f04a3, 0x97 * _0x5f04a3, 314.40000915527344 * _0x5f04a3, 0xa2 * _0x5f04a3, 316.40000915527344 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0xe0 * _0x5f04a3, 316.40000915527344 * _0x5f04a3, 0xc8 * _0x5f04a3, 315.90000915527344 * _0x5f04a3, 0xee * _0x5f04a3, 315.40000915527344 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0xfe * _0x5f04a3, 316.40000915527344 * _0x5f04a3, 0x105 * _0x5f04a3, 306.40000915527344 * _0x5f04a3, 0x108 * _0x5f04a3, 298.40000915527344 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0xff * _0x5f04a3, 304.40000915527344 * _0x5f04a3, 0xfa * _0x5f04a3, 306.40000915527344 * _0x5f04a3, 0xf4 * _0x5f04a3, 306.40000915527344 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0xc9 * _0x5f04a3, 306.90000915527344 * _0x5f04a3, 0xc9 * _0x5f04a3, 306.90000915527344 * _0x5f04a3, 0x9e * _0x5f04a3, 307.40000915527344 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x96 * _0x5f04a3, 306.40000915527344 * _0x5f04a3, 0x94 * _0x5f04a3, 306.40000915527344 * _0x5f04a3, 0x8b * _0x5f04a3, 300.40000915527344 * _0x5f04a3), _0x1d4ef1['closePath'](), fill_path(_0x1d4ef1, _0x201da8[0x0], _0x201da8[0x1], 0x2 * _0x5f04a3), _0x1d4ef1['beginPath'](), _0x1d4ef1['lineCap'] = 'round', _0x1d4ef1['lineJoin'] = 'round', _0x1d4ef1['moveTo'](0xa1 * _0x5f04a3, 177.5999984741211 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x82 * _0x5f04a3, 175.5999984741211 * _0x5f04a3, 0x7b * _0x5f04a3, 190.5999984741211 * _0x5f04a3, 0x7a * _0x5f04a3, 205.5999984741211 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x79 * _0x5f04a3, 277.5999984741211 * _0x5f04a3, 0x7a * _0x5f04a3, 242.5999984741211 * _0x5f04a3, 0x7a * _0x5f04a3, 279.5999984741211 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x80 * _0x5f04a3, 297.5999984741211 * _0x5f04a3, 0x89 * _0x5f04a3, 299.5999984741211 * _0x5f04a3, 0x8f * _0x5f04a3, 300.5999984741211 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0xa3 * _0x5f04a3, 301.0999984741211 * _0x5f04a3, 0xa3 * _0x5f04a3, 301.0999984741211 * _0x5f04a3, 0xb7 * _0x5f04a3, 301.5999984741211 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x96 * _0x5f04a3, 300.5999984741211 * _0x5f04a3, 0x87 * _0x5f04a3, 290.5999984741211 * _0x5f04a3, 0x86 * _0x5f04a3, 267.5999984741211 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x85 * _0x5f04a3, 245.5999984741211 * _0x5f04a3, 0x92 * _0x5f04a3, 235.5999984741211 * _0x5f04a3, 0xa4 * _0x5f04a3, 235.5999984741211 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0xce * _0x5f04a3, 236.0999984741211 * _0x5f04a3, 0xce * _0x5f04a3, 236.0999984741211 * _0x5f04a3, 0xf8 * _0x5f04a3, 236.5999984741211 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x10a * _0x5f04a3, 243.5999984741211 * _0x5f04a3, 0x10c * _0x5f04a3, 259.5999984741211 * _0x5f04a3, 0x10b * _0x5f04a3, 266.5999984741211 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x10a * _0x5f04a3, 288.5999984741211 * _0x5f04a3, 0xfb * _0x5f04a3, 294.5999984741211 * _0x5f04a3, 0xf4 * _0x5f04a3, 297.5999984741211 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](228.5 * _0x5f04a3, 299.5999984741211 * _0x5f04a3, 228.5 * _0x5f04a3, 299.5999984741211 * _0x5f04a3, 0xd5 * _0x5f04a3, 301.5999984741211 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0xec * _0x5f04a3, 301.0999984741211 * _0x5f04a3, 0xec * _0x5f04a3, 301.0999984741211 * _0x5f04a3, 0x103 * _0x5f04a3, 300.5999984741211 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x110 * _0x5f04a3, 295.5999984741211 * _0x5f04a3, 0x115 * _0x5f04a3, 288.5999984741211 * _0x5f04a3, 0x116 * _0x5f04a3, 271.5999984741211 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](277.5 * _0x5f04a3, 236.5999984741211 * _0x5f04a3, 277.5 * _0x5f04a3, 236.5999984741211 * _0x5f04a3, 0x115 * _0x5f04a3, 201.5999984741211 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x114 * _0x5f04a3, 186.5999984741211 * _0x5f04a3, 0x109 * _0x5f04a3, 178.5999984741211 * _0x5f04a3, 0xfe * _0x5f04a3, 177.5999984741211 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](247.5 * _0x5f04a3, 177.5999984741211 * _0x5f04a3, 247.5 * _0x5f04a3, 177.5999984741211 * _0x5f04a3, 0xf1 * _0x5f04a3, 177.5999984741211 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0xff * _0x5f04a3, 202.5999984741211 * _0x5f04a3, 0xd6 * _0x5f04a3, 217.5999984741211 * _0x5f04a3, 0xc9 * _0x5f04a3, 215.5999984741211 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0xaa * _0x5f04a3, 215.5999984741211 * _0x5f04a3, 0x98 * _0x5f04a3, 197.5999984741211 * _0x5f04a3, 0xa1 * _0x5f04a3, 178.5999984741211 * _0x5f04a3), _0x1d4ef1['closePath'](), fill_path(_0x1d4ef1, _0x201da8[0x2], _0x201da8[0x2], 0x4 * _0x5f04a3), _0x1d4ef1['beginPath'](), _0x1d4ef1['lineCap'] = 'round', _0x1d4ef1['lineJoin'] = 'round', _0x1d4ef1['moveTo'](0xa2 * _0x5f04a3, 175.5999984741211 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x99 * _0x5f04a3, 176.0999984741211 * _0x5f04a3, 0x99 * _0x5f04a3, 176.0999984741211 * _0x5f04a3, 0x90 * _0x5f04a3, 176.5999984741211 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x7d * _0x5f04a3, 178.5999984741211 * _0x5f04a3, 0x79 * _0x5f04a3, 196.5999984741211 * _0x5f04a3, 0x79 * _0x5f04a3, 207.5999984741211 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x79 * _0x5f04a3, 243.20000076293945 * _0x5f04a3, 0x79 * _0x5f04a3, 243.20000076293945 * _0x5f04a3, 0x79 * _0x5f04a3, 278.8000030517578 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x7e * _0x5f04a3, 298.8000030517578 * _0x5f04a3, 0x89 * _0x5f04a3, 300.8000030517578 * _0x5f04a3, 0x92 * _0x5f04a3, 302.8000030517578 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](200.5 * _0x5f04a3, 302.8000030517578 * _0x5f04a3, 200.5 * _0x5f04a3, 302.8000030517578 * _0x5f04a3, 0xff * _0x5f04a3, 302.8000030517578 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x10f * _0x5f04a3, 301.8000030517578 * _0x5f04a3, 0x117 * _0x5f04a3, 288.8000030517578 * _0x5f04a3, 0x117 * _0x5f04a3, 273.8000030517578 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x117 * _0x5f04a3, 236.8000030517578 * _0x5f04a3, 0x117 * _0x5f04a3, 236.8000030517578 * _0x5f04a3, 0x117 * _0x5f04a3, 199.8000030517578 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x112 * _0x5f04a3, 178.8000030517578 * _0x5f04a3, 0x107 * _0x5f04a3, 177.8000030517578 * _0x5f04a3, 0xff * _0x5f04a3, 175.8000030517578 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0xf8 * _0x5f04a3, 175.8000030517578 * _0x5f04a3, 0xf8 * _0x5f04a3, 175.8000030517578 * _0x5f04a3, 0xf1 * _0x5f04a3, 175.8000030517578 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0xf0 * _0x5f04a3, 175.8000030517578 * _0x5f04a3, 0xf0 * _0x5f04a3, 175.8000030517578 * _0x5f04a3, 0xef * _0x5f04a3, 175.8000030517578 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0xfe * _0x5f04a3, 200.8000030517578 * _0x5f04a3, 0xde * _0x5f04a3, 211.8000030517578 * _0x5f04a3, 0xca * _0x5f04a3, 212.8000030517578 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0xa8 * _0x5f04a3, 213.8000030517578 * _0x5f04a3, 0x97 * _0x5f04a3, 190.8000030517578 * _0x5f04a3, 0xa3 * _0x5f04a3, 176.8000030517578 * _0x5f04a3), _0x1d4ef1['closePath'](), fill_path(_0x1d4ef1, undefined, _0x201da8[0x3], 0x6 * _0x5f04a3), _0x1d4ef1['beginPath'](), _0x1d4ef1['lineCap'] = 'round', _0x1d4ef1['lineJoin'] = 'round', _0x1d4ef1['moveTo'](0xc6 * _0x5f04a3, 161.4000015258789 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0xc6 * _0x5f04a3, 186.9000015258789 * _0x5f04a3, 0xc6 * _0x5f04a3, 186.9000015258789 * _0x5f04a3, 0xc6 * _0x5f04a3, 212.4000015258789 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0xc9 * _0x5f04a3, 212.4000015258789 * _0x5f04a3, 0xc9 * _0x5f04a3, 212.4000015258789 * _0x5f04a3, 0xcc * _0x5f04a3, 212.4000015258789 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0xcc * _0x5f04a3, 186.9000015258789 * _0x5f04a3, 0xcc * _0x5f04a3, 186.9000015258789 * _0x5f04a3, 0xcc * _0x5f04a3, 161.4000015258789 * _0x5f04a3), _0x1d4ef1['closePath'](), fill_path(_0x1d4ef1, _0x201da8[0x0], _0x201da8[0x1], 0x2 * _0x5f04a3), _0x1d4ef1['beginPath'](), _0x1d4ef1['lineCap'] = 'round', _0x1d4ef1['lineJoin'] = 'round', _0x1d4ef1['moveTo'](0xa1 * _0x5f04a3, 0xc2 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0xbc * _0x5f04a3, 0xa9 * _0x5f04a3, 0xe7 * _0x5f04a3, 0xb3 * _0x5f04a3, 0xf1 * _0x5f04a3, 0xc2 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](239.5 * _0x5f04a3, 0xc4 * _0x5f04a3, 239.5 * _0x5f04a3, 0xc4 * _0x5f04a3, 0xee * _0x5f04a3, 0xc6 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0xdd * _0x5f04a3, 0xb3 * _0x5f04a3, 0xb6 * _0x5f04a3, 0xb6 * _0x5f04a3, 0xa5 * _0x5f04a3, 0xc6 * _0x5f04a3), _0x1d4ef1['closePath'](), fill_path(_0x1d4ef1, _0x201da8[0x0], _0x201da8[0x1], 0x2 * _0x5f04a3), _0x1d4ef1['beginPath'](), _0x1d4ef1['lineCap'] = 'round', _0x1d4ef1['lineJoin'] = 'round', _0x1d4ef1['moveTo'](0x9d * _0x5f04a3, 188.80000019073486 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0xa2 * _0x5f04a3, 150.80000019073486 * _0x5f04a3, 0xf1 * _0x5f04a3, 150.80000019073486 * _0x5f04a3, 0xf5 * _0x5f04a3, 188.80000019073486 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0xf2 * _0x5f04a3, 224.80000019073486 * _0x5f04a3, 0xa2 * _0x5f04a3, 228.80000019073486 * _0x5f04a3, 0x9d * _0x5f04a3, 188.80000019073486 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x9f * _0x5f04a3, 188.80000019073486 * _0x5f04a3, 0x9f * _0x5f04a3, 188.80000019073486 * _0x5f04a3, 0xa1 * _0x5f04a3, 188.80000019073486 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0xa8 * _0x5f04a3, 216.80000019073486 * _0x5f04a3, 0xe7 * _0x5f04a3, 218.80000019073486 * _0x5f04a3, 0xf1 * _0x5f04a3, 188.80000019073486 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0xec * _0x5f04a3, 156.80000019073486 * _0x5f04a3, 0xa9 * _0x5f04a3, 152.80000019073486 * _0x5f04a3, 0xa1 * _0x5f04a3, 188.80000019073486 * _0x5f04a3), _0x1d4ef1['closePath'](), fill_path(_0x1d4ef1, _0x201da8[0x0], _0x201da8[0x1], 0x2 * _0x5f04a3), _0x1d4ef1['beginPath'](), _0x1d4ef1['lineCap'] = 'round', _0x1d4ef1['lineJoin'] = 'round', _0x1d4ef1['moveTo'](0x9c * _0x5f04a3, 0xbc * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0xa0 * _0x5f04a3, 0xa4 * _0x5f04a3, 0xb7 * _0x5f04a3, 0x9f * _0x5f04a3, 0xc9 * _0x5f04a3, 0x9e * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0xe8 * _0x5f04a3, 0x9f * _0x5f04a3, 0xf4 * _0x5f04a3, 0xae * _0x5f04a3, 0xf6 * _0x5f04a3, 0xbc * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0xf5 * _0x5f04a3, 0xd4 * _0x5f04a3, 0xd5 * _0x5f04a3, 0xdb * _0x5f04a3, 0xc9 * _0x5f04a3, 0xda * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0xb5 * _0x5f04a3, 0xdd * _0x5f04a3, 0x9e * _0x5f04a3, 0xcf * _0x5f04a3, 0x9c * _0x5f04a3, 0xbe * _0x5f04a3), _0x1d4ef1['closePath'](), fill_path(_0x1d4ef1, undefined, _0x201da8[0x1], 0x2 * _0x5f04a3), _0x1d4ef1['beginPath'](), _0x1d4ef1['lineCap'] = 'round', _0x1d4ef1['lineJoin'] = 'round', _0x1d4ef1['moveTo'](0xa2 * _0x5f04a3, 0xbd * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0xa6 * _0x5f04a3, 0xaa * _0x5f04a3, 0xb9 * _0x5f04a3, 0xa5 * _0x5f04a3, 0xc9 * _0x5f04a3, 0xa4 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0xe3 * _0x5f04a3, 0xa5 * _0x5f04a3, 0xf0 * _0x5f04a3, 0xb2 * _0x5f04a3, 0xef * _0x5f04a3, 0xbc * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0xef * _0x5f04a3, 0xcc * _0x5f04a3, 0xd2 * _0x5f04a3, 0xd2 * _0x5f04a3, 0xc9 * _0x5f04a3, 0xd2 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0xb6 * _0x5f04a3, 0xd3 * _0x5f04a3, 0xa6 * _0x5f04a3, 0xc8 * _0x5f04a3, 0xa2 * _0x5f04a3, 0xbe * _0x5f04a3), _0x1d4ef1['closePath'](), fill_path(_0x1d4ef1, undefined, _0x201da8[0x1], 0x2 * _0x5f04a3), _0x1d4ef1['beginPath'](), _0x1d4ef1['lineCap'] = 'round', _0x1d4ef1['lineJoin'] = 'round', _0x1d4ef1['moveTo'](0x83 * _0x5f04a3, 0x106 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x88 * _0x5f04a3, 0xf1 * _0x5f04a3, 0x90 * _0x5f04a3, 0xec * _0x5f04a3, 0x9e * _0x5f04a3, 0xe9 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](200.5 * _0x5f04a3, 0xe9 * _0x5f04a3, 0xe5 * _0x5f04a3, 0xe8 * _0x5f04a3, 0xf3 * _0x5f04a3, 0xe9 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x103 * _0x5f04a3, 0xeb * _0x5f04a3, 0x10b * _0x5f04a3, 0xf8 * _0x5f04a3, 0x10d * _0x5f04a3, 0x104 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x10d * _0x5f04a3, 266.5 * _0x5f04a3, 0x10d * _0x5f04a3, 266.5 * _0x5f04a3, 0x10d * _0x5f04a3, 0x111 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x109 * _0x5f04a3, 0x122 * _0x5f04a3, 0xfb * _0x5f04a3, 0x129 * _0x5f04a3, 0xf2 * _0x5f04a3, 0x12a * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0xca * _0x5f04a3, 0x12a * _0x5f04a3, 0xca * _0x5f04a3, 0x12a * _0x5f04a3, 0xa2 * _0x5f04a3, 0x12a * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x94 * _0x5f04a3, 0x12a * _0x5f04a3, 0x88 * _0x5f04a3, 0x121 * _0x5f04a3, 0x84 * _0x5f04a3, 0x111 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](131.5 * _0x5f04a3, 0x10c * _0x5f04a3, 131.5 * _0x5f04a3, 0x10c * _0x5f04a3, 0x83 * _0x5f04a3, 0x107 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x87 * _0x5f04a3, 0x107 * _0x5f04a3, 0x87 * _0x5f04a3, 0x107 * _0x5f04a3, 0x8b * _0x5f04a3, 0x107 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x8b * _0x5f04a3, 0x119 * _0x5f04a3, 0x97 * _0x5f04a3, 0x11f * _0x5f04a3, 0xa0 * _0x5f04a3, 0x122 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](200.5 * _0x5f04a3, 0x122 * _0x5f04a3, 200.5 * _0x5f04a3, 0x122 * _0x5f04a3, 0xf1 * _0x5f04a3, 0x122 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0xfc * _0x5f04a3, 0x122 * _0x5f04a3, 0x101 * _0x5f04a3, 0x119 * _0x5f04a3, 0x106 * _0x5f04a3, 0x10f * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](261.5 * _0x5f04a3, 0x10b * _0x5f04a3, 261.5 * _0x5f04a3, 0x10b * _0x5f04a3, 0x105 * _0x5f04a3, 0x107 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x104 * _0x5f04a3, 0xf9 * _0x5f04a3, 0xfb * _0x5f04a3, 0xf2 * _0x5f04a3, 0xf1 * _0x5f04a3, 0xf1 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](240.5 * _0x5f04a3, 240.5 * _0x5f04a3, 240.5 * _0x5f04a3, 240.5 * _0x5f04a3, 0xf0 * _0x5f04a3, 0xf0 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0xc8 * _0x5f04a3, 0xf0 * _0x5f04a3, 0xc8 * _0x5f04a3, 0xf0 * _0x5f04a3, 0xa0 * _0x5f04a3, 0xf0 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x91 * _0x5f04a3, 0xf4 * _0x5f04a3, 0x8e * _0x5f04a3, 0xfa * _0x5f04a3, 0x8b * _0x5f04a3, 0x108 * _0x5f04a3), _0x1d4ef1['closePath'](), fill_path(_0x1d4ef1, _0x201da8[0x0], _0x201da8[0x0], 0x2 * _0x5f04a3), _0x1d4ef1['beginPath'](), _0x1d4ef1['lineCap'] = 'round', _0x1d4ef1['lineJoin'] = 'round', _0x1d4ef1['moveTo'](0x82 * _0x5f04a3, 0x108 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x84 * _0x5f04a3, 0xf4 * _0x5f04a3, 0x90 * _0x5f04a3, 0xeb * _0x5f04a3, 0x9d * _0x5f04a3, 0xe8 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0xf5 * _0x5f04a3, 0xe8 * _0x5f04a3, 0xc9 * _0x5f04a3, 0xe8 * _0x5f04a3, 0xf5 * _0x5f04a3, 0xe8 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x108 * _0x5f04a3, 0xeb * _0x5f04a3, 0x10d * _0x5f04a3, 0xfb * _0x5f04a3, 0x10e * _0x5f04a3, 0x108 * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x110 * _0x5f04a3, 0x123 * _0x5f04a3, 0xf8 * _0x5f04a3, 0x12b * _0x5f04a3, 0xf2 * _0x5f04a3, 0x12b * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0xc8 * _0x5f04a3, 0x12b * _0x5f04a3, 0xc8 * _0x5f04a3, 0x12b * _0x5f04a3, 0x9e * _0x5f04a3, 0x12b * _0x5f04a3), _0x1d4ef1['bezierCurveTo'](0x8b * _0x5f04a3, 0x12a * _0x5f04a3, 0x82 * _0x5f04a3, 0x114 * _0x5f04a3, 0x82 * _0x5f04a3, 0x109 * _0x5f04a3), _0x1d4ef1['closePath'](), fill_path(_0x1d4ef1, undefined, _0x201da8[0x1], 0x2 * _0x5f04a3), _0x2fc1de;
}

function create_windmill_chest(_0x207f6c, _0x3d01a5) {
    var _0x188b78 = document['createElement']('canvas'),
        _0x1daf68 = _0x188b78['getContext']('2d');
    return _0x188b78['width'] = 0xf3 * _0x207f6c, _0x188b78['height'] = 0xac * _0x207f6c, circle(_0x1daf68, 119.5 * _0x207f6c, 140.125 * _0x207f6c, 0x13 * _0x207f6c), fill_path(_0x1daf68, undefined, _0x3d01a5[0x1], 0x5 * _0x207f6c), _0x1daf68['beginPath'](), _0x1daf68['lineCap'] = 'round', _0x1daf68['lineJoin'] = 'round', _0x1daf68['moveTo'](36.5 * _0x207f6c, 20.125 * _0x207f6c), _0x1daf68['bezierCurveTo'](119.5 * _0x207f6c, 20.625 * _0x207f6c, 119.5 * _0x207f6c, 20.625 * _0x207f6c, 202.5 * _0x207f6c, 21.125 * _0x207f6c), _0x1daf68['bezierCurveTo'](214.5 * _0x207f6c, 22.125 * _0x207f6c, 216.5 * _0x207f6c, 26.125 * _0x207f6c, 217.5 * _0x207f6c, 35.125 * _0x207f6c), _0x1daf68['bezierCurveTo'](0xdd * _0x207f6c, 76.125 * _0x207f6c, 0xdd * _0x207f6c, 76.125 * _0x207f6c, 224.5 * _0x207f6c, 117.125 * _0x207f6c), _0x1daf68['bezierCurveTo'](225.5 * _0x207f6c, 127.125 * _0x207f6c, 221.5 * _0x207f6c, 131.125 * _0x207f6c, 210.5 * _0x207f6c, 132.125 * _0x207f6c), _0x1daf68['bezierCurveTo'](117.5 * _0x207f6c, 132.125 * _0x207f6c, 117.5 * _0x207f6c, 132.125 * _0x207f6c, 24.5 * _0x207f6c, 132.125 * _0x207f6c), _0x1daf68['bezierCurveTo'](14.5 * _0x207f6c, 131.125 * _0x207f6c, 13.5 * _0x207f6c, 126.125 * _0x207f6c, 16.5 * _0x207f6c, 111.125 * _0x207f6c), _0x1daf68['bezierCurveTo'](19.5 * _0x207f6c, 73.125 * _0x207f6c, 19.5 * _0x207f6c, 73.125 * _0x207f6c, 22.5 * _0x207f6c, 35.125 * _0x207f6c), _0x1daf68['bezierCurveTo'](23.5 * _0x207f6c, 23.125 * _0x207f6c, 29.5 * _0x207f6c, 21.125 * _0x207f6c, 36.5 * _0x207f6c, 20.125 * _0x207f6c), _0x1daf68['closePath'](), fill_path(_0x1daf68, _0x3d01a5[0x0], _0x3d01a5[0x1], 0x4 * _0x207f6c), _0x1daf68['beginPath'](), _0x1daf68['lineCap'] = 'round', _0x1daf68['lineJoin'] = 'round', _0x1daf68['moveTo'](15.5 * _0x207f6c, 138.625 * _0x207f6c), _0x1daf68['bezierCurveTo'](0x78 * _0x207f6c, 138.625 * _0x207f6c, 0x78 * _0x207f6c, 138.625 * _0x207f6c, 224.5 * _0x207f6c, 138.625 * _0x207f6c), _0x1daf68['closePath'](), fill_path(_0x1daf68, undefined, _0x3d01a5[0x2], 0xa * _0x207f6c), _0x1daf68['beginPath'](), _0x1daf68['lineCap'] = 'round', _0x1daf68['lineJoin'] = 'round', _0x1daf68['moveTo'](13.5 * _0x207f6c, 131.625 * _0x207f6c), _0x1daf68['bezierCurveTo'](119.5 * _0x207f6c, 131.625 * _0x207f6c, 119.5 * _0x207f6c, 131.625 * _0x207f6c, 225.5 * _0x207f6c, 131.625 * _0x207f6c), _0x1daf68['closePath'](), fill_path(_0x1daf68, undefined, _0x3d01a5[0x3], 0xa * _0x207f6c), circle(_0x1daf68, 119.5 * _0x207f6c, 140.125 * _0x207f6c, 14.866068747318506 * _0x207f6c), fill_path(_0x1daf68, _0x3d01a5[0x4], _0x3d01a5[0x5], 0x4 * _0x207f6c), _0x1daf68['beginPath'](), _0x1daf68['lineCap'] = 'round', _0x1daf68['lineJoin'] = 'round', _0x1daf68['moveTo'](106.5 * _0x207f6c, 146.625 * _0x207f6c), _0x1daf68['bezierCurveTo'](116.5 * _0x207f6c, 137.625 * _0x207f6c, 118.5 * _0x207f6c, 136.625 * _0x207f6c, 123.5 * _0x207f6c, 138.625 * _0x207f6c), _0x1daf68['bezierCurveTo'](131.5 * _0x207f6c, 145.625 * _0x207f6c, 133.5 * _0x207f6c, 148.625 * _0x207f6c, 127.5 * _0x207f6c, 152.625 * _0x207f6c), _0x1daf68['bezierCurveTo'](115.5 * _0x207f6c, 158.625 * _0x207f6c, 111.5 * _0x207f6c, 153.625 * _0x207f6c, 106.5 * _0x207f6c, 147.625 * _0x207f6c), _0x1daf68['closePath'](), fill_path(_0x1daf68, _0x3d01a5[0x6], _0x3d01a5[0x7], 0x2 * _0x207f6c), _0x1daf68['beginPath'](), _0x1daf68['lineCap'] = 'round', _0x1daf68['lineJoin'] = 'round', _0x1daf68['moveTo'](105.5 * _0x207f6c, 146.625 * _0x207f6c), _0x1daf68['bezierCurveTo'](116.5 * _0x207f6c, 159.625 * _0x207f6c, 124.5 * _0x207f6c, 156.625 * _0x207f6c, 132.5 * _0x207f6c, 146.625 * _0x207f6c), fill_path(_0x1daf68, undefined, _0x3d01a5[0x8], 0x5 * _0x207f6c), _0x1daf68['save'](), _0x1daf68['translate'](75.5 * _0x207f6c, 80.125 * _0x207f6c), round_rect(_0x1daf68, -0x27 * _0x207f6c, -0x28 * _0x207f6c, 0x4e * _0x207f6c, 0x4e * _0x207f6c, 0xa * _0x207f6c), _0x1daf68['restore'](), fill_path(_0x1daf68, _0x3d01a5[0x9]), _0x1daf68['save'](), _0x1daf68['translate'](0xa7 * _0x207f6c, 80.125 * _0x207f6c), round_rect(_0x1daf68, -38.5 * _0x207f6c, -0x27 * _0x207f6c, 0x4e * _0x207f6c, 0x4e * _0x207f6c, 0xa * _0x207f6c), _0x1daf68['restore'](), fill_path(_0x1daf68, _0x3d01a5[0x9]), _0x188b78;
}

function create_cake(_0x578126, _0x4990d9, _0x575812) {
    var _0x2968bd = document['createElement']('canvas'),
        _0x3b5914 = _0x2968bd['getContext']('2d');
    return _0x2968bd['width'] = 0x190 * _0x578126, _0x2968bd['height'] = 0x190 * _0x578126, _0x3b5914['beginPath'](), _0x3b5914['lineCap'] = 'round', _0x3b5914['lineJoin'] = 'round', _0x3b5914['moveTo'](96.5 * _0x578126, 277.34375 * _0x578126), _0x3b5914['bezierCurveTo'](197.5 * _0x578126, 259.84375 * _0x578126, 197.5 * _0x578126, 259.84375 * _0x578126, 298.5 * _0x578126, 242.34375 * _0x578126), _0x3b5914['bezierCurveTo'](311.5 * _0x578126, 231.34375 * _0x578126, 307.5 * _0x578126, 168.34375 * _0x578126, 298.5 * _0x578126, 150.34375 * _0x578126), _0x3b5914['bezierCurveTo'](0xc6 * _0x578126, 170.34375 * _0x578126, 0xc6 * _0x578126, 170.34375 * _0x578126, 97.5 * _0x578126, 190.34375 * _0x578126), _0x3b5914['closePath'](), fill_path(_0x3b5914, _0x575812[0x1], _0x575812[0x2], 0xc * _0x578126), _0x3b5914['beginPath'](), _0x3b5914['lineCap'] = 'round', _0x3b5914['lineJoin'] = 'round', _0x3b5914['moveTo'](98.5 * _0x578126, 214.34375 * _0x578126), _0x3b5914['bezierCurveTo'](0xc7 * _0x578126, 196.34375 * _0x578126, 0xc7 * _0x578126, 196.34375 * _0x578126, 299.5 * _0x578126, 178.34375 * _0x578126), _0x3b5914['closePath'](), fill_path(_0x3b5914, undefined, _0x575812[0x2], 0xc * _0x578126), _0x3b5914['beginPath'](), _0x3b5914['lineCap'] = 'round', _0x3b5914['lineJoin'] = 'round', _0x3b5914['moveTo'](98.5 * _0x578126, 247.34375 * _0x578126), _0x3b5914['bezierCurveTo'](201.5 * _0x578126, 229.34375 * _0x578126, 201.5 * _0x578126, 229.34375 * _0x578126, 304.5 * _0x578126, 211.34375 * _0x578126), _0x3b5914['closePath'](), fill_path(_0x3b5914, undefined, _0x575812[0x2], 0xc * _0x578126), _0x3b5914['beginPath'](), _0x3b5914['lineCap'] = 'round', _0x3b5914['lineJoin'] = 'round', _0x3b5914['moveTo'](97.5 * _0x578126, 189.34375 * _0x578126), _0x3b5914['bezierCurveTo'](0x61 * _0x578126, 199.84375 * _0x578126, 0x61 * _0x578126, 199.84375 * _0x578126, 96.5 * _0x578126, 210.34375 * _0x578126), _0x3b5914['bezierCurveTo'](110.5 * _0x578126, 204.34375 * _0x578126, 110.5 * _0x578126, 204.34375 * _0x578126, 124.5 * _0x578126, 198.34375 * _0x578126), _0x3b5914['bezierCurveTo'](137.5 * _0x578126, 203.84375 * _0x578126, 137.5 * _0x578126, 203.84375 * _0x578126, 150.5 * _0x578126, 209.34375 * _0x578126), _0x3b5914['bezierCurveTo'](0xac * _0x578126, 197.84375 * _0x578126, 0xac * _0x578126, 197.84375 * _0x578126, 193.5 * _0x578126, 186.34375 * _0x578126), _0x3b5914['bezierCurveTo'](211.5 * _0x578126, 189.84375 * _0x578126, 211.5 * _0x578126, 189.84375 * _0x578126, 229.5 * _0x578126, 193.34375 * _0x578126), _0x3b5914['bezierCurveTo'](240.5 * _0x578126, 193.34375 * _0x578126, 240.5 * _0x578126, 193.34375 * _0x578126, 251.5 * _0x578126, 193.34375 * _0x578126), _0x3b5914['bezierCurveTo'](0x105 * _0x578126, 182.84375 * _0x578126, 0x105 * _0x578126, 182.84375 * _0x578126, 270.5 * _0x578126, 172.34375 * _0x578126), _0x3b5914['bezierCurveTo'](287.5 * _0x578126, 169.34375 * _0x578126, 287.5 * _0x578126, 169.34375 * _0x578126, 304.5 * _0x578126, 166.34375 * _0x578126), _0x3b5914['bezierCurveTo'](304.5 * _0x578126, 156.34375 * _0x578126, 300.5 * _0x578126, 145.34375 * _0x578126, 298.5 * _0x578126, 147.34375 * _0x578126), _0x3b5914['closePath'](), fill_path(_0x3b5914, _0x575812[0x3], _0x575812[0x4], 0xc * _0x578126), _0x3b5914['beginPath'](), _0x3b5914['lineCap'] = 'round', _0x3b5914['lineJoin'] = 'round', _0x3b5914['moveTo'](300.5 * _0x578126, 147.34375 * _0x578126), _0x3b5914['bezierCurveTo'](293.5 * _0x578126, 121.34375 * _0x578126, 278.5 * _0x578126, 106.34375 * _0x578126, 256.5 * _0x578126, 101.34375 * _0x578126), _0x3b5914['bezierCurveTo'](176.5 * _0x578126, 145.34375 * _0x578126, 176.5 * _0x578126, 145.34375 * _0x578126, 96.5 * _0x578126, 189.34375 * _0x578126), _0x3b5914['closePath'](), fill_path(_0x3b5914, _0x575812[0x5], _0x575812[0x6], 0xc * _0x578126), circle(_0x3b5914, 252.5 * _0x578126, 129.34375 * _0x578126, 18.027756377319946 * _0x578126), fill_path(_0x3b5914, _0x575812[0x7]), circle(_0x3b5914, 248.5 * _0x578126, 121.34375 * _0x578126, 8.246211251235321 * _0x578126), fill_path(_0x3b5914, _0x575812[0x8]), _0x2968bd;
}

function create_fishfood(_0x8290ae, _0x28751b, _0x3a7f8e) {
    var _0x2564f8 = document['createElement']('canvas'),
        _0x170991 = _0x2564f8['getContext']('2d');
    return _0x2564f8['width'] = 0x190 * _0x8290ae, _0x2564f8['height'] = 0x190 * _0x8290ae, _0x170991['globalAlpha'] = _0x28751b ? 0.5 : 0x1, _0x170991['translate'](0xa * _0x8290ae, 0x5 * _0x8290ae), _0x170991['beginPath'](), _0x170991['lineCap'] = 'round', _0x170991['lineJoin'] = 'round', _0x170991['moveTo'](100.5 * _0x8290ae, 126.34375 * _0x8290ae), _0x170991['bezierCurveTo'](151.5 * _0x8290ae, 104.34375 * _0x8290ae, 279.5 * _0x8290ae, 188.34375 * _0x8290ae, 297.5 * _0x8290ae, 292.34375 * _0x8290ae), _0x170991['bezierCurveTo'](222.5 * _0x8290ae, 307.34375 * _0x8290ae, 106.5 * _0x8290ae, 196.34375 * _0x8290ae, 100.5 * _0x8290ae, 127.34375 * _0x8290ae), _0x170991['closePath'](), fill_path(_0x170991, _0x3a7f8e[0x0], _0x3a7f8e[0x0], 0xc * _0x8290ae), _0x170991['beginPath'](), _0x170991['lineCap'] = 'round', _0x170991['lineJoin'] = 'round', _0x170991['moveTo'](106.5 * _0x8290ae, 131.34375 * _0x8290ae), _0x170991['bezierCurveTo'](140.5 * _0x8290ae, 142.34375 * _0x8290ae, 225.5 * _0x8290ae, 184.34375 * _0x8290ae, 290.5 * _0x8290ae, 287.34375 * _0x8290ae), _0x170991['bezierCurveTo'](270.5 * _0x8290ae, 188.34375 * _0x8290ae, 152.5 * _0x8290ae, 118.34375 * _0x8290ae, 107.5 * _0x8290ae, 131.34375 * _0x8290ae), _0x170991['closePath'](), fill_path(_0x170991, _0x3a7f8e[0x0]), _0x170991['beginPath'](), _0x170991['lineCap'] = 'round', _0x170991['lineJoin'] = 'round', _0x170991['moveTo'](157.5 * _0x8290ae, 137.34375 * _0x8290ae), _0x170991['bezierCurveTo'](161.5 * _0x8290ae, 138.34375 * _0x8290ae, 164.5 * _0x8290ae, 140.34375 * _0x8290ae, 168.5 * _0x8290ae, 142.34375 * _0x8290ae), _0x170991['bezierCurveTo'](165.5 * _0x8290ae, 156.34375 * _0x8290ae, 141.5 * _0x8290ae, 176.34375 * _0x8290ae, 126.5 * _0x8290ae, 179.34375 * _0x8290ae), _0x170991['bezierCurveTo'](123.5 * _0x8290ae, 173.34375 * _0x8290ae, 120.5 * _0x8290ae, 169.34375 * _0x8290ae, 120.5 * _0x8290ae, 169.34375 * _0x8290ae), _0x170991['bezierCurveTo'](141.5 * _0x8290ae, 161.34375 * _0x8290ae, 156.5 * _0x8290ae, 145.34375 * _0x8290ae, 155.5 * _0x8290ae, 136.34375 * _0x8290ae), _0x170991['closePath'](), fill_path(_0x170991, _0x3a7f8e[0x0]), _0x170991['beginPath'](), _0x170991['lineCap'] = 'round', _0x170991['lineJoin'] = 'round', _0x170991['moveTo'](196.5 * _0x8290ae, 151.34375 * _0x8290ae), _0x170991['bezierCurveTo'](211.5 * _0x8290ae, 158.34375 * _0x8290ae, 224.5 * _0x8290ae, 171.34375 * _0x8290ae, 229.5 * _0x8290ae, 176.34375 * _0x8290ae), _0x170991['bezierCurveTo'](246.5 * _0x8290ae, 163.34375 * _0x8290ae, 259.5 * _0x8290ae, 166.34375 * _0x8290ae, 272.5 * _0x8290ae, 168.34375 * _0x8290ae), _0x170991['bezierCurveTo'](254.5 * _0x8290ae, 146.34375 * _0x8290ae, 214.5 * _0x8290ae, 145.34375 * _0x8290ae, 198.5 * _0x8290ae, 151.34375 * _0x8290ae), _0x170991['closePath'](), fill_path(_0x170991, _0x3a7f8e[0x0], _0x3a7f8e[0x0], 0xc * _0x8290ae), _0x170991['beginPath'](), _0x170991['lineCap'] = 'round', _0x170991['lineJoin'] = 'round', _0x170991['moveTo'](154.5 * _0x8290ae, 222.34375 * _0x8290ae), _0x170991['bezierCurveTo'](164.5 * _0x8290ae, 234.34375 * _0x8290ae, 173.5 * _0x8290ae, 242.34375 * _0x8290ae, 178.5 * _0x8290ae, 245.34375 * _0x8290ae), _0x170991['bezierCurveTo'](174.5 * _0x8290ae, 265.34375 * _0x8290ae, 180.5 * _0x8290ae, 274.34375 * _0x8290ae, 186.5 * _0x8290ae, 283.34375 * _0x8290ae), _0x170991['bezierCurveTo'](165.5 * _0x8290ae, 277.34375 * _0x8290ae, 151.5 * _0x8290ae, 245.34375 * _0x8290ae, 155.5 * _0x8290ae, 224.34375 * _0x8290ae), _0x170991['closePath'](), fill_path(_0x170991, _0x3a7f8e[0x0], _0x3a7f8e[0x0], 0xc * _0x8290ae), _0x170991['beginPath'](), _0x170991['lineCap'] = 'round', _0x170991['lineJoin'] = 'round', _0x170991['moveTo'](279.5 * _0x8290ae, 294.34375 * _0x8290ae), _0x170991['bezierCurveTo'](286.5 * _0x8290ae, 285.84375 * _0x8290ae, 286.5 * _0x8290ae, 285.84375 * _0x8290ae, 293.5 * _0x8290ae, 277.34375 * _0x8290ae), _0x170991['bezierCurveTo'](315.5 * _0x8290ae, 280.34375 * _0x8290ae, 315.5 * _0x8290ae, 280.34375 * _0x8290ae, 337.5 * _0x8290ae, 283.34375 * _0x8290ae), _0x170991['bezierCurveTo'](340.5 * _0x8290ae, 311.34375 * _0x8290ae, 317.5 * _0x8290ae, 326.34375 * _0x8290ae, 307.5 * _0x8290ae, 331.34375 * _0x8290ae), _0x170991['closePath'](), fill_path(_0x170991, _0x3a7f8e[0x0], _0x3a7f8e[0x0], 0xc * _0x8290ae), _0x170991['globalAlpha'] = 0x1, _0x170991['translate'](-0xa * _0x8290ae, -0x5 * _0x8290ae), _0x170991['beginPath'](), _0x170991['lineCap'] = 'round', _0x170991['lineJoin'] = 'round', _0x170991['moveTo'](100.5 * _0x8290ae, 126.34375 * _0x8290ae), _0x170991['bezierCurveTo'](151.5 * _0x8290ae, 104.34375 * _0x8290ae, 279.5 * _0x8290ae, 188.34375 * _0x8290ae, 297.5 * _0x8290ae, 292.34375 * _0x8290ae), _0x170991['bezierCurveTo'](222.5 * _0x8290ae, 307.34375 * _0x8290ae, 106.5 * _0x8290ae, 196.34375 * _0x8290ae, 100.5 * _0x8290ae, 127.34375 * _0x8290ae), _0x170991['closePath'](), fill_path(_0x170991, _0x3a7f8e[0x1], _0x3a7f8e[0x2], 0xc * _0x8290ae), _0x170991['beginPath'](), _0x170991['lineCap'] = 'round', _0x170991['lineJoin'] = 'round', _0x170991['moveTo'](106.5 * _0x8290ae, 131.34375 * _0x8290ae), _0x170991['bezierCurveTo'](140.5 * _0x8290ae, 142.34375 * _0x8290ae, 225.5 * _0x8290ae, 184.34375 * _0x8290ae, 290.5 * _0x8290ae, 287.34375 * _0x8290ae), _0x170991['bezierCurveTo'](270.5 * _0x8290ae, 188.34375 * _0x8290ae, 152.5 * _0x8290ae, 118.34375 * _0x8290ae, 107.5 * _0x8290ae, 131.34375 * _0x8290ae), _0x170991['closePath'](), fill_path(_0x170991, _0x3a7f8e[0x3]), _0x170991['beginPath'](), _0x170991['lineCap'] = 'round', _0x170991['lineJoin'] = 'round', _0x170991['moveTo'](157.5 * _0x8290ae, 137.34375 * _0x8290ae), _0x170991['bezierCurveTo'](161.5 * _0x8290ae, 138.34375 * _0x8290ae, 164.5 * _0x8290ae, 140.34375 * _0x8290ae, 168.5 * _0x8290ae, 142.34375 * _0x8290ae), _0x170991['bezierCurveTo'](165.5 * _0x8290ae, 156.34375 * _0x8290ae, 141.5 * _0x8290ae, 176.34375 * _0x8290ae, 126.5 * _0x8290ae, 179.34375 * _0x8290ae), _0x170991['bezierCurveTo'](123.5 * _0x8290ae, 173.34375 * _0x8290ae, 120.5 * _0x8290ae, 169.34375 * _0x8290ae, 120.5 * _0x8290ae, 169.34375 * _0x8290ae), _0x170991['bezierCurveTo'](141.5 * _0x8290ae, 161.34375 * _0x8290ae, 156.5 * _0x8290ae, 145.34375 * _0x8290ae, 155.5 * _0x8290ae, 136.34375 * _0x8290ae), _0x170991['closePath'](), fill_path(_0x170991, _0x3a7f8e[0x4]), circle(_0x170991, 125.5 * _0x8290ae, 140.34375 * _0x8290ae, 11.180339887498949 * _0x8290ae), fill_path(_0x170991, _0x3a7f8e[0x5]), circle(_0x170991, 122.5 * _0x8290ae, 135.34375 * _0x8290ae, 5.0990195135927845 * _0x8290ae), fill_path(_0x170991, _0x3a7f8e[0x6]), _0x170991['beginPath'](), _0x170991['lineCap'] = 'round', _0x170991['lineJoin'] = 'round', _0x170991['moveTo'](196.5 * _0x8290ae, 151.34375 * _0x8290ae), _0x170991['bezierCurveTo'](211.5 * _0x8290ae, 158.34375 * _0x8290ae, 224.5 * _0x8290ae, 171.34375 * _0x8290ae, 229.5 * _0x8290ae, 176.34375 * _0x8290ae), _0x170991['bezierCurveTo'](246.5 * _0x8290ae, 163.34375 * _0x8290ae, 259.5 * _0x8290ae, 166.34375 * _0x8290ae, 272.5 * _0x8290ae, 168.34375 * _0x8290ae), _0x170991['bezierCurveTo'](254.5 * _0x8290ae, 146.34375 * _0x8290ae, 214.5 * _0x8290ae, 145.34375 * _0x8290ae, 198.5 * _0x8290ae, 151.34375 * _0x8290ae), _0x170991['closePath'](), fill_path(_0x170991, _0x3a7f8e[0x7], _0x3a7f8e[0x8], 0xc * _0x8290ae), _0x170991['beginPath'](), _0x170991['lineCap'] = 'round', _0x170991['lineJoin'] = 'round', _0x170991['moveTo'](154.5 * _0x8290ae, 222.34375 * _0x8290ae), _0x170991['bezierCurveTo'](164.5 * _0x8290ae, 234.34375 * _0x8290ae, 173.5 * _0x8290ae, 242.34375 * _0x8290ae, 178.5 * _0x8290ae, 245.34375 * _0x8290ae), _0x170991['bezierCurveTo'](174.5 * _0x8290ae, 265.34375 * _0x8290ae, 180.5 * _0x8290ae, 274.34375 * _0x8290ae, 186.5 * _0x8290ae, 283.34375 * _0x8290ae), _0x170991['bezierCurveTo'](165.5 * _0x8290ae, 277.34375 * _0x8290ae, 151.5 * _0x8290ae, 245.34375 * _0x8290ae, 155.5 * _0x8290ae, 224.34375 * _0x8290ae), _0x170991['closePath'](), fill_path(_0x170991, _0x3a7f8e[0x7], _0x3a7f8e[0x8], 0xc * _0x8290ae), _0x170991['beginPath'](), _0x170991['lineCap'] = 'round', _0x170991['lineJoin'] = 'round', _0x170991['moveTo'](279.5 * _0x8290ae, 294.34375 * _0x8290ae), _0x170991['bezierCurveTo'](286.5 * _0x8290ae, 285.84375 * _0x8290ae, 286.5 * _0x8290ae, 285.84375 * _0x8290ae, 293.5 * _0x8290ae, 277.34375 * _0x8290ae), _0x170991['bezierCurveTo'](315.5 * _0x8290ae, 280.34375 * _0x8290ae, 315.5 * _0x8290ae, 280.34375 * _0x8290ae, 337.5 * _0x8290ae, 283.34375 * _0x8290ae), _0x170991['bezierCurveTo'](340.5 * _0x8290ae, 311.34375 * _0x8290ae, 317.5 * _0x8290ae, 326.34375 * _0x8290ae, 307.5 * _0x8290ae, 331.34375 * _0x8290ae), _0x170991['closePath'](), fill_path(_0x170991, _0x3a7f8e[0x7], _0x3a7f8e[0x8], 0xc * _0x8290ae), _0x170991['beginPath'](), _0x170991['lineCap'] = 'round', _0x170991['lineJoin'] = 'round', _0x170991['moveTo'](296.5 * _0x8290ae, 287.34375 * _0x8290ae), _0x170991['bezierCurveTo'](311.5 * _0x8290ae, 291.34375 * _0x8290ae, 311.5 * _0x8290ae, 291.34375 * _0x8290ae, 326.5 * _0x8290ae, 295.34375 * _0x8290ae), _0x170991['closePath'](), fill_path(_0x170991, undefined, _0x3a7f8e[0x9], 0x6 * _0x8290ae), _0x170991['beginPath'](), _0x170991['lineCap'] = 'round', _0x170991['lineJoin'] = 'round', _0x170991['moveTo'](294.5 * _0x8290ae, 289.34375 * _0x8290ae), _0x170991['bezierCurveTo'](308.5 * _0x8290ae, 297.34375 * _0x8290ae, 308.5 * _0x8290ae, 297.34375 * _0x8290ae, 322.5 * _0x8290ae, 305.34375 * _0x8290ae), _0x170991['closePath'](), fill_path(_0x170991, undefined, _0x3a7f8e[0x9], 0x6 * _0x8290ae), _0x170991['beginPath'](), _0x170991['lineCap'] = 'round', _0x170991['lineJoin'] = 'round', _0x170991['moveTo'](294.5 * _0x8290ae, 291.34375 * _0x8290ae), _0x170991['bezierCurveTo'](0x130 * _0x8290ae, 303.34375 * _0x8290ae, 0x130 * _0x8290ae, 303.34375 * _0x8290ae, 313.5 * _0x8290ae, 315.34375 * _0x8290ae), _0x170991['closePath'](), fill_path(_0x170991, undefined, _0x3a7f8e[0x9], 0x6 * _0x8290ae), _0x170991['beginPath'](), _0x170991['lineCap'] = 'round', _0x170991['lineJoin'] = 'round', _0x170991['moveTo'](226.5 * _0x8290ae, 161.34375 * _0x8290ae), _0x170991['bezierCurveTo'](230.5 * _0x8290ae, 160.34375 * _0x8290ae, 236.5 * _0x8290ae, 158.34375 * _0x8290ae, 238.5 * _0x8290ae, 161.34375 * _0x8290ae), _0x170991['bezierCurveTo'](238.5 * _0x8290ae, 157.34375 * _0x8290ae, 228.5 * _0x8290ae, 159.34375 * _0x8290ae, 227.5 * _0x8290ae, 161.34375 * _0x8290ae), _0x170991['closePath'](), fill_path(_0x170991, undefined, _0x3a7f8e[0x9], 0x4 * _0x8290ae), _0x170991['beginPath'](), _0x170991['lineCap'] = 'round', _0x170991['lineJoin'] = 'round', _0x170991['moveTo'](167.5 * _0x8290ae, 248.34375 * _0x8290ae), _0x170991['bezierCurveTo'](165.5 * _0x8290ae, 251.34375 * _0x8290ae, 168.5 * _0x8290ae, 256.34375 * _0x8290ae, 168.5 * _0x8290ae, 253.34375 * _0x8290ae), _0x170991['bezierCurveTo'](166.5 * _0x8290ae, 252.34375 * _0x8290ae, 168.5 * _0x8290ae, 246.34375 * _0x8290ae, 166.5 * _0x8290ae, 247.34375 * _0x8290ae), _0x170991['closePath'](), fill_path(_0x170991, undefined, _0x3a7f8e[0x9], 0x3 * _0x8290ae), _0x2564f8;
}

function create_fishfood_cooked(_0x18c9b2, _0x3782e6, _0x6ca891) {
    var _0x304338 = document['createElement']('canvas'),
        _0x13ccec = _0x304338['getContext']('2d');
    return _0x304338['width'] = 0x135 * _0x18c9b2, _0x304338['height'] = 0x11f * _0x18c9b2, _0x13ccec['globalAlpha'] = _0x3782e6 ? 0.5 : 0x1, _0x13ccec['translate'](0xa * _0x18c9b2, 0x5 * _0x18c9b2), _0x13ccec['beginPath'](), _0x13ccec['lineCap'] = 'round', _0x13ccec['lineJoin'] = 'round', _0x13ccec['moveTo'](34.5 * _0x18c9b2, 38.53125 * _0x18c9b2), _0x13ccec['bezierCurveTo'](91.5 * _0x18c9b2, 30.53125 * _0x18c9b2, 138.5 * _0x18c9b2, 68.53125 * _0x18c9b2, 169.5 * _0x18c9b2, 93.53125 * _0x18c9b2), _0x13ccec['bezierCurveTo'](208.5 * _0x18c9b2, 128.53125 * _0x18c9b2, 226.5 * _0x18c9b2, 157.53125 * _0x18c9b2, 233.5 * _0x18c9b2, 209.53125 * _0x18c9b2), _0x13ccec['bezierCurveTo'](195.5 * _0x18c9b2, 218.53125 * _0x18c9b2, 138.5 * _0x18c9b2, 191.53125 * _0x18c9b2, 105.5 * _0x18c9b2, 157.53125 * _0x18c9b2), _0x13ccec['bezierCurveTo'](54.5 * _0x18c9b2, 112.53125 * _0x18c9b2, 41.5 * _0x18c9b2, 80.53125 * _0x18c9b2, 33.5 * _0x18c9b2, 38.53125 * _0x18c9b2), _0x13ccec['closePath'](), fill_path(_0x13ccec, _0x6ca891[0x0], _0x6ca891[0x0], 0xa * _0x18c9b2), _0x13ccec['beginPath'](), _0x13ccec['lineCap'] = 'round', _0x13ccec['lineJoin'] = 'round', _0x13ccec['moveTo'](143.5 * _0x18c9b2, 74.53125 * _0x18c9b2), _0x13ccec['bezierCurveTo'](164.5 * _0x18c9b2, 73.53125 * _0x18c9b2, 0x9f * _0x18c9b2, 74.53125 * _0x18c9b2, 174.5 * _0x18c9b2, 74.53125 * _0x18c9b2), _0x13ccec['bezierCurveTo'](0xba * _0x18c9b2, 86.53125 * _0x18c9b2, 0xba * _0x18c9b2, 86.53125 * _0x18c9b2, 197.5 * _0x18c9b2, 98.53125 * _0x18c9b2), _0x13ccec['bezierCurveTo'](0xba * _0x18c9b2, 97.03125 * _0x18c9b2, 0xba * _0x18c9b2, 97.03125 * _0x18c9b2, 174.5 * _0x18c9b2, 95.53125 * _0x18c9b2), _0x13ccec['closePath'](), fill_path(_0x13ccec, _0x6ca891[0x0], _0x6ca891[0x0], 0xa * _0x18c9b2), _0x13ccec['beginPath'](), _0x13ccec['lineCap'] = 'round', _0x13ccec['lineJoin'] = 'round', _0x13ccec['moveTo'](87.5 * _0x18c9b2, 142.53125 * _0x18c9b2), _0x13ccec['bezierCurveTo'](0x5c * _0x18c9b2, 160.03125 * _0x18c9b2, 0x5c * _0x18c9b2, 160.03125 * _0x18c9b2, 96.5 * _0x18c9b2, 177.53125 * _0x18c9b2), _0x13ccec['bezierCurveTo'](0x6c * _0x18c9b2, 181.53125 * _0x18c9b2, 0x6c * _0x18c9b2, 181.53125 * _0x18c9b2, 119.5 * _0x18c9b2, 185.53125 * _0x18c9b2), _0x13ccec['bezierCurveTo'](116.5 * _0x18c9b2, 175.53125 * _0x18c9b2, 116.5 * _0x18c9b2, 175.53125 * _0x18c9b2, 113.5 * _0x18c9b2, 165.53125 * _0x18c9b2), _0x13ccec['closePath'](), fill_path(_0x13ccec, _0x6ca891[0x0], _0x6ca891[0x0], 0xa * _0x18c9b2), _0x13ccec['beginPath'](), _0x13ccec['lineCap'] = 'round', _0x13ccec['lineJoin'] = 'round', _0x13ccec['moveTo'](236.5 * _0x18c9b2, 189.53125 * _0x18c9b2), _0x13ccec['bezierCurveTo'](274.5 * _0x18c9b2, 197.53125 * _0x18c9b2, 255.5 * _0x18c9b2, 194.03125 * _0x18c9b2, 274.5 * _0x18c9b2, 198.53125 * _0x18c9b2), _0x13ccec['bezierCurveTo'](272.5 * _0x18c9b2, 236.53125 * _0x18c9b2, 261.5 * _0x18c9b2, 237.53125 * _0x18c9b2, 242.5 * _0x18c9b2, 248.53125 * _0x18c9b2), _0x13ccec['bezierCurveTo'](230.5 * _0x18c9b2, 231.03125 * _0x18c9b2, 230.5 * _0x18c9b2, 231.03125 * _0x18c9b2, 218.5 * _0x18c9b2, 213.53125 * _0x18c9b2), _0x13ccec['closePath'](), fill_path(_0x13ccec, _0x6ca891[0x0], _0x6ca891[0x0], 0xa * _0x18c9b2), _0x13ccec['globalAlpha'] = 0x1, _0x13ccec['translate'](-0xa * _0x18c9b2, -0x5 * _0x18c9b2), _0x13ccec['beginPath'](), _0x13ccec['lineCap'] = 'round', _0x13ccec['lineJoin'] = 'round', _0x13ccec['moveTo'](34.5 * _0x18c9b2, 38.53125 * _0x18c9b2), _0x13ccec['bezierCurveTo'](91.5 * _0x18c9b2, 30.53125 * _0x18c9b2, 138.5 * _0x18c9b2, 68.53125 * _0x18c9b2, 169.5 * _0x18c9b2, 93.53125 * _0x18c9b2), _0x13ccec['bezierCurveTo'](208.5 * _0x18c9b2, 128.53125 * _0x18c9b2, 226.5 * _0x18c9b2, 157.53125 * _0x18c9b2, 233.5 * _0x18c9b2, 209.53125 * _0x18c9b2), _0x13ccec['bezierCurveTo'](195.5 * _0x18c9b2, 218.53125 * _0x18c9b2, 138.5 * _0x18c9b2, 191.53125 * _0x18c9b2, 105.5 * _0x18c9b2, 157.53125 * _0x18c9b2), _0x13ccec['bezierCurveTo'](54.5 * _0x18c9b2, 112.53125 * _0x18c9b2, 41.5 * _0x18c9b2, 80.53125 * _0x18c9b2, 33.5 * _0x18c9b2, 38.53125 * _0x18c9b2), _0x13ccec['closePath'](), fill_path(_0x13ccec, _0x6ca891[0x1], _0x6ca891[0x2], 0xa * _0x18c9b2), _0x13ccec['beginPath'](), _0x13ccec['lineCap'] = 'round', _0x13ccec['lineJoin'] = 'round', _0x13ccec['moveTo'](143.5 * _0x18c9b2, 74.53125 * _0x18c9b2), _0x13ccec['bezierCurveTo'](164.5 * _0x18c9b2, 73.53125 * _0x18c9b2, 0x9f * _0x18c9b2, 74.53125 * _0x18c9b2, 174.5 * _0x18c9b2, 74.53125 * _0x18c9b2), _0x13ccec['bezierCurveTo'](0xba * _0x18c9b2, 86.53125 * _0x18c9b2, 0xba * _0x18c9b2, 86.53125 * _0x18c9b2, 197.5 * _0x18c9b2, 98.53125 * _0x18c9b2), _0x13ccec['bezierCurveTo'](0xba * _0x18c9b2, 97.03125 * _0x18c9b2, 0xba * _0x18c9b2, 97.03125 * _0x18c9b2, 174.5 * _0x18c9b2, 95.53125 * _0x18c9b2), _0x13ccec['closePath'](), fill_path(_0x13ccec, _0x6ca891[0x1], _0x6ca891[0x2], 0xa * _0x18c9b2), _0x13ccec['beginPath'](), _0x13ccec['lineCap'] = 'round', _0x13ccec['lineJoin'] = 'round', _0x13ccec['moveTo'](87.5 * _0x18c9b2, 142.53125 * _0x18c9b2), _0x13ccec['bezierCurveTo'](0x5c * _0x18c9b2, 160.03125 * _0x18c9b2, 0x5c * _0x18c9b2, 160.03125 * _0x18c9b2, 96.5 * _0x18c9b2, 177.53125 * _0x18c9b2), _0x13ccec['bezierCurveTo'](0x6c * _0x18c9b2, 181.53125 * _0x18c9b2, 0x6c * _0x18c9b2, 181.53125 * _0x18c9b2, 119.5 * _0x18c9b2, 185.53125 * _0x18c9b2), _0x13ccec['bezierCurveTo'](116.5 * _0x18c9b2, 175.53125 * _0x18c9b2, 116.5 * _0x18c9b2, 175.53125 * _0x18c9b2, 113.5 * _0x18c9b2, 165.53125 * _0x18c9b2), _0x13ccec['closePath'](), fill_path(_0x13ccec, _0x6ca891[0x1], _0x6ca891[0x2], 0xa * _0x18c9b2), _0x13ccec['beginPath'](), _0x13ccec['lineCap'] = 'round', _0x13ccec['lineJoin'] = 'round', _0x13ccec['moveTo'](236.5 * _0x18c9b2, 189.53125 * _0x18c9b2), _0x13ccec['bezierCurveTo'](274.5 * _0x18c9b2, 197.53125 * _0x18c9b2, 255.5 * _0x18c9b2, 194.03125 * _0x18c9b2, 274.5 * _0x18c9b2, 198.53125 * _0x18c9b2), _0x13ccec['bezierCurveTo'](272.5 * _0x18c9b2, 236.53125 * _0x18c9b2, 261.5 * _0x18c9b2, 237.53125 * _0x18c9b2, 242.5 * _0x18c9b2, 248.53125 * _0x18c9b2), _0x13ccec['bezierCurveTo'](230.5 * _0x18c9b2, 231.03125 * _0x18c9b2, 230.5 * _0x18c9b2, 231.03125 * _0x18c9b2, 218.5 * _0x18c9b2, 213.53125 * _0x18c9b2), _0x13ccec['closePath'](), fill_path(_0x13ccec, _0x6ca891[0x1], _0x6ca891[0x2], 0xa * _0x18c9b2), _0x13ccec['beginPath'](), _0x13ccec['lineCap'] = 'round', _0x13ccec['lineJoin'] = 'round', _0x13ccec['moveTo'](109.5 * _0x18c9b2, 51.53125 * _0x18c9b2), _0x13ccec['bezierCurveTo'](107.5 * _0x18c9b2, 92.53125 * _0x18c9b2, 91.5 * _0x18c9b2, 95.53125 * _0x18c9b2, 59.5 * _0x18c9b2, 101.53125 * _0x18c9b2), fill_path(_0x13ccec, _0x6ca891[0x1], _0x6ca891[0x2], 0x7 * _0x18c9b2), _0x13ccec['beginPath'](), _0x13ccec['lineCap'] = 'round', _0x13ccec['lineJoin'] = 'round', _0x13ccec['moveTo'](72.5 * _0x18c9b2, 51.53125 * _0x18c9b2), _0x13ccec['bezierCurveTo'](0x47 * _0x18c9b2, 64.53125 * _0x18c9b2, 69.5 * _0x18c9b2, 76.53125 * _0x18c9b2, 69.5 * _0x18c9b2, 77.53125 * _0x18c9b2), _0x13ccec['closePath'](), fill_path(_0x13ccec, _0x6ca891[0x1], _0x6ca891[0x2], 0x7 * _0x18c9b2), _0x13ccec['beginPath'](), _0x13ccec['lineCap'] = 'round', _0x13ccec['lineJoin'] = 'round', _0x13ccec['moveTo'](84.5 * _0x18c9b2, 63.53125 * _0x18c9b2), _0x13ccec['bezierCurveTo'](70.5 * _0x18c9b2, 65.03125 * _0x18c9b2, 70.5 * _0x18c9b2, 65.03125 * _0x18c9b2, 56.5 * _0x18c9b2, 66.53125 * _0x18c9b2), _0x13ccec['closePath'](), fill_path(_0x13ccec, _0x6ca891[0x1], _0x6ca891[0x2], 0x7 * _0x18c9b2), _0x13ccec['beginPath'](), _0x13ccec['lineCap'] = 'round', _0x13ccec['lineJoin'] = 'round', _0x13ccec['moveTo'](125.5 * _0x18c9b2, 84.53125 * _0x18c9b2), _0x13ccec['bezierCurveTo'](125.5 * _0x18c9b2, 110.03125 * _0x18c9b2, 125.5 * _0x18c9b2, 110.03125 * _0x18c9b2, 125.5 * _0x18c9b2, 135.53125 * _0x18c9b2), _0x13ccec['closePath'](), fill_path(_0x13ccec, _0x6ca891[0x1], _0x6ca891[0x2], 0x7 * _0x18c9b2), _0x13ccec['beginPath'](), _0x13ccec['lineCap'] = 'round', _0x13ccec['lineJoin'] = 'round', _0x13ccec['moveTo'](149.5 * _0x18c9b2, 108.53125 * _0x18c9b2), _0x13ccec['bezierCurveTo'](0x96 * _0x18c9b2, 137.03125 * _0x18c9b2, 0x96 * _0x18c9b2, 137.03125 * _0x18c9b2, 150.5 * _0x18c9b2, 165.53125 * _0x18c9b2), _0x13ccec['closePath'](), fill_path(_0x13ccec, _0x6ca891[0x1], _0x6ca891[0x2], 0x7 * _0x18c9b2), _0x304338;
}

function create_wall(_0x3cb4db, _0x167f00, _0x3c661e) {
    var _0x40fdad = document['createElement']('canvas'),
        _0x49dde4 = _0x40fdad['getContext']('2d'),
        _0xc0e94d = _0x3cb4db * 0x82,
        _0x530b83 = _0x3cb4db * 0x8e,
        _0x242048 = _0xc0e94d / 0x2,
        _0x226c82 = _0x530b83 / 0x2;
    return _0x40fdad['width'] = _0xc0e94d, _0x40fdad['height'] = _0x530b83, _0x49dde4['translate'](_0x242048, _0x226c82 + 0x7 * _0x3cb4db), _0x49dde4['globalAlpha'] = _0x167f00 ? 0.5 : 0x1, circle(_0x49dde4, 0x0, 0x0, 0x3c * _0x3cb4db), fill_path(_0x49dde4, _0x3c661e[0x0]), _0x49dde4['translate'](0x0, -0x7 * _0x3cb4db), _0x49dde4['globalAlpha'] = 0x1, circle(_0x49dde4, 0x0, 0x0, 0x3c * _0x3cb4db, 0x0), fill_path(_0x49dde4, _0x3c661e[0x1], _0x3c661e[0x2], 0x4 * _0x3cb4db), circle(_0x49dde4, 0x0, 0x0, 0x28 * _0x3cb4db), fill_path(_0x49dde4, _0x3c661e[0x3]), circle(_0x49dde4, 0x0, 0x0, 0x19 * _0x3cb4db), fill_path(_0x49dde4, _0x3c661e[0x4], _0x3c661e[0x5], 0x8 * _0x3cb4db), _0x40fdad;
}

function create_delay_wall(_0x4b4894, _0x49e826) {
    var _0x32fa97 = document['createElement']('canvas'),
        _0x15b237 = _0x32fa97['getContext']('2d'),
        _0x453f51 = _0x4b4894 * 0x82,
        _0x3d6c23 = _0x4b4894 * 0x8e,
        _0x3b3904 = _0x453f51 / 0x2,
        _0x59f20c = _0x3d6c23 / 0x2;
    return _0x32fa97['width'] = _0x453f51, _0x32fa97['height'] = _0x3d6c23, circle(_0x15b237, _0x3b3904, _0x59f20c, 0x28 * _0x4b4894, 0x0), fill_path(_0x15b237, undefined, _0x49e826[0x0], 0x7 * _0x4b4894), circle(_0x15b237, _0x3b3904, _0x59f20c, 0x1e * _0x4b4894, 0x0), fill_path(_0x15b237, undefined, _0x49e826[0x0], 0x7 * _0x4b4894), circle(_0x15b237, _0x3b3904, _0x59f20c, 0x14 * _0x4b4894, 0x0), fill_path(_0x15b237, _0x49e826[0x0]), _0x32fa97;
}

function create_wall_diamond(_0x3b1c2f, _0x5ab3aa, _0x6a8634) {
    var _0x2b5576 = document['createElement']('canvas'),
        _0x1780af = _0x2b5576['getContext']('2d');
    return _0x2b5576['width'] = 0x82 * _0x3b1c2f, _0x2b5576['height'] = 0x8e * _0x3b1c2f, _0x1780af['globalAlpha'] = _0x5ab3aa ? 0.5 : 0x1, _0x1780af['save'](), _0x1780af['translate'](0x41 * _0x3b1c2f, 0x50 * _0x3b1c2f), _0x1780af['rotate'](0.2), round_regular_polygon(_0x1780af, 0x9, 0x3c * _0x3b1c2f, 0xa * _0x3b1c2f), _0x1780af['restore'](), fill_path(_0x1780af, _0x6a8634[0x0]), _0x1780af['globalAlpha'] = 0x1, _0x1780af['save'](), _0x1780af['translate'](0x41 * _0x3b1c2f, 0x47 * _0x3b1c2f), _0x1780af['rotate'](0.2), round_regular_polygon(_0x1780af, 0x9, 0x3c * _0x3b1c2f, 0xa * _0x3b1c2f), fill_path(_0x1780af, _0x6a8634[0x1], _0x6a8634[0x2], 0x4), _0x1780af['rotate'](-0.32), round_regular_polygon(_0x1780af, 0x9, 0x26 * _0x3b1c2f, 0xa * _0x3b1c2f), fill_path(_0x1780af, _0x6a8634[0x3], _0x6a8634[0x4], 0x4), _0x1780af['rotate'](0.68), round_regular_polygon(_0x1780af, 0x9, 0x14 * _0x3b1c2f, 0x8 * _0x3b1c2f), fill_path(_0x1780af, _0x6a8634[0x5], _0x6a8634[0x6], 0x6), _0x1780af['restore'](), _0x2b5576;
}

function create_palm(_0x425fb8, _0x1d4483) {
    var _0x514111 = document['createElement']('canvas'),
        _0x481e7d = _0x514111['getContext']('2d');
    return _0x514111['width'] = 0x174 * _0x425fb8, _0x514111['height'] = 0x177 * _0x425fb8, _0x481e7d['globalAlpha'] = 0.5, _0x481e7d['translate'](0xf * _0x425fb8, 0xf * _0x425fb8), _0x481e7d['beginPath'](), _0x481e7d['lineCap'] = 'round', _0x481e7d['lineJoin'] = 'round', _0x481e7d['moveTo'](313.0000305175781 * _0x425fb8, 76.58523559570312 * _0x425fb8), _0x481e7d['bezierCurveTo'](308.0000305175781 * _0x425fb8, 130.58523559570312 * _0x425fb8, 279.0000305175781 * _0x425fb8, 158.58523559570312 * _0x425fb8, 254.00003051757812 * _0x425fb8, 175.58523559570312 * _0x425fb8), _0x481e7d['bezierCurveTo'](287.0000305175781 * _0x425fb8, 182.58523559570312 * _0x425fb8, 274.0000305175781 * _0x425fb8, 181.08523559570312 * _0x425fb8, 294.0000305175781 * _0x425fb8, 186.58523559570312 * _0x425fb8), _0x481e7d['bezierCurveTo'](293.5000305175781 * _0x425fb8, 196.08523559570312 * _0x425fb8, 293.5000305175781 * _0x425fb8, 196.08523559570312 * _0x425fb8, 293.0000305175781 * _0x425fb8, 205.58523559570312 * _0x425fb8), _0x481e7d['bezierCurveTo'](304.0000305175781 * _0x425fb8, 201.08523559570312 * _0x425fb8, 304.0000305175781 * _0x425fb8, 201.08523559570312 * _0x425fb8, 315.0000305175781 * _0x425fb8, 196.58523559570312 * _0x425fb8), _0x481e7d['bezierCurveTo'](350.0000305175781 * _0x425fb8, 219.58523559570312 * _0x425fb8, 343.0000305175781 * _0x425fb8, 221.58523559570312 * _0x425fb8, 351.0000305175781 * _0x425fb8, 230.58523559570312 * _0x425fb8), _0x481e7d['bezierCurveTo'](296.0000305175781 * _0x425fb8, 260.5852355957031 * _0x425fb8, 264.0000305175781 * _0x425fb8, 256.5852355957031 * _0x425fb8, 220.00003051757812 * _0x425fb8, 236.58523559570312 * _0x425fb8), _0x481e7d['bezierCurveTo'](233.00003051757812 * _0x425fb8, 266.5852355957031 * _0x425fb8, 232.00003051757812 * _0x425fb8, 279.5852355957031 * _0x425fb8, 231.00003051757812 * _0x425fb8, 295.5852355957031 * _0x425fb8), _0x481e7d['bezierCurveTo'](222.00003051757812 * _0x425fb8, 297.5852355957031 * _0x425fb8, 222.00003051757812 * _0x425fb8, 297.5852355957031 * _0x425fb8, 213.00003051757812 * _0x425fb8, 299.5852355957031 * _0x425fb8), _0x481e7d['bezierCurveTo'](219.50003051757812 * _0x425fb8, 308.0852355957031 * _0x425fb8, 219.50003051757812 * _0x425fb8, 308.0852355957031 * _0x425fb8, 226.00003051757812 * _0x425fb8, 316.5852355957031 * _0x425fb8), _0x481e7d['bezierCurveTo'](223.00003051757812 * _0x425fb8, 344.5852355957031 * _0x425fb8, 216.00003051757812 * _0x425fb8, 350.5852355957031 * _0x425fb8, 209.00003051757812 * _0x425fb8, 363.5852355957031 * _0x425fb8), _0x481e7d['bezierCurveTo'](154.00003051757812 * _0x425fb8, 318.5852355957031 * _0x425fb8, 156.00003051757812 * _0x425fb8, 268.5852355957031 * _0x425fb8, 160.00003051757812 * _0x425fb8, 238.58523559570312 * _0x425fb8), _0x481e7d['bezierCurveTo'](135.00003051757812 * _0x425fb8, 268.5852355957031 * _0x425fb8, 125.00003051757812 * _0x425fb8, 267.5852355957031 * _0x425fb8, 112.00003051757812 * _0x425fb8, 272.5852355957031 * _0x425fb8), _0x481e7d['bezierCurveTo'](104.50003051757812 * _0x425fb8, 266.5852355957031 * _0x425fb8, 104.50003051757812 * _0x425fb8, 266.5852355957031 * _0x425fb8, 97.00003051757812 * _0x425fb8, 260.5852355957031 * _0x425fb8), _0x481e7d['bezierCurveTo'](93.00003051757812 * _0x425fb8, 271.0852355957031 * _0x425fb8, 93.00003051757812 * _0x425fb8, 271.0852355957031 * _0x425fb8, 89.00003051757812 * _0x425fb8, 281.5852355957031 * _0x425fb8), _0x481e7d['bezierCurveTo'](66.00003051757812 * _0x425fb8, 288.5852355957031 * _0x425fb8, 59.000030517578125 * _0x425fb8, 288.5852355957031 * _0x425fb8, 39.000030517578125 * _0x425fb8, 285.5852355957031 * _0x425fb8), _0x481e7d['bezierCurveTo'](56.000030517578125 * _0x425fb8, 216.58523559570312 * _0x425fb8, 91.00003051757812 * _0x425fb8, 204.58523559570312 * _0x425fb8, 129.00003051757812 * _0x425fb8, 189.58523559570312 * _0x425fb8), _0x481e7d['bezierCurveTo'](90.00003051757812 * _0x425fb8, 176.58523559570312 * _0x425fb8, 89.00003051757812 * _0x425fb8, 173.58523559570312 * _0x425fb8, 79.00003051757812 * _0x425fb8, 166.58523559570312 * _0x425fb8), _0x481e7d['bezierCurveTo'](82.00003051757812 * _0x425fb8, 155.08523559570312 * _0x425fb8, 82.00003051757812 * _0x425fb8, 155.08523559570312 * _0x425fb8, 85.00003051757812 * _0x425fb8, 143.58523559570312 * _0x425fb8), _0x481e7d['bezierCurveTo'](75.50003051757812 * _0x425fb8, 147.58523559570312 * _0x425fb8, 75.50003051757812 * _0x425fb8, 147.58523559570312 * _0x425fb8, 66.00003051757812 * _0x425fb8, 151.58523559570312 * _0x425fb8), _0x481e7d['bezierCurveTo'](44.000030517578125 * _0x425fb8, 133.58523559570312 * _0x425fb8, 41.000030517578125 * _0x425fb8, 124.58523559570312 * _0x425fb8, 34.000030517578125 * _0x425fb8, 102.58523559570312 * _0x425fb8), _0x481e7d['bezierCurveTo'](100.00003051757812 * _0x425fb8, 81.58523559570312 * _0x425fb8, 134.00003051757812 * _0x425fb8, 118.58523559570312 * _0x425fb8, 150.00003051757812 * _0x425fb8, 128.58523559570312 * _0x425fb8), _0x481e7d['bezierCurveTo'](144.00003051757812 * _0x425fb8, 102.58523559570312 * _0x425fb8, 147.00003051757812 * _0x425fb8, 90.58523559570312 * _0x425fb8, 150.00003051757812 * _0x425fb8, 80.58523559570312 * _0x425fb8), _0x481e7d['bezierCurveTo'](159.50003051757812 * _0x425fb8, 79.08523559570312 * _0x425fb8, 159.50003051757812 * _0x425fb8, 79.08523559570312 * _0x425fb8, 169.00003051757812 * _0x425fb8, 77.58523559570312 * _0x425fb8), _0x481e7d['bezierCurveTo'](163.00003051757812 * _0x425fb8, 72.58523559570312 * _0x425fb8, 163.00003051757812 * _0x425fb8, 72.58523559570312 * _0x425fb8, 157.00003051757812 * _0x425fb8, 67.58523559570312 * _0x425fb8), _0x481e7d['bezierCurveTo'](162.00003051757812 * _0x425fb8, 42.585235595703125 * _0x425fb8, 169.00003051757812 * _0x425fb8, 29.585235595703125 * _0x425fb8, 182.00003051757812 * _0x425fb8, 14.585235595703125 * _0x425fb8), _0x481e7d['bezierCurveTo'](219.00003051757812 * _0x425fb8, 48.585235595703125 * _0x425fb8, 222.00003051757812 * _0x425fb8, 92.58523559570312 * _0x425fb8, 218.00003051757812 * _0x425fb8, 112.58523559570312 * _0x425fb8), _0x481e7d['bezierCurveTo'](239.00003051757812 * _0x425fb8, 95.58523559570312 * _0x425fb8, 242.00003051757812 * _0x425fb8, 97.58523559570312 * _0x425fb8, 249.00003051757812 * _0x425fb8, 94.58523559570312 * _0x425fb8), _0x481e7d['bezierCurveTo'](255.00003051757812 * _0x425fb8, 103.08523559570312 * _0x425fb8, 255.00003051757812 * _0x425fb8, 103.08523559570312 * _0x425fb8, 261.0000305175781 * _0x425fb8, 111.58523559570312 * _0x425fb8), _0x481e7d['bezierCurveTo'](261.5000305175781 * _0x425fb8, 99.58523559570312 * _0x425fb8, 261.5000305175781 * _0x425fb8, 99.58523559570312 * _0x425fb8, 262.0000305175781 * _0x425fb8, 87.58523559570312 * _0x425fb8), _0x481e7d['bezierCurveTo'](282.0000305175781 * _0x425fb8, 77.58523559570312 * _0x425fb8, 301.0000305175781 * _0x425fb8, 74.58523559570312 * _0x425fb8, 314.0000305175781 * _0x425fb8, 76.58523559570312 * _0x425fb8), _0x481e7d['closePath'](), fill_path(_0x481e7d, _0x1d4483[0x0]), _0x481e7d['globalAlpha'] = 0x1, _0x481e7d['translate'](-0xf * _0x425fb8, -0xf * _0x425fb8), _0x481e7d['beginPath'](), _0x481e7d['lineCap'] = 'round', _0x481e7d['lineJoin'] = 'round', _0x481e7d['moveTo'](313.0000305175781 * _0x425fb8, 76.58523559570312 * _0x425fb8), _0x481e7d['bezierCurveTo'](308.0000305175781 * _0x425fb8, 130.58523559570312 * _0x425fb8, 279.0000305175781 * _0x425fb8, 158.58523559570312 * _0x425fb8, 254.00003051757812 * _0x425fb8, 175.58523559570312 * _0x425fb8), _0x481e7d['bezierCurveTo'](287.0000305175781 * _0x425fb8, 182.58523559570312 * _0x425fb8, 274.0000305175781 * _0x425fb8, 181.08523559570312 * _0x425fb8, 294.0000305175781 * _0x425fb8, 186.58523559570312 * _0x425fb8), _0x481e7d['bezierCurveTo'](293.5000305175781 * _0x425fb8, 196.08523559570312 * _0x425fb8, 293.5000305175781 * _0x425fb8, 196.08523559570312 * _0x425fb8, 293.0000305175781 * _0x425fb8, 205.58523559570312 * _0x425fb8), _0x481e7d['bezierCurveTo'](304.0000305175781 * _0x425fb8, 201.08523559570312 * _0x425fb8, 304.0000305175781 * _0x425fb8, 201.08523559570312 * _0x425fb8, 315.0000305175781 * _0x425fb8, 196.58523559570312 * _0x425fb8), _0x481e7d['bezierCurveTo'](350.0000305175781 * _0x425fb8, 219.58523559570312 * _0x425fb8, 343.0000305175781 * _0x425fb8, 221.58523559570312 * _0x425fb8, 351.0000305175781 * _0x425fb8, 230.58523559570312 * _0x425fb8), _0x481e7d['bezierCurveTo'](296.0000305175781 * _0x425fb8, 260.5852355957031 * _0x425fb8, 264.0000305175781 * _0x425fb8, 256.5852355957031 * _0x425fb8, 220.00003051757812 * _0x425fb8, 236.58523559570312 * _0x425fb8), _0x481e7d['bezierCurveTo'](233.00003051757812 * _0x425fb8, 266.5852355957031 * _0x425fb8, 232.00003051757812 * _0x425fb8, 279.5852355957031 * _0x425fb8, 231.00003051757812 * _0x425fb8, 295.5852355957031 * _0x425fb8), _0x481e7d['bezierCurveTo'](222.00003051757812 * _0x425fb8, 297.5852355957031 * _0x425fb8, 222.00003051757812 * _0x425fb8, 297.5852355957031 * _0x425fb8, 213.00003051757812 * _0x425fb8, 299.5852355957031 * _0x425fb8), _0x481e7d['bezierCurveTo'](219.50003051757812 * _0x425fb8, 308.0852355957031 * _0x425fb8, 219.50003051757812 * _0x425fb8, 308.0852355957031 * _0x425fb8, 226.00003051757812 * _0x425fb8, 316.5852355957031 * _0x425fb8), _0x481e7d['bezierCurveTo'](223.00003051757812 * _0x425fb8, 344.5852355957031 * _0x425fb8, 216.00003051757812 * _0x425fb8, 350.5852355957031 * _0x425fb8, 209.00003051757812 * _0x425fb8, 363.5852355957031 * _0x425fb8), _0x481e7d['bezierCurveTo'](154.00003051757812 * _0x425fb8, 318.5852355957031 * _0x425fb8, 156.00003051757812 * _0x425fb8, 268.5852355957031 * _0x425fb8, 160.00003051757812 * _0x425fb8, 238.58523559570312 * _0x425fb8), _0x481e7d['bezierCurveTo'](135.00003051757812 * _0x425fb8, 268.5852355957031 * _0x425fb8, 125.00003051757812 * _0x425fb8, 267.5852355957031 * _0x425fb8, 112.00003051757812 * _0x425fb8, 272.5852355957031 * _0x425fb8), _0x481e7d['bezierCurveTo'](104.50003051757812 * _0x425fb8, 266.5852355957031 * _0x425fb8, 104.50003051757812 * _0x425fb8, 266.5852355957031 * _0x425fb8, 97.00003051757812 * _0x425fb8, 260.5852355957031 * _0x425fb8), _0x481e7d['bezierCurveTo'](93.00003051757812 * _0x425fb8, 271.0852355957031 * _0x425fb8, 93.00003051757812 * _0x425fb8, 271.0852355957031 * _0x425fb8, 89.00003051757812 * _0x425fb8, 281.5852355957031 * _0x425fb8), _0x481e7d['bezierCurveTo'](66.00003051757812 * _0x425fb8, 288.5852355957031 * _0x425fb8, 59.000030517578125 * _0x425fb8, 288.5852355957031 * _0x425fb8, 39.000030517578125 * _0x425fb8, 285.5852355957031 * _0x425fb8), _0x481e7d['bezierCurveTo'](56.000030517578125 * _0x425fb8, 216.58523559570312 * _0x425fb8, 91.00003051757812 * _0x425fb8, 204.58523559570312 * _0x425fb8, 129.00003051757812 * _0x425fb8, 189.58523559570312 * _0x425fb8), _0x481e7d['bezierCurveTo'](90.00003051757812 * _0x425fb8, 176.58523559570312 * _0x425fb8, 89.00003051757812 * _0x425fb8, 173.58523559570312 * _0x425fb8, 79.00003051757812 * _0x425fb8, 166.58523559570312 * _0x425fb8), _0x481e7d['bezierCurveTo'](82.00003051757812 * _0x425fb8, 155.08523559570312 * _0x425fb8, 82.00003051757812 * _0x425fb8, 155.08523559570312 * _0x425fb8, 85.00003051757812 * _0x425fb8, 143.58523559570312 * _0x425fb8), _0x481e7d['bezierCurveTo'](75.50003051757812 * _0x425fb8, 147.58523559570312 * _0x425fb8, 75.50003051757812 * _0x425fb8, 147.58523559570312 * _0x425fb8, 66.00003051757812 * _0x425fb8, 151.58523559570312 * _0x425fb8), _0x481e7d['bezierCurveTo'](44.000030517578125 * _0x425fb8, 133.58523559570312 * _0x425fb8, 41.000030517578125 * _0x425fb8, 124.58523559570312 * _0x425fb8, 34.000030517578125 * _0x425fb8, 102.58523559570312 * _0x425fb8), _0x481e7d['bezierCurveTo'](100.00003051757812 * _0x425fb8, 81.58523559570312 * _0x425fb8, 134.00003051757812 * _0x425fb8, 118.58523559570312 * _0x425fb8, 150.00003051757812 * _0x425fb8, 128.58523559570312 * _0x425fb8), _0x481e7d['bezierCurveTo'](144.00003051757812 * _0x425fb8, 102.58523559570312 * _0x425fb8, 147.00003051757812 * _0x425fb8, 90.58523559570312 * _0x425fb8, 150.00003051757812 * _0x425fb8, 80.58523559570312 * _0x425fb8), _0x481e7d['bezierCurveTo'](159.50003051757812 * _0x425fb8, 79.08523559570312 * _0x425fb8, 159.50003051757812 * _0x425fb8, 79.08523559570312 * _0x425fb8, 169.00003051757812 * _0x425fb8, 77.58523559570312 * _0x425fb8), _0x481e7d['bezierCurveTo'](163.00003051757812 * _0x425fb8, 72.58523559570312 * _0x425fb8, 163.00003051757812 * _0x425fb8, 72.58523559570312 * _0x425fb8, 157.00003051757812 * _0x425fb8, 67.58523559570312 * _0x425fb8), _0x481e7d['bezierCurveTo'](162.00003051757812 * _0x425fb8, 42.585235595703125 * _0x425fb8, 169.00003051757812 * _0x425fb8, 29.585235595703125 * _0x425fb8, 182.00003051757812 * _0x425fb8, 14.585235595703125 * _0x425fb8), _0x481e7d['bezierCurveTo'](219.00003051757812 * _0x425fb8, 48.585235595703125 * _0x425fb8, 222.00003051757812 * _0x425fb8, 92.58523559570312 * _0x425fb8, 218.00003051757812 * _0x425fb8, 112.58523559570312 * _0x425fb8), _0x481e7d['bezierCurveTo'](239.00003051757812 * _0x425fb8, 95.58523559570312 * _0x425fb8, 242.00003051757812 * _0x425fb8, 97.58523559570312 * _0x425fb8, 249.00003051757812 * _0x425fb8, 94.58523559570312 * _0x425fb8), _0x481e7d['bezierCurveTo'](255.00003051757812 * _0x425fb8, 103.08523559570312 * _0x425fb8, 255.00003051757812 * _0x425fb8, 103.08523559570312 * _0x425fb8, 261.0000305175781 * _0x425fb8, 111.58523559570312 * _0x425fb8), _0x481e7d['bezierCurveTo'](261.5000305175781 * _0x425fb8, 99.58523559570312 * _0x425fb8, 261.5000305175781 * _0x425fb8, 99.58523559570312 * _0x425fb8, 262.0000305175781 * _0x425fb8, 87.58523559570312 * _0x425fb8), _0x481e7d['bezierCurveTo'](282.0000305175781 * _0x425fb8, 77.58523559570312 * _0x425fb8, 301.0000305175781 * _0x425fb8, 74.58523559570312 * _0x425fb8, 314.0000305175781 * _0x425fb8, 76.58523559570312 * _0x425fb8), _0x481e7d['closePath'](), fill_path(_0x481e7d, _0x1d4483[0x1], _0x1d4483[0x2], 0x4 * _0x425fb8), _0x481e7d['beginPath'](), _0x481e7d['lineCap'] = 'round', _0x481e7d['lineJoin'] = 'round', _0x481e7d['moveTo'](186.00003051757812 * _0x425fb8, 192.94886779785156 * _0x425fb8), _0x481e7d['bezierCurveTo'](185.00003051757812 * _0x425fb8, 66.94886779785156 * _0x425fb8, 184.50003051757812 * _0x425fb8, 104.94886779785156 * _0x425fb8, 183.00003051757812 * _0x425fb8, 16.948867797851562 * _0x425fb8), _0x481e7d['bezierCurveTo'](216.00003051757812 * _0x425fb8, 47.94886779785156 * _0x425fb8, 219.00003051757812 * _0x425fb8, 80.94886779785156 * _0x425fb8, 218.00003051757812 * _0x425fb8, 113.94886779785156 * _0x425fb8), _0x481e7d['bezierCurveTo'](209.00003051757812 * _0x425fb8, 165.94886779785156 * _0x425fb8, 200.00003051757812 * _0x425fb8, 176.94886779785156 * _0x425fb8, 189.00003051757812 * _0x425fb8, 192.94886779785156 * _0x425fb8), _0x481e7d['closePath'](), fill_path(_0x481e7d, _0x1d4483[0x3], _0x1d4483[0x3], 0x2 * _0x425fb8), _0x481e7d['beginPath'](), _0x481e7d['lineCap'] = 'round', _0x481e7d['lineJoin'] = 'round', _0x481e7d['moveTo'](190.00003051757812 * _0x425fb8, 191.94886779785156 * _0x425fb8), _0x481e7d['bezierCurveTo'](207.00003051757812 * _0x425fb8, 348.94886779785156 * _0x425fb8, 205.00003051757812 * _0x425fb8, 323.94886779785156 * _0x425fb8, 209.00003051757812 * _0x425fb8, 358.94886779785156 * _0x425fb8), _0x481e7d['bezierCurveTo'](171.00003051757812 * _0x425fb8, 334.94886779785156 * _0x425fb8, 167.00003051757812 * _0x425fb8, 302.94886779785156 * _0x425fb8, 161.00003051757812 * _0x425fb8, 268.94886779785156 * _0x425fb8), _0x481e7d['bezierCurveTo'](160.00003051757812 * _0x425fb8, 218.94886779785156 * _0x425fb8, 181.00003051757812 * _0x425fb8, 191.94886779785156 * _0x425fb8, 189.00003051757812 * _0x425fb8, 186.94886779785156 * _0x425fb8), _0x481e7d['closePath'](), fill_path(_0x481e7d, _0x1d4483[0x3], _0x1d4483[0x3], 0x2 * _0x425fb8), _0x481e7d['beginPath'](), _0x481e7d['lineCap'] = 'round', _0x481e7d['lineJoin'] = 'round', _0x481e7d['moveTo'](194.00003051757812 * _0x425fb8, 195.94886779785156 * _0x425fb8), _0x481e7d['bezierCurveTo'](116.00003051757812 * _0x425fb8, 150.94886779785156 * _0x425fb8, 116.00003051757812 * _0x425fb8, 150.94886779785156 * _0x425fb8, 38.000030517578125 * _0x425fb8, 105.94886779785156 * _0x425fb8), _0x481e7d['bezierCurveTo'](67.00003051757812 * _0x425fb8, 90.94886779785156 * _0x425fb8, 96.00003051757812 * _0x425fb8, 99.94886779785156 * _0x425fb8, 123.00003051757812 * _0x425fb8, 111.94886779785156 * _0x425fb8), _0x481e7d['bezierCurveTo'](183.00003051757812 * _0x425fb8, 152.94886779785156 * _0x425fb8, 179.00003051757812 * _0x425fb8, 180.94886779785156 * _0x425fb8, 193.00003051757812 * _0x425fb8, 194.94886779785156 * _0x425fb8), _0x481e7d['closePath'](), fill_path(_0x481e7d, _0x1d4483[0x3], _0x1d4483[0x3], 0x2 * _0x425fb8), _0x481e7d['beginPath'](), _0x481e7d['lineCap'] = 'round', _0x481e7d['lineJoin'] = 'round', _0x481e7d['moveTo'](189.00003051757812 * _0x425fb8, 190.94886779785156 * _0x425fb8), _0x481e7d['bezierCurveTo'](250.00003051757812 * _0x425fb8, 133.94886779785156 * _0x425fb8, 311.0000305175781 * _0x425fb8, 78.94886779785156 * _0x425fb8, 311.0000305175781 * _0x425fb8, 76.94886779785156 * _0x425fb8), _0x481e7d['bezierCurveTo'](306.0000305175781 * _0x425fb8, 127.94886779785156 * _0x425fb8, 283.0000305175781 * _0x425fb8, 148.94886779785156 * _0x425fb8, 261.0000305175781 * _0x425fb8, 166.94886779785156 * _0x425fb8), _0x481e7d['bezierCurveTo'](220.00003051757812 * _0x425fb8, 197.94886779785156 * _0x425fb8, 191.00003051757812 * _0x425fb8, 194.94886779785156 * _0x425fb8, 189.00003051757812 * _0x425fb8, 195.94886779785156 * _0x425fb8), _0x481e7d['closePath'](), fill_path(_0x481e7d, _0x1d4483[0x3], _0x1d4483[0x3], 0x2 * _0x425fb8), _0x481e7d['beginPath'](), _0x481e7d['lineCap'] = 'round', _0x481e7d['lineJoin'] = 'round', _0x481e7d['moveTo'](189.00003051757812 * _0x425fb8, 194.94886779785156 * _0x425fb8), _0x481e7d['bezierCurveTo'](268.5000305175781 * _0x425fb8, 211.94886779785156 * _0x425fb8, 268.5000305175781 * _0x425fb8, 211.94886779785156 * _0x425fb8, 348.0000305175781 * _0x425fb8, 228.94886779785156 * _0x425fb8), _0x481e7d['bezierCurveTo'](316.0000305175781 * _0x425fb8, 247.94886779785156 * _0x425fb8, 298.0000305175781 * _0x425fb8, 256.94886779785156 * _0x425fb8, 250.00003051757812 * _0x425fb8, 246.94886779785156 * _0x425fb8), _0x481e7d['bezierCurveTo'](197.00003051757812 * _0x425fb8, 229.94886779785156 * _0x425fb8, 189.00003051757812 * _0x425fb8, 202.94886779785156 * _0x425fb8, 188.00003051757812 * _0x425fb8, 199.94886779785156 * _0x425fb8), _0x481e7d['closePath'](), fill_path(_0x481e7d, _0x1d4483[0x3], _0x1d4483[0x3], 0x2 * _0x425fb8), _0x481e7d['beginPath'](), _0x481e7d['lineCap'] = 'round', _0x481e7d['lineJoin'] = 'round', _0x481e7d['moveTo'](192.00003051757812 * _0x425fb8, 191.94886779785156 * _0x425fb8), _0x481e7d['bezierCurveTo'](116.50003051757812 * _0x425fb8, 238.44886779785156 * _0x425fb8, 116.50003051757812 * _0x425fb8, 238.44886779785156 * _0x425fb8, 41.000030517578125 * _0x425fb8, 284.94886779785156 * _0x425fb8), _0x481e7d['bezierCurveTo'](49.000030517578125 * _0x425fb8, 252.94886779785156 * _0x425fb8, 56.000030517578125 * _0x425fb8, 242.94886779785156 * _0x425fb8, 80.00003051757812 * _0x425fb8, 215.94886779785156 * _0x425fb8), _0x481e7d['bezierCurveTo'](125.00003051757812 * _0x425fb8, 181.94886779785156 * _0x425fb8, 174.00003051757812 * _0x425fb8, 183.94886779785156 * _0x425fb8, 192.00003051757812 * _0x425fb8, 191.94886779785156 * _0x425fb8), _0x481e7d['closePath'](), fill_path(_0x481e7d, _0x1d4483[0x3], _0x1d4483[0x3], 0x2 * _0x425fb8), _0x481e7d['beginPath'](), _0x481e7d['lineCap'] = 'round', _0x481e7d['lineJoin'] = 'round', _0x481e7d['moveTo'](313.0000305175781 * _0x425fb8, 76.58523559570312 * _0x425fb8), _0x481e7d['bezierCurveTo'](308.0000305175781 * _0x425fb8, 130.58523559570312 * _0x425fb8, 279.0000305175781 * _0x425fb8, 158.58523559570312 * _0x425fb8, 254.00003051757812 * _0x425fb8, 175.58523559570312 * _0x425fb8), _0x481e7d['bezierCurveTo'](287.0000305175781 * _0x425fb8, 182.58523559570312 * _0x425fb8, 274.0000305175781 * _0x425fb8, 181.08523559570312 * _0x425fb8, 294.0000305175781 * _0x425fb8, 186.58523559570312 * _0x425fb8), _0x481e7d['bezierCurveTo'](293.5000305175781 * _0x425fb8, 196.08523559570312 * _0x425fb8, 293.5000305175781 * _0x425fb8, 196.08523559570312 * _0x425fb8, 293.0000305175781 * _0x425fb8, 205.58523559570312 * _0x425fb8), _0x481e7d['bezierCurveTo'](304.0000305175781 * _0x425fb8, 201.08523559570312 * _0x425fb8, 304.0000305175781 * _0x425fb8, 201.08523559570312 * _0x425fb8, 315.0000305175781 * _0x425fb8, 196.58523559570312 * _0x425fb8), _0x481e7d['bezierCurveTo'](350.0000305175781 * _0x425fb8, 219.58523559570312 * _0x425fb8, 343.0000305175781 * _0x425fb8, 221.58523559570312 * _0x425fb8, 351.0000305175781 * _0x425fb8, 230.58523559570312 * _0x425fb8), _0x481e7d['bezierCurveTo'](296.0000305175781 * _0x425fb8, 260.5852355957031 * _0x425fb8, 264.0000305175781 * _0x425fb8, 256.5852355957031 * _0x425fb8, 220.00003051757812 * _0x425fb8, 236.58523559570312 * _0x425fb8), _0x481e7d['bezierCurveTo'](233.00003051757812 * _0x425fb8, 266.5852355957031 * _0x425fb8, 232.00003051757812 * _0x425fb8, 279.5852355957031 * _0x425fb8, 231.00003051757812 * _0x425fb8, 295.5852355957031 * _0x425fb8), _0x481e7d['bezierCurveTo'](222.00003051757812 * _0x425fb8, 297.5852355957031 * _0x425fb8, 222.00003051757812 * _0x425fb8, 297.5852355957031 * _0x425fb8, 213.00003051757812 * _0x425fb8, 299.5852355957031 * _0x425fb8), _0x481e7d['bezierCurveTo'](219.50003051757812 * _0x425fb8, 308.0852355957031 * _0x425fb8, 219.50003051757812 * _0x425fb8, 308.0852355957031 * _0x425fb8, 226.00003051757812 * _0x425fb8, 316.5852355957031 * _0x425fb8), _0x481e7d['bezierCurveTo'](223.00003051757812 * _0x425fb8, 344.5852355957031 * _0x425fb8, 216.00003051757812 * _0x425fb8, 350.5852355957031 * _0x425fb8, 209.00003051757812 * _0x425fb8, 363.5852355957031 * _0x425fb8), _0x481e7d['bezierCurveTo'](154.00003051757812 * _0x425fb8, 318.5852355957031 * _0x425fb8, 156.00003051757812 * _0x425fb8, 268.5852355957031 * _0x425fb8, 160.00003051757812 * _0x425fb8, 238.58523559570312 * _0x425fb8), _0x481e7d['bezierCurveTo'](135.00003051757812 * _0x425fb8, 268.5852355957031 * _0x425fb8, 125.00003051757812 * _0x425fb8, 267.5852355957031 * _0x425fb8, 112.00003051757812 * _0x425fb8, 272.5852355957031 * _0x425fb8), _0x481e7d['bezierCurveTo'](104.50003051757812 * _0x425fb8, 266.5852355957031 * _0x425fb8, 104.50003051757812 * _0x425fb8, 266.5852355957031 * _0x425fb8, 97.00003051757812 * _0x425fb8, 260.5852355957031 * _0x425fb8), _0x481e7d['bezierCurveTo'](93.00003051757812 * _0x425fb8, 271.0852355957031 * _0x425fb8, 93.00003051757812 * _0x425fb8, 271.0852355957031 * _0x425fb8, 89.00003051757812 * _0x425fb8, 281.5852355957031 * _0x425fb8), _0x481e7d['bezierCurveTo'](66.00003051757812 * _0x425fb8, 288.5852355957031 * _0x425fb8, 59.000030517578125 * _0x425fb8, 288.5852355957031 * _0x425fb8, 39.000030517578125 * _0x425fb8, 285.5852355957031 * _0x425fb8), _0x481e7d['bezierCurveTo'](56.000030517578125 * _0x425fb8, 216.58523559570312 * _0x425fb8, 91.00003051757812 * _0x425fb8, 204.58523559570312 * _0x425fb8, 129.00003051757812 * _0x425fb8, 189.58523559570312 * _0x425fb8), _0x481e7d['bezierCurveTo'](90.00003051757812 * _0x425fb8, 176.58523559570312 * _0x425fb8, 89.00003051757812 * _0x425fb8, 173.58523559570312 * _0x425fb8, 79.00003051757812 * _0x425fb8, 166.58523559570312 * _0x425fb8), _0x481e7d['bezierCurveTo'](82.00003051757812 * _0x425fb8, 155.08523559570312 * _0x425fb8, 82.00003051757812 * _0x425fb8, 155.08523559570312 * _0x425fb8, 85.00003051757812 * _0x425fb8, 143.58523559570312 * _0x425fb8), _0x481e7d['bezierCurveTo'](75.50003051757812 * _0x425fb8, 147.58523559570312 * _0x425fb8, 75.50003051757812 * _0x425fb8, 147.58523559570312 * _0x425fb8, 66.00003051757812 * _0x425fb8, 151.58523559570312 * _0x425fb8), _0x481e7d['bezierCurveTo'](44.000030517578125 * _0x425fb8, 133.58523559570312 * _0x425fb8, 41.000030517578125 * _0x425fb8, 124.58523559570312 * _0x425fb8, 34.000030517578125 * _0x425fb8, 102.58523559570312 * _0x425fb8), _0x481e7d['bezierCurveTo'](100.00003051757812 * _0x425fb8, 81.58523559570312 * _0x425fb8, 134.00003051757812 * _0x425fb8, 118.58523559570312 * _0x425fb8, 150.00003051757812 * _0x425fb8, 128.58523559570312 * _0x425fb8), _0x481e7d['bezierCurveTo'](144.00003051757812 * _0x425fb8, 102.58523559570312 * _0x425fb8, 147.00003051757812 * _0x425fb8, 90.58523559570312 * _0x425fb8, 150.00003051757812 * _0x425fb8, 80.58523559570312 * _0x425fb8), _0x481e7d['bezierCurveTo'](159.50003051757812 * _0x425fb8, 79.08523559570312 * _0x425fb8, 159.50003051757812 * _0x425fb8, 79.08523559570312 * _0x425fb8, 169.00003051757812 * _0x425fb8, 77.58523559570312 * _0x425fb8), _0x481e7d['bezierCurveTo'](163.00003051757812 * _0x425fb8, 72.58523559570312 * _0x425fb8, 163.00003051757812 * _0x425fb8, 72.58523559570312 * _0x425fb8, 157.00003051757812 * _0x425fb8, 67.58523559570312 * _0x425fb8), _0x481e7d['bezierCurveTo'](162.00003051757812 * _0x425fb8, 42.585235595703125 * _0x425fb8, 169.00003051757812 * _0x425fb8, 29.585235595703125 * _0x425fb8, 182.00003051757812 * _0x425fb8, 14.585235595703125 * _0x425fb8), _0x481e7d['bezierCurveTo'](219.00003051757812 * _0x425fb8, 48.585235595703125 * _0x425fb8, 222.00003051757812 * _0x425fb8, 92.58523559570312 * _0x425fb8, 218.00003051757812 * _0x425fb8, 112.58523559570312 * _0x425fb8), _0x481e7d['bezierCurveTo'](239.00003051757812 * _0x425fb8, 95.58523559570312 * _0x425fb8, 242.00003051757812 * _0x425fb8, 97.58523559570312 * _0x425fb8, 249.00003051757812 * _0x425fb8, 94.58523559570312 * _0x425fb8), _0x481e7d['bezierCurveTo'](255.00003051757812 * _0x425fb8, 103.08523559570312 * _0x425fb8, 255.00003051757812 * _0x425fb8, 103.08523559570312 * _0x425fb8, 261.0000305175781 * _0x425fb8, 111.58523559570312 * _0x425fb8), _0x481e7d['bezierCurveTo'](261.5000305175781 * _0x425fb8, 99.58523559570312 * _0x425fb8, 261.5000305175781 * _0x425fb8, 99.58523559570312 * _0x425fb8, 262.0000305175781 * _0x425fb8, 87.58523559570312 * _0x425fb8), _0x481e7d['bezierCurveTo'](282.0000305175781 * _0x425fb8, 77.58523559570312 * _0x425fb8, 301.0000305175781 * _0x425fb8, 74.58523559570312 * _0x425fb8, 314.0000305175781 * _0x425fb8, 76.58523559570312 * _0x425fb8), _0x481e7d['closePath'](), fill_path(_0x481e7d, undefined, _0x1d4483[0x2], 0x4 * _0x425fb8), _0x514111;
}

function create_special_fur(_0x1e0ef1, _0x3694d5, _0x33b6ef) {
    var _0x293778 = document['createElement']('canvas'),
        _0x1e1397 = _0x293778['getContext']('2d');
    return _0x293778['width'] = 0xf8 * _0x1e0ef1, _0x293778['height'] = 0x80 * _0x1e0ef1, _0x1e1397['beginPath'](), _0x1e1397['lineCap'] = 'round', _0x1e1397['lineJoin'] = 'round', _0x1e1397['moveTo'](0x89 * _0x1e0ef1, 0x7 * _0x1e0ef1), _0x1e1397['bezierCurveTo'](0xa9 * _0x1e0ef1, 0xe * _0x1e0ef1, 0xd4 * _0x1e0ef1, 0x9 * _0x1e0ef1, 0xf1 * _0x1e0ef1, 0x5 * _0x1e0ef1), _0x1e1397['bezierCurveTo'](0xd3 * _0x1e0ef1, 0x3f * _0x1e0ef1, 0x9e * _0x1e0ef1, 0x5c * _0x1e0ef1, 0x67 * _0x1e0ef1, 0x6d * _0x1e0ef1), _0x1e1397['bezierCurveTo'](0x49 * _0x1e0ef1, 0x7e * _0x1e0ef1, 0x36 * _0x1e0ef1, 0x7c * _0x1e0ef1, 0x6 * _0x1e0ef1, 0x63 * _0x1e0ef1), _0x1e1397['bezierCurveTo'](0x52 * _0x1e0ef1, 0x3f * _0x1e0ef1, 0x71 * _0x1e0ef1, 0x23 * _0x1e0ef1, 0x89 * _0x1e0ef1, 0x8 * _0x1e0ef1), _0x1e1397['closePath'](), fill_path(_0x1e1397, _0x33b6ef[0x0], _0x33b6ef[0x1], 0xe * _0x1e0ef1), _0x1e1397['beginPath'](), _0x1e1397['lineCap'] = 'round', _0x1e1397['lineJoin'] = 'round', _0x1e1397['moveTo'](0x49 * _0x1e0ef1, 0x7c * _0x1e0ef1), _0x1e1397['bezierCurveTo'](0x6f * _0x1e0ef1, 0x7e * _0x1e0ef1, 0xa2 * _0x1e0ef1, 0x61 * _0x1e0ef1, 0xcb * _0x1e0ef1, 0x3d * _0x1e0ef1), _0x1e1397['bezierCurveTo'](0x9c * _0x1e0ef1, 0x62 * _0x1e0ef1, 0x83 * _0x1e0ef1, 0x6a * _0x1e0ef1, 0x69 * _0x1e0ef1, 0x6d * _0x1e0ef1), _0x1e1397['bezierCurveTo'](0x63 * _0x1e0ef1, 0x79 * _0x1e0ef1, 0x57 * _0x1e0ef1, 0x7c * _0x1e0ef1, 0x48 * _0x1e0ef1, 0x7c * _0x1e0ef1), _0x1e1397['closePath'](), fill_path(_0x1e1397, _0x33b6ef[0x2], _0x33b6ef[0x3], 0x1 * _0x1e0ef1), _0x293778;
}

function create_wall_stone(_0x5ee893, _0x1074e7, _0xf4d652) {
    var _0x38bb73 = document['createElement']('canvas'),
        _0x7958f0 = _0x38bb73['getContext']('2d');
    return _0x38bb73['width'] = 0x82 * _0x5ee893, _0x38bb73['height'] = 0x94 * _0x5ee893, _0x7958f0['globalAlpha'] = _0x1074e7 ? 0.5 : 0x1, _0x7958f0['save'](), _0x7958f0['translate'](0x41 * _0x5ee893, 0x55 * _0x5ee893), _0x7958f0['rotate'](1.4), round_regular_polygon(_0x7958f0, 0x7, 0x3c * _0x5ee893, 0xa * _0x5ee893), _0x7958f0['restore'](), fill_path(_0x7958f0, _0xf4d652[0x0]), _0x7958f0['globalAlpha'] = 0x1, _0x7958f0['save'](), _0x7958f0['translate'](0x41 * _0x5ee893, 0x4a * _0x5ee893), _0x7958f0['rotate'](1.4), round_regular_polygon(_0x7958f0, 0x7, 0x3c * _0x5ee893, 0xa * _0x5ee893), fill_path(_0x7958f0, _0xf4d652[0x1], _0xf4d652[0x2], 0x4), _0x7958f0['rotate'](0.64), round_regular_polygon(_0x7958f0, 0x7, 0x28 * _0x5ee893, 0xa * _0x5ee893), fill_path(_0x7958f0, _0xf4d652[0x3], _0xf4d652[0x4], 0x4), _0x7958f0['rotate'](0.12), round_regular_polygon(_0x7958f0, 0x7, 0x17 * _0x5ee893, 0x5 * _0x5ee893), _0x7958f0['restore'](), fill_path(_0x7958f0, _0xf4d652[0x5]), _0x38bb73;
}

function create_wall_gold(_0x2f9e85, _0x4006e7, _0x5792a7) {
    var _0x312e53 = document['createElement']('canvas'),
        _0x35e610 = _0x312e53['getContext']('2d');
    return _0x312e53['width'] = _0x2f9e85 * 0x7d, _0x312e53['height'] = _0x2f9e85 * 0x8b, _0x35e610['globalAlpha'] = _0x4006e7 ? 0.5 : 0x1, _0x35e610['save'](), _0x35e610['translate'](0x3f * _0x2f9e85, 0x4f * _0x2f9e85), _0x35e610['rotate'](0x1), round_regular_polygon(_0x35e610, 0x8, 0x3c * _0x2f9e85, 0xa * _0x2f9e85), fill_path(_0x35e610, _0x5792a7[0x0]), _0x35e610['restore'](), _0x35e610['globalAlpha'] = 0x1, _0x35e610['save'](), _0x35e610['translate'](0x3f * _0x2f9e85, 0x45 * _0x2f9e85), _0x35e610['rotate'](0x1), round_regular_polygon(_0x35e610, 0x8, 0x3c * _0x2f9e85, 0xa * _0x2f9e85), fill_path(_0x35e610, _0x5792a7[0x1], _0x5792a7[0x2], 0x4), _0x35e610['rotate'](0.56), round_regular_polygon(_0x35e610, 0x8, 0x28 * _0x2f9e85, 0xa * _0x2f9e85), fill_path(_0x35e610, _0x5792a7[0x3], _0x5792a7[0x4], 0x4), _0x35e610['rotate'](0.28), round_regular_polygon(_0x35e610, 0x8, 0x1c * _0x2f9e85, 0x8 * _0x2f9e85), fill_path(_0x35e610, _0x5792a7[0x5]), _0x35e610['restore'](), _0x312e53;
}

function create_door_wood(_0x4fc02f, _0x5aae94, _0x49c35b) {
    var _0x8bd025 = document['createElement']('canvas'),
        _0x2c1781 = _0x8bd025['getContext']('2d');
    return _0x8bd025['width'] = 0x5a * _0x4fc02f, _0x8bd025['height'] = 0x65 * _0x4fc02f, _0x2c1781['translate'](0x0 * _0x4fc02f, 0x5 * _0x4fc02f), i === 0x0 && (_0x2c1781['globalAlpha'] = _0x5aae94 ? 0.5 : 0x1, circle(_0x2c1781, 0x2c * _0x4fc02f, 0x37 * _0x4fc02f, 0x29 * _0x4fc02f), fill_path(_0x2c1781, _0x49c35b[0x0])), _0x2c1781['globalAlpha'] = 0x1, circle(_0x2c1781, 0x2c * _0x4fc02f, 0x2d * _0x4fc02f, 0x29 * _0x4fc02f), fill_path(_0x2c1781, _0x49c35b[0x1], _0x49c35b[0x2], 0x4 * _0x4fc02f), circle(_0x2c1781, 0x2c * _0x4fc02f, 0x2d * _0x4fc02f, 0x1f * _0x4fc02f), fill_path(_0x2c1781, _0x49c35b[0x3]), _0x2c1781['save'](), _0x2c1781['translate'](0x2d * _0x4fc02f, 0x2d * _0x4fc02f), round_rect(_0x2c1781, -0x9 * _0x4fc02f, -25.5 * _0x4fc02f, 0x12 * _0x4fc02f, 0x33 * _0x4fc02f, 0x1e * _0x4fc02f), _0x2c1781['restore'](), fill_path(_0x2c1781, _0x49c35b[0x4], _0x49c35b[0x4], 0x2 * _0x4fc02f), _0x2c1781['save'](), _0x2c1781['translate'](0x2d * _0x4fc02f, 0x2d * _0x4fc02f), round_rect(_0x2c1781, -0x1a * _0x4fc02f, -0x9 * _0x4fc02f, 0x34 * _0x4fc02f, 0x12 * _0x4fc02f, 0x1e * _0x4fc02f), _0x2c1781['restore'](), fill_path(_0x2c1781, _0x49c35b[0x4], _0x49c35b[0x4], 0x2 * _0x4fc02f), circle(_0x2c1781, 0x2d * _0x4fc02f, 0x1d * _0x4fc02f, 0x7 * _0x4fc02f), fill_path(_0x2c1781, _0x49c35b[0x5]), circle(_0x2c1781, 0x2d * _0x4fc02f, 0x3d * _0x4fc02f, 0x7 * _0x4fc02f), fill_path(_0x2c1781, _0x49c35b[0x5]), circle(_0x2c1781, 0x1c * _0x4fc02f, 0x2d * _0x4fc02f, 0x7 * _0x4fc02f), fill_path(_0x2c1781, _0x49c35b[0x5]), circle(_0x2c1781, 0x3e * _0x4fc02f, 0x2d * _0x4fc02f, 0x7 * _0x4fc02f), fill_path(_0x2c1781, _0x49c35b[0x5]), _0x8bd025;
}

function create_door_stone(_0x3c83f6, _0x27ab18, _0x23ab2e) {
    var _0x53ce93 = document['createElement']('canvas'),
        _0x4dd91b = _0x53ce93['getContext']('2d');
    return _0x53ce93['width'] = 0x5a * _0x3c83f6, _0x53ce93['height'] = 0x62 * _0x3c83f6, _0x4dd91b['translate'](0x0, 0x4 * _0x3c83f6), i === 0x0 && (_0x4dd91b['globalAlpha'] = _0x27ab18 ? 0.5 : 0x1, _0x4dd91b['save'](), _0x4dd91b['translate'](0x2c * _0x3c83f6, 0x32 * _0x3c83f6), _0x4dd91b['rotate'](1.4), round_regular_polygon(_0x4dd91b, 0x7, 0x29 * _0x3c83f6, 0xa * _0x3c83f6), _0x4dd91b['restore'](), fill_path(_0x4dd91b, _0x23ab2e[0x0])), _0x4dd91b['globalAlpha'] = 0x1, _0x4dd91b['save'](), _0x4dd91b['translate'](0x2c * _0x3c83f6, 0x2c * _0x3c83f6), _0x4dd91b['rotate'](1.4), round_regular_polygon(_0x4dd91b, 0x7, 0x29 * _0x3c83f6, 0xa * _0x3c83f6), fill_path(_0x4dd91b, _0x23ab2e[0x1], _0x23ab2e[0x2], 0x4 * _0x3c83f6), round_regular_polygon(_0x4dd91b, 0x7, 0x23 * _0x3c83f6, 0xa * _0x3c83f6), fill_path(_0x4dd91b, _0x23ab2e[0x3], _0x23ab2e[0x4], 0x4 * _0x3c83f6), round_regular_polygon(_0x4dd91b, 0x7, 0x17 * _0x3c83f6, 0x5 * _0x3c83f6), _0x4dd91b['restore'](), fill_path(_0x4dd91b, _0x23ab2e[0x5]), _0x4dd91b['save'](), _0x4dd91b['translate'](0x2d * _0x3c83f6, 0x2d * _0x3c83f6), _0x4dd91b['rotate'](0x0), round_rect(_0x4dd91b, -0x9 * _0x3c83f6, -25.5 * _0x3c83f6, 0x12 * _0x3c83f6, 0x33 * _0x3c83f6, 0x1e * _0x3c83f6), _0x4dd91b['restore'](), fill_path(_0x4dd91b, _0x23ab2e[0x4], _0x23ab2e[0x4], 0x2 * _0x3c83f6), _0x4dd91b['save'](), _0x4dd91b['translate'](0x2d * _0x3c83f6, 0x2d * _0x3c83f6), _0x4dd91b['rotate'](0x0), round_rect(_0x4dd91b, -0x1a * _0x3c83f6, -0x9 * _0x3c83f6, 0x34 * _0x3c83f6, 0x12 * _0x3c83f6, 0x1e * _0x3c83f6), _0x4dd91b['restore'](), fill_path(_0x4dd91b, _0x23ab2e[0x4], _0x23ab2e[0x4], 0x2 * _0x3c83f6), circle(_0x4dd91b, 0x2d * _0x3c83f6, 0x1d * _0x3c83f6, 0x7 * _0x3c83f6), fill_path(_0x4dd91b, _0x23ab2e[0x5]), circle(_0x4dd91b, 0x2d * _0x3c83f6, 0x3d * _0x3c83f6, 0x7 * _0x3c83f6), fill_path(_0x4dd91b, _0x23ab2e[0x5]), circle(_0x4dd91b, 0x1c * _0x3c83f6, 0x2d * _0x3c83f6, 0x7 * _0x3c83f6), fill_path(_0x4dd91b, _0x23ab2e[0x5]), circle(_0x4dd91b, 0x3e * _0x3c83f6, 0x2d * _0x3c83f6, 0x7 * _0x3c83f6), fill_path(_0x4dd91b, _0x23ab2e[0x5]), _0x53ce93;
}

function create_door_gold(_0xf1ed5b, _0x36e01a, _0x1b788b) {
    var _0x3d6a1d = document['createElement']('canvas'),
        _0x47b61e = _0x3d6a1d['getContext']('2d');
    return _0x3d6a1d['width'] = 0x5a * _0xf1ed5b, _0x3d6a1d['height'] = 0x62 * _0xf1ed5b, _0x47b61e['translate'](0x0, 0x4 * _0xf1ed5b), i === 0x0 && (_0x47b61e['globalAlpha'] = _0x36e01a ? 0.5 : 0x1, _0x47b61e['save'](), _0x47b61e['translate'](0x2c * _0xf1ed5b, 0x32 * _0xf1ed5b), _0x47b61e['rotate'](0x1), round_regular_polygon(_0x47b61e, 0x8, 0x29 * _0xf1ed5b, 0xa * _0xf1ed5b), fill_path(_0x47b61e, _0x1b788b[0x0]), _0x47b61e['restore']()), _0x47b61e['globalAlpha'] = 0x1, _0x47b61e['save'](), _0x47b61e['translate'](0x2c * _0xf1ed5b, 0x2c * _0xf1ed5b), _0x47b61e['rotate'](0x1), round_regular_polygon(_0x47b61e, 0x8, 0x29 * _0xf1ed5b, 0xa * _0xf1ed5b), fill_path(_0x47b61e, _0x1b788b[0x1], _0x1b788b[0x2], 0x4 * _0xf1ed5b), _0x47b61e['rotate'](0.56), round_regular_polygon(_0x47b61e, 0x8, 0x21 * _0xf1ed5b, 0xa * _0xf1ed5b), fill_path(_0x47b61e, _0x1b788b[0x3], _0x1b788b[0x4], 0x4 * _0xf1ed5b), _0x47b61e['rotate'](0.28), round_regular_polygon(_0x47b61e, 0x8, 0x18 * _0xf1ed5b, 0x8 * _0xf1ed5b), fill_path(_0x47b61e, _0x1b788b[0x5]), _0x47b61e['restore'](), _0x47b61e['save'](), _0x47b61e['translate'](0x2d * _0xf1ed5b, 0x2d * _0xf1ed5b), _0x47b61e['rotate'](0x0), round_rect(_0x47b61e, -0x9 * _0xf1ed5b, -25.5 * _0xf1ed5b, 0x12 * _0xf1ed5b, 0x33 * _0xf1ed5b, 0x1e * _0xf1ed5b), _0x47b61e['restore'](), fill_path(_0x47b61e, _0x1b788b[0x4], _0x1b788b[0x4], 0x2 * _0xf1ed5b), _0x47b61e['save'](), _0x47b61e['translate'](0x2d * _0xf1ed5b, 0x2d * _0xf1ed5b), _0x47b61e['rotate'](0x0), round_rect(_0x47b61e, -0x1a * _0xf1ed5b, -0x9 * _0xf1ed5b, 0x34 * _0xf1ed5b, 0x12 * _0xf1ed5b, 0x1e * _0xf1ed5b), _0x47b61e['restore'](), fill_path(_0x47b61e, _0x1b788b[0x4], _0x1b788b[0x4], 0x2 * _0xf1ed5b), circle(_0x47b61e, 0x2d * _0xf1ed5b, 0x1d * _0xf1ed5b, 0x7 * _0xf1ed5b), fill_path(_0x47b61e, _0x1b788b[0x5]), circle(_0x47b61e, 0x2d * _0xf1ed5b, 0x3d * _0xf1ed5b, 0x7 * _0xf1ed5b), fill_path(_0x47b61e, _0x1b788b[0x5]), circle(_0x47b61e, 0x1c * _0xf1ed5b, 0x2d * _0xf1ed5b, 0x7 * _0xf1ed5b), fill_path(_0x47b61e, _0x1b788b[0x5]), circle(_0x47b61e, 0x3e * _0xf1ed5b, 0x2d * _0xf1ed5b, 0x7 * _0xf1ed5b), fill_path(_0x47b61e, _0x1b788b[0x5]), _0x3d6a1d;
}

function create_furnace_on(_0x452b5e, _0x446bd6, _0x58d7e0) {
    var _0xe9a3fd = document['createElement']('canvas'),
        _0x2ee929 = _0xe9a3fd['getContext']('2d');
    return _0xe9a3fd['width'] = 0x12c * _0x452b5e, _0xe9a3fd['height'] = 0x12c * _0x452b5e, _0x2ee929['globalAlpha'] = _0x446bd6 ? 0.5 : 0x1, _0x2ee929['save'](), _0x2ee929['translate'](0x96 * _0x452b5e, 0xa0 * _0x452b5e), _0x2ee929['rotate'](6.28), round_regular_polygon(_0x2ee929, 0x6, 0x92 * _0x452b5e, 0x1e * _0x452b5e), _0x2ee929['restore'](), fill_path(_0x2ee929, _0x58d7e0[0x0]), _0x2ee929['globalAlpha'] = 0x1, _0x2ee929['save'](), _0x2ee929['translate'](0x96 * _0x452b5e, 0x96 * _0x452b5e), _0x2ee929['rotate'](6.28), round_regular_polygon(_0x2ee929, 0x6, 0x92 * _0x452b5e, 0x1e * _0x452b5e), _0x2ee929['restore'](), fill_path(_0x2ee929, _0x58d7e0[0x1], _0x58d7e0[0x2], 0x8 * _0x452b5e), _0x2ee929['save'](), _0x2ee929['translate'](0x96 * _0x452b5e, 0x96 * _0x452b5e), _0x2ee929['rotate'](0x0), round_regular_polygon(_0x2ee929, 0x6, 0x69 * _0x452b5e, 0x1e * _0x452b5e), _0x2ee929['restore'](), fill_path(_0x2ee929, _0x58d7e0[0x3], _0x58d7e0[0x3], 0x8 * _0x452b5e), _0x2ee929['save'](), _0x2ee929['translate'](0x96 * _0x452b5e, 0x96 * _0x452b5e), _0x2ee929['rotate'](0x0), round_regular_polygon(_0x2ee929, 0x6, 0x42 * _0x452b5e, 0x1e * _0x452b5e), _0x2ee929['restore'](), fill_path(_0x2ee929, _0x58d7e0[0x4], _0x58d7e0[0x2], 0x8 * _0x452b5e), _0x2ee929['save'](), _0x2ee929['translate'](0x96 * _0x452b5e, 0x96 * _0x452b5e), _0x2ee929['rotate'](0x0), round_regular_polygon(_0x2ee929, 0x6, 0x1f * _0x452b5e, 0x1e * _0x452b5e), _0x2ee929['restore'](), fill_path(_0x2ee929, _0x58d7e0[0x5], _0x58d7e0[0x6], 0x8 * _0x452b5e), _0x2ee929['beginPath'](), _0x2ee929['lineCap'] = 'round', _0x2ee929['lineJoin'] = 'round', _0x2ee929['moveTo'](0x96 * _0x452b5e, 0xcf * _0x452b5e), _0x2ee929['bezierCurveTo'](0x96 * _0x452b5e, 0x97 * _0x452b5e, 0x96 * _0x452b5e, 0x65 * _0x452b5e, 0x96 * _0x452b5e, 0x5e * _0x452b5e), _0x2ee929['closePath'](), fill_path(_0x2ee929, undefined, _0x58d7e0[0x2], 0x8 * _0x452b5e), _0x2ee929['beginPath'](), _0x2ee929['lineCap'] = 'round', _0x2ee929['lineJoin'] = 'round', _0x2ee929['moveTo'](0x76 * _0x452b5e, 0x64 * _0x452b5e), _0x2ee929['bezierCurveTo'](0x76 * _0x452b5e, 0xcd * _0x452b5e, 0x76 * _0x452b5e, 0xcf * _0x452b5e, 0x76 * _0x452b5e, 0xc8 * _0x452b5e), _0x2ee929['closePath'](), fill_path(_0x2ee929, undefined, _0x58d7e0[0x2], 0x8 * _0x452b5e), _0x2ee929['beginPath'](), _0x2ee929['lineCap'] = 'round', _0x2ee929['lineJoin'] = 'round', _0x2ee929['moveTo'](0xb7 * _0x452b5e, 0x64 * _0x452b5e), _0x2ee929['bezierCurveTo'](0xb7 * _0x452b5e, 0xcb * _0x452b5e, 0xb7 * _0x452b5e, 0xcb * _0x452b5e, 0xb7 * _0x452b5e, 0xc8 * _0x452b5e), _0x2ee929['closePath'](), fill_path(_0x2ee929, undefined, _0x58d7e0[0x2], 0x8 * _0x452b5e), _0xe9a3fd;
}

function create_furnace_off(_0xa47825, _0x120564, _0x5c58f5) {
    var _0xa3de55 = document['createElement']('canvas'),
        _0x2c73ec = _0xa3de55['getContext']('2d');
    return _0xa3de55['width'] = 0x12c * _0xa47825, _0xa3de55['height'] = 0x12c * _0xa47825, _0x2c73ec['globalAlpha'] = _0x120564 ? 0.5 : 0x1, _0x2c73ec['save'](), _0x2c73ec['translate'](0x96 * _0xa47825, 0xa0 * _0xa47825), _0x2c73ec['rotate'](6.28), round_regular_polygon(_0x2c73ec, 0x6, 0x92 * _0xa47825, 0x1e * _0xa47825), _0x2c73ec['restore'](), fill_path(_0x2c73ec, _0x5c58f5[0x0]), _0x2c73ec['globalAlpha'] = 0x1, _0x2c73ec['save'](), _0x2c73ec['translate'](0x96 * _0xa47825, 0x96 * _0xa47825), _0x2c73ec['rotate'](6.28), round_regular_polygon(_0x2c73ec, 0x6, 0x92 * _0xa47825, 0x1e * _0xa47825), _0x2c73ec['restore'](), fill_path(_0x2c73ec, _0x5c58f5[0x1], _0x5c58f5[0x2], 0x8 * _0xa47825), _0x2c73ec['save'](), _0x2c73ec['translate'](0x96 * _0xa47825, 0x96 * _0xa47825), _0x2c73ec['rotate'](0x0), round_regular_polygon(_0x2c73ec, 0x6, 0x69 * _0xa47825, 0x1e * _0xa47825), _0x2c73ec['restore'](), fill_path(_0x2c73ec, _0x5c58f5[0x3], _0x5c58f5[0x3], 0x8 * _0xa47825), _0x2c73ec['save'](), _0x2c73ec['translate'](0x96 * _0xa47825, 0x96 * _0xa47825), _0x2c73ec['rotate'](0x0), round_regular_polygon(_0x2c73ec, 0x6, 0x42 * _0xa47825, 0x1e * _0xa47825), _0x2c73ec['restore'](), fill_path(_0x2c73ec, _0x5c58f5[0x4], _0x5c58f5[0x2], 0x8 * _0xa47825), _0x2c73ec['save'](), _0x2c73ec['translate'](0x83 * _0xa47825, 0x74 * _0xa47825), round_regular_polygon(_0x2c73ec, 0x7, 0x11 * _0xa47825, 0x8 * _0xa47825), _0x2c73ec['restore'](), fill_path(_0x2c73ec, _0x5c58f5[0x6]), _0x2c73ec['save'](), _0x2c73ec['translate'](0xa3 * _0xa47825, 0xa8 * _0xa47825), round_regular_polygon(_0x2c73ec, 0x7, 0x19 * _0xa47825, 0x8 * _0xa47825), _0x2c73ec['restore'](), fill_path(_0x2c73ec, _0x5c58f5[0x6]), _0x2c73ec['save'](), _0x2c73ec['translate'](0x75 * _0xa47825, 0x97 * _0xa47825), round_regular_polygon(_0x2c73ec, 0x7, 0xb * _0xa47825, 0x8 * _0xa47825), _0x2c73ec['restore'](), fill_path(_0x2c73ec, _0x5c58f5[0x6]), _0x2c73ec['save'](), _0x2c73ec['translate'](0xa7 * _0xa47825, 0x7a * _0xa47825), round_regular_polygon(_0x2c73ec, 0x7, 0xc * _0xa47825, 0x8 * _0xa47825), _0x2c73ec['restore'](), fill_path(_0x2c73ec, _0x5c58f5[0x6]), _0x2c73ec['beginPath'](), _0x2c73ec['lineCap'] = 'round', _0x2c73ec['lineJoin'] = 'round', _0x2c73ec['moveTo'](0x96 * _0xa47825, 0xcf * _0xa47825), _0x2c73ec['bezierCurveTo'](0x96 * _0xa47825, 0x97 * _0xa47825, 0x96 * _0xa47825, 0x65 * _0xa47825, 0x96 * _0xa47825, 0x5e * _0xa47825), _0x2c73ec['closePath'](), fill_path(_0x2c73ec, undefined, _0x5c58f5[0x2], 0x8 * _0xa47825), _0x2c73ec['beginPath'](), _0x2c73ec['lineCap'] = 'round', _0x2c73ec['lineJoin'] = 'round', _0x2c73ec['moveTo'](0x76 * _0xa47825, 0x64 * _0xa47825), _0x2c73ec['bezierCurveTo'](0x76 * _0xa47825, 0xcd * _0xa47825, 0x76 * _0xa47825, 0xcf * _0xa47825, 0x76 * _0xa47825, 0xc8 * _0xa47825), _0x2c73ec['closePath'](), fill_path(_0x2c73ec, undefined, _0x5c58f5[0x2], 0x8 * _0xa47825), _0x2c73ec['beginPath'](), _0x2c73ec['lineCap'] = 'round', _0x2c73ec['lineJoin'] = 'round', _0x2c73ec['moveTo'](0xb7 * _0xa47825, 0x64 * _0xa47825), _0x2c73ec['bezierCurveTo'](0xb7 * _0xa47825, 0xcb * _0xa47825, 0xb7 * _0xa47825, 0xcb * _0xa47825, 0xb7 * _0xa47825, 0xc8 * _0xa47825), _0x2c73ec['closePath'](), fill_path(_0x2c73ec, undefined, _0x5c58f5[0x2], 0x8 * _0xa47825), _0xa3de55;
}

function create_furnace_slot(_0x1436f7, _0x3285ee, _0x59eca1) {
    var _0x343a1b = document['createElement']('canvas'),
        _0x692375 = _0x343a1b['getContext']('2d');
    return _0x343a1b['width'] = 0x76 * _0x1436f7, _0x343a1b['height'] = 0x81 * _0x1436f7, _0x692375['save'](), _0x692375['translate'](0x5a * _0x1436f7, 0x5a * _0x1436f7), round_rect(_0x692375, -86.5 * _0x1436f7, -0x56 * _0x1436f7, 0x6e * _0x1436f7, 0x6e * _0x1436f7, 0xf * _0x1436f7), _0x692375['restore'](), fill_path(_0x692375, _0x59eca1[0x0], _0x59eca1[0x1], 0x4), _0x343a1b;
}

function create_door_diamond(_0xe2ab67, _0x32cda2, _0x5caf7c) {
    var _0x228efa = document['createElement']('canvas'),
        _0x5358d6 = _0x228efa['getContext']('2d');
    return _0x228efa['width'] = 0x5a * _0xe2ab67, _0x228efa['height'] = 0x62 * _0xe2ab67, _0x5358d6['translate'](0x0, 0x4 * _0xe2ab67), i === 0x0 && (_0x5358d6['globalAlpha'] = _0x32cda2 ? 0.5 : 0x1, _0x5358d6['save'](), _0x5358d6['translate'](0x2c * _0xe2ab67, 0x32 * _0xe2ab67), _0x5358d6['rotate'](0.2), round_regular_polygon(_0x5358d6, 0x9, 0x29 * _0xe2ab67, 0xa * _0xe2ab67), _0x5358d6['restore'](), fill_path(_0x5358d6, _0x5caf7c[0x0])), _0x5358d6['globalAlpha'] = 0x1, _0x5358d6['save'](), _0x5358d6['translate'](0x2c * _0xe2ab67, 0x2c * _0xe2ab67), _0x5358d6['rotate'](0.2), round_regular_polygon(_0x5358d6, 0x9, 0x29 * _0xe2ab67, 0xa * _0xe2ab67), fill_path(_0x5358d6, _0x5caf7c[0x1], _0x5caf7c[0x2], 0x4 * _0xe2ab67), _0x5358d6['rotate'](-0.32), round_regular_polygon(_0x5358d6, 0x9, 0x20 * _0xe2ab67, 0xa * _0xe2ab67), fill_path(_0x5358d6, _0x5caf7c[0x3], _0x5caf7c[0x4], 0x4 * _0xe2ab67), _0x5358d6['rotate'](0.68), round_regular_polygon(_0x5358d6, 0x9, 0x17 * _0xe2ab67, 0x8 * _0xe2ab67), fill_path(_0x5358d6, _0x5caf7c[0x5], _0x5caf7c[0x6], 0x6 * _0xe2ab67), _0x5358d6['restore'](), _0x5358d6['save'](), _0x5358d6['translate'](0x2d * _0xe2ab67, 0x2d * _0xe2ab67), _0x5358d6['rotate'](0x0), round_rect(_0x5358d6, -0x9 * _0xe2ab67, -25.5 * _0xe2ab67, 0x12 * _0xe2ab67, 0x33 * _0xe2ab67, 0x1e * _0xe2ab67), _0x5358d6['restore'](), fill_path(_0x5358d6, _0x5caf7c[0x4], _0x5caf7c[0x4], 0x2 * _0xe2ab67), _0x5358d6['save'](), _0x5358d6['translate'](0x2d * _0xe2ab67, 0x2d * _0xe2ab67), _0x5358d6['rotate'](0x0), round_rect(_0x5358d6, -0x1a * _0xe2ab67, -0x9 * _0xe2ab67, 0x34 * _0xe2ab67, 0x12 * _0xe2ab67, 0x1e * _0xe2ab67), _0x5358d6['restore'](), fill_path(_0x5358d6, _0x5caf7c[0x4], _0x5caf7c[0x4], 0x2 * _0xe2ab67), circle(_0x5358d6, 0x2d * _0xe2ab67, 0x1d * _0xe2ab67, 0x7 * _0xe2ab67), fill_path(_0x5358d6, _0x5caf7c[0x5]), circle(_0x5358d6, 0x2d * _0xe2ab67, 0x3d * _0xe2ab67, 0x7 * _0xe2ab67), fill_path(_0x5358d6, _0x5caf7c[0x5]), circle(_0x5358d6, 0x1c * _0xe2ab67, 0x2d * _0xe2ab67, 0x7 * _0xe2ab67), fill_path(_0x5358d6, _0x5caf7c[0x5]), circle(_0x5358d6, 0x3e * _0xe2ab67, 0x2d * _0xe2ab67, 0x7 * _0xe2ab67), fill_path(_0x5358d6, _0x5caf7c[0x5]), _0x228efa;
}

function create_coat(_0x6428b7, _0x2a0110, _0xcfd7cd) {
    var _0x5b53ea = document['createElement']('canvas'),
        _0x5b572d = _0x5b53ea['getContext']('2d');
    return _0x5b53ea['width'] = 0x87 * _0x6428b7, _0x5b53ea['height'] = 0x78 * _0x6428b7, _0x5b572d['beginPath'](), _0x5b572d['lineCap'] = 'round', _0x5b572d['lineJoin'] = 'round', _0x5b572d['moveTo'](3.5 * _0x6428b7, 55.25 * _0x6428b7), _0x5b572d['bezierCurveTo'](3.5 * _0x6428b7, 114.25 * _0x6428b7, 2.5 * _0x6428b7, 109.25 * _0x6428b7, 3.5 * _0x6428b7, 112.25 * _0x6428b7), _0x5b572d['bezierCurveTo'](5.5 * _0x6428b7, 119.25 * _0x6428b7, 8.5 * _0x6428b7, 119.25 * _0x6428b7, 11.5 * _0x6428b7, 119.25 * _0x6428b7), _0x5b572d['bezierCurveTo'](15.5 * _0x6428b7, 114.25 * _0x6428b7, 13.5 * _0x6428b7, 95.25 * _0x6428b7, 14.5 * _0x6428b7, 82.25 * _0x6428b7), _0x5b572d['closePath'](), fill_path(_0x5b572d, _0xcfd7cd[0x0], _0xcfd7cd[0x1], 0x7 * _0x6428b7), _0x5b572d['beginPath'](), _0x5b572d['lineCap'] = 'round', _0x5b572d['lineJoin'] = 'round', _0x5b572d['moveTo'](6.5 * _0x6428b7, 43.25 * _0x6428b7), _0x5b572d['bezierCurveTo'](3.5 * _0x6428b7, 27.25 * _0x6428b7, 7.5 * _0x6428b7, 20.25 * _0x6428b7, 25.5 * _0x6428b7, 11.25 * _0x6428b7), _0x5b572d['bezierCurveTo'](45.5 * _0x6428b7, -0.75 * _0x6428b7, 73.5 * _0x6428b7, 1.25 * _0x6428b7, 107.5 * _0x6428b7, 10.25 * _0x6428b7), _0x5b572d['bezierCurveTo'](131.5 * _0x6428b7, 21.25 * _0x6428b7, 125.5 * _0x6428b7, 34.25 * _0x6428b7, 125.5 * _0x6428b7, 36.25 * _0x6428b7), _0x5b572d['closePath'](), fill_path(_0x5b572d, _0xcfd7cd[0x0], _0xcfd7cd[0x1], 0x7 * _0x6428b7), _0x5b572d['beginPath'](), _0x5b572d['lineCap'] = 'round', _0x5b572d['lineJoin'] = 'round', _0x5b572d['moveTo'](120.5 * _0x6428b7, 62.25 * _0x6428b7), _0x5b572d['bezierCurveTo'](121.5 * _0x6428b7, 95.25 * _0x6428b7, 120.5 * _0x6428b7, 80.25 * _0x6428b7, 120.5 * _0x6428b7, 100.25 * _0x6428b7), _0x5b572d['bezierCurveTo'](118.5 * _0x6428b7, 119.25 * _0x6428b7, 123.5 * _0x6428b7, 118.25 * _0x6428b7, 129.5 * _0x6428b7, 113.25 * _0x6428b7), _0x5b572d['bezierCurveTo'](133.5 * _0x6428b7, 107.25 * _0x6428b7, 130.5 * _0x6428b7, 97.25 * _0x6428b7, 130.5 * _0x6428b7, 87.25 * _0x6428b7), _0x5b572d['bezierCurveTo'](129.5 * _0x6428b7, 56.25 * _0x6428b7, 0x82 * _0x6428b7, 70.75 * _0x6428b7, 129.5 * _0x6428b7, 54.25 * _0x6428b7), _0x5b572d['closePath'](), fill_path(_0x5b572d, _0xcfd7cd[0x0], _0xcfd7cd[0x1], 0x7 * _0x6428b7), _0x5b572d['beginPath'](), _0x5b572d['lineCap'] = 'round', _0x5b572d['lineJoin'] = 'round', _0x5b572d['moveTo'](17.5 * _0x6428b7, 0x1b * _0x6428b7), _0x5b572d['bezierCurveTo'](48.5 * _0x6428b7, 0x5 * _0x6428b7, 93.5 * _0x6428b7, 0xe * _0x6428b7, 118.5 * _0x6428b7, 0x1a * _0x6428b7), _0x5b572d['bezierCurveTo'](132.5 * _0x6428b7, 0x23 * _0x6428b7, 133.5 * _0x6428b7, 0x34 * _0x6428b7, 132.5 * _0x6428b7, 0x44 * _0x6428b7), _0x5b572d['bezierCurveTo'](125.5 * _0x6428b7, 0x57 * _0x6428b7, 116.5 * _0x6428b7, 0x54 * _0x6428b7, 96.5 * _0x6428b7, 0x4b * _0x6428b7), _0x5b572d['bezierCurveTo'](60.5 * _0x6428b7, 0x42 * _0x6428b7, 52.5 * _0x6428b7, 0x4a * _0x6428b7, 37.5 * _0x6428b7, 0x4e * _0x6428b7), _0x5b572d['bezierCurveTo'](2.5 * _0x6428b7, 0x56 * _0x6428b7, 3.5 * _0x6428b7, 0x4e * _0x6428b7, 1.5 * _0x6428b7, 0x3d * _0x6428b7), _0x5b572d['bezierCurveTo'](1.5 * _0x6428b7, 0x25 * _0x6428b7, 9.5 * _0x6428b7, 0x20 * _0x6428b7, 15.5 * _0x6428b7, 0x1c * _0x6428b7), _0x5b572d['closePath'](), fill_path(_0x5b572d, _0xcfd7cd[0x2], _0xcfd7cd[0x3], 0x7 * _0x6428b7), _0x5b53ea;
}

function create_crab_crown(_0x343e1c, _0xd803f0, _0x329666) {
    var _0x18b03e = document['createElement']('canvas'),
        _0x257296 = _0x18b03e['getContext']('2d');
    return _0x18b03e['width'] = 0x1f5 * _0x343e1c, _0x18b03e['height'] = 0x135 * _0x343e1c, _0x257296['translate'](0x0, 0x6 * _0x343e1c), _0x257296['globalAlpha'] = _0xd803f0 ? 0.5 : 0x1, _0x257296['beginPath'](), _0x257296['lineCap'] = 'round', _0x257296['lineJoin'] = 'round', _0x257296['moveTo'](0x7e * _0x343e1c, 0xb8 * _0x343e1c), _0x257296['bezierCurveTo'](0xa9 * _0x343e1c, 0xc4 * _0x343e1c, 0xc2 * _0x343e1c, 0xc6 * _0x343e1c, 0xe3 * _0x343e1c, 0xc6 * _0x343e1c), _0x257296['bezierCurveTo'](0xeb * _0x343e1c, 0xde * _0x343e1c, 0xec * _0x343e1c, 0xdf * _0x343e1c, 0xf1 * _0x343e1c, 0xe2 * _0x343e1c), _0x257296['bezierCurveTo'](0xf5 * _0x343e1c, 0xe4 * _0x343e1c, 0x101 * _0x343e1c, 0xe4 * _0x343e1c, 0x107 * _0x343e1c, 0xe2 * _0x343e1c), _0x257296['bezierCurveTo'](0x10b * _0x343e1c, 0xe1 * _0x343e1c, 0x10e * _0x343e1c, 0xd3 * _0x343e1c, 0x113 * _0x343e1c, 0xc6 * _0x343e1c), _0x257296['bezierCurveTo'](0x14c * _0x343e1c, 0xc2 * _0x343e1c, 0x15b * _0x343e1c, 0xc0 * _0x343e1c, 0x174 * _0x343e1c, 0xbc * _0x343e1c), _0x257296['bezierCurveTo'](0x16e * _0x343e1c, 174.5 * _0x343e1c, 0x16e * _0x343e1c, 174.5 * _0x343e1c, 0x168 * _0x343e1c, 0xa1 * _0x343e1c), _0x257296['bezierCurveTo'](253.5 * _0x343e1c, 0xa2 * _0x343e1c, 253.5 * _0x343e1c, 0xa2 * _0x343e1c, 0x93 * _0x343e1c, 0xa3 * _0x343e1c), _0x257296['closePath'](), fill_path(_0x257296, _0x329666[0x0]), _0x257296['globalAlpha'] = 0x1, _0x257296['translate'](0x0, -0x6 * _0x343e1c), _0x257296['beginPath'](), _0x257296['lineCap'] = 'round', _0x257296['lineJoin'] = 'round', _0x257296['moveTo'](0x64 * _0x343e1c, 0x74 * _0x343e1c), _0x257296['bezierCurveTo'](0x5a * _0x343e1c, 0x65 * _0x343e1c, 0x60 * _0x343e1c, 0x59 * _0x343e1c, 0x6a * _0x343e1c, 0x53 * _0x343e1c), _0x257296['bezierCurveTo'](0x56 * _0x343e1c, 0x4f * _0x343e1c, 0x56 * _0x343e1c, 0x34 * _0x343e1c, 0x5d * _0x343e1c, 0x26 * _0x343e1c), _0x257296['bezierCurveTo'](0x63 * _0x343e1c, 0x33 * _0x343e1c, 0x6b * _0x343e1c, 0x39 * _0x343e1c, 0x7a * _0x343e1c, 0x3f * _0x343e1c), _0x257296['bezierCurveTo'](0x82 * _0x343e1c, 0x35 * _0x343e1c, 0x8d * _0x343e1c, 0x2e * _0x343e1c, 0xa1 * _0x343e1c, 0x2e * _0x343e1c), _0x257296['bezierCurveTo'](0x9d * _0x343e1c, 0x1f * _0x343e1c, 0x9e * _0x343e1c, 0x14 * _0x343e1c, 0xa9 * _0x343e1c, 0x6 * _0x343e1c), _0x257296['bezierCurveTo'](0xab * _0x343e1c, 0x18 * _0x343e1c, 0xba * _0x343e1c, 0x21 * _0x343e1c, 0xc6 * _0x343e1c, 0x2d * _0x343e1c), _0x257296['bezierCurveTo'](0xfc * _0x343e1c, 0x2d * _0x343e1c, 0xfc * _0x343e1c, 0x2d * _0x343e1c, 0x132 * _0x343e1c, 0x2d * _0x343e1c), _0x257296['bezierCurveTo'](0x143 * _0x343e1c, 0x21 * _0x343e1c, 0x14c * _0x343e1c, 0x15 * _0x343e1c, 0x14f * _0x343e1c, 0x7 * _0x343e1c), _0x257296['bezierCurveTo'](0x15d * _0x343e1c, 0x15 * _0x343e1c, 0x15b * _0x343e1c, 0x24 * _0x343e1c, 0x159 * _0x343e1c, 0x2e * _0x343e1c), _0x257296['bezierCurveTo'](0x16c * _0x343e1c, 0x2e * _0x343e1c, 0x171 * _0x343e1c, 0x30 * _0x343e1c, 0x179 * _0x343e1c, 0x3f * _0x343e1c), _0x257296['bezierCurveTo'](0x18e * _0x343e1c, 0x3a * _0x343e1c, 0x193 * _0x343e1c, 0x31 * _0x343e1c, 0x199 * _0x343e1c, 0x28 * _0x343e1c), _0x257296['bezierCurveTo'](0x1a3 * _0x343e1c, 0x39 * _0x343e1c, 0x19b * _0x343e1c, 0x4f * _0x343e1c, 0x18e * _0x343e1c, 0x55 * _0x343e1c), _0x257296['bezierCurveTo'](0x195 * _0x343e1c, 0x64 * _0x343e1c, 0x195 * _0x343e1c, 0x6a * _0x343e1c, 0x191 * _0x343e1c, 0x76 * _0x343e1c), _0x257296['bezierCurveTo'](332.5 * _0x343e1c, 128.5 * _0x343e1c, 332.5 * _0x343e1c, 128.5 * _0x343e1c, 0x108 * _0x343e1c, 0x8b * _0x343e1c), _0x257296['closePath'](), fill_path(_0x257296, _0x329666[0x1], _0x329666[0x2], 0xa * _0x343e1c), _0x257296['beginPath'](), _0x257296['lineCap'] = 'round', _0x257296['lineJoin'] = 'round', _0x257296['moveTo'](0x7a * _0x343e1c, 0xbf * _0x343e1c), _0x257296['bezierCurveTo'](0x7b * _0x343e1c, 0xed * _0x343e1c, 0x87 * _0x343e1c, 0xf5 * _0x343e1c, 0x99 * _0x343e1c, 0x103 * _0x343e1c), _0x257296['bezierCurveTo'](0xa7 * _0x343e1c, 0x10d * _0x343e1c, 0x9e * _0x343e1c, 0x119 * _0x343e1c, 0x76 * _0x343e1c, 0x114 * _0x343e1c), _0x257296['bezierCurveTo'](0x68 * _0x343e1c, 0x111 * _0x343e1c, 0x62 * _0x343e1c, 0x10c * _0x343e1c, 0x5d * _0x343e1c, 0xf2 * _0x343e1c), _0x257296['bezierCurveTo'](0x59 * _0x343e1c, 0xdc * _0x343e1c, 0x5c * _0x343e1c, 0xc9 * _0x343e1c, 0x66 * _0x343e1c, 0xb3 * _0x343e1c), _0x257296['closePath'](), fill_path(_0x257296, _0x329666[0x3], _0x329666[0x2], 0xa * _0x343e1c), _0x257296['beginPath'](), _0x257296['lineCap'] = 'round', _0x257296['lineJoin'] = 'round', _0x257296['moveTo'](0x193 * _0x343e1c, 0xb6 * _0x343e1c), _0x257296['bezierCurveTo'](0x19e * _0x343e1c, 0xd7 * _0x343e1c, 0x19c * _0x343e1c, 0xe8 * _0x343e1c, 0x193 * _0x343e1c, 0x104 * _0x343e1c), _0x257296['bezierCurveTo'](0x18b * _0x343e1c, 0x112 * _0x343e1c, 0x177 * _0x343e1c, 0x110 * _0x343e1c, 0x164 * _0x343e1c, 0x10e * _0x343e1c), _0x257296['bezierCurveTo'](0x159 * _0x343e1c, 0x10c * _0x343e1c, 0x153 * _0x343e1c, 0x106 * _0x343e1c, 0x162 * _0x343e1c, 0xfc * _0x343e1c), _0x257296['bezierCurveTo'](0x172 * _0x343e1c, 0xf2 * _0x343e1c, 0x17c * _0x343e1c, 0xe1 * _0x343e1c, 0x180 * _0x343e1c, 0xb8 * _0x343e1c), _0x257296['closePath'](), fill_path(_0x257296, _0x329666[0x3], _0x329666[0x2], 0xa * _0x343e1c), _0x257296['beginPath'](), _0x257296['lineCap'] = 'round', _0x257296['lineJoin'] = 'round', _0x257296['moveTo'](0x9b * _0x343e1c, 0x9d * _0x343e1c), _0x257296['bezierCurveTo'](0x92 * _0x343e1c, 0xbd * _0x343e1c, 0x89 * _0x343e1c, 0xc6 * _0x343e1c, 0x72 * _0x343e1c, 0xdb * _0x343e1c), _0x257296['bezierCurveTo'](0x68 * _0x343e1c, 0xd4 * _0x343e1c, 0x62 * _0x343e1c, 0xcb * _0x343e1c, 0x59 * _0x343e1c, 0xbd * _0x343e1c), _0x257296['bezierCurveTo'](0x52 * _0x343e1c, 0xb2 * _0x343e1c, 0x5b * _0x343e1c, 0xa4 * _0x343e1c, 0x5d * _0x343e1c, 0x88 * _0x343e1c), _0x257296['closePath'](), fill_path(_0x257296, _0x329666[0x4], _0x329666[0x2], 0xa * _0x343e1c), _0x257296['beginPath'](), _0x257296['lineCap'] = 'round', _0x257296['lineJoin'] = 'round', _0x257296['moveTo'](0x15b * _0x343e1c, 0xa2 * _0x343e1c), _0x257296['bezierCurveTo'](0x165 * _0x343e1c, 0xc3 * _0x343e1c, 0x178 * _0x343e1c, 0xd1 * _0x343e1c, 0x183 * _0x343e1c, 0xd9 * _0x343e1c), _0x257296['bezierCurveTo'](0x199 * _0x343e1c, 0xc9 * _0x343e1c, 0x1a4 * _0x343e1c, 0xb5 * _0x343e1c, 0x1a0 * _0x343e1c, 0xa6 * _0x343e1c), _0x257296['bezierCurveTo'](0x19a * _0x343e1c, 0x96 * _0x343e1c, 0x19c * _0x343e1c, 0x95 * _0x343e1c, 0x198 * _0x343e1c, 0x82 * _0x343e1c), _0x257296['closePath'](), fill_path(_0x257296, _0x329666[0x4], _0x329666[0x2], 0xa * _0x343e1c), _0x257296['beginPath'](), _0x257296['lineCap'] = 'round', _0x257296['lineJoin'] = 'round', _0x257296['moveTo'](0x56 * _0x343e1c, 0x86 * _0x343e1c), _0x257296['bezierCurveTo'](0x4f * _0x343e1c, 0x66 * _0x343e1c, 0x5c * _0x343e1c, 0x54 * _0x343e1c, 0x6c * _0x343e1c, 0x5c * _0x343e1c), _0x257296['bezierCurveTo'](0x95 * _0x343e1c, 0x6c * _0x343e1c, 0xb8 * _0x343e1c, 0x6f * _0x343e1c, 0xf2 * _0x343e1c, 0x6f * _0x343e1c), _0x257296['bezierCurveTo'](0x126 * _0x343e1c, 0x6c * _0x343e1c, 0x155 * _0x343e1c, 0x69 * _0x343e1c, 0x182 * _0x343e1c, 0x62 * _0x343e1c), _0x257296['bezierCurveTo'](0x19c * _0x343e1c, 0x5b * _0x343e1c, 0x1a1 * _0x343e1c, 0x56 * _0x343e1c, 0x19f * _0x343e1c, 0x85 * _0x343e1c), _0x257296['bezierCurveTo'](0x19d * _0x343e1c, 0xa0 * _0x343e1c, 0x19d * _0x343e1c, 0xa0 * _0x343e1c, 0x170 * _0x343e1c, 0xae * _0x343e1c), _0x257296['bezierCurveTo'](0x134 * _0x343e1c, 0xb8 * _0x343e1c, 0x123 * _0x343e1c, 0xb9 * _0x343e1c, 0x10e * _0x343e1c, 0xba * _0x343e1c), _0x257296['bezierCurveTo'](0x108 * _0x343e1c, 0xce * _0x343e1c, 0x106 * _0x343e1c, 0xd7 * _0x343e1c, 0xfd * _0x343e1c, 0xd7 * _0x343e1c), _0x257296['bezierCurveTo'](0xef * _0x343e1c, 0xd9 * _0x343e1c, 0xef * _0x343e1c, 0xd3 * _0x343e1c, 0xe7 * _0x343e1c, 0xba * _0x343e1c), _0x257296['bezierCurveTo'](0xb2 * _0x343e1c, 0xb8 * _0x343e1c, 0x9c * _0x343e1c, 0xb3 * _0x343e1c, 0x70 * _0x343e1c, 0xa2 * _0x343e1c), _0x257296['bezierCurveTo'](0x57 * _0x343e1c, 0x97 * _0x343e1c, 0x5a * _0x343e1c, 0x90 * _0x343e1c, 0x57 * _0x343e1c, 0x89 * _0x343e1c), _0x257296['closePath'](), fill_path(_0x257296, _0x329666[0x4], _0x329666[0x2], 0xa * _0x343e1c), _0x257296['beginPath'](), _0x257296['lineCap'] = 'round', _0x257296['lineJoin'] = 'round', _0x257296['moveTo'](0x3f * _0x343e1c, 0x62 * _0x343e1c), _0x257296['bezierCurveTo'](0x54 * _0x343e1c, 0x79 * _0x343e1c, 0x6d * _0x343e1c, 0x66 * _0x343e1c, 0x7c * _0x343e1c, 0x75 * _0x343e1c), _0x257296['bezierCurveTo'](0x8a * _0x343e1c, 0x88 * _0x343e1c, 0x7b * _0x343e1c, 0xa5 * _0x343e1c, 0x5e * _0x343e1c, 0x96 * _0x343e1c), _0x257296['bezierCurveTo'](0x42 * _0x343e1c, 0x83 * _0x343e1c, 0x40 * _0x343e1c, 0x73 * _0x343e1c, 0x3f * _0x343e1c, 0x63 * _0x343e1c), _0x257296['closePath'](), fill_path(_0x257296, _0x329666[0x3], _0x329666[0x2], 0xa * _0x343e1c), _0x257296['beginPath'](), _0x257296['lineCap'] = 'round', _0x257296['lineJoin'] = 'round', _0x257296['moveTo'](0x1c1 * _0x343e1c, 0x61 * _0x343e1c), _0x257296['bezierCurveTo'](0x1be * _0x343e1c, 0x8f * _0x343e1c, 0x19f * _0x343e1c, 0x97 * _0x343e1c, 0x192 * _0x343e1c, 0x9b * _0x343e1c), _0x257296['bezierCurveTo'](0x182 * _0x343e1c, 0x9d * _0x343e1c, 0x175 * _0x343e1c, 0x85 * _0x343e1c, 0x187 * _0x343e1c, 0x74 * _0x343e1c), _0x257296['bezierCurveTo'](0x192 * _0x343e1c, 0x6a * _0x343e1c, 0x1b0 * _0x343e1c, 0x7c * _0x343e1c, 0x1c1 * _0x343e1c, 0x61 * _0x343e1c), _0x257296['closePath'](), fill_path(_0x257296, _0x329666[0x3], _0x329666[0x2], 0xa * _0x343e1c), _0x18b03e;
}

function create_crab_loot(_0x11289e, _0x261d1b, _0x31a91e) {
    var _0x23f54e = document['createElement']('canvas'),
        _0x5b6c87 = _0x23f54e['getContext']('2d');
    return _0x23f54e['width'] = 0x130 * _0x11289e, _0x23f54e['height'] = 0x116 * _0x11289e, _0x5b6c87['translate'](0xa * _0x11289e, 0x19 * _0x11289e), _0x5b6c87['globalAlpha'] = _0x261d1b ? 0.5 : 0x1, _0x5b6c87['beginPath'](), _0x5b6c87['lineCap'] = 'round', _0x5b6c87['lineJoin'] = 'round', _0x5b6c87['moveTo'](0x80 * _0x11289e, 0x89 * _0x11289e), _0x5b6c87['bezierCurveTo'](0x9b * _0x11289e, 0x90 * _0x11289e, 0xdf * _0x11289e, 0x8f * _0x11289e, 0x100 * _0x11289e, 0x7a * _0x11289e), _0x5b6c87['bezierCurveTo'](0xf9 * _0x11289e, 0xb4 * _0x11289e, 0xd2 * _0x11289e, 0xe3 * _0x11289e, 0xa4 * _0x11289e, 0xf2 * _0x11289e), _0x5b6c87['bezierCurveTo'](0x4a * _0x11289e, 0xd5 * _0x11289e, 0x63 * _0x11289e, 0xa6 * _0x11289e, 0x7f * _0x11289e, 0x8a * _0x11289e), _0x5b6c87['closePath'](), fill_path(_0x5b6c87, _0x31a91e[0x0]), _0x5b6c87['beginPath'](), _0x5b6c87['lineCap'] = 'round', _0x5b6c87['lineJoin'] = 'round', _0x5b6c87['moveTo'](0x11c * _0x11289e, 0x34 * _0x11289e), _0x5b6c87['bezierCurveTo'](0x7e * _0x11289e, 0x70 * _0x11289e, 0x59 * _0x11289e, 0xb1 * _0x11289e, 0xaa * _0x11289e, 0xf1 * _0x11289e), _0x5b6c87['bezierCurveTo'](0x67 * _0x11289e, 0x113 * _0x11289e, 0x14 * _0x11289e, 0xef * _0x11289e, 0xc * _0x11289e, 0x9f * _0x11289e), _0x5b6c87['bezierCurveTo'](0x5 * _0x11289e, 0x4c * _0x11289e, 0x4b * _0x11289e, 0x4 * _0x11289e, 0xa5 * _0x11289e, 0xd * _0x11289e), _0x5b6c87['bezierCurveTo'](0xe9 * _0x11289e, 0xf * _0x11289e, 0x104 * _0x11289e, 0x21 * _0x11289e, 0x11c * _0x11289e, 0x34 * _0x11289e), _0x5b6c87['closePath'](), fill_path(_0x5b6c87, _0x31a91e[0x0]), _0x5b6c87['translate'](-0xa * _0x11289e, -0x19 * _0x11289e), _0x5b6c87['globalAlpha'] = 0x1, _0x5b6c87['beginPath'](), _0x5b6c87['lineCap'] = 'round', _0x5b6c87['lineJoin'] = 'round', _0x5b6c87['moveTo'](0x80 * _0x11289e, 0x89 * _0x11289e), _0x5b6c87['bezierCurveTo'](0x9b * _0x11289e, 0x90 * _0x11289e, 0xdf * _0x11289e, 0x8f * _0x11289e, 0x100 * _0x11289e, 0x7a * _0x11289e), _0x5b6c87['bezierCurveTo'](0xf9 * _0x11289e, 0xb4 * _0x11289e, 0xd2 * _0x11289e, 0xe3 * _0x11289e, 0xa4 * _0x11289e, 0xf2 * _0x11289e), _0x5b6c87['bezierCurveTo'](0x4a * _0x11289e, 0xd5 * _0x11289e, 0x63 * _0x11289e, 0xa6 * _0x11289e, 0x7f * _0x11289e, 0x8a * _0x11289e), _0x5b6c87['closePath'](), fill_path(_0x5b6c87, _0x31a91e[0x1], _0x31a91e[0x2], 0xf * _0x11289e), _0x5b6c87['beginPath'](), _0x5b6c87['lineCap'] = 'round', _0x5b6c87['lineJoin'] = 'round', _0x5b6c87['moveTo'](0x11c * _0x11289e, 0x34 * _0x11289e), _0x5b6c87['bezierCurveTo'](0x7e * _0x11289e, 0x70 * _0x11289e, 0x59 * _0x11289e, 0xb1 * _0x11289e, 0xaa * _0x11289e, 0xf1 * _0x11289e), _0x5b6c87['bezierCurveTo'](0x67 * _0x11289e, 0x113 * _0x11289e, 0x14 * _0x11289e, 0xef * _0x11289e, 0xc * _0x11289e, 0x9f * _0x11289e), _0x5b6c87['bezierCurveTo'](0x5 * _0x11289e, 0x4c * _0x11289e, 0x4b * _0x11289e, 0x4 * _0x11289e, 0xa5 * _0x11289e, 0xd * _0x11289e), _0x5b6c87['bezierCurveTo'](0xe9 * _0x11289e, 0xf * _0x11289e, 0x104 * _0x11289e, 0x21 * _0x11289e, 0x11c * _0x11289e, 0x34 * _0x11289e), _0x5b6c87['closePath'](), fill_path(_0x5b6c87, _0x31a91e[0x3], _0x31a91e[0x4], 0xf * _0x11289e), _0x23f54e;
}

function create_bed(_0x2f2e7c, _0x565412, _0x170b63) {
    var _0x5574ee = document['createElement']('canvas'),
        _0x517b12 = _0x5574ee['getContext']('2d');
    return _0x5574ee['width'] = 0xaf * _0x2f2e7c, _0x5574ee['height'] = 0xa9 * _0x2f2e7c, _0x517b12['globalAlpha'] = 0.5, _0x517b12['translate'](0x0, 0x3 * _0x2f2e7c), _0x517b12['beginPath'](), _0x517b12['lineCap'] = 'round', _0x517b12['lineJoin'] = 'round', _0x517b12['moveTo'](0x13 * _0x2f2e7c, 0x8b * _0x2f2e7c), _0x517b12['bezierCurveTo'](0x12 * _0x2f2e7c, 0xa3 * _0x2f2e7c, 0x16 * _0x2f2e7c, 0x9c * _0x2f2e7c, 0x35 * _0x2f2e7c, 0x9d * _0x2f2e7c), _0x517b12['bezierCurveTo'](97.5 * _0x2f2e7c, 0x9d * _0x2f2e7c, 97.5 * _0x2f2e7c, 0x9d * _0x2f2e7c, 0x8e * _0x2f2e7c, 0x9d * _0x2f2e7c), _0x517b12['bezierCurveTo'](0x96 * _0x2f2e7c, 0x9d * _0x2f2e7c, 0x99 * _0x2f2e7c, 0x9c * _0x2f2e7c, 0x9a * _0x2f2e7c, 0x8e * _0x2f2e7c), _0x517b12['closePath'](), fill_path(_0x517b12, _0x170b63[0x0]), _0x517b12['globalAlpha'] = 0x1, _0x517b12['translate'](0x0, -0x3 * _0x2f2e7c), _0x517b12['save'](), _0x517b12['translate'](86.5 * _0x2f2e7c, 81.5 * _0x2f2e7c), round_rect(_0x517b12, -66.5 * _0x2f2e7c, -65.5 * _0x2f2e7c, 0x85 * _0x2f2e7c, 0x83 * _0x2f2e7c, 0xa * _0x2f2e7c), _0x517b12['restore'](), fill_path(_0x517b12, _0x170b63[0x1], _0x170b63[0x2], 0x5 * _0x2f2e7c), _0x517b12['save'](), _0x517b12['translate'](84.5 * _0x2f2e7c, 0x4f * _0x2f2e7c), round_rect(_0x517b12, -50.5 * _0x2f2e7c, -0x31 * _0x2f2e7c, 0x65 * _0x2f2e7c, 0x62 * _0x2f2e7c, 0xa * _0x2f2e7c), _0x517b12['restore'](), fill_path(_0x517b12, _0x170b63[0x3], _0x170b63[0x2], 0x5 * _0x2f2e7c), _0x517b12['beginPath'](), _0x517b12['lineCap'] = 'round', _0x517b12['lineJoin'] = 'round', _0x517b12['moveTo'](0x2a * _0x2f2e7c, 0x36 * _0x2f2e7c), _0x517b12['bezierCurveTo'](0x25 * _0x2f2e7c, 0x30 * _0x2f2e7c, 0x27 * _0x2f2e7c, 0x2c * _0x2f2e7c, 0x26 * _0x2f2e7c, 0x29 * _0x2f2e7c), _0x517b12['bezierCurveTo'](0x2a * _0x2f2e7c, 0x28 * _0x2f2e7c, 0x2d * _0x2f2e7c, 0x28 * _0x2f2e7c, 0x32 * _0x2f2e7c, 0x29 * _0x2f2e7c), _0x517b12['bezierCurveTo'](0x55 * _0x2f2e7c, 0x24 * _0x2f2e7c, 0x62 * _0x2f2e7c, 0x25 * _0x2f2e7c, 0x74 * _0x2f2e7c, 0x2a * _0x2f2e7c), _0x517b12['bezierCurveTo'](0x84 * _0x2f2e7c, 0x27 * _0x2f2e7c, 0x84 * _0x2f2e7c, 0x27 * _0x2f2e7c, 0x85 * _0x2f2e7c, 0x38 * _0x2f2e7c), _0x517b12['bezierCurveTo'](0x88 * _0x2f2e7c, 0x49 * _0x2f2e7c, 0x88 * _0x2f2e7c, 0x54 * _0x2f2e7c, 0x84 * _0x2f2e7c, 0x6a * _0x2f2e7c), _0x517b12['bezierCurveTo'](0x2f * _0x2f2e7c, 0x71 * _0x2f2e7c, 85.5 * _0x2f2e7c, 0x6a * _0x2f2e7c, 0x27 * _0x2f2e7c, 0x6a * _0x2f2e7c), _0x517b12['bezierCurveTo'](0x20 * _0x2f2e7c, 0x51 * _0x2f2e7c, 0x26 * _0x2f2e7c, 0x3c * _0x2f2e7c, 0x2a * _0x2f2e7c, 0x37 * _0x2f2e7c), _0x517b12['closePath'](), fill_path(_0x517b12, _0x170b63[0x4], _0x170b63[0x5], 0x5 * _0x2f2e7c), _0x517b12['save'](), _0x517b12['translate'](0x1c * _0x2f2e7c, 0x18 * _0x2f2e7c), _0x517b12['rotate'](0x0), round_rect(_0x517b12, -0xe * _0x2f2e7c, -0xe * _0x2f2e7c, 0x1c * _0x2f2e7c, 0x1c * _0x2f2e7c, 0x4 * _0x2f2e7c), _0x517b12['restore'](), fill_path(_0x517b12, _0x170b63[0x1], _0x170b63[0x2], 0x5 * _0x2f2e7c), _0x517b12['save'](), _0x517b12['translate'](0x8f * _0x2f2e7c, 0x17 * _0x2f2e7c), _0x517b12['rotate'](0x0), round_rect(_0x517b12, -0xe * _0x2f2e7c, -0xe * _0x2f2e7c, 0x1c * _0x2f2e7c, 0x1c * _0x2f2e7c, 0x4 * _0x2f2e7c), _0x517b12['restore'](), fill_path(_0x517b12, _0x170b63[0x1], _0x170b63[0x2], 0x5 * _0x2f2e7c), _0x517b12['beginPath'](), _0x517b12['lineCap'] = 'round', _0x517b12['lineJoin'] = 'round', _0x517b12['moveTo'](0x37 * _0x2f2e7c, 0x50 * _0x2f2e7c), _0x517b12['bezierCurveTo'](0x49 * _0x2f2e7c, 0x4e * _0x2f2e7c, 0x54 * _0x2f2e7c, 0x4a * _0x2f2e7c, 0x64 * _0x2f2e7c, 0x40 * _0x2f2e7c), _0x517b12['bezierCurveTo'](0x6f * _0x2f2e7c, 0x39 * _0x2f2e7c, 0x7d * _0x2f2e7c, 0x43 * _0x2f2e7c, 0x6c * _0x2f2e7c, 0x54 * _0x2f2e7c), _0x517b12['bezierCurveTo'](0x60 * _0x2f2e7c, 0x5f * _0x2f2e7c, 0x56 * _0x2f2e7c, 0x60 * _0x2f2e7c, 0x46 * _0x2f2e7c, 0x58 * _0x2f2e7c), _0x517b12['bezierCurveTo'](62.5 * _0x2f2e7c, 0x54 * _0x2f2e7c, 62.5 * _0x2f2e7c, 0x54 * _0x2f2e7c, 0x37 * _0x2f2e7c, 0x50 * _0x2f2e7c), _0x517b12['closePath'](), fill_path(_0x517b12, _0x170b63[0x5]), _0x517b12['beginPath'](), _0x517b12['lineCap'] = 'round', _0x517b12['lineJoin'] = 'round', _0x517b12['moveTo'](0x11 * _0x2f2e7c, 0x70 * _0x2f2e7c), _0x517b12['bezierCurveTo'](0xe * _0x2f2e7c, 0x92 * _0x2f2e7c, 0x1b * _0x2f2e7c, 0x98 * _0x2f2e7c, 0x25 * _0x2f2e7c, 0x95 * _0x2f2e7c), _0x517b12['bezierCurveTo'](0x4e * _0x2f2e7c, 0x9b * _0x2f2e7c, 0x80 * _0x2f2e7c, 0x96 * _0x2f2e7c, 0x92 * _0x2f2e7c, 0x96 * _0x2f2e7c), _0x517b12['bezierCurveTo'](0x9e * _0x2f2e7c, 0x90 * _0x2f2e7c, 0x9e * _0x2f2e7c, 0x79 * _0x2f2e7c, 0x99 * _0x2f2e7c, 0x72 * _0x2f2e7c), _0x517b12['closePath'](), fill_path(_0x517b12, _0x170b63[0x8], _0x170b63[0x9], 0x5 * _0x2f2e7c), _0x517b12['beginPath'](), _0x517b12['lineCap'] = 'round', _0x517b12['lineJoin'] = 'round', _0x517b12['moveTo'](0x7f * _0x2f2e7c, 0x6f * _0x2f2e7c), _0x517b12['bezierCurveTo'](0x85 * _0x2f2e7c, 0x88 * _0x2f2e7c, 0x73 * _0x2f2e7c, 0x95 * _0x2f2e7c, 0x58 * _0x2f2e7c, 0x96 * _0x2f2e7c), _0x517b12['bezierCurveTo'](119.5 * _0x2f2e7c, 0x97 * _0x2f2e7c, 119.5 * _0x2f2e7c, 0x97 * _0x2f2e7c, 0x97 * _0x2f2e7c, 0x98 * _0x2f2e7c), _0x517b12['bezierCurveTo'](0x9f * _0x2f2e7c, 0x88 * _0x2f2e7c, 0x9b * _0x2f2e7c, 0x7e * _0x2f2e7c, 0x9a * _0x2f2e7c, 0x71 * _0x2f2e7c), _0x517b12['closePath'](), fill_path(_0x517b12, _0x170b63[0x9]), _0x517b12['globalAlpha'] = 0.5, _0x517b12['translate'](0x0, 0x3 * _0x2f2e7c), _0x517b12['beginPath'](), _0x517b12['lineCap'] = 'round', _0x517b12['lineJoin'] = 'round', _0x517b12['moveTo'](0xf * _0x2f2e7c, 0x75 * _0x2f2e7c), _0x517b12['bezierCurveTo'](0x22 * _0x2f2e7c, 0x6d * _0x2f2e7c, 0x3d * _0x2f2e7c, 0x6a * _0x2f2e7c, 0x5e * _0x2f2e7c, 0x6d * _0x2f2e7c), _0x517b12['bezierCurveTo'](0x7e * _0x2f2e7c, 0x6e * _0x2f2e7c, 0x8e * _0x2f2e7c, 0x71 * _0x2f2e7c, 0x9a * _0x2f2e7c, 0x77 * _0x2f2e7c), _0x517b12['bezierCurveTo'](0x9a * _0x2f2e7c, 0x7b * _0x2f2e7c, 0x9a * _0x2f2e7c, 0x7b * _0x2f2e7c, 0x9a * _0x2f2e7c, 0x7f * _0x2f2e7c), _0x517b12['bezierCurveTo'](0x7f * _0x2f2e7c, 0x76 * _0x2f2e7c, 0xf * _0x2f2e7c, 0x7a * _0x2f2e7c, 0x12 * _0x2f2e7c, 0x81 * _0x2f2e7c), _0x517b12['closePath'](), fill_path(_0x517b12, _0x170b63[0x0]), _0x517b12['globalAlpha'] = 0x1, _0x517b12['translate'](0x0, -0x3 * _0x2f2e7c), _0x517b12['beginPath'](), _0x517b12['lineCap'] = 'round', _0x517b12['lineJoin'] = 'round', _0x517b12['moveTo'](0xe * _0x2f2e7c, 0x7f * _0x2f2e7c), _0x517b12['bezierCurveTo'](0xd * _0x2f2e7c, 0x75 * _0x2f2e7c, 0xc * _0x2f2e7c, 0x6d * _0x2f2e7c, 0xf * _0x2f2e7c, 0x67 * _0x2f2e7c), _0x517b12['bezierCurveTo'](0x10 * _0x2f2e7c, 0x5f * _0x2f2e7c, 0x15 * _0x2f2e7c, 0x5c * _0x2f2e7c, 0x3c * _0x2f2e7c, 0x5d * _0x2f2e7c), _0x517b12['bezierCurveTo'](0x5b * _0x2f2e7c, 0x5d * _0x2f2e7c, 0x76 * _0x2f2e7c, 0x5d * _0x2f2e7c, 0x8f * _0x2f2e7c, 0x60 * _0x2f2e7c), _0x517b12['bezierCurveTo'](0x97 * _0x2f2e7c, 0x60 * _0x2f2e7c, 0x9b * _0x2f2e7c, 0x63 * _0x2f2e7c, 0x9c * _0x2f2e7c, 0x70 * _0x2f2e7c), _0x517b12['bezierCurveTo'](0x9d * _0x2f2e7c, 0x7c * _0x2f2e7c, 0x9d * _0x2f2e7c, 0x7f * _0x2f2e7c, 0x9c * _0x2f2e7c, 0x80 * _0x2f2e7c), _0x517b12['bezierCurveTo'](0x8a * _0x2f2e7c, 0x70 * _0x2f2e7c, 0x64 * _0x2f2e7c, 0x76 * _0x2f2e7c, 0x54 * _0x2f2e7c, 0x76 * _0x2f2e7c), _0x517b12['bezierCurveTo'](0x1c * _0x2f2e7c, 0x76 * _0x2f2e7c, 0x14 * _0x2f2e7c, 0x78 * _0x2f2e7c, 0x10 * _0x2f2e7c, 0x7f * _0x2f2e7c), _0x517b12['closePath'](), fill_path(_0x517b12, _0x170b63[0x4], _0x170b63[0x5], 0x5 * _0x2f2e7c), _0x517b12['save'](), _0x517b12['translate'](27.5 * _0x2f2e7c, 138.5 * _0x2f2e7c), round_rect(_0x517b12, -13.5 * _0x2f2e7c, -14.5 * _0x2f2e7c, 0x1b * _0x2f2e7c, 0x1d * _0x2f2e7c, 0x4 * _0x2f2e7c), _0x517b12['restore'](), fill_path(_0x517b12, _0x170b63[0x1], _0x170b63[0x2], 0x5 * _0x2f2e7c), _0x517b12['save'](), _0x517b12['translate'](143.5 * _0x2f2e7c, 0x89 * _0x2f2e7c), round_rect(_0x517b12, -13.5 * _0x2f2e7c, -0xe * _0x2f2e7c, 0x1b * _0x2f2e7c, 0x1c * _0x2f2e7c, 0x4 * _0x2f2e7c), _0x517b12['restore'](), fill_path(_0x517b12, _0x170b63[0x1], _0x170b63[0x2], 0x5 * _0x2f2e7c), _0x5574ee;
}

function create_bed_top(_0x11a0dd, _0x59a993, _0x1c5229) {
    var _0x28f633 = document['createElement']('canvas'),
        _0x1819e9 = _0x28f633['getContext']('2d');
    return _0x28f633['width'] = 0xaf * _0x11a0dd, _0x28f633['height'] = 0xa9 * _0x11a0dd, _0x1819e9['beginPath'](), _0x1819e9['lineCap'] = 'round', _0x1819e9['lineJoin'] = 'round', _0x1819e9['moveTo'](0x11 * _0x11a0dd, 0x70 * _0x11a0dd), _0x1819e9['bezierCurveTo'](0xe * _0x11a0dd, 0x92 * _0x11a0dd, 0x1b * _0x11a0dd, 0x98 * _0x11a0dd, 0x25 * _0x11a0dd, 0x95 * _0x11a0dd), _0x1819e9['bezierCurveTo'](0x4e * _0x11a0dd, 0x9b * _0x11a0dd, 0x80 * _0x11a0dd, 0x96 * _0x11a0dd, 0x92 * _0x11a0dd, 0x96 * _0x11a0dd), _0x1819e9['bezierCurveTo'](0x9e * _0x11a0dd, 0x90 * _0x11a0dd, 0x9e * _0x11a0dd, 0x79 * _0x11a0dd, 0x99 * _0x11a0dd, 0x72 * _0x11a0dd), _0x1819e9['closePath'](), fill_path(_0x1819e9, _0x1c5229[0x8], _0x1c5229[0x9], 0x5 * _0x11a0dd), _0x1819e9['beginPath'](), _0x1819e9['lineCap'] = 'round', _0x1819e9['lineJoin'] = 'round', _0x1819e9['moveTo'](0x7f * _0x11a0dd, 0x6f * _0x11a0dd), _0x1819e9['bezierCurveTo'](0x85 * _0x11a0dd, 0x88 * _0x11a0dd, 0x73 * _0x11a0dd, 0x95 * _0x11a0dd, 0x58 * _0x11a0dd, 0x96 * _0x11a0dd), _0x1819e9['bezierCurveTo'](119.5 * _0x11a0dd, 0x97 * _0x11a0dd, 119.5 * _0x11a0dd, 0x97 * _0x11a0dd, 0x97 * _0x11a0dd, 0x98 * _0x11a0dd), _0x1819e9['bezierCurveTo'](0x9f * _0x11a0dd, 0x88 * _0x11a0dd, 0x9b * _0x11a0dd, 0x7e * _0x11a0dd, 0x9a * _0x11a0dd, 0x71 * _0x11a0dd), _0x1819e9['closePath'](), fill_path(_0x1819e9, _0x1c5229[0x9]), _0x1819e9['globalAlpha'] = 0.5, _0x1819e9['translate'](0x0, 0x3 * _0x11a0dd), _0x1819e9['beginPath'](), _0x1819e9['lineCap'] = 'round', _0x1819e9['lineJoin'] = 'round', _0x1819e9['moveTo'](0xf * _0x11a0dd, 0x75 * _0x11a0dd), _0x1819e9['bezierCurveTo'](0x22 * _0x11a0dd, 0x6d * _0x11a0dd, 0x3d * _0x11a0dd, 0x6a * _0x11a0dd, 0x5e * _0x11a0dd, 0x6d * _0x11a0dd), _0x1819e9['bezierCurveTo'](0x7e * _0x11a0dd, 0x6e * _0x11a0dd, 0x8e * _0x11a0dd, 0x71 * _0x11a0dd, 0x9a * _0x11a0dd, 0x77 * _0x11a0dd), _0x1819e9['bezierCurveTo'](0x9a * _0x11a0dd, 0x7b * _0x11a0dd, 0x9a * _0x11a0dd, 0x7b * _0x11a0dd, 0x9a * _0x11a0dd, 0x7f * _0x11a0dd), _0x1819e9['bezierCurveTo'](0x7f * _0x11a0dd, 0x76 * _0x11a0dd, 0xf * _0x11a0dd, 0x7a * _0x11a0dd, 0x12 * _0x11a0dd, 0x81 * _0x11a0dd), _0x1819e9['closePath'](), fill_path(_0x1819e9, _0x1c5229[0x0]), _0x1819e9['globalAlpha'] = 0x1, _0x1819e9['translate'](0x0, -0x3 * _0x11a0dd), _0x1819e9['beginPath'](), _0x1819e9['lineCap'] = 'round', _0x1819e9['lineJoin'] = 'round', _0x1819e9['moveTo'](0xe * _0x11a0dd, 0x7f * _0x11a0dd), _0x1819e9['bezierCurveTo'](0xd * _0x11a0dd, 0x75 * _0x11a0dd, 0xc * _0x11a0dd, 0x6d * _0x11a0dd, 0xf * _0x11a0dd, 0x67 * _0x11a0dd), _0x1819e9['bezierCurveTo'](0x10 * _0x11a0dd, 0x5f * _0x11a0dd, 0x15 * _0x11a0dd, 0x5c * _0x11a0dd, 0x3c * _0x11a0dd, 0x5d * _0x11a0dd), _0x1819e9['bezierCurveTo'](0x5b * _0x11a0dd, 0x5d * _0x11a0dd, 0x76 * _0x11a0dd, 0x5d * _0x11a0dd, 0x8f * _0x11a0dd, 0x60 * _0x11a0dd), _0x1819e9['bezierCurveTo'](0x97 * _0x11a0dd, 0x60 * _0x11a0dd, 0x9b * _0x11a0dd, 0x63 * _0x11a0dd, 0x9c * _0x11a0dd, 0x70 * _0x11a0dd), _0x1819e9['bezierCurveTo'](0x9d * _0x11a0dd, 0x7c * _0x11a0dd, 0x9d * _0x11a0dd, 0x7f * _0x11a0dd, 0x9c * _0x11a0dd, 0x80 * _0x11a0dd), _0x1819e9['bezierCurveTo'](0x8a * _0x11a0dd, 0x70 * _0x11a0dd, 0x64 * _0x11a0dd, 0x76 * _0x11a0dd, 0x54 * _0x11a0dd, 0x76 * _0x11a0dd), _0x1819e9['bezierCurveTo'](0x1c * _0x11a0dd, 0x76 * _0x11a0dd, 0x14 * _0x11a0dd, 0x78 * _0x11a0dd, 0x10 * _0x11a0dd, 0x7f * _0x11a0dd), _0x1819e9['closePath'](), fill_path(_0x1819e9, _0x1c5229[0x4], _0x1c5229[0x5], 0x5 * _0x11a0dd), _0x1819e9['save'](), _0x1819e9['translate'](27.5 * _0x11a0dd, 138.5 * _0x11a0dd), round_rect(_0x1819e9, -13.5 * _0x11a0dd, -14.5 * _0x11a0dd, 0x1b * _0x11a0dd, 0x1d * _0x11a0dd, 0x4 * _0x11a0dd), _0x1819e9['restore'](), fill_path(_0x1819e9, _0x1c5229[0x1], _0x1c5229[0x2], 0x5 * _0x11a0dd), _0x1819e9['save'](), _0x1819e9['translate'](143.5 * _0x11a0dd, 0x89 * _0x11a0dd), round_rect(_0x1819e9, -13.5 * _0x11a0dd, -0xe * _0x11a0dd, 0x1b * _0x11a0dd, 0x1c * _0x11a0dd, 0x4 * _0x11a0dd), _0x1819e9['restore'](), fill_path(_0x1819e9, _0x1c5229[0x1], _0x1c5229[0x2], 0x5 * _0x11a0dd), _0x28f633;
}

function create_crab_spear(_0xb3f2b9, _0x4615a6, _0x57a7ac) {
    var _0x3b2806 = document['createElement']('canvas'),
        _0x508aa9 = _0x3b2806['getContext']('2d');
    return _0x3b2806['width'] = 0x73 * _0xb3f2b9, _0x3b2806['height'] = 0x249 * _0xb3f2b9, _0x508aa9['scale'](-0x1, 0x1), _0x508aa9['translate'](-0x6e * _0xb3f2b9, 0x0), _0x508aa9['translate'](0xa * _0xb3f2b9, 0xa * _0xb3f2b9), _0x508aa9['globalAlpha'] = _0x4615a6 ? 0.5 : 0x1, _0x508aa9['save'](), _0x508aa9['translate'](51.5 * _0xb3f2b9, 0x156 * _0xb3f2b9), round_rect(_0x508aa9, -14.5 * _0xb3f2b9, -0xe1 * _0xb3f2b9, 0x1d * _0xb3f2b9, 0x1c2 * _0xb3f2b9, 0x14 * _0xb3f2b9), _0x508aa9['restore'](), fill_path(_0x508aa9, _0x57a7ac[0x0]), _0x508aa9['beginPath'](), _0x508aa9['lineCap'] = 'round', _0x508aa9['lineJoin'] = 'round', _0x508aa9['moveTo'](0x36 * _0xb3f2b9, 0x53 * _0xb3f2b9), _0x508aa9['bezierCurveTo'](0x46 * _0xb3f2b9, 0x45 * _0xb3f2b9, 0x4e * _0xb3f2b9, 0x3e * _0xb3f2b9, 0x52 * _0xb3f2b9, 0x28 * _0xb3f2b9), _0x508aa9['bezierCurveTo'](0x5d * _0xb3f2b9, 0x30 * _0xb3f2b9, 0x67 * _0xb3f2b9, 0x40 * _0xb3f2b9, 0x5f * _0xb3f2b9, 0x66 * _0xb3f2b9), _0x508aa9['bezierCurveTo'](0x3c * _0xb3f2b9, 0x72 * _0xb3f2b9, 0x35 * _0xb3f2b9, 0x67 * _0xb3f2b9, 0x36 * _0xb3f2b9, 0x55 * _0xb3f2b9), _0x508aa9['closePath'](), fill_path(_0x508aa9, _0x57a7ac[0x0]), _0x508aa9['beginPath'](), _0x508aa9['lineCap'] = 'round', _0x508aa9['lineJoin'] = 'round', _0x508aa9['moveTo'](0x5f * _0xb3f2b9, 0x61 * _0xb3f2b9), _0x508aa9['bezierCurveTo'](0x38 * _0xb3f2b9, 0x66 * _0xb3f2b9, 0x2b * _0xb3f2b9, 0x4d * _0xb3f2b9, 0x47 * _0xb3f2b9, 0x6 * _0xb3f2b9), _0x508aa9['bezierCurveTo'](0x22 * _0xb3f2b9, 0xa * _0xb3f2b9, 0x6 * _0xb3f2b9, 0x2b * _0xb3f2b9, 0x5 * _0xb3f2b9, 0x4c * _0xb3f2b9), _0x508aa9['bezierCurveTo'](0x4 * _0xb3f2b9, 0x62 * _0xb3f2b9, 0xf * _0xb3f2b9, 0x82 * _0xb3f2b9, 0x40 * _0xb3f2b9, 0x82 * _0xb3f2b9), _0x508aa9['bezierCurveTo'](0x4c * _0xb3f2b9, 0x81 * _0xb3f2b9, 0x5f * _0xb3f2b9, 0x71 * _0xb3f2b9, 0x61 * _0xb3f2b9, 0x61 * _0xb3f2b9), _0x508aa9['closePath'](), fill_path(_0x508aa9, _0x57a7ac[0x0]), _0x508aa9['beginPath'](), _0x508aa9['lineCap'] = 'round', _0x508aa9['lineJoin'] = 'round', _0x508aa9['moveTo'](0x37 * _0xb3f2b9, 0xb0 * _0xb3f2b9), _0x508aa9['bezierCurveTo'](0x4a * _0xb3f2b9, 0xaf * _0xb3f2b9, 0x52 * _0xb3f2b9, 0xa9 * _0xb3f2b9, 0x60 * _0xb3f2b9, 0x9b * _0xb3f2b9), _0x508aa9['bezierCurveTo'](0x67 * _0xb3f2b9, 0xb7 * _0xb3f2b9, 0x5f * _0xb3f2b9, 0xd6 * _0xb3f2b9, 0x36 * _0xb3f2b9, 0xdb * _0xb3f2b9), _0x508aa9['closePath'](), fill_path(_0x508aa9, _0x57a7ac[0x0]), _0x508aa9['beginPath'](), _0x508aa9['lineCap'] = 'round', _0x508aa9['lineJoin'] = 'round', _0x508aa9['moveTo'](0x32 * _0xb3f2b9, 0xb0 * _0xb3f2b9), _0x508aa9['bezierCurveTo'](0x19 * _0xb3f2b9, 0xb1 * _0xb3f2b9, 0x10 * _0xb3f2b9, 0xa4 * _0xb3f2b9, 0x7 * _0xb3f2b9, 0x9c * _0xb3f2b9), _0x508aa9['bezierCurveTo'](0x0 * _0xb3f2b9, 0xba * _0xb3f2b9, 0xa * _0xb3f2b9, 0xc9 * _0xb3f2b9, 0x2b * _0xb3f2b9, 0xdc * _0xb3f2b9), _0x508aa9['closePath'](), fill_path(_0x508aa9, _0x57a7ac[0x0]), _0x508aa9['beginPath'](), _0x508aa9['lineCap'] = 'round', _0x508aa9['lineJoin'] = 'round', _0x508aa9['moveTo'](0x23 * _0xb3f2b9, 0x193 * _0xb3f2b9), _0x508aa9['bezierCurveTo'](0x2f * _0xb3f2b9, 0x19c * _0xb3f2b9, 0x3a * _0xb3f2b9, 0x19c * _0xb3f2b9, 0x43 * _0xb3f2b9, 0x193 * _0xb3f2b9), _0x508aa9['bezierCurveTo'](66.5 * _0xb3f2b9, 0x1b2 * _0xb3f2b9, 66.5 * _0xb3f2b9, 0x1b2 * _0xb3f2b9, 0x42 * _0xb3f2b9, 0x1d1 * _0xb3f2b9), _0x508aa9['bezierCurveTo'](0x38 * _0xb3f2b9, 0x1e0 * _0xb3f2b9, 0x28 * _0xb3f2b9, 0x1d8 * _0xb3f2b9, 0x24 * _0xb3f2b9, 0x1d1 * _0xb3f2b9), _0x508aa9['closePath'](), fill_path(_0x508aa9, _0x57a7ac[0x0]), _0x508aa9['beginPath'](), _0x508aa9['lineCap'] = 'round', _0x508aa9['lineJoin'] = 'round', _0x508aa9['moveTo'](0x3b * _0xb3f2b9, 0x43 * _0xb3f2b9), _0x508aa9['bezierCurveTo'](0x2f * _0xb3f2b9, 0x61 * _0xb3f2b9, 0x12 * _0xb3f2b9, 0x75 * _0xb3f2b9, 0xb * _0xb3f2b9, 0x6e * _0xb3f2b9), _0x508aa9['bezierCurveTo'](0xb * _0xb3f2b9, 0x73 * _0xb3f2b9, 0xf * _0xb3f2b9, 0x7a * _0xb3f2b9, 0x17 * _0xb3f2b9, 0x7c * _0xb3f2b9), _0x508aa9['bezierCurveTo'](0x2e * _0xb3f2b9, 0x76 * _0xb3f2b9, 0x34 * _0xb3f2b9, 0x71 * _0xb3f2b9, 0x3e * _0xb3f2b9, 0x56 * _0xb3f2b9), _0x508aa9['closePath'](), fill_path(_0x508aa9, _0x57a7ac[0x0]), _0x508aa9['beginPath'](), _0x508aa9['lineCap'] = 'round', _0x508aa9['lineJoin'] = 'round', _0x508aa9['moveTo'](0x1e * _0xb3f2b9, 0x7d * _0xb3f2b9), _0x508aa9['bezierCurveTo'](0x2f * _0xb3f2b9, 0x88 * _0xb3f2b9, 0x39 * _0xb3f2b9, 0x86 * _0xb3f2b9, 0x4d * _0xb3f2b9, 0x7f * _0xb3f2b9), _0x508aa9['bezierCurveTo'](0x47 * _0xb3f2b9, 0x9e * _0xb3f2b9, 0x47 * _0xb3f2b9, 0x9f * _0xb3f2b9, 0x42 * _0xb3f2b9, 0x9f * _0xb3f2b9), _0x508aa9['bezierCurveTo'](50.5 * _0xb3f2b9, 156.5 * _0xb3f2b9, 50.5 * _0xb3f2b9, 156.5 * _0xb3f2b9, 0x23 * _0xb3f2b9, 0x9a * _0xb3f2b9), _0x508aa9['bezierCurveTo'](0x1f * _0xb3f2b9, 0x91 * _0xb3f2b9, 0x1f * _0xb3f2b9, 0x88 * _0xb3f2b9, 0x1f * _0xb3f2b9, 0x7d * _0xb3f2b9), _0x508aa9['closePath'](), fill_path(_0x508aa9, _0x57a7ac[0x0]), _0x508aa9['beginPath'](), _0x508aa9['lineCap'] = 'round', _0x508aa9['lineJoin'] = 'round', _0x508aa9['moveTo'](0x23 * _0xb3f2b9, 0xab * _0xb3f2b9), _0x508aa9['bezierCurveTo'](0x20 * _0xb3f2b9, 0xdd * _0xb3f2b9, 0x2b * _0xb3f2b9, 0xe9 * _0xb3f2b9, 0x46 * _0xb3f2b9, 0xf7 * _0xb3f2b9), _0x508aa9['bezierCurveTo'](0x4b * _0xb3f2b9, 0xea * _0xb3f2b9, 0x4b * _0xb3f2b9, 0xe6 * _0xb3f2b9, 0x48 * _0xb3f2b9, 0xdd * _0xb3f2b9), _0x508aa9['bezierCurveTo'](0x30 * _0xb3f2b9, 0xce * _0xb3f2b9, 0x36 * _0xb3f2b9, 0xbc * _0xb3f2b9, 0x32 * _0xb3f2b9, 0xb0 * _0xb3f2b9), _0x508aa9['closePath'](), fill_path(_0x508aa9, _0x57a7ac[0x0]), _0x508aa9['beginPath'](), _0x508aa9['lineCap'] = 'round', _0x508aa9['lineJoin'] = 'round', _0x508aa9['moveTo'](0x3c * _0xb3f2b9, 0x44 * _0xb3f2b9), _0x508aa9['bezierCurveTo'](0x3f * _0xb3f2b9, 0x45 * _0xb3f2b9, 0x41 * _0xb3f2b9, 0x47 * _0xb3f2b9, 0x43 * _0xb3f2b9, 0x4d * _0xb3f2b9), _0x508aa9['bezierCurveTo'](0x3d * _0xb3f2b9, 0x7b * _0xb3f2b9, 0x34 * _0xb3f2b9, 0x89 * _0xb3f2b9, 0x2a * _0xb3f2b9, 0x96 * _0xb3f2b9), _0x508aa9['bezierCurveTo'](0x26 * _0xb3f2b9, 0x97 * _0xb3f2b9, 0x26 * _0xb3f2b9, 0x97 * _0xb3f2b9, 0x22 * _0xb3f2b9, 0x98 * _0xb3f2b9), _0x508aa9['bezierCurveTo'](0x21 * _0xb3f2b9, 146.5 * _0xb3f2b9, 0x21 * _0xb3f2b9, 146.5 * _0xb3f2b9, 0x20 * _0xb3f2b9, 0x8d * _0xb3f2b9), _0x508aa9['bezierCurveTo'](0x31 * _0xb3f2b9, 0x76 * _0xb3f2b9, 0x3f * _0xb3f2b9, 0x57 * _0xb3f2b9, 0x3b * _0xb3f2b9, 0x44 * _0xb3f2b9), _0x508aa9['closePath'](), fill_path(_0x508aa9, _0x57a7ac[0x0]), _0x508aa9['beginPath'](), _0x508aa9['lineCap'] = 'round', _0x508aa9['lineJoin'] = 'round', _0x508aa9['moveTo'](0x47 * _0xb3f2b9, 0xac * _0xb3f2b9), _0x508aa9['bezierCurveTo'](0x38 * _0xb3f2b9, 0xde * _0xb3f2b9, 0x31 * _0xb3f2b9, 0xea * _0xb3f2b9, 0x23 * _0xb3f2b9, 0xf8 * _0xb3f2b9), _0x508aa9['bezierCurveTo'](0x1e * _0xb3f2b9, 0xec * _0xb3f2b9, 0x1e * _0xb3f2b9, 0xe6 * _0xb3f2b9, 0x1f * _0xb3f2b9, 0xd9 * _0xb3f2b9), _0x508aa9['bezierCurveTo'](0x2c * _0xb3f2b9, 0xca * _0xb3f2b9, 0x31 * _0xb3f2b9, 0xbf * _0xb3f2b9, 0x34 * _0xb3f2b9, 0xac * _0xb3f2b9), _0x508aa9['closePath'](), fill_path(_0x508aa9, _0x57a7ac[0x0]), _0x508aa9['beginPath'](), _0x508aa9['lineCap'] = 'round', _0x508aa9['lineJoin'] = 'round', _0x508aa9['moveTo'](0x23 * _0xb3f2b9, 0x97 * _0xb3f2b9), _0x508aa9['bezierCurveTo'](0x1b * _0xb3f2b9, 0xa5 * _0xb3f2b9, 0x1f * _0xb3f2b9, 0xad * _0xb3f2b9, 0x24 * _0xb3f2b9, 0xb2 * _0xb3f2b9), _0x508aa9['bezierCurveTo'](0x38 * _0xb3f2b9, 0xb9 * _0xb3f2b9, 0x49 * _0xb3f2b9, 0xb8 * _0xb3f2b9, 0x47 * _0xb3f2b9, 0xaa * _0xb3f2b9), _0x508aa9['bezierCurveTo'](0x48 * _0xb3f2b9, 0x9a * _0xb3f2b9, 0x47 * _0xb3f2b9, 0x9a * _0xb3f2b9, 0x3f * _0xb3f2b9, 0x9b * _0xb3f2b9), _0x508aa9['closePath'](), fill_path(_0x508aa9, _0x57a7ac[0x0]), _0x508aa9['translate'](-0xa * _0xb3f2b9, -0xa * _0xb3f2b9), _0x508aa9['globalAlpha'] = 0x1, _0x508aa9['save'](), _0x508aa9['translate'](51.5 * _0xb3f2b9, 0x156 * _0xb3f2b9), round_rect(_0x508aa9, -14.5 * _0xb3f2b9, -0xe1 * _0xb3f2b9, 0x1d * _0xb3f2b9, 0x1c2 * _0xb3f2b9, 0x14 * _0xb3f2b9), _0x508aa9['restore'](), fill_path(_0x508aa9, _0x57a7ac[0x1], _0x57a7ac[0x2], 0x5 * _0xb3f2b9), _0x508aa9['beginPath'](), _0x508aa9['lineCap'] = 'round', _0x508aa9['lineJoin'] = 'round', _0x508aa9['moveTo'](0x36 * _0xb3f2b9, 0x53 * _0xb3f2b9), _0x508aa9['bezierCurveTo'](0x46 * _0xb3f2b9, 0x45 * _0xb3f2b9, 0x4e * _0xb3f2b9, 0x3e * _0xb3f2b9, 0x52 * _0xb3f2b9, 0x28 * _0xb3f2b9), _0x508aa9['bezierCurveTo'](0x5d * _0xb3f2b9, 0x30 * _0xb3f2b9, 0x67 * _0xb3f2b9, 0x40 * _0xb3f2b9, 0x5f * _0xb3f2b9, 0x66 * _0xb3f2b9), _0x508aa9['bezierCurveTo'](0x3c * _0xb3f2b9, 0x72 * _0xb3f2b9, 0x35 * _0xb3f2b9, 0x67 * _0xb3f2b9, 0x36 * _0xb3f2b9, 0x55 * _0xb3f2b9), _0x508aa9['closePath'](), fill_path(_0x508aa9, _0x57a7ac[0x3], _0x57a7ac[0x4], 0x6 * _0xb3f2b9), _0x508aa9['beginPath'](), _0x508aa9['lineCap'] = 'round', _0x508aa9['lineJoin'] = 'round', _0x508aa9['moveTo'](0x5f * _0xb3f2b9, 0x61 * _0xb3f2b9), _0x508aa9['bezierCurveTo'](0x38 * _0xb3f2b9, 0x66 * _0xb3f2b9, 0x2b * _0xb3f2b9, 0x4d * _0xb3f2b9, 0x47 * _0xb3f2b9, 0x6 * _0xb3f2b9), _0x508aa9['bezierCurveTo'](0x22 * _0xb3f2b9, 0xa * _0xb3f2b9, 0x6 * _0xb3f2b9, 0x2b * _0xb3f2b9, 0x5 * _0xb3f2b9, 0x4c * _0xb3f2b9), _0x508aa9['bezierCurveTo'](0x4 * _0xb3f2b9, 0x62 * _0xb3f2b9, 0xf * _0xb3f2b9, 0x82 * _0xb3f2b9, 0x40 * _0xb3f2b9, 0x82 * _0xb3f2b9), _0x508aa9['bezierCurveTo'](0x4c * _0xb3f2b9, 0x81 * _0xb3f2b9, 0x5f * _0xb3f2b9, 0x71 * _0xb3f2b9, 0x61 * _0xb3f2b9, 0x61 * _0xb3f2b9), _0x508aa9['closePath'](), fill_path(_0x508aa9, _0x57a7ac[0x5], _0x57a7ac[0x6], 0x6 * _0xb3f2b9), _0x508aa9['beginPath'](), _0x508aa9['lineCap'] = 'round', _0x508aa9['lineJoin'] = 'round', _0x508aa9['moveTo'](0x23 * _0xb3f2b9, 0x193 * _0xb3f2b9), _0x508aa9['bezierCurveTo'](0x2f * _0xb3f2b9, 0x19c * _0xb3f2b9, 0x3a * _0xb3f2b9, 0x19c * _0xb3f2b9, 0x43 * _0xb3f2b9, 0x193 * _0xb3f2b9), _0x508aa9['bezierCurveTo'](66.5 * _0xb3f2b9, 0x1b2 * _0xb3f2b9, 66.5 * _0xb3f2b9, 0x1b2 * _0xb3f2b9, 0x42 * _0xb3f2b9, 0x1d1 * _0xb3f2b9), _0x508aa9['bezierCurveTo'](0x38 * _0xb3f2b9, 0x1e0 * _0xb3f2b9, 0x28 * _0xb3f2b9, 0x1d8 * _0xb3f2b9, 0x24 * _0xb3f2b9, 0x1d1 * _0xb3f2b9), _0x508aa9['closePath'](), fill_path(_0x508aa9, _0x57a7ac[0x7], _0x57a7ac[0x8], 0x6 * _0xb3f2b9), _0x508aa9['beginPath'](), _0x508aa9['lineCap'] = 'round', _0x508aa9['lineJoin'] = 'round', _0x508aa9['moveTo'](0x25 * _0xb3f2b9, 0x1ab * _0xb3f2b9), _0x508aa9['bezierCurveTo'](0x2f * _0xb3f2b9, 0x1b3 * _0xb3f2b9, 0x37 * _0xb3f2b9, 0x1b3 * _0xb3f2b9, 0x43 * _0xb3f2b9, 0x1ab * _0xb3f2b9), fill_path(_0x508aa9, undefined, _0x57a7ac[0x8], 0x6 * _0xb3f2b9), _0x508aa9['beginPath'](), _0x508aa9['lineCap'] = 'round', _0x508aa9['lineJoin'] = 'round', _0x508aa9['moveTo'](0x24 * _0xb3f2b9, 0x1c0 * _0xb3f2b9), _0x508aa9['bezierCurveTo'](0x2e * _0xb3f2b9, 0x1c6 * _0xb3f2b9, 0x36 * _0xb3f2b9, 0x1c9 * _0xb3f2b9, 0x41 * _0xb3f2b9, 0x1c1 * _0xb3f2b9), fill_path(_0x508aa9, undefined, _0x57a7ac[0x8], 0x6 * _0xb3f2b9), _0x508aa9['beginPath'](), _0x508aa9['lineCap'] = 'round', _0x508aa9['lineJoin'] = 'round', _0x508aa9['moveTo'](0x37 * _0xb3f2b9, 0xb0 * _0xb3f2b9), _0x508aa9['bezierCurveTo'](0x4a * _0xb3f2b9, 0xaf * _0xb3f2b9, 0x52 * _0xb3f2b9, 0xa9 * _0xb3f2b9, 0x60 * _0xb3f2b9, 0x9b * _0xb3f2b9), _0x508aa9['bezierCurveTo'](0x67 * _0xb3f2b9, 0xb7 * _0xb3f2b9, 0x5f * _0xb3f2b9, 0xd6 * _0xb3f2b9, 0x36 * _0xb3f2b9, 0xdb * _0xb3f2b9), _0x508aa9['closePath'](), fill_path(_0x508aa9, _0x57a7ac[0x3], _0x57a7ac[0x4], 0x6 * _0xb3f2b9), _0x508aa9['beginPath'](), _0x508aa9['lineCap'] = 'round', _0x508aa9['lineJoin'] = 'round', _0x508aa9['moveTo'](0x32 * _0xb3f2b9, 0xb0 * _0xb3f2b9), _0x508aa9['bezierCurveTo'](0x19 * _0xb3f2b9, 0xb1 * _0xb3f2b9, 0x10 * _0xb3f2b9, 0xa4 * _0xb3f2b9, 0x7 * _0xb3f2b9, 0x9c * _0xb3f2b9), _0x508aa9['bezierCurveTo'](0x0 * _0xb3f2b9, 0xba * _0xb3f2b9, 0xa * _0xb3f2b9, 0xc9 * _0xb3f2b9, 0x2b * _0xb3f2b9, 0xdc * _0xb3f2b9), _0x508aa9['closePath'](), fill_path(_0x508aa9, _0x57a7ac[0x3], _0x57a7ac[0x4], 0x6 * _0xb3f2b9), _0x508aa9['beginPath'](), _0x508aa9['lineCap'] = 'round', _0x508aa9['lineJoin'] = 'round', _0x508aa9['moveTo'](0x3b * _0xb3f2b9, 0x43 * _0xb3f2b9), _0x508aa9['bezierCurveTo'](0x2f * _0xb3f2b9, 0x61 * _0xb3f2b9, 0x12 * _0xb3f2b9, 0x75 * _0xb3f2b9, 0xb * _0xb3f2b9, 0x6e * _0xb3f2b9), _0x508aa9['bezierCurveTo'](0xb * _0xb3f2b9, 0x73 * _0xb3f2b9, 0xf * _0xb3f2b9, 0x7a * _0xb3f2b9, 0x17 * _0xb3f2b9, 0x7c * _0xb3f2b9), _0x508aa9['bezierCurveTo'](0x2e * _0xb3f2b9, 0x76 * _0xb3f2b9, 0x34 * _0xb3f2b9, 0x71 * _0xb3f2b9, 0x3e * _0xb3f2b9, 0x56 * _0xb3f2b9), _0x508aa9['closePath'](), fill_path(_0x508aa9, _0x57a7ac[0x7], _0x57a7ac[0x8], 0x6 * _0xb3f2b9), _0x508aa9['beginPath'](), _0x508aa9['lineCap'] = 'round', _0x508aa9['lineJoin'] = 'round', _0x508aa9['moveTo'](0x1e * _0xb3f2b9, 0x7d * _0xb3f2b9), _0x508aa9['bezierCurveTo'](0x2f * _0xb3f2b9, 0x88 * _0xb3f2b9, 0x39 * _0xb3f2b9, 0x86 * _0xb3f2b9, 0x4d * _0xb3f2b9, 0x7f * _0xb3f2b9), _0x508aa9['bezierCurveTo'](0x47 * _0xb3f2b9, 0x9e * _0xb3f2b9, 0x47 * _0xb3f2b9, 0x9f * _0xb3f2b9, 0x42 * _0xb3f2b9, 0x9f * _0xb3f2b9), _0x508aa9['bezierCurveTo'](50.5 * _0xb3f2b9, 156.5 * _0xb3f2b9, 50.5 * _0xb3f2b9, 156.5 * _0xb3f2b9, 0x23 * _0xb3f2b9, 0x9a * _0xb3f2b9), _0x508aa9['bezierCurveTo'](0x1f * _0xb3f2b9, 0x91 * _0xb3f2b9, 0x1f * _0xb3f2b9, 0x88 * _0xb3f2b9, 0x1f * _0xb3f2b9, 0x7d * _0xb3f2b9), _0x508aa9['closePath'](), fill_path(_0x508aa9, _0x57a7ac[0x7], _0x57a7ac[0x8], 0x6 * _0xb3f2b9), _0x508aa9['beginPath'](), _0x508aa9['lineCap'] = 'round', _0x508aa9['lineJoin'] = 'round', _0x508aa9['moveTo'](0x23 * _0xb3f2b9, 0xab * _0xb3f2b9), _0x508aa9['bezierCurveTo'](0x20 * _0xb3f2b9, 0xdd * _0xb3f2b9, 0x2b * _0xb3f2b9, 0xe9 * _0xb3f2b9, 0x46 * _0xb3f2b9, 0xf7 * _0xb3f2b9), _0x508aa9['bezierCurveTo'](0x4b * _0xb3f2b9, 0xea * _0xb3f2b9, 0x4b * _0xb3f2b9, 0xe6 * _0xb3f2b9, 0x48 * _0xb3f2b9, 0xdd * _0xb3f2b9), _0x508aa9['bezierCurveTo'](0x30 * _0xb3f2b9, 0xce * _0xb3f2b9, 0x36 * _0xb3f2b9, 0xbc * _0xb3f2b9, 0x32 * _0xb3f2b9, 0xb0 * _0xb3f2b9), _0x508aa9['closePath'](), fill_path(_0x508aa9, _0x57a7ac[0x7], _0x57a7ac[0x8], 0x6 * _0xb3f2b9), _0x508aa9['beginPath'](), _0x508aa9['lineCap'] = 'round', _0x508aa9['lineJoin'] = 'round', _0x508aa9['moveTo'](0x3c * _0xb3f2b9, 0x44 * _0xb3f2b9), _0x508aa9['bezierCurveTo'](0x3f * _0xb3f2b9, 0x45 * _0xb3f2b9, 0x41 * _0xb3f2b9, 0x47 * _0xb3f2b9, 0x43 * _0xb3f2b9, 0x4d * _0xb3f2b9), _0x508aa9['bezierCurveTo'](0x3d * _0xb3f2b9, 0x7b * _0xb3f2b9, 0x34 * _0xb3f2b9, 0x89 * _0xb3f2b9, 0x2a * _0xb3f2b9, 0x96 * _0xb3f2b9), _0x508aa9['bezierCurveTo'](0x26 * _0xb3f2b9, 0x97 * _0xb3f2b9, 0x26 * _0xb3f2b9, 0x97 * _0xb3f2b9, 0x22 * _0xb3f2b9, 0x98 * _0xb3f2b9), _0x508aa9['bezierCurveTo'](0x21 * _0xb3f2b9, 146.5 * _0xb3f2b9, 0x21 * _0xb3f2b9, 146.5 * _0xb3f2b9, 0x20 * _0xb3f2b9, 0x8d * _0xb3f2b9), _0x508aa9['bezierCurveTo'](0x31 * _0xb3f2b9, 0x76 * _0xb3f2b9, 0x3f * _0xb3f2b9, 0x57 * _0xb3f2b9, 0x3b * _0xb3f2b9, 0x44 * _0xb3f2b9), _0x508aa9['closePath'](), fill_path(_0x508aa9, _0x57a7ac[0x7], _0x57a7ac[0x8], 0x6 * _0xb3f2b9), _0x508aa9['beginPath'](), _0x508aa9['lineCap'] = 'round', _0x508aa9['lineJoin'] = 'round', _0x508aa9['moveTo'](0x47 * _0xb3f2b9, 0xac * _0xb3f2b9), _0x508aa9['bezierCurveTo'](0x38 * _0xb3f2b9, 0xde * _0xb3f2b9, 0x31 * _0xb3f2b9, 0xea * _0xb3f2b9, 0x23 * _0xb3f2b9, 0xf8 * _0xb3f2b9), _0x508aa9['bezierCurveTo'](0x1e * _0xb3f2b9, 0xec * _0xb3f2b9, 0x1e * _0xb3f2b9, 0xe6 * _0xb3f2b9, 0x1f * _0xb3f2b9, 0xd9 * _0xb3f2b9), _0x508aa9['bezierCurveTo'](0x2c * _0xb3f2b9, 0xca * _0xb3f2b9, 0x31 * _0xb3f2b9, 0xbf * _0xb3f2b9, 0x34 * _0xb3f2b9, 0xac * _0xb3f2b9), _0x508aa9['closePath'](), fill_path(_0x508aa9, _0x57a7ac[0x7], _0x57a7ac[0x8], 0x6 * _0xb3f2b9), _0x508aa9['beginPath'](), _0x508aa9['lineCap'] = 'round', _0x508aa9['lineJoin'] = 'round', _0x508aa9['moveTo'](0x23 * _0xb3f2b9, 0x97 * _0xb3f2b9), _0x508aa9['bezierCurveTo'](0x1b * _0xb3f2b9, 0xa5 * _0xb3f2b9, 0x1f * _0xb3f2b9, 0xad * _0xb3f2b9, 0x24 * _0xb3f2b9, 0xb2 * _0xb3f2b9), _0x508aa9['bezierCurveTo'](0x38 * _0xb3f2b9, 0xb9 * _0xb3f2b9, 0x49 * _0xb3f2b9, 0xb8 * _0xb3f2b9, 0x47 * _0xb3f2b9, 0xaa * _0xb3f2b9), _0x508aa9['bezierCurveTo'](0x48 * _0xb3f2b9, 0x9a * _0xb3f2b9, 0x47 * _0xb3f2b9, 0x9a * _0xb3f2b9, 0x3f * _0xb3f2b9, 0x9b * _0xb3f2b9), _0x508aa9['closePath'](), fill_path(_0x508aa9, _0x57a7ac[0x7], _0x57a7ac[0x8], 0x6 * _0xb3f2b9), _0x508aa9['beginPath'](), _0x508aa9['lineCap'] = 'round', _0x508aa9['lineJoin'] = 'round', _0x508aa9['moveTo'](0x35 * _0xb3f2b9, 0x71 * _0xb3f2b9), _0x508aa9['bezierCurveTo'](0x41 * _0xb3f2b9, 0x8c * _0xb3f2b9, 0x4b * _0xb3f2b9, 0xa6 * _0xb3f2b9, 0x34 * _0xb3f2b9, 0xa9 * _0xb3f2b9), _0x508aa9['bezierCurveTo'](0x1d * _0xb3f2b9, 0xa8 * _0xb3f2b9, 0x29 * _0xb3f2b9, 0x8f * _0xb3f2b9, 0x35 * _0xb3f2b9, 0x70 * _0xb3f2b9), _0x508aa9['closePath'](), fill_path(_0x508aa9, _0x57a7ac[0x3], _0x57a7ac[0x4], 0x6 * _0xb3f2b9), _0x3b2806;
}

function create_wood_spear(_0x5e666a, _0x55a604, _0x59ccde) {
    var _0x4f438e = document['createElement']('canvas'),
        _0x544be2 = _0x4f438e['getContext']('2d');
    return _0x4f438e['width'] = 0x51 * _0x5e666a, _0x4f438e['height'] = 0x272 * _0x5e666a, _0x544be2['translate'](0x14 * _0x5e666a, 0x14 * _0x5e666a), _0x544be2['globalAlpha'] = _0x55a604 ? 0.5 : 0x1, _0x544be2['beginPath'](), _0x544be2['lineCap'] = 'round', _0x544be2['lineJoin'] = 'round', _0x544be2['moveTo'](0x37 * _0x5e666a, 0x235 * _0x5e666a), _0x544be2['bezierCurveTo'](0x38 * _0x5e666a, 0x24a * _0x5e666a, 0x35 * _0x5e666a, 0x24f * _0x5e666a, 0x28 * _0x5e666a, 0x250 * _0x5e666a), _0x544be2['bezierCurveTo'](0x1c * _0x5e666a, 0x24f * _0x5e666a, 0x1b * _0x5e666a, 0x247 * _0x5e666a, 0x1c * _0x5e666a, 0x22d * _0x5e666a), _0x544be2['bezierCurveTo'](27.5 * _0x5e666a, 0x15a * _0x5e666a, 27.5 * _0x5e666a, 0x15a * _0x5e666a, 0x1b * _0x5e666a, 0x87 * _0x5e666a), _0x544be2['bezierCurveTo'](0x1a * _0x5e666a, 0x4a * _0x5e666a, 0x24 * _0x5e666a, 0x1a * _0x5e666a, 0x29 * _0x5e666a, 0xf * _0x5e666a), _0x544be2['bezierCurveTo'](0x36 * _0x5e666a, 0x33 * _0x5e666a, 0x36 * _0x5e666a, 0x51 * _0x5e666a, 0x37 * _0x5e666a, 0x80 * _0x5e666a), _0x544be2['closePath'](), fill_path(_0x544be2, _0x59ccde[0x0]), _0x544be2['translate'](-0x14 * _0x5e666a, -0x14 * _0x5e666a), _0x544be2['globalAlpha'] = 0x1, _0x544be2['beginPath'](), _0x544be2['lineCap'] = 'round', _0x544be2['lineJoin'] = 'round', _0x544be2['moveTo'](0x37 * _0x5e666a, 0x235 * _0x5e666a), _0x544be2['bezierCurveTo'](0x38 * _0x5e666a, 0x24a * _0x5e666a, 0x35 * _0x5e666a, 0x24f * _0x5e666a, 0x28 * _0x5e666a, 0x250 * _0x5e666a), _0x544be2['bezierCurveTo'](0x1c * _0x5e666a, 0x24f * _0x5e666a, 0x1b * _0x5e666a, 0x247 * _0x5e666a, 0x1c * _0x5e666a, 0x22d * _0x5e666a), _0x544be2['bezierCurveTo'](27.5 * _0x5e666a, 0x15a * _0x5e666a, 27.5 * _0x5e666a, 0x15a * _0x5e666a, 0x1b * _0x5e666a, 0x87 * _0x5e666a), _0x544be2['bezierCurveTo'](0x1a * _0x5e666a, 0x4a * _0x5e666a, 0x24 * _0x5e666a, 0x1a * _0x5e666a, 0x29 * _0x5e666a, 0xf * _0x5e666a), _0x544be2['bezierCurveTo'](0x36 * _0x5e666a, 0x33 * _0x5e666a, 0x36 * _0x5e666a, 0x51 * _0x5e666a, 0x37 * _0x5e666a, 0x80 * _0x5e666a), _0x544be2['closePath'](), fill_path(_0x544be2, _0x59ccde[0x1], _0x59ccde[0x2], 0x8 * _0x5e666a), _0x544be2['beginPath'](), _0x544be2['lineCap'] = 'round', _0x544be2['lineJoin'] = 'round', _0x544be2['moveTo'](0x1b * _0x5e666a, 0x81 * _0x5e666a), _0x544be2['bezierCurveTo'](0x20 * _0x5e666a, 0x87 * _0x5e666a, 0x30 * _0x5e666a, 0x88 * _0x5e666a, 0x35 * _0x5e666a, 0x81 * _0x5e666a), _0x544be2['bezierCurveTo'](0x38 * _0x5e666a, 0x61 * _0x5e666a, 0x35 * _0x5e666a, 0x52 * _0x5e666a, 0x34 * _0x5e666a, 0x40 * _0x5e666a), _0x544be2['bezierCurveTo'](0x31 * _0x5e666a, 0x21 * _0x5e666a, 0x2c * _0x5e666a, 0x1b * _0x5e666a, 0x29 * _0x5e666a, 0x15 * _0x5e666a), _0x544be2['bezierCurveTo'](0x1f * _0x5e666a, 0x28 * _0x5e666a, 0x1c * _0x5e666a, 0x54 * _0x5e666a, 0x1b * _0x5e666a, 0x7f * _0x5e666a), _0x544be2['closePath'](), fill_path(_0x544be2, _0x59ccde[0x3]), _0x544be2['beginPath'](), _0x544be2['lineCap'] = 'round', _0x544be2['lineJoin'] = 'round', _0x544be2['moveTo'](0x37 * _0x5e666a, 0x235 * _0x5e666a), _0x544be2['bezierCurveTo'](0x38 * _0x5e666a, 0x24a * _0x5e666a, 0x35 * _0x5e666a, 0x24f * _0x5e666a, 0x28 * _0x5e666a, 0x250 * _0x5e666a), _0x544be2['bezierCurveTo'](0x1c * _0x5e666a, 0x24f * _0x5e666a, 0x1b * _0x5e666a, 0x247 * _0x5e666a, 0x1c * _0x5e666a, 0x22d * _0x5e666a), _0x544be2['bezierCurveTo'](27.5 * _0x5e666a, 0x15a * _0x5e666a, 27.5 * _0x5e666a, 0x15a * _0x5e666a, 0x1b * _0x5e666a, 0x87 * _0x5e666a), _0x544be2['bezierCurveTo'](0x1a * _0x5e666a, 0x4a * _0x5e666a, 0x24 * _0x5e666a, 0x1a * _0x5e666a, 0x29 * _0x5e666a, 0xf * _0x5e666a), _0x544be2['bezierCurveTo'](0x36 * _0x5e666a, 0x33 * _0x5e666a, 0x36 * _0x5e666a, 0x51 * _0x5e666a, 0x37 * _0x5e666a, 0x80 * _0x5e666a), _0x544be2['closePath'](), fill_path(_0x544be2, undefined, _0x59ccde[0x2], 0x8 * _0x5e666a), _0x544be2['beginPath'](), _0x544be2['lineCap'] = 'round', _0x544be2['lineJoin'] = 'round', _0x544be2['moveTo'](0x1c * _0x5e666a, 0x1db * _0x5e666a), _0x544be2['bezierCurveTo'](0x26 * _0x5e666a, 0x1e2 * _0x5e666a, 0x30 * _0x5e666a, 0x1e0 * _0x5e666a, 0x36 * _0x5e666a, 0x1da * _0x5e666a), _0x544be2['bezierCurveTo'](0x36 * _0x5e666a, 509.5 * _0x5e666a, 0x36 * _0x5e666a, 509.5 * _0x5e666a, 0x36 * _0x5e666a, 0x221 * _0x5e666a), _0x544be2['bezierCurveTo'](0x2e * _0x5e666a, 0x22a * _0x5e666a, 0x24 * _0x5e666a, 0x228 * _0x5e666a, 0x1c * _0x5e666a, 0x221 * _0x5e666a), _0x544be2['closePath'](), fill_path(_0x544be2, _0x59ccde[0x4], _0x59ccde[0x5], 0x8 * _0x5e666a), _0x544be2['beginPath'](), _0x544be2['lineCap'] = 'round', _0x544be2['lineJoin'] = 'round', _0x544be2['moveTo'](0x1c * _0x5e666a, 0x1f0 * _0x5e666a), _0x544be2['bezierCurveTo'](0x27 * _0x5e666a, 0x1fa * _0x5e666a, 0x31 * _0x5e666a, 0x1f7 * _0x5e666a, 0x36 * _0x5e666a, 0x1f0 * _0x5e666a), fill_path(_0x544be2, undefined, _0x59ccde[0x5], 0x8 * _0x5e666a), _0x544be2['beginPath'](), _0x544be2['lineCap'] = 'round', _0x544be2['lineJoin'] = 'round', _0x544be2['moveTo'](0x1c * _0x5e666a, 0x209 * _0x5e666a), _0x544be2['bezierCurveTo'](0x29 * _0x5e666a, 0x211 * _0x5e666a, 0x31 * _0x5e666a, 0x20c * _0x5e666a, 0x36 * _0x5e666a, 0x208 * _0x5e666a), fill_path(_0x544be2, undefined, _0x59ccde[0x5], 0x8 * _0x5e666a), _0x4f438e;
}

function create_stonespear(_0x3287c1, _0x4a3f44, _0x4466f3) {
    var _0x20211a = document['createElement']('canvas'),
        _0x5b24ce = _0x20211a['getContext']('2d');
    return _0x20211a['width'] = 0x64 * _0x3287c1, _0x20211a['height'] = 0x288 * _0x3287c1, _0x5b24ce['translate'](0x14 * _0x3287c1, 0x14 * _0x3287c1), _0x5b24ce['globalAlpha'] = _0x4a3f44 ? 0.5 : 0x1, _0x5b24ce['save'](), _0x5b24ce['translate'](50.5 * _0x3287c1, 349.5 * _0x3287c1), round_rect(_0x5b24ce, -13.5 * _0x3287c1, -249.5 * _0x3287c1, 0x1b * _0x3287c1, 0x1f3 * _0x3287c1, 0xa * _0x3287c1), _0x5b24ce['restore'](), fill_path(_0x5b24ce, _0x4466f3[0x0]), _0x5b24ce['beginPath'](), _0x5b24ce['lineCap'] = 'round', _0x5b24ce['lineJoin'] = 'round', _0x5b24ce['moveTo'](0x24 * _0x3287c1, 0x21a * _0x3287c1), _0x5b24ce['bezierCurveTo'](49.5 * _0x3287c1, 0x21a * _0x3287c1, 49.5 * _0x3287c1, 0x21a * _0x3287c1, 0x3f * _0x3287c1, 0x21a * _0x3287c1), _0x5b24ce['bezierCurveTo'](63.5 * _0x3287c1, 0x238 * _0x3287c1, 63.5 * _0x3287c1, 0x238 * _0x3287c1, 0x40 * _0x3287c1, 0x256 * _0x3287c1), _0x5b24ce['bezierCurveTo'](0x32 * _0x3287c1, 0x256 * _0x3287c1, 0x32 * _0x3287c1, 0x256 * _0x3287c1, 0x24 * _0x3287c1, 0x256 * _0x3287c1), _0x5b24ce['bezierCurveTo'](0x24 * _0x3287c1, 568.5 * _0x3287c1, 0x24 * _0x3287c1, 568.5 * _0x3287c1, 0x24 * _0x3287c1, 0x21b * _0x3287c1), _0x5b24ce['closePath'](), fill_path(_0x5b24ce, _0x4466f3[0x0]), _0x5b24ce['beginPath'](), _0x5b24ce['lineCap'] = 'round', _0x5b24ce['lineJoin'] = 'round', _0x5b24ce['moveTo'](0x24 * _0x3287c1, 0x22a * _0x3287c1), _0x5b24ce['bezierCurveTo'](0x2d * _0x3287c1, 0x231 * _0x3287c1, 0x38 * _0x3287c1, 0x22e * _0x3287c1, 0x3f * _0x3287c1, 0x22a * _0x3287c1), _0x5b24ce['closePath'](), fill_path(_0x5b24ce, _0x4466f3[0x0]), _0x5b24ce['beginPath'](), _0x5b24ce['lineCap'] = 'round', _0x5b24ce['lineJoin'] = 'round', _0x5b24ce['moveTo'](0x20 * _0x3287c1, 0x239 * _0x3287c1), _0x5b24ce['bezierCurveTo'](0x2c * _0x3287c1, 0x240 * _0x3287c1, 0x3a * _0x3287c1, 0x23e * _0x3287c1, 0x44 * _0x3287c1, 0x239 * _0x3287c1), _0x5b24ce['bezierCurveTo'](0x44 * _0x3287c1, 0x248 * _0x3287c1, 0x44 * _0x3287c1, 0x248 * _0x3287c1, 0x44 * _0x3287c1, 0x257 * _0x3287c1), _0x5b24ce['bezierCurveTo'](0x44 * _0x3287c1, 0x260 * _0x3287c1, 0x41 * _0x3287c1, 0x26a * _0x3287c1, 0x31 * _0x3287c1, 0x269 * _0x3287c1), _0x5b24ce['bezierCurveTo'](0x22 * _0x3287c1, 0x269 * _0x3287c1, 0x20 * _0x3287c1, 0x262 * _0x3287c1, 0x20 * _0x3287c1, 0x256 * _0x3287c1), _0x5b24ce['closePath'](), fill_path(_0x5b24ce, _0x4466f3[0x0]), _0x5b24ce['beginPath'](), _0x5b24ce['lineCap'] = 'round', _0x5b24ce['lineJoin'] = 'round', _0x5b24ce['moveTo'](0x29 * _0x3287c1, 0x245 * _0x3287c1), _0x5b24ce['bezierCurveTo'](0x30 * _0x3287c1, 0x248 * _0x3287c1, 0x37 * _0x3287c1, 0x247 * _0x3287c1, 0x3c * _0x3287c1, 0x245 * _0x3287c1), _0x5b24ce['bezierCurveTo'](0x3c * _0x3287c1, 589.5 * _0x3287c1, 0x3c * _0x3287c1, 589.5 * _0x3287c1, 0x3c * _0x3287c1, 0x256 * _0x3287c1), _0x5b24ce['bezierCurveTo'](0x3c * _0x3287c1, 0x25c * _0x3287c1, 0x3b * _0x3287c1, 0x261 * _0x3287c1, 0x30 * _0x3287c1, 0x260 * _0x3287c1), _0x5b24ce['bezierCurveTo'](0x28 * _0x3287c1, 0x25f * _0x3287c1, 0x28 * _0x3287c1, 0x25e * _0x3287c1, 0x29 * _0x3287c1, 0x245 * _0x3287c1), _0x5b24ce['closePath'](), fill_path(_0x5b24ce, _0x4466f3[0x0]), _0x5b24ce['beginPath'](), _0x5b24ce['lineCap'] = 'round', _0x5b24ce['lineJoin'] = 'round', _0x5b24ce['moveTo'](0x1f * _0x3287c1, 0x6a * _0x3287c1), _0x5b24ce['bezierCurveTo'](0x1f * _0x3287c1, 124.5 * _0x3287c1, 0x1f * _0x3287c1, 124.5 * _0x3287c1, 0x1f * _0x3287c1, 0x8f * _0x3287c1), _0x5b24ce['bezierCurveTo'](0x1f * _0x3287c1, 0xa3 * _0x3287c1, 0x26 * _0x3287c1, 0xa9 * _0x3287c1, 0x30 * _0x3287c1, 0xa8 * _0x3287c1), _0x5b24ce['bezierCurveTo'](0x39 * _0x3287c1, 0xa8 * _0x3287c1, 0x43 * _0x3287c1, 0xa5 * _0x3287c1, 0x43 * _0x3287c1, 0x94 * _0x3287c1), _0x5b24ce['bezierCurveTo'](0x43 * _0x3287c1, 123.5 * _0x3287c1, 0x43 * _0x3287c1, 123.5 * _0x3287c1, 0x43 * _0x3287c1, 0x63 * _0x3287c1), _0x5b24ce['closePath'](), fill_path(_0x5b24ce, _0x4466f3[0x0]), _0x5b24ce['beginPath'](), _0x5b24ce['lineCap'] = 'round', _0x5b24ce['lineJoin'] = 'round', _0x5b24ce['moveTo'](0x31 * _0x3287c1, 0x1b * _0x3287c1), _0x5b24ce['bezierCurveTo'](0x40 * _0x3287c1, 62.5 * _0x3287c1, 0x40 * _0x3287c1, 62.5 * _0x3287c1, 0x4f * _0x3287c1, 0x62 * _0x3287c1), _0x5b24ce['bezierCurveTo'](0x4a * _0x3287c1, 0x71 * _0x3287c1, 0x3f * _0x3287c1, 0x79 * _0x3287c1, 0x32 * _0x3287c1, 0x7a * _0x3287c1), _0x5b24ce['bezierCurveTo'](0x23 * _0x3287c1, 0x7b * _0x3287c1, 0x16 * _0x3287c1, 0x6d * _0x3287c1, 0x14 * _0x3287c1, 0x62 * _0x3287c1), _0x5b24ce['closePath'](), fill_path(_0x5b24ce, _0x4466f3[0x0]), _0x5b24ce['beginPath'](), _0x5b24ce['lineCap'] = 'round', _0x5b24ce['lineJoin'] = 'round', _0x5b24ce['moveTo'](0x31 * _0x3287c1, 0x2b * _0x3287c1), _0x5b24ce['bezierCurveTo'](0x3d * _0x3287c1, 0x46 * _0x3287c1, 0x3d * _0x3287c1, 0x46 * _0x3287c1, 0x49 * _0x3287c1, 0x61 * _0x3287c1), _0x5b24ce['bezierCurveTo'](0x42 * _0x3287c1, 0x74 * _0x3287c1, 0x2b * _0x3287c1, 0x7a * _0x3287c1, 0x1a * _0x3287c1, 0x63 * _0x3287c1), _0x5b24ce['closePath'](), fill_path(_0x5b24ce, _0x4466f3[0x0]), _0x5b24ce['translate'](-0x14 * _0x3287c1, -0x14 * _0x3287c1), _0x5b24ce['globalAlpha'] = 0x1, _0x5b24ce['save'](), _0x5b24ce['translate'](50.5 * _0x3287c1, 349.5 * _0x3287c1), round_rect(_0x5b24ce, -13.5 * _0x3287c1, -249.5 * _0x3287c1, 0x1b * _0x3287c1, 0x1f3 * _0x3287c1, 0xa * _0x3287c1), _0x5b24ce['restore'](), fill_path(_0x5b24ce, _0x4466f3[0x1], _0x4466f3[0x2], 0x8 * _0x3287c1), _0x5b24ce['beginPath'](), _0x5b24ce['lineCap'] = 'round', _0x5b24ce['lineJoin'] = 'round', _0x5b24ce['moveTo'](0x24 * _0x3287c1, 0x21a * _0x3287c1), _0x5b24ce['bezierCurveTo'](49.5 * _0x3287c1, 0x21a * _0x3287c1, 49.5 * _0x3287c1, 0x21a * _0x3287c1, 0x3f * _0x3287c1, 0x21a * _0x3287c1), _0x5b24ce['bezierCurveTo'](63.5 * _0x3287c1, 0x238 * _0x3287c1, 63.5 * _0x3287c1, 0x238 * _0x3287c1, 0x40 * _0x3287c1, 0x256 * _0x3287c1), _0x5b24ce['bezierCurveTo'](0x32 * _0x3287c1, 0x256 * _0x3287c1, 0x32 * _0x3287c1, 0x256 * _0x3287c1, 0x24 * _0x3287c1, 0x256 * _0x3287c1), _0x5b24ce['bezierCurveTo'](0x24 * _0x3287c1, 568.5 * _0x3287c1, 0x24 * _0x3287c1, 568.5 * _0x3287c1, 0x24 * _0x3287c1, 0x21b * _0x3287c1), _0x5b24ce['closePath'](), fill_path(_0x5b24ce, _0x4466f3[0x3], _0x4466f3[0x4], 0x8 * _0x3287c1), _0x5b24ce['beginPath'](), _0x5b24ce['lineCap'] = 'round', _0x5b24ce['lineJoin'] = 'round', _0x5b24ce['moveTo'](0x24 * _0x3287c1, 0x22a * _0x3287c1), _0x5b24ce['bezierCurveTo'](0x2d * _0x3287c1, 0x231 * _0x3287c1, 0x38 * _0x3287c1, 0x22e * _0x3287c1, 0x3f * _0x3287c1, 0x22a * _0x3287c1), _0x5b24ce['closePath'](), fill_path(_0x5b24ce, undefined, _0x4466f3[0x4], 0x8 * _0x3287c1), _0x5b24ce['beginPath'](), _0x5b24ce['lineCap'] = 'round', _0x5b24ce['lineJoin'] = 'round', _0x5b24ce['moveTo'](0x20 * _0x3287c1, 0x239 * _0x3287c1), _0x5b24ce['bezierCurveTo'](0x2c * _0x3287c1, 0x240 * _0x3287c1, 0x3a * _0x3287c1, 0x23e * _0x3287c1, 0x44 * _0x3287c1, 0x239 * _0x3287c1), _0x5b24ce['bezierCurveTo'](0x44 * _0x3287c1, 0x248 * _0x3287c1, 0x44 * _0x3287c1, 0x248 * _0x3287c1, 0x44 * _0x3287c1, 0x257 * _0x3287c1), _0x5b24ce['bezierCurveTo'](0x44 * _0x3287c1, 0x260 * _0x3287c1, 0x41 * _0x3287c1, 0x26a * _0x3287c1, 0x31 * _0x3287c1, 0x269 * _0x3287c1), _0x5b24ce['bezierCurveTo'](0x22 * _0x3287c1, 0x269 * _0x3287c1, 0x20 * _0x3287c1, 0x262 * _0x3287c1, 0x20 * _0x3287c1, 0x256 * _0x3287c1), _0x5b24ce['closePath'](), fill_path(_0x5b24ce, _0x4466f3[0x5], _0x4466f3[0x6], 0x8 * _0x3287c1), _0x5b24ce['beginPath'](), _0x5b24ce['lineCap'] = 'round', _0x5b24ce['lineJoin'] = 'round', _0x5b24ce['moveTo'](0x29 * _0x3287c1, 0x245 * _0x3287c1), _0x5b24ce['bezierCurveTo'](0x30 * _0x3287c1, 0x248 * _0x3287c1, 0x37 * _0x3287c1, 0x247 * _0x3287c1, 0x3c * _0x3287c1, 0x245 * _0x3287c1), _0x5b24ce['bezierCurveTo'](0x3c * _0x3287c1, 589.5 * _0x3287c1, 0x3c * _0x3287c1, 589.5 * _0x3287c1, 0x3c * _0x3287c1, 0x256 * _0x3287c1), _0x5b24ce['bezierCurveTo'](0x3c * _0x3287c1, 0x25c * _0x3287c1, 0x3b * _0x3287c1, 0x261 * _0x3287c1, 0x30 * _0x3287c1, 0x260 * _0x3287c1), _0x5b24ce['bezierCurveTo'](0x28 * _0x3287c1, 0x25f * _0x3287c1, 0x28 * _0x3287c1, 0x25e * _0x3287c1, 0x29 * _0x3287c1, 0x245 * _0x3287c1), _0x5b24ce['closePath'](), fill_path(_0x5b24ce, _0x4466f3[0x7]), _0x5b24ce['beginPath'](), _0x5b24ce['lineCap'] = 'round', _0x5b24ce['lineJoin'] = 'round', _0x5b24ce['moveTo'](0x1f * _0x3287c1, 0x6a * _0x3287c1), _0x5b24ce['bezierCurveTo'](0x1f * _0x3287c1, 124.5 * _0x3287c1, 0x1f * _0x3287c1, 124.5 * _0x3287c1, 0x1f * _0x3287c1, 0x8f * _0x3287c1), _0x5b24ce['bezierCurveTo'](0x1f * _0x3287c1, 0xa3 * _0x3287c1, 0x26 * _0x3287c1, 0xa9 * _0x3287c1, 0x30 * _0x3287c1, 0xa8 * _0x3287c1), _0x5b24ce['bezierCurveTo'](0x39 * _0x3287c1, 0xa8 * _0x3287c1, 0x43 * _0x3287c1, 0xa5 * _0x3287c1, 0x43 * _0x3287c1, 0x94 * _0x3287c1), _0x5b24ce['bezierCurveTo'](0x43 * _0x3287c1, 123.5 * _0x3287c1, 0x43 * _0x3287c1, 123.5 * _0x3287c1, 0x43 * _0x3287c1, 0x63 * _0x3287c1), _0x5b24ce['closePath'](), fill_path(_0x5b24ce, _0x4466f3[0x5], _0x4466f3[0x6], 0x8 * _0x3287c1), _0x5b24ce['save'](), _0x5b24ce['translate'](-0x2e * _0x3287c1, -0x32 * _0x3287c1), _0x5b24ce['scale'](0x2, 0x2), _0x5b24ce['beginPath'](), _0x5b24ce['lineCap'] = 'round', _0x5b24ce['lineJoin'] = 'round', _0x5b24ce['moveTo'](0x33 * _0x3287c1, 0x50 * _0x3287c1), _0x5b24ce['bezierCurveTo'](0x33 * _0x3287c1, 89.5 * _0x3287c1, 0x33 * _0x3287c1, 89.5 * _0x3287c1, 0x33 * _0x3287c1, 0x63 * _0x3287c1), _0x5b24ce['bezierCurveTo'](0x31 * _0x3287c1, 0x67 * _0x3287c1, 0x2e * _0x3287c1, 0x69 * _0x3287c1, 0x2c * _0x3287c1, 0x63 * _0x3287c1), _0x5b24ce['bezierCurveTo'](0x2c * _0x3287c1, 88.5 * _0x3287c1, 0x2c * _0x3287c1, 88.5 * _0x3287c1, 0x2c * _0x3287c1, 0x4e * _0x3287c1), _0x5b24ce['closePath'](), fill_path(_0x5b24ce, _0x4466f3[0x8]), _0x5b24ce['restore'](), _0x5b24ce['beginPath'](), _0x5b24ce['lineCap'] = 'round', _0x5b24ce['lineJoin'] = 'round', _0x5b24ce['moveTo'](0x31 * _0x3287c1, 0x1b * _0x3287c1), _0x5b24ce['bezierCurveTo'](0x40 * _0x3287c1, 62.5 * _0x3287c1, 0x40 * _0x3287c1, 62.5 * _0x3287c1, 0x4f * _0x3287c1, 0x62 * _0x3287c1), _0x5b24ce['bezierCurveTo'](0x4a * _0x3287c1, 0x71 * _0x3287c1, 0x3f * _0x3287c1, 0x79 * _0x3287c1, 0x32 * _0x3287c1, 0x7a * _0x3287c1), _0x5b24ce['bezierCurveTo'](0x23 * _0x3287c1, 0x7b * _0x3287c1, 0x16 * _0x3287c1, 0x6d * _0x3287c1, 0x14 * _0x3287c1, 0x62 * _0x3287c1), _0x5b24ce['closePath'](), fill_path(_0x5b24ce, _0x4466f3[0x8], _0x4466f3[0x9], 0x8 * _0x3287c1), _0x5b24ce['scale'](0x2, 0x2), _0x5b24ce['translate'](-0x17 * _0x3287c1, -0x14 * _0x3287c1), _0x5b24ce['beginPath'](), _0x5b24ce['lineCap'] = 'round', _0x5b24ce['lineJoin'] = 'round', _0x5b24ce['moveTo'](0x39 * _0x3287c1, 0x45 * _0x3287c1), _0x5b24ce['bezierCurveTo'](0x32 * _0x3287c1, 0x4c * _0x3287c1, 0x2b * _0x3287c1, 0x4b * _0x3287c1, 0x26 * _0x3287c1, 0x45 * _0x3287c1), _0x5b24ce['bezierCurveTo'](0x2b * _0x3287c1, 0x39 * _0x3287c1, 0x2b * _0x3287c1, 0x39 * _0x3287c1, 0x30 * _0x3287c1, 0x2d * _0x3287c1), _0x5b24ce['closePath'](), fill_path(_0x5b24ce, _0x4466f3[0xa]), _0x20211a;
}

function create_goldspear(_0x714cad, _0x4bb5bb, _0x2b8e99) {
    var _0x2a0c97 = document['createElement']('canvas'),
        _0x555485 = _0x2a0c97['getContext']('2d');
    return _0x2a0c97['width'] = 0x58 * _0x714cad, _0x2a0c97['height'] = 0x287 * _0x714cad, _0x555485['translate'](0x14 * _0x714cad, 0x14 * _0x714cad), _0x555485['globalAlpha'] = _0x4bb5bb ? 0.5 : 0x1, _0x555485['save'](), _0x555485['translate'](0x2d * _0x714cad, 384.5 * _0x714cad), round_rect(_0x555485, -0xf * _0x714cad, -216.5 * _0x714cad, 0x1e * _0x714cad, 0x1b1 * _0x714cad, 0xa * _0x714cad), _0x555485['restore'](), fill_path(_0x555485, _0x2b8e99[0x0]), _0x555485['beginPath'](), _0x555485['lineCap'] = 'round', _0x555485['lineJoin'] = 'round', _0x555485['moveTo'](0x1b * _0x714cad, 0x23c * _0x714cad), _0x555485['bezierCurveTo'](0x2c * _0x714cad, 0x244 * _0x714cad, 0x37 * _0x714cad, 0x240 * _0x714cad, 0x3e * _0x714cad, 0x23c * _0x714cad), _0x555485['bezierCurveTo'](0x41 * _0x714cad, 585.5 * _0x714cad, 0x41 * _0x714cad, 585.5 * _0x714cad, 0x44 * _0x714cad, 0x257 * _0x714cad), _0x555485['bezierCurveTo'](0x47 * _0x714cad, 0x264 * _0x714cad, 0x44 * _0x714cad, 0x26a * _0x714cad, 0x22 * _0x714cad, 0x268 * _0x714cad), _0x555485['bezierCurveTo'](0xe * _0x714cad, 0x267 * _0x714cad, 0x13 * _0x714cad, 0x25f * _0x714cad, 0x1b * _0x714cad, 0x23d * _0x714cad), _0x555485['closePath'](), fill_path(_0x555485, _0x2b8e99[0x0]), _0x555485['beginPath'](), _0x555485['lineCap'] = 'round', _0x555485['lineJoin'] = 'round', _0x555485['moveTo'](0x20 * _0x714cad, 0x24b * _0x714cad), _0x555485['bezierCurveTo'](0x27 * _0x714cad, 0x24e * _0x714cad, 0x30 * _0x714cad, 0x24c * _0x714cad, 0x36 * _0x714cad, 0x24b * _0x714cad), _0x555485['bezierCurveTo'](0x39 * _0x714cad, 0x25c * _0x714cad, 0x3b * _0x714cad, 0x261 * _0x714cad, 0x2e * _0x714cad, 0x261 * _0x714cad), _0x555485['bezierCurveTo'](0x1b * _0x714cad, 0x261 * _0x714cad, 0x1c * _0x714cad, 0x25d * _0x714cad, 0x21 * _0x714cad, 0x24c * _0x714cad), _0x555485['closePath'](), fill_path(_0x555485, _0x2b8e99[0x0]), _0x555485['beginPath'](), _0x555485['lineCap'] = 'round', _0x555485['lineJoin'] = 'round', _0x555485['moveTo'](0x1f * _0x714cad, 0x71 * _0x714cad), _0x555485['bezierCurveTo'](0x1b * _0x714cad, 0x8b * _0x714cad, 0x1b * _0x714cad, 0x8b * _0x714cad, 0x17 * _0x714cad, 0xa5 * _0x714cad), _0x555485['bezierCurveTo'](0x12 * _0x714cad, 0xbb * _0x714cad, 0x27 * _0x714cad, 0xc3 * _0x714cad, 0x39 * _0x714cad, 0xba * _0x714cad), _0x555485['bezierCurveTo'](0x44 * _0x714cad, 0xb4 * _0x714cad, 0x41 * _0x714cad, 0xab * _0x714cad, 0x3e * _0x714cad, 0x99 * _0x714cad), _0x555485['bezierCurveTo'](58.5 * _0x714cad, 0x83 * _0x714cad, 58.5 * _0x714cad, 0x83 * _0x714cad, 0x37 * _0x714cad, 0x6d * _0x714cad), _0x555485['closePath'](), fill_path(_0x555485, _0x2b8e99[0x0]), _0x555485['beginPath'](), _0x555485['lineCap'] = 'round', _0x555485['lineJoin'] = 'round', _0x555485['moveTo'](0x27 * _0x714cad, 0x8b * _0x714cad), _0x555485['bezierCurveTo'](0x2b * _0x714cad, 0x8b * _0x714cad, 0x2b * _0x714cad, 0x8b * _0x714cad, 0x2f * _0x714cad, 0x8b * _0x714cad), _0x555485['bezierCurveTo'](0x33 * _0x714cad, 0x9e * _0x714cad, 0x38 * _0x714cad, 0xb0 * _0x714cad, 0x2c * _0x714cad, 0xaf * _0x714cad), _0x555485['bezierCurveTo'](0x21 * _0x714cad, 0xb1 * _0x714cad, 0x22 * _0x714cad, 0xa7 * _0x714cad, 0x27 * _0x714cad, 0x8c * _0x714cad), _0x555485['closePath'](), fill_path(_0x555485, _0x2b8e99[0x0]), _0x555485['beginPath'](), _0x555485['lineCap'] = 'round', _0x555485['lineJoin'] = 'round', _0x555485['moveTo'](0x2c * _0x714cad, 0x1d * _0x714cad), _0x555485['bezierCurveTo'](0x39 * _0x714cad, 0x3f * _0x714cad, 0x39 * _0x714cad, 0x3f * _0x714cad, 0x46 * _0x714cad, 0x61 * _0x714cad), _0x555485['bezierCurveTo'](0x3c * _0x714cad, 0x6f * _0x714cad, 0x3c * _0x714cad, 0x6f * _0x714cad, 0x32 * _0x714cad, 0x7d * _0x714cad), _0x555485['bezierCurveTo'](0x2d * _0x714cad, 0x80 * _0x714cad, 0x29 * _0x714cad, 0x80 * _0x714cad, 0x23 * _0x714cad, 0x7c * _0x714cad), _0x555485['bezierCurveTo'](26.5 * _0x714cad, 0x6e * _0x714cad, 26.5 * _0x714cad, 0x6e * _0x714cad, 0x12 * _0x714cad, 0x60 * _0x714cad), _0x555485['closePath'](), fill_path(_0x555485, _0x2b8e99[0x0]), _0x555485['beginPath'](), _0x555485['lineCap'] = 'round', _0x555485['lineJoin'] = 'round', _0x555485['moveTo'](0x2c * _0x714cad, 0x36 * _0x714cad), _0x555485['bezierCurveTo'](0x32 * _0x714cad, 0x48 * _0x714cad, 0x32 * _0x714cad, 0x48 * _0x714cad, 0x38 * _0x714cad, 0x5a * _0x714cad), _0x555485['bezierCurveTo'](0x3a * _0x714cad, 0x5e * _0x714cad, 0x3b * _0x714cad, 0x62 * _0x714cad, 0x35 * _0x714cad, 0x69 * _0x714cad), _0x555485['bezierCurveTo'](0x2f * _0x714cad, 0x71 * _0x714cad, 0x2b * _0x714cad, 0x71 * _0x714cad, 0x24 * _0x714cad, 0x67 * _0x714cad), _0x555485['bezierCurveTo'](0x1d * _0x714cad, 0x60 * _0x714cad, 0x1f * _0x714cad, 0x5e * _0x714cad, 0x23 * _0x714cad, 0x53 * _0x714cad), _0x555485['closePath'](), fill_path(_0x555485, _0x2b8e99[0x0]), _0x555485['translate'](-0x14 * _0x714cad, -0x14 * _0x714cad), _0x555485['globalAlpha'] = 0x1, _0x555485['save'](), _0x555485['translate'](0x2d * _0x714cad, 384.5 * _0x714cad), round_rect(_0x555485, -0xf * _0x714cad, -216.5 * _0x714cad, 0x1e * _0x714cad, 0x1b1 * _0x714cad, 0xa * _0x714cad), _0x555485['restore'](), fill_path(_0x555485, _0x2b8e99[0x1], _0x2b8e99[0x2], 0x8 * _0x714cad), _0x555485['beginPath'](), _0x555485['lineCap'] = 'round', _0x555485['lineJoin'] = 'round', _0x555485['moveTo'](0x1b * _0x714cad, 0x23c * _0x714cad), _0x555485['bezierCurveTo'](0x2c * _0x714cad, 0x244 * _0x714cad, 0x37 * _0x714cad, 0x240 * _0x714cad, 0x3e * _0x714cad, 0x23c * _0x714cad), _0x555485['bezierCurveTo'](0x41 * _0x714cad, 585.5 * _0x714cad, 0x41 * _0x714cad, 585.5 * _0x714cad, 0x44 * _0x714cad, 0x257 * _0x714cad), _0x555485['bezierCurveTo'](0x47 * _0x714cad, 0x264 * _0x714cad, 0x44 * _0x714cad, 0x26a * _0x714cad, 0x22 * _0x714cad, 0x268 * _0x714cad), _0x555485['bezierCurveTo'](0xe * _0x714cad, 0x267 * _0x714cad, 0x13 * _0x714cad, 0x25f * _0x714cad, 0x1b * _0x714cad, 0x23d * _0x714cad), _0x555485['closePath'](), fill_path(_0x555485, _0x2b8e99[0x3], _0x2b8e99[0x4], 0x8 * _0x714cad), _0x555485['beginPath'](), _0x555485['lineCap'] = 'round', _0x555485['lineJoin'] = 'round', _0x555485['moveTo'](0x20 * _0x714cad, 0x24b * _0x714cad), _0x555485['bezierCurveTo'](0x27 * _0x714cad, 0x24e * _0x714cad, 0x30 * _0x714cad, 0x24c * _0x714cad, 0x36 * _0x714cad, 0x24b * _0x714cad), _0x555485['bezierCurveTo'](0x39 * _0x714cad, 0x25c * _0x714cad, 0x3b * _0x714cad, 0x261 * _0x714cad, 0x2e * _0x714cad, 0x261 * _0x714cad), _0x555485['bezierCurveTo'](0x1b * _0x714cad, 0x261 * _0x714cad, 0x1c * _0x714cad, 0x25d * _0x714cad, 0x21 * _0x714cad, 0x24c * _0x714cad), _0x555485['closePath'](), fill_path(_0x555485, _0x2b8e99[0x5]), _0x555485['beginPath'](), _0x555485['lineCap'] = 'round', _0x555485['lineJoin'] = 'round', _0x555485['moveTo'](0x1f * _0x714cad, 0x71 * _0x714cad), _0x555485['bezierCurveTo'](0x1b * _0x714cad, 0x8b * _0x714cad, 0x1b * _0x714cad, 0x8b * _0x714cad, 0x17 * _0x714cad, 0xa5 * _0x714cad), _0x555485['bezierCurveTo'](0x12 * _0x714cad, 0xbb * _0x714cad, 0x27 * _0x714cad, 0xc3 * _0x714cad, 0x39 * _0x714cad, 0xba * _0x714cad), _0x555485['bezierCurveTo'](0x44 * _0x714cad, 0xb4 * _0x714cad, 0x41 * _0x714cad, 0xab * _0x714cad, 0x3e * _0x714cad, 0x99 * _0x714cad), _0x555485['bezierCurveTo'](58.5 * _0x714cad, 0x83 * _0x714cad, 58.5 * _0x714cad, 0x83 * _0x714cad, 0x37 * _0x714cad, 0x6d * _0x714cad), _0x555485['closePath'](), fill_path(_0x555485, _0x2b8e99[0x3], _0x2b8e99[0x4], 0x8 * _0x714cad), _0x555485['beginPath'](), _0x555485['lineCap'] = 'round', _0x555485['lineJoin'] = 'round', _0x555485['moveTo'](0x27 * _0x714cad, 0x8b * _0x714cad), _0x555485['bezierCurveTo'](0x2b * _0x714cad, 0x8b * _0x714cad, 0x2b * _0x714cad, 0x8b * _0x714cad, 0x2f * _0x714cad, 0x8b * _0x714cad), _0x555485['bezierCurveTo'](0x33 * _0x714cad, 0x9e * _0x714cad, 0x38 * _0x714cad, 0xb0 * _0x714cad, 0x2c * _0x714cad, 0xaf * _0x714cad), _0x555485['bezierCurveTo'](0x21 * _0x714cad, 0xb1 * _0x714cad, 0x22 * _0x714cad, 0xa7 * _0x714cad, 0x27 * _0x714cad, 0x8c * _0x714cad), _0x555485['closePath'](), fill_path(_0x555485, _0x2b8e99[0x5]), _0x555485['beginPath'](), _0x555485['lineCap'] = 'round', _0x555485['lineJoin'] = 'round', _0x555485['moveTo'](0x2c * _0x714cad, 0x1d * _0x714cad), _0x555485['bezierCurveTo'](0x39 * _0x714cad, 0x3f * _0x714cad, 0x39 * _0x714cad, 0x3f * _0x714cad, 0x46 * _0x714cad, 0x61 * _0x714cad), _0x555485['bezierCurveTo'](0x3c * _0x714cad, 0x6f * _0x714cad, 0x3c * _0x714cad, 0x6f * _0x714cad, 0x32 * _0x714cad, 0x7d * _0x714cad), _0x555485['bezierCurveTo'](0x2d * _0x714cad, 0x80 * _0x714cad, 0x29 * _0x714cad, 0x80 * _0x714cad, 0x23 * _0x714cad, 0x7c * _0x714cad), _0x555485['bezierCurveTo'](26.5 * _0x714cad, 0x6e * _0x714cad, 26.5 * _0x714cad, 0x6e * _0x714cad, 0x12 * _0x714cad, 0x60 * _0x714cad), _0x555485['closePath'](), fill_path(_0x555485, _0x2b8e99[0x6], _0x2b8e99[0x7], 0x8 * _0x714cad), _0x555485['beginPath'](), _0x555485['lineCap'] = 'round', _0x555485['lineJoin'] = 'round', _0x555485['moveTo'](0x2c * _0x714cad, 0x36 * _0x714cad), _0x555485['bezierCurveTo'](0x32 * _0x714cad, 0x48 * _0x714cad, 0x32 * _0x714cad, 0x48 * _0x714cad, 0x38 * _0x714cad, 0x5a * _0x714cad), _0x555485['bezierCurveTo'](0x3a * _0x714cad, 0x5e * _0x714cad, 0x3b * _0x714cad, 0x62 * _0x714cad, 0x35 * _0x714cad, 0x69 * _0x714cad), _0x555485['bezierCurveTo'](0x2f * _0x714cad, 0x71 * _0x714cad, 0x2b * _0x714cad, 0x71 * _0x714cad, 0x24 * _0x714cad, 0x67 * _0x714cad), _0x555485['bezierCurveTo'](0x1d * _0x714cad, 0x60 * _0x714cad, 0x1f * _0x714cad, 0x5e * _0x714cad, 0x23 * _0x714cad, 0x53 * _0x714cad), _0x555485['closePath'](), fill_path(_0x555485, _0x2b8e99[0x8]), _0x2a0c97;
}

function create_diamondspear(_0x253c32, _0x36bfc9, _0x168837) {
    var _0x6f513f = document['createElement']('canvas'),
        _0x178283 = _0x6f513f['getContext']('2d');
    return _0x6f513f['width'] = 0x6a * _0x253c32, _0x6f513f['height'] = 0x2a9 * _0x253c32, _0x178283['translate'](0x14 * _0x253c32, 0x14 * _0x253c32), _0x178283['globalAlpha'] = _0x36bfc9 ? 0.5 : 0x1, _0x178283['save'](), _0x178283['translate'](52.5 * _0x253c32, 0x18b * _0x253c32), _0x178283['rotate'](0x0), round_rect(_0x178283, -11.5 * _0x253c32, -0xe2 * _0x253c32, 0x17 * _0x253c32, 0x1c4 * _0x253c32, 0xa * _0x253c32), _0x178283['restore'](), fill_path(_0x178283, _0x168837[0x0]), _0x178283['beginPath'](), _0x178283['lineCap'] = 'round', _0x178283['lineJoin'] = 'round', _0x178283['moveTo'](0x23 * _0x253c32, 0x24c * _0x253c32), _0x178283['bezierCurveTo'](0x2f * _0x253c32, 0x254 * _0x253c32, 0x3d * _0x253c32, 0x252 * _0x253c32, 0x45 * _0x253c32, 0x24c * _0x253c32), _0x178283['bezierCurveTo'](0x4f * _0x253c32, 0x267 * _0x253c32, 0x4e * _0x253c32, 0x278 * _0x253c32, 0x3b * _0x253c32, 0x283 * _0x253c32), _0x178283['bezierCurveTo'](0x29 * _0x253c32, 0x28a * _0x253c32, 0x1b * _0x253c32, 0x278 * _0x253c32, 0x1e * _0x253c32, 0x262 * _0x253c32), _0x178283['closePath'](), fill_path(_0x178283, _0x168837[0x0]), _0x178283['beginPath'](), _0x178283['lineCap'] = 'round', _0x178283['lineJoin'] = 'round', _0x178283['moveTo'](0x34 * _0x253c32, 0x87 * _0x253c32), _0x178283['bezierCurveTo'](61.5 * _0x253c32, 0x8e * _0x253c32, 61.5 * _0x253c32, 0x8e * _0x253c32, 0x47 * _0x253c32, 0x95 * _0x253c32), _0x178283['bezierCurveTo'](69.5 * _0x253c32, 0xa6 * _0x253c32, 69.5 * _0x253c32, 0xa6 * _0x253c32, 0x44 * _0x253c32, 0xb7 * _0x253c32), _0x178283['bezierCurveTo'](60.5 * _0x253c32, 187.5 * _0x253c32, 60.5 * _0x253c32, 187.5 * _0x253c32, 0x35 * _0x253c32, 0xc0 * _0x253c32), _0x178283['bezierCurveTo'](0x2d * _0x253c32, 187.5 * _0x253c32, 0x2d * _0x253c32, 187.5 * _0x253c32, 0x25 * _0x253c32, 0xb7 * _0x253c32), _0x178283['bezierCurveTo'](35.5 * _0x253c32, 0xa7 * _0x253c32, 35.5 * _0x253c32, 0xa7 * _0x253c32, 0x22 * _0x253c32, 0x97 * _0x253c32), _0x178283['closePath'](), fill_path(_0x178283, _0x168837[0x0]), _0x178283['beginPath'](), _0x178283['lineCap'] = 'round', _0x178283['lineJoin'] = 'round', _0x178283['moveTo'](0x40 * _0x253c32, 0x96 * _0x253c32), _0x178283['bezierCurveTo'](0x3f * _0x253c32, 0xa4 * _0x253c32, 0x3f * _0x253c32, 0xa4 * _0x253c32, 0x3e * _0x253c32, 0xb2 * _0x253c32), _0x178283['bezierCurveTo'](0x3a * _0x253c32, 0xb5 * _0x253c32, 0x3a * _0x253c32, 0xb5 * _0x253c32, 0x36 * _0x253c32, 0xb8 * _0x253c32), _0x178283['bezierCurveTo'](48.5 * _0x253c32, 181.5 * _0x253c32, 48.5 * _0x253c32, 181.5 * _0x253c32, 0x2b * _0x253c32, 0xb3 * _0x253c32), _0x178283['bezierCurveTo'](0x2a * _0x253c32, 164.5 * _0x253c32, 0x2a * _0x253c32, 164.5 * _0x253c32, 0x29 * _0x253c32, 0x96 * _0x253c32), _0x178283['bezierCurveTo'](0x2e * _0x253c32, 152.5 * _0x253c32, 0x2e * _0x253c32, 152.5 * _0x253c32, 0x33 * _0x253c32, 0x9b * _0x253c32), _0x178283['closePath'](), fill_path(_0x178283, _0x168837[0x0]), _0x178283['beginPath'](), _0x178283['lineCap'] = 'round', _0x178283['lineJoin'] = 'round', _0x178283['moveTo'](0x34 * _0x253c32, 0x27 * _0x253c32), _0x178283['bezierCurveTo'](65.5 * _0x253c32, 0x52 * _0x253c32, 65.5 * _0x253c32, 0x52 * _0x253c32, 0x4f * _0x253c32, 0x7d * _0x253c32), _0x178283['bezierCurveTo'](0x42 * _0x253c32, 137.5 * _0x253c32, 0x42 * _0x253c32, 137.5 * _0x253c32, 0x35 * _0x253c32, 0x96 * _0x253c32), _0x178283['bezierCurveTo'](0x27 * _0x253c32, 0x8a * _0x253c32, 0x27 * _0x253c32, 0x8a * _0x253c32, 0x19 * _0x253c32, 0x7e * _0x253c32), _0x178283['closePath'](), fill_path(_0x178283, _0x168837[0x0]), _0x178283['beginPath'](), _0x178283['lineCap'] = 'round', _0x178283['lineJoin'] = 'round', _0x178283['moveTo'](0x34 * _0x253c32, 0x40 * _0x253c32), _0x178283['bezierCurveTo'](0x3c * _0x253c32, 92.5 * _0x253c32, 0x3c * _0x253c32, 92.5 * _0x253c32, 0x44 * _0x253c32, 0x79 * _0x253c32), _0x178283['bezierCurveTo'](0x3d * _0x253c32, 127.5 * _0x253c32, 0x3d * _0x253c32, 127.5 * _0x253c32, 0x36 * _0x253c32, 0x86 * _0x253c32), _0x178283['bezierCurveTo'](46.5 * _0x253c32, 127.5 * _0x253c32, 46.5 * _0x253c32, 127.5 * _0x253c32, 0x27 * _0x253c32, 0x79 * _0x253c32), _0x178283['closePath'](), fill_path(_0x178283, _0x168837[0x0]), _0x178283['translate'](-0x14 * _0x253c32, -0x14 * _0x253c32), _0x178283['globalAlpha'] = 0x1, _0x178283['save'](), _0x178283['translate'](52.5 * _0x253c32, 0x18b * _0x253c32), _0x178283['rotate'](0x0), round_rect(_0x178283, -11.5 * _0x253c32, -0xe2 * _0x253c32, 0x17 * _0x253c32, 0x1c4 * _0x253c32, 0xa * _0x253c32), _0x178283['restore'](), fill_path(_0x178283, _0x168837[0x1], _0x168837[0x2], 0x8 * _0x253c32), _0x178283['beginPath'](), _0x178283['lineCap'] = 'round', _0x178283['lineJoin'] = 'round', _0x178283['moveTo'](0x23 * _0x253c32, 0x24c * _0x253c32), _0x178283['bezierCurveTo'](0x2f * _0x253c32, 0x254 * _0x253c32, 0x3d * _0x253c32, 0x252 * _0x253c32, 0x45 * _0x253c32, 0x24c * _0x253c32), _0x178283['bezierCurveTo'](0x4f * _0x253c32, 0x267 * _0x253c32, 0x4e * _0x253c32, 0x278 * _0x253c32, 0x3b * _0x253c32, 0x283 * _0x253c32), _0x178283['bezierCurveTo'](0x29 * _0x253c32, 0x28a * _0x253c32, 0x1b * _0x253c32, 0x278 * _0x253c32, 0x1e * _0x253c32, 0x262 * _0x253c32), _0x178283['closePath'](), fill_path(_0x178283, _0x168837[0x3], _0x168837[0x4], 0x8 * _0x253c32), _0x178283['beginPath'](), _0x178283['lineCap'] = 'round', _0x178283['lineJoin'] = 'round', _0x178283['moveTo'](0x34 * _0x253c32, 0x87 * _0x253c32), _0x178283['bezierCurveTo'](61.5 * _0x253c32, 0x8e * _0x253c32, 61.5 * _0x253c32, 0x8e * _0x253c32, 0x47 * _0x253c32, 0x95 * _0x253c32), _0x178283['bezierCurveTo'](69.5 * _0x253c32, 0xa6 * _0x253c32, 69.5 * _0x253c32, 0xa6 * _0x253c32, 0x44 * _0x253c32, 0xb7 * _0x253c32), _0x178283['bezierCurveTo'](60.5 * _0x253c32, 187.5 * _0x253c32, 60.5 * _0x253c32, 187.5 * _0x253c32, 0x35 * _0x253c32, 0xc0 * _0x253c32), _0x178283['bezierCurveTo'](0x2d * _0x253c32, 187.5 * _0x253c32, 0x2d * _0x253c32, 187.5 * _0x253c32, 0x25 * _0x253c32, 0xb7 * _0x253c32), _0x178283['bezierCurveTo'](35.5 * _0x253c32, 0xa7 * _0x253c32, 35.5 * _0x253c32, 0xa7 * _0x253c32, 0x22 * _0x253c32, 0x97 * _0x253c32), _0x178283['closePath'](), fill_path(_0x178283, _0x168837[0x3], _0x168837[0x4], 0x8 * _0x253c32), _0x178283['beginPath'](), _0x178283['lineCap'] = 'round', _0x178283['lineJoin'] = 'round', _0x178283['moveTo'](0x40 * _0x253c32, 0x96 * _0x253c32), _0x178283['bezierCurveTo'](0x3f * _0x253c32, 0xa4 * _0x253c32, 0x3f * _0x253c32, 0xa4 * _0x253c32, 0x3e * _0x253c32, 0xb2 * _0x253c32), _0x178283['bezierCurveTo'](0x3a * _0x253c32, 0xb5 * _0x253c32, 0x3a * _0x253c32, 0xb5 * _0x253c32, 0x36 * _0x253c32, 0xb8 * _0x253c32), _0x178283['bezierCurveTo'](48.5 * _0x253c32, 181.5 * _0x253c32, 48.5 * _0x253c32, 181.5 * _0x253c32, 0x2b * _0x253c32, 0xb3 * _0x253c32), _0x178283['bezierCurveTo'](0x2a * _0x253c32, 164.5 * _0x253c32, 0x2a * _0x253c32, 164.5 * _0x253c32, 0x29 * _0x253c32, 0x96 * _0x253c32), _0x178283['bezierCurveTo'](0x2e * _0x253c32, 152.5 * _0x253c32, 0x2e * _0x253c32, 152.5 * _0x253c32, 0x33 * _0x253c32, 0x9b * _0x253c32), _0x178283['closePath'](), fill_path(_0x178283, _0x168837[0x5]), _0x178283['beginPath'](), _0x178283['lineCap'] = 'round', _0x178283['lineJoin'] = 'round', _0x178283['moveTo'](0x34 * _0x253c32, 0x27 * _0x253c32), _0x178283['bezierCurveTo'](65.5 * _0x253c32, 0x52 * _0x253c32, 65.5 * _0x253c32, 0x52 * _0x253c32, 0x4f * _0x253c32, 0x7d * _0x253c32), _0x178283['bezierCurveTo'](0x42 * _0x253c32, 137.5 * _0x253c32, 0x42 * _0x253c32, 137.5 * _0x253c32, 0x35 * _0x253c32, 0x96 * _0x253c32), _0x178283['bezierCurveTo'](0x27 * _0x253c32, 0x8a * _0x253c32, 0x27 * _0x253c32, 0x8a * _0x253c32, 0x19 * _0x253c32, 0x7e * _0x253c32), _0x178283['closePath'](), fill_path(_0x178283, _0x168837[0x6], _0x168837[0x7], 0x8 * _0x253c32), _0x178283['beginPath'](), _0x178283['lineCap'] = 'round', _0x178283['lineJoin'] = 'round', _0x178283['moveTo'](0x34 * _0x253c32, 0x40 * _0x253c32), _0x178283['bezierCurveTo'](0x3c * _0x253c32, 92.5 * _0x253c32, 0x3c * _0x253c32, 92.5 * _0x253c32, 0x44 * _0x253c32, 0x79 * _0x253c32), _0x178283['bezierCurveTo'](0x3d * _0x253c32, 127.5 * _0x253c32, 0x3d * _0x253c32, 127.5 * _0x253c32, 0x36 * _0x253c32, 0x86 * _0x253c32), _0x178283['bezierCurveTo'](46.5 * _0x253c32, 127.5 * _0x253c32, 46.5 * _0x253c32, 127.5 * _0x253c32, 0x27 * _0x253c32, 0x79 * _0x253c32), _0x178283['closePath'](), fill_path(_0x178283, _0x168837[0x8]), _0x6f513f;
}

function create_amespear(_0x3971ad, _0x50c9d6, _0x3f79d8) {
    var _0x500965 = document['createElement']('canvas'),
        _0x1a682f = _0x500965['getContext']('2d');
    return _0x500965['width'] = 0x6c * _0x3971ad, _0x500965['height'] = 0x29d * _0x3971ad, _0x1a682f['translate'](0x14 * _0x3971ad, 0x14 * _0x3971ad), _0x1a682f['globalAlpha'] = _0x50c9d6 ? 0.5 : 0x1, _0x1a682f['save'](), _0x1a682f['translate'](0x36 * _0x3971ad, 389.5 * _0x3971ad), round_rect(_0x1a682f, -0xf * _0x3971ad, -228.5 * _0x3971ad, 0x1e * _0x3971ad, 0x1c9 * _0x3971ad, 0xa * _0x3971ad), _0x1a682f['restore'](), fill_path(_0x1a682f, _0x3f79d8[0x0]), _0x1a682f['beginPath'](), _0x1a682f['lineCap'] = 'round', _0x1a682f['lineJoin'] = 'round', _0x1a682f['moveTo'](0x23 * _0x3971ad, 0x243 * _0x3971ad), _0x1a682f['bezierCurveTo'](0x2f * _0x3971ad, 0x24b * _0x3971ad, 0x3d * _0x3971ad, 0x248 * _0x3971ad, 0x47 * _0x3971ad, 0x243 * _0x3971ad), _0x1a682f['bezierCurveTo'](0x4b * _0x3971ad, 597.5 * _0x3971ad, 0x4b * _0x3971ad, 597.5 * _0x3971ad, 0x4f * _0x3971ad, 0x268 * _0x3971ad), _0x1a682f['bezierCurveTo'](66.5 * _0x3971ad, 0x274 * _0x3971ad, 66.5 * _0x3971ad, 0x274 * _0x3971ad, 0x36 * _0x3971ad, 0x280 * _0x3971ad), _0x1a682f['bezierCurveTo'](0x29 * _0x3971ad, 628.5 * _0x3971ad, 0x29 * _0x3971ad, 628.5 * _0x3971ad, 0x1c * _0x3971ad, 0x269 * _0x3971ad), _0x1a682f['closePath'](), fill_path(_0x1a682f, _0x3f79d8[0x0]), _0x1a682f['beginPath'](), _0x1a682f['lineCap'] = 'round', _0x1a682f['lineJoin'] = 'round', _0x1a682f['moveTo'](0x1e * _0x3971ad, 0x8d * _0x3971ad), _0x1a682f['bezierCurveTo'](0x28 * _0x3971ad, 0x88 * _0x3971ad, 0x28 * _0x3971ad, 0x88 * _0x3971ad, 0x32 * _0x3971ad, 0x83 * _0x3971ad), _0x1a682f['bezierCurveTo'](0x3f * _0x3971ad, 0x88 * _0x3971ad, 0x3f * _0x3971ad, 0x88 * _0x3971ad, 0x4c * _0x3971ad, 0x8d * _0x3971ad), _0x1a682f['bezierCurveTo'](72.5 * _0x3971ad, 161.5 * _0x3971ad, 72.5 * _0x3971ad, 161.5 * _0x3971ad, 0x45 * _0x3971ad, 0xb6 * _0x3971ad), _0x1a682f['bezierCurveTo'](61.5 * _0x3971ad, 186.5 * _0x3971ad, 61.5 * _0x3971ad, 186.5 * _0x3971ad, 0x36 * _0x3971ad, 0xbf * _0x3971ad), _0x1a682f['bezierCurveTo'](0x2d * _0x3971ad, 186.5 * _0x3971ad, 0x2d * _0x3971ad, 186.5 * _0x3971ad, 0x24 * _0x3971ad, 0xb6 * _0x3971ad), _0x1a682f['closePath'](), fill_path(_0x1a682f, _0x3f79d8[0x0]), _0x1a682f['beginPath'](), _0x1a682f['lineCap'] = 'round', _0x1a682f['lineJoin'] = 'round', _0x1a682f['moveTo'](0x2a * _0x3971ad, 0x98 * _0x3971ad), _0x1a682f['bezierCurveTo'](0x35 * _0x3971ad, 0x98 * _0x3971ad, 0x35 * _0x3971ad, 0x98 * _0x3971ad, 0x40 * _0x3971ad, 0x98 * _0x3971ad), _0x1a682f['bezierCurveTo'](0x3e * _0x3971ad, 0xab * _0x3971ad, 0x3e * _0x3971ad, 0xb0 * _0x3971ad, 0x37 * _0x3971ad, 0xb1 * _0x3971ad), _0x1a682f['bezierCurveTo'](0x2a * _0x3971ad, 0xb0 * _0x3971ad, 0x2d * _0x3971ad, 0xae * _0x3971ad, 0x2a * _0x3971ad, 0x98 * _0x3971ad), _0x1a682f['closePath'](), fill_path(_0x1a682f, _0x3f79d8[0x0]), _0x1a682f['beginPath'](), _0x1a682f['lineCap'] = 'round', _0x1a682f['lineJoin'] = 'round', _0x1a682f['moveTo'](0x34 * _0x3971ad, 0x1c * _0x3971ad), _0x1a682f['bezierCurveTo'](67.5 * _0x3971ad, 0x37 * _0x3971ad, 67.5 * _0x3971ad, 0x37 * _0x3971ad, 0x53 * _0x3971ad, 0x52 * _0x3971ad), _0x1a682f['bezierCurveTo'](0x50 * _0x3971ad, 106.5 * _0x3971ad, 0x50 * _0x3971ad, 106.5 * _0x3971ad, 0x4d * _0x3971ad, 0x83 * _0x3971ad), _0x1a682f['bezierCurveTo'](0x3a * _0x3971ad, 0x93 * _0x3971ad, 0x2c * _0x3971ad, 0x8d * _0x3971ad, 0x1d * _0x3971ad, 0x83 * _0x3971ad), _0x1a682f['bezierCurveTo'](26.5 * _0x3971ad, 106.5 * _0x3971ad, 26.5 * _0x3971ad, 106.5 * _0x3971ad, 0x18 * _0x3971ad, 0x52 * _0x3971ad), _0x1a682f['closePath'](), fill_path(_0x1a682f, _0x3f79d8[0x0]), _0x1a682f['beginPath'](), _0x1a682f['lineCap'] = 'round', _0x1a682f['lineJoin'] = 'round', _0x1a682f['moveTo'](0x35 * _0x3971ad, 0x35 * _0x3971ad), _0x1a682f['bezierCurveTo'](0x3d * _0x3971ad, 0x46 * _0x3971ad, 0x3d * _0x3971ad, 0x46 * _0x3971ad, 0x45 * _0x3971ad, 0x57 * _0x3971ad), _0x1a682f['bezierCurveTo'](0x43 * _0x3971ad, 0x6a * _0x3971ad, 0x43 * _0x3971ad, 0x6a * _0x3971ad, 0x41 * _0x3971ad, 0x7d * _0x3971ad), _0x1a682f['bezierCurveTo'](0x36 * _0x3971ad, 0x82 * _0x3971ad, 0x33 * _0x3971ad, 0x82 * _0x3971ad, 0x29 * _0x3971ad, 0x7d * _0x3971ad), _0x1a682f['bezierCurveTo'](0x27 * _0x3971ad, 0x69 * _0x3971ad, 0x27 * _0x3971ad, 0x69 * _0x3971ad, 0x25 * _0x3971ad, 0x55 * _0x3971ad), _0x1a682f['closePath'](), fill_path(_0x1a682f, _0x3f79d8[0x0]), _0x1a682f['translate'](-0x14 * _0x3971ad, -0x14 * _0x3971ad), _0x1a682f['globalAlpha'] = 0x1, _0x1a682f['save'](), _0x1a682f['translate'](0x36 * _0x3971ad, 389.5 * _0x3971ad), _0x1a682f['rotate'](0x0), round_rect(_0x1a682f, -0xf * _0x3971ad, -228.5 * _0x3971ad, 0x1e * _0x3971ad, 0x1c9 * _0x3971ad, 0xa * _0x3971ad), _0x1a682f['restore'](), fill_path(_0x1a682f, _0x3f79d8[0x1], _0x3f79d8[0x2], 0x8 * _0x3971ad), _0x1a682f['beginPath'](), _0x1a682f['lineCap'] = 'round', _0x1a682f['lineJoin'] = 'round', _0x1a682f['moveTo'](0x23 * _0x3971ad, 0x243 * _0x3971ad), _0x1a682f['bezierCurveTo'](0x2f * _0x3971ad, 0x24b * _0x3971ad, 0x3d * _0x3971ad, 0x248 * _0x3971ad, 0x47 * _0x3971ad, 0x243 * _0x3971ad), _0x1a682f['bezierCurveTo'](0x4b * _0x3971ad, 597.5 * _0x3971ad, 0x4b * _0x3971ad, 597.5 * _0x3971ad, 0x4f * _0x3971ad, 0x268 * _0x3971ad), _0x1a682f['bezierCurveTo'](66.5 * _0x3971ad, 0x274 * _0x3971ad, 66.5 * _0x3971ad, 0x274 * _0x3971ad, 0x36 * _0x3971ad, 0x280 * _0x3971ad), _0x1a682f['bezierCurveTo'](0x29 * _0x3971ad, 628.5 * _0x3971ad, 0x29 * _0x3971ad, 628.5 * _0x3971ad, 0x1c * _0x3971ad, 0x269 * _0x3971ad), _0x1a682f['closePath'](), fill_path(_0x1a682f, _0x3f79d8[0x3], _0x3f79d8[0x4], 0x8 * _0x3971ad), _0x1a682f['beginPath'](), _0x1a682f['lineCap'] = 'round', _0x1a682f['lineJoin'] = 'round', _0x1a682f['moveTo'](0x1e * _0x3971ad, 0x8d * _0x3971ad), _0x1a682f['bezierCurveTo'](0x28 * _0x3971ad, 0x88 * _0x3971ad, 0x28 * _0x3971ad, 0x88 * _0x3971ad, 0x32 * _0x3971ad, 0x83 * _0x3971ad), _0x1a682f['bezierCurveTo'](0x3f * _0x3971ad, 0x88 * _0x3971ad, 0x3f * _0x3971ad, 0x88 * _0x3971ad, 0x4c * _0x3971ad, 0x8d * _0x3971ad), _0x1a682f['bezierCurveTo'](72.5 * _0x3971ad, 161.5 * _0x3971ad, 72.5 * _0x3971ad, 161.5 * _0x3971ad, 0x45 * _0x3971ad, 0xb6 * _0x3971ad), _0x1a682f['bezierCurveTo'](61.5 * _0x3971ad, 186.5 * _0x3971ad, 61.5 * _0x3971ad, 186.5 * _0x3971ad, 0x36 * _0x3971ad, 0xbf * _0x3971ad), _0x1a682f['bezierCurveTo'](0x2d * _0x3971ad, 186.5 * _0x3971ad, 0x2d * _0x3971ad, 186.5 * _0x3971ad, 0x24 * _0x3971ad, 0xb6 * _0x3971ad), _0x1a682f['closePath'](), fill_path(_0x1a682f, _0x3f79d8[0x3], _0x3f79d8[0x4], 0x8 * _0x3971ad), _0x1a682f['beginPath'](), _0x1a682f['lineCap'] = 'round', _0x1a682f['lineJoin'] = 'round', _0x1a682f['moveTo'](0x2a * _0x3971ad, 0x98 * _0x3971ad), _0x1a682f['bezierCurveTo'](0x35 * _0x3971ad, 0x98 * _0x3971ad, 0x35 * _0x3971ad, 0x98 * _0x3971ad, 0x40 * _0x3971ad, 0x98 * _0x3971ad), _0x1a682f['bezierCurveTo'](0x3e * _0x3971ad, 0xab * _0x3971ad, 0x3e * _0x3971ad, 0xb0 * _0x3971ad, 0x37 * _0x3971ad, 0xb1 * _0x3971ad), _0x1a682f['bezierCurveTo'](0x2a * _0x3971ad, 0xb0 * _0x3971ad, 0x2d * _0x3971ad, 0xae * _0x3971ad, 0x2a * _0x3971ad, 0x98 * _0x3971ad), _0x1a682f['closePath'](), fill_path(_0x1a682f, _0x3f79d8[0x5]), _0x1a682f['beginPath'](), _0x1a682f['lineCap'] = 'round', _0x1a682f['lineJoin'] = 'round', _0x1a682f['moveTo'](0x34 * _0x3971ad, 0x1c * _0x3971ad), _0x1a682f['bezierCurveTo'](67.5 * _0x3971ad, 0x37 * _0x3971ad, 67.5 * _0x3971ad, 0x37 * _0x3971ad, 0x53 * _0x3971ad, 0x52 * _0x3971ad), _0x1a682f['bezierCurveTo'](0x50 * _0x3971ad, 106.5 * _0x3971ad, 0x50 * _0x3971ad, 106.5 * _0x3971ad, 0x4d * _0x3971ad, 0x83 * _0x3971ad), _0x1a682f['bezierCurveTo'](0x3a * _0x3971ad, 0x93 * _0x3971ad, 0x2c * _0x3971ad, 0x8d * _0x3971ad, 0x1d * _0x3971ad, 0x83 * _0x3971ad), _0x1a682f['bezierCurveTo'](26.5 * _0x3971ad, 106.5 * _0x3971ad, 26.5 * _0x3971ad, 106.5 * _0x3971ad, 0x18 * _0x3971ad, 0x52 * _0x3971ad), _0x1a682f['closePath'](), fill_path(_0x1a682f, _0x3f79d8[0x6], _0x3f79d8[0x7], 0x8 * _0x3971ad), _0x1a682f['beginPath'](), _0x1a682f['lineCap'] = 'round', _0x1a682f['lineJoin'] = 'round', _0x1a682f['moveTo'](0x35 * _0x3971ad, 0x35 * _0x3971ad), _0x1a682f['bezierCurveTo'](0x3d * _0x3971ad, 0x46 * _0x3971ad, 0x3d * _0x3971ad, 0x46 * _0x3971ad, 0x45 * _0x3971ad, 0x57 * _0x3971ad), _0x1a682f['bezierCurveTo'](0x43 * _0x3971ad, 0x6a * _0x3971ad, 0x43 * _0x3971ad, 0x6a * _0x3971ad, 0x41 * _0x3971ad, 0x7d * _0x3971ad), _0x1a682f['bezierCurveTo'](0x36 * _0x3971ad, 0x82 * _0x3971ad, 0x33 * _0x3971ad, 0x82 * _0x3971ad, 0x29 * _0x3971ad, 0x7d * _0x3971ad), _0x1a682f['bezierCurveTo'](0x27 * _0x3971ad, 0x69 * _0x3971ad, 0x27 * _0x3971ad, 0x69 * _0x3971ad, 0x25 * _0x3971ad, 0x55 * _0x3971ad), _0x1a682f['closePath'](), fill_path(_0x1a682f, _0x3f79d8[0x8]), _0x500965;
}

function create_spear(_0x4f93b4, _0xe5b388, _0x54d245) {
    var _0x56ea5f = document['createElement']('canvas'),
        _0xc4caed = _0x56ea5f['getContext']('2d');
    return _0x56ea5f['width'] = 0x51 * _0x4f93b4, _0x56ea5f['height'] = 0x15e * _0x4f93b4, _0xc4caed['globalAlpha'] = _0xe5b388 ? 0.6 : 0x1, _0xc4caed['translate'](0x0, 0x5 * _0x4f93b4), _0xc4caed['save'](), _0xc4caed['translate'](0x23 * _0x4f93b4, 0xa0 * _0x4f93b4), _0xc4caed['rotate'](0x0), round_rect(_0xc4caed, -0x6 * _0x4f93b4, -100.5 * _0x4f93b4, 0xc * _0x4f93b4, 0xf0 * _0x4f93b4, 0xa * _0x4f93b4), _0xc4caed['restore'](), fill_path(_0xc4caed, _0x54d245[0x0]), _0xc4caed['translate'](0x0, -0x5 * _0x4f93b4), _0xc4caed['beginPath'](), _0xc4caed['lineCap'] = 'round', _0xc4caed['lineJoin'] = 'round', _0xc4caed['save'](), _0xc4caed['translate'](-0x6 * _0x4f93b4, 0xb * _0x4f93b4), _0xc4caed['moveTo'](26.0714111328125 * _0x4f93b4, 50.9 * _0x4f93b4), _0xc4caed['bezierCurveTo'](32.0714111328125 * _0x4f93b4, 35.892852783203125 * _0x4f93b4, 39.0714111328125 * _0x4f93b4, 18.892852783203125 * _0x4f93b4, 45.0714111328125 * _0x4f93b4, 7.892852783203125 * _0x4f93b4), _0xc4caed['bezierCurveTo'](51.0714111328125 * _0x4f93b4, 13.892852783203125 * _0x4f93b4, 56.0714111328125 * _0x4f93b4, 36.892852783203125 * _0x4f93b4, 60.0714111328125 * _0x4f93b4, 50.892852783203125 * _0x4f93b4), _0xc4caed['bezierCurveTo'](52.5714111328125 * _0x4f93b4, 58.892852783203125 * _0x4f93b4, 52.5714111328125 * _0x4f93b4, 58.892852783203125 * _0x4f93b4, 45.0714111328125 * _0x4f93b4, 66.89285278320312 * _0x4f93b4), _0xc4caed['bezierCurveTo'](37.0714111328125 * _0x4f93b4, 58.892852783203125 * _0x4f93b4, 37.0714111328125 * _0x4f93b4, 58.892852783203125 * _0x4f93b4, 29.0714111328125 * _0x4f93b4, 50.892852783203125 * _0x4f93b4), _0xc4caed['closePath'](), fill_path(_0xc4caed, _0x54d245[0x0]), _0xc4caed['restore'](), _0xc4caed['globalAlpha'] = 0x1, _0xc4caed['save'](), _0xc4caed['translate'](0x0, -0xa * _0x4f93b4), _0xc4caed['translate'](45.0714111328125 * _0x4f93b4, 149.39285278320312 * _0x4f93b4), _0xc4caed['rotate'](0x0), round_rect(_0xc4caed, -0x6 * _0x4f93b4, -94.5 * _0x4f93b4, 0xc * _0x4f93b4, 0xfa * _0x4f93b4, 0xa * _0x4f93b4), _0xc4caed['restore'](), fill_path(_0xc4caed, _0x54d245[0x1], _0x54d245[0x2], 0x6 * _0x4f93b4), _0xc4caed['translate'](0x0, 0x0 * _0x4f93b4), _0xc4caed['beginPath'](), _0xc4caed['lineCap'] = 'round', _0xc4caed['lineJoin'] = 'round', _0xc4caed['moveTo'](29.0714111328125 * _0x4f93b4, 50.9 * _0x4f93b4), _0xc4caed['bezierCurveTo'](32.0714111328125 * _0x4f93b4, 35.892852783203125 * _0x4f93b4, 39.0714111328125 * _0x4f93b4, 18.892852783203125 * _0x4f93b4, 45.0714111328125 * _0x4f93b4, 7.892852783203125 * _0x4f93b4), _0xc4caed['bezierCurveTo'](51.0714111328125 * _0x4f93b4, 13.892852783203125 * _0x4f93b4, 56.0714111328125 * _0x4f93b4, 36.892852783203125 * _0x4f93b4, 60.0714111328125 * _0x4f93b4, 50.892852783203125 * _0x4f93b4), _0xc4caed['bezierCurveTo'](52.5714111328125 * _0x4f93b4, 58.892852783203125 * _0x4f93b4, 52.5714111328125 * _0x4f93b4, 58.892852783203125 * _0x4f93b4, 45.0714111328125 * _0x4f93b4, 66.89285278320312 * _0x4f93b4), _0xc4caed['bezierCurveTo'](37.0714111328125 * _0x4f93b4, 58.892852783203125 * _0x4f93b4, 37.0714111328125 * _0x4f93b4, 58.892852783203125 * _0x4f93b4, 29.0714111328125 * _0x4f93b4, 50.892852783203125 * _0x4f93b4), _0xc4caed['closePath'](), fill_path(_0xc4caed, _0x54d245[0x3], _0x54d245[0x4], 0x6 * _0x4f93b4), _0x56ea5f;
}

function create_dragon_spear(_0x4b0664, _0x4f2343, _0x49a747) {
    var _0x3d3aaf = document['createElement']('canvas'),
        _0x35e501 = _0x3d3aaf['getContext']('2d');
    return _0x3d3aaf['width'] = 0x2b * _0x4b0664, _0x3d3aaf['height'] = 0xd1 * _0x4b0664, _0x35e501['globalAlpha'] = _0x4f2343 ? 0.5 : 0x1, _0x35e501['translate'](0x0, 0xa * _0x4b0664), _0x35e501['translate'](0x5 * _0x4b0664, 0x5 * _0x4b0664), _0x35e501['save'](), _0x35e501['translate'](0x15 * _0x4b0664, 102.5 * _0x4b0664), round_rect(_0x35e501, -0x4 * _0x4b0664, -76.5 * _0x4b0664, 0x8 * _0x4b0664, 0xa3 * _0x4b0664, 0xa * _0x4b0664), _0x35e501['restore'](), fill_path(_0x35e501, _0x49a747[0x0]), _0x35e501['translate'](0x0, 0xa * _0x4b0664), _0x35e501['beginPath'](), _0x35e501['lineCap'] = 'round', _0x35e501['lineJoin'] = 'round', _0x35e501['moveTo'](0x14 * _0x4b0664, 0xa * _0x4b0664), _0x35e501['bezierCurveTo'](0x19 * _0x4b0664, 25.5 * _0x4b0664, 0x19 * _0x4b0664, 25.5 * _0x4b0664, 0x1e * _0x4b0664, 0x29 * _0x4b0664), _0x35e501['bezierCurveTo'](25.5 * _0x4b0664, 38.5 * _0x4b0664, 25.5 * _0x4b0664, 38.5 * _0x4b0664, 0x15 * _0x4b0664, 0x24 * _0x4b0664), _0x35e501['bezierCurveTo'](0x10 * _0x4b0664, 38.5 * _0x4b0664, 0x10 * _0x4b0664, 38.5 * _0x4b0664, 0xb * _0x4b0664, 0x29 * _0x4b0664), _0x35e501['closePath'](), fill_path(_0x35e501, _0x49a747[0x0]), _0x35e501['beginPath'](), _0x35e501['lineCap'] = 'round', _0x35e501['lineJoin'] = 'round', _0x35e501['moveTo'](0x15 * _0x4b0664, 0x1 * _0x4b0664), _0x35e501['bezierCurveTo'](0x1c * _0x4b0664, 0x12 * _0x4b0664, 0x1c * _0x4b0664, 0x12 * _0x4b0664, 0x23 * _0x4b0664, 0x23 * _0x4b0664), _0x35e501['bezierCurveTo'](28.5 * _0x4b0664, 0x20 * _0x4b0664, 28.5 * _0x4b0664, 0x20 * _0x4b0664, 0x16 * _0x4b0664, 0x1d * _0x4b0664), _0x35e501['bezierCurveTo'](14.5 * _0x4b0664, 32.5 * _0x4b0664, 14.5 * _0x4b0664, 32.5 * _0x4b0664, 0x7 * _0x4b0664, 0x24 * _0x4b0664), _0x35e501['closePath'](), fill_path(_0x35e501, _0x49a747[0x0]), _0x35e501['beginPath'](), _0x35e501['lineCap'] = 'round', _0x35e501['lineJoin'] = 'round', _0x35e501['moveTo'](0xe * _0x4b0664, 0x92 * _0x4b0664), _0x35e501['bezierCurveTo'](0x15 * _0x4b0664, 0x92 * _0x4b0664, 0x15 * _0x4b0664, 0x92 * _0x4b0664, 0x1c * _0x4b0664, 0x92 * _0x4b0664), _0x35e501['bezierCurveTo'](27.5 * _0x4b0664, 147.5 * _0x4b0664, 27.5 * _0x4b0664, 147.5 * _0x4b0664, 0x1b * _0x4b0664, 0x95 * _0x4b0664), _0x35e501['bezierCurveTo'](0x1b * _0x4b0664, 0xa0 * _0x4b0664, 0x1b * _0x4b0664, 0xa0 * _0x4b0664, 0x1b * _0x4b0664, 0xab * _0x4b0664), _0x35e501['bezierCurveTo'](27.5 * _0x4b0664, 171.5 * _0x4b0664, 27.5 * _0x4b0664, 171.5 * _0x4b0664, 0x1c * _0x4b0664, 0xac * _0x4b0664), _0x35e501['bezierCurveTo'](0x15 * _0x4b0664, 0xac * _0x4b0664, 0x15 * _0x4b0664, 0xac * _0x4b0664, 0xe * _0x4b0664, 0xac * _0x4b0664), _0x35e501['bezierCurveTo'](0xe * _0x4b0664, 171.5 * _0x4b0664, 0xe * _0x4b0664, 171.5 * _0x4b0664, 0xe * _0x4b0664, 0xab * _0x4b0664), _0x35e501['bezierCurveTo'](14.5 * _0x4b0664, 171.5 * _0x4b0664, 14.5 * _0x4b0664, 171.5 * _0x4b0664, 0xf * _0x4b0664, 0xac * _0x4b0664), _0x35e501['bezierCurveTo'](0xf * _0x4b0664, 160.5 * _0x4b0664, 0xf * _0x4b0664, 160.5 * _0x4b0664, 0xf * _0x4b0664, 0x95 * _0x4b0664), _0x35e501['closePath'](), fill_path(_0x35e501, _0x49a747[0x0]), _0x35e501['beginPath'](), _0x35e501['lineCap'] = 'round', _0x35e501['lineJoin'] = 'round', _0x35e501['moveTo'](0x15 * _0x4b0664, 0x6 * _0x4b0664), _0x35e501['bezierCurveTo'](26.5 * _0x4b0664, 18.5 * _0x4b0664, 26.5 * _0x4b0664, 18.5 * _0x4b0664, 0x20 * _0x4b0664, 0x1f * _0x4b0664), _0x35e501['bezierCurveTo'](0x1b * _0x4b0664, 0x1d * _0x4b0664, 0x1b * _0x4b0664, 0x1d * _0x4b0664, 0x16 * _0x4b0664, 0x1b * _0x4b0664), _0x35e501['closePath'](), fill_path(_0x35e501, _0x49a747[0x0]), _0x35e501['translate'](0x0, -0x14 * _0x4b0664), _0x35e501['globalAlpha'] = 0x1, _0x35e501['translate'](0x0, 0xa * _0x4b0664), _0x35e501['translate'](-0x5 * _0x4b0664, -0x5 * _0x4b0664), _0x35e501['save'](), _0x35e501['translate'](0x15 * _0x4b0664, 102.5 * _0x4b0664), round_rect(_0x35e501, -0x4 * _0x4b0664, -76.5 * _0x4b0664, 0x8 * _0x4b0664, 0xa3 * _0x4b0664, 0xa * _0x4b0664), _0x35e501['restore'](), fill_path(_0x35e501, _0x49a747[0x1], _0x49a747[0x2], 0x4 * _0x4b0664), _0x35e501['translate'](0x0, 0xa * _0x4b0664), _0x35e501['beginPath'](), _0x35e501['lineCap'] = 'round', _0x35e501['lineJoin'] = 'round', _0x35e501['moveTo'](0x14 * _0x4b0664, 0xa * _0x4b0664), _0x35e501['bezierCurveTo'](0x19 * _0x4b0664, 25.5 * _0x4b0664, 0x19 * _0x4b0664, 25.5 * _0x4b0664, 0x1e * _0x4b0664, 0x29 * _0x4b0664), _0x35e501['bezierCurveTo'](25.5 * _0x4b0664, 38.5 * _0x4b0664, 25.5 * _0x4b0664, 38.5 * _0x4b0664, 0x15 * _0x4b0664, 0x24 * _0x4b0664), _0x35e501['bezierCurveTo'](0x10 * _0x4b0664, 38.5 * _0x4b0664, 0x10 * _0x4b0664, 38.5 * _0x4b0664, 0xb * _0x4b0664, 0x29 * _0x4b0664), _0x35e501['closePath'](), fill_path(_0x35e501, _0x49a747[0x3], _0x49a747[0x4], 0x4 * _0x4b0664), _0x35e501['beginPath'](), _0x35e501['lineCap'] = 'round', _0x35e501['lineJoin'] = 'round', _0x35e501['moveTo'](0x15 * _0x4b0664, 0x1 * _0x4b0664), _0x35e501['bezierCurveTo'](0x1c * _0x4b0664, 0x12 * _0x4b0664, 0x1c * _0x4b0664, 0x12 * _0x4b0664, 0x23 * _0x4b0664, 0x23 * _0x4b0664), _0x35e501['bezierCurveTo'](28.5 * _0x4b0664, 0x20 * _0x4b0664, 28.5 * _0x4b0664, 0x20 * _0x4b0664, 0x16 * _0x4b0664, 0x1d * _0x4b0664), _0x35e501['bezierCurveTo'](14.5 * _0x4b0664, 32.5 * _0x4b0664, 14.5 * _0x4b0664, 32.5 * _0x4b0664, 0x7 * _0x4b0664, 0x24 * _0x4b0664), _0x35e501['closePath'](), fill_path(_0x35e501, _0x49a747[0x5], _0x49a747[0x6], 0x4 * _0x4b0664), _0x35e501['translate'](0x0, 0x0 * _0x4b0664), _0x35e501['beginPath'](), _0x35e501['lineCap'] = 'round', _0x35e501['lineJoin'] = 'round', _0x35e501['moveTo'](0xe * _0x4b0664, 0x92 * _0x4b0664), _0x35e501['bezierCurveTo'](0x15 * _0x4b0664, 0x92 * _0x4b0664, 0x15 * _0x4b0664, 0x92 * _0x4b0664, 0x1c * _0x4b0664, 0x92 * _0x4b0664), _0x35e501['bezierCurveTo'](27.5 * _0x4b0664, 147.5 * _0x4b0664, 27.5 * _0x4b0664, 147.5 * _0x4b0664, 0x1b * _0x4b0664, 0x95 * _0x4b0664), _0x35e501['bezierCurveTo'](0x1b * _0x4b0664, 0xa0 * _0x4b0664, 0x1b * _0x4b0664, 0xa0 * _0x4b0664, 0x1b * _0x4b0664, 0xab * _0x4b0664), _0x35e501['bezierCurveTo'](27.5 * _0x4b0664, 171.5 * _0x4b0664, 27.5 * _0x4b0664, 171.5 * _0x4b0664, 0x1c * _0x4b0664, 0xac * _0x4b0664), _0x35e501['bezierCurveTo'](0x15 * _0x4b0664, 0xac * _0x4b0664, 0x15 * _0x4b0664, 0xac * _0x4b0664, 0xe * _0x4b0664, 0xac * _0x4b0664), _0x35e501['bezierCurveTo'](0xe * _0x4b0664, 171.5 * _0x4b0664, 0xe * _0x4b0664, 171.5 * _0x4b0664, 0xe * _0x4b0664, 0xab * _0x4b0664), _0x35e501['bezierCurveTo'](14.5 * _0x4b0664, 171.5 * _0x4b0664, 14.5 * _0x4b0664, 171.5 * _0x4b0664, 0xf * _0x4b0664, 0xac * _0x4b0664), _0x35e501['bezierCurveTo'](0xf * _0x4b0664, 160.5 * _0x4b0664, 0xf * _0x4b0664, 160.5 * _0x4b0664, 0xf * _0x4b0664, 0x95 * _0x4b0664), _0x35e501['closePath'](), fill_path(_0x35e501, _0x49a747[0x1], _0x49a747[0x2], 0x4 * _0x4b0664), _0x35e501['beginPath'](), _0x35e501['lineCap'] = 'round', _0x35e501['lineJoin'] = 'round', _0x35e501['moveTo'](0x15 * _0x4b0664, 0x6 * _0x4b0664), _0x35e501['bezierCurveTo'](26.5 * _0x4b0664, 18.5 * _0x4b0664, 26.5 * _0x4b0664, 18.5 * _0x4b0664, 0x20 * _0x4b0664, 0x1f * _0x4b0664), _0x35e501['bezierCurveTo'](0x1b * _0x4b0664, 0x1d * _0x4b0664, 0x1b * _0x4b0664, 0x1d * _0x4b0664, 0x16 * _0x4b0664, 0x1b * _0x4b0664), _0x35e501['closePath'](), fill_path(_0x35e501, _0x49a747[0x8]), _0x3d3aaf;
}

function create_plus_chest(_0x317425, _0x401e9a, _0x21d9e0) {
    var _0x5357bc = document['createElement']('canvas'),
        _0x30ced2 = _0x5357bc['getContext']('2d');
    return _0x5357bc['width'] = 0xc8 * _0x317425, _0x5357bc['height'] = 0xc8 * _0x317425, _0x30ced2['save'](), _0x30ced2['translate'](0x70 * _0x317425, 0x9e * _0x317425), round_rect(_0x30ced2, -86.5 * _0x317425, -0x56 * _0x317425, 0x96 * _0x317425, 0x23 * _0x317425, 0x14 * _0x317425), _0x30ced2['restore'](), fill_path(_0x30ced2, _0x21d9e0[0x0]), _0x30ced2['save'](), _0x30ced2['translate'](0xaa * _0x317425, 0x64 * _0x317425), round_rect(_0x30ced2, -86.5 * _0x317425, -0x56 * _0x317425, 0x23 * _0x317425, 0x96 * _0x317425, 0x14 * _0x317425), _0x30ced2['restore'](), fill_path(_0x30ced2, _0x21d9e0[0x0]), _0x5357bc;
}

function create_chest_slot(_0x285278, _0x224330, _0xa02e63) {
    var _0x30021a = document['createElement']('canvas'),
        _0x592c4d = _0x30021a['getContext']('2d');
    return _0x30021a['width'] = 0x76 * _0x285278, _0x30021a['height'] = 0x81 * _0x285278, _0x592c4d['save'](), _0x592c4d['translate'](0x5a * _0x285278, 0x5a * _0x285278), round_rect(_0x592c4d, -86.5 * _0x285278, -0x56 * _0x285278, 0x6e * _0x285278, 0x6e * _0x285278, 0xf * _0x285278), _0x592c4d['restore'](), fill_path(_0x592c4d, _0xa02e63[0x0], _0xa02e63[0x1], 0x4), _0x592c4d['save'](), round_rect(_0x592c4d, 0x1e * _0x285278, 0x73 * _0x285278, 0x3c * _0x285278, 0x5 * _0x285278, 0xf * _0x285278), _0x592c4d['restore'](), fill_path(_0x592c4d, _0xa02e63[0x2], _0xa02e63[0x3], 0x4), _0x592c4d['save'](), round_rect(_0x592c4d, 0x32 * _0x285278, 0x75 * _0x285278, 0x14 * _0x285278, 0xa * _0x285278, 0xf * _0x285278), _0x592c4d['restore'](), fill_path(_0x592c4d, _0xa02e63[0x2]), _0x30021a;
}

function create_chest(_0x449fec, _0x22dda2, _0x4c9e0e) {
    var _0x3a9c41 = document['createElement']('canvas'),
        _0x1ad08e = _0x3a9c41['getContext']('2d');
    return _0x3a9c41['width'] = 0xa5 * _0x449fec, _0x3a9c41['height'] = 0x7b * _0x449fec, _0x1ad08e['save'](), _0x1ad08e['translate'](0x51 * _0x449fec, 0x41 * _0x449fec), round_rect(_0x1ad08e, -0x4e * _0x449fec, -54.5 * _0x449fec, 0x9c * _0x449fec, 0x6d * _0x449fec, 0x14 * _0x449fec), _0x1ad08e['restore'](), fill_path(_0x1ad08e, _0x4c9e0e[0x0]), _0x1ad08e['save'](), _0x1ad08e['translate'](0x51 * _0x449fec, 0x3a * _0x449fec), round_rect(_0x1ad08e, -0x4e * _0x449fec, -54.5 * _0x449fec, 0x9c * _0x449fec, 0x6d * _0x449fec, 0x14 * _0x449fec), _0x1ad08e['restore'](), fill_path(_0x1ad08e, _0x4c9e0e[0x1], _0x4c9e0e[0x2], 0x4), _0x1ad08e['save'](), _0x1ad08e['translate'](0x51 * _0x449fec, 0x3a * _0x449fec), round_rect(_0x1ad08e, -0x45 * _0x449fec, -0x2f * _0x449fec, 0x8a * _0x449fec, 0x5d * _0x449fec, 0xf * _0x449fec), _0x1ad08e['restore'](), fill_path(_0x1ad08e, _0x4c9e0e[0x3], _0x4c9e0e[0x4], 0x4), _0x1ad08e['save'](), _0x1ad08e['translate'](0x4f * _0x449fec, 0x36 * _0x449fec), round_rect(_0x1ad08e, -0x22 * _0x449fec, -0x28 * _0x449fec, 0x44 * _0x449fec, 0x58 * _0x449fec, 0xd * _0x449fec), _0x1ad08e['restore'](), fill_path(_0x1ad08e, undefined, _0x4c9e0e[0x5], 0x4), _0x1ad08e['beginPath'](), _0x1ad08e['lineCap'] = 'round', _0x1ad08e['lineJoin'] = 'round', _0x1ad08e['moveTo'](0x2c * _0x449fec, 0xd * _0x449fec), _0x1ad08e['bezierCurveTo'](43.5 * _0x449fec, 0x37 * _0x449fec, 43.5 * _0x449fec, 0x37 * _0x449fec, 0x2b * _0x449fec, 0x65 * _0x449fec), _0x1ad08e['closePath'](), fill_path(_0x1ad08e, undefined, _0x4c9e0e[0x6], 0x4), _0x1ad08e['beginPath'](), _0x1ad08e['lineCap'] = 'round', _0x1ad08e['lineJoin'] = 'round', _0x1ad08e['moveTo'](0x73 * _0x449fec, 0xd * _0x449fec), _0x1ad08e['bezierCurveTo'](0x73 * _0x449fec, 0x38 * _0x449fec, 0x73 * _0x449fec, 0x38 * _0x449fec, 0x73 * _0x449fec, 0x65 * _0x449fec), _0x1ad08e['closePath'](), fill_path(_0x1ad08e, undefined, _0x4c9e0e[0x6], 0x4), _0x1ad08e['beginPath'](), _0x1ad08e['lineCap'] = 'round', _0x1ad08e['lineJoin'] = 'round', _0x1ad08e['moveTo'](0x23 * _0x449fec, 0x6 * _0x449fec), _0x1ad08e['bezierCurveTo'](0x23 * _0x449fec, 0x38 * _0x449fec, 0x24 * _0x449fec, 0x6d * _0x449fec, 0x23 * _0x449fec, 0x6e * _0x449fec), _0x1ad08e['closePath'](), fill_path(_0x1ad08e, undefined, _0x4c9e0e[0x7], 0x4), _0x1ad08e['beginPath'](), _0x1ad08e['lineCap'] = 'round', _0x1ad08e['lineJoin'] = 'round', _0x1ad08e['moveTo'](0x7b * _0x449fec, 0x6 * _0x449fec), _0x1ad08e['bezierCurveTo'](0x7b * _0x449fec, 0x38 * _0x449fec, 0x7b * _0x449fec, 0x38 * _0x449fec, 0x7b * _0x449fec, 0x6e * _0x449fec), _0x1ad08e['closePath'](), fill_path(_0x1ad08e, undefined, _0x4c9e0e[0x7], 0x4), _0x1ad08e['save'](), _0x1ad08e['translate'](0x4f * _0x449fec, 0x71 * _0x449fec), round_rect(_0x1ad08e, -0x12 * _0x449fec, -0x2 * _0x449fec, 0x24 * _0x449fec, 0x4 * _0x449fec, 0x14 * _0x449fec), _0x1ad08e['restore'](), fill_path(_0x1ad08e, undefined, _0x4c9e0e[0x8], 0x4), _0x1ad08e['save'](), _0x1ad08e['translate'](0x4b * _0x449fec, 0x76 * _0x449fec), round_rect(_0x1ad08e, -0x6 * _0x449fec, -2.5 * _0x449fec, 0x14 * _0x449fec, 0x5 * _0x449fec, 0x14 * _0x449fec), _0x1ad08e['restore'](), fill_path(_0x1ad08e, _0x4c9e0e[0x8]), _0x3a9c41;
}

function create_bag(_0x2da5a8, _0x4c5f1a, _0x5b1736) {
    var _0x12d5a0 = document['createElement']('canvas'),
        _0x2d30c2 = _0x12d5a0['getContext']('2d');
    return _0x12d5a0['width'] = 0x56 * _0x2da5a8, _0x12d5a0['height'] = 0x2d * _0x2da5a8, _0x2d30c2['beginPath'](), _0x2d30c2['lineCap'] = 'round', _0x2d30c2['lineJoin'] = 'round', _0x2d30c2['moveTo'](0xf * _0x2da5a8, 0xf * _0x2da5a8), _0x2d30c2['bezierCurveTo'](0x10 * _0x2da5a8, 0xf * _0x2da5a8, 19.5 * _0x2da5a8, 0x9 * _0x2da5a8, 0x18 * _0x2da5a8, 0x2 * _0x2da5a8), _0x2d30c2['bezierCurveTo'](0x29 * _0x2da5a8, 0x2 * _0x2da5a8, 0x29 * _0x2da5a8, 0x2 * _0x2da5a8, 0x3a * _0x2da5a8, 0x2 * _0x2da5a8), _0x2d30c2['bezierCurveTo'](0x40 * _0x2da5a8, 0xd * _0x2da5a8, 0x3d * _0x2da5a8, 0x8 * _0x2da5a8, 0x41 * _0x2da5a8, 0xd * _0x2da5a8), _0x2d30c2['closePath'](), fill_path(_0x2d30c2, _0x5b1736[0x0], _0x5b1736[0x1], 0x4), _0x2d30c2['save'](), _0x2d30c2['translate'](0x2b * _0x2da5a8, 0x1b * _0x2da5a8), _0x2d30c2['rotate'](0x0), round_rect(_0x2d30c2, -0x28 * _0x2da5a8, -0xf * _0x2da5a8, 0x50 * _0x2da5a8, 0x1e * _0x2da5a8, 0xa * _0x2da5a8), _0x2d30c2['restore'](), fill_path(_0x2d30c2, _0x5b1736[0x0], _0x5b1736[0x1], 0x4), _0x2d30c2['save'](), _0x2d30c2['translate'](0x2b * _0x2da5a8, 0x21 * _0x2da5a8), _0x2d30c2['rotate'](0x0), round_rect(_0x2d30c2, -0x11 * _0x2da5a8, -4.5 * _0x2da5a8, 0x22 * _0x2da5a8, 0x9 * _0x2da5a8, 0xa * _0x2da5a8), _0x2d30c2['restore'](), fill_path(_0x2d30c2, _0x5b1736[0x0], _0x5b1736[0x1], 0x4), _0x12d5a0;
}

function create_fur(_0x2a5e5f, _0x342747, _0x2c9036) {
    var _0x50ad3c = document['createElement']('canvas'),
        _0x4b0f46 = _0x50ad3c['getContext']('2d');
    return _0x50ad3c['width'] = 0x5c * _0x2a5e5f, _0x50ad3c['height'] = 0x6c * _0x2a5e5f, _0x4b0f46['beginPath'](), _0x4b0f46['lineCap'] = 'round', _0x4b0f46['lineJoin'] = 'round', _0x4b0f46['moveTo'](0x1f * _0x2a5e5f, 0xa * _0x2a5e5f), _0x4b0f46['bezierCurveTo'](0x25 * _0x2a5e5f, 0x2 * _0x2a5e5f, 0x31 * _0x2a5e5f, 0x0 * _0x2a5e5f, 0x3d * _0x2a5e5f, 0xf * _0x2a5e5f), _0x4b0f46['bezierCurveTo'](0x51 * _0x2a5e5f, 0x1f * _0x2a5e5f, 0x4e * _0x2a5e5f, 0x19 * _0x2a5e5f, 0x4f * _0x2a5e5f, 0x25 * _0x2a5e5f), _0x4b0f46['bezierCurveTo'](0x4c * _0x2a5e5f, 0x2c * _0x2a5e5f, 0x51 * _0x2a5e5f, 0x38 * _0x2a5e5f, 0x55 * _0x2a5e5f, 0x3f * _0x2a5e5f), _0x4b0f46['bezierCurveTo'](0x5b * _0x2a5e5f, 0x47 * _0x2a5e5f, 0x5a * _0x2a5e5f, 0x4e * _0x2a5e5f, 0x53 * _0x2a5e5f, 0x54 * _0x2a5e5f), _0x4b0f46['bezierCurveTo'](0x3c * _0x2a5e5f, 0x62 * _0x2a5e5f, 0x43 * _0x2a5e5f, 0x5f * _0x2a5e5f, 0x39 * _0x2a5e5f, 0x66 * _0x2a5e5f), _0x4b0f46['bezierCurveTo'](0x2f * _0x2a5e5f, 0x6a * _0x2a5e5f, 0x2b * _0x2a5e5f, 0x6a * _0x2a5e5f, 0x1f * _0x2a5e5f, 0x62 * _0x2a5e5f), _0x4b0f46['bezierCurveTo'](0x16 * _0x2a5e5f, 0x5b * _0x2a5e5f, 0x11 * _0x2a5e5f, 0x59 * _0x2a5e5f, 0x7 * _0x2a5e5f, 0x54 * _0x2a5e5f), _0x4b0f46['bezierCurveTo'](0x1 * _0x2a5e5f, 0x4d * _0x2a5e5f, 0x4 * _0x2a5e5f, 0x49 * _0x2a5e5f, 0x7 * _0x2a5e5f, 0x3c * _0x2a5e5f), _0x4b0f46['bezierCurveTo'](0xb * _0x2a5e5f, 0x32 * _0x2a5e5f, 0x5 * _0x2a5e5f, 0x20 * _0x2a5e5f, 0xf * _0x2a5e5f, 0x1b * _0x2a5e5f), _0x4b0f46['bezierCurveTo'](0x1a * _0x2a5e5f, 0x12 * _0x2a5e5f, 0x1a * _0x2a5e5f, 0x18 * _0x2a5e5f, 0x1f * _0x2a5e5f, 0xa * _0x2a5e5f), _0x4b0f46['closePath'](), fill_path(_0x4b0f46, _0x2c9036[0x0], _0x2c9036[0x1], 0x4), _0x50ad3c;
}

function create_verified(_0x57495a, _0x4f9848) {
    var _0x177cb1 = document['createElement']('canvas'),
        _0x4e2bb2 = _0x177cb1['getContext']('2d');
    return _0x177cb1['width'] = 0x3c * _0x57495a, _0x177cb1['height'] = 0x3c * _0x57495a, _0x4e2bb2['translate'](-0x19 * _0x57495a, -0x19 * _0x57495a), _0x4e2bb2['translate'](0x0, 0x5 * _0x57495a), _0x4e2bb2['beginPath'](), _0x4e2bb2['lineCap'] = 'round', _0x4e2bb2['lineJoin'] = 'round', _0x4e2bb2['moveTo'](0x18 * _0x57495a, 0x32 * _0x57495a), _0x4e2bb2['bezierCurveTo'](32.5 * _0x57495a, 54.5 * _0x57495a, 32.5 * _0x57495a, 54.5 * _0x57495a, 0x29 * _0x57495a, 0x3b * _0x57495a), _0x4e2bb2['bezierCurveTo'](0x39 * _0x57495a, 0x2f * _0x57495a, 0x39 * _0x57495a, 0x2f * _0x57495a, 0x49 * _0x57495a, 0x23 * _0x57495a), _0x4e2bb2['bezierCurveTo'](0x39 * _0x57495a, 0x35 * _0x57495a, 0x39 * _0x57495a, 0x35 * _0x57495a, 0x29 * _0x57495a, 0x47 * _0x57495a), _0x4e2bb2['closePath'](), fill_path(_0x4e2bb2, _0x4f9848[0x0]), _0x4e2bb2['translate'](0x0, -0x5 * _0x57495a), _0x4e2bb2['beginPath'](), _0x4e2bb2['lineCap'] = 'round', _0x4e2bb2['lineJoin'] = 'round', _0x4e2bb2['moveTo'](0x18 * _0x57495a, 0x32 * _0x57495a), _0x4e2bb2['bezierCurveTo'](32.5 * _0x57495a, 54.5 * _0x57495a, 32.5 * _0x57495a, 54.5 * _0x57495a, 0x29 * _0x57495a, 0x3b * _0x57495a), _0x4e2bb2['bezierCurveTo'](0x39 * _0x57495a, 0x2f * _0x57495a, 0x39 * _0x57495a, 0x2f * _0x57495a, 0x49 * _0x57495a, 0x23 * _0x57495a), _0x4e2bb2['bezierCurveTo'](0x39 * _0x57495a, 0x35 * _0x57495a, 0x39 * _0x57495a, 0x35 * _0x57495a, 0x29 * _0x57495a, 0x47 * _0x57495a), _0x4e2bb2['closePath'](), fill_path(_0x4e2bb2, _0x4f9848[0x1]), _0x177cb1;
}

function create_earmuff(_0x5b8138, _0x3df5a7, _0x389047) {
    var _0x51da1c = document['createElement']('canvas'),
        _0x2d8aef = _0x51da1c['getContext']('2d');
    return _0x51da1c['width'] = 0x97 * _0x5b8138, _0x51da1c['height'] = 0x50 * _0x5b8138, _0x2d8aef['beginPath'](), _0x2d8aef['lineCap'] = 'round', _0x2d8aef['lineJoin'] = 'round', _0x2d8aef['moveTo'](0x85 * _0x5b8138, 0x36 * _0x5b8138), _0x2d8aef['bezierCurveTo'](0x88 * _0x5b8138, 0x12 * _0x5b8138, 0x81 * _0x5b8138, 0x12 * _0x5b8138, 0x72 * _0x5b8138, 0xd * _0x5b8138), _0x2d8aef['bezierCurveTo'](0x33 * _0x5b8138, 0x0 * _0x5b8138, 0x24 * _0x5b8138, 0x10 * _0x5b8138, 0x22 * _0x5b8138, 0x10 * _0x5b8138), _0x2d8aef['bezierCurveTo'](0x8 * _0x5b8138, 0x1c * _0x5b8138, 0x16 * _0x5b8138, 0x38 * _0x5b8138, 0x15 * _0x5b8138, 0x39 * _0x5b8138), _0x2d8aef['closePath'](), fill_path(_0x2d8aef, _0x389047[0x2], _0x389047[0x3], 0x4), _0x2d8aef['beginPath'](), _0x2d8aef['lineCap'] = 'round', _0x2d8aef['lineJoin'] = 'round', _0x2d8aef['moveTo'](0x82 * _0x5b8138, 0x28 * _0x5b8138), _0x2d8aef['bezierCurveTo'](0x84 * _0x5b8138, 0x23 * _0x5b8138, 0x84 * _0x5b8138, 0x1e * _0x5b8138, 0x84 * _0x5b8138, 0x1d * _0x5b8138), _0x2d8aef['bezierCurveTo'](0x91 * _0x5b8138, 0x26 * _0x5b8138, 0x90 * _0x5b8138, 0x2b * _0x5b8138, 0x89 * _0x5b8138, 0x36 * _0x5b8138), _0x2d8aef['closePath'](), fill_path(_0x2d8aef, _0x389047[0x0], _0x389047[0x1], 0x4), _0x2d8aef['beginPath'](), _0x2d8aef['lineCap'] = 'round', _0x2d8aef['lineJoin'] = 'round', _0x2d8aef['moveTo'](0x14 * _0x5b8138, 0x21 * _0x5b8138), _0x2d8aef['bezierCurveTo'](0x18 * _0x5b8138, 0x2c * _0x5b8138, 0xd7 * _0x5b8138, 0x27 * _0x5b8138, 0x17 * _0x5b8138, 0x2c * _0x5b8138), _0x2d8aef['bezierCurveTo'](0x13 * _0x5b8138, 0x31 * _0x5b8138, 0x13 * _0x5b8138, 0x31 * _0x5b8138, 0xf * _0x5b8138, 0x36 * _0x5b8138), _0x2d8aef['bezierCurveTo'](0x4 * _0x5b8138, 0x2b * _0x5b8138, 0xa * _0x5b8138, 0x23 * _0x5b8138, 0x14 * _0x5b8138, 0x20 * _0x5b8138), _0x2d8aef['closePath'](), fill_path(_0x2d8aef, _0x389047[0x0], _0x389047[0x1], 0x4), _0x2d8aef['beginPath'](), _0x2d8aef['lineCap'] = 'round', _0x2d8aef['lineJoin'] = 'round', _0x2d8aef['moveTo'](0x12 * _0x5b8138, 0x34 * _0x5b8138), _0x2d8aef['bezierCurveTo'](0x18 * _0x5b8138, 0x1f * _0x5b8138, 0x22 * _0x5b8138, 0x19 * _0x5b8138, 0x4b * _0x5b8138, 0x17 * _0x5b8138), _0x2d8aef['bezierCurveTo'](0x82 * _0x5b8138, 0x18 * _0x5b8138, 0x81 * _0x5b8138, 0x20 * _0x5b8138, 0x86 * _0x5b8138, 0x33 * _0x5b8138), _0x2d8aef['bezierCurveTo'](0x8a * _0x5b8138, 0x46 * _0x5b8138, 0x7e * _0x5b8138, 0x48 * _0x5b8138, 0x5a * _0x5b8138, 0x49 * _0x5b8138), _0x2d8aef['bezierCurveTo'](0x12 * _0x5b8138, 0x48 * _0x5b8138, 0xf * _0x5b8138, 0x44 * _0x5b8138, 0x12 * _0x5b8138, 0x36 * _0x5b8138), _0x2d8aef['closePath'](), fill_path(_0x2d8aef, _0x389047[0x0], _0x389047[0x1], 0x4), _0x51da1c;
}

function create_cap_scarf(_0x148814, _0x33d805, _0x39c5f0) {
    var _0x47bfb4 = document['createElement']('canvas'),
        _0x593688 = _0x47bfb4['getContext']('2d');
    return _0x47bfb4['width'] = 0x8a * _0x148814, _0x47bfb4['height'] = 0x85 * _0x148814, _0x593688['globalAlpha'] = _0x33d805 ? 0.3 : 0x1, _0x593688['translate'](0x0, 0x5 * _0x148814), _0x593688['beginPath'](), _0x593688['lineCap'] = 'round', _0x593688['lineJoin'] = 'round', _0x593688['moveTo'](0x1a * _0x148814, 79.640625 * _0x148814), _0x593688['bezierCurveTo'](0xd * _0x148814, 84.640625 * _0x148814, 0x9 * _0x148814, 86.640625 * _0x148814, 0x7 * _0x148814, 78.640625 * _0x148814), _0x593688['bezierCurveTo'](0x6 * _0x148814, 69.640625 * _0x148814, 0xf * _0x148814, 67.640625 * _0x148814, 0x1f * _0x148814, 62.640625 * _0x148814), _0x593688['bezierCurveTo'](0x3f * _0x148814, 55.640625 * _0x148814, 0x55 * _0x148814, 57.640625 * _0x148814, 0x68 * _0x148814, 63.640625 * _0x148814), _0x593688['bezierCurveTo'](0x83 * _0x148814, 69.640625 * _0x148814, 0x84 * _0x148814, 71.640625 * _0x148814, 0x83 * _0x148814, 78.640625 * _0x148814), _0x593688['bezierCurveTo'](0x83 * _0x148814, 91.640625 * _0x148814, 0x70 * _0x148814, 80.640625 * _0x148814, 0x5b * _0x148814, 75.640625 * _0x148814), _0x593688['bezierCurveTo'](0x33 * _0x148814, 70.640625 * _0x148814, 0x2d * _0x148814, 74.640625 * _0x148814, 0x1c * _0x148814, 78.640625 * _0x148814), _0x593688['closePath'](), fill_path(_0x593688, _0x39c5f0[0x0]), _0x593688['beginPath'](), _0x593688['lineCap'] = 'round', _0x593688['lineJoin'] = 'round', _0x593688['moveTo'](0x8 * _0x148814, 82.640625 * _0x148814), _0x593688['bezierCurveTo'](0x28 * _0x148814, 107.640625 * _0x148814, 0x35 * _0x148814, 104.640625 * _0x148814, 0x43 * _0x148814, 106.640625 * _0x148814), _0x593688['bezierCurveTo'](0x65 * _0x148814, 103.640625 * _0x148814, 0x75 * _0x148814, 93.640625 * _0x148814, 0x7f * _0x148814, 84.640625 * _0x148814), _0x593688['bezierCurveTo'](0x87 * _0x148814, 95.640625 * _0x148814, 0x83 * _0x148814, 107.640625 * _0x148814, 0x6e * _0x148814, 118.640625 * _0x148814), _0x593688['bezierCurveTo'](0x4e * _0x148814, 129.640625 * _0x148814, 0x43 * _0x148814, 130.640625 * _0x148814, 0x1b * _0x148814, 119.640625 * _0x148814), _0x593688['bezierCurveTo'](0x0 * _0x148814, 105.640625 * _0x148814, 0x8 * _0x148814, 83.640625 * _0x148814, 0xa * _0x148814, 84.640625 * _0x148814), _0x593688['closePath'](), fill_path(_0x593688, _0x39c5f0[0x0]), _0x593688['globalAlpha'] = 0x1, _0x593688['translate'](0x0, -0x5 * _0x148814), _0x593688['beginPath'](), _0x593688['lineCap'] = 'round', _0x593688['lineJoin'] = 'round', _0x593688['moveTo'](0x8 * _0x148814, 73.640625 * _0x148814), _0x593688['bezierCurveTo'](0x7 * _0x148814, 23.640625 * _0x148814, 0x21 * _0x148814, 19.640625 * _0x148814, 0x47 * _0x148814, 17.640625 * _0x148814), _0x593688['bezierCurveTo'](0x81 * _0x148814, 19.640625 * _0x148814, 0x82 * _0x148814, 45.640625 * _0x148814, 0x82 * _0x148814, 76.640625 * _0x148814), _0x593688['bezierCurveTo'](0x5a * _0x148814, 63.640625 * _0x148814, 0x55 * _0x148814, 63.640625 * _0x148814, 0x49 * _0x148814, 63.640625 * _0x148814), _0x593688['bezierCurveTo'](0x26 * _0x148814, 63.640625 * _0x148814, 0x21 * _0x148814, 66.640625 * _0x148814, 0x8 * _0x148814, 73.640625 * _0x148814), _0x593688['closePath'](), fill_path(_0x593688, _0x39c5f0[0x1], _0x39c5f0[0x2], 0x4 * _0x148814), _0x593688['beginPath'](), _0x593688['lineCap'] = 'round', _0x593688['lineJoin'] = 'round', _0x593688['moveTo'](0x48 * _0x148814, 28.640625 * _0x148814), _0x593688['bezierCurveTo'](0x33 * _0x148814, 25.640625 * _0x148814, 0x38 * _0x148814, 7.640625 * _0x148814, 0x46 * _0x148814, 5.640625 * _0x148814), _0x593688['bezierCurveTo'](0x5e * _0x148814, 7.640625 * _0x148814, 0x57 * _0x148814, 29.640625 * _0x148814, 0x48 * _0x148814, 28.640625 * _0x148814), _0x593688['closePath'](), fill_path(_0x593688, _0x39c5f0[0x3], _0x39c5f0[0x2], 0x4 * _0x148814), _0x593688['beginPath'](), _0x593688['lineCap'] = 'round', _0x593688['lineJoin'] = 'round', _0x593688['moveTo'](0x33 * _0x148814, 26.640625 * _0x148814), _0x593688['bezierCurveTo'](0x2a * _0x148814, 29.640625 * _0x148814, 0x2b * _0x148814, 31.640625 * _0x148814, 0x2a * _0x148814, 37.640625 * _0x148814), fill_path(_0x593688, undefined, _0x39c5f0[0x2], 0x4 * _0x148814), _0x593688['beginPath'](), _0x593688['lineCap'] = 'round', _0x593688['lineJoin'] = 'round', _0x593688['moveTo'](0x5a * _0x148814, 26.640625 * _0x148814), _0x593688['bezierCurveTo'](0x64 * _0x148814, 28.640625 * _0x148814, 0x62 * _0x148814, 34.640625 * _0x148814, 0x63 * _0x148814, 38.640625 * _0x148814), fill_path(_0x593688, undefined, _0x39c5f0[0x2], 0x4 * _0x148814), _0x593688['beginPath'](), _0x593688['lineCap'] = 'round', _0x593688['lineJoin'] = 'round', _0x593688['moveTo'](0x1a * _0x148814, 79.640625 * _0x148814), _0x593688['bezierCurveTo'](0xd * _0x148814, 84.640625 * _0x148814, 0x9 * _0x148814, 86.640625 * _0x148814, 0x7 * _0x148814, 78.640625 * _0x148814), _0x593688['bezierCurveTo'](0x6 * _0x148814, 69.640625 * _0x148814, 0xf * _0x148814, 67.640625 * _0x148814, 0x1f * _0x148814, 62.640625 * _0x148814), _0x593688['bezierCurveTo'](0x3f * _0x148814, 55.640625 * _0x148814, 0x55 * _0x148814, 57.640625 * _0x148814, 0x68 * _0x148814, 63.640625 * _0x148814), _0x593688['bezierCurveTo'](0x83 * _0x148814, 69.640625 * _0x148814, 0x84 * _0x148814, 71.640625 * _0x148814, 0x83 * _0x148814, 78.640625 * _0x148814), _0x593688['bezierCurveTo'](0x83 * _0x148814, 91.640625 * _0x148814, 0x70 * _0x148814, 80.640625 * _0x148814, 0x5b * _0x148814, 75.640625 * _0x148814), _0x593688['bezierCurveTo'](0x33 * _0x148814, 70.640625 * _0x148814, 0x2d * _0x148814, 74.640625 * _0x148814, 0x1c * _0x148814, 78.640625 * _0x148814), _0x593688['closePath'](), fill_path(_0x593688, _0x39c5f0[0x3], _0x39c5f0[0x4], 0x4 * _0x148814), _0x593688['beginPath'](), _0x593688['lineCap'] = 'round', _0x593688['lineJoin'] = 'round', _0x593688['moveTo'](0x8 * _0x148814, 82.640625 * _0x148814), _0x593688['bezierCurveTo'](0x28 * _0x148814, 107.640625 * _0x148814, 0x35 * _0x148814, 104.640625 * _0x148814, 0x43 * _0x148814, 106.640625 * _0x148814), _0x593688['bezierCurveTo'](0x65 * _0x148814, 103.640625 * _0x148814, 0x75 * _0x148814, 93.640625 * _0x148814, 0x7f * _0x148814, 84.640625 * _0x148814), _0x593688['bezierCurveTo'](0x87 * _0x148814, 95.640625 * _0x148814, 0x83 * _0x148814, 107.640625 * _0x148814, 0x6e * _0x148814, 118.640625 * _0x148814), _0x593688['bezierCurveTo'](0x4e * _0x148814, 129.640625 * _0x148814, 0x43 * _0x148814, 130.640625 * _0x148814, 0x1b * _0x148814, 119.640625 * _0x148814), _0x593688['bezierCurveTo'](0x0 * _0x148814, 105.640625 * _0x148814, 0x8 * _0x148814, 83.640625 * _0x148814, 0xa * _0x148814, 84.640625 * _0x148814), _0x593688['closePath'](), fill_path(_0x593688, _0x39c5f0[0x3], _0x39c5f0[0x4], 0x4 * _0x148814), _0x47bfb4;
}

function create_spike(_0x338a30, _0x35874f, _0x496b0b) {
    var _0x19cfa1 = document['createElement']('canvas'),
        _0x57e958 = _0x19cfa1['getContext']('2d'),
        _0x2595e3 = _0x338a30 * 0xaa,
        _0x58a2cc = _0x338a30 * 0xac,
        _0xb39040 = _0x2595e3 / 0x2,
        _0x5a282e = _0x58a2cc / 0x2;
    _0x19cfa1['width'] = _0x2595e3, _0x19cfa1['height'] = _0x58a2cc, _0x57e958['translate'](_0xb39040, _0x5a282e + 0x7 * _0x338a30), _0x57e958['globalAlpha'] = _0x35874f ? 0.5 : 0x0, circle(_0x57e958, 0x0, 0x0, 0x3c * _0x338a30), fill_path(_0x57e958, _0x496b0b[0x0]), _0x57e958['globalAlpha'] = 0x1, _0x57e958['translate'](0x0, -0x7 * _0x338a30), _0x57e958['save']();
    for (var _0x363d41 = 0x0; _0x363d41 < 0xa; _0x363d41++) {
        _0x57e958['rotate'](Math['PI'] / 0x5), _0x57e958['save'](), _0x57e958['translate'](0x41 * _0x338a30, 0x0), round_regular_polygon(_0x57e958, 0x3, 0x14 * _0x338a30, 0x4 * _0x338a30), fill_path(_0x57e958, _0x496b0b[0x1], _0x496b0b[0x2], 0x4 * _0x338a30), _0x57e958['restore']();
    }
    return _0x57e958['restore'](), circle(_0x57e958, 0x0, 0x0, 0x3c * _0x338a30, 0x0), fill_path(_0x57e958, _0x496b0b[0x3], _0x496b0b[0x4], 0x4 * _0x338a30), circle(_0x57e958, 0x0, 0x0, 0x28 * _0x338a30), fill_path(_0x57e958, _0x496b0b[0x5]), circle(_0x57e958, 0x0, 0x0, 0x19 * _0x338a30), fill_path(_0x57e958, _0x496b0b[0x6], _0x496b0b[0x7], 0x8 * _0x338a30), _0x19cfa1;
}

function create_spiketimer(_0x1b0858, _0x5a4d93) {
    var _0xb18c8a = document['createElement']('canvas'),
        _0x47bee5 = _0xb18c8a['getContext']('2d'),
        _0x3a2bcc = _0x1b0858 * 0xaa,
        _0x46bd04 = _0x1b0858 * 0xac,
        _0x23c21e = _0x3a2bcc / 0x2,
        _0x426eb0 = _0x46bd04 / 0x2;
    _0xb18c8a['width'] = _0x3a2bcc, _0xb18c8a['height'] = _0x46bd04, _0x47bee5['translate'](_0x23c21e, _0x426eb0), _0x47bee5['save']();
    for (var _0xb64e64 = 0x0; _0xb64e64 < 0xa; _0xb64e64++) {
        _0x47bee5['rotate'](Math['PI'] / 0x5), _0x47bee5['save'](), _0x47bee5['translate'](0x41 * _0x1b0858, 0x0), round_regular_polygon(_0x47bee5, 0x3, 0x12 * _0x1b0858, 0x4 * _0x1b0858), fill_path(_0x47bee5, _0x5a4d93[0x0]), _0x47bee5['restore']();
    }
    return _0x47bee5['restore'](), circle(_0x47bee5, 0x0, 0x0, 0x28 * _0x1b0858, 0x0), fill_path(_0x47bee5, undefined, _0x5a4d93[0x0], 0x6 * _0x1b0858), circle(_0x47bee5, 0x0, 0x0, 0x14 * _0x1b0858, 0x0), fill_path(_0x47bee5, _0x5a4d93[0x0]), _0xb18c8a;
}

function create_spike_stone(_0x7305a4, _0x324c29, _0x2a1181) {
    var _0x5ce3fa = document['createElement']('canvas'),
        _0x257c4d = _0x5ce3fa['getContext']('2d');
    _0x5ce3fa['width'] = 0xaa * _0x7305a4, _0x5ce3fa['height'] = 0xaa * _0x7305a4, _0x257c4d['globalAlpha'] = _0x324c29 ? 0.5 : 0x1, _0x257c4d['translate'](0x0, 0x5 * _0x7305a4), _0x257c4d['save'](), _0x257c4d['translate'](0x55 * _0x7305a4, 0x58 * _0x7305a4), _0x257c4d['rotate'](1.4), round_regular_polygon(_0x257c4d, 0x7, 0x3c * _0x7305a4, 0xa * _0x7305a4), _0x257c4d['restore'](), fill_path(_0x257c4d, _0x2a1181[0x0]), _0x257c4d['globalAlpha'] = 0x1, _0x257c4d['translate'](0x55 * _0x7305a4, 0x50 * _0x7305a4);
    for (var _0x2a4536 = 0x0; _0x2a4536 < 0xa; _0x2a4536++) {
        _0x257c4d['rotate'](Math['PI'] / 0x5), _0x257c4d['save'](), _0x257c4d['translate'](0x41 * _0x7305a4, 0x0), round_regular_polygon(_0x257c4d, 0x3, 0x15 * _0x7305a4, 0x4 * _0x7305a4), fill_path(_0x257c4d, _0x2a1181[0x1], _0x2a1181[0x2], 0x4 * _0x7305a4), _0x257c4d['restore']();
    }
    return _0x257c4d['save'](), _0x257c4d['translate'](0x0 * _0x7305a4, 0x0 * _0x7305a4), _0x257c4d['rotate'](1.4), round_regular_polygon(_0x257c4d, 0x7, 0x3c * _0x7305a4, 0xa * _0x7305a4), fill_path(_0x257c4d, _0x2a1181[0x3], _0x2a1181[0x4], 0x4 * _0x7305a4), _0x257c4d['rotate'](0.64), round_regular_polygon(_0x257c4d, 0x7, 0x28 * _0x7305a4, 0xa * _0x7305a4), fill_path(_0x257c4d, _0x2a1181[0x5], _0x2a1181[0x6], 0x4 * _0x7305a4), _0x257c4d['rotate'](0.12), round_regular_polygon(_0x257c4d, 0x7, 0x17 * _0x7305a4, 0x5 * _0x7305a4), _0x257c4d['restore'](), fill_path(_0x257c4d, _0x2a1181[0x7]), _0x5ce3fa;
}

function create_spike_gold(_0x19b569, _0x479e6f, _0x3b60b8) {
    var _0x134ed8 = document['createElement']('canvas'),
        _0x2e9cd4 = _0x134ed8['getContext']('2d');
    _0x134ed8['width'] = 0xaa * _0x19b569, _0x134ed8['height'] = 0xaa * _0x19b569, _0x2e9cd4['globalAlpha'] = _0x479e6f ? 0.5 : 0x1, _0x2e9cd4['translate'](0x0, 0x3 * _0x19b569), _0x2e9cd4['save'](), _0x2e9cd4['translate'](0x55 * _0x19b569, 0x5f * _0x19b569), _0x2e9cd4['rotate'](1.4), round_regular_polygon(_0x2e9cd4, 0x7, 0x3c * _0x19b569, 0xa * _0x19b569), _0x2e9cd4['restore'](), fill_path(_0x2e9cd4, _0x3b60b8[0x0]), _0x2e9cd4['globalAlpha'] = 0x1, _0x2e9cd4['translate'](0x55 * _0x19b569, 0x52 * _0x19b569);
    for (var _0x267553 = 0x0; _0x267553 < 0xa; _0x267553++) {
        _0x2e9cd4['rotate'](Math['PI'] / 0x5), _0x2e9cd4['save'](), _0x2e9cd4['translate'](0x41 * _0x19b569, 0x0), round_regular_polygon(_0x2e9cd4, 0x3, 0x15 * _0x19b569, 0x4 * _0x19b569), fill_path(_0x2e9cd4, _0x3b60b8[0x1], _0x3b60b8[0x2], 0x4 * _0x19b569), _0x2e9cd4['restore']();
    }
    return _0x2e9cd4['save'](), _0x2e9cd4['translate'](0x0 * _0x19b569, 0x0 * _0x19b569), _0x2e9cd4['rotate'](0x1), round_regular_polygon(_0x2e9cd4, 0x8, 0x3c * _0x19b569, 0xa * _0x19b569), fill_path(_0x2e9cd4, _0x3b60b8[0x3], _0x3b60b8[0x4], 0x4 * _0x19b569), _0x2e9cd4['rotate'](0.56), round_regular_polygon(_0x2e9cd4, 0x8, 0x28 * _0x19b569, 0xa * _0x19b569), fill_path(_0x2e9cd4, _0x3b60b8[0x5], _0x3b60b8[0x6], 0x4 * _0x19b569), _0x2e9cd4['rotate'](0.28), round_regular_polygon(_0x2e9cd4, 0x8, 0x1c * _0x19b569, 0x8 * _0x19b569), fill_path(_0x2e9cd4, _0x3b60b8[0x7]), _0x2e9cd4['restore'](), _0x134ed8;
}

function create_spike_diamond(_0x78bf32, _0x514a38, _0x329dd0) {
    var _0x19979e = document['createElement']('canvas'),
        _0x380bc2 = _0x19979e['getContext']('2d');
    _0x19979e['width'] = 0xaa * _0x78bf32, _0x19979e['height'] = 0xaa * _0x78bf32, _0x380bc2['translate'](0x0, 0x3 * _0x78bf32), _0x380bc2['globalAlpha'] = _0x514a38 ? 0.5 : 0x1, _0x380bc2['save'](), _0x380bc2['translate'](0x55 * _0x78bf32, 0x5f * _0x78bf32), _0x380bc2['rotate'](1.4), round_regular_polygon(_0x380bc2, 0x7, 0x3c * _0x78bf32, 0xa * _0x78bf32), _0x380bc2['restore'](), fill_path(_0x380bc2, _0x329dd0[0x0]), _0x380bc2['globalAlpha'] = 0x1, _0x380bc2['translate'](0x55 * _0x78bf32, 0x52 * _0x78bf32);
    for (var _0x57cec6 = 0x0; _0x57cec6 < 0xa; _0x57cec6++) {
        _0x380bc2['rotate'](Math['PI'] / 0x5), _0x380bc2['save'](), _0x380bc2['translate'](0x41 * _0x78bf32, 0x0), round_regular_polygon(_0x380bc2, 0x3, 0x15 * _0x78bf32, 0x4 * _0x78bf32), fill_path(_0x380bc2, _0x329dd0[0x1], _0x329dd0[0x2], 0x4 * _0x78bf32), _0x380bc2['restore']();
    }
    return _0x380bc2['save'](), _0x380bc2['translate'](0x0 * _0x78bf32, 0x0 * _0x78bf32), _0x380bc2['rotate'](0.2), round_regular_polygon(_0x380bc2, 0x9, 0x3c * _0x78bf32, 0xa * _0x78bf32), fill_path(_0x380bc2, _0x329dd0[0x3], _0x329dd0[0x4], 0x4 * _0x78bf32), _0x380bc2['rotate'](-0.32), round_regular_polygon(_0x380bc2, 0x9, 0x26 * _0x78bf32, 0xa * _0x78bf32), fill_path(_0x380bc2, _0x329dd0[0x5], _0x329dd0[0x6], 0x4 * _0x78bf32), _0x380bc2['rotate'](0.68), round_regular_polygon(_0x380bc2, 0x9, 0x14 * _0x78bf32, 0x8 * _0x78bf32), fill_path(_0x380bc2, _0x329dd0[0x7], _0x329dd0[0x8], 0x6 * _0x78bf32), _0x380bc2['restore'](), _0x19979e;
}

function create_hammer(_0x4ecc8e, _0x24a462, _0x42a345) {
    var _0x5674d2 = document['createElement']('canvas'),
        _0x47cc67 = _0x5674d2['getContext']('2d');
    return _0x5674d2['width'] = 0x45 * _0x4ecc8e, _0x5674d2['height'] = 0x78 * _0x4ecc8e, _0x47cc67['globalAlpha'] = _0x24a462 ? 0.5 : 0x1, _0x47cc67['save'](), _0x47cc67['translate'](0x1e * _0x4ecc8e, 0x54 * _0x4ecc8e), round_rect(_0x47cc67, -0x6 * _0x4ecc8e, -66.5 * _0x4ecc8e, 0x8 * _0x4ecc8e, 0x64 * _0x4ecc8e, 0xa * _0x4ecc8e), _0x47cc67['restore'](), fill_path(_0x47cc67, _0x42a345[0x0]), _0x47cc67['save'](), _0x47cc67['translate'](0x1e * _0x4ecc8e, 0x2d * _0x4ecc8e), round_rect(_0x47cc67, -9.5 * _0x4ecc8e, -6.5 * _0x4ecc8e, 0x10 * _0x4ecc8e, 0xd * _0x4ecc8e, 0xa * _0x4ecc8e), _0x47cc67['restore'](), fill_path(_0x47cc67, _0x42a345[0x0]), _0x47cc67['save'](), _0x47cc67['translate'](0x1e * _0x4ecc8e, 0x11 * _0x4ecc8e), round_rect(_0x47cc67, -7.5 * _0x4ecc8e, -5.5 * _0x4ecc8e, 0xc * _0x4ecc8e, 0xb * _0x4ecc8e, 0xa * _0x4ecc8e), _0x47cc67['restore'](), fill_path(_0x47cc67, _0x42a345[0x0]), _0x47cc67['save'](), _0x47cc67['translate'](0x1e * _0x4ecc8e, 0x1f * _0x4ecc8e), round_rect(_0x47cc67, -0x1a * _0x4ecc8e, -14.5 * _0x4ecc8e, 0x34 * _0x4ecc8e, 0x1d * _0x4ecc8e, 0x5 * _0x4ecc8e), _0x47cc67['restore'](), fill_path(_0x47cc67, _0x42a345[0x0]), _0x47cc67['globalAlpha'] = 0x1, _0x47cc67['save'](), _0x47cc67['translate'](0x24 * _0x4ecc8e, 79.140625 * _0x4ecc8e), round_rect(_0x47cc67, -0x6 * _0x4ecc8e, -66.5 * _0x4ecc8e, 0x8 * _0x4ecc8e, 0x64 * _0x4ecc8e, 0xa * _0x4ecc8e), _0x47cc67['restore'](), fill_path(_0x47cc67, _0x42a345[0x1], _0x42a345[0x2], 0x3 * _0x4ecc8e), _0x47cc67['save'](), _0x47cc67['translate'](0x23 * _0x4ecc8e, 40.140625 * _0x4ecc8e), round_rect(_0x47cc67, -9.5 * _0x4ecc8e, -6.5 * _0x4ecc8e, 0x10 * _0x4ecc8e, 0xd * _0x4ecc8e, 0xa * _0x4ecc8e), _0x47cc67['restore'](), fill_path(_0x47cc67, _0x42a345[0x3], _0x42a345[0x4], 0x3 * _0x4ecc8e), _0x47cc67['save'](), _0x47cc67['translate'](0x23 * _0x4ecc8e, 12.140625 * _0x4ecc8e), round_rect(_0x47cc67, -7.5 * _0x4ecc8e, -5.5 * _0x4ecc8e, 0xc * _0x4ecc8e, 0xb * _0x4ecc8e, 0xa * _0x4ecc8e), _0x47cc67['restore'](), fill_path(_0x47cc67, _0x42a345[0x3], _0x42a345[0x4], 0x3 * _0x4ecc8e), _0x47cc67['save'](), _0x47cc67['translate'](34.5 * _0x4ecc8e, 26.140625 * _0x4ecc8e), round_rect(_0x47cc67, -0x1a * _0x4ecc8e, -14.5 * _0x4ecc8e, 0x34 * _0x4ecc8e, 0x1d * _0x4ecc8e, 0x5 * _0x4ecc8e), _0x47cc67['restore'](), fill_path(_0x47cc67, _0x42a345[0x3], _0x42a345[0x4], 0x3 * _0x4ecc8e), _0x5674d2;
}

function create_clock_day(_0x2d084f) {
    var _0x5666fe = document['createElement']('canvas'),
        _0x23080c = _0x5666fe['getContext']('2d');
    return _0x5666fe['width'] = 0x141 * _0x2d084f, _0x5666fe['height'] = 0x159 * _0x2d084f, _0x23080c['translate'](0x0, 0x5 * _0x2d084f), _0x23080c['translate'](0x0, 0x14 * _0x2d084f), circle(_0x23080c, 160.5 * _0x2d084f, 159.5 * _0x2d084f, 156.39595138242822 * _0x2d084f), fill_path(_0x23080c, '#322413', '#322413', 0x4 * _0x2d084f), _0x23080c['translate'](0x0, -0x14 * _0x2d084f), circle(_0x23080c, 160.5 * _0x2d084f, 159.5 * _0x2d084f, 156.39595138242822 * _0x2d084f), fill_path(_0x23080c, '#392C16', '#5E3E1A', 0xa * _0x2d084f), _0x23080c['beginPath'](), _0x23080c['lineCap'] = 'round', _0x23080c['lineJoin'] = 'round', _0x23080c['moveTo'](31.999969482421875 * _0x2d084f, 163.07290649414062 * _0x2d084f), _0x23080c['bezierCurveTo'](22.999969482421875 * _0x2d084f, 67.07290649414062 * _0x2d084f, 0x6a * _0x2d084f, 20.072906494140625 * _0x2d084f, 0xa2 * _0x2d084f, 23.072906494140625 * _0x2d084f), _0x23080c['bezierCurveTo'](269.9999694824219 * _0x2d084f, 31.072906494140625 * _0x2d084f, 292.9999694824219 * _0x2d084f, 120.07290649414062 * _0x2d084f, 294.9999694824219 * _0x2d084f, 161.07290649414062 * _0x2d084f), _0x23080c['bezierCurveTo'](165.49996948242188 * _0x2d084f, 162.07290649414062 * _0x2d084f, 165.49996948242188 * _0x2d084f, 162.07290649414062 * _0x2d084f, 35.999969482421875 * _0x2d084f, 163.07290649414062 * _0x2d084f), _0x23080c['closePath'](), fill_path(_0x23080c, '#12432D'), _0x23080c['beginPath'](), _0x23080c['lineCap'] = 'round', _0x23080c['lineJoin'] = 'round', _0x23080c['moveTo'](32.999969482421875 * _0x2d084f, 165.07290649414062 * _0x2d084f), _0x23080c['bezierCurveTo'](16.999969482421875 * _0x2d084f, 221.07290649414062 * _0x2d084f, 0x55 * _0x2d084f, 289.0729064941406 * _0x2d084f, 0x9c * _0x2d084f, 294.0729064941406 * _0x2d084f), _0x23080c['bezierCurveTo'](263.9999694824219 * _0x2d084f, 293.0729064941406 * _0x2d084f, 295.9999694824219 * _0x2d084f, 199.07290649414062 * _0x2d084f, 294.9999694824219 * _0x2d084f, 159.07290649414062 * _0x2d084f), _0x23080c['closePath'](), fill_path(_0x23080c, '#3A2A0D'), circle(_0x23080c, 0xa1 * _0x2d084f, 158.07290649414062 * _0x2d084f, 133.4053971921676 * _0x2d084f), fill_path(_0x23080c, undefined, '#5E3E1A', 0xa * _0x2d084f), _0x23080c['beginPath'](), _0x23080c['lineCap'] = 'round', _0x23080c['lineJoin'] = 'round', _0x23080c['moveTo'](31.999969482421875 * _0x2d084f, 161.62844848632812 * _0x2d084f), _0x23080c['bezierCurveTo'](162.49996948242188 * _0x2d084f, 161.62844848632812 * _0x2d084f, 162.49996948242188 * _0x2d084f, 161.62844848632812 * _0x2d084f, 292.9999694824219 * _0x2d084f, 161.62844848632812 * _0x2d084f), _0x23080c['closePath'](), fill_path(_0x23080c, undefined, '#5E3E1A', 0xc * _0x2d084f), _0x23080c['translate'](0x0, 0x8 * _0x2d084f), _0x23080c['beginPath'](), _0x23080c['lineCap'] = 'round', _0x23080c['lineJoin'] = 'round', _0x23080c['moveTo'](0x42 * _0x2d084f, 158.29513549804688 * _0x2d084f), _0x23080c['bezierCurveTo'](0x56 * _0x2d084f, 158.29513549804688 * _0x2d084f, 0x56 * _0x2d084f, 158.29513549804688 * _0x2d084f, 0x6a * _0x2d084f, 158.29513549804688 * _0x2d084f), _0x23080c['closePath'](), fill_path(_0x23080c, undefined, '#c7a726', 0xc * _0x2d084f), _0x23080c['beginPath'](), _0x23080c['lineCap'] = 'round', _0x23080c['lineJoin'] = 'round', _0x23080c['moveTo'](57.999969482421875 * _0x2d084f, 117.29513549804688 * _0x2d084f), _0x23080c['bezierCurveTo'](0x55 * _0x2d084f, 128.29513549804688 * _0x2d084f, 0x55 * _0x2d084f, 128.29513549804688 * _0x2d084f, 0x71 * _0x2d084f, 139.29513549804688 * _0x2d084f), _0x23080c['closePath'](), fill_path(_0x23080c, undefined, '#c7a726', 0xc * _0x2d084f), _0x23080c['beginPath'](), _0x23080c['lineCap'] = 'round', _0x23080c['lineJoin'] = 'round', _0x23080c['moveTo'](0x5f * _0x2d084f, 90.29513549804688 * _0x2d084f), _0x23080c['bezierCurveTo'](0x70 * _0x2d084f, 105.79513549804688 * _0x2d084f, 0x70 * _0x2d084f, 105.79513549804688 * _0x2d084f, 0x81 * _0x2d084f, 121.29513549804688 * _0x2d084f), _0x23080c['closePath'](), fill_path(_0x23080c, undefined, '#c7a726', 0xc * _0x2d084f), _0x23080c['beginPath'](), _0x23080c['lineCap'] = 'round', _0x23080c['lineJoin'] = 'round', _0x23080c['moveTo'](0x74 * _0x2d084f, 52.850677490234375 * _0x2d084f), _0x23080c['bezierCurveTo'](0x82 * _0x2d084f, 83.85067749023438 * _0x2d084f, 0x82 * _0x2d084f, 83.85067749023438 * _0x2d084f, 0x90 * _0x2d084f, 114.85067749023438 * _0x2d084f), _0x23080c['closePath'](), fill_path(_0x23080c, undefined, '#c7a726', 0xc * _0x2d084f), _0x23080c['beginPath'](), _0x23080c['lineCap'] = 'round', _0x23080c['lineJoin'] = 'round', _0x23080c['moveTo'](0x9f * _0x2d084f, 61.295135498046875 * _0x2d084f), _0x23080c['bezierCurveTo'](160.49996948242188 * _0x2d084f, 92.29513549804688 * _0x2d084f, 160.49996948242188 * _0x2d084f, 92.29513549804688 * _0x2d084f, 0xa0 * _0x2d084f, 123.29513549804688 * _0x2d084f), _0x23080c['closePath'](), fill_path(_0x23080c, undefined, '#c7a726', 0xc * _0x2d084f), _0x23080c['beginPath'](), _0x23080c['lineCap'] = 'round', _0x23080c['lineJoin'] = 'round', _0x23080c['moveTo'](0xcb * _0x2d084f, 51.295135498046875 * _0x2d084f), _0x23080c['bezierCurveTo'](190.49996948242188 * _0x2d084f, 83.29513549804688 * _0x2d084f, 190.49996948242188 * _0x2d084f, 83.29513549804688 * _0x2d084f, 0xb0 * _0x2d084f, 115.29513549804688 * _0x2d084f), _0x23080c['closePath'](), fill_path(_0x23080c, undefined, '#c7a726', 0xc * _0x2d084f), _0x23080c['beginPath'](), _0x23080c['lineCap'] = 'round', _0x23080c['lineJoin'] = 'round', _0x23080c['moveTo'](0xe1 * _0x2d084f, 89.29513549804688 * _0x2d084f), _0x23080c['bezierCurveTo'](210.49996948242188 * _0x2d084f, 104.79513549804688 * _0x2d084f, 210.49996948242188 * _0x2d084f, 104.79513549804688 * _0x2d084f, 0xc2 * _0x2d084f, 120.29513549804688 * _0x2d084f), _0x23080c['closePath'](), fill_path(_0x23080c, undefined, '#c7a726', 0xc * _0x2d084f), _0x23080c['beginPath'](), _0x23080c['lineCap'] = 'round', _0x23080c['lineJoin'] = 'round', _0x23080c['moveTo'](266.9999694824219 * _0x2d084f, 112.29513549804688 * _0x2d084f), _0x23080c['bezierCurveTo'](233.49996948242188 * _0x2d084f, 127.29513549804688 * _0x2d084f, 233.49996948242188 * _0x2d084f, 127.29513549804688 * _0x2d084f, 0xc7 * _0x2d084f, 142.29513549804688 * _0x2d084f), _0x23080c['closePath'](), fill_path(_0x23080c, undefined, '#c7a726', 0xc * _0x2d084f), _0x23080c['beginPath'](), _0x23080c['lineCap'] = 'round', _0x23080c['lineJoin'] = 'round', _0x23080c['moveTo'](256.9999694824219 * _0x2d084f, 155.29513549804688 * _0x2d084f), _0x23080c['bezierCurveTo'](238.49996948242188 * _0x2d084f, 156.29513549804688 * _0x2d084f, 238.49996948242188 * _0x2d084f, 156.29513549804688 * _0x2d084f, 0xdb * _0x2d084f, 157.29513549804688 * _0x2d084f), _0x23080c['closePath'](), fill_path(_0x23080c, undefined, '#c7a726', 0xc * _0x2d084f), _0x23080c['translate'](0x0, -0x8 * _0x2d084f), _0x23080c['beginPath'](), _0x23080c['lineCap'] = 'round', _0x23080c['lineJoin'] = 'round', _0x23080c['moveTo'](0x42 * _0x2d084f, 158.29513549804688 * _0x2d084f), _0x23080c['bezierCurveTo'](0x56 * _0x2d084f, 158.29513549804688 * _0x2d084f, 0x56 * _0x2d084f, 158.29513549804688 * _0x2d084f, 0x6a * _0x2d084f, 158.29513549804688 * _0x2d084f), _0x23080c['closePath'](), fill_path(_0x23080c, undefined, '#EDCE4F', 0xc * _0x2d084f), _0x23080c['beginPath'](), _0x23080c['lineCap'] = 'round', _0x23080c['lineJoin'] = 'round', _0x23080c['moveTo'](57.999969482421875 * _0x2d084f, 117.29513549804688 * _0x2d084f), _0x23080c['bezierCurveTo'](0x55 * _0x2d084f, 128.29513549804688 * _0x2d084f, 0x55 * _0x2d084f, 128.29513549804688 * _0x2d084f, 0x71 * _0x2d084f, 139.29513549804688 * _0x2d084f), _0x23080c['closePath'](), fill_path(_0x23080c, undefined, '#EDCE4F', 0xc * _0x2d084f), _0x23080c['beginPath'](), _0x23080c['lineCap'] = 'round', _0x23080c['lineJoin'] = 'round', _0x23080c['moveTo'](0x5f * _0x2d084f, 90.29513549804688 * _0x2d084f), _0x23080c['bezierCurveTo'](0x70 * _0x2d084f, 105.79513549804688 * _0x2d084f, 0x70 * _0x2d084f, 105.79513549804688 * _0x2d084f, 0x81 * _0x2d084f, 121.29513549804688 * _0x2d084f), _0x23080c['closePath'](), fill_path(_0x23080c, undefined, '#EDCE4F', 0xc * _0x2d084f), _0x23080c['beginPath'](), _0x23080c['lineCap'] = 'round', _0x23080c['lineJoin'] = 'round', _0x23080c['moveTo'](0x74 * _0x2d084f, 52.850677490234375 * _0x2d084f), _0x23080c['bezierCurveTo'](0x82 * _0x2d084f, 83.85067749023438 * _0x2d084f, 0x82 * _0x2d084f, 83.85067749023438 * _0x2d084f, 0x90 * _0x2d084f, 114.85067749023438 * _0x2d084f), _0x23080c['closePath'](), fill_path(_0x23080c, undefined, '#EDCE4F', 0xc * _0x2d084f), _0x23080c['beginPath'](), _0x23080c['lineCap'] = 'round', _0x23080c['lineJoin'] = 'round', _0x23080c['moveTo'](0x9f * _0x2d084f, 61.295135498046875 * _0x2d084f), _0x23080c['bezierCurveTo'](160.49996948242188 * _0x2d084f, 92.29513549804688 * _0x2d084f, 160.49996948242188 * _0x2d084f, 92.29513549804688 * _0x2d084f, 0xa0 * _0x2d084f, 123.29513549804688 * _0x2d084f), _0x23080c['closePath'](), fill_path(_0x23080c, undefined, '#EDCE4F', 0xc * _0x2d084f), _0x23080c['beginPath'](), _0x23080c['lineCap'] = 'round', _0x23080c['lineJoin'] = 'round', _0x23080c['moveTo'](0xcb * _0x2d084f, 51.295135498046875 * _0x2d084f), _0x23080c['bezierCurveTo'](190.49996948242188 * _0x2d084f, 83.29513549804688 * _0x2d084f, 190.49996948242188 * _0x2d084f, 83.29513549804688 * _0x2d084f, 0xb0 * _0x2d084f, 115.29513549804688 * _0x2d084f), _0x23080c['closePath'](), fill_path(_0x23080c, undefined, '#EDCE4F', 0xc * _0x2d084f), _0x23080c['beginPath'](), _0x23080c['lineCap'] = 'round', _0x23080c['lineJoin'] = 'round', _0x23080c['moveTo'](0xe1 * _0x2d084f, 89.29513549804688 * _0x2d084f), _0x23080c['bezierCurveTo'](210.49996948242188 * _0x2d084f, 104.79513549804688 * _0x2d084f, 210.49996948242188 * _0x2d084f, 104.79513549804688 * _0x2d084f, 0xc2 * _0x2d084f, 120.29513549804688 * _0x2d084f), _0x23080c['closePath'](), fill_path(_0x23080c, undefined, '#EDCE4F', 0xc * _0x2d084f), _0x23080c['beginPath'](), _0x23080c['lineCap'] = 'round', _0x23080c['lineJoin'] = 'round', _0x23080c['moveTo'](266.9999694824219 * _0x2d084f, 112.29513549804688 * _0x2d084f), _0x23080c['bezierCurveTo'](233.49996948242188 * _0x2d084f, 127.29513549804688 * _0x2d084f, 233.49996948242188 * _0x2d084f, 127.29513549804688 * _0x2d084f, 0xc7 * _0x2d084f, 142.29513549804688 * _0x2d084f), _0x23080c['closePath'](), fill_path(_0x23080c, undefined, '#EDCE4F', 0xc * _0x2d084f), _0x23080c['beginPath'](), _0x23080c['lineCap'] = 'round', _0x23080c['lineJoin'] = 'round', _0x23080c['moveTo'](256.9999694824219 * _0x2d084f, 155.29513549804688 * _0x2d084f), _0x23080c['bezierCurveTo'](238.49996948242188 * _0x2d084f, 156.29513549804688 * _0x2d084f, 238.49996948242188 * _0x2d084f, 156.29513549804688 * _0x2d084f, 0xdb * _0x2d084f, 157.29513549804688 * _0x2d084f), _0x23080c['closePath'](), fill_path(_0x23080c, undefined, '#EDCE4F', 0xc * _0x2d084f), _0x23080c['beginPath'](), _0x23080c['lineCap'] = 'round', _0x23080c['lineJoin'] = 'round', _0x23080c['moveTo'](94.00003051757812 * _0x2d084f, 164.40341186523438 * _0x2d084f), _0x23080c['bezierCurveTo'](162.50003051757812 * _0x2d084f, 164.40341186523438 * _0x2d084f, 230.00003051757812 * _0x2d084f, 165.40341186523438 * _0x2d084f, 231.00003051757812 * _0x2d084f, 164.40341186523438 * _0x2d084f), _0x23080c['bezierCurveTo'](214.00003051757812 * _0x2d084f, 267.4034118652344 * _0x2d084f, 92.00003051757812 * _0x2d084f, 243.40341186523438 * _0x2d084f, 93.00003051757812 * _0x2d084f, 165.40341186523438 * _0x2d084f), _0x23080c['closePath'](), fill_path(_0x23080c, '#704618', '#5D3D1A', 0x8 * _0x2d084f), _0x23080c['beginPath'](), _0x23080c['lineCap'] = 'round', _0x23080c['lineJoin'] = 'round', _0x23080c['moveTo'](0x60 * _0x2d084f, 0xa6 * _0x2d084f), _0x23080c['bezierCurveTo'](0x58 * _0x2d084f, 0x75 * _0x2d084f, 0x81 * _0x2d084f, 0x5c * _0x2d084f, 0xa1 * _0x2d084f, 0x5b * _0x2d084f), _0x23080c['bezierCurveTo'](0xc9 * _0x2d084f, 0x5a * _0x2d084f, 0xdf * _0x2d084f, 0x79 * _0x2d084f, 0xe6 * _0x2d084f, 0xa1 * _0x2d084f), _0x23080c['closePath'](), fill_path(_0x23080c, '#ECBE35', '#EDCE4F', 0x8 * _0x2d084f), circle(_0x23080c, 160.00003051757812 * _0x2d084f, 166.49432373046875 * _0x2d084f, 28.30194339616981 * _0x2d084f), fill_path(_0x23080c, '#392C16', '#5E3E1A', 0xa * _0x2d084f), _0x5666fe;
}

function create_clock_night(_0x54615d) {
    var _0xb92473 = document['createElement']('canvas'),
        _0x1745c4 = _0xb92473['getContext']('2d');
    return _0xb92473['width'] = 0x141 * _0x54615d, _0xb92473['height'] = 0x159 * _0x54615d, _0x1745c4['translate'](0x0, 0x5 * _0x54615d), _0x1745c4['translate'](0x0, 0x14 * _0x54615d), circle(_0x1745c4, 160.5 * _0x54615d, 159.5 * _0x54615d, 156.39595138242822 * _0x54615d), fill_path(_0x1745c4, '#322413', '#322413', 0x4 * _0x54615d), _0x1745c4['translate'](0x0, -0x14 * _0x54615d), circle(_0x1745c4, 160.5 * _0x54615d, 159.5 * _0x54615d, 156.39595138242822 * _0x54615d), fill_path(_0x1745c4, '#392C16', '#5E3E1A', 0xa * _0x54615d), _0x1745c4['beginPath'](), _0x1745c4['lineCap'] = 'round', _0x1745c4['lineJoin'] = 'round', _0x1745c4['moveTo'](31.999969482421875 * _0x54615d, 163.07290649414062 * _0x54615d), _0x1745c4['bezierCurveTo'](22.999969482421875 * _0x54615d, 67.07290649414062 * _0x54615d, 0x6a * _0x54615d, 20.072906494140625 * _0x54615d, 0xa2 * _0x54615d, 23.072906494140625 * _0x54615d), _0x1745c4['bezierCurveTo'](269.9999694824219 * _0x54615d, 31.072906494140625 * _0x54615d, 292.9999694824219 * _0x54615d, 120.07290649414062 * _0x54615d, 294.9999694824219 * _0x54615d, 161.07290649414062 * _0x54615d), _0x1745c4['bezierCurveTo'](165.49996948242188 * _0x54615d, 162.07290649414062 * _0x54615d, 165.49996948242188 * _0x54615d, 162.07290649414062 * _0x54615d, 35.999969482421875 * _0x54615d, 163.07290649414062 * _0x54615d), _0x1745c4['closePath'](), fill_path(_0x1745c4, '#3A2A0D'), _0x1745c4['beginPath'](), _0x1745c4['lineCap'] = 'round', _0x1745c4['lineJoin'] = 'round', _0x1745c4['moveTo'](32.999969482421875 * _0x54615d, 165.07290649414062 * _0x54615d), _0x1745c4['bezierCurveTo'](16.999969482421875 * _0x54615d, 221.07290649414062 * _0x54615d, 0x55 * _0x54615d, 289.0729064941406 * _0x54615d, 0x9c * _0x54615d, 294.0729064941406 * _0x54615d), _0x1745c4['bezierCurveTo'](263.9999694824219 * _0x54615d, 293.0729064941406 * _0x54615d, 295.9999694824219 * _0x54615d, 199.07290649414062 * _0x54615d, 294.9999694824219 * _0x54615d, 159.07290649414062 * _0x54615d), _0x1745c4['closePath'](), fill_path(_0x1745c4, '#071A1B'), circle(_0x1745c4, 0xa1 * _0x54615d, 158.07290649414062 * _0x54615d, 133.4053971921676 * _0x54615d), fill_path(_0x1745c4, undefined, '#5E3E1A', 0xa * _0x54615d), _0x1745c4['beginPath'](), _0x1745c4['lineCap'] = 'round', _0x1745c4['lineJoin'] = 'round', _0x1745c4['moveTo'](31.999969482421875 * _0x54615d, 161.62844848632812 * _0x54615d), _0x1745c4['bezierCurveTo'](162.49996948242188 * _0x54615d, 161.62844848632812 * _0x54615d, 162.49996948242188 * _0x54615d, 161.62844848632812 * _0x54615d, 292.9999694824219 * _0x54615d, 161.62844848632812 * _0x54615d), _0x1745c4['closePath'](), fill_path(_0x1745c4, undefined, '#5E3E1A', 0xc * _0x54615d), _0x1745c4['translate'](0x0, 0x8 * _0x54615d), _0x1745c4['beginPath'](), _0x1745c4['lineCap'] = 'round', _0x1745c4['lineJoin'] = 'round', _0x1745c4['moveTo'](0x42 * _0x54615d, 158.29513549804688 * _0x54615d), _0x1745c4['bezierCurveTo'](0x56 * _0x54615d, 158.29513549804688 * _0x54615d, 0x56 * _0x54615d, 158.29513549804688 * _0x54615d, 0x6a * _0x54615d, 158.29513549804688 * _0x54615d), _0x1745c4['closePath'](), fill_path(_0x1745c4, undefined, '#281C08', 0xc * _0x54615d), _0x1745c4['beginPath'](), _0x1745c4['lineCap'] = 'round', _0x1745c4['lineJoin'] = 'round', _0x1745c4['moveTo'](57.999969482421875 * _0x54615d, 117.29513549804688 * _0x54615d), _0x1745c4['bezierCurveTo'](0x55 * _0x54615d, 128.29513549804688 * _0x54615d, 0x55 * _0x54615d, 128.29513549804688 * _0x54615d, 0x71 * _0x54615d, 139.29513549804688 * _0x54615d), _0x1745c4['closePath'](), fill_path(_0x1745c4, undefined, '#281C08', 0xc * _0x54615d), _0x1745c4['beginPath'](), _0x1745c4['lineCap'] = 'round', _0x1745c4['lineJoin'] = 'round', _0x1745c4['moveTo'](0x5f * _0x54615d, 90.29513549804688 * _0x54615d), _0x1745c4['bezierCurveTo'](0x70 * _0x54615d, 105.79513549804688 * _0x54615d, 0x70 * _0x54615d, 105.79513549804688 * _0x54615d, 0x81 * _0x54615d, 121.29513549804688 * _0x54615d), _0x1745c4['closePath'](), fill_path(_0x1745c4, undefined, '#281C08', 0xc * _0x54615d), _0x1745c4['beginPath'](), _0x1745c4['lineCap'] = 'round', _0x1745c4['lineJoin'] = 'round', _0x1745c4['moveTo'](0x74 * _0x54615d, 52.850677490234375 * _0x54615d), _0x1745c4['bezierCurveTo'](0x82 * _0x54615d, 83.85067749023438 * _0x54615d, 0x82 * _0x54615d, 83.85067749023438 * _0x54615d, 0x90 * _0x54615d, 114.85067749023438 * _0x54615d), _0x1745c4['closePath'](), fill_path(_0x1745c4, undefined, '#281C08', 0xc * _0x54615d), _0x1745c4['beginPath'](), _0x1745c4['lineCap'] = 'round', _0x1745c4['lineJoin'] = 'round', _0x1745c4['moveTo'](0x9f * _0x54615d, 61.295135498046875 * _0x54615d), _0x1745c4['bezierCurveTo'](160.49996948242188 * _0x54615d, 92.29513549804688 * _0x54615d, 160.49996948242188 * _0x54615d, 92.29513549804688 * _0x54615d, 0xa0 * _0x54615d, 123.29513549804688 * _0x54615d), _0x1745c4['closePath'](), fill_path(_0x1745c4, undefined, '#281C08', 0xc * _0x54615d), _0x1745c4['beginPath'](), _0x1745c4['lineCap'] = 'round', _0x1745c4['lineJoin'] = 'round', _0x1745c4['moveTo'](0xcb * _0x54615d, 51.295135498046875 * _0x54615d), _0x1745c4['bezierCurveTo'](190.49996948242188 * _0x54615d, 83.29513549804688 * _0x54615d, 190.49996948242188 * _0x54615d, 83.29513549804688 * _0x54615d, 0xb0 * _0x54615d, 115.29513549804688 * _0x54615d), _0x1745c4['closePath'](), fill_path(_0x1745c4, undefined, '#281C08', 0xc * _0x54615d), _0x1745c4['beginPath'](), _0x1745c4['lineCap'] = 'round', _0x1745c4['lineJoin'] = 'round', _0x1745c4['moveTo'](0xe1 * _0x54615d, 89.29513549804688 * _0x54615d), _0x1745c4['bezierCurveTo'](210.49996948242188 * _0x54615d, 104.79513549804688 * _0x54615d, 210.49996948242188 * _0x54615d, 104.79513549804688 * _0x54615d, 0xc2 * _0x54615d, 120.29513549804688 * _0x54615d), _0x1745c4['closePath'](), fill_path(_0x1745c4, undefined, '#281C08', 0xc * _0x54615d), _0x1745c4['beginPath'](), _0x1745c4['lineCap'] = 'round', _0x1745c4['lineJoin'] = 'round', _0x1745c4['moveTo'](266.9999694824219 * _0x54615d, 112.29513549804688 * _0x54615d), _0x1745c4['bezierCurveTo'](233.49996948242188 * _0x54615d, 127.29513549804688 * _0x54615d, 233.49996948242188 * _0x54615d, 127.29513549804688 * _0x54615d, 0xc7 * _0x54615d, 142.29513549804688 * _0x54615d), _0x1745c4['closePath'](), fill_path(_0x1745c4, undefined, '#281C08', 0xc * _0x54615d), _0x1745c4['beginPath'](), _0x1745c4['lineCap'] = 'round', _0x1745c4['lineJoin'] = 'round', _0x1745c4['moveTo'](256.9999694824219 * _0x54615d, 155.29513549804688 * _0x54615d), _0x1745c4['bezierCurveTo'](238.49996948242188 * _0x54615d, 156.29513549804688 * _0x54615d, 238.49996948242188 * _0x54615d, 156.29513549804688 * _0x54615d, 0xdb * _0x54615d, 157.29513549804688 * _0x54615d), _0x1745c4['closePath'](), fill_path(_0x1745c4, undefined, '#281C08', 0xc * _0x54615d), _0x1745c4['translate'](0x0, -0x8 * _0x54615d), _0x1745c4['beginPath'](), _0x1745c4['lineCap'] = 'round', _0x1745c4['lineJoin'] = 'round', _0x1745c4['moveTo'](0x42 * _0x54615d, 158.29513549804688 * _0x54615d), _0x1745c4['bezierCurveTo'](0x56 * _0x54615d, 158.29513549804688 * _0x54615d, 0x56 * _0x54615d, 158.29513549804688 * _0x54615d, 0x6a * _0x54615d, 158.29513549804688 * _0x54615d), _0x1745c4['closePath'](), fill_path(_0x1745c4, undefined, '#5E3C10', 0xc * _0x54615d), _0x1745c4['beginPath'](), _0x1745c4['lineCap'] = 'round', _0x1745c4['lineJoin'] = 'round', _0x1745c4['moveTo'](57.999969482421875 * _0x54615d, 117.29513549804688 * _0x54615d), _0x1745c4['bezierCurveTo'](0x55 * _0x54615d, 128.29513549804688 * _0x54615d, 0x55 * _0x54615d, 128.29513549804688 * _0x54615d, 0x71 * _0x54615d, 139.29513549804688 * _0x54615d), _0x1745c4['closePath'](), fill_path(_0x1745c4, undefined, '#5E3C10', 0xc * _0x54615d), _0x1745c4['beginPath'](), _0x1745c4['lineCap'] = 'round', _0x1745c4['lineJoin'] = 'round', _0x1745c4['moveTo'](0x5f * _0x54615d, 90.29513549804688 * _0x54615d), _0x1745c4['bezierCurveTo'](0x70 * _0x54615d, 105.79513549804688 * _0x54615d, 0x70 * _0x54615d, 105.79513549804688 * _0x54615d, 0x81 * _0x54615d, 121.29513549804688 * _0x54615d), _0x1745c4['closePath'](), fill_path(_0x1745c4, undefined, '#5E3C10', 0xc * _0x54615d), _0x1745c4['beginPath'](), _0x1745c4['lineCap'] = 'round', _0x1745c4['lineJoin'] = 'round', _0x1745c4['moveTo'](0x74 * _0x54615d, 52.850677490234375 * _0x54615d), _0x1745c4['bezierCurveTo'](0x82 * _0x54615d, 83.85067749023438 * _0x54615d, 0x82 * _0x54615d, 83.85067749023438 * _0x54615d, 0x90 * _0x54615d, 114.85067749023438 * _0x54615d), _0x1745c4['closePath'](), fill_path(_0x1745c4, undefined, '#5E3C10', 0xc * _0x54615d), _0x1745c4['beginPath'](), _0x1745c4['lineCap'] = 'round', _0x1745c4['lineJoin'] = 'round', _0x1745c4['moveTo'](0x9f * _0x54615d, 61.295135498046875 * _0x54615d), _0x1745c4['bezierCurveTo'](160.49996948242188 * _0x54615d, 92.29513549804688 * _0x54615d, 160.49996948242188 * _0x54615d, 92.29513549804688 * _0x54615d, 0xa0 * _0x54615d, 123.29513549804688 * _0x54615d), _0x1745c4['closePath'](), fill_path(_0x1745c4, undefined, '#5E3C10', 0xc * _0x54615d), _0x1745c4['beginPath'](), _0x1745c4['lineCap'] = 'round', _0x1745c4['lineJoin'] = 'round', _0x1745c4['moveTo'](0xcb * _0x54615d, 51.295135498046875 * _0x54615d), _0x1745c4['bezierCurveTo'](190.49996948242188 * _0x54615d, 83.29513549804688 * _0x54615d, 190.49996948242188 * _0x54615d, 83.29513549804688 * _0x54615d, 0xb0 * _0x54615d, 115.29513549804688 * _0x54615d), _0x1745c4['closePath'](), fill_path(_0x1745c4, undefined, '#5E3C10', 0xc * _0x54615d), _0x1745c4['beginPath'](), _0x1745c4['lineCap'] = 'round', _0x1745c4['lineJoin'] = 'round', _0x1745c4['moveTo'](0xe1 * _0x54615d, 89.29513549804688 * _0x54615d), _0x1745c4['bezierCurveTo'](210.49996948242188 * _0x54615d, 104.79513549804688 * _0x54615d, 210.49996948242188 * _0x54615d, 104.79513549804688 * _0x54615d, 0xc2 * _0x54615d, 120.29513549804688 * _0x54615d), _0x1745c4['closePath'](), fill_path(_0x1745c4, undefined, '#5E3C10', 0xc * _0x54615d), _0x1745c4['beginPath'](), _0x1745c4['lineCap'] = 'round', _0x1745c4['lineJoin'] = 'round', _0x1745c4['moveTo'](266.9999694824219 * _0x54615d, 112.29513549804688 * _0x54615d), _0x1745c4['bezierCurveTo'](233.49996948242188 * _0x54615d, 127.29513549804688 * _0x54615d, 233.49996948242188 * _0x54615d, 127.29513549804688 * _0x54615d, 0xc7 * _0x54615d, 142.29513549804688 * _0x54615d), _0x1745c4['closePath'](), fill_path(_0x1745c4, undefined, '#5E3C10', 0xc * _0x54615d), _0x1745c4['beginPath'](), _0x1745c4['lineCap'] = 'round', _0x1745c4['lineJoin'] = 'round', _0x1745c4['moveTo'](256.9999694824219 * _0x54615d, 155.29513549804688 * _0x54615d), _0x1745c4['bezierCurveTo'](238.49996948242188 * _0x54615d, 156.29513549804688 * _0x54615d, 238.49996948242188 * _0x54615d, 156.29513549804688 * _0x54615d, 0xdb * _0x54615d, 157.29513549804688 * _0x54615d), _0x1745c4['closePath'](), fill_path(_0x1745c4, undefined, '#5E3C10', 0xc * _0x54615d), _0x1745c4['beginPath'](), _0x1745c4['lineCap'] = 'round', _0x1745c4['lineJoin'] = 'round', _0x1745c4['moveTo'](0x60 * _0x54615d, 0xa6 * _0x54615d), _0x1745c4['bezierCurveTo'](0x58 * _0x54615d, 0x75 * _0x54615d, 0x81 * _0x54615d, 0x5c * _0x54615d, 0xa1 * _0x54615d, 0x5b * _0x54615d), _0x1745c4['bezierCurveTo'](0xc9 * _0x54615d, 0x5a * _0x54615d, 0xdf * _0x54615d, 0x79 * _0x54615d, 0xe6 * _0x54615d, 0xa1 * _0x54615d), _0x1745c4['closePath'](), fill_path(_0x1745c4, '#704618', '#5D3D1A', 0x8 * _0x54615d), _0x1745c4['beginPath'](), _0x1745c4['lineCap'] = 'round', _0x1745c4['lineJoin'] = 'round', _0x1745c4['moveTo'](94.00003051757812 * _0x54615d, 164.40341186523438 * _0x54615d), _0x1745c4['bezierCurveTo'](162.50003051757812 * _0x54615d, 164.40341186523438 * _0x54615d, 230.00003051757812 * _0x54615d, 165.40341186523438 * _0x54615d, 231.00003051757812 * _0x54615d, 164.40341186523438 * _0x54615d), _0x1745c4['bezierCurveTo'](214.00003051757812 * _0x54615d, 267.4034118652344 * _0x54615d, 92.00003051757812 * _0x54615d, 243.40341186523438 * _0x54615d, 93.00003051757812 * _0x54615d, 165.40341186523438 * _0x54615d), _0x1745c4['closePath'](), fill_path(_0x1745c4, '#E1DDD5', '#EAE7E4', 0x8 * _0x54615d), circle(_0x1745c4, 160.00003051757812 * _0x54615d, 166.49432373046875 * _0x54615d, 28.30194339616981 * _0x54615d), fill_path(_0x1745c4, '#392C16', '#5E3E1A', 0xa * _0x54615d), _0xb92473;
}

function create_arrow_clock(_0xdb1441) {
    var _0x4af052 = document['createElement']('canvas'),
        _0x3920aa = _0x4af052['getContext']('2d');
    return _0x4af052['width'] = 0x141 * _0xdb1441, _0x4af052['height'] = 0x159 * _0xdb1441, _0x3920aa['translate'](0x0, 0x5 * _0xdb1441), circle(_0x3920aa, 161.00003051757812 * _0xdb1441, 165.40341186523438 * _0xdb1441, 20.808652046684813 * _0xdb1441), fill_path(_0x3920aa, '#C09D6F', '#A37943', 0xa * _0xdb1441), _0x3920aa['beginPath'](), _0x3920aa['lineCap'] = 'round', _0x3920aa['lineJoin'] = 'round', _0x3920aa['moveTo'](162.00003051757812 * _0xdb1441, 48.403411865234375 * _0xdb1441), _0x3920aa['bezierCurveTo'](172.50003051757812 * _0xdb1441, 67.40341186523438 * _0xdb1441, 172.50003051757812 * _0xdb1441, 67.40341186523438 * _0xdb1441, 183.00003051757812 * _0xdb1441, 86.40341186523438 * _0xdb1441), _0x3920aa['bezierCurveTo'](160.50003051757812 * _0xdb1441, 86.40341186523438 * _0xdb1441, 160.50003051757812 * _0xdb1441, 86.40341186523438 * _0xdb1441, 138.00003051757812 * _0xdb1441, 86.40341186523438 * _0xdb1441), _0x3920aa['closePath'](), fill_path(_0x3920aa, '#C09D6F', '#A37943', 0xa * _0xdb1441), _0x3920aa['save'](), _0x3920aa['translate'](161.50003051757812 * _0xdb1441, 117.90341186523438 * _0xdb1441), round_rect(_0x3920aa, -5.5 * _0xdb1441, -37.5 * _0xdb1441, 0xb * _0xdb1441, 0x4b * _0xdb1441, 0xa * _0xdb1441), _0x3920aa['restore'](), fill_path(_0x3920aa, '#C09D6F', '#A37943', 0xa * _0xdb1441), _0x3920aa['save'](), _0x3920aa['translate'](162.00003051757812 * _0xdb1441, 78.90341186523438 * _0xdb1441), round_rect(_0x3920aa, -0xa * _0xdb1441, -5.5 * _0xdb1441, 0x14 * _0xdb1441, 0xb * _0xdb1441, 0x1 * _0xdb1441), _0x3920aa['restore'](), fill_path(_0x3920aa, '#C09D6F'), circle(_0x3920aa, 161.00003051757812 * _0xdb1441, 163.6761474609375 * _0xdb1441, 17.08800749063506 * _0xdb1441), fill_path(_0x3920aa, '#C09D6F'), _0x4af052;
}

function create_island(_0x1e10d7, _0x1261a2, _0x4b4ad1) {
    var _0x2bfa97 = document['createElement']('canvas'),
        _0x40607d = _0x2bfa97['getContext']('2d');
    if (_0x4b4ad1 == 0x0) _0x2bfa97['width'] = 0x236 * _0x1e10d7, _0x2bfa97['height'] = 0x1ad * _0x1e10d7, _0x40607d['beginPath'](), _0x40607d['lineCap'] = 'round', _0x40607d['lineJoin'] = 'round', _0x40607d['moveTo'](312.625 * _0x1e10d7, 39.046875 * _0x1e10d7), _0x40607d['bezierCurveTo'](456.625 * _0x1e10d7, 60.046875 * _0x1e10d7, 521.625 * _0x1e10d7, 134.046875 * _0x1e10d7, 528.625 * _0x1e10d7, 199.046875 * _0x1e10d7), _0x40607d['bezierCurveTo'](540.625 * _0x1e10d7, 298.046875 * _0x1e10d7, 491.625 * _0x1e10d7, 364.046875 * _0x1e10d7, 405.625 * _0x1e10d7, 394.046875 * _0x1e10d7), _0x40607d['bezierCurveTo'](270.625 * _0x1e10d7, 429.046875 * _0x1e10d7, 182.625 * _0x1e10d7, 395.046875 * _0x1e10d7, 100.625 * _0x1e10d7, 344.046875 * _0x1e10d7), _0x40607d['bezierCurveTo'](15.625 * _0x1e10d7, 283.046875 * _0x1e10d7, 20.625 * _0x1e10d7, 195.046875 * _0x1e10d7, 33.625 * _0x1e10d7, 158.046875 * _0x1e10d7), _0x40607d['bezierCurveTo'](56.625 * _0x1e10d7, 80.046875 * _0x1e10d7, 102.625 * _0x1e10d7, 46.046875 * _0x1e10d7, 183.625 * _0x1e10d7, 33.046875 * _0x1e10d7), _0x40607d['bezierCurveTo'](225.625 * _0x1e10d7, 25.046875 * _0x1e10d7, 270.625 * _0x1e10d7, 30.046875 * _0x1e10d7, 312.625 * _0x1e10d7, 39.046875 * _0x1e10d7), _0x40607d['closePath'](), fill_path(_0x40607d, _0x1261a2[0x0]);
    else {
        if (_0x4b4ad1 == 0x1) {
            var _0x2bfa97 = document['createElement']('canvas'),
                _0x40607d = _0x2bfa97['getContext']('2d');
            _0x2bfa97['width'] = 0x1ff * _0x1e10d7, _0x2bfa97['height'] = 0x198 * _0x1e10d7, _0x40607d['beginPath'](), _0x40607d['lineCap'] = 'round', _0x40607d['lineJoin'] = 'round', _0x40607d['moveTo'](141.625 * _0x1e10d7, 49.296875 * _0x1e10d7), _0x40607d['bezierCurveTo'](225.625 * _0x1e10d7, 10.296875 * _0x1e10d7, 320.625 * _0x1e10d7, 16.296875 * _0x1e10d7, 390.625 * _0x1e10d7, 39.296875 * _0x1e10d7), _0x40607d['bezierCurveTo'](476.625 * _0x1e10d7, 71.296875 * _0x1e10d7, 483.625 * _0x1e10d7, 142.296875 * _0x1e10d7, 486.625 * _0x1e10d7, 197.296875 * _0x1e10d7), _0x40607d['bezierCurveTo'](491.625 * _0x1e10d7, 289.296875 * _0x1e10d7, 462.625 * _0x1e10d7, 317.296875 * _0x1e10d7, 417.625 * _0x1e10d7, 351.296875 * _0x1e10d7), _0x40607d['bezierCurveTo'](367.625 * _0x1e10d7, 385.296875 * _0x1e10d7, 313.625 * _0x1e10d7, 404.296875 * _0x1e10d7, 218.625 * _0x1e10d7, 395.296875 * _0x1e10d7), _0x40607d['bezierCurveTo'](108.625 * _0x1e10d7, 381.296875 * _0x1e10d7, 81.625 * _0x1e10d7, 350.296875 * _0x1e10d7, 52.625 * _0x1e10d7, 305.296875 * _0x1e10d7), _0x40607d['bezierCurveTo'](16.625 * _0x1e10d7, 244.296875 * _0x1e10d7, 23.625 * _0x1e10d7, 171.296875 * _0x1e10d7, 37.625 * _0x1e10d7, 145.296875 * _0x1e10d7), _0x40607d['bezierCurveTo'](65.625 * _0x1e10d7, 84.296875 * _0x1e10d7, 97.625 * _0x1e10d7, 74.296875 * _0x1e10d7, 141.625 * _0x1e10d7, 49.296875 * _0x1e10d7), _0x40607d['closePath'](), fill_path(_0x40607d, _0x1261a2[0x0]);
        } else {
            if (_0x4b4ad1 == 0x2) {
                var _0x2bfa97 = document['createElement']('canvas'),
                    _0x40607d = _0x2bfa97['getContext']('2d');
                _0x2bfa97['width'] = 0x1f8 * _0x1e10d7, _0x2bfa97['height'] = 0x198 * _0x1e10d7, _0x40607d['beginPath'](), _0x40607d['lineCap'] = 'round', _0x40607d['lineJoin'] = 'round', _0x40607d['moveTo'](153.625 * _0x1e10d7, 46.296875 * _0x1e10d7), _0x40607d['bezierCurveTo'](271.625 * _0x1e10d7, 17.296875 * _0x1e10d7, 345.625 * _0x1e10d7, 35.296875 * _0x1e10d7, 410.625 * _0x1e10d7, 71.296875 * _0x1e10d7), _0x40607d['bezierCurveTo'](473.625 * _0x1e10d7, 109.296875 * _0x1e10d7, 478.625 * _0x1e10d7, 167.296875 * _0x1e10d7, 473.625 * _0x1e10d7, 205.296875 * _0x1e10d7), _0x40607d['bezierCurveTo'](462.625 * _0x1e10d7, 295.296875 * _0x1e10d7, 438.625 * _0x1e10d7, 316.296875 * _0x1e10d7, 388.625 * _0x1e10d7, 345.296875 * _0x1e10d7), _0x40607d['bezierCurveTo'](331.625 * _0x1e10d7, 374.296875 * _0x1e10d7, 273.625 * _0x1e10d7, 392.296875 * _0x1e10d7, 180.625 * _0x1e10d7, 387.296875 * _0x1e10d7), _0x40607d['bezierCurveTo'](111.625 * _0x1e10d7, 380.296875 * _0x1e10d7, 86.625 * _0x1e10d7, 360.296875 * _0x1e10d7, 51.625 * _0x1e10d7, 309.296875 * _0x1e10d7), _0x40607d['bezierCurveTo'](23.625 * _0x1e10d7, 267.296875 * _0x1e10d7, 25.625 * _0x1e10d7, 226.296875 * _0x1e10d7, 27.625 * _0x1e10d7, 175.296875 * _0x1e10d7), _0x40607d['bezierCurveTo'](37.625 * _0x1e10d7, 99.296875 * _0x1e10d7, 88.625 * _0x1e10d7, 57.296875 * _0x1e10d7, 153.625 * _0x1e10d7, 46.296875 * _0x1e10d7), _0x40607d['closePath'](), fill_path(_0x40607d, _0x1261a2[0x0]);
            }
        }
    }
    return _0x2bfa97;
}

function create_sign(_0x5dc6ee, _0x528559, _0x3a47db) {
    var _0x22cb72 = document['createElement']('canvas'),
        _0x694678 = _0x22cb72['getContext']('2d');
    return _0x22cb72['width'] = 0x1c2 * _0x5dc6ee, _0x22cb72['height'] = 0x104 * _0x5dc6ee, _0x694678['translate'](0xa * _0x5dc6ee, 0xa * _0x5dc6ee), _0x694678['globalAlpha'] = _0x528559 ? 0.5 : 0x1, _0x694678['translate'](0x14 * _0x5dc6ee, 0x14 * _0x5dc6ee), round_rect(_0x694678, 0x0, 0x0, 0x190 * _0x5dc6ee, 0xdc * _0x5dc6ee, 0x1e * _0x5dc6ee), fill_path(_0x694678, _0x3a47db[0x0]), _0x694678['globalAlpha'] = 0x1, _0x694678['translate'](-0x14 * _0x5dc6ee, -0x14 * _0x5dc6ee), _0x694678['beginPath'](), _0x694678['lineCap'] = 'round', _0x694678['lineJoin'] = 'round', _0x694678['moveTo'](0x9 * _0x5dc6ee, 0x5 * _0x5dc6ee), _0x694678['bezierCurveTo'](0x17d * _0x5dc6ee, 0x2 * _0x5dc6ee, 0xc5 * _0x5dc6ee, 4.5 * _0x5dc6ee, 0x181 * _0x5dc6ee, 0x4 * _0x5dc6ee), _0x694678['bezierCurveTo'](0x18d * _0x5dc6ee, 0x4 * _0x5dc6ee, 0x191 * _0x5dc6ee, 0x4 * _0x5dc6ee, 0x18f * _0x5dc6ee, 0x17 * _0x5dc6ee), _0x694678['bezierCurveTo'](0x16f * _0x5dc6ee, 0x1b * _0x5dc6ee, 0x16f * _0x5dc6ee, 0x1b * _0x5dc6ee, 0x14f * _0x5dc6ee, 0x1f * _0x5dc6ee), _0x694678['bezierCurveTo'](366.5 * _0x5dc6ee, 33.5 * _0x5dc6ee, 366.5 * _0x5dc6ee, 33.5 * _0x5dc6ee, 0x18e * _0x5dc6ee, 0x24 * _0x5dc6ee), _0x694678['bezierCurveTo'](0x18e * _0x5dc6ee, 41.5 * _0x5dc6ee, 0x18e * _0x5dc6ee, 41.5 * _0x5dc6ee, 0x18e * _0x5dc6ee, 0x2f * _0x5dc6ee), _0x694678['bezierCurveTo'](0x18e * _0x5dc6ee, 0x38 * _0x5dc6ee, 0x18f * _0x5dc6ee, 0x38 * _0x5dc6ee, 0x182 * _0x5dc6ee, 0x38 * _0x5dc6ee), _0x694678['bezierCurveTo'](200.5 * _0x5dc6ee, 56.5 * _0x5dc6ee, 200.5 * _0x5dc6ee, 56.5 * _0x5dc6ee, 0xf * _0x5dc6ee, 0x39 * _0x5dc6ee), _0x694678['bezierCurveTo'](0x2 * _0x5dc6ee, 0x37 * _0x5dc6ee, 0x4 * _0x5dc6ee, 0x34 * _0x5dc6ee, 0x4 * _0x5dc6ee, 0x2b * _0x5dc6ee), _0x694678['bezierCurveTo'](0x4 * _0x5dc6ee, 30.5 * _0x5dc6ee, 0x4 * _0x5dc6ee, 30.5 * _0x5dc6ee, 0x4 * _0x5dc6ee, 0x12 * _0x5dc6ee), _0x694678['bezierCurveTo'](0x10 * _0x5dc6ee, 18.5 * _0x5dc6ee, 0x10 * _0x5dc6ee, 18.5 * _0x5dc6ee, 0x1c * _0x5dc6ee, 0x13 * _0x5dc6ee), _0x694678['bezierCurveTo'](18.5 * _0x5dc6ee, 0xc * _0x5dc6ee, 18.5 * _0x5dc6ee, 0xc * _0x5dc6ee, 0x9 * _0x5dc6ee, 0x5 * _0x5dc6ee), _0x694678['closePath'](), fill_path(_0x694678, _0x3a47db[0x2], _0x3a47db[0x1], 0xc * _0x5dc6ee), _0x694678['beginPath'](), _0x694678['lineCap'] = 'round', _0x694678['lineJoin'] = 'round', _0x694678['moveTo'](0x5 * _0x5dc6ee, 0x46 * _0x5dc6ee), _0x694678['bezierCurveTo'](0x5 * _0x5dc6ee, 0x3a * _0x5dc6ee, 0x5 * _0x5dc6ee, 0x37 * _0x5dc6ee, 0x11 * _0x5dc6ee, 0x39 * _0x5dc6ee), _0x694678['bezierCurveTo'](0xcb * _0x5dc6ee, 0x39 * _0x5dc6ee, 0xcb * _0x5dc6ee, 0x39 * _0x5dc6ee, 0x185 * _0x5dc6ee, 0x39 * _0x5dc6ee), _0x694678['bezierCurveTo'](0x190 * _0x5dc6ee, 0x39 * _0x5dc6ee, 0x190 * _0x5dc6ee, 0x3b * _0x5dc6ee, 0x190 * _0x5dc6ee, 0x45 * _0x5dc6ee), _0x694678['bezierCurveTo'](400.5 * _0x5dc6ee, 83.5 * _0x5dc6ee, 400.5 * _0x5dc6ee, 83.5 * _0x5dc6ee, 0x191 * _0x5dc6ee, 0x62 * _0x5dc6ee), _0x694678['bezierCurveTo'](0x192 * _0x5dc6ee, 0x6c * _0x5dc6ee, 0x191 * _0x5dc6ee, 0x6c * _0x5dc6ee, 0x184 * _0x5dc6ee, 0x6c * _0x5dc6ee), _0x694678['bezierCurveTo'](201.5 * _0x5dc6ee, 0x6c * _0x5dc6ee, 201.5 * _0x5dc6ee, 0x6c * _0x5dc6ee, 0xf * _0x5dc6ee, 0x6c * _0x5dc6ee), _0x694678['bezierCurveTo'](0x1 * _0x5dc6ee, 0x6a * _0x5dc6ee, 0x5 * _0x5dc6ee, 0x6a * _0x5dc6ee, 0x5 * _0x5dc6ee, 0x57 * _0x5dc6ee), _0x694678['bezierCurveTo'](0x21 * _0x5dc6ee, 84.5 * _0x5dc6ee, 0x21 * _0x5dc6ee, 84.5 * _0x5dc6ee, 0x3d * _0x5dc6ee, 0x52 * _0x5dc6ee), _0x694678['bezierCurveTo'](33.5 * _0x5dc6ee, 76.5 * _0x5dc6ee, 33.5 * _0x5dc6ee, 76.5 * _0x5dc6ee, 0x6 * _0x5dc6ee, 0x47 * _0x5dc6ee), _0x694678['closePath'](), fill_path(_0x694678, _0x3a47db[0x3], _0x3a47db[0x1], 0xc * _0x5dc6ee), _0x694678['beginPath'](), _0x694678['lineCap'] = 'round', _0x694678['lineJoin'] = 'round', _0x694678['moveTo'](0x13 * _0x5dc6ee, 0x9e * _0x5dc6ee), _0x694678['bezierCurveTo'](0x2 * _0x5dc6ee, 0x9f * _0x5dc6ee, 0x4 * _0x5dc6ee, 0x9c * _0x5dc6ee, 0x5 * _0x5dc6ee, 0x76 * _0x5dc6ee), _0x694678['bezierCurveTo'](0x4 * _0x5dc6ee, 0x6e * _0x5dc6ee, 0x6 * _0x5dc6ee, 0x6b * _0x5dc6ee, 0x1a * _0x5dc6ee, 0x6d * _0x5dc6ee), _0x694678['bezierCurveTo'](206.5 * _0x5dc6ee, 0x6d * _0x5dc6ee, 206.5 * _0x5dc6ee, 0x6d * _0x5dc6ee, 0x183 * _0x5dc6ee, 0x6d * _0x5dc6ee), _0x694678['bezierCurveTo'](0x190 * _0x5dc6ee, 0x6c * _0x5dc6ee, 0x190 * _0x5dc6ee, 0x6c * _0x5dc6ee, 0x18e * _0x5dc6ee, 0x7f * _0x5dc6ee), _0x694678['bezierCurveTo'](384.5 * _0x5dc6ee, 0x82 * _0x5dc6ee, 384.5 * _0x5dc6ee, 0x82 * _0x5dc6ee, 0x173 * _0x5dc6ee, 0x85 * _0x5dc6ee), _0x694678['bezierCurveTo'](385.5 * _0x5dc6ee, 0x8a * _0x5dc6ee, 385.5 * _0x5dc6ee, 0x8a * _0x5dc6ee, 0x190 * _0x5dc6ee, 0x8f * _0x5dc6ee), _0x694678['bezierCurveTo'](0x192 * _0x5dc6ee, 0x9c * _0x5dc6ee, 0x192 * _0x5dc6ee, 0xa2 * _0x5dc6ee, 0x181 * _0x5dc6ee, 0xa0 * _0x5dc6ee), _0x694678['closePath'](), fill_path(_0x694678, _0x3a47db[0x2], _0x3a47db[0x1], 0xc * _0x5dc6ee), _0x694678['beginPath'](), _0x694678['lineCap'] = 'round', _0x694678['lineJoin'] = 'round', _0x694678['moveTo'](0x4 * _0x5dc6ee, 0xb7 * _0x5dc6ee), _0x694678['bezierCurveTo'](0x1 * _0x5dc6ee, 0xa3 * _0x5dc6ee, 0x4 * _0x5dc6ee, 0x9e * _0x5dc6ee, 0x1c * _0x5dc6ee, 0xa1 * _0x5dc6ee), _0x694678['bezierCurveTo'](207.5 * _0x5dc6ee, 0xa1 * _0x5dc6ee, 207.5 * _0x5dc6ee, 0xa1 * _0x5dc6ee, 0x183 * _0x5dc6ee, 0xa1 * _0x5dc6ee), _0x694678['bezierCurveTo'](0x191 * _0x5dc6ee, 0x9f * _0x5dc6ee, 0x190 * _0x5dc6ee, 0xa4 * _0x5dc6ee, 0x190 * _0x5dc6ee, 0xb1 * _0x5dc6ee), _0x694678['bezierCurveTo'](364.5 * _0x5dc6ee, 0xb8 * _0x5dc6ee, 364.5 * _0x5dc6ee, 0xb8 * _0x5dc6ee, 0x149 * _0x5dc6ee, 0xbf * _0x5dc6ee), _0x694678['bezierCurveTo'](364.5 * _0x5dc6ee, 192.5 * _0x5dc6ee, 364.5 * _0x5dc6ee, 192.5 * _0x5dc6ee, 0x190 * _0x5dc6ee, 0xc2 * _0x5dc6ee), _0x694678['bezierCurveTo'](0x193 * _0x5dc6ee, 0xd1 * _0x5dc6ee, 0x191 * _0x5dc6ee, 0xd6 * _0x5dc6ee, 0x181 * _0x5dc6ee, 0xd5 * _0x5dc6ee), _0x694678['bezierCurveTo'](201.5 * _0x5dc6ee, 0xd5 * _0x5dc6ee, 201.5 * _0x5dc6ee, 0xd5 * _0x5dc6ee, 0x12 * _0x5dc6ee, 0xd5 * _0x5dc6ee), _0x694678['bezierCurveTo'](0x3 * _0x5dc6ee, 0xd5 * _0x5dc6ee, 0x2 * _0x5dc6ee, 0xd5 * _0x5dc6ee, 0x4 * _0x5dc6ee, 0xc6 * _0x5dc6ee), _0x694678['bezierCurveTo'](12.5 * _0x5dc6ee, 0xc1 * _0x5dc6ee, 12.5 * _0x5dc6ee, 0xc1 * _0x5dc6ee, 0x15 * _0x5dc6ee, 0xbc * _0x5dc6ee), _0x694678['closePath'](), fill_path(_0x694678, _0x3a47db[0x3], _0x3a47db[0x1], 0xc * _0x5dc6ee), circle(_0x694678, 0x29 * _0x5dc6ee, 0x1e * _0x5dc6ee, 14.7648230602334 * _0x5dc6ee), fill_path(_0x694678, _0x3a47db[0x3], _0x3a47db[0x1], 0xc * _0x5dc6ee), circle(_0x694678, 0x171 * _0x5dc6ee, 0x1e * _0x5dc6ee, 15.556349186104045 * _0x5dc6ee), fill_path(_0x694678, _0x3a47db[0x3], _0x3a47db[0x1], 0xc * _0x5dc6ee), circle(_0x694678, 0x16c * _0x5dc6ee, 0xbe * _0x5dc6ee, 15.620499351813308 * _0x5dc6ee), fill_path(_0x694678, _0x3a47db[0x3], _0x3a47db[0x1], 0xc * _0x5dc6ee), circle(_0x694678, 0x29 * _0x5dc6ee, 0xba * _0x5dc6ee, 15.556349186104045 * _0x5dc6ee), fill_path(_0x694678, _0x3a47db[0x3], _0x3a47db[0x1], 0xc * _0x5dc6ee), _0x22cb72;
}

function create_sign_button(_0x41b247, _0x2c3bc3, _0x5870e8) {
    var _0x27e823 = document['createElement']('canvas'),
        _0x5d69a0 = _0x27e823['getContext']('2d');
    _0x27e823['width'] = 0x1c2 * _0x41b247, _0x27e823['height'] = 0x104 * _0x41b247, _0x5d69a0['translate'](0xa * _0x41b247, 0xa * _0x41b247);
    if (_0x5870e8 == 0x1) _0x5d69a0['beginPath'](), _0x5d69a0['lineCap'] = 'round', _0x5d69a0['lineJoin'] = 'round', _0x5d69a0['moveTo'](0x9 * _0x41b247, 0x5 * _0x41b247), _0x5d69a0['bezierCurveTo'](0x17d * _0x41b247, 0x2 * _0x41b247, 0xc5 * _0x41b247, 4.5 * _0x41b247, 0x181 * _0x41b247, 0x4 * _0x41b247), _0x5d69a0['bezierCurveTo'](0x18d * _0x41b247, 0x4 * _0x41b247, 0x191 * _0x41b247, 0x4 * _0x41b247, 0x18f * _0x41b247, 0x17 * _0x41b247), _0x5d69a0['bezierCurveTo'](0x16f * _0x41b247, 0x1b * _0x41b247, 0x16f * _0x41b247, 0x1b * _0x41b247, 0x14f * _0x41b247, 0x1f * _0x41b247), _0x5d69a0['bezierCurveTo'](366.5 * _0x41b247, 33.5 * _0x41b247, 366.5 * _0x41b247, 33.5 * _0x41b247, 0x18e * _0x41b247, 0x24 * _0x41b247), _0x5d69a0['bezierCurveTo'](0x18e * _0x41b247, 41.5 * _0x41b247, 0x18e * _0x41b247, 41.5 * _0x41b247, 0x18e * _0x41b247, 0x2f * _0x41b247), _0x5d69a0['bezierCurveTo'](0x18e * _0x41b247, 0x38 * _0x41b247, 0x18f * _0x41b247, 0x38 * _0x41b247, 0x182 * _0x41b247, 0x38 * _0x41b247), _0x5d69a0['bezierCurveTo'](200.5 * _0x41b247, 56.5 * _0x41b247, 200.5 * _0x41b247, 56.5 * _0x41b247, 0xf * _0x41b247, 0x39 * _0x41b247), _0x5d69a0['bezierCurveTo'](0x2 * _0x41b247, 0x37 * _0x41b247, 0x4 * _0x41b247, 0x34 * _0x41b247, 0x4 * _0x41b247, 0x2b * _0x41b247), _0x5d69a0['bezierCurveTo'](0x4 * _0x41b247, 30.5 * _0x41b247, 0x4 * _0x41b247, 30.5 * _0x41b247, 0x4 * _0x41b247, 0x12 * _0x41b247), _0x5d69a0['bezierCurveTo'](0x10 * _0x41b247, 18.5 * _0x41b247, 0x10 * _0x41b247, 18.5 * _0x41b247, 0x1c * _0x41b247, 0x13 * _0x41b247), _0x5d69a0['bezierCurveTo'](18.5 * _0x41b247, 0xc * _0x41b247, 18.5 * _0x41b247, 0xc * _0x41b247, 0x9 * _0x41b247, 0x5 * _0x41b247), _0x5d69a0['closePath'](), fill_path(_0x5d69a0, _0x2c3bc3[0x3], _0x2c3bc3[0x3], 0x20 * _0x41b247), _0x5d69a0['beginPath'](), _0x5d69a0['lineCap'] = 'round', _0x5d69a0['lineJoin'] = 'round', _0x5d69a0['moveTo'](0x5 * _0x41b247, 0x46 * _0x41b247), _0x5d69a0['bezierCurveTo'](0x5 * _0x41b247, 0x3a * _0x41b247, 0x5 * _0x41b247, 0x37 * _0x41b247, 0x11 * _0x41b247, 0x39 * _0x41b247), _0x5d69a0['bezierCurveTo'](0xcb * _0x41b247, 0x39 * _0x41b247, 0xcb * _0x41b247, 0x39 * _0x41b247, 0x185 * _0x41b247, 0x39 * _0x41b247), _0x5d69a0['bezierCurveTo'](0x190 * _0x41b247, 0x39 * _0x41b247, 0x190 * _0x41b247, 0x3b * _0x41b247, 0x190 * _0x41b247, 0x45 * _0x41b247), _0x5d69a0['bezierCurveTo'](400.5 * _0x41b247, 83.5 * _0x41b247, 400.5 * _0x41b247, 83.5 * _0x41b247, 0x191 * _0x41b247, 0x62 * _0x41b247), _0x5d69a0['bezierCurveTo'](0x192 * _0x41b247, 0x6c * _0x41b247, 0x191 * _0x41b247, 0x6c * _0x41b247, 0x184 * _0x41b247, 0x6c * _0x41b247), _0x5d69a0['bezierCurveTo'](201.5 * _0x41b247, 0x6c * _0x41b247, 201.5 * _0x41b247, 0x6c * _0x41b247, 0xf * _0x41b247, 0x6c * _0x41b247), _0x5d69a0['bezierCurveTo'](0x1 * _0x41b247, 0x6a * _0x41b247, 0x5 * _0x41b247, 0x6a * _0x41b247, 0x5 * _0x41b247, 0x57 * _0x41b247), _0x5d69a0['bezierCurveTo'](0x21 * _0x41b247, 84.5 * _0x41b247, 0x21 * _0x41b247, 84.5 * _0x41b247, 0x3d * _0x41b247, 0x52 * _0x41b247), _0x5d69a0['bezierCurveTo'](33.5 * _0x41b247, 76.5 * _0x41b247, 33.5 * _0x41b247, 76.5 * _0x41b247, 0x6 * _0x41b247, 0x47 * _0x41b247), _0x5d69a0['closePath'](), fill_path(_0x5d69a0, _0x2c3bc3[0x3], _0x2c3bc3[0x3], 0x20 * _0x41b247), _0x5d69a0['beginPath'](), _0x5d69a0['lineCap'] = 'round', _0x5d69a0['lineJoin'] = 'round', _0x5d69a0['moveTo'](0x13 * _0x41b247, 0x9e * _0x41b247), _0x5d69a0['bezierCurveTo'](0x2 * _0x41b247, 0x9f * _0x41b247, 0x4 * _0x41b247, 0x9c * _0x41b247, 0x5 * _0x41b247, 0x76 * _0x41b247), _0x5d69a0['bezierCurveTo'](0x4 * _0x41b247, 0x6e * _0x41b247, 0x6 * _0x41b247, 0x6b * _0x41b247, 0x1a * _0x41b247, 0x6d * _0x41b247), _0x5d69a0['bezierCurveTo'](206.5 * _0x41b247, 0x6d * _0x41b247, 206.5 * _0x41b247, 0x6d * _0x41b247, 0x183 * _0x41b247, 0x6d * _0x41b247), _0x5d69a0['bezierCurveTo'](0x190 * _0x41b247, 0x6c * _0x41b247, 0x190 * _0x41b247, 0x6c * _0x41b247, 0x18e * _0x41b247, 0x7f * _0x41b247), _0x5d69a0['bezierCurveTo'](384.5 * _0x41b247, 0x82 * _0x41b247, 384.5 * _0x41b247, 0x82 * _0x41b247, 0x173 * _0x41b247, 0x85 * _0x41b247), _0x5d69a0['bezierCurveTo'](385.5 * _0x41b247, 0x8a * _0x41b247, 385.5 * _0x41b247, 0x8a * _0x41b247, 0x190 * _0x41b247, 0x8f * _0x41b247), _0x5d69a0['bezierCurveTo'](0x192 * _0x41b247, 0x9c * _0x41b247, 0x192 * _0x41b247, 0xa2 * _0x41b247, 0x181 * _0x41b247, 0xa0 * _0x41b247), _0x5d69a0['closePath'](), fill_path(_0x5d69a0, _0x2c3bc3[0x3], _0x2c3bc3[0x3], 0x20 * _0x41b247), _0x5d69a0['beginPath'](), _0x5d69a0['lineCap'] = 'round', _0x5d69a0['lineJoin'] = 'round', _0x5d69a0['moveTo'](0x4 * _0x41b247, 0xb7 * _0x41b247), _0x5d69a0['bezierCurveTo'](0x1 * _0x41b247, 0xa3 * _0x41b247, 0x4 * _0x41b247, 0x9e * _0x41b247, 0x1c * _0x41b247, 0xa1 * _0x41b247), _0x5d69a0['bezierCurveTo'](207.5 * _0x41b247, 0xa1 * _0x41b247, 207.5 * _0x41b247, 0xa1 * _0x41b247, 0x183 * _0x41b247, 0xa1 * _0x41b247), _0x5d69a0['bezierCurveTo'](0x191 * _0x41b247, 0x9f * _0x41b247, 0x190 * _0x41b247, 0xa4 * _0x41b247, 0x190 * _0x41b247, 0xb1 * _0x41b247), _0x5d69a0['bezierCurveTo'](364.5 * _0x41b247, 0xb8 * _0x41b247, 364.5 * _0x41b247, 0xb8 * _0x41b247, 0x149 * _0x41b247, 0xbf * _0x41b247), _0x5d69a0['bezierCurveTo'](364.5 * _0x41b247, 192.5 * _0x41b247, 364.5 * _0x41b247, 192.5 * _0x41b247, 0x190 * _0x41b247, 0xc2 * _0x41b247), _0x5d69a0['bezierCurveTo'](0x193 * _0x41b247, 0xd1 * _0x41b247, 0x191 * _0x41b247, 0xd6 * _0x41b247, 0x181 * _0x41b247, 0xd5 * _0x41b247), _0x5d69a0['bezierCurveTo'](201.5 * _0x41b247, 0xd5 * _0x41b247, 201.5 * _0x41b247, 0xd5 * _0x41b247, 0x12 * _0x41b247, 0xd5 * _0x41b247), _0x5d69a0['bezierCurveTo'](0x3 * _0x41b247, 0xd5 * _0x41b247, 0x2 * _0x41b247, 0xd5 * _0x41b247, 0x4 * _0x41b247, 0xc6 * _0x41b247), _0x5d69a0['bezierCurveTo'](12.5 * _0x41b247, 0xc1 * _0x41b247, 12.5 * _0x41b247, 0xc1 * _0x41b247, 0x15 * _0x41b247, 0xbc * _0x41b247), _0x5d69a0['closePath'](), fill_path(_0x5d69a0, _0x2c3bc3[0x3], _0x2c3bc3[0x3], 0x20 * _0x41b247), circle(_0x5d69a0, 0x29 * _0x41b247, 0x1e * _0x41b247, 14.7648230602334 * _0x41b247), fill_path(_0x5d69a0, _0x2c3bc3[0x3], _0x2c3bc3[0x3], 0x20 * _0x41b247), circle(_0x5d69a0, 0x171 * _0x41b247, 0x1e * _0x41b247, 15.556349186104045 * _0x41b247), fill_path(_0x5d69a0, _0x2c3bc3[0x3], _0x2c3bc3[0x3], 0x20 * _0x41b247), circle(_0x5d69a0, 0x16c * _0x41b247, 0xbe * _0x41b247, 15.620499351813308 * _0x41b247), fill_path(_0x5d69a0, _0x2c3bc3[0x3], _0x2c3bc3[0x3], 0x20 * _0x41b247), circle(_0x5d69a0, 0x29 * _0x41b247, 0xba * _0x41b247, 15.556349186104045 * _0x41b247), fill_path(_0x5d69a0, _0x2c3bc3[0x3], _0x2c3bc3[0x3], 0x20 * _0x41b247);
    else _0x5870e8 == 0x2 && (_0x5d69a0['beginPath'](), _0x5d69a0['lineCap'] = 'round', _0x5d69a0['lineJoin'] = 'round', _0x5d69a0['moveTo'](0x9 * _0x41b247, 0x5 * _0x41b247), _0x5d69a0['bezierCurveTo'](0x17d * _0x41b247, 0x2 * _0x41b247, 0xc5 * _0x41b247, 4.5 * _0x41b247, 0x181 * _0x41b247, 0x4 * _0x41b247), _0x5d69a0['bezierCurveTo'](0x18d * _0x41b247, 0x4 * _0x41b247, 0x191 * _0x41b247, 0x4 * _0x41b247, 0x18f * _0x41b247, 0x17 * _0x41b247), _0x5d69a0['bezierCurveTo'](0x16f * _0x41b247, 0x1b * _0x41b247, 0x16f * _0x41b247, 0x1b * _0x41b247, 0x14f * _0x41b247, 0x1f * _0x41b247), _0x5d69a0['bezierCurveTo'](366.5 * _0x41b247, 33.5 * _0x41b247, 366.5 * _0x41b247, 33.5 * _0x41b247, 0x18e * _0x41b247, 0x24 * _0x41b247), _0x5d69a0['bezierCurveTo'](0x18e * _0x41b247, 41.5 * _0x41b247, 0x18e * _0x41b247, 41.5 * _0x41b247, 0x18e * _0x41b247, 0x2f * _0x41b247), _0x5d69a0['bezierCurveTo'](0x18e * _0x41b247, 0x38 * _0x41b247, 0x18f * _0x41b247, 0x38 * _0x41b247, 0x182 * _0x41b247, 0x38 * _0x41b247), _0x5d69a0['bezierCurveTo'](200.5 * _0x41b247, 56.5 * _0x41b247, 200.5 * _0x41b247, 56.5 * _0x41b247, 0xf * _0x41b247, 0x39 * _0x41b247), _0x5d69a0['bezierCurveTo'](0x2 * _0x41b247, 0x37 * _0x41b247, 0x4 * _0x41b247, 0x34 * _0x41b247, 0x4 * _0x41b247, 0x2b * _0x41b247), _0x5d69a0['bezierCurveTo'](0x4 * _0x41b247, 30.5 * _0x41b247, 0x4 * _0x41b247, 30.5 * _0x41b247, 0x4 * _0x41b247, 0x12 * _0x41b247), _0x5d69a0['bezierCurveTo'](0x10 * _0x41b247, 18.5 * _0x41b247, 0x10 * _0x41b247, 18.5 * _0x41b247, 0x1c * _0x41b247, 0x13 * _0x41b247), _0x5d69a0['bezierCurveTo'](18.5 * _0x41b247, 0xc * _0x41b247, 18.5 * _0x41b247, 0xc * _0x41b247, 0x9 * _0x41b247, 0x5 * _0x41b247), _0x5d69a0['closePath'](), fill_path(_0x5d69a0, _0x2c3bc3[0x3], _0x2c3bc3[0x3], 0x20 * _0x41b247), _0x5d69a0['beginPath'](), _0x5d69a0['lineCap'] = 'round', _0x5d69a0['lineJoin'] = 'round', _0x5d69a0['moveTo'](0x5 * _0x41b247, 0x46 * _0x41b247), _0x5d69a0['bezierCurveTo'](0x5 * _0x41b247, 0x3a * _0x41b247, 0x5 * _0x41b247, 0x37 * _0x41b247, 0x11 * _0x41b247, 0x39 * _0x41b247), _0x5d69a0['bezierCurveTo'](0xcb * _0x41b247, 0x39 * _0x41b247, 0xcb * _0x41b247, 0x39 * _0x41b247, 0x185 * _0x41b247, 0x39 * _0x41b247), _0x5d69a0['bezierCurveTo'](0x190 * _0x41b247, 0x39 * _0x41b247, 0x190 * _0x41b247, 0x3b * _0x41b247, 0x190 * _0x41b247, 0x45 * _0x41b247), _0x5d69a0['bezierCurveTo'](400.5 * _0x41b247, 83.5 * _0x41b247, 400.5 * _0x41b247, 83.5 * _0x41b247, 0x191 * _0x41b247, 0x62 * _0x41b247), _0x5d69a0['bezierCurveTo'](0x192 * _0x41b247, 0x6c * _0x41b247, 0x191 * _0x41b247, 0x6c * _0x41b247, 0x184 * _0x41b247, 0x6c * _0x41b247), _0x5d69a0['bezierCurveTo'](201.5 * _0x41b247, 0x6c * _0x41b247, 201.5 * _0x41b247, 0x6c * _0x41b247, 0xf * _0x41b247, 0x6c * _0x41b247), _0x5d69a0['bezierCurveTo'](0x1 * _0x41b247, 0x6a * _0x41b247, 0x5 * _0x41b247, 0x6a * _0x41b247, 0x5 * _0x41b247, 0x57 * _0x41b247), _0x5d69a0['bezierCurveTo'](0x21 * _0x41b247, 84.5 * _0x41b247, 0x21 * _0x41b247, 84.5 * _0x41b247, 0x3d * _0x41b247, 0x52 * _0x41b247), _0x5d69a0['bezierCurveTo'](33.5 * _0x41b247, 76.5 * _0x41b247, 33.5 * _0x41b247, 76.5 * _0x41b247, 0x6 * _0x41b247, 0x47 * _0x41b247), _0x5d69a0['closePath'](), fill_path(_0x5d69a0, _0x2c3bc3[0x3], _0x2c3bc3[0x3], 0x20 * _0x41b247), _0x5d69a0['beginPath'](), _0x5d69a0['lineCap'] = 'round', _0x5d69a0['lineJoin'] = 'round', _0x5d69a0['moveTo'](0x13 * _0x41b247, 0x9e * _0x41b247), _0x5d69a0['bezierCurveTo'](0x2 * _0x41b247, 0x9f * _0x41b247, 0x4 * _0x41b247, 0x9c * _0x41b247, 0x5 * _0x41b247, 0x76 * _0x41b247), _0x5d69a0['bezierCurveTo'](0x4 * _0x41b247, 0x6e * _0x41b247, 0x6 * _0x41b247, 0x6b * _0x41b247, 0x1a * _0x41b247, 0x6d * _0x41b247), _0x5d69a0['bezierCurveTo'](206.5 * _0x41b247, 0x6d * _0x41b247, 206.5 * _0x41b247, 0x6d * _0x41b247, 0x183 * _0x41b247, 0x6d * _0x41b247), _0x5d69a0['bezierCurveTo'](0x190 * _0x41b247, 0x6c * _0x41b247, 0x190 * _0x41b247, 0x6c * _0x41b247, 0x18e * _0x41b247, 0x7f * _0x41b247), _0x5d69a0['bezierCurveTo'](384.5 * _0x41b247, 0x82 * _0x41b247, 384.5 * _0x41b247, 0x82 * _0x41b247, 0x173 * _0x41b247, 0x85 * _0x41b247), _0x5d69a0['bezierCurveTo'](385.5 * _0x41b247, 0x8a * _0x41b247, 385.5 * _0x41b247, 0x8a * _0x41b247, 0x190 * _0x41b247, 0x8f * _0x41b247), _0x5d69a0['bezierCurveTo'](0x192 * _0x41b247, 0x9c * _0x41b247, 0x192 * _0x41b247, 0xa2 * _0x41b247, 0x181 * _0x41b247, 0xa0 * _0x41b247), _0x5d69a0['closePath'](), fill_path(_0x5d69a0, _0x2c3bc3[0x3], _0x2c3bc3[0x3], 0x20 * _0x41b247), _0x5d69a0['beginPath'](), _0x5d69a0['lineCap'] = 'round', _0x5d69a0['lineJoin'] = 'round', _0x5d69a0['moveTo'](0x4 * _0x41b247, 0xb7 * _0x41b247), _0x5d69a0['bezierCurveTo'](0x1 * _0x41b247, 0xa3 * _0x41b247, 0x4 * _0x41b247, 0x9e * _0x41b247, 0x1c * _0x41b247, 0xa1 * _0x41b247), _0x5d69a0['bezierCurveTo'](207.5 * _0x41b247, 0xa1 * _0x41b247, 207.5 * _0x41b247, 0xa1 * _0x41b247, 0x183 * _0x41b247, 0xa1 * _0x41b247), _0x5d69a0['bezierCurveTo'](0x191 * _0x41b247, 0x9f * _0x41b247, 0x190 * _0x41b247, 0xa4 * _0x41b247, 0x190 * _0x41b247, 0xb1 * _0x41b247), _0x5d69a0['bezierCurveTo'](364.5 * _0x41b247, 0xb8 * _0x41b247, 364.5 * _0x41b247, 0xb8 * _0x41b247, 0x149 * _0x41b247, 0xbf * _0x41b247), _0x5d69a0['bezierCurveTo'](364.5 * _0x41b247, 192.5 * _0x41b247, 364.5 * _0x41b247, 192.5 * _0x41b247, 0x190 * _0x41b247, 0xc2 * _0x41b247), _0x5d69a0['bezierCurveTo'](0x193 * _0x41b247, 0xd1 * _0x41b247, 0x191 * _0x41b247, 0xd6 * _0x41b247, 0x181 * _0x41b247, 0xd5 * _0x41b247), _0x5d69a0['bezierCurveTo'](201.5 * _0x41b247, 0xd5 * _0x41b247, 201.5 * _0x41b247, 0xd5 * _0x41b247, 0x12 * _0x41b247, 0xd5 * _0x41b247), _0x5d69a0['bezierCurveTo'](0x3 * _0x41b247, 0xd5 * _0x41b247, 0x2 * _0x41b247, 0xd5 * _0x41b247, 0x4 * _0x41b247, 0xc6 * _0x41b247), _0x5d69a0['bezierCurveTo'](12.5 * _0x41b247, 0xc1 * _0x41b247, 12.5 * _0x41b247, 0xc1 * _0x41b247, 0x15 * _0x41b247, 0xbc * _0x41b247), _0x5d69a0['closePath'](), fill_path(_0x5d69a0, _0x2c3bc3[0x3], _0x2c3bc3[0x3], 0x20 * _0x41b247), circle(_0x5d69a0, 0x29 * _0x41b247, 0x1e * _0x41b247, 14.7648230602334 * _0x41b247), fill_path(_0x5d69a0, _0x2c3bc3[0x3], _0x2c3bc3[0x3], 0x20 * _0x41b247), circle(_0x5d69a0, 0x171 * _0x41b247, 0x1e * _0x41b247, 15.556349186104045 * _0x41b247), fill_path(_0x5d69a0, _0x2c3bc3[0x3], _0x2c3bc3[0x3], 0x20 * _0x41b247), circle(_0x5d69a0, 0x16c * _0x41b247, 0xbe * _0x41b247, 15.620499351813308 * _0x41b247), fill_path(_0x5d69a0, _0x2c3bc3[0x3], _0x2c3bc3[0x3], 0x20 * _0x41b247), circle(_0x5d69a0, 0x29 * _0x41b247, 0xba * _0x41b247, 15.556349186104045 * _0x41b247), fill_path(_0x5d69a0, _0x2c3bc3[0x3], _0x2c3bc3[0x3], 0x20 * _0x41b247));
    return _0x5d69a0['beginPath'](), _0x5d69a0['lineCap'] = 'round', _0x5d69a0['lineJoin'] = 'round', _0x5d69a0['moveTo'](0x9 * _0x41b247, 0x5 * _0x41b247), _0x5d69a0['bezierCurveTo'](0x17d * _0x41b247, 0x2 * _0x41b247, 0xc5 * _0x41b247, 4.5 * _0x41b247, 0x181 * _0x41b247, 0x4 * _0x41b247), _0x5d69a0['bezierCurveTo'](0x18d * _0x41b247, 0x4 * _0x41b247, 0x191 * _0x41b247, 0x4 * _0x41b247, 0x18f * _0x41b247, 0x17 * _0x41b247), _0x5d69a0['bezierCurveTo'](0x16f * _0x41b247, 0x1b * _0x41b247, 0x16f * _0x41b247, 0x1b * _0x41b247, 0x14f * _0x41b247, 0x1f * _0x41b247), _0x5d69a0['bezierCurveTo'](366.5 * _0x41b247, 33.5 * _0x41b247, 366.5 * _0x41b247, 33.5 * _0x41b247, 0x18e * _0x41b247, 0x24 * _0x41b247), _0x5d69a0['bezierCurveTo'](0x18e * _0x41b247, 41.5 * _0x41b247, 0x18e * _0x41b247, 41.5 * _0x41b247, 0x18e * _0x41b247, 0x2f * _0x41b247), _0x5d69a0['bezierCurveTo'](0x18e * _0x41b247, 0x38 * _0x41b247, 0x18f * _0x41b247, 0x38 * _0x41b247, 0x182 * _0x41b247, 0x38 * _0x41b247), _0x5d69a0['bezierCurveTo'](200.5 * _0x41b247, 56.5 * _0x41b247, 200.5 * _0x41b247, 56.5 * _0x41b247, 0xf * _0x41b247, 0x39 * _0x41b247), _0x5d69a0['bezierCurveTo'](0x2 * _0x41b247, 0x37 * _0x41b247, 0x4 * _0x41b247, 0x34 * _0x41b247, 0x4 * _0x41b247, 0x2b * _0x41b247), _0x5d69a0['bezierCurveTo'](0x4 * _0x41b247, 30.5 * _0x41b247, 0x4 * _0x41b247, 30.5 * _0x41b247, 0x4 * _0x41b247, 0x12 * _0x41b247), _0x5d69a0['bezierCurveTo'](0x10 * _0x41b247, 18.5 * _0x41b247, 0x10 * _0x41b247, 18.5 * _0x41b247, 0x1c * _0x41b247, 0x13 * _0x41b247), _0x5d69a0['bezierCurveTo'](18.5 * _0x41b247, 0xc * _0x41b247, 18.5 * _0x41b247, 0xc * _0x41b247, 0x9 * _0x41b247, 0x5 * _0x41b247), _0x5d69a0['closePath'](), fill_path(_0x5d69a0, _0x2c3bc3[0x1], _0x2c3bc3[0x0], 0xc * _0x41b247), _0x5d69a0['beginPath'](), _0x5d69a0['lineCap'] = 'round', _0x5d69a0['lineJoin'] = 'round', _0x5d69a0['moveTo'](0x5 * _0x41b247, 0x46 * _0x41b247), _0x5d69a0['bezierCurveTo'](0x5 * _0x41b247, 0x3a * _0x41b247, 0x5 * _0x41b247, 0x37 * _0x41b247, 0x11 * _0x41b247, 0x39 * _0x41b247), _0x5d69a0['bezierCurveTo'](0xcb * _0x41b247, 0x39 * _0x41b247, 0xcb * _0x41b247, 0x39 * _0x41b247, 0x185 * _0x41b247, 0x39 * _0x41b247), _0x5d69a0['bezierCurveTo'](0x190 * _0x41b247, 0x39 * _0x41b247, 0x190 * _0x41b247, 0x3b * _0x41b247, 0x190 * _0x41b247, 0x45 * _0x41b247), _0x5d69a0['bezierCurveTo'](400.5 * _0x41b247, 83.5 * _0x41b247, 400.5 * _0x41b247, 83.5 * _0x41b247, 0x191 * _0x41b247, 0x62 * _0x41b247), _0x5d69a0['bezierCurveTo'](0x192 * _0x41b247, 0x6c * _0x41b247, 0x191 * _0x41b247, 0x6c * _0x41b247, 0x184 * _0x41b247, 0x6c * _0x41b247), _0x5d69a0['bezierCurveTo'](201.5 * _0x41b247, 0x6c * _0x41b247, 201.5 * _0x41b247, 0x6c * _0x41b247, 0xf * _0x41b247, 0x6c * _0x41b247), _0x5d69a0['bezierCurveTo'](0x1 * _0x41b247, 0x6a * _0x41b247, 0x5 * _0x41b247, 0x6a * _0x41b247, 0x5 * _0x41b247, 0x57 * _0x41b247), _0x5d69a0['bezierCurveTo'](0x21 * _0x41b247, 84.5 * _0x41b247, 0x21 * _0x41b247, 84.5 * _0x41b247, 0x3d * _0x41b247, 0x52 * _0x41b247), _0x5d69a0['bezierCurveTo'](33.5 * _0x41b247, 76.5 * _0x41b247, 33.5 * _0x41b247, 76.5 * _0x41b247, 0x6 * _0x41b247, 0x47 * _0x41b247), _0x5d69a0['closePath'](), fill_path(_0x5d69a0, _0x2c3bc3[0x2], _0x2c3bc3[0x0], 0xc * _0x41b247), _0x5d69a0['beginPath'](), _0x5d69a0['lineCap'] = 'round', _0x5d69a0['lineJoin'] = 'round', _0x5d69a0['moveTo'](0x13 * _0x41b247, 0x9e * _0x41b247), _0x5d69a0['bezierCurveTo'](0x2 * _0x41b247, 0x9f * _0x41b247, 0x4 * _0x41b247, 0x9c * _0x41b247, 0x5 * _0x41b247, 0x76 * _0x41b247), _0x5d69a0['bezierCurveTo'](0x4 * _0x41b247, 0x6e * _0x41b247, 0x6 * _0x41b247, 0x6b * _0x41b247, 0x1a * _0x41b247, 0x6d * _0x41b247), _0x5d69a0['bezierCurveTo'](206.5 * _0x41b247, 0x6d * _0x41b247, 206.5 * _0x41b247, 0x6d * _0x41b247, 0x183 * _0x41b247, 0x6d * _0x41b247), _0x5d69a0['bezierCurveTo'](0x190 * _0x41b247, 0x6c * _0x41b247, 0x190 * _0x41b247, 0x6c * _0x41b247, 0x18e * _0x41b247, 0x7f * _0x41b247), _0x5d69a0['bezierCurveTo'](384.5 * _0x41b247, 0x82 * _0x41b247, 384.5 * _0x41b247, 0x82 * _0x41b247, 0x173 * _0x41b247, 0x85 * _0x41b247), _0x5d69a0['bezierCurveTo'](385.5 * _0x41b247, 0x8a * _0x41b247, 385.5 * _0x41b247, 0x8a * _0x41b247, 0x190 * _0x41b247, 0x8f * _0x41b247), _0x5d69a0['bezierCurveTo'](0x192 * _0x41b247, 0x9c * _0x41b247, 0x192 * _0x41b247, 0xa2 * _0x41b247, 0x181 * _0x41b247, 0xa0 * _0x41b247), _0x5d69a0['closePath'](), fill_path(_0x5d69a0, _0x2c3bc3[0x1], _0x2c3bc3[0x0], 0xc * _0x41b247), _0x5d69a0['beginPath'](), _0x5d69a0['lineCap'] = 'round', _0x5d69a0['lineJoin'] = 'round', _0x5d69a0['moveTo'](0x4 * _0x41b247, 0xb7 * _0x41b247), _0x5d69a0['bezierCurveTo'](0x1 * _0x41b247, 0xa3 * _0x41b247, 0x4 * _0x41b247, 0x9e * _0x41b247, 0x1c * _0x41b247, 0xa1 * _0x41b247), _0x5d69a0['bezierCurveTo'](207.5 * _0x41b247, 0xa1 * _0x41b247, 207.5 * _0x41b247, 0xa1 * _0x41b247, 0x183 * _0x41b247, 0xa1 * _0x41b247), _0x5d69a0['bezierCurveTo'](0x191 * _0x41b247, 0x9f * _0x41b247, 0x190 * _0x41b247, 0xa4 * _0x41b247, 0x190 * _0x41b247, 0xb1 * _0x41b247), _0x5d69a0['bezierCurveTo'](364.5 * _0x41b247, 0xb8 * _0x41b247, 364.5 * _0x41b247, 0xb8 * _0x41b247, 0x149 * _0x41b247, 0xbf * _0x41b247), _0x5d69a0['bezierCurveTo'](364.5 * _0x41b247, 192.5 * _0x41b247, 364.5 * _0x41b247, 192.5 * _0x41b247, 0x190 * _0x41b247, 0xc2 * _0x41b247), _0x5d69a0['bezierCurveTo'](0x193 * _0x41b247, 0xd1 * _0x41b247, 0x191 * _0x41b247, 0xd6 * _0x41b247, 0x181 * _0x41b247, 0xd5 * _0x41b247), _0x5d69a0['bezierCurveTo'](201.5 * _0x41b247, 0xd5 * _0x41b247, 201.5 * _0x41b247, 0xd5 * _0x41b247, 0x12 * _0x41b247, 0xd5 * _0x41b247), _0x5d69a0['bezierCurveTo'](0x3 * _0x41b247, 0xd5 * _0x41b247, 0x2 * _0x41b247, 0xd5 * _0x41b247, 0x4 * _0x41b247, 0xc6 * _0x41b247), _0x5d69a0['bezierCurveTo'](12.5 * _0x41b247, 0xc1 * _0x41b247, 12.5 * _0x41b247, 0xc1 * _0x41b247, 0x15 * _0x41b247, 0xbc * _0x41b247), _0x5d69a0['closePath'](), fill_path(_0x5d69a0, _0x2c3bc3[0x2], _0x2c3bc3[0x0], 0xc * _0x41b247), circle(_0x5d69a0, 0x29 * _0x41b247, 0x1e * _0x41b247, 14.7648230602334 * _0x41b247), fill_path(_0x5d69a0, _0x2c3bc3[0x2], _0x2c3bc3[0x0], 0xc * _0x41b247), circle(_0x5d69a0, 0x171 * _0x41b247, 0x1e * _0x41b247, 15.556349186104045 * _0x41b247), fill_path(_0x5d69a0, _0x2c3bc3[0x2], _0x2c3bc3[0x0], 0xc * _0x41b247), circle(_0x5d69a0, 0x16c * _0x41b247, 0xbe * _0x41b247, 15.620499351813308 * _0x41b247), fill_path(_0x5d69a0, _0x2c3bc3[0x2], _0x2c3bc3[0x0], 0xc * _0x41b247), circle(_0x5d69a0, 0x29 * _0x41b247, 0xba * _0x41b247, 15.556349186104045 * _0x41b247), fill_path(_0x5d69a0, _0x2c3bc3[0x2], _0x2c3bc3[0x0], 0xc * _0x41b247), _0x27e823;
}

function create_symbols(_0x116ef3, _0x17b071, _0x19ac53, _0x5ddf1d) {
    var _0x4d2b62 = document['createElement']('canvas'),
        _0x247003 = _0x4d2b62['getContext']('2d');
    _0x4d2b62['width'] = 0x1c2 * _0x116ef3, _0x4d2b62['height'] = 0x104 * _0x116ef3;
    var _0x21cbb3 = create_sign(0x1 * _0x116ef3, !![], _0x19ac53);
    _0x247003['drawImage'](_0x21cbb3, 0x0 * _0x116ef3, 0x0 * _0x116ef3);
    if (_0x5ddf1d == 0x1) {
        _0x247003['translate'](0x64 * _0x116ef3, 0x0 * _0x116ef3), circle(_0x247003, 0x71 * _0x116ef3, 0x78 * _0x116ef3, 0x42 * _0x116ef3), fill_path(_0x247003, undefined, _0x19ac53[0x4], 0xd * _0x116ef3);
        var _0x21cbb3 = create_sword(0.65 * _0x116ef3, !![], ['#0d1b1c', '#4d2d14', '#432516', '#939393', '#5f6061']);
        _0x247003['rotate'](0.7), _0x247003['drawImage'](_0x21cbb3, 0x85 * _0x116ef3, -0x40 * _0x116ef3), _0x247003['rotate'](-0.7), _0x247003['beginPath'](), _0x247003['lineCap'] = 'round', _0x247003['lineJoin'] = 'round', _0x247003['moveTo'](0x46 * _0x116ef3, 0x46 * _0x116ef3), _0x247003['bezierCurveTo'](0x71 * _0x116ef3, 120.5 * _0x116ef3, 0x71 * _0x116ef3, 120.5 * _0x116ef3, 0x9c * _0x116ef3, 0xab * _0x116ef3), _0x247003['closePath'](), fill_path(_0x247003, undefined, _0x19ac53[0x4], 0xd * _0x116ef3);
    } else {
        if (_0x5ddf1d == 0x2) {
            _0x247003['translate'](0x64 * _0x116ef3, 0x0 * _0x116ef3), circle(_0x247003, 0x71 * _0x116ef3, 0x78 * _0x116ef3, 0x42 * _0x116ef3), fill_path(_0x247003, undefined, _0x19ac53[0x4], 0xd * _0x116ef3), _0x247003['translate'](0x1e * _0x116ef3, 0x28 * _0x116ef3), _0x247003['save'](), _0x247003['translate'](83.5 * _0x116ef3, 66.5 * _0x116ef3), round_rect(_0x247003, -40.5 * _0x116ef3, -29.5 * _0x116ef3, 0x51 * _0x116ef3, 0x3b * _0x116ef3, 0xf * _0x116ef3), _0x247003['restore'](), fill_path(_0x247003, '#dff2f7', '#187484', 0x7 * _0x116ef3), circle(_0x247003, 0x16 * _0x116ef3, 0x52 * _0x116ef3, 0xc * _0x116ef3), fill_path(_0x247003, '#dff2f7', '#187484', 0x7 * _0x116ef3), circle(_0x247003, 0x91 * _0x116ef3, 0x52 * _0x116ef3, 0xc * _0x116ef3), fill_path(_0x247003, '#dff2f7', '#187484', 0x7 * _0x116ef3);
            var _0x21cbb3 = create_plant(0.5 * _0x116ef3, !![], ['#80500b', '#7c4908']);
            _0x247003['drawImage'](_0x21cbb3, 0xa * _0x116ef3, 0x55 * _0x116ef3);
            var _0x21cbb3 = create_plant(0.5 * _0x116ef3, !![], ['#80500b', '#7c4908']);
            _0x247003['drawImage'](_0x21cbb3, 0x32 * _0x116ef3, 0x55 * _0x116ef3);
            var _0x21cbb3 = create_plant(0.5 * _0x116ef3, !![], ['#80500b', '#7c4908']);
            _0x247003['drawImage'](_0x21cbb3, 0x5a * _0x116ef3, 0x55 * _0x116ef3);
            var _0x21cbb3 = create_fruit(0x1 * _0x116ef3, !![], ['#3d2a6e', '#8255b5']);
            _0x247003['drawImage'](_0x21cbb3, 0x5a * _0x116ef3, 0x69 * _0x116ef3);
            var _0x21cbb3 = create_fruit(0x1 * _0x116ef3, !![], ['#3d2a6e', '#8255b5']);
            _0x247003['drawImage'](_0x21cbb3, 0x5a * _0x116ef3, 0x69 * _0x116ef3);
            var _0x21cbb3 = create_fruit(0x1 * _0x116ef3, !![], ['#3d2a6e', '#8255b5']);
            _0x247003['drawImage'](_0x21cbb3, 0x1e * _0x116ef3, 0x7d * _0x116ef3);
            var _0x21cbb3 = create_fruit(0x1 * _0x116ef3, !![], ['#3d2a6e', '#8255b5']);
            _0x247003['drawImage'](_0x21cbb3, 0x32 * _0x116ef3, 0x73 * _0x116ef3);
            var _0x21cbb3 = create_fruit(0x1 * _0x116ef3, !![], ['#3d2a6e', '#8255b5']);
            _0x247003['drawImage'](_0x21cbb3, 0x1e * _0x116ef3, 0x64 * _0x116ef3);
            var _0x21cbb3 = create_fruit(0x1 * _0x116ef3, !![], ['#3d2a6e', '#8255b5']);
            _0x247003['drawImage'](_0x21cbb3, 0x50 * _0x116ef3, 0x78 * _0x116ef3);
            var _0x21cbb3 = create_fruit(0x1 * _0x116ef3, !![], ['#3d2a6e', '#8255b5']);
            _0x247003['drawImage'](_0x21cbb3, 0x6e * _0x116ef3, 0x7d * _0x116ef3);
            var _0x21cbb3 = create_fruit(0x1 * _0x116ef3, !![], ['#3d2a6e', '#8255b5']);
            _0x247003['drawImage'](_0x21cbb3, 0x78 * _0x116ef3, 0x69 * _0x116ef3);
        } else {
            if (_0x5ddf1d == 0x3) _0x247003['translate'](0x64 * _0x116ef3, 0x0 * _0x116ef3), circle(_0x247003, 0x71 * _0x116ef3, 0x78 * _0x116ef3, 0x42 * _0x116ef3), fill_path(_0x247003, undefined, _0x19ac53[0x4], 0xd * _0x116ef3), _0x247003['translate'](0x28 * _0x116ef3, 0x32 * _0x116ef3), _0x247003['save'](), _0x247003['translate'](0x47 * _0x116ef3, 0x45 * _0x116ef3), round_rect(_0x247003, -0x1e * _0x116ef3, -0x2a * _0x116ef3, 0x3c * _0x116ef3, 0x54 * _0x116ef3, 0xa * _0x116ef3), _0x247003['restore'](), fill_path(_0x247003, undefined, _0x19ac53[0x5], 0x4 * _0x116ef3), _0x247003['beginPath'](), _0x247003['lineCap'] = 'round', _0x247003['lineJoin'] = 'round', _0x247003['moveTo'](0x2a * _0x116ef3, 0x1c * _0x116ef3), _0x247003['bezierCurveTo'](0x3c * _0x116ef3, 0x1f * _0x116ef3, 0x3c * _0x116ef3, 0x1f * _0x116ef3, 0x4e * _0x116ef3, 0x22 * _0x116ef3), _0x247003['bezierCurveTo'](0x52 * _0x116ef3, 0x22 * _0x116ef3, 0x54 * _0x116ef3, 0x25 * _0x116ef3, 0x53 * _0x116ef3, 0x2d * _0x116ef3), _0x247003['bezierCurveTo'](0x53 * _0x116ef3, 0x50 * _0x116ef3, 0x53 * _0x116ef3, 0x50 * _0x116ef3, 0x53 * _0x116ef3, 0x73 * _0x116ef3), _0x247003['bezierCurveTo'](0x53 * _0x116ef3, 0x78 * _0x116ef3, 0x50 * _0x116ef3, 0x7a * _0x116ef3, 0x49 * _0x116ef3, 0x78 * _0x116ef3), _0x247003['bezierCurveTo'](0x2a * _0x116ef3, 0x6f * _0x116ef3, 0x2b * _0x116ef3, 0x6d * _0x116ef3, 0x29 * _0x116ef3, 0x66 * _0x116ef3), _0x247003['bezierCurveTo'](0x29 * _0x116ef3, 0x47 * _0x116ef3, 0x29 * _0x116ef3, 0x47 * _0x116ef3, 0x29 * _0x116ef3, 0x28 * _0x116ef3), _0x247003['closePath'](), fill_path(_0x247003, _0x19ac53[0x5], _0x19ac53[0x5], 0x4 * _0x116ef3), _0x247003['translate'](-0x28 * _0x116ef3, -0x32 * _0x116ef3), _0x247003['beginPath'](), _0x247003['lineCap'] = 'round', _0x247003['lineJoin'] = 'round', _0x247003['moveTo'](0x46 * _0x116ef3, 0x46 * _0x116ef3), _0x247003['bezierCurveTo'](0x71 * _0x116ef3, 120.5 * _0x116ef3, 0x71 * _0x116ef3, 120.5 * _0x116ef3, 0x9c * _0x116ef3, 0xab * _0x116ef3), _0x247003['closePath'](), fill_path(_0x247003, undefined, _0x19ac53[0x4], 0xd * _0x116ef3);
            else _0x5ddf1d == 0x4 && (_0x247003['scale'](0x1, 0x1), _0x247003['translate'](0x46 * _0x116ef3, 0x32 * _0x116ef3), _0x247003['beginPath'](), _0x247003['lineCap'] = 'round', _0x247003['lineJoin'] = 'round', _0x247003['moveTo'](0x17 * _0x116ef3, 0x6 * _0x116ef3), _0x247003['bezierCurveTo'](25.5 * _0x116ef3, 0x38 * _0x116ef3, 25.5 * _0x116ef3, 0x38 * _0x116ef3, 0x1c * _0x116ef3, 0x6a * _0x116ef3), fill_path(_0x247003, undefined, _0x19ac53[0x5], 0xe * _0x116ef3), _0x247003['beginPath'](), _0x247003['lineCap'] = 'round', _0x247003['lineJoin'] = 'round', _0x247003['moveTo'](0x3b * _0x116ef3, 0xa * _0x116ef3), _0x247003['bezierCurveTo'](0x3d * _0x116ef3, 51.5 * _0x116ef3, 0x3d * _0x116ef3, 51.5 * _0x116ef3, 0x3f * _0x116ef3, 0x5d * _0x116ef3), fill_path(_0x247003, undefined, _0x19ac53[0x5], 0xe * _0x116ef3), _0x247003['beginPath'](), _0x247003['lineCap'] = 'round', _0x247003['lineJoin'] = 'round', _0x247003['moveTo'](0x7 * _0x116ef3, 0x37 * _0x116ef3), _0x247003['bezierCurveTo'](33.5 * _0x116ef3, 0x37 * _0x116ef3, 33.5 * _0x116ef3, 0x37 * _0x116ef3, 0x3c * _0x116ef3, 0x37 * _0x116ef3), fill_path(_0x247003, undefined, _0x19ac53[0x5], 0xe * _0x116ef3), _0x247003['translate'](0xa * _0x116ef3, 0x0 * _0x116ef3), _0x247003['beginPath'](), _0x247003['lineCap'] = 'round', _0x247003['lineJoin'] = 'round', _0x247003['moveTo'](0x7b * _0x116ef3, 0x10 * _0x116ef3), _0x247003['bezierCurveTo'](0x67 * _0x116ef3, 16.5 * _0x116ef3, 0x67 * _0x116ef3, 16.5 * _0x116ef3, 0x53 * _0x116ef3, 0x11 * _0x116ef3), _0x247003['bezierCurveTo'](83.5 * _0x116ef3, 0x3d * _0x116ef3, 83.5 * _0x116ef3, 0x3d * _0x116ef3, 0x54 * _0x116ef3, 0x69 * _0x116ef3), _0x247003['bezierCurveTo'](0x6a * _0x116ef3, 0x69 * _0x116ef3, 0x6a * _0x116ef3, 0x69 * _0x116ef3, 0x80 * _0x116ef3, 0x69 * _0x116ef3), fill_path(_0x247003, undefined, _0x19ac53[0x5], 0xe * _0x116ef3), _0x247003['beginPath'](), _0x247003['lineCap'] = 'round', _0x247003['lineJoin'] = 'round', _0x247003['moveTo'](0x48 * _0x116ef3, 0x3f * _0x116ef3), _0x247003['bezierCurveTo'](88.5 * _0x116ef3, 62.5 * _0x116ef3, 88.5 * _0x116ef3, 62.5 * _0x116ef3, 0x69 * _0x116ef3, 0x3e * _0x116ef3), fill_path(_0x247003, undefined, _0x19ac53[0x5], 0xe * _0x116ef3), _0x247003['translate'](0xa * _0x116ef3, 0xa * _0x116ef3), _0x247003['beginPath'](), _0x247003['lineCap'] = 'round', _0x247003['lineJoin'] = 'round', _0x247003['moveTo'](0x8d * _0x116ef3, 0x8 * _0x116ef3), _0x247003['bezierCurveTo'](0x8f * _0x116ef3, 0x32 * _0x116ef3, 0x8f * _0x116ef3, 0x32 * _0x116ef3, 0x91 * _0x116ef3, 0x5c * _0x116ef3), _0x247003['bezierCurveTo'](0xa9 * _0x116ef3, 88.5 * _0x116ef3, 0xa9 * _0x116ef3, 88.5 * _0x116ef3, 0xc1 * _0x116ef3, 0x55 * _0x116ef3), fill_path(_0x247003, undefined, _0x19ac53[0x5], 0xe * _0x116ef3), _0x247003['translate'](0xa * _0x116ef3, -0xa * _0x116ef3), _0x247003['beginPath'](), _0x247003['lineCap'] = 'round', _0x247003['lineJoin'] = 'round', _0x247003['moveTo'](0xcd * _0x116ef3, 0x7c * _0x116ef3), _0x247003['bezierCurveTo'](0xcd * _0x116ef3, 0x45 * _0x116ef3, 0xcd * _0x116ef3, 0x45 * _0x116ef3, 0xcd * _0x116ef3, 0xe * _0x116ef3), _0x247003['bezierCurveTo'](0xef * _0x116ef3, 0xf * _0x116ef3, 0xfa * _0x116ef3, 0x25 * _0x116ef3, 0xf9 * _0x116ef3, 0x31 * _0x116ef3), _0x247003['bezierCurveTo'](0xfb * _0x116ef3, 0x41 * _0x116ef3, 0xf2 * _0x116ef3, 0x4c * _0x116ef3, 0xce * _0x116ef3, 0x4b * _0x116ef3), fill_path(_0x247003, undefined, _0x19ac53[0x5], 0xe * _0x116ef3));
        }
    }
    return _0x4d2b62;
}

function create_dragon_helmet(_0x2d1e45, _0x19055b, _0x3bb709) {
    var _0xe1176b = document['createElement']('canvas'),
        _0x26700e = _0xe1176b['getContext']('2d');
    return _0xe1176b['width'] = 0x159 * _0x2d1e45, _0xe1176b['height'] = 0xfa * _0x2d1e45, _0x26700e['beginPath'](), _0x26700e['lineCap'] = 'round', _0x26700e['lineJoin'] = 'round', _0x26700e['moveTo'](0x69 * _0x2d1e45, 0x3a * _0x2d1e45), _0x26700e['bezierCurveTo'](100.5 * _0x2d1e45, 0x2b * _0x2d1e45, 100.5 * _0x2d1e45, 0x2b * _0x2d1e45, 0x60 * _0x2d1e45, 0x1c * _0x2d1e45), _0x26700e['bezierCurveTo'](119.5 * _0x2d1e45, 33.5 * _0x2d1e45, 119.5 * _0x2d1e45, 33.5 * _0x2d1e45, 0x8f * _0x2d1e45, 0x27 * _0x2d1e45), _0x26700e['bezierCurveTo'](0xaa * _0x2d1e45, 0x25 * _0x2d1e45, 0xb1 * _0x2d1e45, 0x25 * _0x2d1e45, 0xbc * _0x2d1e45, 0x28 * _0x2d1e45), _0x26700e['bezierCurveTo'](0xd5 * _0x2d1e45, 33.5 * _0x2d1e45, 0xd5 * _0x2d1e45, 33.5 * _0x2d1e45, 0xee * _0x2d1e45, 0x1b * _0x2d1e45), _0x26700e['bezierCurveTo'](0xe7 * _0x2d1e45, 0x34 * _0x2d1e45, 0xea * _0x2d1e45, 42.5 * _0x2d1e45, 0xe6 * _0x2d1e45, 0x3a * _0x2d1e45), _0x26700e['closePath'](), fill_path(_0x26700e, _0x3bb709[0x1], _0x3bb709[0x2], 0x8 * _0x2d1e45), _0x26700e['beginPath'](), _0x26700e['lineCap'] = 'round', _0x26700e['lineJoin'] = 'round', _0x26700e['moveTo'](0x6c * _0x2d1e45, 0x33 * _0x2d1e45), _0x26700e['bezierCurveTo'](0x5b * _0x2d1e45, 0x37 * _0x2d1e45, 0x55 * _0x2d1e45, 0x2c * _0x2d1e45, 0x56 * _0x2d1e45, 0x1d * _0x2d1e45), _0x26700e['bezierCurveTo'](0x3e * _0x2d1e45, 0x32 * _0x2d1e45, 0x4e * _0x2d1e45, 0x45 * _0x2d1e45, 0x5c * _0x2d1e45, 0x4b * _0x2d1e45), _0x26700e['closePath'](), fill_path(_0x26700e, _0x3bb709[0x3], _0x3bb709[0x4], 0x8 * _0x2d1e45), _0x26700e['beginPath'](), _0x26700e['lineCap'] = 'round', _0x26700e['lineJoin'] = 'round', _0x26700e['moveTo'](0xf9 * _0x2d1e45, 0x1b * _0x2d1e45), _0x26700e['bezierCurveTo'](0x111 * _0x2d1e45, 0x31 * _0x2d1e45, 0x106 * _0x2d1e45, 0x44 * _0x2d1e45, 0xf6 * _0x2d1e45, 0x4d * _0x2d1e45), _0x26700e['bezierCurveTo'](0xe7 * _0x2d1e45, 0x3b * _0x2d1e45, 0xec * _0x2d1e45, 66.5 * _0x2d1e45, 0xe2 * _0x2d1e45, 0x38 * _0x2d1e45), _0x26700e['bezierCurveTo'](0xf3 * _0x2d1e45, 0x35 * _0x2d1e45, 0xfc * _0x2d1e45, 0x2b * _0x2d1e45, 0xf9 * _0x2d1e45, 0x1c * _0x2d1e45), _0x26700e['closePath'](), fill_path(_0x26700e, _0x3bb709[0x3], _0x3bb709[0x4], 0x8 * _0x2d1e45), _0x26700e['beginPath'](), _0x26700e['lineCap'] = 'round', _0x26700e['lineJoin'] = 'round', _0x26700e['moveTo'](0x57 * _0x2d1e45, 0x4e * _0x2d1e45), _0x26700e['bezierCurveTo'](0x57 * _0x2d1e45, 0x3b * _0x2d1e45, 0x62 * _0x2d1e45, 0x2e * _0x2d1e45, 0x7f * _0x2d1e45, 0x30 * _0x2d1e45), _0x26700e['bezierCurveTo'](0xb0 * _0x2d1e45, 48.5 * _0x2d1e45, 0xb0 * _0x2d1e45, 48.5 * _0x2d1e45, 0xe1 * _0x2d1e45, 0x31 * _0x2d1e45), _0x26700e['bezierCurveTo'](0xf3 * _0x2d1e45, 0x31 * _0x2d1e45, 0xfd * _0x2d1e45, 0x3b * _0x2d1e45, 0xfd * _0x2d1e45, 0x4c * _0x2d1e45), _0x26700e['bezierCurveTo'](0xd3 * _0x2d1e45, 85.5 * _0x2d1e45, 0xd3 * _0x2d1e45, 85.5 * _0x2d1e45, 0xa9 * _0x2d1e45, 0x5f * _0x2d1e45), _0x26700e['closePath'](), fill_path(_0x26700e, _0x3bb709[0x5], _0x3bb709[0x6], 0x8 * _0x2d1e45), _0x26700e['beginPath'](), _0x26700e['lineCap'] = 'round', _0x26700e['lineJoin'] = 'round', _0x26700e['moveTo'](0x38 * _0x2d1e45, 0x69 * _0x2d1e45), _0x26700e['bezierCurveTo'](0x38 * _0x2d1e45, 0x5c * _0x2d1e45, 0x3b * _0x2d1e45, 0x56 * _0x2d1e45, 0x41 * _0x2d1e45, 0x49 * _0x2d1e45), _0x26700e['bezierCurveTo'](62.5 * _0x2d1e45, 61.5 * _0x2d1e45, 62.5 * _0x2d1e45, 61.5 * _0x2d1e45, 0x3c * _0x2d1e45, 0x32 * _0x2d1e45), _0x26700e['bezierCurveTo'](99.5 * _0x2d1e45, 64.5 * _0x2d1e45, 99.5 * _0x2d1e45, 64.5 * _0x2d1e45, 0x8b * _0x2d1e45, 0x4f * _0x2d1e45), _0x26700e['bezierCurveTo'](0xa4 * _0x2d1e45, 0x4d * _0x2d1e45, 0xb1 * _0x2d1e45, 0x4c * _0x2d1e45, 0xcb * _0x2d1e45, 0x4e * _0x2d1e45), _0x26700e['bezierCurveTo'](0xf2 * _0x2d1e45, 63.5 * _0x2d1e45, 0xf2 * _0x2d1e45, 63.5 * _0x2d1e45, 0x119 * _0x2d1e45, 0x31 * _0x2d1e45), _0x26700e['bezierCurveTo'](0x117 * _0x2d1e45, 60.5 * _0x2d1e45, 0x117 * _0x2d1e45, 60.5 * _0x2d1e45, 0x115 * _0x2d1e45, 0x48 * _0x2d1e45), _0x26700e['bezierCurveTo'](0x11e * _0x2d1e45, 0x58 * _0x2d1e45, 0x11e * _0x2d1e45, 0x60 * _0x2d1e45, 0x11f * _0x2d1e45, 0x68 * _0x2d1e45), _0x26700e['bezierCurveTo'](228.5 * _0x2d1e45, 0x7f * _0x2d1e45, 228.5 * _0x2d1e45, 0x7f * _0x2d1e45, 0xaa * _0x2d1e45, 0x96 * _0x2d1e45), _0x26700e['closePath'](), fill_path(_0x26700e, _0x3bb709[0x1], _0x3bb709[0x2], 0x8 * _0x2d1e45), _0x26700e['beginPath'](), _0x26700e['lineCap'] = 'round', _0x26700e['lineJoin'] = 'round', _0x26700e['moveTo'](0x30 * _0x2d1e45, 0x82 * _0x2d1e45), _0x26700e['bezierCurveTo'](0x3d * _0x2d1e45, 0x9b * _0x2d1e45, 0x3f * _0x2d1e45, 0xa5 * _0x2d1e45, 0x38 * _0x2d1e45, 0xab * _0x2d1e45), _0x26700e['bezierCurveTo'](0x30 * _0x2d1e45, 0xb1 * _0x2d1e45, 0x28 * _0x2d1e45, 0xab * _0x2d1e45, 0x26 * _0x2d1e45, 0xb2 * _0x2d1e45), _0x26700e['bezierCurveTo'](0x21 * _0x2d1e45, 0xb4 * _0x2d1e45, 0x25 * _0x2d1e45, 0xbc * _0x2d1e45, 0x2f * _0x2d1e45, 0xd0 * _0x2d1e45), _0x26700e['bezierCurveTo'](0x34 * _0x2d1e45, 0xdd * _0x2d1e45, 0x37 * _0x2d1e45, 0xde * _0x2d1e45, 0x4b * _0x2d1e45, 0xe5 * _0x2d1e45), _0x26700e['bezierCurveTo'](0x5b * _0x2d1e45, 0xd5 * _0x2d1e45, 0x62 * _0x2d1e45, 0xd4 * _0x2d1e45, 0x70 * _0x2d1e45, 0xdb * _0x2d1e45), _0x26700e['bezierCurveTo'](0xa7 * _0x2d1e45, 0xe1 * _0x2d1e45, 0xbb * _0x2d1e45, 0xe0 * _0x2d1e45, 0xde * _0x2d1e45, 0xdc * _0x2d1e45), _0x26700e['bezierCurveTo'](0xf4 * _0x2d1e45, 0xd6 * _0x2d1e45, 0xf7 * _0x2d1e45, 0xd5 * _0x2d1e45, 0x107 * _0x2d1e45, 0xe5 * _0x2d1e45), _0x26700e['bezierCurveTo'](0x127 * _0x2d1e45, 0xdc * _0x2d1e45, 0x123 * _0x2d1e45, 0xd7 * _0x2d1e45, 0x12d * _0x2d1e45, 0xc2 * _0x2d1e45), _0x26700e['bezierCurveTo'](0x134 * _0x2d1e45, 0xb2 * _0x2d1e45, 0x135 * _0x2d1e45, 0xb0 * _0x2d1e45, 0x12e * _0x2d1e45, 0xad * _0x2d1e45), _0x26700e['bezierCurveTo'](0x122 * _0x2d1e45, 0xb1 * _0x2d1e45, 0x121 * _0x2d1e45, 0xb1 * _0x2d1e45, 0x11b * _0x2d1e45, 0xa9 * _0x2d1e45), _0x26700e['bezierCurveTo'](0x117 * _0x2d1e45, 0xa3 * _0x2d1e45, 0x117 * _0x2d1e45, 0xa1 * _0x2d1e45, 0x122 * _0x2d1e45, 0x82 * _0x2d1e45), _0x26700e['bezierCurveTo'](0x10e * _0x2d1e45, 0x7f * _0x2d1e45, 0x10e * _0x2d1e45, 0x7f * _0x2d1e45, 0xfa * _0x2d1e45, 0x7c * _0x2d1e45), _0x26700e['bezierCurveTo'](0xd1 * _0x2d1e45, 137.5 * _0x2d1e45, 0xd1 * _0x2d1e45, 137.5 * _0x2d1e45, 0xa8 * _0x2d1e45, 0x97 * _0x2d1e45), _0x26700e['bezierCurveTo'](0x79 * _0x2d1e45, 0x87 * _0x2d1e45, 0x79 * _0x2d1e45, 0x87 * _0x2d1e45, 0x4a * _0x2d1e45, 0x77 * _0x2d1e45), _0x26700e['closePath'](), fill_path(_0x26700e, _0x3bb709[0x1], _0x3bb709[0x2], 0x8 * _0x2d1e45), _0x26700e['globalCompositeOperation'] = 'destination-out', _0x26700e['beginPath'](), _0x26700e['lineCap'] = 'round', _0x26700e['lineJoin'] = 'round', _0x26700e['moveTo'](0x85 * _0x2d1e45, 0x9e * _0x2d1e45), _0x26700e['bezierCurveTo'](0x98 * _0x2d1e45, 0xc1 * _0x2d1e45, 0x9e * _0x2d1e45, 0xcd * _0x2d1e45, 0x8c * _0x2d1e45, 0xcb * _0x2d1e45), _0x26700e['bezierCurveTo'](0x63 * _0x2d1e45, 0xc3 * _0x2d1e45, 0x60 * _0x2d1e45, 0xbd * _0x2d1e45, 0x56 * _0x2d1e45, 0xad * _0x2d1e45), _0x26700e['bezierCurveTo'](0x50 * _0x2d1e45, 0x9f * _0x2d1e45, 0x58 * _0x2d1e45, 0x91 * _0x2d1e45, 0x68 * _0x2d1e45, 0x8d * _0x2d1e45), _0x26700e['closePath'](), fill_path(_0x26700e, _0x3bb709[0x7], _0x3bb709[0x8], 0x8 * _0x2d1e45), _0x26700e['beginPath'](), _0x26700e['lineCap'] = 'round', _0x26700e['lineJoin'] = 'round', _0x26700e['moveTo'](0xd7 * _0x2d1e45, 0x92 * _0x2d1e45), _0x26700e['bezierCurveTo'](0xcc * _0x2d1e45, 0xa7 * _0x2d1e45, 0xcc * _0x2d1e45, 0xa7 * _0x2d1e45, 0xc1 * _0x2d1e45, 0xbc * _0x2d1e45), _0x26700e['bezierCurveTo'](0xbb * _0x2d1e45, 0xc9 * _0x2d1e45, 0xbf * _0x2d1e45, 0xd1 * _0x2d1e45, 0xd5 * _0x2d1e45, 0xc9 * _0x2d1e45), _0x26700e['bezierCurveTo'](0xf7 * _0x2d1e45, 0xc0 * _0x2d1e45, 0xfd * _0x2d1e45, 0xb5 * _0x2d1e45, 0x101 * _0x2d1e45, 0xa9 * _0x2d1e45), _0x26700e['bezierCurveTo'](0x104 * _0x2d1e45, 0x9d * _0x2d1e45, 0xfe * _0x2d1e45, 0x95 * _0x2d1e45, 0xf3 * _0x2d1e45, 0x8d * _0x2d1e45), _0x26700e['closePath'](), fill_path(_0x26700e, _0x3bb709[0x7], _0x3bb709[0x8], 0x8 * _0x2d1e45), _0x26700e['globalCompositeOperation'] = 'source-over', _0x26700e['beginPath'](), _0x26700e['lineCap'] = 'round', _0x26700e['lineJoin'] = 'round', _0x26700e['moveTo'](0x85 * _0x2d1e45, 0x9e * _0x2d1e45), _0x26700e['bezierCurveTo'](0x98 * _0x2d1e45, 0xc1 * _0x2d1e45, 0x9e * _0x2d1e45, 0xcd * _0x2d1e45, 0x8c * _0x2d1e45, 0xcb * _0x2d1e45), _0x26700e['bezierCurveTo'](0x63 * _0x2d1e45, 0xc3 * _0x2d1e45, 0x60 * _0x2d1e45, 0xbd * _0x2d1e45, 0x56 * _0x2d1e45, 0xad * _0x2d1e45), _0x26700e['bezierCurveTo'](0x50 * _0x2d1e45, 0x9f * _0x2d1e45, 0x58 * _0x2d1e45, 0x91 * _0x2d1e45, 0x68 * _0x2d1e45, 0x8d * _0x2d1e45), _0x26700e['closePath'](), fill_path(_0x26700e, undefined, _0x3bb709[0x8], 0x8 * _0x2d1e45), _0x26700e['beginPath'](), _0x26700e['lineCap'] = 'round', _0x26700e['lineJoin'] = 'round', _0x26700e['moveTo'](0xd7 * _0x2d1e45, 0x92 * _0x2d1e45), _0x26700e['bezierCurveTo'](0xcc * _0x2d1e45, 0xa7 * _0x2d1e45, 0xcc * _0x2d1e45, 0xa7 * _0x2d1e45, 0xc1 * _0x2d1e45, 0xbc * _0x2d1e45), _0x26700e['bezierCurveTo'](0xbb * _0x2d1e45, 0xc9 * _0x2d1e45, 0xbf * _0x2d1e45, 0xd1 * _0x2d1e45, 0xd5 * _0x2d1e45, 0xc9 * _0x2d1e45), _0x26700e['bezierCurveTo'](0xf7 * _0x2d1e45, 0xc0 * _0x2d1e45, 0xfd * _0x2d1e45, 0xb5 * _0x2d1e45, 0x101 * _0x2d1e45, 0xa9 * _0x2d1e45), _0x26700e['bezierCurveTo'](0x104 * _0x2d1e45, 0x9d * _0x2d1e45, 0xfe * _0x2d1e45, 0x95 * _0x2d1e45, 0xf3 * _0x2d1e45, 0x8d * _0x2d1e45), _0x26700e['closePath'](), fill_path(_0x26700e, undefined, _0x3bb709[0x8], 0x8 * _0x2d1e45), _0x26700e['beginPath'](), _0x26700e['lineCap'] = 'round', _0x26700e['lineJoin'] = 'round', _0x26700e['moveTo'](0x27 * _0x2d1e45, 0x42 * _0x2d1e45), _0x26700e['bezierCurveTo'](0x39 * _0x2d1e45, 0x6b * _0x2d1e45, 0x3f * _0x2d1e45, 0x60 * _0x2d1e45, 0x78 * _0x2d1e45, 0x6a * _0x2d1e45), _0x26700e['bezierCurveTo'](0x9a * _0x2d1e45, 0x70 * _0x2d1e45, 0xa3 * _0x2d1e45, 0x74 * _0x2d1e45, 0xae * _0x2d1e45, 0x87 * _0x2d1e45), _0x26700e['bezierCurveTo'](0xb4 * _0x2d1e45, 0x6d * _0x2d1e45, 0xbf * _0x2d1e45, 0x71 * _0x2d1e45, 0xed * _0x2d1e45, 0x67 * _0x2d1e45), _0x26700e['bezierCurveTo'](0x114 * _0x2d1e45, 0x64 * _0x2d1e45, 0x121 * _0x2d1e45, 0x5e * _0x2d1e45, 0x12d * _0x2d1e45, 0x43 * _0x2d1e45), _0x26700e['bezierCurveTo'](0x13d * _0x2d1e45, 0x70 * _0x2d1e45, 0x12d * _0x2d1e45, 0x8d * _0x2d1e45, 0x112 * _0x2d1e45, 0x8b * _0x2d1e45), _0x26700e['bezierCurveTo'](0xcc * _0x2d1e45, 0xa6 * _0x2d1e45, 0xc5 * _0x2d1e45, 0xa9 * _0x2d1e45, 0xad * _0x2d1e45, 0xb7 * _0x2d1e45), _0x26700e['bezierCurveTo'](0xaa * _0x2d1e45, 0xb7 * _0x2d1e45, 0xaa * _0x2d1e45, 0xb7 * _0x2d1e45, 0xa7 * _0x2d1e45, 0xb7 * _0x2d1e45), _0x26700e['bezierCurveTo'](0x84 * _0x2d1e45, 0xa0 * _0x2d1e45, 0x70 * _0x2d1e45, 0x9c * _0x2d1e45, 0x49 * _0x2d1e45, 0x8d * _0x2d1e45), _0x26700e['bezierCurveTo'](0x2b * _0x2d1e45, 0x92 * _0x2d1e45, 0x1b * _0x2d1e45, 0x78 * _0x2d1e45, 0x27 * _0x2d1e45, 0x42 * _0x2d1e45), _0x26700e['closePath'](), fill_path(_0x26700e, _0x3bb709[0x7], _0x3bb709[0x8], 0x8 * _0x2d1e45), _0x26700e['beginPath'](), _0x26700e['lineCap'] = 'round', _0x26700e['lineJoin'] = 'round', _0x26700e['moveTo'](0x73 * _0x2d1e45, 0xb9 * _0x2d1e45), _0x26700e['bezierCurveTo'](0x73 * _0x2d1e45, 0xc8 * _0x2d1e45, 0x76 * _0x2d1e45, 0xce * _0x2d1e45, 0x7c * _0x2d1e45, 0xd4 * _0x2d1e45), _0x26700e['bezierCurveTo'](0x85 * _0x2d1e45, 0xdf * _0x2d1e45, 0x84 * _0x2d1e45, 0xe7 * _0x2d1e45, 0x79 * _0x2d1e45, 0xe6 * _0x2d1e45), _0x26700e['bezierCurveTo'](0x6c * _0x2d1e45, 0xe2 * _0x2d1e45, 0x6c * _0x2d1e45, 0xd7 * _0x2d1e45, 0x6b * _0x2d1e45, 0xd1 * _0x2d1e45), _0x26700e['bezierCurveTo'](0x6a * _0x2d1e45, 0xc9 * _0x2d1e45, 0x6e * _0x2d1e45, 0xc4 * _0x2d1e45, 0x72 * _0x2d1e45, 0xb9 * _0x2d1e45), _0x26700e['closePath'](), fill_path(_0x26700e, _0x3bb709[0x3], _0x3bb709[0x4], 0x8 * _0x2d1e45), _0x26700e['beginPath'](), _0x26700e['lineCap'] = 'round', _0x26700e['lineJoin'] = 'round', _0x26700e['moveTo'](0xe2 * _0x2d1e45, 0xba * _0x2d1e45), _0x26700e['bezierCurveTo'](0xea * _0x2d1e45, 0xc9 * _0x2d1e45, 0xee * _0x2d1e45, 0xd1 * _0x2d1e45, 0xe4 * _0x2d1e45, 0xe1 * _0x2d1e45), _0x26700e['bezierCurveTo'](0xdf * _0x2d1e45, 0xe9 * _0x2d1e45, 0xd5 * _0x2d1e45, 0xe9 * _0x2d1e45, 0xd3 * _0x2d1e45, 0xe2 * _0x2d1e45), _0x26700e['bezierCurveTo'](0xce * _0x2d1e45, 0xdb * _0x2d1e45, 0xd9 * _0x2d1e45, 0xd8 * _0x2d1e45, 0xdd * _0x2d1e45, 0xcf * _0x2d1e45), _0x26700e['bezierCurveTo'](0xe1 * _0x2d1e45, 0xc4 * _0x2d1e45, 0xe1 * _0x2d1e45, 0xbf * _0x2d1e45, 0xe2 * _0x2d1e45, 0xba * _0x2d1e45), _0x26700e['closePath'](), fill_path(_0x26700e, _0x3bb709[0x3], _0x3bb709[0x4], 0x8 * _0x2d1e45), _0x26700e['beginPath'](), _0x26700e['lineCap'] = 'round', _0x26700e['lineJoin'] = 'round', _0x26700e['moveTo'](0xac * _0x2d1e45, 0x6e * _0x2d1e45), _0x26700e['bezierCurveTo'](0xbd * _0x2d1e45, 0x99 * _0x2d1e45, 0xc0 * _0x2d1e45, 0xa0 * _0x2d1e45, 0xbc * _0x2d1e45, 0xaf * _0x2d1e45), _0x26700e['bezierCurveTo'](0xb7 * _0x2d1e45, 0xbe * _0x2d1e45, 0xb0 * _0x2d1e45, 0xc5 * _0x2d1e45, 0xa5 * _0x2d1e45, 0xbf * _0x2d1e45), _0x26700e['bezierCurveTo'](0x99 * _0x2d1e45, 0xb5 * _0x2d1e45, 0x98 * _0x2d1e45, 0xa6 * _0x2d1e45, 0x9d * _0x2d1e45, 0x97 * _0x2d1e45), _0x26700e['bezierCurveTo'](164.5 * _0x2d1e45, 0x83 * _0x2d1e45, 164.5 * _0x2d1e45, 0x83 * _0x2d1e45, 0xac * _0x2d1e45, 0x6f * _0x2d1e45), _0x26700e['closePath'](), fill_path(_0x26700e, _0x3bb709[0x3], _0x3bb709[0x4], 0x8 * _0x2d1e45), _0xe1176b;
}

function create_fir_one(_0x4abb00, _0x2ca218) {
    var _0x1c3c0e = document['createElement']('canvas'),
        _0x577519 = _0x1c3c0e['getContext']('2d');
    return _0x1c3c0e['width'] = 0x95 * _0x4abb00, _0x1c3c0e['height'] = 0x99 * _0x4abb00, _0x577519['globalAlpha'] = 0.5, circle(_0x577519, 74.5 * _0x4abb00, 0x55 * _0x4abb00, 0x42 * _0x4abb00), fill_path(_0x577519, _0x2ca218[0x0]), _0x577519['globalAlpha'] = 0x1, circle(_0x577519, 75.5 * _0x4abb00, 72.5 * _0x4abb00, 0x43 * _0x4abb00), fill_path(_0x577519, _0x2ca218[0x1], _0x2ca218[0x2], 0x4 * _0x4abb00), circle(_0x577519, 75.5 * _0x4abb00, 73.5 * _0x4abb00, 0x36 * _0x4abb00), fill_path(_0x577519, _0x2ca218[0x3]), _0x577519['globalAlpha'] = 0.5, circle(_0x577519, 74.5 * _0x4abb00, 80.5 * _0x4abb00, 0x27 * _0x4abb00), fill_path(_0x577519, _0x2ca218[0x4]), _0x577519['globalAlpha'] = 0x1, circle(_0x577519, 74.5 * _0x4abb00, 74.5 * _0x4abb00, 0x25 * _0x4abb00), fill_path(_0x577519, _0x2ca218[0x5]), _0x1c3c0e;
}

function create_fir_two(_0x4f7f04, _0xade0d) {
    var _0x172b53 = document['createElement']('canvas'),
        _0x512eff = _0x172b53['getContext']('2d');
    return _0x172b53['width'] = 0xad * _0x4f7f04, _0x172b53['height'] = 0xb2 * _0x4f7f04, _0x512eff['globalAlpha'] = 0.5, circle(_0x512eff, 86.5 * _0x4f7f04, 0x62 * _0x4f7f04, 0x50 * _0x4f7f04), fill_path(_0x512eff, _0xade0d[0x0]), _0x512eff['globalAlpha'] = 0x1, circle(_0x512eff, 86.5 * _0x4f7f04, 0x59 * _0x4f7f04, 0x51 * _0x4f7f04), fill_path(_0x512eff, _0xade0d[0x1], _0xade0d[0x2], 0x4 * _0x4f7f04), circle(_0x512eff, 86.5 * _0x4f7f04, 0x56 * _0x4f7f04, 0x3b * _0x4f7f04), fill_path(_0x512eff, _0xade0d[0x3], _0xade0d[0x4], 0x4 * _0x4f7f04), _0x512eff['globalAlpha'] = 0.5, circle(_0x512eff, 86.5 * _0x4f7f04, 0x5f * _0x4f7f04, 0x22 * _0x4f7f04), fill_path(_0x512eff, _0xade0d[0x0]), _0x512eff['globalAlpha'] = 0x1, circle(_0x512eff, 86.5 * _0x4f7f04, 0x59 * _0x4f7f04, 0x22 * _0x4f7f04), fill_path(_0x512eff, _0xade0d[0x5]), _0x172b53;
}

function create_fir_three(_0x4bce36, _0x25e880) {
    var _0x1e0cac = document['createElement']('canvas'),
        _0x4270cf = _0x1e0cac['getContext']('2d');
    return _0x1e0cac['width'] = 0xfd * _0x4bce36, _0x1e0cac['height'] = 0x104 * _0x4bce36, _0x4270cf['globalAlpha'] = 0.5, circle(_0x4270cf, 126.5 * _0x4bce36, 0x86 * _0x4bce36, 0x77 * _0x4bce36), fill_path(_0x4270cf, _0x25e880[0x0]), _0x4270cf['globalAlpha'] = 0x1, circle(_0x4270cf, 126.5 * _0x4bce36, 0x7c * _0x4bce36, 0x77 * _0x4bce36), fill_path(_0x4270cf, _0x25e880[0x1], _0x25e880[0x2], 0x4 * _0x4bce36), circle(_0x4270cf, 126.5 * _0x4bce36, 0x7f * _0x4bce36, 0x64 * _0x4bce36), fill_path(_0x4270cf, _0x25e880[0x3]), _0x4270cf['globalAlpha'] = 0.5, circle(_0x4270cf, 126.5 * _0x4bce36, 0x87 * _0x4bce36, 0x51 * _0x4bce36), fill_path(_0x4270cf, _0x25e880[0x0]), _0x4270cf['globalAlpha'] = 0x1, circle(_0x4270cf, 126.5 * _0x4bce36, 0x7d * _0x4bce36, 0x54 * _0x4bce36), fill_path(_0x4270cf, _0x25e880[0x4], _0x25e880[0x5], 0x4 * _0x4bce36), circle(_0x4270cf, 126.5 * _0x4bce36, 0x7d * _0x4bce36, 0x3d * _0x4bce36), fill_path(_0x4270cf, _0x25e880[0x6], _0x25e880[0x7], 0x4 * _0x4bce36), _0x4270cf['globalAlpha'] = 0.5, circle(_0x4270cf, 126.5 * _0x4bce36, 0x86 * _0x4bce36, 0x28 * _0x4bce36), fill_path(_0x4270cf, _0x25e880[0x8]), _0x4270cf['globalAlpha'] = 0x1, circle(_0x4270cf, 126.5 * _0x4bce36, 0x7d * _0x4bce36, 0x28 * _0x4bce36), fill_path(_0x4270cf, _0x25e880[0x9]), _0x1e0cac;
}

function create_amethyst(_0x508132, _0x44e682, _0x4bb82c) {
    var _0x4dc21d = document['createElement']('canvas'),
        _0x3e5296 = _0x4dc21d['getContext']('2d');
    return _0x4dc21d['width'] = 0x8b * _0x508132, _0x4dc21d['height'] = 0x87 * _0x508132, _0x3e5296['translate'](0x0, 0xa * _0x508132), _0x3e5296['globalAlpha'] = _0x44e682 ? 0.5 : 0x1, _0x3e5296['beginPath'](), _0x3e5296['lineCap'] = 'round', _0x3e5296['lineJoin'] = 'round', _0x3e5296['moveTo'](0x20 * _0x508132, 0x4d * _0x508132), _0x3e5296['bezierCurveTo'](0x6 * _0x508132, 0x29 * _0x508132, 0x6 * _0x508132, 0x21 * _0x508132, 0xc * _0x508132, 0x1b * _0x508132), _0x3e5296['bezierCurveTo'](0x1b * _0x508132, 0x6 * _0x508132, 0x1c * _0x508132, 0x6 * _0x508132, 0x25 * _0x508132, 0x6 * _0x508132), _0x3e5296['bezierCurveTo'](0x3e * _0x508132, 0x3 * _0x508132, 0x40 * _0x508132, 0x5 * _0x508132, 0x43 * _0x508132, 0xd * _0x508132), _0x3e5296['bezierCurveTo'](0x50 * _0x508132, 0x24 * _0x508132, 73.5 * _0x508132, 0x19 * _0x508132, 0x50 * _0x508132, 0x25 * _0x508132), _0x3e5296['bezierCurveTo'](73.5 * _0x508132, 0x36 * _0x508132, 0x41 * _0x508132, 0x4a * _0x508132, 0x43 * _0x508132, 0x47 * _0x508132), _0x3e5296['closePath'](), fill_path(_0x3e5296, _0x4bb82c[0x0]), _0x3e5296['beginPath'](), _0x3e5296['lineCap'] = 'round', _0x3e5296['lineJoin'] = 'round', _0x3e5296['moveTo'](0x41 * _0x508132, 0x25 * _0x508132), _0x3e5296['bezierCurveTo'](0x69 * _0x508132, 0x28 * _0x508132, 0x71 * _0x508132, 0x27 * _0x508132, 0x75 * _0x508132, 0x30 * _0x508132), _0x3e5296['bezierCurveTo'](0x7e * _0x508132, 0x46 * _0x508132, 0x80 * _0x508132, 0x48 * _0x508132, 0x7c * _0x508132, 0x50 * _0x508132), _0x3e5296['bezierCurveTo'](0x70 * _0x508132, 0x65 * _0x508132, 0x6e * _0x508132, 0x68 * _0x508132, 0x63 * _0x508132, 0x68 * _0x508132), _0x3e5296['bezierCurveTo'](0x3b * _0x508132, 0x64 * _0x508132, 0x37 * _0x508132, 0x63 * _0x508132, 0x38 * _0x508132, 0x63 * _0x508132), _0x3e5296['bezierCurveTo'](47.5 * _0x508132, 0x4f * _0x508132, 0x2d * _0x508132, 0x42 * _0x508132, 0x27 * _0x508132, 0x3b * _0x508132), _0x3e5296['closePath'](), fill_path(_0x3e5296, _0x4bb82c[0x0]), _0x3e5296['beginPath'](), _0x3e5296['lineCap'] = 'round', _0x3e5296['lineJoin'] = 'round', _0x3e5296['moveTo'](0x1e * _0x508132, 0x3f * _0x508132), _0x3e5296['bezierCurveTo'](0x5 * _0x508132, 0x63 * _0x508132, 0x5 * _0x508132, 0x65 * _0x508132, 0x8 * _0x508132, 0x67 * _0x508132), _0x3e5296['bezierCurveTo'](0x13 * _0x508132, 0x7b * _0x508132, 0x16 * _0x508132, 0x7d * _0x508132, 0x1c * _0x508132, 0x7e * _0x508132), _0x3e5296['bezierCurveTo'](0x39 * _0x508132, 0x7f * _0x508132, 0x37 * _0x508132, 0x7f * _0x508132, 0x3a * _0x508132, 0x78 * _0x508132), _0x3e5296['bezierCurveTo'](0x52 * _0x508132, 0x56 * _0x508132, 0x53 * _0x508132, 0x4e * _0x508132, 0x52 * _0x508132, 0x57 * _0x508132), _0x3e5296['closePath'](), fill_path(_0x3e5296, _0x4bb82c[0x0]), _0x3e5296['translate'](0x0, -0xa * _0x508132), _0x3e5296['globalAlpha'] = 0x1, _0x3e5296['beginPath'](), _0x3e5296['lineCap'] = 'round', _0x3e5296['lineJoin'] = 'round', _0x3e5296['moveTo'](0x20 * _0x508132, 0x4d * _0x508132), _0x3e5296['bezierCurveTo'](0x6 * _0x508132, 0x29 * _0x508132, 0x6 * _0x508132, 0x21 * _0x508132, 0xc * _0x508132, 0x1b * _0x508132), _0x3e5296['bezierCurveTo'](0x1b * _0x508132, 0x6 * _0x508132, 0x1c * _0x508132, 0x6 * _0x508132, 0x25 * _0x508132, 0x6 * _0x508132), _0x3e5296['bezierCurveTo'](0x3e * _0x508132, 0x3 * _0x508132, 0x40 * _0x508132, 0x5 * _0x508132, 0x43 * _0x508132, 0xd * _0x508132), _0x3e5296['bezierCurveTo'](0x50 * _0x508132, 0x24 * _0x508132, 73.5 * _0x508132, 0x19 * _0x508132, 0x50 * _0x508132, 0x25 * _0x508132), _0x3e5296['bezierCurveTo'](73.5 * _0x508132, 0x36 * _0x508132, 0x41 * _0x508132, 0x4a * _0x508132, 0x43 * _0x508132, 0x47 * _0x508132), _0x3e5296['closePath'](), fill_path(_0x3e5296, _0x4bb82c[0x1]), _0x3e5296['beginPath'](), _0x3e5296['lineCap'] = 'round', _0x3e5296['lineJoin'] = 'round', _0x3e5296['moveTo'](0x41 * _0x508132, 0x25 * _0x508132), _0x3e5296['bezierCurveTo'](0x69 * _0x508132, 0x28 * _0x508132, 0x71 * _0x508132, 0x27 * _0x508132, 0x75 * _0x508132, 0x30 * _0x508132), _0x3e5296['bezierCurveTo'](0x7e * _0x508132, 0x46 * _0x508132, 0x80 * _0x508132, 0x48 * _0x508132, 0x7c * _0x508132, 0x50 * _0x508132), _0x3e5296['bezierCurveTo'](0x70 * _0x508132, 0x65 * _0x508132, 0x6e * _0x508132, 0x68 * _0x508132, 0x63 * _0x508132, 0x68 * _0x508132), _0x3e5296['bezierCurveTo'](0x3b * _0x508132, 0x64 * _0x508132, 0x37 * _0x508132, 0x63 * _0x508132, 0x38 * _0x508132, 0x63 * _0x508132), _0x3e5296['bezierCurveTo'](47.5 * _0x508132, 0x4f * _0x508132, 0x2d * _0x508132, 0x42 * _0x508132, 0x27 * _0x508132, 0x3b * _0x508132), _0x3e5296['closePath'](), fill_path(_0x3e5296, _0x4bb82c[0x1]), _0x3e5296['beginPath'](), _0x3e5296['lineCap'] = 'round', _0x3e5296['lineJoin'] = 'round', _0x3e5296['moveTo'](0x1e * _0x508132, 0x3f * _0x508132), _0x3e5296['bezierCurveTo'](0x5 * _0x508132, 0x63 * _0x508132, 0x5 * _0x508132, 0x65 * _0x508132, 0x8 * _0x508132, 0x67 * _0x508132), _0x3e5296['bezierCurveTo'](0x13 * _0x508132, 0x7b * _0x508132, 0x16 * _0x508132, 0x7d * _0x508132, 0x1c * _0x508132, 0x7e * _0x508132), _0x3e5296['bezierCurveTo'](0x39 * _0x508132, 0x7f * _0x508132, 0x37 * _0x508132, 0x7f * _0x508132, 0x3a * _0x508132, 0x78 * _0x508132), _0x3e5296['bezierCurveTo'](0x52 * _0x508132, 0x56 * _0x508132, 0x53 * _0x508132, 0x4e * _0x508132, 0x52 * _0x508132, 0x57 * _0x508132), _0x3e5296['closePath'](), fill_path(_0x3e5296, _0x4bb82c[0x1]), _0x3e5296['beginPath'](), _0x3e5296['lineCap'] = 'round', _0x3e5296['lineJoin'] = 'round', _0x3e5296['moveTo'](0x50 * _0x508132, 0x26 * _0x508132), _0x3e5296['bezierCurveTo'](72.5 * _0x508132, 0x34 * _0x508132, 72.5 * _0x508132, 0x34 * _0x508132, 0x41 * _0x508132, 0x42 * _0x508132), _0x3e5296['bezierCurveTo'](47.5 * _0x508132, 0x25 * _0x508132, 47.5 * _0x508132, 0x25 * _0x508132, 0x1e * _0x508132, 0x7 * _0x508132), _0x3e5296['bezierCurveTo'](0x30 * _0x508132, 0x4 * _0x508132, 0x39 * _0x508132, 0x4 * _0x508132, 0x40 * _0x508132, 0xa * _0x508132), _0x3e5296['closePath'](), fill_path(_0x3e5296, _0x4bb82c[0x2]), _0x3e5296['beginPath'](), _0x3e5296['lineCap'] = 'round', _0x3e5296['lineJoin'] = 'round', _0x3e5296['moveTo'](0x41 * _0x508132, 0x41 * _0x508132), _0x3e5296['bezierCurveTo'](0x7d * _0x508132, 0x49 * _0x508132, 95.5 * _0x508132, 0x45 * _0x508132, 0x7e * _0x508132, 0x49 * _0x508132), _0x3e5296['bezierCurveTo'](0x77 * _0x508132, 0x62 * _0x508132, 0x6a * _0x508132, 0x68 * _0x508132, 0x62 * _0x508132, 0x67 * _0x508132), _0x3e5296['bezierCurveTo'](84.5 * _0x508132, 0x66 * _0x508132, 84.5 * _0x508132, 0x66 * _0x508132, 0x47 * _0x508132, 0x65 * _0x508132), _0x3e5296['bezierCurveTo'](0x40 * _0x508132, 0x56 * _0x508132, 0x40 * _0x508132, 0x56 * _0x508132, 0x39 * _0x508132, 0x46 * _0x508132), _0x3e5296['closePath'](), fill_path(_0x3e5296, _0x4bb82c[0x2]), _0x3e5296['beginPath'](), _0x3e5296['lineCap'] = 'round', _0x3e5296['lineJoin'] = 'round', _0x3e5296['moveTo'](0x1b * _0x508132, 0x45 * _0x508132), _0x3e5296['bezierCurveTo'](0x40 * _0x508132, 0x41 * _0x508132, 0x2e * _0x508132, 0x43 * _0x508132, 0x41 * _0x508132, 0x41 * _0x508132), _0x3e5296['bezierCurveTo'](43.5 * _0x508132, 0x5e * _0x508132, 43.5 * _0x508132, 0x5e * _0x508132, 0x16 * _0x508132, 0x7b * _0x508132), _0x3e5296['bezierCurveTo'](0x8 * _0x508132, 0x67 * _0x508132, 0x8 * _0x508132, 0x67 * _0x508132, 0x9 * _0x508132, 0x67 * _0x508132), _0x3e5296['bezierCurveTo'](0x5 * _0x508132, 0x62 * _0x508132, 0xb * _0x508132, 0x59 * _0x508132, 0x1a * _0x508132, 0x46 * _0x508132), _0x3e5296['closePath'](), fill_path(_0x3e5296, _0x4bb82c[0x2]), _0x3e5296['beginPath'](), _0x3e5296['lineCap'] = 'round', _0x3e5296['lineJoin'] = 'round', _0x3e5296['moveTo'](0x1a * _0x508132, 0x45 * _0x508132), _0x3e5296['bezierCurveTo'](0x41 * _0x508132, 0x3c * _0x508132, 0x2d * _0x508132, 0x41 * _0x508132, 0x40 * _0x508132, 0x3c * _0x508132), _0x3e5296['bezierCurveTo'](0x3f * _0x508132, 0x41 * _0x508132, 0x3f * _0x508132, 0x41 * _0x508132, 0x3e * _0x508132, 0x46 * _0x508132), _0x3e5296['closePath'](), fill_path(_0x3e5296, _0x4bb82c[0x2]), _0x3e5296['beginPath'](), _0x3e5296['lineCap'] = 'round', _0x3e5296['lineJoin'] = 'round', _0x3e5296['moveTo'](0x50 * _0x508132, 0x26 * _0x508132), _0x3e5296['bezierCurveTo'](0x44 * _0x508132, 0x46 * _0x508132, 0x4b * _0x508132, 0x35 * _0x508132, 0x46 * _0x508132, 0x44 * _0x508132), _0x3e5296['bezierCurveTo'](0x41 * _0x508132, 0x43 * _0x508132, 0x41 * _0x508132, 0x43 * _0x508132, 0x3c * _0x508132, 0x41 * _0x508132), _0x3e5296['closePath'](), fill_path(_0x3e5296, _0x4bb82c[0x2]), _0x4dc21d;
}

function create_dragon_ground(_0x3e93d, _0x31a75a) {
    var _0x59b4cb = document['createElement']('canvas'),
        _0x5a7555 = _0x59b4cb['getContext']('2d');
    return _0x59b4cb['width'] = 0x64 * _0x3e93d, _0x59b4cb['height'] = 0x64 * _0x3e93d, _0x5a7555['globalAlpha'] = 0.5, _0x5a7555['fillStyle'] = _0x31a75a[0x0], _0x5a7555['fillRect'](0x0, 0x0, _0x59b4cb['width'], _0x59b4cb['height']), _0x59b4cb;
}

function create_snow_one(_0x22a10b, _0x28d714) {
    var _0x288072 = document['createElement']('canvas'),
        _0x5adf20 = _0x288072['getContext']('2d');
    return _0x288072['width'] = 0x78 * _0x22a10b, _0x288072['height'] = 0x12c * _0x22a10b, _0x5adf20['translate'](-0x50 * _0x22a10b, -0x14), _0x5adf20['beginPath'](), _0x5adf20['lineCap'] = 'round', _0x5adf20['lineJoin'] = 'round', _0x5adf20['moveTo'](200.5 * _0x22a10b, 14.953125 * _0x22a10b), _0x5adf20['bezierCurveTo'](0xcb * _0x22a10b, 171.953125 * _0x22a10b, 0xcb * _0x22a10b, 171.953125 * _0x22a10b, 205.5 * _0x22a10b, 328.953125 * _0x22a10b), _0x5adf20['bezierCurveTo'](188.5 * _0x22a10b, 257.953125 * _0x22a10b, 164.5 * _0x22a10b, 216.953125 * _0x22a10b, 166.5 * _0x22a10b, 176.953125 * _0x22a10b), _0x5adf20['bezierCurveTo'](168.5 * _0x22a10b, 133.953125 * _0x22a10b, 198.5 * _0x22a10b, 98.953125 * _0x22a10b, 200.5 * _0x22a10b, 14.953125 * _0x22a10b), _0x5adf20['closePath'](), fill_path(_0x5adf20, _0x28d714[0x0]), _0x288072;
}

function create_snow_two(_0x5a81b7, _0x51416d) {
    var _0x5c45bb = document['createElement']('canvas'),
        _0x308173 = _0x5c45bb['getContext']('2d');
    return _0x5c45bb['width'] = 0x78 * _0x5a81b7, _0x5c45bb['height'] = 0x12c * _0x5a81b7, _0x308173['translate'](-0xc8 * _0x5a81b7, -0x28 * _0x5a81b7), _0x308173['beginPath'](), _0x308173['lineCap'] = 'round', _0x308173['lineJoin'] = 'round', _0x308173['moveTo'](0x158 * _0x5a81b7, 18.40625 * _0x5a81b7), _0x308173['bezierCurveTo'](0x159 * _0x5a81b7, 361.40625 * _0x5a81b7, 0x158 * _0x5a81b7, 191.40625 * _0x5a81b7, 0x158 * _0x5a81b7, 364.40625 * _0x5a81b7), _0x308173['bezierCurveTo'](0x105 * _0x5a81b7, 275.40625 * _0x5a81b7, 0x112 * _0x5a81b7, 259.40625 * _0x5a81b7, 0xe5 * _0x5a81b7, 213.40625 * _0x5a81b7), _0x308173['bezierCurveTo'](0xc7 * _0x5a81b7, 187.40625 * _0x5a81b7, 0xde * _0x5a81b7, 133.40625 * _0x5a81b7, 0x111 * _0x5a81b7, 100.40625 * _0x5a81b7), _0x308173['bezierCurveTo'](0x141 * _0x5a81b7, 71.40625 * _0x5a81b7, 0x147 * _0x5a81b7, 34.40625 * _0x5a81b7, 0x158 * _0x5a81b7, 18.40625 * _0x5a81b7), _0x308173['closePath'](), fill_path(_0x308173, _0x51416d[0x0]), _0x308173['beginPath'](), _0x308173['lineCap'] = 'round', _0x308173['lineJoin'] = 'round', _0x308173['moveTo'](0x14f * _0x5a81b7, 38.072906494140625 * _0x5a81b7), _0x308173['bezierCurveTo'](0x133 * _0x5a81b7, 62.072906494140625 * _0x5a81b7, 0x123 * _0x5a81b7, 60.072906494140625 * _0x5a81b7, 0x106 * _0x5a81b7, 68.07290649414062 * _0x5a81b7), _0x308173['bezierCurveTo'](0xdf * _0x5a81b7, 80.07290649414062 * _0x5a81b7, 0xe1 * _0x5a81b7, 111.07290649414062 * _0x5a81b7, 0x108 * _0x5a81b7, 139.07290649414062 * _0x5a81b7), _0x308173['closePath'](), fill_path(_0x308173, _0x51416d[0x0]), _0x5c45bb;
}

function create_snow_three(_0x2e4de6, _0x5398f8) {
    var _0x527bb7 = document['createElement']('canvas'),
        _0x54de48 = _0x527bb7['getContext']('2d');
    return _0x527bb7['width'] = 0x78 * _0x2e4de6, _0x527bb7['height'] = 0x140 * _0x2e4de6, _0x54de48['translate'](-0x3c * _0x2e4de6, -0xf * _0x2e4de6), _0x54de48['beginPath'](), _0x54de48['lineCap'] = 'round', _0x54de48['lineJoin'] = 'round', _0x54de48['moveTo'](188.5 * _0x2e4de6, 3.953125 * _0x2e4de6), _0x54de48['bezierCurveTo'](188.5 * _0x2e4de6, 171.453125 * _0x2e4de6, 188.5 * _0x2e4de6, 171.453125 * _0x2e4de6, 188.5 * _0x2e4de6, 338.953125 * _0x2e4de6), _0x54de48['bezierCurveTo'](162.5 * _0x2e4de6, 268.953125 * _0x2e4de6, 145.5 * _0x2e4de6, 265.953125 * _0x2e4de6, 116.5 * _0x2e4de6, 244.953125 * _0x2e4de6), _0x54de48['bezierCurveTo'](67.5 * _0x2e4de6, 204.953125 * _0x2e4de6, 87.5 * _0x2e4de6, 160.953125 * _0x2e4de6, 113.5 * _0x2e4de6, 125.953125 * _0x2e4de6), _0x54de48['bezierCurveTo'](141.5 * _0x2e4de6, 90.953125 * _0x2e4de6, 176.5 * _0x2e4de6, 56.953125 * _0x2e4de6, 188.5 * _0x2e4de6, 3.953125 * _0x2e4de6), _0x54de48['closePath'](), fill_path(_0x54de48, _0x5398f8[0x0]), _0x527bb7;
}

function create_snow_four(_0x4ff6db, _0xd49944) {
    var _0x1fbcdb = document['createElement']('canvas'),
        _0x4fefad = _0x1fbcdb['getContext']('2d');
    return _0x1fbcdb['width'] = 0x78 * _0x4ff6db, _0x1fbcdb['height'] = 0x14a * _0x4ff6db, _0x4fefad['translate'](-0x3c * _0x4ff6db, -0xa * _0x4ff6db), _0x4fefad['beginPath'](), _0x4fefad['lineCap'] = 'round', _0x4fefad['lineJoin'] = 'round', _0x4fefad['moveTo'](188.5 * _0x4ff6db, 7.953125 * _0x4ff6db), _0x4fefad['bezierCurveTo'](188.5 * _0x4ff6db, 334.953125 * _0x4ff6db, 188.5 * _0x4ff6db, 332.953125 * _0x4ff6db, 188.5 * _0x4ff6db, 339.953125 * _0x4ff6db), _0x4fefad['bezierCurveTo'](166.5 * _0x4ff6db, 295.953125 * _0x4ff6db, 145.5 * _0x4ff6db, 295.953125 * _0x4ff6db, 139.5 * _0x4ff6db, 282.953125 * _0x4ff6db), _0x4fefad['bezierCurveTo'](124.5 * _0x4ff6db, 244.953125 * _0x4ff6db, 139.5 * _0x4ff6db, 243.953125 * _0x4ff6db, 131.5 * _0x4ff6db, 212.953125 * _0x4ff6db), _0x4fefad['bezierCurveTo'](118.5 * _0x4ff6db, 161.953125 * _0x4ff6db, 69.5 * _0x4ff6db, 156.953125 * _0x4ff6db, 74.5 * _0x4ff6db, 92.953125 * _0x4ff6db), _0x4fefad['bezierCurveTo'](85.5 * _0x4ff6db, 41.953125 * _0x4ff6db, 158.5 * _0x4ff6db, 49.953125 * _0x4ff6db, 188.5 * _0x4ff6db, 7.953125 * _0x4ff6db), _0x4fefad['closePath'](), fill_path(_0x4fefad, _0xd49944[0x0]), _0x1fbcdb;
}

function create_snow_five(_0x2f3b69, _0xb1c98a) {
    var _0x2f13e7 = document['createElement']('canvas'),
        _0x127ddb = _0x2f13e7['getContext']('2d');
    return _0x2f13e7['width'] = 0x30 * _0x2f3b69, _0x2f13e7['height'] = 0x2f * _0x2f3b69, _0x127ddb['beginPath'](), _0x127ddb['lineCap'] = 'round', _0x127ddb['lineJoin'] = 'round', _0x127ddb['moveTo'](7.1875 * _0x2f3b69, 25.434661865234375 * _0x2f3b69), _0x127ddb['bezierCurveTo'](11.1875 * _0x2f3b69, 13.434661865234375 * _0x2f3b69, 18.1875 * _0x2f3b69, 8.434661865234375 * _0x2f3b69, 32.1875 * _0x2f3b69, 10.434661865234375 * _0x2f3b69), _0x127ddb['bezierCurveTo'](45.1875 * _0x2f3b69, 14.434661865234375 * _0x2f3b69, 41.1875 * _0x2f3b69, 24.434661865234375 * _0x2f3b69, 36.1875 * _0x2f3b69, 30.434661865234375 * _0x2f3b69), _0x127ddb['bezierCurveTo'](22.1875 * _0x2f3b69, 42.434661865234375 * _0x2f3b69, 2.1875 * _0x2f3b69, 41.434661865234375 * _0x2f3b69, 7.1875 * _0x2f3b69, 25.434661865234375 * _0x2f3b69), _0x127ddb['closePath'](), fill_path(_0x127ddb, _0xb1c98a[0x0]), _0x2f13e7;
}

function create_snow_six(_0x2db12f, _0xf8318a) {
    var _0x4b77a9 = document['createElement']('canvas'),
        _0x117672 = _0x4b77a9['getContext']('2d');
    return _0x4b77a9['width'] = 0x78 * _0x2db12f, _0x4b77a9['height'] = 0x118 * _0x2db12f, _0x117672['translate'](-0x64 * _0x2db12f, -0x14 * _0x2db12f), _0x117672['beginPath'](), _0x117672['lineCap'] = 'round', _0x117672['lineJoin'] = 'round', _0x117672['moveTo'](228.5 * _0x2db12f, 331.953125 * _0x2db12f), _0x117672['bezierCurveTo'](228.5 * _0x2db12f, 12.953125 * _0x2db12f, 228.5 * _0x2db12f, 171.453125 * _0x2db12f, 228.5 * _0x2db12f, 10.953125 * _0x2db12f), _0x117672['bezierCurveTo'](196.5 * _0x2db12f, 76.953125 * _0x2db12f, 206.5 * _0x2db12f, 78.953125 * _0x2db12f, 191.5 * _0x2db12f, 114.953125 * _0x2db12f), _0x117672['bezierCurveTo'](162.5 * _0x2db12f, 170.953125 * _0x2db12f, 206.5 * _0x2db12f, 220.953125 * _0x2db12f, 210.5 * _0x2db12f, 251.953125 * _0x2db12f), _0x117672['bezierCurveTo'](218.5 * _0x2db12f, 287.953125 * _0x2db12f, 220.5 * _0x2db12f, 291.953125 * _0x2db12f, 228.5 * _0x2db12f, 331.953125 * _0x2db12f), _0x117672['closePath'](), fill_path(_0x117672, _0xf8318a[0x0]), _0x4b77a9;
}

function create_snow_sept(_0x49d7c2, _0x5bda3d) {
    var _0x3b68b4 = document['createElement']('canvas'),
        _0x28bbc7 = _0x3b68b4['getContext']('2d');
    return _0x3b68b4['width'] = 0x21 * _0x49d7c2, _0x3b68b4['height'] = 0x23 * _0x49d7c2, _0x28bbc7['beginPath'](), _0x28bbc7['lineCap'] = 'round', _0x28bbc7['lineJoin'] = 'round', _0x28bbc7['moveTo'](12.75 * _0x49d7c2, 7.1328125 * _0x49d7c2), _0x28bbc7['bezierCurveTo'](26.75 * _0x49d7c2, 8.1328125 * _0x49d7c2, 27.75 * _0x49d7c2, 14.1328125 * _0x49d7c2, 24.75 * _0x49d7c2, 23.1328125 * _0x49d7c2), _0x28bbc7['bezierCurveTo'](19.75 * _0x49d7c2, 31.1328125 * _0x49d7c2, 15.75 * _0x49d7c2, 33.1328125 * _0x49d7c2, 6.75 * _0x49d7c2, 26.1328125 * _0x49d7c2), _0x28bbc7['bezierCurveTo'](0.75 * _0x49d7c2, 19.1328125 * _0x49d7c2, 4.75 * _0x49d7c2, 8.1328125 * _0x49d7c2, 12.75 * _0x49d7c2, 7.1328125 * _0x49d7c2), _0x28bbc7['closePath'](), fill_path(_0x28bbc7, _0x5bda3d[0x0]), _0x3b68b4;
}

function create_snow_step(_0xf3bc5b, _0x1898c0) {
    var _0x219d9e = document['createElement']('canvas'),
        _0x4d0b05 = _0x219d9e['getContext']('2d');
    return _0x219d9e['width'] = 0x14 * _0xf3bc5b, _0x219d9e['height'] = 0x23 * _0xf3bc5b, round_rect(_0x4d0b05, 0x0, 0x0, 0x14, 0x23, 0x7), fill_path(_0x4d0b05, _0x1898c0[0x0]), _0x219d9e;
}

function create_winter_fox(_0x317caf, _0x5518f7) {
    var _0x200b39 = document['createElement']('canvas'),
        _0x443a38 = _0x200b39['getContext']('2d');
    return _0x200b39['width'] = 0xa1 * _0x317caf, _0x200b39['height'] = 0xbe * _0x317caf, _0x443a38['globalAlpha'] = 0.5, _0x443a38['translate'](0x0, 0x8), _0x443a38['beginPath'](), _0x443a38['lineCap'] = 'round', _0x443a38['lineJoin'] = 'round', _0x443a38['moveTo'](0x9 * _0x317caf, 0x5d * _0x317caf), _0x443a38['bezierCurveTo'](0x11 * _0x317caf, 0x5f * _0x317caf, 0x13 * _0x317caf, 0x5f * _0x317caf, 0x15 * _0x317caf, 0x5f * _0x317caf), _0x443a38['bezierCurveTo'](0x9 * _0x317caf, 0x53 * _0x317caf, 0x11 * _0x317caf, 0x5d * _0x317caf, 0x4 * _0x317caf, 0x4c * _0x317caf), _0x443a38['bezierCurveTo'](0xb * _0x317caf, 0x4b * _0x317caf, 0xb * _0x317caf, 0x4b * _0x317caf, 0x12 * _0x317caf, 0x4b * _0x317caf), _0x443a38['bezierCurveTo'](0xd * _0x317caf, 0x43 * _0x317caf, 0xd * _0x317caf, 0x43 * _0x317caf, 0x7 * _0x317caf, 0x3b * _0x317caf), _0x443a38['bezierCurveTo'](0xe * _0x317caf, 0x3b * _0x317caf, 0xe * _0x317caf, 0x3b * _0x317caf, 0x15 * _0x317caf, 0x3b * _0x317caf), _0x443a38['bezierCurveTo'](0x2e * _0x317caf, 0x23 * _0x317caf, 0x23 * _0x317caf, 0x2d * _0x317caf, 0x31 * _0x317caf, 0x1f * _0x317caf), _0x443a38['bezierCurveTo'](0x35 * _0x317caf, 0x18 * _0x317caf, 0x33 * _0x317caf, 0x15 * _0x317caf, 0x33 * _0x317caf, 0x10 * _0x317caf), _0x443a38['bezierCurveTo'](0x3f * _0x317caf, 0x17 * _0x317caf, 0x3f * _0x317caf, 0x18 * _0x317caf, 0x45 * _0x317caf, 0x1d * _0x317caf), _0x443a38['bezierCurveTo'](0x4c * _0x317caf, 0x7 * _0x317caf, 0x4b * _0x317caf, 0xb * _0x317caf, 0x4c * _0x317caf, 0x6 * _0x317caf), _0x443a38['bezierCurveTo'](0x51 * _0x317caf, 0xc * _0x317caf, 0x54 * _0x317caf, 0x12 * _0x317caf, 0x59 * _0x317caf, 0x1b * _0x317caf), _0x443a38['bezierCurveTo'](0x5f * _0x317caf, 0x19 * _0x317caf, 0x64 * _0x317caf, 0x10 * _0x317caf, 0x69 * _0x317caf, 0xe * _0x317caf), _0x443a38['bezierCurveTo'](0x67 * _0x317caf, 0x19 * _0x317caf, 0x6f * _0x317caf, 0x21 * _0x317caf, 0x6e * _0x317caf, 0x22 * _0x317caf), _0x443a38['bezierCurveTo'](0x7b * _0x317caf, 0x30 * _0x317caf, 0x7b * _0x317caf, 0x30 * _0x317caf, 0x88 * _0x317caf, 0x3e * _0x317caf), _0x443a38['bezierCurveTo'](0x8e * _0x317caf, 0x3c * _0x317caf, 0x93 * _0x317caf, 0x3b * _0x317caf, 0x9b * _0x317caf, 0x3a * _0x317caf), _0x443a38['bezierCurveTo'](0x93 * _0x317caf, 0x41 * _0x317caf, 0x93 * _0x317caf, 0x41 * _0x317caf, 0x8b * _0x317caf, 0x49 * _0x317caf), _0x443a38['bezierCurveTo'](0x91 * _0x317caf, 0x49 * _0x317caf, 0x91 * _0x317caf, 0x49 * _0x317caf, 0x97 * _0x317caf, 0x49 * _0x317caf), _0x443a38['bezierCurveTo'](0x91 * _0x317caf, 0x50 * _0x317caf, 0x91 * _0x317caf, 0x50 * _0x317caf, 0x8a * _0x317caf, 0x57 * _0x317caf), _0x443a38['bezierCurveTo'](0x90 * _0x317caf, 0x58 * _0x317caf, 0x90 * _0x317caf, 0x58 * _0x317caf, 0x96 * _0x317caf, 0x59 * _0x317caf), _0x443a38['bezierCurveTo'](0x7d * _0x317caf, 0x67 * _0x317caf, 0x7d * _0x317caf, 0x7d * _0x317caf, 0x71 * _0x317caf, 0x8d * _0x317caf), _0x443a38['bezierCurveTo'](0x5c * _0x317caf, 0xb2 * _0x317caf, 0x55 * _0x317caf, 0xb1 * _0x317caf, 0x4c * _0x317caf, 0xb2 * _0x317caf), _0x443a38['bezierCurveTo'](0x40 * _0x317caf, 0xb3 * _0x317caf, 0x33 * _0x317caf, 0xa4 * _0x317caf, 0x23 * _0x317caf, 0x83 * _0x317caf), _0x443a38['bezierCurveTo'](0x12 * _0x317caf, 0x5f * _0x317caf, 0xd * _0x317caf, 0x63 * _0x317caf, 0x8 * _0x317caf, 0x5d * _0x317caf), _0x443a38['closePath'](), fill_path(_0x443a38, _0x5518f7[0x0]), _0x443a38['globalAlpha'] = 0x1, _0x443a38['translate'](0x0, -0x8), _0x443a38['beginPath'](), _0x443a38['lineCap'] = 'round', _0x443a38['lineJoin'] = 'round', _0x443a38['moveTo'](0x9 * _0x317caf, 0x5d * _0x317caf), _0x443a38['bezierCurveTo'](0x11 * _0x317caf, 0x5f * _0x317caf, 0x13 * _0x317caf, 0x5f * _0x317caf, 0x15 * _0x317caf, 0x5f * _0x317caf), _0x443a38['bezierCurveTo'](0x9 * _0x317caf, 0x53 * _0x317caf, 0x11 * _0x317caf, 0x5d * _0x317caf, 0x4 * _0x317caf, 0x4c * _0x317caf), _0x443a38['bezierCurveTo'](0xb * _0x317caf, 0x4b * _0x317caf, 0xb * _0x317caf, 0x4b * _0x317caf, 0x12 * _0x317caf, 0x4b * _0x317caf), _0x443a38['bezierCurveTo'](0xd * _0x317caf, 0x43 * _0x317caf, 0xd * _0x317caf, 0x43 * _0x317caf, 0x7 * _0x317caf, 0x3b * _0x317caf), _0x443a38['bezierCurveTo'](0xe * _0x317caf, 0x3b * _0x317caf, 0xe * _0x317caf, 0x3b * _0x317caf, 0x15 * _0x317caf, 0x3b * _0x317caf), _0x443a38['bezierCurveTo'](0x2e * _0x317caf, 0x23 * _0x317caf, 0x23 * _0x317caf, 0x2d * _0x317caf, 0x31 * _0x317caf, 0x1f * _0x317caf), _0x443a38['bezierCurveTo'](0x35 * _0x317caf, 0x18 * _0x317caf, 0x33 * _0x317caf, 0x15 * _0x317caf, 0x33 * _0x317caf, 0x10 * _0x317caf), _0x443a38['bezierCurveTo'](0x3f * _0x317caf, 0x17 * _0x317caf, 0x3f * _0x317caf, 0x18 * _0x317caf, 0x45 * _0x317caf, 0x1d * _0x317caf), _0x443a38['bezierCurveTo'](0x4c * _0x317caf, 0x7 * _0x317caf, 0x4b * _0x317caf, 0xb * _0x317caf, 0x4c * _0x317caf, 0x6 * _0x317caf), _0x443a38['bezierCurveTo'](0x51 * _0x317caf, 0xc * _0x317caf, 0x54 * _0x317caf, 0x12 * _0x317caf, 0x59 * _0x317caf, 0x1b * _0x317caf), _0x443a38['bezierCurveTo'](0x5f * _0x317caf, 0x19 * _0x317caf, 0x64 * _0x317caf, 0x10 * _0x317caf, 0x69 * _0x317caf, 0xe * _0x317caf), _0x443a38['bezierCurveTo'](0x67 * _0x317caf, 0x19 * _0x317caf, 0x6f * _0x317caf, 0x21 * _0x317caf, 0x6e * _0x317caf, 0x22 * _0x317caf), _0x443a38['bezierCurveTo'](0x7b * _0x317caf, 0x30 * _0x317caf, 0x7b * _0x317caf, 0x30 * _0x317caf, 0x88 * _0x317caf, 0x3e * _0x317caf), _0x443a38['bezierCurveTo'](0x8e * _0x317caf, 0x3c * _0x317caf, 0x93 * _0x317caf, 0x3b * _0x317caf, 0x9b * _0x317caf, 0x3a * _0x317caf), _0x443a38['bezierCurveTo'](0x93 * _0x317caf, 0x41 * _0x317caf, 0x93 * _0x317caf, 0x41 * _0x317caf, 0x8b * _0x317caf, 0x49 * _0x317caf), _0x443a38['bezierCurveTo'](0x91 * _0x317caf, 0x49 * _0x317caf, 0x91 * _0x317caf, 0x49 * _0x317caf, 0x97 * _0x317caf, 0x49 * _0x317caf), _0x443a38['bezierCurveTo'](0x91 * _0x317caf, 0x50 * _0x317caf, 0x91 * _0x317caf, 0x50 * _0x317caf, 0x8a * _0x317caf, 0x57 * _0x317caf), _0x443a38['bezierCurveTo'](0x90 * _0x317caf, 0x58 * _0x317caf, 0x90 * _0x317caf, 0x58 * _0x317caf, 0x96 * _0x317caf, 0x59 * _0x317caf), _0x443a38['bezierCurveTo'](0x7d * _0x317caf, 0x67 * _0x317caf, 0x7d * _0x317caf, 0x7d * _0x317caf, 0x71 * _0x317caf, 0x8d * _0x317caf), _0x443a38['bezierCurveTo'](0x5c * _0x317caf, 0xb2 * _0x317caf, 0x55 * _0x317caf, 0xb1 * _0x317caf, 0x4c * _0x317caf, 0xb2 * _0x317caf), _0x443a38['bezierCurveTo'](0x40 * _0x317caf, 0xb3 * _0x317caf, 0x33 * _0x317caf, 0xa4 * _0x317caf, 0x23 * _0x317caf, 0x83 * _0x317caf), _0x443a38['bezierCurveTo'](0x12 * _0x317caf, 0x5f * _0x317caf, 0xd * _0x317caf, 0x63 * _0x317caf, 0x8 * _0x317caf, 0x5d * _0x317caf), _0x443a38['closePath'](), fill_path(_0x443a38, _0x5518f7[0x1]), _0x443a38['beginPath'](), _0x443a38['lineCap'] = 'round', _0x443a38['lineJoin'] = 'round', _0x443a38['moveTo'](0x1c * _0x317caf, 0x3f * _0x317caf), _0x443a38['bezierCurveTo'](0x17 * _0x317caf, 0x36 * _0x317caf, 0x18 * _0x317caf, 0x2f * _0x317caf, 0x1a * _0x317caf, 0x25 * _0x317caf), _0x443a38['bezierCurveTo'](0x1c * _0x317caf, 0x1d * _0x317caf, 0x1f * _0x317caf, 0x1f * _0x317caf, 0x29 * _0x317caf, 0x23 * _0x317caf), _0x443a38['bezierCurveTo'](0x34 * _0x317caf, 0x2d * _0x317caf, 0x37 * _0x317caf, 0x33 * _0x317caf, 0x39 * _0x317caf, 0x35 * _0x317caf), _0x443a38['bezierCurveTo'](0x32 * _0x317caf, 0x32 * _0x317caf, 0x2c * _0x317caf, 0x2f * _0x317caf, 0x2b * _0x317caf, 0x30 * _0x317caf), _0x443a38['bezierCurveTo'](0x2b * _0x317caf, 0x34 * _0x317caf, 0x2b * _0x317caf, 0x34 * _0x317caf, 0x2a * _0x317caf, 0x39 * _0x317caf), _0x443a38['bezierCurveTo'](0x26 * _0x317caf, 0x36 * _0x317caf, 0x26 * _0x317caf, 0x36 * _0x317caf, 0x21 * _0x317caf, 0x33 * _0x317caf), _0x443a38['bezierCurveTo'](0x22 * _0x317caf, 0x38 * _0x317caf, 0x22 * _0x317caf, 0x38 * _0x317caf, 0x22 * _0x317caf, 0x3d * _0x317caf), _0x443a38['closePath'](), fill_path(_0x443a38, _0x5518f7[0x3]), _0x443a38['beginPath'](), _0x443a38['lineCap'] = 'round', _0x443a38['lineJoin'] = 'round', _0x443a38['moveTo'](0x63 * _0x317caf, 0x37 * _0x317caf), _0x443a38['bezierCurveTo'](0x6b * _0x317caf, 0x2b * _0x317caf, 0x71 * _0x317caf, 0x27 * _0x317caf, 0x79 * _0x317caf, 0x22 * _0x317caf), _0x443a38['bezierCurveTo'](0x82 * _0x317caf, 0x1d * _0x317caf, 0x82 * _0x317caf, 0x22 * _0x317caf, 0x82 * _0x317caf, 0x2a * _0x317caf), _0x443a38['bezierCurveTo'](0x83 * _0x317caf, 0x39 * _0x317caf, 0x80 * _0x317caf, 0x3d * _0x317caf, 0x81 * _0x317caf, 0x3f * _0x317caf), _0x443a38['bezierCurveTo'](0x7c * _0x317caf, 0x3e * _0x317caf, 0x7c * _0x317caf, 0x3e * _0x317caf, 0x77 * _0x317caf, 0x3d * _0x317caf), _0x443a38['bezierCurveTo'](0x77 * _0x317caf, 0x38 * _0x317caf, 0x78 * _0x317caf, 0x3d * _0x317caf, 0x76 * _0x317caf, 0x34 * _0x317caf), _0x443a38['bezierCurveTo'](0x73 * _0x317caf, 0x37 * _0x317caf, 0x6f * _0x317caf, 0x3b * _0x317caf, 0x6f * _0x317caf, 0x3a * _0x317caf), _0x443a38['bezierCurveTo'](0x6e * _0x317caf, 0x36 * _0x317caf, 0x6d * _0x317caf, 0x39 * _0x317caf, 0x6d * _0x317caf, 0x33 * _0x317caf), _0x443a38['closePath'](), fill_path(_0x443a38, _0x5518f7[0x3]), circle(_0x443a38, 0x67 * _0x317caf, 0x6e * _0x317caf, 0xb * _0x317caf), fill_path(_0x443a38, _0x5518f7[0x4]), circle(_0x443a38, 0x37 * _0x317caf, 0x6f * _0x317caf, 0xb * _0x317caf), fill_path(_0x443a38, _0x5518f7[0x4]), circle(_0x443a38, 0x63 * _0x317caf, 0x6b * _0x317caf, 0x5 * _0x317caf), fill_path(_0x443a38, _0x5518f7[0x1]), circle(_0x443a38, 0x33 * _0x317caf, 0x6c * _0x317caf, 0x5 * _0x317caf), fill_path(_0x443a38, _0x5518f7[0x1]), _0x443a38['beginPath'](), _0x443a38['lineCap'] = 'round', _0x443a38['lineJoin'] = 'round', _0x443a38['moveTo'](0x1f * _0x317caf, 0x79 * _0x317caf), _0x443a38['bezierCurveTo'](0x2d * _0x317caf, 0x80 * _0x317caf, 0x33 * _0x317caf, 0x85 * _0x317caf, 0x35 * _0x317caf, 0x8d * _0x317caf), _0x443a38['bezierCurveTo'](0x3b * _0x317caf, 0xa1 * _0x317caf, 0x46 * _0x317caf, 0xad * _0x317caf, 0x50 * _0x317caf, 0xa9 * _0x317caf), _0x443a38['bezierCurveTo'](0x59 * _0x317caf, 0xac * _0x317caf, 0x63 * _0x317caf, 0x95 * _0x317caf, 0x6b * _0x317caf, 0x85 * _0x317caf), _0x443a38['bezierCurveTo'](0x72 * _0x317caf, 0x7a * _0x317caf, 0x77 * _0x317caf, 0x7b * _0x317caf, 0x7c * _0x317caf, 0x77 * _0x317caf), _0x443a38['bezierCurveTo'](0x6d * _0x317caf, 0x94 * _0x317caf, 0x75 * _0x317caf, 0x85 * _0x317caf, 0x6d * _0x317caf, 0x93 * _0x317caf), _0x443a38['bezierCurveTo'](0x57 * _0x317caf, 0xb4 * _0x317caf, 0x54 * _0x317caf, 0xb3 * _0x317caf, 0x4c * _0x317caf, 0xb2 * _0x317caf), _0x443a38['bezierCurveTo'](0x31 * _0x317caf, 0xad * _0x317caf, 0x2c * _0x317caf, 0x95 * _0x317caf, 0x1f * _0x317caf, 0x79 * _0x317caf), _0x443a38['closePath'](), fill_path(_0x443a38, _0x5518f7[0x5]), _0x443a38['beginPath'](), _0x443a38['lineCap'] = 'round', _0x443a38['lineJoin'] = 'round', _0x443a38['translate'](-0x2, 0x0), _0x443a38['moveTo'](0x47 * _0x317caf, 0xa2 * _0x317caf), _0x443a38['bezierCurveTo'](0x50 * _0x317caf, 0x9b * _0x317caf, 0x55 * _0x317caf, 0x9f * _0x317caf, 0x59 * _0x317caf, 0xa4 * _0x317caf), _0x443a38['bezierCurveTo'](0x5a * _0x317caf, 0xab * _0x317caf, 0x56 * _0x317caf, 0xad * _0x317caf, 0x4f * _0x317caf, 0xad * _0x317caf), _0x443a38['bezierCurveTo'](0x43 * _0x317caf, 0xac * _0x317caf, 0x43 * _0x317caf, 0xa8 * _0x317caf, 0x47 * _0x317caf, 0xa2 * _0x317caf), _0x443a38['closePath'](), fill_path(_0x443a38, _0x5518f7[0x3]), _0x443a38['translate'](0x2, 0x0), _0x443a38['beginPath'](), _0x443a38['lineCap'] = 'round', _0x443a38['lineJoin'] = 'round', _0x443a38['moveTo'](0x9 * _0x317caf, 0x5d * _0x317caf), _0x443a38['bezierCurveTo'](0x11 * _0x317caf, 0x5f * _0x317caf, 0x13 * _0x317caf, 0x5f * _0x317caf, 0x15 * _0x317caf, 0x5f * _0x317caf), _0x443a38['bezierCurveTo'](0x9 * _0x317caf, 0x53 * _0x317caf, 0x11 * _0x317caf, 0x5d * _0x317caf, 0x4 * _0x317caf, 0x4c * _0x317caf), _0x443a38['bezierCurveTo'](0xb * _0x317caf, 0x4b * _0x317caf, 0xb * _0x317caf, 0x4b * _0x317caf, 0x12 * _0x317caf, 0x4b * _0x317caf), _0x443a38['bezierCurveTo'](0xd * _0x317caf, 0x43 * _0x317caf, 0xd * _0x317caf, 0x43 * _0x317caf, 0x7 * _0x317caf, 0x3b * _0x317caf), _0x443a38['bezierCurveTo'](0xe * _0x317caf, 0x3b * _0x317caf, 0xe * _0x317caf, 0x3b * _0x317caf, 0x15 * _0x317caf, 0x3b * _0x317caf), _0x443a38['bezierCurveTo'](0x2e * _0x317caf, 0x23 * _0x317caf, 0x23 * _0x317caf, 0x2d * _0x317caf, 0x31 * _0x317caf, 0x1f * _0x317caf), _0x443a38['bezierCurveTo'](0x35 * _0x317caf, 0x18 * _0x317caf, 0x33 * _0x317caf, 0x15 * _0x317caf, 0x33 * _0x317caf, 0x10 * _0x317caf), _0x443a38['bezierCurveTo'](0x3f * _0x317caf, 0x17 * _0x317caf, 0x3f * _0x317caf, 0x18 * _0x317caf, 0x45 * _0x317caf, 0x1d * _0x317caf), _0x443a38['bezierCurveTo'](0x4c * _0x317caf, 0x7 * _0x317caf, 0x4b * _0x317caf, 0xb * _0x317caf, 0x4c * _0x317caf, 0x6 * _0x317caf), _0x443a38['bezierCurveTo'](0x51 * _0x317caf, 0xc * _0x317caf, 0x54 * _0x317caf, 0x12 * _0x317caf, 0x59 * _0x317caf, 0x1b * _0x317caf), _0x443a38['bezierCurveTo'](0x5f * _0x317caf, 0x19 * _0x317caf, 0x64 * _0x317caf, 0x10 * _0x317caf, 0x69 * _0x317caf, 0xe * _0x317caf), _0x443a38['bezierCurveTo'](0x67 * _0x317caf, 0x19 * _0x317caf, 0x6f * _0x317caf, 0x21 * _0x317caf, 0x6e * _0x317caf, 0x22 * _0x317caf), _0x443a38['bezierCurveTo'](0x7b * _0x317caf, 0x30 * _0x317caf, 0x7b * _0x317caf, 0x30 * _0x317caf, 0x88 * _0x317caf, 0x3e * _0x317caf), _0x443a38['bezierCurveTo'](0x8e * _0x317caf, 0x3c * _0x317caf, 0x93 * _0x317caf, 0x3b * _0x317caf, 0x9b * _0x317caf, 0x3a * _0x317caf), _0x443a38['bezierCurveTo'](0x93 * _0x317caf, 0x41 * _0x317caf, 0x93 * _0x317caf, 0x41 * _0x317caf, 0x8b * _0x317caf, 0x49 * _0x317caf), _0x443a38['bezierCurveTo'](0x91 * _0x317caf, 0x49 * _0x317caf, 0x91 * _0x317caf, 0x49 * _0x317caf, 0x97 * _0x317caf, 0x49 * _0x317caf), _0x443a38['bezierCurveTo'](0x91 * _0x317caf, 0x50 * _0x317caf, 0x91 * _0x317caf, 0x50 * _0x317caf, 0x8a * _0x317caf, 0x57 * _0x317caf), _0x443a38['bezierCurveTo'](0x90 * _0x317caf, 0x58 * _0x317caf, 0x90 * _0x317caf, 0x58 * _0x317caf, 0x96 * _0x317caf, 0x59 * _0x317caf), _0x443a38['bezierCurveTo'](0x7d * _0x317caf, 0x67 * _0x317caf, 0x7d * _0x317caf, 0x7d * _0x317caf, 0x71 * _0x317caf, 0x8d * _0x317caf), _0x443a38['bezierCurveTo'](0x5c * _0x317caf, 0xb2 * _0x317caf, 0x55 * _0x317caf, 0xb1 * _0x317caf, 0x4c * _0x317caf, 0xb2 * _0x317caf), _0x443a38['bezierCurveTo'](0x40 * _0x317caf, 0xb3 * _0x317caf, 0x33 * _0x317caf, 0xa4 * _0x317caf, 0x23 * _0x317caf, 0x83 * _0x317caf), _0x443a38['bezierCurveTo'](0x12 * _0x317caf, 0x5f * _0x317caf, 0xd * _0x317caf, 0x63 * _0x317caf, 0x8 * _0x317caf, 0x5d * _0x317caf), _0x443a38['closePath'](), fill_path(_0x443a38, undefined, _0x5518f7[0x2], 0x4 * _0x317caf), _0x443a38['beginPath'](), _0x443a38['lineCap'] = 'round', _0x443a38['lineJoin'] = 'round', _0x443a38['moveTo'](0x19 * _0x317caf, 0x3f * _0x317caf), _0x443a38['bezierCurveTo'](0x10 * _0x317caf, 0x3a * _0x317caf, 0x11 * _0x317caf, 0x33 * _0x317caf, 0x11 * _0x317caf, 0x21 * _0x317caf), _0x443a38['bezierCurveTo'](0x13 * _0x317caf, 0xc * _0x317caf, 0x15 * _0x317caf, 0xc * _0x317caf, 0x20 * _0x317caf, 0x11 * _0x317caf), _0x443a38['bezierCurveTo'](0x3f * _0x317caf, 0x1f * _0x317caf, 0x42 * _0x317caf, 0x2d * _0x317caf, 0x42 * _0x317caf, 0x36 * _0x317caf), fill_path(_0x443a38, _0x5518f7[0x1], _0x5518f7[0x2], 0x4 * _0x317caf), _0x443a38['beginPath'](), _0x443a38['lineCap'] = 'round', _0x443a38['lineJoin'] = 'round', _0x443a38['moveTo'](0x5b * _0x317caf, 0x35 * _0x317caf), _0x443a38['bezierCurveTo'](0x5b * _0x317caf, 0x28 * _0x317caf, 0x62 * _0x317caf, 0x21 * _0x317caf, 0x79 * _0x317caf, 0x14 * _0x317caf), _0x443a38['bezierCurveTo'](0x89 * _0x317caf, 0xc * _0x317caf, 0x89 * _0x317caf, 0x10 * _0x317caf, 0x8b * _0x317caf, 0x1b * _0x317caf), _0x443a38['bezierCurveTo'](0x8d * _0x317caf, 0x31 * _0x317caf, 0x8c * _0x317caf, 0x39 * _0x317caf, 0x86 * _0x317caf, 0x40 * _0x317caf), fill_path(_0x443a38, _0x5518f7[0x1], _0x5518f7[0x2], 0x4 * _0x317caf), _0x443a38['beginPath'](), _0x443a38['lineCap'] = 'round', _0x443a38['lineJoin'] = 'round', _0x443a38['moveTo'](0x1f * _0x317caf, 0x3f * _0x317caf), _0x443a38['bezierCurveTo'](0x17 * _0x317caf, 0x36 * _0x317caf, 0x18 * _0x317caf, 0x2f * _0x317caf, 0x1a * _0x317caf, 0x25 * _0x317caf), _0x443a38['bezierCurveTo'](0x1c * _0x317caf, 0x1d * _0x317caf, 0x1f * _0x317caf, 0x1f * _0x317caf, 0x29 * _0x317caf, 0x23 * _0x317caf), _0x443a38['bezierCurveTo'](0x34 * _0x317caf, 0x2d * _0x317caf, 0x37 * _0x317caf, 0x33 * _0x317caf, 0x39 * _0x317caf, 0x35 * _0x317caf), _0x443a38['bezierCurveTo'](0x32 * _0x317caf, 0x32 * _0x317caf, 0x2c * _0x317caf, 0x2f * _0x317caf, 0x2b * _0x317caf, 0x30 * _0x317caf), _0x443a38['bezierCurveTo'](0x2b * _0x317caf, 0x34 * _0x317caf, 0x2b * _0x317caf, 0x34 * _0x317caf, 0x2a * _0x317caf, 0x39 * _0x317caf), _0x443a38['bezierCurveTo'](0x26 * _0x317caf, 0x36 * _0x317caf, 0x26 * _0x317caf, 0x36 * _0x317caf, 0x21 * _0x317caf, 0x33 * _0x317caf), _0x443a38['bezierCurveTo'](0x22 * _0x317caf, 0x38 * _0x317caf, 0x22 * _0x317caf, 0x38 * _0x317caf, 0x22 * _0x317caf, 0x3d * _0x317caf), _0x443a38['closePath'](), fill_path(_0x443a38, _0x5518f7[0x3]), _0x443a38['beginPath'](), _0x443a38['lineCap'] = 'round', _0x443a38['lineJoin'] = 'round', _0x443a38['moveTo'](0x63 * _0x317caf, 0x37 * _0x317caf), _0x443a38['bezierCurveTo'](0x6b * _0x317caf, 0x2b * _0x317caf, 0x71 * _0x317caf, 0x27 * _0x317caf, 0x79 * _0x317caf, 0x22 * _0x317caf), _0x443a38['bezierCurveTo'](0x82 * _0x317caf, 0x1d * _0x317caf, 0x82 * _0x317caf, 0x22 * _0x317caf, 0x82 * _0x317caf, 0x2a * _0x317caf), _0x443a38['bezierCurveTo'](0x83 * _0x317caf, 0x39 * _0x317caf, 0x80 * _0x317caf, 0x3d * _0x317caf, 0x81 * _0x317caf, 0x3f * _0x317caf), _0x443a38['bezierCurveTo'](0x7c * _0x317caf, 0x3e * _0x317caf, 0x7c * _0x317caf, 0x3e * _0x317caf, 0x77 * _0x317caf, 0x3d * _0x317caf), _0x443a38['bezierCurveTo'](0x77 * _0x317caf, 0x38 * _0x317caf, 0x78 * _0x317caf, 0x3d * _0x317caf, 0x76 * _0x317caf, 0x34 * _0x317caf), _0x443a38['bezierCurveTo'](0x73 * _0x317caf, 0x37 * _0x317caf, 0x6f * _0x317caf, 0x3b * _0x317caf, 0x6f * _0x317caf, 0x3a * _0x317caf), _0x443a38['bezierCurveTo'](0x6e * _0x317caf, 0x36 * _0x317caf, 0x6d * _0x317caf, 0x39 * _0x317caf, 0x6d * _0x317caf, 0x33 * _0x317caf), _0x443a38['closePath'](), fill_path(_0x443a38, _0x5518f7[0x3]), _0x200b39;
}

function create_hurt_fox_winter(_0x4a43da, _0x22de59) {
    var _0x28a731 = document['createElement']('canvas'),
        _0x296b43 = _0x28a731['getContext']('2d');
    return _0x28a731['width'] = 0xa1 * _0x4a43da, _0x28a731['height'] = 0xbe * _0x4a43da, _0x296b43['beginPath'](), _0x296b43['lineCap'] = 'round', _0x296b43['lineJoin'] = 'round', _0x296b43['moveTo'](0x9 * _0x4a43da, 0x5d * _0x4a43da), _0x296b43['bezierCurveTo'](0x11 * _0x4a43da, 0x5f * _0x4a43da, 0x13 * _0x4a43da, 0x5f * _0x4a43da, 0x15 * _0x4a43da, 0x5f * _0x4a43da), _0x296b43['bezierCurveTo'](0x9 * _0x4a43da, 0x53 * _0x4a43da, 0x11 * _0x4a43da, 0x5d * _0x4a43da, 0x4 * _0x4a43da, 0x4c * _0x4a43da), _0x296b43['bezierCurveTo'](0xb * _0x4a43da, 0x4b * _0x4a43da, 0xb * _0x4a43da, 0x4b * _0x4a43da, 0x12 * _0x4a43da, 0x4b * _0x4a43da), _0x296b43['bezierCurveTo'](0xd * _0x4a43da, 0x43 * _0x4a43da, 0xd * _0x4a43da, 0x43 * _0x4a43da, 0x7 * _0x4a43da, 0x3b * _0x4a43da), _0x296b43['bezierCurveTo'](0xe * _0x4a43da, 0x3b * _0x4a43da, 0xe * _0x4a43da, 0x3b * _0x4a43da, 0x15 * _0x4a43da, 0x3b * _0x4a43da), _0x296b43['bezierCurveTo'](0x2e * _0x4a43da, 0x23 * _0x4a43da, 0x23 * _0x4a43da, 0x2d * _0x4a43da, 0x31 * _0x4a43da, 0x1f * _0x4a43da), _0x296b43['bezierCurveTo'](0x35 * _0x4a43da, 0x18 * _0x4a43da, 0x33 * _0x4a43da, 0x15 * _0x4a43da, 0x33 * _0x4a43da, 0x10 * _0x4a43da), _0x296b43['bezierCurveTo'](0x3f * _0x4a43da, 0x17 * _0x4a43da, 0x3f * _0x4a43da, 0x18 * _0x4a43da, 0x45 * _0x4a43da, 0x1d * _0x4a43da), _0x296b43['bezierCurveTo'](0x4c * _0x4a43da, 0x7 * _0x4a43da, 0x4b * _0x4a43da, 0xb * _0x4a43da, 0x4c * _0x4a43da, 0x6 * _0x4a43da), _0x296b43['bezierCurveTo'](0x51 * _0x4a43da, 0xc * _0x4a43da, 0x54 * _0x4a43da, 0x12 * _0x4a43da, 0x59 * _0x4a43da, 0x1b * _0x4a43da), _0x296b43['bezierCurveTo'](0x5f * _0x4a43da, 0x19 * _0x4a43da, 0x64 * _0x4a43da, 0x10 * _0x4a43da, 0x69 * _0x4a43da, 0xe * _0x4a43da), _0x296b43['bezierCurveTo'](0x67 * _0x4a43da, 0x19 * _0x4a43da, 0x6f * _0x4a43da, 0x21 * _0x4a43da, 0x6e * _0x4a43da, 0x22 * _0x4a43da), _0x296b43['bezierCurveTo'](0x7b * _0x4a43da, 0x30 * _0x4a43da, 0x7b * _0x4a43da, 0x30 * _0x4a43da, 0x88 * _0x4a43da, 0x3e * _0x4a43da), _0x296b43['bezierCurveTo'](0x8e * _0x4a43da, 0x3c * _0x4a43da, 0x93 * _0x4a43da, 0x3b * _0x4a43da, 0x9b * _0x4a43da, 0x3a * _0x4a43da), _0x296b43['bezierCurveTo'](0x93 * _0x4a43da, 0x41 * _0x4a43da, 0x93 * _0x4a43da, 0x41 * _0x4a43da, 0x8b * _0x4a43da, 0x49 * _0x4a43da), _0x296b43['bezierCurveTo'](0x91 * _0x4a43da, 0x49 * _0x4a43da, 0x91 * _0x4a43da, 0x49 * _0x4a43da, 0x97 * _0x4a43da, 0x49 * _0x4a43da), _0x296b43['bezierCurveTo'](0x91 * _0x4a43da, 0x50 * _0x4a43da, 0x91 * _0x4a43da, 0x50 * _0x4a43da, 0x8a * _0x4a43da, 0x57 * _0x4a43da), _0x296b43['bezierCurveTo'](0x90 * _0x4a43da, 0x58 * _0x4a43da, 0x90 * _0x4a43da, 0x58 * _0x4a43da, 0x96 * _0x4a43da, 0x59 * _0x4a43da), _0x296b43['bezierCurveTo'](0x7d * _0x4a43da, 0x67 * _0x4a43da, 0x7d * _0x4a43da, 0x7d * _0x4a43da, 0x71 * _0x4a43da, 0x8d * _0x4a43da), _0x296b43['bezierCurveTo'](0x5c * _0x4a43da, 0xb2 * _0x4a43da, 0x55 * _0x4a43da, 0xb1 * _0x4a43da, 0x4c * _0x4a43da, 0xb2 * _0x4a43da), _0x296b43['bezierCurveTo'](0x40 * _0x4a43da, 0xb3 * _0x4a43da, 0x33 * _0x4a43da, 0xa4 * _0x4a43da, 0x23 * _0x4a43da, 0x83 * _0x4a43da), _0x296b43['bezierCurveTo'](0x12 * _0x4a43da, 0x5f * _0x4a43da, 0xd * _0x4a43da, 0x63 * _0x4a43da, 0x8 * _0x4a43da, 0x5d * _0x4a43da), _0x296b43['closePath'](), fill_path(_0x296b43, _0x22de59, _0x22de59, 0x4 * _0x4a43da), _0x296b43['beginPath'](), _0x296b43['lineCap'] = 'round', _0x296b43['lineJoin'] = 'round', _0x296b43['moveTo'](0x19 * _0x4a43da, 0x3f * _0x4a43da), _0x296b43['bezierCurveTo'](0x10 * _0x4a43da, 0x3a * _0x4a43da, 0x11 * _0x4a43da, 0x33 * _0x4a43da, 0x11 * _0x4a43da, 0x21 * _0x4a43da), _0x296b43['bezierCurveTo'](0x13 * _0x4a43da, 0xc * _0x4a43da, 0x15 * _0x4a43da, 0xc * _0x4a43da, 0x20 * _0x4a43da, 0x11 * _0x4a43da), _0x296b43['bezierCurveTo'](0x3f * _0x4a43da, 0x1f * _0x4a43da, 0x42 * _0x4a43da, 0x2d * _0x4a43da, 0x42 * _0x4a43da, 0x36 * _0x4a43da), fill_path(_0x296b43, _0x22de59, _0x22de59, 0x4 * _0x4a43da), _0x296b43['beginPath'](), _0x296b43['lineCap'] = 'round', _0x296b43['lineJoin'] = 'round', _0x296b43['moveTo'](0x5b * _0x4a43da, 0x35 * _0x4a43da), _0x296b43['bezierCurveTo'](0x5b * _0x4a43da, 0x28 * _0x4a43da, 0x62 * _0x4a43da, 0x21 * _0x4a43da, 0x79 * _0x4a43da, 0x14 * _0x4a43da), _0x296b43['bezierCurveTo'](0x89 * _0x4a43da, 0xc * _0x4a43da, 0x89 * _0x4a43da, 0x10 * _0x4a43da, 0x8b * _0x4a43da, 0x1b * _0x4a43da), _0x296b43['bezierCurveTo'](0x8d * _0x4a43da, 0x31 * _0x4a43da, 0x8c * _0x4a43da, 0x39 * _0x4a43da, 0x86 * _0x4a43da, 0x40 * _0x4a43da), fill_path(_0x296b43, _0x22de59, _0x22de59, 0x4 * _0x4a43da), _0x28a731;
}

function create_polar_bear(_0x54e7c1, _0x54d755) {
    var _0x35dc9b = document['createElement']('canvas'),
        _0x3de1f9 = _0x35dc9b['getContext']('2d');
    return _0x35dc9b['width'] = 0x93 * _0x54e7c1, _0x35dc9b['height'] = 0xac * _0x54e7c1, _0x3de1f9['globalAlpha'] = 0.5, _0x3de1f9['translate'](0x0, 0x8 * _0x54e7c1), _0x3de1f9['beginPath'](), _0x3de1f9['lineCap'] = 'round', _0x3de1f9['lineJoin'] = 'round', _0x3de1f9['moveTo'](0x8 * _0x54e7c1, 0x32 * _0x54e7c1), _0x3de1f9['bezierCurveTo'](0xf * _0x54e7c1, 0x10 * _0x54e7c1, 0x31 * _0x54e7c1, 0x6 * _0x54e7c1, 0x43 * _0x54e7c1, 0x6 * _0x54e7c1), _0x3de1f9['bezierCurveTo'](0x79 * _0x54e7c1, 0x3 * _0x54e7c1, 0x80 * _0x54e7c1, 0x20 * _0x54e7c1, 0x87 * _0x54e7c1, 0x30 * _0x54e7c1), _0x3de1f9['bezierCurveTo'](0x92 * _0x54e7c1, 0x60 * _0x54e7c1, 0x7c * _0x54e7c1, 0x83 * _0x54e7c1, 0x60 * _0x54e7c1, 0x87 * _0x54e7c1), _0x3de1f9['bezierCurveTo'](0x60 * _0x54e7c1, 0x9e * _0x54e7c1, 0x4f * _0x54e7c1, 0x9c * _0x54e7c1, 0x4b * _0x54e7c1, 0x9c * _0x54e7c1), _0x3de1f9['bezierCurveTo'](0x32 * _0x54e7c1, 0x9a * _0x54e7c1, 0x35 * _0x54e7c1, 0x96 * _0x54e7c1, 0x34 * _0x54e7c1, 0x87 * _0x54e7c1), _0x3de1f9['bezierCurveTo'](0x2 * _0x54e7c1, 0x7f * _0x54e7c1, 0x3 * _0x54e7c1, 0x57 * _0x54e7c1, 0x8 * _0x54e7c1, 0x32 * _0x54e7c1), _0x3de1f9['closePath'](), fill_path(_0x3de1f9, _0x54d755[0x0]), _0x3de1f9['translate'](0x0, -0x8 * _0x54e7c1), _0x3de1f9['globalAlpha'] = 0x1, _0x3de1f9['beginPath'](), _0x3de1f9['lineCap'] = 'round', _0x3de1f9['lineJoin'] = 'round', _0x3de1f9['moveTo'](0x8 * _0x54e7c1, 0x32 * _0x54e7c1), _0x3de1f9['bezierCurveTo'](0xf * _0x54e7c1, 0x10 * _0x54e7c1, 0x31 * _0x54e7c1, 0x6 * _0x54e7c1, 0x43 * _0x54e7c1, 0x6 * _0x54e7c1), _0x3de1f9['bezierCurveTo'](0x79 * _0x54e7c1, 0x3 * _0x54e7c1, 0x80 * _0x54e7c1, 0x20 * _0x54e7c1, 0x87 * _0x54e7c1, 0x30 * _0x54e7c1), _0x3de1f9['bezierCurveTo'](0x92 * _0x54e7c1, 0x60 * _0x54e7c1, 0x7c * _0x54e7c1, 0x83 * _0x54e7c1, 0x60 * _0x54e7c1, 0x87 * _0x54e7c1), _0x3de1f9['bezierCurveTo'](0x60 * _0x54e7c1, 0x9e * _0x54e7c1, 0x4f * _0x54e7c1, 0x9c * _0x54e7c1, 0x4b * _0x54e7c1, 0x9c * _0x54e7c1), _0x3de1f9['bezierCurveTo'](0x32 * _0x54e7c1, 0x9a * _0x54e7c1, 0x35 * _0x54e7c1, 0x96 * _0x54e7c1, 0x34 * _0x54e7c1, 0x87 * _0x54e7c1), _0x3de1f9['bezierCurveTo'](0x2 * _0x54e7c1, 0x7f * _0x54e7c1, 0x3 * _0x54e7c1, 0x57 * _0x54e7c1, 0x8 * _0x54e7c1, 0x32 * _0x54e7c1), _0x3de1f9['closePath'](), fill_path(_0x3de1f9, _0x54d755[0x1], _0x54d755[0x2], 0x4 * _0x54e7c1), _0x3de1f9['beginPath'](), _0x3de1f9['lineCap'] = 'round', _0x3de1f9['lineJoin'] = 'round', _0x3de1f9['moveTo'](0xe * _0x54e7c1, 0x39 * _0x54e7c1), _0x3de1f9['bezierCurveTo'](0x2 * _0x54e7c1, 0x32 * _0x54e7c1, 0x5 * _0x54e7c1, 0x16 * _0x54e7c1, 0x18 * _0x54e7c1, 0x16 * _0x54e7c1), _0x3de1f9['bezierCurveTo'](0x29 * _0x54e7c1, 0x15 * _0x54e7c1, 0x36 * _0x54e7c1, 0x20 * _0x54e7c1, 0x37 * _0x54e7c1, 0x30 * _0x54e7c1), fill_path(_0x3de1f9, _0x54d755[0x1], _0x54d755[0x2], 0x4 * _0x54e7c1), _0x3de1f9['beginPath'](), _0x3de1f9['lineCap'] = 'round', _0x3de1f9['lineJoin'] = 'round', _0x3de1f9['moveTo'](0x5d * _0x54e7c1, 0x2f * _0x54e7c1), _0x3de1f9['bezierCurveTo'](0x5e * _0x54e7c1, 0x18 * _0x54e7c1, 0x74 * _0x54e7c1, 0x15 * _0x54e7c1, 0x78 * _0x54e7c1, 0x14 * _0x54e7c1), _0x3de1f9['bezierCurveTo'](0x90 * _0x54e7c1, 0x11 * _0x54e7c1, 0x92 * _0x54e7c1, 0x34 * _0x54e7c1, 0x85 * _0x54e7c1, 0x3a * _0x54e7c1), fill_path(_0x3de1f9, _0x54d755[0x1], _0x54d755[0x2], 0x4 * _0x54e7c1), circle(_0x3de1f9, 0x33 * _0x54e7c1, 0x5b * _0x54e7c1, 0x9 * _0x54e7c1), fill_path(_0x3de1f9, _0x54d755[0x3]), circle(_0x3de1f9, 0x5f * _0x54e7c1, 0x5b * _0x54e7c1, 0x9 * _0x54e7c1), fill_path(_0x3de1f9, _0x54d755[0x3]), circle(_0x3de1f9, 0x5b * _0x54e7c1, 0x59 * _0x54e7c1, 0x4 * _0x54e7c1), fill_path(_0x3de1f9, _0x54d755[0x4]), circle(_0x3de1f9, 0x2f * _0x54e7c1, 0x59 * _0x54e7c1, 0x4 * _0x54e7c1), fill_path(_0x3de1f9, _0x54d755[0x4]), _0x3de1f9['beginPath'](), _0x3de1f9['lineCap'] = 'round', _0x3de1f9['lineJoin'] = 'round', _0x3de1f9['moveTo'](0x36 * _0x54e7c1, 0x85 * _0x54e7c1), _0x3de1f9['bezierCurveTo'](0x38 * _0x54e7c1, 0x6c * _0x54e7c1, 0x40 * _0x54e7c1, 0x63 * _0x54e7c1, 0x49 * _0x54e7c1, 0x62 * _0x54e7c1), _0x3de1f9['bezierCurveTo'](0x56 * _0x54e7c1, 0x61 * _0x54e7c1, 0x5b * _0x54e7c1, 0x77 * _0x54e7c1, 0x5d * _0x54e7c1, 0x85 * _0x54e7c1), _0x3de1f9['bezierCurveTo'](0x5e * _0x54e7c1, 0x9b * _0x54e7c1, 0x5a * _0x54e7c1, 0x96 * _0x54e7c1, 0x4a * _0x54e7c1, 0x9b * _0x54e7c1), _0x3de1f9['bezierCurveTo'](0x32 * _0x54e7c1, 0x98 * _0x54e7c1, 0x37 * _0x54e7c1, 0x91 * _0x54e7c1, 0x36 * _0x54e7c1, 0x86 * _0x54e7c1), _0x3de1f9['closePath'](), fill_path(_0x3de1f9, _0x54d755[0x5]), _0x3de1f9['beginPath'](), _0x3de1f9['lineCap'] = 'round', _0x3de1f9['lineJoin'] = 'round', _0x3de1f9['moveTo'](65.25 * _0x54e7c1, 0x87 * _0x54e7c1), _0x3de1f9['bezierCurveTo'](75.25 * _0x54e7c1, 0x80 * _0x54e7c1, 83.25 * _0x54e7c1, 0x85 * _0x54e7c1, 83.25 * _0x54e7c1, 0x8a * _0x54e7c1), _0x3de1f9['bezierCurveTo'](88.25 * _0x54e7c1, 0x94 * _0x54e7c1, 61.25 * _0x54e7c1, 0x95 * _0x54e7c1, 64.25 * _0x54e7c1, 0x89 * _0x54e7c1), _0x3de1f9['closePath'](), fill_path(_0x3de1f9, _0x54d755[0x6]), _0x3de1f9['beginPath'](), _0x3de1f9['lineCap'] = 'round', _0x3de1f9['lineJoin'] = 'round', _0x3de1f9['moveTo'](0x4a * _0x54e7c1, 0x91 * _0x54e7c1), _0x3de1f9['bezierCurveTo'](0x4a * _0x54e7c1, 0x94 * _0x54e7c1, 0x4a * _0x54e7c1, 0x94 * _0x54e7c1, 0x4a * _0x54e7c1, 0x97 * _0x54e7c1), _0x3de1f9['closePath'](), fill_path(_0x3de1f9, undefined, _0x54d755[0x6], 0x2 * _0x54e7c1), _0x3de1f9['beginPath'](), _0x3de1f9['lineCap'] = 'round', _0x3de1f9['lineJoin'] = 'round', _0x3de1f9['moveTo'](0x13 * _0x54e7c1, 0x3a * _0x54e7c1), _0x3de1f9['bezierCurveTo'](0xa * _0x54e7c1, 0x26 * _0x54e7c1, 0x12 * _0x54e7c1, 0x21 * _0x54e7c1, 0x1c * _0x54e7c1, 0x22 * _0x54e7c1), _0x3de1f9['bezierCurveTo'](0x29 * _0x54e7c1, 0x27 * _0x54e7c1, 0x2d * _0x54e7c1, 0x2d * _0x54e7c1, 0x32 * _0x54e7c1, 0x33 * _0x54e7c1), _0x3de1f9['closePath'](), fill_path(_0x3de1f9, _0x54d755[0x6]), _0x3de1f9['beginPath'](), _0x3de1f9['lineCap'] = 'round', _0x3de1f9['lineJoin'] = 'round', _0x3de1f9['moveTo'](0x64 * _0x54e7c1, 0x33 * _0x54e7c1), _0x3de1f9['bezierCurveTo'](0x6a * _0x54e7c1, 0x24 * _0x54e7c1, 0x77 * _0x54e7c1, 0x1f * _0x54e7c1, 0x80 * _0x54e7c1, 0x24 * _0x54e7c1), _0x3de1f9['bezierCurveTo'](0x89 * _0x54e7c1, 0x31 * _0x54e7c1, 0x80 * _0x54e7c1, 0x3a * _0x54e7c1, 0x80 * _0x54e7c1, 0x3c * _0x54e7c1), _0x3de1f9['closePath'](), fill_path(_0x3de1f9, _0x54d755[0x6]), _0x35dc9b;
}

function create_hurt_polar_bear(_0x47b7be, _0x17dacf) {
    var _0x51f5b2 = document['createElement']('canvas'),
        _0xaef850 = _0x51f5b2['getContext']('2d');
    return _0x51f5b2['width'] = 0x93 * _0x47b7be, _0x51f5b2['height'] = 0xac * _0x47b7be, _0xaef850['beginPath'](), _0xaef850['lineCap'] = 'round', _0xaef850['lineJoin'] = 'round', _0xaef850['moveTo'](0x8 * _0x47b7be, 0x32 * _0x47b7be), _0xaef850['bezierCurveTo'](0xf * _0x47b7be, 0x10 * _0x47b7be, 0x31 * _0x47b7be, 0x6 * _0x47b7be, 0x43 * _0x47b7be, 0x6 * _0x47b7be), _0xaef850['bezierCurveTo'](0x79 * _0x47b7be, 0x3 * _0x47b7be, 0x80 * _0x47b7be, 0x20 * _0x47b7be, 0x87 * _0x47b7be, 0x30 * _0x47b7be), _0xaef850['bezierCurveTo'](0x92 * _0x47b7be, 0x60 * _0x47b7be, 0x7c * _0x47b7be, 0x83 * _0x47b7be, 0x60 * _0x47b7be, 0x87 * _0x47b7be), _0xaef850['bezierCurveTo'](0x60 * _0x47b7be, 0x9e * _0x47b7be, 0x4f * _0x47b7be, 0x9c * _0x47b7be, 0x4b * _0x47b7be, 0x9c * _0x47b7be), _0xaef850['bezierCurveTo'](0x32 * _0x47b7be, 0x9a * _0x47b7be, 0x35 * _0x47b7be, 0x96 * _0x47b7be, 0x34 * _0x47b7be, 0x87 * _0x47b7be), _0xaef850['bezierCurveTo'](0x2 * _0x47b7be, 0x7f * _0x47b7be, 0x3 * _0x47b7be, 0x57 * _0x47b7be, 0x8 * _0x47b7be, 0x32 * _0x47b7be), _0xaef850['closePath'](), fill_path(_0xaef850, _0x17dacf, _0x17dacf, 0x4 * _0x47b7be), _0xaef850['beginPath'](), _0xaef850['lineCap'] = 'round', _0xaef850['lineJoin'] = 'round', _0xaef850['moveTo'](0xe * _0x47b7be, 0x39 * _0x47b7be), _0xaef850['bezierCurveTo'](0x2 * _0x47b7be, 0x32 * _0x47b7be, 0x5 * _0x47b7be, 0x16 * _0x47b7be, 0x18 * _0x47b7be, 0x16 * _0x47b7be), _0xaef850['bezierCurveTo'](0x29 * _0x47b7be, 0x15 * _0x47b7be, 0x36 * _0x47b7be, 0x20 * _0x47b7be, 0x37 * _0x47b7be, 0x30 * _0x47b7be), fill_path(_0xaef850, _0x17dacf, _0x17dacf, 0x4 * _0x47b7be), _0xaef850['beginPath'](), _0xaef850['lineCap'] = 'round', _0xaef850['lineJoin'] = 'round', _0xaef850['moveTo'](0x5d * _0x47b7be, 0x2f * _0x47b7be), _0xaef850['bezierCurveTo'](0x5e * _0x47b7be, 0x18 * _0x47b7be, 0x74 * _0x47b7be, 0x15 * _0x47b7be, 0x78 * _0x47b7be, 0x14 * _0x47b7be), _0xaef850['bezierCurveTo'](0x90 * _0x47b7be, 0x11 * _0x47b7be, 0x92 * _0x47b7be, 0x34 * _0x47b7be, 0x85 * _0x47b7be, 0x3a * _0x47b7be), fill_path(_0xaef850, _0x17dacf, _0x17dacf, 0x4 * _0x47b7be), _0x51f5b2;
}

function create_dragon(_0x4d53ea, _0x5a28c5) {
    var _0x3beefc = document['createElement']('canvas'),
        _0x5285c5 = _0x3beefc['getContext']('2d');
    return _0x3beefc['width'] = 0x10f * _0x4d53ea, _0x3beefc['height'] = 0x16e * _0x4d53ea, _0x5285c5['globalAlpha'] = 0.5, _0x5285c5['translate'](0x0, 0xa * _0x4d53ea), _0x5285c5['beginPath'](), _0x5285c5['lineCap'] = 'round', _0x5285c5['lineJoin'] = 'round', _0x5285c5['moveTo'](0x85 * _0x4d53ea, 0x63 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0xba * _0x4d53ea, 0x7b * _0x4d53ea, 0xc7 * _0x4d53ea, 0x98 * _0x4d53ea, 0xd1 * _0x4d53ea, 0xa9 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0xe4 * _0x4d53ea, 0xcd * _0x4d53ea, 0xe0 * _0x4d53ea, 0xf5 * _0x4d53ea, 0xbe * _0x4d53ea, 0x114 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0xa1 * _0x4d53ea, 0x128 * _0x4d53ea, 0x63 * _0x4d53ea, 0x124 * _0x4d53ea, 0x4f * _0x4d53ea, 0x112 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x31 * _0x4d53ea, 0xfd * _0x4d53ea, 0x2f * _0x4d53ea, 0xd6 * _0x4d53ea, 0x32 * _0x4d53ea, 0xc5 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x3d * _0x4d53ea, 0x8f * _0x4d53ea, 0x66 * _0x4d53ea, 0x71 * _0x4d53ea, 0x83 * _0x4d53ea, 0x63 * _0x4d53ea), _0x5285c5['closePath'](), fill_path(_0x5285c5, _0x5a28c5[0x0]), _0x5285c5['beginPath'](), _0x5285c5['lineCap'] = 'round', _0x5285c5['lineJoin'] = 'round', _0x5285c5['moveTo'](0x49 * _0x4d53ea, 0x10e * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x4f * _0x4d53ea, 0x118 * _0x4d53ea, 0x4d * _0x4d53ea, 0x118 * _0x4d53ea, 0x4e * _0x4d53ea, 0x11f * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x4e * _0x4d53ea, 0x122 * _0x4d53ea, 0x53 * _0x4d53ea, 0x123 * _0x4d53ea, 0x52 * _0x4d53ea, 0x12b * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x51 * _0x4d53ea, 0x12d * _0x4d53ea, 0x57 * _0x4d53ea, 0x12d * _0x4d53ea, 0x5c * _0x4d53ea, 0x13a * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x5e * _0x4d53ea, 0x13f * _0x4d53ea, 0x64 * _0x4d53ea, 0x141 * _0x4d53ea, 0x6b * _0x4d53ea, 0x140 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x6f * _0x4d53ea, 0x143 * _0x4d53ea, 0x72 * _0x4d53ea, 0x144 * _0x4d53ea, 0x77 * _0x4d53ea, 0x140 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x89 * _0x4d53ea, 0x141 * _0x4d53ea, 0x92 * _0x4d53ea, 0x143 * _0x4d53ea, 0x8b * _0x4d53ea, 0x140 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x8d * _0x4d53ea, 0x144 * _0x4d53ea, 0x96 * _0x4d53ea, 0x144 * _0x4d53ea, 0x99 * _0x4d53ea, 0x140 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0xa8 * _0x4d53ea, 0x13f * _0x4d53ea, 0xab * _0x4d53ea, 0x13c * _0x4d53ea, 0xad * _0x4d53ea, 0x133 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0xb4 * _0x4d53ea, 0x131 * _0x4d53ea, 0xb4 * _0x4d53ea, 0x12d * _0x4d53ea, 0xb2 * _0x4d53ea, 0x128 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0xb7 * _0x4d53ea, 0x128 * _0x4d53ea, 0xb9 * _0x4d53ea, 0x121 * _0x4d53ea, 0xbc * _0x4d53ea, 0x117 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0xab * _0x4d53ea, 0x11e * _0x4d53ea, 0x95 * _0x4d53ea, 0x122 * _0x4d53ea, 0x84 * _0x4d53ea, 0x121 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x65 * _0x4d53ea, 0x122 * _0x4d53ea, 0x56 * _0x4d53ea, 0x118 * _0x4d53ea, 0x4a * _0x4d53ea, 0x10f * _0x4d53ea), _0x5285c5['closePath'](), fill_path(_0x5285c5, _0x5a28c5[0x0]), _0x5285c5['beginPath'](), _0x5285c5['lineCap'] = 'round', _0x5285c5['lineJoin'] = 'round', _0x5285c5['moveTo'](0x4c * _0x4d53ea, 0xfc * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x55 * _0x4d53ea, 0x126 * _0x4d53ea, 0x60 * _0x4d53ea, 0x13a * _0x4d53ea, 0x67 * _0x4d53ea, 0x13a * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x6a * _0x4d53ea, 0x13c * _0x4d53ea, 0x97 * _0x4d53ea, 0x13a * _0x4d53ea, 0x9c * _0x4d53ea, 0x13a * _0x4d53ea), _0x5285c5['bezierCurveTo'](0xa9 * _0x4d53ea, 0x13d * _0x4d53ea, 0xb6 * _0x4d53ea, 0x11d * _0x4d53ea, 0xbf * _0x4d53ea, 0x100 * _0x4d53ea), _0x5285c5['bezierCurveTo'](134.5 * _0x4d53ea, 0xfe * _0x4d53ea, 134.5 * _0x4d53ea, 0xfe * _0x4d53ea, 0x4e * _0x4d53ea, 0xfc * _0x4d53ea), _0x5285c5['closePath'](), fill_path(_0x5285c5, _0x5a28c5[0x0]), _0x5285c5['beginPath'](), _0x5285c5['lineCap'] = 'round', _0x5285c5['lineJoin'] = 'round', _0x5285c5['moveTo'](0x54 * _0x4d53ea, 0x101 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x7a * _0x4d53ea, 0x111 * _0x4d53ea, 0x92 * _0x4d53ea, 0x10c * _0x4d53ea, 0xb3 * _0x4d53ea, 0x105 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0xbe * _0x4d53ea, 0x102 * _0x4d53ea, 0xbb * _0x4d53ea, 0x10a * _0x4d53ea, 0xb2 * _0x4d53ea, 0x110 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0xa0 * _0x4d53ea, 0x11c * _0x4d53ea, 0x7b * _0x4d53ea, 0x11a * _0x4d53ea, 0x64 * _0x4d53ea, 0x115 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x49 * _0x4d53ea, 0x104 * _0x4d53ea, 0x4f * _0x4d53ea, 0x101 * _0x4d53ea, 0x54 * _0x4d53ea, 0x101 * _0x4d53ea), _0x5285c5['closePath'](), fill_path(_0x5285c5, _0x5a28c5[0x0]), _0x5285c5['beginPath'](), _0x5285c5['lineCap'] = 'round', _0x5285c5['lineJoin'] = 'round', _0x5285c5['moveTo'](0x7d * _0x4d53ea, 0x41 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x85 * _0x4d53ea, 0x2d * _0x4d53ea, 0x88 * _0x4d53ea, 0x2a * _0x4d53ea, 0x8d * _0x4d53ea, 0x37 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x97 * _0x4d53ea, 0x60 * _0x4d53ea, 0xa4 * _0x4d53ea, 0x75 * _0x4d53ea, 0xaf * _0x4d53ea, 0x86 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0xcb * _0x4d53ea, 0xb5 * _0x4d53ea, 0xcf * _0x4d53ea, 0xb6 * _0x4d53ea, 0xd0 * _0x4d53ea, 0xd7 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0xce * _0x4d53ea, 0xf0 * _0x4d53ea, 0xcd * _0x4d53ea, 0xf6 * _0x4d53ea, 0xb8 * _0x4d53ea, 0x102 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0xa1 * _0x4d53ea, 0x10b * _0x4d53ea, 0x83 * _0x4d53ea, 0x110 * _0x4d53ea, 0x56 * _0x4d53ea, 0x102 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x43 * _0x4d53ea, 0xfc * _0x4d53ea, 0x44 * _0x4d53ea, 0xef * _0x4d53ea, 0x40 * _0x4d53ea, 0xd8 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x3e * _0x4d53ea, 0xc2 * _0x4d53ea, 0x48 * _0x4d53ea, 0xa9 * _0x4d53ea, 0x5c * _0x4d53ea, 0x8e * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x6a * _0x4d53ea, 0x79 * _0x4d53ea, 0x72 * _0x4d53ea, 0x65 * _0x4d53ea, 0x7d * _0x4d53ea, 0x41 * _0x4d53ea), _0x5285c5['closePath'](), fill_path(_0x5285c5, _0x5a28c5[0x0]), _0x5285c5['beginPath'](), _0x5285c5['lineCap'] = 'round', _0x5285c5['lineJoin'] = 'round', _0x5285c5['moveTo'](0x73 * _0x4d53ea, 0x25 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x74 * _0x4d53ea, 0x1c * _0x4d53ea, 0x77 * _0x4d53ea, 0x1b * _0x4d53ea, 0x7e * _0x4d53ea, 0x25 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x86 * _0x4d53ea, 0x30 * _0x4d53ea, 0x86 * _0x4d53ea, 0x31 * _0x4d53ea, 0x84 * _0x4d53ea, 0x3b * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x83 * _0x4d53ea, 0x43 * _0x4d53ea, 0x7f * _0x4d53ea, 0x41 * _0x4d53ea, 0x78 * _0x4d53ea, 0x38 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x72 * _0x4d53ea, 0x31 * _0x4d53ea, 0x71 * _0x4d53ea, 0x2b * _0x4d53ea, 0x73 * _0x4d53ea, 0x26 * _0x4d53ea), _0x5285c5['closePath'](), fill_path(_0x5285c5, _0x5a28c5[0x0]), _0x5285c5['beginPath'](), _0x5285c5['lineCap'] = 'round', _0x5285c5['lineJoin'] = 'round', _0x5285c5['moveTo'](0x92 * _0x4d53ea, 0x22 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x98 * _0x4d53ea, 0x1c * _0x4d53ea, 0x9b * _0x4d53ea, 0x1b * _0x4d53ea, 0x9d * _0x4d53ea, 0x27 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x9d * _0x4d53ea, 0x2d * _0x4d53ea, 0x9d * _0x4d53ea, 0x31 * _0x4d53ea, 0x96 * _0x4d53ea, 0x38 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x8d * _0x4d53ea, 0x42 * _0x4d53ea, 0x8a * _0x4d53ea, 0x42 * _0x4d53ea, 0x8a * _0x4d53ea, 0x39 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x89 * _0x4d53ea, 0x32 * _0x4d53ea, 0x89 * _0x4d53ea, 0x2f * _0x4d53ea, 0x8d * _0x4d53ea, 0x2a * _0x4d53ea), _0x5285c5['closePath'](), fill_path(_0x5285c5, _0x5a28c5[0x0]), _0x5285c5['beginPath'](), _0x5285c5['lineCap'] = 'round', _0x5285c5['lineJoin'] = 'round', _0x5285c5['moveTo'](0x8f * _0x4d53ea, 0x45 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x94 * _0x4d53ea, 0x38 * _0x4d53ea, 0x9c * _0x4d53ea, 0x32 * _0x4d53ea, 0x9e * _0x4d53ea, 0x3a * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x9f * _0x4d53ea, 0x40 * _0x4d53ea, 0xa0 * _0x4d53ea, 0x43 * _0x4d53ea, 0x99 * _0x4d53ea, 0x4d * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x94 * _0x4d53ea, 0x53 * _0x4d53ea, 0x91 * _0x4d53ea, 0x54 * _0x4d53ea, 0x8f * _0x4d53ea, 0x4d * _0x4d53ea), _0x5285c5['closePath'](), fill_path(_0x5285c5, _0x5a28c5[0x0]), _0x5285c5['beginPath'](), _0x5285c5['lineCap'] = 'round', _0x5285c5['lineJoin'] = 'round', _0x5285c5['moveTo'](0x95 * _0x4d53ea, 0x5c * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x95 * _0x4d53ea, 0x59 * _0x4d53ea, 0x97 * _0x4d53ea, 0x54 * _0x4d53ea, 0x9c * _0x4d53ea, 0x4f * _0x4d53ea), _0x5285c5['bezierCurveTo'](0xa1 * _0x4d53ea, 0x49 * _0x4d53ea, 0xa3 * _0x4d53ea, 0x4e * _0x4d53ea, 0xa2 * _0x4d53ea, 0x56 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0xa1 * _0x4d53ea, 0x5b * _0x4d53ea, 0x9b * _0x4d53ea, 0x63 * _0x4d53ea, 0x98 * _0x4d53ea, 0x62 * _0x4d53ea), _0x5285c5['closePath'](), fill_path(_0x5285c5, _0x5a28c5[0x0]), _0x5285c5['beginPath'](), _0x5285c5['lineCap'] = 'round', _0x5285c5['lineJoin'] = 'round', _0x5285c5['moveTo'](0x6f * _0x4d53ea, 0x3d * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x72 * _0x4d53ea, 0x33 * _0x4d53ea, 0x75 * _0x4d53ea, 0x33 * _0x4d53ea, 0x7c * _0x4d53ea, 0x40 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x80 * _0x4d53ea, 0x44 * _0x4d53ea, 0x80 * _0x4d53ea, 0x4c * _0x4d53ea, 0x7e * _0x4d53ea, 0x4f * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x7b * _0x4d53ea, 0x54 * _0x4d53ea, 0x7a * _0x4d53ea, 0x52 * _0x4d53ea, 0x73 * _0x4d53ea, 0x4a * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x70 * _0x4d53ea, 0x43 * _0x4d53ea, 0x73 * _0x4d53ea, 0x4a * _0x4d53ea, 0x73 * _0x4d53ea, 0x4a * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x6f * _0x4d53ea, 0x44 * _0x4d53ea, 0x6f * _0x4d53ea, 0x42 * _0x4d53ea, 0x6f * _0x4d53ea, 0x3e * _0x4d53ea), _0x5285c5['closePath'](), fill_path(_0x5285c5, _0x5a28c5[0x0]), _0x5285c5['beginPath'](), _0x5285c5['lineCap'] = 'round', _0x5285c5['lineJoin'] = 'round', _0x5285c5['moveTo'](0x6b * _0x4d53ea, 0x51 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x6c * _0x4d53ea, 0x4a * _0x4d53ea, 0x70 * _0x4d53ea, 0x49 * _0x4d53ea, 0x76 * _0x4d53ea, 0x54 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x7a * _0x4d53ea, 0x58 * _0x4d53ea, 0x7a * _0x4d53ea, 0x5d * _0x4d53ea, 0x79 * _0x4d53ea, 0x62 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x72 * _0x4d53ea, 0x62 * _0x4d53ea, 0x71 * _0x4d53ea, 0x62 * _0x4d53ea, 0x6d * _0x4d53ea, 0x5a * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x6b * _0x4d53ea, 0x57 * _0x4d53ea, 0x6a * _0x4d53ea, 0x55 * _0x4d53ea, 0x6b * _0x4d53ea, 0x52 * _0x4d53ea), _0x5285c5['closePath'](), fill_path(_0x5285c5, _0x5a28c5[0x0]), _0x5285c5['globalAlpha'] = 0x1, _0x5285c5['translate'](0x0, -0xa * _0x4d53ea), _0x5285c5['beginPath'](), _0x5285c5['lineCap'] = 'round', _0x5285c5['lineJoin'] = 'round', _0x5285c5['moveTo'](0x85 * _0x4d53ea, 0x63 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0xba * _0x4d53ea, 0x7b * _0x4d53ea, 0xc7 * _0x4d53ea, 0x98 * _0x4d53ea, 0xd1 * _0x4d53ea, 0xa9 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0xe4 * _0x4d53ea, 0xcd * _0x4d53ea, 0xe0 * _0x4d53ea, 0xf5 * _0x4d53ea, 0xbe * _0x4d53ea, 0x114 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0xa1 * _0x4d53ea, 0x128 * _0x4d53ea, 0x63 * _0x4d53ea, 0x124 * _0x4d53ea, 0x4f * _0x4d53ea, 0x112 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x31 * _0x4d53ea, 0xfd * _0x4d53ea, 0x2f * _0x4d53ea, 0xd6 * _0x4d53ea, 0x32 * _0x4d53ea, 0xc5 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x3d * _0x4d53ea, 0x8f * _0x4d53ea, 0x66 * _0x4d53ea, 0x71 * _0x4d53ea, 0x83 * _0x4d53ea, 0x63 * _0x4d53ea), _0x5285c5['closePath'](), fill_path(_0x5285c5, _0x5a28c5[0x3], _0x5a28c5[0x3], 0x8 * _0x4d53ea), _0x5285c5['beginPath'](), _0x5285c5['lineCap'] = 'round', _0x5285c5['lineJoin'] = 'round', _0x5285c5['moveTo'](0x49 * _0x4d53ea, 0x10e * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x4f * _0x4d53ea, 0x118 * _0x4d53ea, 0x4d * _0x4d53ea, 0x118 * _0x4d53ea, 0x4e * _0x4d53ea, 0x11f * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x4e * _0x4d53ea, 0x122 * _0x4d53ea, 0x53 * _0x4d53ea, 0x123 * _0x4d53ea, 0x52 * _0x4d53ea, 0x12b * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x51 * _0x4d53ea, 0x12d * _0x4d53ea, 0x57 * _0x4d53ea, 0x12d * _0x4d53ea, 0x5c * _0x4d53ea, 0x13a * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x5e * _0x4d53ea, 0x13f * _0x4d53ea, 0x64 * _0x4d53ea, 0x141 * _0x4d53ea, 0x6b * _0x4d53ea, 0x140 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x6f * _0x4d53ea, 0x143 * _0x4d53ea, 0x72 * _0x4d53ea, 0x144 * _0x4d53ea, 0x77 * _0x4d53ea, 0x140 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x89 * _0x4d53ea, 0x141 * _0x4d53ea, 0x92 * _0x4d53ea, 0x143 * _0x4d53ea, 0x8b * _0x4d53ea, 0x140 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x8d * _0x4d53ea, 0x144 * _0x4d53ea, 0x96 * _0x4d53ea, 0x144 * _0x4d53ea, 0x99 * _0x4d53ea, 0x140 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0xa8 * _0x4d53ea, 0x13f * _0x4d53ea, 0xab * _0x4d53ea, 0x13c * _0x4d53ea, 0xad * _0x4d53ea, 0x133 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0xb4 * _0x4d53ea, 0x131 * _0x4d53ea, 0xb4 * _0x4d53ea, 0x12d * _0x4d53ea, 0xb2 * _0x4d53ea, 0x128 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0xb7 * _0x4d53ea, 0x128 * _0x4d53ea, 0xb9 * _0x4d53ea, 0x121 * _0x4d53ea, 0xbc * _0x4d53ea, 0x117 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0xab * _0x4d53ea, 0x11e * _0x4d53ea, 0x95 * _0x4d53ea, 0x122 * _0x4d53ea, 0x84 * _0x4d53ea, 0x121 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x65 * _0x4d53ea, 0x122 * _0x4d53ea, 0x56 * _0x4d53ea, 0x118 * _0x4d53ea, 0x4a * _0x4d53ea, 0x10f * _0x4d53ea), _0x5285c5['closePath'](), fill_path(_0x5285c5, _0x5a28c5[0x3], _0x5a28c5[0x3], 0x8 * _0x4d53ea), _0x5285c5['beginPath'](), _0x5285c5['lineCap'] = 'round', _0x5285c5['lineJoin'] = 'round', _0x5285c5['moveTo'](0x4c * _0x4d53ea, 0xfc * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x55 * _0x4d53ea, 0x126 * _0x4d53ea, 0x60 * _0x4d53ea, 0x13a * _0x4d53ea, 0x67 * _0x4d53ea, 0x13a * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x6a * _0x4d53ea, 0x13c * _0x4d53ea, 0x97 * _0x4d53ea, 0x13a * _0x4d53ea, 0x9c * _0x4d53ea, 0x13a * _0x4d53ea), _0x5285c5['bezierCurveTo'](0xa9 * _0x4d53ea, 0x13d * _0x4d53ea, 0xb6 * _0x4d53ea, 0x11d * _0x4d53ea, 0xbf * _0x4d53ea, 0x100 * _0x4d53ea), _0x5285c5['bezierCurveTo'](134.5 * _0x4d53ea, 0xfe * _0x4d53ea, 134.5 * _0x4d53ea, 0xfe * _0x4d53ea, 0x4e * _0x4d53ea, 0xfc * _0x4d53ea), _0x5285c5['closePath'](), fill_path(_0x5285c5, _0x5a28c5[0x3], _0x5a28c5[0x3], 0x8 * _0x4d53ea), _0x5285c5['beginPath'](), _0x5285c5['lineCap'] = 'round', _0x5285c5['lineJoin'] = 'round', _0x5285c5['moveTo'](0x54 * _0x4d53ea, 0x101 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x7a * _0x4d53ea, 0x111 * _0x4d53ea, 0x92 * _0x4d53ea, 0x10c * _0x4d53ea, 0xb3 * _0x4d53ea, 0x105 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0xbe * _0x4d53ea, 0x102 * _0x4d53ea, 0xbb * _0x4d53ea, 0x10a * _0x4d53ea, 0xb2 * _0x4d53ea, 0x110 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0xa0 * _0x4d53ea, 0x11c * _0x4d53ea, 0x7b * _0x4d53ea, 0x11a * _0x4d53ea, 0x64 * _0x4d53ea, 0x115 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x49 * _0x4d53ea, 0x104 * _0x4d53ea, 0x4f * _0x4d53ea, 0x101 * _0x4d53ea, 0x54 * _0x4d53ea, 0x101 * _0x4d53ea), _0x5285c5['closePath'](), fill_path(_0x5285c5, _0x5a28c5[0x3], _0x5a28c5[0x3], 0x8 * _0x4d53ea), _0x5285c5['beginPath'](), _0x5285c5['lineCap'] = 'round', _0x5285c5['lineJoin'] = 'round', _0x5285c5['moveTo'](0x7d * _0x4d53ea, 0x41 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x85 * _0x4d53ea, 0x2d * _0x4d53ea, 0x88 * _0x4d53ea, 0x2a * _0x4d53ea, 0x8d * _0x4d53ea, 0x37 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x97 * _0x4d53ea, 0x60 * _0x4d53ea, 0xa4 * _0x4d53ea, 0x75 * _0x4d53ea, 0xaf * _0x4d53ea, 0x86 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0xcb * _0x4d53ea, 0xb5 * _0x4d53ea, 0xcf * _0x4d53ea, 0xb6 * _0x4d53ea, 0xd0 * _0x4d53ea, 0xd7 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0xce * _0x4d53ea, 0xf0 * _0x4d53ea, 0xcd * _0x4d53ea, 0xf6 * _0x4d53ea, 0xb8 * _0x4d53ea, 0x102 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0xa1 * _0x4d53ea, 0x10b * _0x4d53ea, 0x83 * _0x4d53ea, 0x110 * _0x4d53ea, 0x56 * _0x4d53ea, 0x102 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x43 * _0x4d53ea, 0xfc * _0x4d53ea, 0x44 * _0x4d53ea, 0xef * _0x4d53ea, 0x40 * _0x4d53ea, 0xd8 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x3e * _0x4d53ea, 0xc2 * _0x4d53ea, 0x48 * _0x4d53ea, 0xa9 * _0x4d53ea, 0x5c * _0x4d53ea, 0x8e * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x6a * _0x4d53ea, 0x79 * _0x4d53ea, 0x72 * _0x4d53ea, 0x65 * _0x4d53ea, 0x7d * _0x4d53ea, 0x41 * _0x4d53ea), _0x5285c5['closePath'](), fill_path(_0x5285c5, _0x5a28c5[0x3], _0x5a28c5[0x3], 0x8 * _0x4d53ea), _0x5285c5['beginPath'](), _0x5285c5['lineCap'] = 'round', _0x5285c5['lineJoin'] = 'round', _0x5285c5['moveTo'](0x73 * _0x4d53ea, 0x25 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x74 * _0x4d53ea, 0x1c * _0x4d53ea, 0x77 * _0x4d53ea, 0x1b * _0x4d53ea, 0x7e * _0x4d53ea, 0x25 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x86 * _0x4d53ea, 0x30 * _0x4d53ea, 0x86 * _0x4d53ea, 0x31 * _0x4d53ea, 0x84 * _0x4d53ea, 0x3b * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x83 * _0x4d53ea, 0x43 * _0x4d53ea, 0x7f * _0x4d53ea, 0x41 * _0x4d53ea, 0x78 * _0x4d53ea, 0x38 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x72 * _0x4d53ea, 0x31 * _0x4d53ea, 0x71 * _0x4d53ea, 0x2b * _0x4d53ea, 0x73 * _0x4d53ea, 0x26 * _0x4d53ea), _0x5285c5['closePath'](), fill_path(_0x5285c5, _0x5a28c5[0x3], _0x5a28c5[0x3], 0x8 * _0x4d53ea), _0x5285c5['beginPath'](), _0x5285c5['lineCap'] = 'round', _0x5285c5['lineJoin'] = 'round', _0x5285c5['moveTo'](0x92 * _0x4d53ea, 0x22 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x98 * _0x4d53ea, 0x1c * _0x4d53ea, 0x9b * _0x4d53ea, 0x1b * _0x4d53ea, 0x9d * _0x4d53ea, 0x27 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x9d * _0x4d53ea, 0x2d * _0x4d53ea, 0x9d * _0x4d53ea, 0x31 * _0x4d53ea, 0x96 * _0x4d53ea, 0x38 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x8d * _0x4d53ea, 0x42 * _0x4d53ea, 0x8a * _0x4d53ea, 0x42 * _0x4d53ea, 0x8a * _0x4d53ea, 0x39 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x89 * _0x4d53ea, 0x32 * _0x4d53ea, 0x89 * _0x4d53ea, 0x2f * _0x4d53ea, 0x8d * _0x4d53ea, 0x2a * _0x4d53ea), _0x5285c5['closePath'](), fill_path(_0x5285c5, _0x5a28c5[0x3], _0x5a28c5[0x3], 0x8 * _0x4d53ea), _0x5285c5['beginPath'](), _0x5285c5['lineCap'] = 'round', _0x5285c5['lineJoin'] = 'round', _0x5285c5['moveTo'](0x8f * _0x4d53ea, 0x45 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x94 * _0x4d53ea, 0x38 * _0x4d53ea, 0x9c * _0x4d53ea, 0x32 * _0x4d53ea, 0x9e * _0x4d53ea, 0x3a * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x9f * _0x4d53ea, 0x40 * _0x4d53ea, 0xa0 * _0x4d53ea, 0x43 * _0x4d53ea, 0x99 * _0x4d53ea, 0x4d * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x94 * _0x4d53ea, 0x53 * _0x4d53ea, 0x91 * _0x4d53ea, 0x54 * _0x4d53ea, 0x8f * _0x4d53ea, 0x4d * _0x4d53ea), _0x5285c5['closePath'](), fill_path(_0x5285c5, _0x5a28c5[0x3], _0x5a28c5[0x3], 0x8 * _0x4d53ea), _0x5285c5['beginPath'](), _0x5285c5['lineCap'] = 'round', _0x5285c5['lineJoin'] = 'round', _0x5285c5['moveTo'](0x95 * _0x4d53ea, 0x5c * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x95 * _0x4d53ea, 0x59 * _0x4d53ea, 0x97 * _0x4d53ea, 0x54 * _0x4d53ea, 0x9c * _0x4d53ea, 0x4f * _0x4d53ea), _0x5285c5['bezierCurveTo'](0xa1 * _0x4d53ea, 0x49 * _0x4d53ea, 0xa3 * _0x4d53ea, 0x4e * _0x4d53ea, 0xa2 * _0x4d53ea, 0x56 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0xa1 * _0x4d53ea, 0x5b * _0x4d53ea, 0x9b * _0x4d53ea, 0x63 * _0x4d53ea, 0x98 * _0x4d53ea, 0x62 * _0x4d53ea), _0x5285c5['closePath'](), fill_path(_0x5285c5, _0x5a28c5[0x3], _0x5a28c5[0x3], 0x8 * _0x4d53ea), _0x5285c5['beginPath'](), _0x5285c5['lineCap'] = 'round', _0x5285c5['lineJoin'] = 'round', _0x5285c5['moveTo'](0x6f * _0x4d53ea, 0x3d * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x72 * _0x4d53ea, 0x33 * _0x4d53ea, 0x75 * _0x4d53ea, 0x33 * _0x4d53ea, 0x7c * _0x4d53ea, 0x40 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x80 * _0x4d53ea, 0x44 * _0x4d53ea, 0x80 * _0x4d53ea, 0x4c * _0x4d53ea, 0x7e * _0x4d53ea, 0x4f * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x7b * _0x4d53ea, 0x54 * _0x4d53ea, 0x7a * _0x4d53ea, 0x52 * _0x4d53ea, 0x73 * _0x4d53ea, 0x4a * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x70 * _0x4d53ea, 0x43 * _0x4d53ea, 0x73 * _0x4d53ea, 0x4a * _0x4d53ea, 0x73 * _0x4d53ea, 0x4a * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x6f * _0x4d53ea, 0x44 * _0x4d53ea, 0x6f * _0x4d53ea, 0x42 * _0x4d53ea, 0x6f * _0x4d53ea, 0x3e * _0x4d53ea), _0x5285c5['closePath'](), fill_path(_0x5285c5, _0x5a28c5[0x3], _0x5a28c5[0x3], 0x8 * _0x4d53ea), _0x5285c5['beginPath'](), _0x5285c5['lineCap'] = 'round', _0x5285c5['lineJoin'] = 'round', _0x5285c5['moveTo'](0x6b * _0x4d53ea, 0x51 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x6c * _0x4d53ea, 0x4a * _0x4d53ea, 0x70 * _0x4d53ea, 0x49 * _0x4d53ea, 0x76 * _0x4d53ea, 0x54 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x7a * _0x4d53ea, 0x58 * _0x4d53ea, 0x7a * _0x4d53ea, 0x5d * _0x4d53ea, 0x79 * _0x4d53ea, 0x62 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x72 * _0x4d53ea, 0x62 * _0x4d53ea, 0x71 * _0x4d53ea, 0x62 * _0x4d53ea, 0x6d * _0x4d53ea, 0x5a * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x6b * _0x4d53ea, 0x57 * _0x4d53ea, 0x6a * _0x4d53ea, 0x55 * _0x4d53ea, 0x6b * _0x4d53ea, 0x52 * _0x4d53ea), _0x5285c5['closePath'](), fill_path(_0x5285c5, _0x5a28c5[0x3], _0x5a28c5[0x3], 0x8 * _0x4d53ea), _0x5285c5['beginPath'](), _0x5285c5['lineCap'] = 'round', _0x5285c5['lineJoin'] = 'round', _0x5285c5['moveTo'](0x85 * _0x4d53ea, 0x63 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0xba * _0x4d53ea, 0x7b * _0x4d53ea, 0xc7 * _0x4d53ea, 0x98 * _0x4d53ea, 0xd1 * _0x4d53ea, 0xa9 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0xe4 * _0x4d53ea, 0xcd * _0x4d53ea, 0xe0 * _0x4d53ea, 0xf5 * _0x4d53ea, 0xbe * _0x4d53ea, 0x114 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0xa1 * _0x4d53ea, 0x128 * _0x4d53ea, 0x63 * _0x4d53ea, 0x124 * _0x4d53ea, 0x4f * _0x4d53ea, 0x112 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x31 * _0x4d53ea, 0xfd * _0x4d53ea, 0x2f * _0x4d53ea, 0xd6 * _0x4d53ea, 0x32 * _0x4d53ea, 0xc5 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x3d * _0x4d53ea, 0x8f * _0x4d53ea, 0x66 * _0x4d53ea, 0x71 * _0x4d53ea, 0x83 * _0x4d53ea, 0x63 * _0x4d53ea), _0x5285c5['closePath'](), fill_path(_0x5285c5, _0x5a28c5[0x1]), _0x5285c5['beginPath'](), _0x5285c5['lineCap'] = 'round', _0x5285c5['lineJoin'] = 'round', _0x5285c5['moveTo'](0x49 * _0x4d53ea, 0x10e * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x4f * _0x4d53ea, 0x118 * _0x4d53ea, 0x4d * _0x4d53ea, 0x118 * _0x4d53ea, 0x4e * _0x4d53ea, 0x11f * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x4e * _0x4d53ea, 0x122 * _0x4d53ea, 0x53 * _0x4d53ea, 0x123 * _0x4d53ea, 0x52 * _0x4d53ea, 0x12b * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x51 * _0x4d53ea, 0x12d * _0x4d53ea, 0x57 * _0x4d53ea, 0x12d * _0x4d53ea, 0x5c * _0x4d53ea, 0x13a * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x5e * _0x4d53ea, 0x13f * _0x4d53ea, 0x64 * _0x4d53ea, 0x141 * _0x4d53ea, 0x6b * _0x4d53ea, 0x140 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x6f * _0x4d53ea, 0x143 * _0x4d53ea, 0x72 * _0x4d53ea, 0x144 * _0x4d53ea, 0x77 * _0x4d53ea, 0x140 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x89 * _0x4d53ea, 0x141 * _0x4d53ea, 0x92 * _0x4d53ea, 0x143 * _0x4d53ea, 0x8b * _0x4d53ea, 0x140 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x8d * _0x4d53ea, 0x144 * _0x4d53ea, 0x96 * _0x4d53ea, 0x144 * _0x4d53ea, 0x99 * _0x4d53ea, 0x140 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0xa8 * _0x4d53ea, 0x13f * _0x4d53ea, 0xab * _0x4d53ea, 0x13c * _0x4d53ea, 0xad * _0x4d53ea, 0x133 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0xb4 * _0x4d53ea, 0x131 * _0x4d53ea, 0xb4 * _0x4d53ea, 0x12d * _0x4d53ea, 0xb2 * _0x4d53ea, 0x128 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0xb7 * _0x4d53ea, 0x128 * _0x4d53ea, 0xb9 * _0x4d53ea, 0x121 * _0x4d53ea, 0xbc * _0x4d53ea, 0x117 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0xab * _0x4d53ea, 0x11e * _0x4d53ea, 0x95 * _0x4d53ea, 0x122 * _0x4d53ea, 0x84 * _0x4d53ea, 0x121 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x65 * _0x4d53ea, 0x122 * _0x4d53ea, 0x56 * _0x4d53ea, 0x118 * _0x4d53ea, 0x4a * _0x4d53ea, 0x10f * _0x4d53ea), _0x5285c5['closePath'](), fill_path(_0x5285c5, _0x5a28c5[0x5]), _0x5285c5['beginPath'](), _0x5285c5['lineCap'] = 'round', _0x5285c5['lineJoin'] = 'round', _0x5285c5['moveTo'](0x4c * _0x4d53ea, 0xfc * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x55 * _0x4d53ea, 0x126 * _0x4d53ea, 0x60 * _0x4d53ea, 0x13a * _0x4d53ea, 0x67 * _0x4d53ea, 0x13a * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x6a * _0x4d53ea, 0x13c * _0x4d53ea, 0x97 * _0x4d53ea, 0x13a * _0x4d53ea, 0x9c * _0x4d53ea, 0x13a * _0x4d53ea), _0x5285c5['bezierCurveTo'](0xa9 * _0x4d53ea, 0x13d * _0x4d53ea, 0xb6 * _0x4d53ea, 0x11d * _0x4d53ea, 0xbf * _0x4d53ea, 0x100 * _0x4d53ea), _0x5285c5['bezierCurveTo'](134.5 * _0x4d53ea, 0xfe * _0x4d53ea, 134.5 * _0x4d53ea, 0xfe * _0x4d53ea, 0x4e * _0x4d53ea, 0xfc * _0x4d53ea), _0x5285c5['closePath'](), fill_path(_0x5285c5, _0x5a28c5[0x2]), _0x5285c5['beginPath'](), _0x5285c5['lineCap'] = 'round', _0x5285c5['lineJoin'] = 'round', _0x5285c5['moveTo'](0x54 * _0x4d53ea, 0x101 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x7a * _0x4d53ea, 0x111 * _0x4d53ea, 0x92 * _0x4d53ea, 0x10c * _0x4d53ea, 0xb3 * _0x4d53ea, 0x105 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0xbe * _0x4d53ea, 0x102 * _0x4d53ea, 0xbb * _0x4d53ea, 0x10a * _0x4d53ea, 0xb2 * _0x4d53ea, 0x110 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0xa0 * _0x4d53ea, 0x11c * _0x4d53ea, 0x7b * _0x4d53ea, 0x11a * _0x4d53ea, 0x64 * _0x4d53ea, 0x115 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x49 * _0x4d53ea, 0x104 * _0x4d53ea, 0x4f * _0x4d53ea, 0x101 * _0x4d53ea, 0x54 * _0x4d53ea, 0x101 * _0x4d53ea), _0x5285c5['closePath'](), fill_path(_0x5285c5, _0x5a28c5[0x1]), circle(_0x5285c5, 0x66 * _0x4d53ea, 0x10d * _0x4d53ea, 0xb * _0x4d53ea), fill_path(_0x5285c5, _0x5a28c5[0x3]), circle(_0x5285c5, 0x62 * _0x4d53ea, 0x10a * _0x4d53ea, 0x5 * _0x4d53ea), fill_path(_0x5285c5, _0x5a28c5[0x6]), circle(_0x5285c5, 0xa8 * _0x4d53ea, 0x10d * _0x4d53ea, 0xb * _0x4d53ea), fill_path(_0x5285c5, _0x5a28c5[0x3]), circle(_0x5285c5, 0xa4 * _0x4d53ea, 0x10a * _0x4d53ea, 0x5 * _0x4d53ea), fill_path(_0x5285c5, _0x5a28c5[0x6]), _0x5285c5['beginPath'](), _0x5285c5['lineCap'] = 'round', _0x5285c5['lineJoin'] = 'round', _0x5285c5['moveTo'](0x7d * _0x4d53ea, 0x41 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x85 * _0x4d53ea, 0x2d * _0x4d53ea, 0x88 * _0x4d53ea, 0x2a * _0x4d53ea, 0x8d * _0x4d53ea, 0x37 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x97 * _0x4d53ea, 0x60 * _0x4d53ea, 0xa4 * _0x4d53ea, 0x75 * _0x4d53ea, 0xaf * _0x4d53ea, 0x86 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0xcb * _0x4d53ea, 0xb5 * _0x4d53ea, 0xcf * _0x4d53ea, 0xb6 * _0x4d53ea, 0xd0 * _0x4d53ea, 0xd7 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0xce * _0x4d53ea, 0xf0 * _0x4d53ea, 0xcd * _0x4d53ea, 0xf6 * _0x4d53ea, 0xb8 * _0x4d53ea, 0x102 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0xa1 * _0x4d53ea, 0x10b * _0x4d53ea, 0x83 * _0x4d53ea, 0x110 * _0x4d53ea, 0x56 * _0x4d53ea, 0x102 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x43 * _0x4d53ea, 0xfc * _0x4d53ea, 0x44 * _0x4d53ea, 0xef * _0x4d53ea, 0x40 * _0x4d53ea, 0xd8 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x3e * _0x4d53ea, 0xc2 * _0x4d53ea, 0x48 * _0x4d53ea, 0xa9 * _0x4d53ea, 0x5c * _0x4d53ea, 0x8e * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x6a * _0x4d53ea, 0x79 * _0x4d53ea, 0x72 * _0x4d53ea, 0x65 * _0x4d53ea, 0x7d * _0x4d53ea, 0x41 * _0x4d53ea), _0x5285c5['closePath'](), fill_path(_0x5285c5, _0x5a28c5[0x2]), _0x5285c5['beginPath'](), _0x5285c5['lineCap'] = 'round', _0x5285c5['lineJoin'] = 'round', _0x5285c5['moveTo'](0x73 * _0x4d53ea, 0xeb * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x76 * _0x4d53ea, 0x102 * _0x4d53ea, 0x89 * _0x4d53ea, 0x10c * _0x4d53ea, 0x94 * _0x4d53ea, 0xf6 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x9c * _0x4d53ea, 0xe4 * _0x4d53ea, 0x98 * _0x4d53ea, 0xa9 * _0x4d53ea, 0x96 * _0x4d53ea, 0x8c * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x93 * _0x4d53ea, 0x57 * _0x4d53ea, 0x8f * _0x4d53ea, 0x45 * _0x4d53ea, 0x8e * _0x4d53ea, 0x3c * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x88 * _0x4d53ea, 0x2c * _0x4d53ea, 0x84 * _0x4d53ea, 0x2b * _0x4d53ea, 0x7f * _0x4d53ea, 0x3e * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x77 * _0x4d53ea, 0x74 * _0x4d53ea, 0x77 * _0x4d53ea, 0x8c * _0x4d53ea, 0x74 * _0x4d53ea, 0xa6 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x71 * _0x4d53ea, 0xca * _0x4d53ea, 0x71 * _0x4d53ea, 0xdf * _0x4d53ea, 0x73 * _0x4d53ea, 0xe9 * _0x4d53ea), _0x5285c5['closePath'](), fill_path(_0x5285c5, _0x5a28c5[0x4]), _0x5285c5['beginPath'](), _0x5285c5['lineCap'] = 'round', _0x5285c5['lineJoin'] = 'round', _0x5285c5['moveTo'](0x84 * _0x4d53ea, 0xdb * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x8c * _0x4d53ea, 0xe5 * _0x4d53ea, 0x8e * _0x4d53ea, 0xe7 * _0x4d53ea, 0x91 * _0x4d53ea, 0xed * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x91 * _0x4d53ea, 0xf5 * _0x4d53ea, 0x8b * _0x4d53ea, 0xf9 * _0x4d53ea, 0x85 * _0x4d53ea, 0xf9 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x7b * _0x4d53ea, 0xf8 * _0x4d53ea, 0x7b * _0x4d53ea, 0xf3 * _0x4d53ea, 0x79 * _0x4d53ea, 0xef * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x7e * _0x4d53ea, 0xe3 * _0x4d53ea, 0x81 * _0x4d53ea, 0xdf * _0x4d53ea, 0x84 * _0x4d53ea, 0xdb * _0x4d53ea), _0x5285c5['closePath'](), fill_path(_0x5285c5, _0x5a28c5[0x8]), _0x5285c5['beginPath'](), _0x5285c5['lineCap'] = 'round', _0x5285c5['lineJoin'] = 'round', _0x5285c5['moveTo'](0x85 * _0x4d53ea, 0xb3 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x8c * _0x4d53ea, 188.5 * _0x4d53ea, 0x8c * _0x4d53ea, 188.5 * _0x4d53ea, 0x93 * _0x4d53ea, 0xc6 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x94 * _0x4d53ea, 0xd1 * _0x4d53ea, 0x8e * _0x4d53ea, 0xd6 * _0x4d53ea, 0x85 * _0x4d53ea, 0xd6 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x79 * _0x4d53ea, 0xd3 * _0x4d53ea, 0x79 * _0x4d53ea, 0xcf * _0x4d53ea, 0x78 * _0x4d53ea, 0xc8 * _0x4d53ea), _0x5285c5['bezierCurveTo'](126.5 * _0x4d53ea, 189.5 * _0x4d53ea, 126.5 * _0x4d53ea, 189.5 * _0x4d53ea, 0x85 * _0x4d53ea, 0xb3 * _0x4d53ea), _0x5285c5['closePath'](), fill_path(_0x5285c5, _0x5a28c5[0x8]), _0x5285c5['beginPath'](), _0x5285c5['lineCap'] = 'round', _0x5285c5['lineJoin'] = 'round', _0x5285c5['moveTo'](0x85 * _0x4d53ea, 0x8f * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x8b * _0x4d53ea, 151.5 * _0x4d53ea, 0x8b * _0x4d53ea, 151.5 * _0x4d53ea, 0x91 * _0x4d53ea, 0xa0 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x8f * _0x4d53ea, 0xa7 * _0x4d53ea, 0x8c * _0x4d53ea, 0xaa * _0x4d53ea, 0x86 * _0x4d53ea, 0xaa * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x80 * _0x4d53ea, 0xa9 * _0x4d53ea, 0x7c * _0x4d53ea, 0xa7 * _0x4d53ea, 0x7b * _0x4d53ea, 0xa1 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x80 * _0x4d53ea, 0x98 * _0x4d53ea, 0x80 * _0x4d53ea, 0x98 * _0x4d53ea, 0x85 * _0x4d53ea, 0x8f * _0x4d53ea), _0x5285c5['closePath'](), fill_path(_0x5285c5, _0x5a28c5[0x8]), _0x5285c5['beginPath'](), _0x5285c5['lineCap'] = 'round', _0x5285c5['lineJoin'] = 'round', _0x5285c5['moveTo'](0x85 * _0x4d53ea, 0x73 * _0x4d53ea), _0x5285c5['bezierCurveTo'](137.5 * _0x4d53ea, 121.5 * _0x4d53ea, 137.5 * _0x4d53ea, 121.5 * _0x4d53ea, 0x8e * _0x4d53ea, 0x80 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x8d * _0x4d53ea, 0x85 * _0x4d53ea, 0x8a * _0x4d53ea, 0x87 * _0x4d53ea, 0x85 * _0x4d53ea, 0x87 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x81 * _0x4d53ea, 0x87 * _0x4d53ea, 0x7d * _0x4d53ea, 0x84 * _0x4d53ea, 0x7d * _0x4d53ea, 0x81 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x81 * _0x4d53ea, 0x7a * _0x4d53ea, 0x81 * _0x4d53ea, 0x7a * _0x4d53ea, 0x85 * _0x4d53ea, 0x73 * _0x4d53ea), _0x5285c5['closePath'](), fill_path(_0x5285c5, _0x5a28c5[0x8]), _0x5285c5['beginPath'](), _0x5285c5['lineCap'] = 'round', _0x5285c5['lineJoin'] = 'round', _0x5285c5['moveTo'](0x85 * _0x4d53ea, 0x5e * _0x4d53ea), _0x5285c5['bezierCurveTo'](136.5 * _0x4d53ea, 98.5 * _0x4d53ea, 136.5 * _0x4d53ea, 98.5 * _0x4d53ea, 0x8c * _0x4d53ea, 0x67 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x8b * _0x4d53ea, 0x6d * _0x4d53ea, 0x89 * _0x4d53ea, 0x6d * _0x4d53ea, 0x85 * _0x4d53ea, 0x6e * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x7f * _0x4d53ea, 0x6c * _0x4d53ea, 0x81 * _0x4d53ea, 0x6b * _0x4d53ea, 0x7f * _0x4d53ea, 0x69 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x82 * _0x4d53ea, 99.5 * _0x4d53ea, 0x82 * _0x4d53ea, 99.5 * _0x4d53ea, 0x85 * _0x4d53ea, 0x5e * _0x4d53ea), _0x5285c5['closePath'](), fill_path(_0x5285c5, _0x5a28c5[0x8]), _0x5285c5['beginPath'](), _0x5285c5['lineCap'] = 'round', _0x5285c5['lineJoin'] = 'round', _0x5285c5['moveTo'](0x82 * _0x4d53ea, 0x117 * _0x4d53ea), _0x5285c5['bezierCurveTo'](136.5 * _0x4d53ea, 287.5 * _0x4d53ea, 136.5 * _0x4d53ea, 287.5 * _0x4d53ea, 0x8f * _0x4d53ea, 0x128 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x8f * _0x4d53ea, 0x12e * _0x4d53ea, 0x8b * _0x4d53ea, 0x135 * _0x4d53ea, 0x83 * _0x4d53ea, 0x134 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x7b * _0x4d53ea, 0x132 * _0x4d53ea, 0x79 * _0x4d53ea, 0x12f * _0x4d53ea, 0x78 * _0x4d53ea, 0x129 * _0x4d53ea), _0x5285c5['bezierCurveTo'](125.5 * _0x4d53ea, 288.5 * _0x4d53ea, 125.5 * _0x4d53ea, 288.5 * _0x4d53ea, 0x83 * _0x4d53ea, 0x118 * _0x4d53ea), _0x5285c5['closePath'](), fill_path(_0x5285c5, _0x5a28c5[0x8]), _0x5285c5['beginPath'](), _0x5285c5['lineCap'] = 'round', _0x5285c5['lineJoin'] = 'round', _0x5285c5['moveTo'](0x93 * _0x4d53ea, 0x12f * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x97 * _0x4d53ea, 0x137 * _0x4d53ea, 0x97 * _0x4d53ea, 0x13f * _0x4d53ea, 0x93 * _0x4d53ea, 0x141 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x8a * _0x4d53ea, 0x140 * _0x4d53ea, 0x91 * _0x4d53ea, 0x134 * _0x4d53ea, 0x93 * _0x4d53ea, 0x12f * _0x4d53ea), _0x5285c5['closePath'](), fill_path(_0x5285c5, _0x5a28c5[0x8]), _0x5285c5['beginPath'](), _0x5285c5['lineCap'] = 'round', _0x5285c5['lineJoin'] = 'round', _0x5285c5['moveTo'](0x73 * _0x4d53ea, 0x12f * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x73 * _0x4d53ea, 0x138 * _0x4d53ea, 0x76 * _0x4d53ea, 0x13f * _0x4d53ea, 0x73 * _0x4d53ea, 0x13f * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x70 * _0x4d53ea, 0x144 * _0x4d53ea, 0x6d * _0x4d53ea, 0x13e * _0x4d53ea, 0x6d * _0x4d53ea, 0x13a * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x6d * _0x4d53ea, 0x134 * _0x4d53ea, 0x70 * _0x4d53ea, 0x12f * _0x4d53ea, 0x73 * _0x4d53ea, 0x12f * _0x4d53ea), _0x5285c5['closePath'](), fill_path(_0x5285c5, _0x5a28c5[0x8]), _0x5285c5['beginPath'](), _0x5285c5['lineCap'] = 'round', _0x5285c5['lineJoin'] = 'round', _0x5285c5['moveTo'](0x59 * _0x4d53ea, 0x118 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x53 * _0x4d53ea, 0x117 * _0x4d53ea, 0x50 * _0x4d53ea, 0x119 * _0x4d53ea, 0x51 * _0x4d53ea, 0x11e * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x53 * _0x4d53ea, 0x122 * _0x4d53ea, 0x54 * _0x4d53ea, 0x122 * _0x4d53ea, 0x57 * _0x4d53ea, 0x11e * _0x4d53ea), _0x5285c5['closePath'](), fill_path(_0x5285c5, _0x5a28c5[0x8]), _0x5285c5['beginPath'](), _0x5285c5['lineCap'] = 'round', _0x5285c5['lineJoin'] = 'round', _0x5285c5['moveTo'](0x5e * _0x4d53ea, 0x122 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x5d * _0x4d53ea, 0x126 * _0x4d53ea, 0x5a * _0x4d53ea, 0x12f * _0x4d53ea, 0x56 * _0x4d53ea, 0x12a * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x54 * _0x4d53ea, 0x127 * _0x4d53ea, 0x54 * _0x4d53ea, 0x123 * _0x4d53ea, 0x59 * _0x4d53ea, 0x123 * _0x4d53ea), _0x5285c5['closePath'](), fill_path(_0x5285c5, _0x5a28c5[0x8]), _0x5285c5['beginPath'](), _0x5285c5['lineCap'] = 'round', _0x5285c5['lineJoin'] = 'round', _0x5285c5['moveTo'](0xa3 * _0x4d53ea, 0x127 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0xaf * _0x4d53ea, 0x126 * _0x4d53ea, 0xb0 * _0x4d53ea, 0x128 * _0x4d53ea, 0xaf * _0x4d53ea, 0x12d * _0x4d53ea), _0x5285c5['bezierCurveTo'](0xae * _0x4d53ea, 0x131 * _0x4d53ea, 0xab * _0x4d53ea, 0x131 * _0x4d53ea, 0xa6 * _0x4d53ea, 0x12c * _0x4d53ea), _0x5285c5['closePath'](), fill_path(_0x5285c5, _0x5a28c5[0x8]), _0x5285c5['beginPath'](), _0x5285c5['lineCap'] = 'round', _0x5285c5['lineJoin'] = 'round', _0x5285c5['moveTo'](0xac * _0x4d53ea, 0x11e * _0x4d53ea), _0x5285c5['bezierCurveTo'](0xb4 * _0x4d53ea, 0x11d * _0x4d53ea, 0xb5 * _0x4d53ea, 0x11d * _0x4d53ea, 0xb4 * _0x4d53ea, 0x123 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0xb0 * _0x4d53ea, 0x127 * _0x4d53ea, 0xae * _0x4d53ea, 0x126 * _0x4d53ea, 0xac * _0x4d53ea, 0x11e * _0x4d53ea), _0x5285c5['closePath'](), fill_path(_0x5285c5, _0x5a28c5[0x8]), _0x5285c5['beginPath'](), _0x5285c5['lineCap'] = 'round', _0x5285c5['lineJoin'] = 'round', _0x5285c5['moveTo'](0x73 * _0x4d53ea, 0x25 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x74 * _0x4d53ea, 0x1c * _0x4d53ea, 0x77 * _0x4d53ea, 0x1b * _0x4d53ea, 0x7e * _0x4d53ea, 0x25 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x86 * _0x4d53ea, 0x30 * _0x4d53ea, 0x86 * _0x4d53ea, 0x31 * _0x4d53ea, 0x84 * _0x4d53ea, 0x3b * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x83 * _0x4d53ea, 0x43 * _0x4d53ea, 0x7f * _0x4d53ea, 0x41 * _0x4d53ea, 0x78 * _0x4d53ea, 0x38 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x72 * _0x4d53ea, 0x31 * _0x4d53ea, 0x71 * _0x4d53ea, 0x2b * _0x4d53ea, 0x73 * _0x4d53ea, 0x26 * _0x4d53ea), _0x5285c5['closePath'](), fill_path(_0x5285c5, _0x5a28c5[0x7]), _0x5285c5['beginPath'](), _0x5285c5['lineCap'] = 'round', _0x5285c5['lineJoin'] = 'round', _0x5285c5['moveTo'](0x92 * _0x4d53ea, 0x22 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x98 * _0x4d53ea, 0x1c * _0x4d53ea, 0x9b * _0x4d53ea, 0x1b * _0x4d53ea, 0x9d * _0x4d53ea, 0x27 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x9d * _0x4d53ea, 0x2d * _0x4d53ea, 0x9d * _0x4d53ea, 0x31 * _0x4d53ea, 0x96 * _0x4d53ea, 0x38 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x8d * _0x4d53ea, 0x42 * _0x4d53ea, 0x8a * _0x4d53ea, 0x42 * _0x4d53ea, 0x8a * _0x4d53ea, 0x39 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x89 * _0x4d53ea, 0x32 * _0x4d53ea, 0x89 * _0x4d53ea, 0x2f * _0x4d53ea, 0x8d * _0x4d53ea, 0x2a * _0x4d53ea), _0x5285c5['closePath'](), fill_path(_0x5285c5, _0x5a28c5[0x7]), _0x5285c5['beginPath'](), _0x5285c5['lineCap'] = 'round', _0x5285c5['lineJoin'] = 'round', _0x5285c5['moveTo'](0x8f * _0x4d53ea, 0x45 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x94 * _0x4d53ea, 0x38 * _0x4d53ea, 0x9c * _0x4d53ea, 0x32 * _0x4d53ea, 0x9e * _0x4d53ea, 0x3a * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x9f * _0x4d53ea, 0x40 * _0x4d53ea, 0xa0 * _0x4d53ea, 0x43 * _0x4d53ea, 0x99 * _0x4d53ea, 0x4d * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x94 * _0x4d53ea, 0x53 * _0x4d53ea, 0x91 * _0x4d53ea, 0x54 * _0x4d53ea, 0x8f * _0x4d53ea, 0x4d * _0x4d53ea), _0x5285c5['closePath'](), fill_path(_0x5285c5, _0x5a28c5[0x7]), _0x5285c5['beginPath'](), _0x5285c5['lineCap'] = 'round', _0x5285c5['lineJoin'] = 'round', _0x5285c5['moveTo'](0x95 * _0x4d53ea, 0x5c * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x95 * _0x4d53ea, 0x59 * _0x4d53ea, 0x97 * _0x4d53ea, 0x54 * _0x4d53ea, 0x9c * _0x4d53ea, 0x4f * _0x4d53ea), _0x5285c5['bezierCurveTo'](0xa1 * _0x4d53ea, 0x49 * _0x4d53ea, 0xa3 * _0x4d53ea, 0x4e * _0x4d53ea, 0xa2 * _0x4d53ea, 0x56 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0xa1 * _0x4d53ea, 0x5b * _0x4d53ea, 0x9b * _0x4d53ea, 0x63 * _0x4d53ea, 0x98 * _0x4d53ea, 0x62 * _0x4d53ea), _0x5285c5['closePath'](), fill_path(_0x5285c5, _0x5a28c5[0x7]), _0x5285c5['beginPath'](), _0x5285c5['lineCap'] = 'round', _0x5285c5['lineJoin'] = 'round', _0x5285c5['moveTo'](0x6f * _0x4d53ea, 0x3d * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x72 * _0x4d53ea, 0x33 * _0x4d53ea, 0x75 * _0x4d53ea, 0x33 * _0x4d53ea, 0x7c * _0x4d53ea, 0x40 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x80 * _0x4d53ea, 0x44 * _0x4d53ea, 0x80 * _0x4d53ea, 0x4c * _0x4d53ea, 0x7e * _0x4d53ea, 0x4f * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x7b * _0x4d53ea, 0x54 * _0x4d53ea, 0x7a * _0x4d53ea, 0x52 * _0x4d53ea, 0x73 * _0x4d53ea, 0x4a * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x70 * _0x4d53ea, 0x43 * _0x4d53ea, 0x73 * _0x4d53ea, 0x4a * _0x4d53ea, 0x73 * _0x4d53ea, 0x4a * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x6f * _0x4d53ea, 0x44 * _0x4d53ea, 0x6f * _0x4d53ea, 0x42 * _0x4d53ea, 0x6f * _0x4d53ea, 0x3e * _0x4d53ea), _0x5285c5['closePath'](), fill_path(_0x5285c5, _0x5a28c5[0x7]), _0x5285c5['beginPath'](), _0x5285c5['lineCap'] = 'round', _0x5285c5['lineJoin'] = 'round', _0x5285c5['moveTo'](0x6b * _0x4d53ea, 0x51 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x6c * _0x4d53ea, 0x4a * _0x4d53ea, 0x70 * _0x4d53ea, 0x49 * _0x4d53ea, 0x76 * _0x4d53ea, 0x54 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x7a * _0x4d53ea, 0x58 * _0x4d53ea, 0x7a * _0x4d53ea, 0x5d * _0x4d53ea, 0x79 * _0x4d53ea, 0x62 * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x72 * _0x4d53ea, 0x62 * _0x4d53ea, 0x71 * _0x4d53ea, 0x62 * _0x4d53ea, 0x6d * _0x4d53ea, 0x5a * _0x4d53ea), _0x5285c5['bezierCurveTo'](0x6b * _0x4d53ea, 0x57 * _0x4d53ea, 0x6a * _0x4d53ea, 0x55 * _0x4d53ea, 0x6b * _0x4d53ea, 0x52 * _0x4d53ea), _0x5285c5['closePath'](), fill_path(_0x5285c5, _0x5a28c5[0x7]), _0x3beefc;
}

function create_hurt_dragon(_0xf82550, _0x4c3975) {
    var _0x173737 = document['createElement']('canvas'),
        _0x12cbc6 = _0x173737['getContext']('2d');
    return _0x173737['width'] = 0x10f * _0xf82550, _0x173737['height'] = 0x16e * _0xf82550, _0x12cbc6['beginPath'](), _0x12cbc6['lineCap'] = 'round', _0x12cbc6['lineJoin'] = 'round', _0x12cbc6['moveTo'](0x85 * _0xf82550, 0x63 * _0xf82550), _0x12cbc6['bezierCurveTo'](0xba * _0xf82550, 0x7b * _0xf82550, 0xc7 * _0xf82550, 0x98 * _0xf82550, 0xd1 * _0xf82550, 0xa9 * _0xf82550), _0x12cbc6['bezierCurveTo'](0xe4 * _0xf82550, 0xcd * _0xf82550, 0xe0 * _0xf82550, 0xf5 * _0xf82550, 0xbe * _0xf82550, 0x114 * _0xf82550), _0x12cbc6['bezierCurveTo'](0xa1 * _0xf82550, 0x128 * _0xf82550, 0x63 * _0xf82550, 0x124 * _0xf82550, 0x4f * _0xf82550, 0x112 * _0xf82550), _0x12cbc6['bezierCurveTo'](0x31 * _0xf82550, 0xfd * _0xf82550, 0x2f * _0xf82550, 0xd6 * _0xf82550, 0x32 * _0xf82550, 0xc5 * _0xf82550), _0x12cbc6['bezierCurveTo'](0x3d * _0xf82550, 0x8f * _0xf82550, 0x66 * _0xf82550, 0x71 * _0xf82550, 0x83 * _0xf82550, 0x63 * _0xf82550), _0x12cbc6['closePath'](), fill_path(_0x12cbc6, _0x4c3975[0x0]), _0x12cbc6['beginPath'](), _0x12cbc6['lineCap'] = 'round', _0x12cbc6['lineJoin'] = 'round', _0x12cbc6['moveTo'](0x49 * _0xf82550, 0x10e * _0xf82550), _0x12cbc6['bezierCurveTo'](0x4f * _0xf82550, 0x118 * _0xf82550, 0x4d * _0xf82550, 0x118 * _0xf82550, 0x4e * _0xf82550, 0x11f * _0xf82550), _0x12cbc6['bezierCurveTo'](0x4e * _0xf82550, 0x122 * _0xf82550, 0x53 * _0xf82550, 0x123 * _0xf82550, 0x52 * _0xf82550, 0x12b * _0xf82550), _0x12cbc6['bezierCurveTo'](0x51 * _0xf82550, 0x12d * _0xf82550, 0x57 * _0xf82550, 0x12d * _0xf82550, 0x5c * _0xf82550, 0x13a * _0xf82550), _0x12cbc6['bezierCurveTo'](0x5e * _0xf82550, 0x13f * _0xf82550, 0x64 * _0xf82550, 0x141 * _0xf82550, 0x6b * _0xf82550, 0x140 * _0xf82550), _0x12cbc6['bezierCurveTo'](0x6f * _0xf82550, 0x143 * _0xf82550, 0x72 * _0xf82550, 0x144 * _0xf82550, 0x77 * _0xf82550, 0x140 * _0xf82550), _0x12cbc6['bezierCurveTo'](0x89 * _0xf82550, 0x141 * _0xf82550, 0x92 * _0xf82550, 0x143 * _0xf82550, 0x8b * _0xf82550, 0x140 * _0xf82550), _0x12cbc6['bezierCurveTo'](0x8d * _0xf82550, 0x144 * _0xf82550, 0x96 * _0xf82550, 0x144 * _0xf82550, 0x99 * _0xf82550, 0x140 * _0xf82550), _0x12cbc6['bezierCurveTo'](0xa8 * _0xf82550, 0x13f * _0xf82550, 0xab * _0xf82550, 0x13c * _0xf82550, 0xad * _0xf82550, 0x133 * _0xf82550), _0x12cbc6['bezierCurveTo'](0xb4 * _0xf82550, 0x131 * _0xf82550, 0xb4 * _0xf82550, 0x12d * _0xf82550, 0xb2 * _0xf82550, 0x128 * _0xf82550), _0x12cbc6['bezierCurveTo'](0xb7 * _0xf82550, 0x128 * _0xf82550, 0xb9 * _0xf82550, 0x121 * _0xf82550, 0xbc * _0xf82550, 0x117 * _0xf82550), _0x12cbc6['bezierCurveTo'](0xab * _0xf82550, 0x11e * _0xf82550, 0x95 * _0xf82550, 0x122 * _0xf82550, 0x84 * _0xf82550, 0x121 * _0xf82550), _0x12cbc6['bezierCurveTo'](0x65 * _0xf82550, 0x122 * _0xf82550, 0x56 * _0xf82550, 0x118 * _0xf82550, 0x4a * _0xf82550, 0x10f * _0xf82550), _0x12cbc6['closePath'](), fill_path(_0x12cbc6, _0x4c3975[0x0]), _0x12cbc6['beginPath'](), _0x12cbc6['lineCap'] = 'round', _0x12cbc6['lineJoin'] = 'round', _0x12cbc6['moveTo'](0x4c * _0xf82550, 0xfc * _0xf82550), _0x12cbc6['bezierCurveTo'](0x55 * _0xf82550, 0x126 * _0xf82550, 0x60 * _0xf82550, 0x13a * _0xf82550, 0x67 * _0xf82550, 0x13a * _0xf82550), _0x12cbc6['bezierCurveTo'](0x6a * _0xf82550, 0x13c * _0xf82550, 0x97 * _0xf82550, 0x13a * _0xf82550, 0x9c * _0xf82550, 0x13a * _0xf82550), _0x12cbc6['bezierCurveTo'](0xa9 * _0xf82550, 0x13d * _0xf82550, 0xb6 * _0xf82550, 0x11d * _0xf82550, 0xbf * _0xf82550, 0x100 * _0xf82550), _0x12cbc6['bezierCurveTo'](134.5 * _0xf82550, 0xfe * _0xf82550, 134.5 * _0xf82550, 0xfe * _0xf82550, 0x4e * _0xf82550, 0xfc * _0xf82550), _0x12cbc6['closePath'](), fill_path(_0x12cbc6, _0x4c3975[0x0]), _0x12cbc6['beginPath'](), _0x12cbc6['lineCap'] = 'round', _0x12cbc6['lineJoin'] = 'round', _0x12cbc6['moveTo'](0x54 * _0xf82550, 0x101 * _0xf82550), _0x12cbc6['bezierCurveTo'](0x7a * _0xf82550, 0x111 * _0xf82550, 0x92 * _0xf82550, 0x10c * _0xf82550, 0xb3 * _0xf82550, 0x105 * _0xf82550), _0x12cbc6['bezierCurveTo'](0xbe * _0xf82550, 0x102 * _0xf82550, 0xbb * _0xf82550, 0x10a * _0xf82550, 0xb2 * _0xf82550, 0x110 * _0xf82550), _0x12cbc6['bezierCurveTo'](0xa0 * _0xf82550, 0x11c * _0xf82550, 0x7b * _0xf82550, 0x11a * _0xf82550, 0x64 * _0xf82550, 0x115 * _0xf82550), _0x12cbc6['bezierCurveTo'](0x49 * _0xf82550, 0x104 * _0xf82550, 0x4f * _0xf82550, 0x101 * _0xf82550, 0x54 * _0xf82550, 0x101 * _0xf82550), _0x12cbc6['closePath'](), fill_path(_0x12cbc6, _0x4c3975[0x0]), _0x12cbc6['beginPath'](), _0x12cbc6['lineCap'] = 'round', _0x12cbc6['lineJoin'] = 'round', _0x12cbc6['moveTo'](0x7d * _0xf82550, 0x41 * _0xf82550), _0x12cbc6['bezierCurveTo'](0x85 * _0xf82550, 0x2d * _0xf82550, 0x88 * _0xf82550, 0x2a * _0xf82550, 0x8d * _0xf82550, 0x37 * _0xf82550), _0x12cbc6['bezierCurveTo'](0x97 * _0xf82550, 0x60 * _0xf82550, 0xa4 * _0xf82550, 0x75 * _0xf82550, 0xaf * _0xf82550, 0x86 * _0xf82550), _0x12cbc6['bezierCurveTo'](0xcb * _0xf82550, 0xb5 * _0xf82550, 0xcf * _0xf82550, 0xb6 * _0xf82550, 0xd0 * _0xf82550, 0xd7 * _0xf82550), _0x12cbc6['bezierCurveTo'](0xce * _0xf82550, 0xf0 * _0xf82550, 0xcd * _0xf82550, 0xf6 * _0xf82550, 0xb8 * _0xf82550, 0x102 * _0xf82550), _0x12cbc6['bezierCurveTo'](0xa1 * _0xf82550, 0x10b * _0xf82550, 0x83 * _0xf82550, 0x110 * _0xf82550, 0x56 * _0xf82550, 0x102 * _0xf82550), _0x12cbc6['bezierCurveTo'](0x43 * _0xf82550, 0xfc * _0xf82550, 0x44 * _0xf82550, 0xef * _0xf82550, 0x40 * _0xf82550, 0xd8 * _0xf82550), _0x12cbc6['bezierCurveTo'](0x3e * _0xf82550, 0xc2 * _0xf82550, 0x48 * _0xf82550, 0xa9 * _0xf82550, 0x5c * _0xf82550, 0x8e * _0xf82550), _0x12cbc6['bezierCurveTo'](0x6a * _0xf82550, 0x79 * _0xf82550, 0x72 * _0xf82550, 0x65 * _0xf82550, 0x7d * _0xf82550, 0x41 * _0xf82550), _0x12cbc6['closePath'](), fill_path(_0x12cbc6, _0x4c3975[0x0]), _0x12cbc6['beginPath'](), _0x12cbc6['lineCap'] = 'round', _0x12cbc6['lineJoin'] = 'round', _0x12cbc6['moveTo'](0x73 * _0xf82550, 0x25 * _0xf82550), _0x12cbc6['bezierCurveTo'](0x74 * _0xf82550, 0x1c * _0xf82550, 0x77 * _0xf82550, 0x1b * _0xf82550, 0x7e * _0xf82550, 0x25 * _0xf82550), _0x12cbc6['bezierCurveTo'](0x86 * _0xf82550, 0x30 * _0xf82550, 0x86 * _0xf82550, 0x31 * _0xf82550, 0x84 * _0xf82550, 0x3b * _0xf82550), _0x12cbc6['bezierCurveTo'](0x83 * _0xf82550, 0x43 * _0xf82550, 0x7f * _0xf82550, 0x41 * _0xf82550, 0x78 * _0xf82550, 0x38 * _0xf82550), _0x12cbc6['bezierCurveTo'](0x72 * _0xf82550, 0x31 * _0xf82550, 0x71 * _0xf82550, 0x2b * _0xf82550, 0x73 * _0xf82550, 0x26 * _0xf82550), _0x12cbc6['closePath'](), fill_path(_0x12cbc6, _0x4c3975[0x0]), _0x12cbc6['beginPath'](), _0x12cbc6['lineCap'] = 'round', _0x12cbc6['lineJoin'] = 'round', _0x12cbc6['moveTo'](0x92 * _0xf82550, 0x22 * _0xf82550), _0x12cbc6['bezierCurveTo'](0x98 * _0xf82550, 0x1c * _0xf82550, 0x9b * _0xf82550, 0x1b * _0xf82550, 0x9d * _0xf82550, 0x27 * _0xf82550), _0x12cbc6['bezierCurveTo'](0x9d * _0xf82550, 0x2d * _0xf82550, 0x9d * _0xf82550, 0x31 * _0xf82550, 0x96 * _0xf82550, 0x38 * _0xf82550), _0x12cbc6['bezierCurveTo'](0x8d * _0xf82550, 0x42 * _0xf82550, 0x8a * _0xf82550, 0x42 * _0xf82550, 0x8a * _0xf82550, 0x39 * _0xf82550), _0x12cbc6['bezierCurveTo'](0x89 * _0xf82550, 0x32 * _0xf82550, 0x89 * _0xf82550, 0x2f * _0xf82550, 0x8d * _0xf82550, 0x2a * _0xf82550), _0x12cbc6['closePath'](), fill_path(_0x12cbc6, _0x4c3975[0x0]), _0x12cbc6['beginPath'](), _0x12cbc6['lineCap'] = 'round', _0x12cbc6['lineJoin'] = 'round', _0x12cbc6['moveTo'](0x8f * _0xf82550, 0x45 * _0xf82550), _0x12cbc6['bezierCurveTo'](0x94 * _0xf82550, 0x38 * _0xf82550, 0x9c * _0xf82550, 0x32 * _0xf82550, 0x9e * _0xf82550, 0x3a * _0xf82550), _0x12cbc6['bezierCurveTo'](0x9f * _0xf82550, 0x40 * _0xf82550, 0xa0 * _0xf82550, 0x43 * _0xf82550, 0x99 * _0xf82550, 0x4d * _0xf82550), _0x12cbc6['bezierCurveTo'](0x94 * _0xf82550, 0x53 * _0xf82550, 0x91 * _0xf82550, 0x54 * _0xf82550, 0x8f * _0xf82550, 0x4d * _0xf82550), _0x12cbc6['closePath'](), fill_path(_0x12cbc6, _0x4c3975[0x0]), _0x12cbc6['beginPath'](), _0x12cbc6['lineCap'] = 'round', _0x12cbc6['lineJoin'] = 'round', _0x12cbc6['moveTo'](0x95 * _0xf82550, 0x5c * _0xf82550), _0x12cbc6['bezierCurveTo'](0x95 * _0xf82550, 0x59 * _0xf82550, 0x97 * _0xf82550, 0x54 * _0xf82550, 0x9c * _0xf82550, 0x4f * _0xf82550), _0x12cbc6['bezierCurveTo'](0xa1 * _0xf82550, 0x49 * _0xf82550, 0xa3 * _0xf82550, 0x4e * _0xf82550, 0xa2 * _0xf82550, 0x56 * _0xf82550), _0x12cbc6['bezierCurveTo'](0xa1 * _0xf82550, 0x5b * _0xf82550, 0x9b * _0xf82550, 0x63 * _0xf82550, 0x98 * _0xf82550, 0x62 * _0xf82550), _0x12cbc6['closePath'](), fill_path(_0x12cbc6, _0x4c3975[0x0]), _0x12cbc6['beginPath'](), _0x12cbc6['lineCap'] = 'round', _0x12cbc6['lineJoin'] = 'round', _0x12cbc6['moveTo'](0x6f * _0xf82550, 0x3d * _0xf82550), _0x12cbc6['bezierCurveTo'](0x72 * _0xf82550, 0x33 * _0xf82550, 0x75 * _0xf82550, 0x33 * _0xf82550, 0x7c * _0xf82550, 0x40 * _0xf82550), _0x12cbc6['bezierCurveTo'](0x80 * _0xf82550, 0x44 * _0xf82550, 0x80 * _0xf82550, 0x4c * _0xf82550, 0x7e * _0xf82550, 0x4f * _0xf82550), _0x12cbc6['bezierCurveTo'](0x7b * _0xf82550, 0x54 * _0xf82550, 0x7a * _0xf82550, 0x52 * _0xf82550, 0x73 * _0xf82550, 0x4a * _0xf82550), _0x12cbc6['bezierCurveTo'](0x70 * _0xf82550, 0x43 * _0xf82550, 0x73 * _0xf82550, 0x4a * _0xf82550, 0x73 * _0xf82550, 0x4a * _0xf82550), _0x12cbc6['bezierCurveTo'](0x6f * _0xf82550, 0x44 * _0xf82550, 0x6f * _0xf82550, 0x42 * _0xf82550, 0x6f * _0xf82550, 0x3e * _0xf82550), _0x12cbc6['closePath'](), fill_path(_0x12cbc6, _0x4c3975[0x0]), _0x12cbc6['beginPath'](), _0x12cbc6['lineCap'] = 'round', _0x12cbc6['lineJoin'] = 'round', _0x12cbc6['moveTo'](0x6b * _0xf82550, 0x51 * _0xf82550), _0x12cbc6['bezierCurveTo'](0x6c * _0xf82550, 0x4a * _0xf82550, 0x70 * _0xf82550, 0x49 * _0xf82550, 0x76 * _0xf82550, 0x54 * _0xf82550), _0x12cbc6['bezierCurveTo'](0x7a * _0xf82550, 0x58 * _0xf82550, 0x7a * _0xf82550, 0x5d * _0xf82550, 0x79 * _0xf82550, 0x62 * _0xf82550), _0x12cbc6['bezierCurveTo'](0x72 * _0xf82550, 0x62 * _0xf82550, 0x71 * _0xf82550, 0x62 * _0xf82550, 0x6d * _0xf82550, 0x5a * _0xf82550), _0x12cbc6['bezierCurveTo'](0x6b * _0xf82550, 0x57 * _0xf82550, 0x6a * _0xf82550, 0x55 * _0xf82550, 0x6b * _0xf82550, 0x52 * _0xf82550), _0x12cbc6['closePath'](), fill_path(_0x12cbc6, _0x4c3975[0x0]), _0x173737;
}

function create_wingleft(_0x4a6fb4, _0x4c6a96) {
    var _0x338d00 = document['createElement']('canvas'),
        _0x58d43e = _0x338d00['getContext']('2d');
    return _0x338d00['width'] = 0x55 * _0x4a6fb4, _0x338d00['height'] = 0x91 * _0x4a6fb4, _0x58d43e['translate'](-0x14 * _0x4a6fb4, -0x5f * _0x4a6fb4), _0x58d43e['beginPath'](), _0x58d43e['lineCap'] = 'round', _0x58d43e['lineJoin'] = 'round', _0x58d43e['moveTo'](0x32 * _0x4a6fb4, 0x69 * _0x4a6fb4), _0x58d43e['bezierCurveTo'](0x34 * _0x4a6fb4, 0x77 * _0x4a6fb4, 0x40 * _0x4a6fb4, 0x89 * _0x4a6fb4, 0x47 * _0x4a6fb4, 0x92 * _0x4a6fb4), _0x58d43e['bezierCurveTo'](0x47 * _0x4a6fb4, 0xa1 * _0x4a6fb4, 0x4a * _0x4a6fb4, 0xa9 * _0x4a6fb4, 0x4f * _0x4a6fb4, 0xb3 * _0x4a6fb4), _0x58d43e['bezierCurveTo'](0x44 * _0x4a6fb4, 0xc0 * _0x4a6fb4, 0x46 * _0x4a6fb4, 0xcc * _0x4a6fb4, 0x45 * _0x4a6fb4, 0xd8 * _0x4a6fb4), _0x58d43e['bezierCurveTo'](0x32 * _0x4a6fb4, 189.5 * _0x4a6fb4, 0x32 * _0x4a6fb4, 189.5 * _0x4a6fb4, 0x1f * _0x4a6fb4, 0xa3 * _0x4a6fb4), _0x58d43e['closePath'](), fill_path(_0x58d43e, _0x4c6a96[0x1]), _0x58d43e['beginPath'](), _0x58d43e['lineCap'] = 'round', _0x58d43e['lineJoin'] = 'round', _0x58d43e['moveTo'](0x2c * _0x4a6fb4, 0x6a * _0x4a6fb4), _0x58d43e['bezierCurveTo'](0x31 * _0x4a6fb4, 0x5a * _0x4a6fb4, 0x3a * _0x4a6fb4, 0x68 * _0x4a6fb4, 0x33 * _0x4a6fb4, 0x79 * _0x4a6fb4), _0x58d43e['bezierCurveTo'](0x2d * _0x4a6fb4, 0x8f * _0x4a6fb4, 0x29 * _0x4a6fb4, 0x97 * _0x4a6fb4, 0x25 * _0x4a6fb4, 0xa2 * _0x4a6fb4), _0x58d43e['bezierCurveTo'](0x30 * _0x4a6fb4, 0xb4 * _0x4a6fb4, 0x3a * _0x4a6fb4, 0xbc * _0x4a6fb4, 0x4c * _0x4a6fb4, 0xcd * _0x4a6fb4), _0x58d43e['bezierCurveTo'](0x68 * _0x4a6fb4, 0xd1 * _0x4a6fb4, 0x69 * _0x4a6fb4, 0xe5 * _0x4a6fb4, 0x5c * _0x4a6fb4, 0xeb * _0x4a6fb4), _0x58d43e['bezierCurveTo'](0x4c * _0x4a6fb4, 0xef * _0x4a6fb4, 0x4b * _0x4a6fb4, 0xe8 * _0x4a6fb4, 0x38 * _0x4a6fb4, 0xd5 * _0x4a6fb4), _0x58d43e['bezierCurveTo'](0x1f * _0x4a6fb4, 0xbb * _0x4a6fb4, 0x1c * _0x4a6fb4, 0xb0 * _0x4a6fb4, 0x17 * _0x4a6fb4, 0xa2 * _0x4a6fb4), _0x58d43e['bezierCurveTo'](0x26 * _0x4a6fb4, 0x83 * _0x4a6fb4, 0x28 * _0x4a6fb4, 0x78 * _0x4a6fb4, 0x2c * _0x4a6fb4, 0x6a * _0x4a6fb4), _0x58d43e['closePath'](), fill_path(_0x58d43e, _0x4c6a96[0x2], _0x4c6a96[0x3], 0x4 * _0x4a6fb4), _0x58d43e['beginPath'](), _0x58d43e['lineCap'] = 'round', _0x58d43e['lineJoin'] = 'round', _0x58d43e['moveTo'](0x1e * _0x4a6fb4, 0x9f * _0x4a6fb4), _0x58d43e['bezierCurveTo'](0x2e * _0x4a6fb4, 0x9d * _0x4a6fb4, 0x3b * _0x4a6fb4, 0x98 * _0x4a6fb4, 0x44 * _0x4a6fb4, 0x94 * _0x4a6fb4), _0x58d43e['bezierCurveTo'](0x3f * _0x4a6fb4, 0x9b * _0x4a6fb4, 0x34 * _0x4a6fb4, 0xa0 * _0x4a6fb4, 0x2c * _0x4a6fb4, 0xa4 * _0x4a6fb4), _0x58d43e['bezierCurveTo'](0x3b * _0x4a6fb4, 0xa9 * _0x4a6fb4, 0x42 * _0x4a6fb4, 0xae * _0x4a6fb4, 0x4b * _0x4a6fb4, 0xb2 * _0x4a6fb4), _0x58d43e['bezierCurveTo'](0x3a * _0x4a6fb4, 0xb2 * _0x4a6fb4, 0x31 * _0x4a6fb4, 0xaf * _0x4a6fb4, 0x25 * _0x4a6fb4, 0xae * _0x4a6fb4), _0x58d43e['closePath'](), fill_path(_0x58d43e, _0x4c6a96[0x2]), _0x338d00;
}

function create_hurt_wingleft(_0xe9f56d, _0x4d0d5c) {
    var _0x577b1d = document['createElement']('canvas'),
        _0x47253c = _0x577b1d['getContext']('2d');
    return _0x577b1d['width'] = 0x55 * _0xe9f56d, _0x577b1d['height'] = 0x91 * _0xe9f56d, _0x47253c['translate'](-0x14 * _0xe9f56d, -0x5f * _0xe9f56d), _0x47253c['beginPath'](), _0x47253c['lineCap'] = 'round', _0x47253c['lineJoin'] = 'round', _0x47253c['moveTo'](0x32 * _0xe9f56d, 0x69 * _0xe9f56d), _0x47253c['bezierCurveTo'](0x34 * _0xe9f56d, 0x77 * _0xe9f56d, 0x40 * _0xe9f56d, 0x89 * _0xe9f56d, 0x47 * _0xe9f56d, 0x92 * _0xe9f56d), _0x47253c['bezierCurveTo'](0x47 * _0xe9f56d, 0xa1 * _0xe9f56d, 0x4a * _0xe9f56d, 0xa9 * _0xe9f56d, 0x4f * _0xe9f56d, 0xb3 * _0xe9f56d), _0x47253c['bezierCurveTo'](0x44 * _0xe9f56d, 0xc0 * _0xe9f56d, 0x46 * _0xe9f56d, 0xcc * _0xe9f56d, 0x45 * _0xe9f56d, 0xd8 * _0xe9f56d), _0x47253c['bezierCurveTo'](0x32 * _0xe9f56d, 189.5 * _0xe9f56d, 0x32 * _0xe9f56d, 189.5 * _0xe9f56d, 0x1f * _0xe9f56d, 0xa3 * _0xe9f56d), _0x47253c['closePath'](), fill_path(_0x47253c, _0x4d0d5c), _0x47253c['beginPath'](), _0x47253c['lineCap'] = 'round', _0x47253c['lineJoin'] = 'round', _0x47253c['moveTo'](0x2c * _0xe9f56d, 0x6a * _0xe9f56d), _0x47253c['bezierCurveTo'](0x31 * _0xe9f56d, 0x5a * _0xe9f56d, 0x3a * _0xe9f56d, 0x68 * _0xe9f56d, 0x33 * _0xe9f56d, 0x79 * _0xe9f56d), _0x47253c['bezierCurveTo'](0x2d * _0xe9f56d, 0x8f * _0xe9f56d, 0x29 * _0xe9f56d, 0x97 * _0xe9f56d, 0x25 * _0xe9f56d, 0xa2 * _0xe9f56d), _0x47253c['bezierCurveTo'](0x30 * _0xe9f56d, 0xb4 * _0xe9f56d, 0x3a * _0xe9f56d, 0xbc * _0xe9f56d, 0x4c * _0xe9f56d, 0xcd * _0xe9f56d), _0x47253c['bezierCurveTo'](0x68 * _0xe9f56d, 0xd1 * _0xe9f56d, 0x69 * _0xe9f56d, 0xe5 * _0xe9f56d, 0x5c * _0xe9f56d, 0xeb * _0xe9f56d), _0x47253c['bezierCurveTo'](0x4c * _0xe9f56d, 0xef * _0xe9f56d, 0x4b * _0xe9f56d, 0xe8 * _0xe9f56d, 0x38 * _0xe9f56d, 0xd5 * _0xe9f56d), _0x47253c['bezierCurveTo'](0x1f * _0xe9f56d, 0xbb * _0xe9f56d, 0x1c * _0xe9f56d, 0xb0 * _0xe9f56d, 0x17 * _0xe9f56d, 0xa2 * _0xe9f56d), _0x47253c['bezierCurveTo'](0x26 * _0xe9f56d, 0x83 * _0xe9f56d, 0x28 * _0xe9f56d, 0x78 * _0xe9f56d, 0x2c * _0xe9f56d, 0x6a * _0xe9f56d), _0x47253c['closePath'](), fill_path(_0x47253c, _0x4d0d5c, _0x4d0d5c, 0x4 * _0xe9f56d), _0x47253c['beginPath'](), _0x47253c['lineCap'] = 'round', _0x47253c['lineJoin'] = 'round', _0x47253c['moveTo'](0x1e * _0xe9f56d, 0x9f * _0xe9f56d), _0x47253c['bezierCurveTo'](0x2e * _0xe9f56d, 0x9d * _0xe9f56d, 0x3b * _0xe9f56d, 0x98 * _0xe9f56d, 0x44 * _0xe9f56d, 0x94 * _0xe9f56d), _0x47253c['bezierCurveTo'](0x3f * _0xe9f56d, 0x9b * _0xe9f56d, 0x34 * _0xe9f56d, 0xa0 * _0xe9f56d, 0x2c * _0xe9f56d, 0xa4 * _0xe9f56d), _0x47253c['bezierCurveTo'](0x3b * _0xe9f56d, 0xa9 * _0xe9f56d, 0x42 * _0xe9f56d, 0xae * _0xe9f56d, 0x4b * _0xe9f56d, 0xb2 * _0xe9f56d), _0x47253c['bezierCurveTo'](0x3a * _0xe9f56d, 0xb2 * _0xe9f56d, 0x31 * _0xe9f56d, 0xaf * _0xe9f56d, 0x25 * _0xe9f56d, 0xae * _0xe9f56d), _0x47253c['closePath'](), fill_path(_0x47253c, _0x4d0d5c), _0x577b1d;
}

function create_wingright(_0x5f1d42, _0x5e943e) {
    var _0x55f654 = document['createElement']('canvas'),
        _0x262e6c = _0x55f654['getContext']('2d');
    return _0x55f654['width'] = 0x55 * _0x5f1d42, _0x55f654['height'] = 0x91 * _0x5f1d42, _0x262e6c['translate'](-0xa5 * _0x5f1d42, -0x5f * _0x5f1d42), _0x262e6c['beginPath'](), _0x262e6c['lineCap'] = 'round', _0x262e6c['lineJoin'] = 'round', _0x262e6c['moveTo'](0xd9 * _0x5f1d42, 0x67 * _0x5f1d42), _0x262e6c['bezierCurveTo'](0xd1 * _0x5f1d42, 0x81 * _0x5f1d42, 0xcb * _0x5f1d42, 0x89 * _0x5f1d42, 0xc3 * _0x5f1d42, 0x92 * _0x5f1d42), _0x262e6c['bezierCurveTo'](0xc3 * _0x5f1d42, 0x9f * _0x5f1d42, 0xc2 * _0x5f1d42, 0xa7 * _0x5f1d42, 0xbd * _0x5f1d42, 0xb2 * _0x5f1d42), _0x262e6c['bezierCurveTo'](0xc1 * _0x5f1d42, 0xba * _0x5f1d42, 0xc4 * _0x5f1d42, 0xc3 * _0x5f1d42, 0xc6 * _0x5f1d42, 0xd8 * _0x5f1d42), _0x262e6c['bezierCurveTo'](217.5 * _0x5f1d42, 189.5 * _0x5f1d42, 217.5 * _0x5f1d42, 189.5 * _0x5f1d42, 0xed * _0x5f1d42, 0xa3 * _0x5f1d42), _0x262e6c['closePath'](), fill_path(_0x262e6c, _0x5e943e[0x1]), _0x262e6c['beginPath'](), _0x262e6c['lineCap'] = 'round', _0x262e6c['lineJoin'] = 'round', _0x262e6c['moveTo'](0xe7 * _0x5f1d42, 0xa3 * _0x5f1d42), _0x262e6c['bezierCurveTo'](0xdd * _0x5f1d42, 0x8b * _0x5f1d42, 0xda * _0x5f1d42, 0x80 * _0x5f1d42, 0xd7 * _0x5f1d42, 0x72 * _0x5f1d42), _0x262e6c['bezierCurveTo'](0xd5 * _0x5f1d42, 0x66 * _0x5f1d42, 0xdc * _0x5f1d42, 0x5c * _0x5f1d42, 0xde * _0x5f1d42, 0x6b * _0x5f1d42), _0x262e6c['bezierCurveTo'](0xe0 * _0x5f1d42, 0x76 * _0x5f1d42, 0xe9 * _0x5f1d42, 0x8a * _0x5f1d42, 0xf4 * _0x5f1d42, 0xa1 * _0x5f1d42), _0x262e6c['bezierCurveTo'](0xeb * _0x5f1d42, 0xbc * _0x5f1d42, 0xe0 * _0x5f1d42, 0xc6 * _0x5f1d42, 0xcc * _0x5f1d42, 0xdd * _0x5f1d42), _0x262e6c['bezierCurveTo'](0xbe * _0x5f1d42, 0xe9 * _0x5f1d42, 0xbe * _0x5f1d42, 0xeb * _0x5f1d42, 0xb4 * _0x5f1d42, 0xeb * _0x5f1d42), _0x262e6c['bezierCurveTo'](0xa7 * _0x5f1d42, 0xeb * _0x5f1d42, 0xa4 * _0x5f1d42, 0xd8 * _0x5f1d42, 0xaf * _0x5f1d42, 0xd3 * _0x5f1d42), _0x262e6c['bezierCurveTo'](0xb0 * _0x5f1d42, 0xd0 * _0x5f1d42, 0xb5 * _0x5f1d42, 0xcf * _0x5f1d42, 0xbf * _0x5f1d42, 0xcd * _0x5f1d42), _0x262e6c['bezierCurveTo'](0xd5 * _0x5f1d42, 0xba * _0x5f1d42, 0xda * _0x5f1d42, 0xb4 * _0x5f1d42, 0xe6 * _0x5f1d42, 0xa3 * _0x5f1d42), _0x262e6c['closePath'](), fill_path(_0x262e6c, _0x5e943e[0x2], _0x5e943e[0x3], 0x4 * _0x5f1d42), _0x262e6c['beginPath'](), _0x262e6c['lineCap'] = 'round', _0x262e6c['lineJoin'] = 'round', _0x262e6c['moveTo'](0xea * _0x5f1d42, 0x9a * _0x5f1d42), _0x262e6c['bezierCurveTo'](0xe3 * _0x5f1d42, 0x9c * _0x5f1d42, 0xde * _0x5f1d42, 0x9c * _0x5f1d42, 0xc7 * _0x5f1d42, 0x94 * _0x5f1d42), _0x262e6c['bezierCurveTo'](0xc9 * _0x5f1d42, 0x97 * _0x5f1d42, 0xd8 * _0x5f1d42, 0x9f * _0x5f1d42, 0xe0 * _0x5f1d42, 0xa2 * _0x5f1d42), _0x262e6c['bezierCurveTo'](0xd1 * _0x5f1d42, 169.5 * _0x5f1d42, 0xd1 * _0x5f1d42, 169.5 * _0x5f1d42, 0xc2 * _0x5f1d42, 0xb1 * _0x5f1d42), _0x262e6c['bezierCurveTo'](213.5 * _0x5f1d42, 0xaf * _0x5f1d42, 213.5 * _0x5f1d42, 0xaf * _0x5f1d42, 0xe9 * _0x5f1d42, 0xad * _0x5f1d42), _0x262e6c['closePath'](), fill_path(_0x262e6c, _0x5e943e[0x2]), _0x55f654;
}

function create_hurt_wingright(_0x10ffe0, _0x1fc9ec) {
    var _0x4bd07f = document['createElement']('canvas'),
        _0x644822 = _0x4bd07f['getContext']('2d');
    return _0x4bd07f['width'] = 0x55 * _0x10ffe0, _0x4bd07f['height'] = 0x91 * _0x10ffe0, _0x644822['translate'](-0xa5 * _0x10ffe0, -0x5f * _0x10ffe0), _0x644822['beginPath'](), _0x644822['lineCap'] = 'round', _0x644822['lineJoin'] = 'round', _0x644822['moveTo'](0xd9 * _0x10ffe0, 0x67 * _0x10ffe0), _0x644822['bezierCurveTo'](0xd1 * _0x10ffe0, 0x81 * _0x10ffe0, 0xcb * _0x10ffe0, 0x89 * _0x10ffe0, 0xc3 * _0x10ffe0, 0x92 * _0x10ffe0), _0x644822['bezierCurveTo'](0xc3 * _0x10ffe0, 0x9f * _0x10ffe0, 0xc2 * _0x10ffe0, 0xa7 * _0x10ffe0, 0xbd * _0x10ffe0, 0xb2 * _0x10ffe0), _0x644822['bezierCurveTo'](0xc1 * _0x10ffe0, 0xba * _0x10ffe0, 0xc4 * _0x10ffe0, 0xc3 * _0x10ffe0, 0xc6 * _0x10ffe0, 0xd8 * _0x10ffe0), _0x644822['bezierCurveTo'](217.5 * _0x10ffe0, 189.5 * _0x10ffe0, 217.5 * _0x10ffe0, 189.5 * _0x10ffe0, 0xed * _0x10ffe0, 0xa3 * _0x10ffe0), _0x644822['closePath'](), fill_path(_0x644822, _0x1fc9ec), _0x644822['beginPath'](), _0x644822['lineCap'] = 'round', _0x644822['lineJoin'] = 'round', _0x644822['moveTo'](0xe7 * _0x10ffe0, 0xa3 * _0x10ffe0), _0x644822['bezierCurveTo'](0xdd * _0x10ffe0, 0x8b * _0x10ffe0, 0xda * _0x10ffe0, 0x80 * _0x10ffe0, 0xd7 * _0x10ffe0, 0x72 * _0x10ffe0), _0x644822['bezierCurveTo'](0xd5 * _0x10ffe0, 0x66 * _0x10ffe0, 0xdc * _0x10ffe0, 0x5c * _0x10ffe0, 0xde * _0x10ffe0, 0x6b * _0x10ffe0), _0x644822['bezierCurveTo'](0xe0 * _0x10ffe0, 0x76 * _0x10ffe0, 0xe9 * _0x10ffe0, 0x8a * _0x10ffe0, 0xf4 * _0x10ffe0, 0xa1 * _0x10ffe0), _0x644822['bezierCurveTo'](0xeb * _0x10ffe0, 0xbc * _0x10ffe0, 0xe0 * _0x10ffe0, 0xc6 * _0x10ffe0, 0xcc * _0x10ffe0, 0xdd * _0x10ffe0), _0x644822['bezierCurveTo'](0xbe * _0x10ffe0, 0xe9 * _0x10ffe0, 0xbe * _0x10ffe0, 0xeb * _0x10ffe0, 0xb4 * _0x10ffe0, 0xeb * _0x10ffe0), _0x644822['bezierCurveTo'](0xa7 * _0x10ffe0, 0xeb * _0x10ffe0, 0xa4 * _0x10ffe0, 0xd8 * _0x10ffe0, 0xaf * _0x10ffe0, 0xd3 * _0x10ffe0), _0x644822['bezierCurveTo'](0xb0 * _0x10ffe0, 0xd0 * _0x10ffe0, 0xb5 * _0x10ffe0, 0xcf * _0x10ffe0, 0xbf * _0x10ffe0, 0xcd * _0x10ffe0), _0x644822['bezierCurveTo'](0xd5 * _0x10ffe0, 0xba * _0x10ffe0, 0xda * _0x10ffe0, 0xb4 * _0x10ffe0, 0xe6 * _0x10ffe0, 0xa3 * _0x10ffe0), _0x644822['closePath'](), fill_path(_0x644822, _0x1fc9ec, _0x1fc9ec, 0x4 * _0x10ffe0), _0x644822['beginPath'](), _0x644822['lineCap'] = 'round', _0x644822['lineJoin'] = 'round', _0x644822['moveTo'](0xea * _0x10ffe0, 0x9a * _0x10ffe0), _0x644822['bezierCurveTo'](0xe3 * _0x10ffe0, 0x9c * _0x10ffe0, 0xde * _0x10ffe0, 0x9c * _0x10ffe0, 0xc7 * _0x10ffe0, 0x94 * _0x10ffe0), _0x644822['bezierCurveTo'](0xc9 * _0x10ffe0, 0x97 * _0x10ffe0, 0xd8 * _0x10ffe0, 0x9f * _0x10ffe0, 0xe0 * _0x10ffe0, 0xa2 * _0x10ffe0), _0x644822['bezierCurveTo'](0xd1 * _0x10ffe0, 169.5 * _0x10ffe0, 0xd1 * _0x10ffe0, 169.5 * _0x10ffe0, 0xc2 * _0x10ffe0, 0xb1 * _0x10ffe0), _0x644822['bezierCurveTo'](213.5 * _0x10ffe0, 0xaf * _0x10ffe0, 213.5 * _0x10ffe0, 0xaf * _0x10ffe0, 0xe9 * _0x10ffe0, 0xad * _0x10ffe0), _0x644822['closePath'](), fill_path(_0x644822, _0x1fc9ec), _0x4bd07f;
}

function create_explorer_hat(_0x3b8118, _0x4a7a66, _0x16faf2) {
    var _0x376de8 = document['createElement']('canvas'),
        _0x1ed7e5 = _0x376de8['getContext']('2d');
    return _0x376de8['width'] = 0xbb * _0x3b8118, _0x376de8['height'] = 0x77 * _0x3b8118, _0x1ed7e5['globalAlpha'] = _0x4a7a66 ? 0.5 : 0x1, _0x1ed7e5['beginPath'](), _0x1ed7e5['lineCap'] = 'round', _0x1ed7e5['lineJoin'] = 'round', _0x1ed7e5['translate'](0x0, 0x3), _0x1ed7e5['moveTo'](0x35 * _0x3b8118, 0x2d * _0x3b8118), _0x1ed7e5['bezierCurveTo'](0x3 * _0x3b8118, 0x3c * _0x3b8118, 0xb * _0x3b8118, 0x48 * _0x3b8118, 0x13 * _0x3b8118, 0x51 * _0x3b8118), _0x1ed7e5['bezierCurveTo'](0x1c * _0x3b8118, 0x52 * _0x3b8118, 0x18 * _0x3b8118, 0x51 * _0x3b8118, 0x1d * _0x3b8118, 0x52 * _0x3b8118), _0x1ed7e5['bezierCurveTo'](0x1a * _0x3b8118, 0x57 * _0x3b8118, 0x1c * _0x3b8118, 0x54 * _0x3b8118, 0x1c * _0x3b8118, 0x57 * _0x3b8118), _0x1ed7e5['bezierCurveTo'](0x3f * _0x3b8118, 0x65 * _0x3b8118, 0x5c * _0x3b8118, 0x64 * _0x3b8118, 0x8a * _0x3b8118, 0x5d * _0x3b8118), _0x1ed7e5['bezierCurveTo'](0xac * _0x3b8118, 0x57 * _0x3b8118, 0xb4 * _0x3b8118, 0x48 * _0x3b8118, 0xa8 * _0x3b8118, 0x3e * _0x3b8118), _0x1ed7e5['bezierCurveTo'](0x9a * _0x3b8118, 0x33 * _0x3b8118, 0x96 * _0x3b8118, 0x32 * _0x3b8118, 0x94 * _0x3b8118, 0x31 * _0x3b8118), _0x1ed7e5['bezierCurveTo'](0x84 * _0x3b8118, 0x2a * _0x3b8118, 0x5a * _0x3b8118, 0x28 * _0x3b8118, 0x37 * _0x3b8118, 0x2d * _0x3b8118), _0x1ed7e5['closePath'](), fill_path(_0x1ed7e5, _0x16faf2[0x5]), _0x1ed7e5['globalAlpha'] = 0x1, _0x1ed7e5['beginPath'](), _0x1ed7e5['lineCap'] = 'round', _0x1ed7e5['lineJoin'] = 'round', _0x1ed7e5['translate'](0x0, -0x3), _0x1ed7e5['moveTo'](0x35 * _0x3b8118, 0x2d * _0x3b8118), _0x1ed7e5['bezierCurveTo'](0x3 * _0x3b8118, 0x3c * _0x3b8118, 0xb * _0x3b8118, 0x48 * _0x3b8118, 0x13 * _0x3b8118, 0x51 * _0x3b8118), _0x1ed7e5['bezierCurveTo'](0x1c * _0x3b8118, 0x52 * _0x3b8118, 0x18 * _0x3b8118, 0x51 * _0x3b8118, 0x1d * _0x3b8118, 0x52 * _0x3b8118), _0x1ed7e5['bezierCurveTo'](0x1a * _0x3b8118, 0x57 * _0x3b8118, 0x1c * _0x3b8118, 0x54 * _0x3b8118, 0x1c * _0x3b8118, 0x57 * _0x3b8118), _0x1ed7e5['bezierCurveTo'](0x3f * _0x3b8118, 0x65 * _0x3b8118, 0x5c * _0x3b8118, 0x64 * _0x3b8118, 0x8a * _0x3b8118, 0x5d * _0x3b8118), _0x1ed7e5['bezierCurveTo'](0xac * _0x3b8118, 0x57 * _0x3b8118, 0xb4 * _0x3b8118, 0x48 * _0x3b8118, 0xa8 * _0x3b8118, 0x3e * _0x3b8118), _0x1ed7e5['bezierCurveTo'](0x9a * _0x3b8118, 0x33 * _0x3b8118, 0x96 * _0x3b8118, 0x32 * _0x3b8118, 0x94 * _0x3b8118, 0x31 * _0x3b8118), _0x1ed7e5['bezierCurveTo'](0x84 * _0x3b8118, 0x2a * _0x3b8118, 0x5a * _0x3b8118, 0x28 * _0x3b8118, 0x37 * _0x3b8118, 0x2d * _0x3b8118), _0x1ed7e5['closePath'](), fill_path(_0x1ed7e5, _0x16faf2[0x0], _0x16faf2[0x1], 0x4 * _0x3b8118), _0x1ed7e5['beginPath'](), _0x1ed7e5['lineCap'] = 'round', _0x1ed7e5['lineJoin'] = 'round', _0x1ed7e5['moveTo'](0x97 * _0x3b8118, 0x3c * _0x3b8118), _0x1ed7e5['bezierCurveTo'](0x8c * _0x3b8118, 0x24 * _0x3b8118, 0x89 * _0x3b8118, 0x20 * _0x3b8118, 0x7c * _0x3b8118, 0x1d * _0x3b8118), _0x1ed7e5['bezierCurveTo'](0x62 * _0x3b8118, 0x16 * _0x3b8118, 0x50 * _0x3b8118, 0x18 * _0x3b8118, 0x3e * _0x3b8118, 0x1c * _0x3b8118), _0x1ed7e5['bezierCurveTo'](0x2a * _0x3b8118, 0x23 * _0x3b8118, 0x26 * _0x3b8118, 0x2e * _0x3b8118, 0x22 * _0x3b8118, 0x3a * _0x3b8118), _0x1ed7e5['bezierCurveTo'](0x35 * _0x3b8118, 0x4a * _0x3b8118, 0x4c * _0x3b8118, 0x4c * _0x3b8118, 0x5b * _0x3b8118, 0x4e * _0x3b8118), _0x1ed7e5['closePath'](), fill_path(_0x1ed7e5, _0x16faf2[0x0], _0x16faf2[0x1], 0x4 * _0x3b8118), _0x1ed7e5['beginPath'](), _0x1ed7e5['lineCap'] = 'round', _0x1ed7e5['lineJoin'] = 'round', _0x1ed7e5['moveTo'](0x25 * _0x3b8118, 0x35 * _0x3b8118), _0x1ed7e5['bezierCurveTo'](0x1e * _0x3b8118, 0x38 * _0x3b8118, 0x1d * _0x3b8118, 0x43 * _0x3b8118, 0x1e * _0x3b8118, 0x44 * _0x3b8118), _0x1ed7e5['bezierCurveTo'](0x5e * _0x3b8118, 0x6c * _0x3b8118, 0x96 * _0x3b8118, 0x4c * _0x3b8118, 0x9b * _0x3b8118, 0x46 * _0x3b8118), _0x1ed7e5['bezierCurveTo'](0x9a * _0x3b8118, 0x3c * _0x3b8118, 0x97 * _0x3b8118, 0x36 * _0x3b8118, 0x95 * _0x3b8118, 0x35 * _0x3b8118), _0x1ed7e5['bezierCurveTo'](0x65 * _0x3b8118, 0x4a * _0x3b8118, 0x42 * _0x3b8118, 0x42 * _0x3b8118, 0x25 * _0x3b8118, 0x35 * _0x3b8118), _0x1ed7e5['closePath'](), fill_path(_0x1ed7e5, _0x16faf2[0x2], _0x16faf2[0x3], 0x4 * _0x3b8118), _0x1ed7e5['beginPath'](), _0x1ed7e5['lineCap'] = 'round', _0x1ed7e5['lineJoin'] = 'round', _0x1ed7e5['moveTo'](0x64 * _0x3b8118, 0x24 * _0x3b8118), _0x1ed7e5['bezierCurveTo'](0x5c * _0x3b8118, 0x19 * _0x3b8118, 0x56 * _0x3b8118, 0x1c * _0x3b8118, 0x52 * _0x3b8118, 0x22 * _0x3b8118), _0x1ed7e5['bezierCurveTo'](0x58 * _0x3b8118, 0x28 * _0x3b8118, 0x5d * _0x3b8118, 0x28 * _0x3b8118, 0x62 * _0x3b8118, 0x24 * _0x3b8118), _0x1ed7e5['closePath'](), fill_path(_0x1ed7e5, _0x16faf2[0x0], _0x16faf2[0x1], 0x4 * _0x3b8118), _0x1ed7e5['beginPath'](), _0x1ed7e5['lineCap'] = 'round', _0x1ed7e5['lineJoin'] = 'round', _0x1ed7e5['moveTo'](0x50 * _0x3b8118, 0x2b * _0x3b8118), _0x1ed7e5['bezierCurveTo'](0x45 * _0x3b8118, 0x2e * _0x3b8118, 0x43 * _0x3b8118, 0x34 * _0x3b8118, 0x45 * _0x3b8118, 0x3a * _0x3b8118), fill_path(_0x1ed7e5, undefined, _0x16faf2[0x1], 0x4 * _0x3b8118), circle(_0x1ed7e5, 0x3a * _0x3b8118, 0x32 * _0x3b8118, 0x5 * _0x3b8118), fill_path(_0x1ed7e5, _0x16faf2[0x4]), circle(_0x1ed7e5, 0x2b * _0x3b8118, 0x41 * _0x3b8118, 0x5 * _0x3b8118), fill_path(_0x1ed7e5, _0x16faf2[0x4]), circle(_0x1ed7e5, 0x3a * _0x3b8118, 0x49 * _0x3b8118, 0x5 * _0x3b8118), fill_path(_0x1ed7e5, _0x16faf2[0x4]), circle(_0x1ed7e5, 0x3a * _0x3b8118, 0x32 * _0x3b8118, 0x2 * _0x3b8118), fill_path(_0x1ed7e5, _0x16faf2[0x5]), circle(_0x1ed7e5, 0x2b * _0x3b8118, 0x41 * _0x3b8118, 0x2 * _0x3b8118), fill_path(_0x1ed7e5, _0x16faf2[0x5]), circle(_0x1ed7e5, 0x3a * _0x3b8118, 0x49 * _0x3b8118, 0x2 * _0x3b8118), fill_path(_0x1ed7e5, _0x16faf2[0x5]), _0x376de8;
}

function create_wooden_helmet(_0x30a509, _0x1431b7, _0x1abb91) {
    var _0x132a28 = document['createElement']('canvas'),
        _0x33b2f2 = _0x132a28['getContext']('2d');
    return _0x132a28['width'] = 0xb4 * _0x30a509, _0x132a28['height'] = 0x78 * _0x30a509, _0x33b2f2['translate'](-0x41 * _0x30a509, -0x23 * _0x30a509), _0x33b2f2['globalAlpha'] = _0x1431b7 ? 0.5 : 0x1, _0x33b2f2['translate'](0x0, 0xa * _0x30a509), _0x33b2f2['save'](), _0x33b2f2['translate'](150.5 * _0x30a509, 63.84375 * _0x30a509), round_rect(_0x33b2f2, -0x43 * _0x30a509, -16.5 * _0x30a509, 0x86 * _0x30a509, 0x21 * _0x30a509, 0x5 * _0x30a509), _0x33b2f2['restore'](), fill_path(_0x33b2f2, _0x1abb91[0x0]), _0x33b2f2['beginPath'](), _0x33b2f2['lineCap'] = 'round', _0x33b2f2['lineJoin'] = 'round', _0x33b2f2['moveTo'](80.5 * _0x30a509, 75.34375 * _0x30a509), _0x33b2f2['bezierCurveTo'](0x53 * _0x30a509, 106.34375 * _0x30a509, 0x53 * _0x30a509, 106.34375 * _0x30a509, 85.5 * _0x30a509, 137.34375 * _0x30a509), _0x33b2f2['bezierCurveTo'](0x5d * _0x30a509, 135.84375 * _0x30a509, 0x5d * _0x30a509, 135.84375 * _0x30a509, 100.5 * _0x30a509, 134.34375 * _0x30a509), _0x33b2f2['bezierCurveTo'](99.5 * _0x30a509, 100.84375 * _0x30a509, 99.5 * _0x30a509, 100.84375 * _0x30a509, 98.5 * _0x30a509, 67.34375 * _0x30a509), _0x33b2f2['closePath'](), fill_path(_0x33b2f2, _0x1abb91[0x0]), _0x33b2f2['beginPath'](), _0x33b2f2['lineCap'] = 'round', _0x33b2f2['lineJoin'] = 'round', _0x33b2f2['moveTo'](206.5 * _0x30a509, 71.34375 * _0x30a509), _0x33b2f2['bezierCurveTo'](203.5 * _0x30a509, 104.34375 * _0x30a509, 203.5 * _0x30a509, 104.34375 * _0x30a509, 200.5 * _0x30a509, 137.34375 * _0x30a509), _0x33b2f2['bezierCurveTo'](208.5 * _0x30a509, 137.34375 * _0x30a509, 208.5 * _0x30a509, 137.34375 * _0x30a509, 216.5 * _0x30a509, 137.34375 * _0x30a509), _0x33b2f2['bezierCurveTo'](0xdb * _0x30a509, 102.84375 * _0x30a509, 0xdb * _0x30a509, 102.84375 * _0x30a509, 221.5 * _0x30a509, 68.34375 * _0x30a509), _0x33b2f2['closePath'](), fill_path(_0x33b2f2, _0x1abb91[0x0]), _0x33b2f2['beginPath'](), _0x33b2f2['lineCap'] = 'round', _0x33b2f2['lineJoin'] = 'round', _0x33b2f2['moveTo'](136.5 * _0x30a509, 75.34375 * _0x30a509), _0x33b2f2['bezierCurveTo'](0x8b * _0x30a509, 94.34375 * _0x30a509, 0x8b * _0x30a509, 94.34375 * _0x30a509, 141.5 * _0x30a509, 113.34375 * _0x30a509), _0x33b2f2['bezierCurveTo'](149.5 * _0x30a509, 115.34375 * _0x30a509, 149.5 * _0x30a509, 115.34375 * _0x30a509, 157.5 * _0x30a509, 117.34375 * _0x30a509), _0x33b2f2['bezierCurveTo'](0xa2 * _0x30a509, 97.34375 * _0x30a509, 0xa2 * _0x30a509, 97.34375 * _0x30a509, 166.5 * _0x30a509, 77.34375 * _0x30a509), _0x33b2f2['closePath'](), fill_path(_0x33b2f2, _0x1abb91[0x0]), _0x33b2f2['save'](), _0x33b2f2['translate'](152.5 * _0x30a509, 80.84375 * _0x30a509), _0x33b2f2['rotate'](3.12), round_rect(_0x33b2f2, -0x49 * _0x30a509, -20.5 * _0x30a509, 0x92 * _0x30a509, 0x29 * _0x30a509, 0x5 * _0x30a509), _0x33b2f2['restore'](), fill_path(_0x33b2f2, _0x1abb91[0x0]), _0x33b2f2['globalAlpha'] = 0x1, _0x33b2f2['translate'](0x0, -0xa * _0x30a509), _0x33b2f2['save'](), _0x33b2f2['translate'](150.5 * _0x30a509, 63.84375 * _0x30a509), round_rect(_0x33b2f2, -0x43 * _0x30a509, -16.5 * _0x30a509, 0x86 * _0x30a509, 0x21 * _0x30a509, 0x5 * _0x30a509), _0x33b2f2['restore'](), fill_path(_0x33b2f2, _0x1abb91[0x1], _0x1abb91[0x2], 0x4 * _0x30a509), _0x33b2f2['beginPath'](), _0x33b2f2['lineCap'] = 'round', _0x33b2f2['lineJoin'] = 'round', _0x33b2f2['moveTo'](80.5 * _0x30a509, 75.34375 * _0x30a509), _0x33b2f2['bezierCurveTo'](0x53 * _0x30a509, 106.34375 * _0x30a509, 0x53 * _0x30a509, 106.34375 * _0x30a509, 85.5 * _0x30a509, 137.34375 * _0x30a509), _0x33b2f2['bezierCurveTo'](0x5d * _0x30a509, 135.84375 * _0x30a509, 0x5d * _0x30a509, 135.84375 * _0x30a509, 100.5 * _0x30a509, 134.34375 * _0x30a509), _0x33b2f2['bezierCurveTo'](99.5 * _0x30a509, 100.84375 * _0x30a509, 99.5 * _0x30a509, 100.84375 * _0x30a509, 98.5 * _0x30a509, 67.34375 * _0x30a509), _0x33b2f2['closePath'](), fill_path(_0x33b2f2, _0x1abb91[0x1], _0x1abb91[0x2], 0x4 * _0x30a509), _0x33b2f2['beginPath'](), _0x33b2f2['lineCap'] = 'round', _0x33b2f2['lineJoin'] = 'round', _0x33b2f2['moveTo'](206.5 * _0x30a509, 71.34375 * _0x30a509), _0x33b2f2['bezierCurveTo'](203.5 * _0x30a509, 104.34375 * _0x30a509, 203.5 * _0x30a509, 104.34375 * _0x30a509, 200.5 * _0x30a509, 137.34375 * _0x30a509), _0x33b2f2['bezierCurveTo'](208.5 * _0x30a509, 137.34375 * _0x30a509, 208.5 * _0x30a509, 137.34375 * _0x30a509, 216.5 * _0x30a509, 137.34375 * _0x30a509), _0x33b2f2['bezierCurveTo'](0xdb * _0x30a509, 102.84375 * _0x30a509, 0xdb * _0x30a509, 102.84375 * _0x30a509, 221.5 * _0x30a509, 68.34375 * _0x30a509), _0x33b2f2['closePath'](), fill_path(_0x33b2f2, _0x1abb91[0x1], _0x1abb91[0x2], 0x4 * _0x30a509), _0x33b2f2['beginPath'](), _0x33b2f2['lineCap'] = 'round', _0x33b2f2['lineJoin'] = 'round', _0x33b2f2['moveTo'](136.5 * _0x30a509, 75.34375 * _0x30a509), _0x33b2f2['bezierCurveTo'](0x8b * _0x30a509, 94.34375 * _0x30a509, 0x8b * _0x30a509, 94.34375 * _0x30a509, 141.5 * _0x30a509, 113.34375 * _0x30a509), _0x33b2f2['bezierCurveTo'](149.5 * _0x30a509, 115.34375 * _0x30a509, 149.5 * _0x30a509, 115.34375 * _0x30a509, 157.5 * _0x30a509, 117.34375 * _0x30a509), _0x33b2f2['bezierCurveTo'](0xa2 * _0x30a509, 97.34375 * _0x30a509, 0xa2 * _0x30a509, 97.34375 * _0x30a509, 166.5 * _0x30a509, 77.34375 * _0x30a509), _0x33b2f2['closePath'](), fill_path(_0x33b2f2, _0x1abb91[0x1], _0x1abb91[0x2], 0x4 * _0x30a509), _0x33b2f2['save'](), _0x33b2f2['translate'](152.5 * _0x30a509, 80.84375 * _0x30a509), _0x33b2f2['rotate'](3.12), round_rect(_0x33b2f2, -0x49 * _0x30a509, -20.5 * _0x30a509, 0x92 * _0x30a509, 0x29 * _0x30a509, 0x5 * _0x30a509), _0x33b2f2['restore'](), fill_path(_0x33b2f2, _0x1abb91[0x1], _0x1abb91[0x2], 0x4 * _0x30a509), _0x33b2f2['beginPath'](), _0x33b2f2['lineCap'] = 'round', _0x33b2f2['lineJoin'] = 'round', _0x33b2f2['moveTo'](83.5 * _0x30a509, 73.34375 * _0x30a509), _0x33b2f2['bezierCurveTo'](93.5 * _0x30a509, 70.34375 * _0x30a509, 105.5 * _0x30a509, 70.34375 * _0x30a509, 124.5 * _0x30a509, 72.34375 * _0x30a509), _0x33b2f2['bezierCurveTo'](132.5 * _0x30a509, 78.34375 * _0x30a509, 162.5 * _0x30a509, 80.34375 * _0x30a509, 176.5 * _0x30a509, 76.34375 * _0x30a509), _0x33b2f2['bezierCurveTo'](194.5 * _0x30a509, 69.34375 * _0x30a509, 192.5 * _0x30a509, 68.34375 * _0x30a509, 199.5 * _0x30a509, 63.34375 * _0x30a509), _0x33b2f2['bezierCurveTo'](204.5 * _0x30a509, 63.34375 * _0x30a509, 204.5 * _0x30a509, 63.34375 * _0x30a509, 209.5 * _0x30a509, 63.34375 * _0x30a509), _0x33b2f2['bezierCurveTo'](153.5 * _0x30a509, 82.34375 * _0x30a509, 157.5 * _0x30a509, 85.34375 * _0x30a509, 209.5 * _0x30a509, 63.34375 * _0x30a509), _0x33b2f2['bezierCurveTo'](194.5 * _0x30a509, 88.34375 * _0x30a509, 162.5 * _0x30a509, 87.34375 * _0x30a509, 149.5 * _0x30a509, 88.34375 * _0x30a509), _0x33b2f2['bezierCurveTo'](129.5 * _0x30a509, 81.34375 * _0x30a509, 103.5 * _0x30a509, 75.34375 * _0x30a509, 83.5 * _0x30a509, 82.34375 * _0x30a509), _0x33b2f2['closePath'](), fill_path(_0x33b2f2, _0x1abb91[0x3]), _0x33b2f2['beginPath'](), _0x33b2f2['lineCap'] = 'round', _0x33b2f2['lineJoin'] = 'round', _0x33b2f2['moveTo'](137.5 * _0x30a509, 65.34375 * _0x30a509), _0x33b2f2['bezierCurveTo'](150.5 * _0x30a509, 76.34375 * _0x30a509, 170.5 * _0x30a509, 71.34375 * _0x30a509, 174.5 * _0x30a509, 65.34375 * _0x30a509), _0x33b2f2['closePath'](), fill_path(_0x33b2f2, _0x1abb91[0x3]), _0x33b2f2['beginPath'](), _0x33b2f2['lineCap'] = 'round', _0x33b2f2['lineJoin'] = 'round', _0x33b2f2['moveTo'](221.5 * _0x30a509, 85.34375 * _0x30a509), _0x33b2f2['bezierCurveTo'](211.5 * _0x30a509, 79.34375 * _0x30a509, 191.5 * _0x30a509, 88.34375 * _0x30a509, 181.5 * _0x30a509, 96.34375 * _0x30a509), _0x33b2f2['bezierCurveTo'](201.5 * _0x30a509, 96.34375 * _0x30a509, 201.5 * _0x30a509, 96.34375 * _0x30a509, 221.5 * _0x30a509, 96.34375 * _0x30a509), _0x33b2f2['closePath'](), fill_path(_0x33b2f2, _0x1abb91[0x3]), _0x33b2f2['beginPath'](), _0x33b2f2['lineCap'] = 'round', _0x33b2f2['lineJoin'] = 'round', _0x33b2f2['moveTo'](84.5 * _0x30a509, 89.34375 * _0x30a509), _0x33b2f2['bezierCurveTo'](102.5 * _0x30a509, 87.34375 * _0x30a509, 112.5 * _0x30a509, 88.34375 * _0x30a509, 119.5 * _0x30a509, 97.34375 * _0x30a509), _0x33b2f2['bezierCurveTo'](0x66 * _0x30a509, 98.34375 * _0x30a509, 0x66 * _0x30a509, 98.34375 * _0x30a509, 84.5 * _0x30a509, 99.34375 * _0x30a509), _0x33b2f2['closePath'](), fill_path(_0x33b2f2, _0x1abb91[0x3]), _0x33b2f2['beginPath'](), _0x33b2f2['lineCap'] = 'round', _0x33b2f2['lineJoin'] = 'round', _0x33b2f2['moveTo'](208.5 * _0x30a509, 104.34375 * _0x30a509), _0x33b2f2['bezierCurveTo'](208.5 * _0x30a509, 110.34375 * _0x30a509, 208.5 * _0x30a509, 110.34375 * _0x30a509, 208.5 * _0x30a509, 116.34375 * _0x30a509), _0x33b2f2['bezierCurveTo'](211.5 * _0x30a509, 110.34375 * _0x30a509, 211.5 * _0x30a509, 110.34375 * _0x30a509, 214.5 * _0x30a509, 104.34375 * _0x30a509), _0x33b2f2['closePath'](), fill_path(_0x33b2f2, _0x1abb91[0x3]), _0x33b2f2['beginPath'](), _0x33b2f2['lineCap'] = 'round', _0x33b2f2['lineJoin'] = 'round', _0x33b2f2['moveTo'](87.5 * _0x30a509, 117.34375 * _0x30a509), _0x33b2f2['bezierCurveTo'](0x5c * _0x30a509, 118.84375 * _0x30a509, 0x5c * _0x30a509, 118.84375 * _0x30a509, 96.5 * _0x30a509, 120.34375 * _0x30a509), _0x33b2f2['bezierCurveTo'](0x5d * _0x30a509, 123.84375 * _0x30a509, 0x5d * _0x30a509, 123.84375 * _0x30a509, 89.5 * _0x30a509, 127.34375 * _0x30a509), _0x33b2f2['closePath'](), fill_path(_0x33b2f2, _0x1abb91[0x3]), _0x33b2f2['beginPath'](), _0x33b2f2['lineCap'] = 'round', _0x33b2f2['lineJoin'] = 'round', _0x33b2f2['moveTo'](107.5 * _0x30a509, 51.34375 * _0x30a509), _0x33b2f2['bezierCurveTo'](122.5 * _0x30a509, 54.34375 * _0x30a509, 122.5 * _0x30a509, 54.34375 * _0x30a509, 137.5 * _0x30a509, 57.34375 * _0x30a509), _0x33b2f2['bezierCurveTo'](0x76 * _0x30a509, 57.34375 * _0x30a509, 0x76 * _0x30a509, 57.34375 * _0x30a509, 98.5 * _0x30a509, 57.34375 * _0x30a509), _0x33b2f2['bezierCurveTo'](94.5 * _0x30a509, 54.84375 * _0x30a509, 94.5 * _0x30a509, 54.84375 * _0x30a509, 90.5 * _0x30a509, 52.34375 * _0x30a509), _0x33b2f2['closePath'](), fill_path(_0x33b2f2, _0x1abb91[0x3]), _0x33b2f2['beginPath'](), _0x33b2f2['lineCap'] = 'round', _0x33b2f2['lineJoin'] = 'round', _0x33b2f2['moveTo'](170.5 * _0x30a509, 52.34375 * _0x30a509), _0x33b2f2['bezierCurveTo'](179.5 * _0x30a509, 51.84375 * _0x30a509, 179.5 * _0x30a509, 51.84375 * _0x30a509, 188.5 * _0x30a509, 51.34375 * _0x30a509), _0x33b2f2['bezierCurveTo'](187.5 * _0x30a509, 53.84375 * _0x30a509, 187.5 * _0x30a509, 53.84375 * _0x30a509, 186.5 * _0x30a509, 56.34375 * _0x30a509), _0x33b2f2['bezierCurveTo'](0xb1 * _0x30a509, 56.34375 * _0x30a509, 0xb1 * _0x30a509, 56.34375 * _0x30a509, 167.5 * _0x30a509, 56.34375 * _0x30a509), _0x33b2f2['closePath'](), fill_path(_0x33b2f2, _0x1abb91[0x3]), _0x33b2f2['beginPath'](), _0x33b2f2['lineCap'] = 'round', _0x33b2f2['lineJoin'] = 'round', _0x33b2f2['moveTo'](80.5 * _0x30a509, 69.34375 * _0x30a509), _0x33b2f2['bezierCurveTo'](86.5 * _0x30a509, 70.34375 * _0x30a509, 86.5 * _0x30a509, 70.34375 * _0x30a509, 92.5 * _0x30a509, 71.34375 * _0x30a509), _0x33b2f2['bezierCurveTo'](0x56 * _0x30a509, 73.34375 * _0x30a509, 0x56 * _0x30a509, 73.34375 * _0x30a509, 79.5 * _0x30a509, 75.34375 * _0x30a509), _0x33b2f2['closePath'](), fill_path(_0x33b2f2, _0x1abb91[0x2]), _0x33b2f2['beginPath'](), _0x33b2f2['lineCap'] = 'round', _0x33b2f2['lineJoin'] = 'round', _0x33b2f2['moveTo'](222.5 * _0x30a509, 75.34375 * _0x30a509), _0x33b2f2['bezierCurveTo'](214.5 * _0x30a509, 76.34375 * _0x30a509, 214.5 * _0x30a509, 76.34375 * _0x30a509, 206.5 * _0x30a509, 77.34375 * _0x30a509), _0x33b2f2['bezierCurveTo'](216.5 * _0x30a509, 79.34375 * _0x30a509, 216.5 * _0x30a509, 79.34375 * _0x30a509, 226.5 * _0x30a509, 81.34375 * _0x30a509), _0x33b2f2['closePath'](), fill_path(_0x33b2f2, _0x1abb91[0x2]), _0x33b2f2['beginPath'](), _0x33b2f2['lineCap'] = 'round', _0x33b2f2['lineJoin'] = 'round', _0x33b2f2['moveTo'](116.5 * _0x30a509, 100.34375 * _0x30a509), _0x33b2f2['bezierCurveTo'](0x80 * _0x30a509, 97.34375 * _0x30a509, 0x80 * _0x30a509, 97.34375 * _0x30a509, 139.5 * _0x30a509, 94.34375 * _0x30a509), _0x33b2f2['bezierCurveTo'](0x8c * _0x30a509, 96.84375 * _0x30a509, 0x8c * _0x30a509, 96.84375 * _0x30a509, 140.5 * _0x30a509, 99.34375 * _0x30a509), _0x33b2f2['closePath'](), fill_path(_0x33b2f2, _0x1abb91[0x2]), _0x33b2f2['beginPath'](), _0x33b2f2['lineCap'] = 'round', _0x33b2f2['lineJoin'] = 'round', _0x33b2f2['moveTo'](112.5 * _0x30a509, 48.34375 * _0x30a509), _0x33b2f2['bezierCurveTo'](115.5 * _0x30a509, 50.84375 * _0x30a509, 115.5 * _0x30a509, 50.84375 * _0x30a509, 118.5 * _0x30a509, 53.34375 * _0x30a509), _0x33b2f2['bezierCurveTo'](0x83 * _0x30a509, 50.84375 * _0x30a509, 0x83 * _0x30a509, 50.84375 * _0x30a509, 143.5 * _0x30a509, 48.34375 * _0x30a509), _0x33b2f2['closePath'](), fill_path(_0x33b2f2, _0x1abb91[0x2]), _0x33b2f2['beginPath'](), _0x33b2f2['lineCap'] = 'round', _0x33b2f2['lineJoin'] = 'round', _0x33b2f2['moveTo'](216.5 * _0x30a509, 109.34375 * _0x30a509), _0x33b2f2['bezierCurveTo'](0xd5 * _0x30a509, 114.84375 * _0x30a509, 0xd5 * _0x30a509, 114.84375 * _0x30a509, 209.5 * _0x30a509, 120.34375 * _0x30a509), _0x33b2f2['bezierCurveTo'](0xd4 * _0x30a509, 118.84375 * _0x30a509, 0xd4 * _0x30a509, 118.84375 * _0x30a509, 214.5 * _0x30a509, 117.34375 * _0x30a509), _0x33b2f2['closePath'](), fill_path(_0x33b2f2, _0x1abb91[0x2]), _0x33b2f2['beginPath'](), _0x33b2f2['lineCap'] = 'round', _0x33b2f2['lineJoin'] = 'round', _0x33b2f2['moveTo'](86.5 * _0x30a509, 133.34375 * _0x30a509), _0x33b2f2['bezierCurveTo'](0x59 * _0x30a509, 127.34375 * _0x30a509, 0x59 * _0x30a509, 127.34375 * _0x30a509, 91.5 * _0x30a509, 121.34375 * _0x30a509), _0x33b2f2['bezierCurveTo'](92.5 * _0x30a509, 127.34375 * _0x30a509, 92.5 * _0x30a509, 127.34375 * _0x30a509, 93.5 * _0x30a509, 133.34375 * _0x30a509), _0x33b2f2['closePath'](), fill_path(_0x33b2f2, _0x1abb91[0x2]), _0x132a28;
}

function create_viking_hat(_0x25859a, _0x2f8dff, _0x4f4593) {
    var _0x125618 = document['createElement']('canvas'),
        _0x238232 = _0x125618['getContext']('2d');
    return _0x125618['width'] = 0xaf * _0x25859a, _0x125618['height'] = 0x6a * _0x25859a, _0x238232['globalAlpha'] = _0x2f8dff ? 0.5 : 0x1, _0x238232['translate'](0x0, 0x8 * _0x25859a), _0x238232['beginPath'](), _0x238232['lineCap'] = 'round', _0x238232['lineJoin'] = 'round', _0x238232['moveTo'](0x1c * _0x25859a, 0x43 * _0x25859a), _0x238232['bezierCurveTo'](0x37 * _0x25859a, 0x50 * _0x25859a, 0x7e * _0x25859a, 0x4a * _0x25859a, 0x90 * _0x25859a, 0x44 * _0x25859a), _0x238232['bezierCurveTo'](144.5 * _0x25859a, 0x4b * _0x25859a, 144.5 * _0x25859a, 0x4b * _0x25859a, 0x91 * _0x25859a, 0x52 * _0x25859a), _0x238232['bezierCurveTo'](0x72 * _0x25859a, 0x5e * _0x25859a, 0x2f * _0x25859a, 0x5b * _0x25859a, 0x1c * _0x25859a, 0x52 * _0x25859a), _0x238232['closePath'](), fill_path(_0x238232, _0x4f4593[0x0]), _0x238232['globalAlpha'] = 0x1, _0x238232['translate'](0x0, -0x8 * _0x25859a), _0x238232['beginPath'](), _0x238232['lineCap'] = 'round', _0x238232['lineJoin'] = 'round', _0x238232['moveTo'](0x91 * _0x25859a, 0x4b * _0x25859a), _0x238232['bezierCurveTo'](0x8f * _0x25859a, 0x33 * _0x25859a, 0x85 * _0x25859a, 0x1d * _0x25859a, 0x64 * _0x25859a, 0x1b * _0x25859a), _0x238232['bezierCurveTo'](0x34 * _0x25859a, 0x15 * _0x25859a, 0x25 * _0x25859a, 0x25 * _0x25859a, 0x1f * _0x25859a, 0x36 * _0x25859a), _0x238232['bezierCurveTo'](0x17 * _0x25859a, 0x4e * _0x25859a, 0x1c * _0x25859a, 0x4d * _0x25859a, 0x24 * _0x25859a, 0x4f * _0x25859a), _0x238232['bezierCurveTo'](0x50 * _0x25859a, 0x57 * _0x25859a, 0x78 * _0x25859a, 0x51 * _0x25859a, 0x91 * _0x25859a, 0x4c * _0x25859a), _0x238232['closePath'](), fill_path(_0x238232, _0x4f4593[0x1]), _0x238232['beginPath'](), _0x238232['lineCap'] = 'round', _0x238232['lineJoin'] = 'round', _0x238232['moveTo'](0x26 * _0x25859a, 0x2e * _0x25859a), _0x238232['bezierCurveTo'](0x34 * _0x25859a, 0x25 * _0x25859a, 0x45 * _0x25859a, 0x24 * _0x25859a, 0x55 * _0x25859a, 0x24 * _0x25859a), _0x238232['bezierCurveTo'](0x76 * _0x25859a, 0x26 * _0x25859a, 0x81 * _0x25859a, 0x2a * _0x25859a, 0x89 * _0x25859a, 0x30 * _0x25859a), _0x238232['bezierCurveTo'](0x87 * _0x25859a, 0x2d * _0x25859a, 0x87 * _0x25859a, 0x2d * _0x25859a, 0x85 * _0x25859a, 0x2a * _0x25859a), _0x238232['bezierCurveTo'](0x7c * _0x25859a, 0x20 * _0x25859a, 0x74 * _0x25859a, 0x1c * _0x25859a, 0x58 * _0x25859a, 0x19 * _0x25859a), _0x238232['bezierCurveTo'](0x2f * _0x25859a, 0x1c * _0x25859a, 0x28 * _0x25859a, 0x20 * _0x25859a, 0x24 * _0x25859a, 0x2c * _0x25859a), _0x238232['closePath'](), fill_path(_0x238232, _0x4f4593[0x5]), _0x238232['beginPath'](), _0x238232['lineCap'] = 'round', _0x238232['lineJoin'] = 'round', _0x238232['moveTo'](0x91 * _0x25859a, 0x4b * _0x25859a), _0x238232['bezierCurveTo'](0x8f * _0x25859a, 0x33 * _0x25859a, 0x85 * _0x25859a, 0x1d * _0x25859a, 0x64 * _0x25859a, 0x1b * _0x25859a), _0x238232['bezierCurveTo'](0x34 * _0x25859a, 0x15 * _0x25859a, 0x25 * _0x25859a, 0x25 * _0x25859a, 0x1f * _0x25859a, 0x36 * _0x25859a), _0x238232['bezierCurveTo'](0x17 * _0x25859a, 0x4e * _0x25859a, 0x1c * _0x25859a, 0x4d * _0x25859a, 0x24 * _0x25859a, 0x4f * _0x25859a), _0x238232['bezierCurveTo'](0x50 * _0x25859a, 0x57 * _0x25859a, 0x78 * _0x25859a, 0x51 * _0x25859a, 0x91 * _0x25859a, 0x4c * _0x25859a), _0x238232['closePath'](), fill_path(_0x238232, undefined, _0x4f4593[0x2], 0x4 * _0x25859a), _0x238232['translate'](0x0, -0x3 * _0x25859a), _0x238232['beginPath'](), _0x238232['lineCap'] = 'round', _0x238232['lineJoin'] = 'round', _0x238232['moveTo'](0x1c * _0x25859a, 0x43 * _0x25859a), _0x238232['bezierCurveTo'](0x37 * _0x25859a, 0x50 * _0x25859a, 0x7e * _0x25859a, 0x4a * _0x25859a, 0x90 * _0x25859a, 0x44 * _0x25859a), _0x238232['bezierCurveTo'](144.5 * _0x25859a, 0x4b * _0x25859a, 144.5 * _0x25859a, 0x4b * _0x25859a, 0x91 * _0x25859a, 0x52 * _0x25859a), _0x238232['bezierCurveTo'](0x72 * _0x25859a, 0x5e * _0x25859a, 0x2f * _0x25859a, 0x5b * _0x25859a, 0x1c * _0x25859a, 0x52 * _0x25859a), _0x238232['closePath'](), fill_path(_0x238232, _0x4f4593[0xa], _0x4f4593[0xa], 0x4 * _0x25859a), _0x238232['translate'](0x0, 0x3 * _0x25859a), _0x238232['beginPath'](), _0x238232['lineCap'] = 'round', _0x238232['lineJoin'] = 'round', _0x238232['moveTo'](0x83 * _0x25859a, 0x2b * _0x25859a), _0x238232['bezierCurveTo'](0x91 * _0x25859a, 0x28 * _0x25859a, 0x94 * _0x25859a, 0x20 * _0x25859a, 0x93 * _0x25859a, 0x11 * _0x25859a), _0x238232['bezierCurveTo'](0xa6 * _0x25859a, 0x27 * _0x25859a, 0x9b * _0x25859a, 0x3e * _0x25859a, 0x8c * _0x25859a, 0x43 * _0x25859a), _0x238232['bezierCurveTo'](0x80 * _0x25859a, 0x41 * _0x25859a, 0x80 * _0x25859a, 0x34 * _0x25859a, 0x83 * _0x25859a, 0x2d * _0x25859a), _0x238232['closePath'](), fill_path(_0x238232, _0x4f4593[0x3]), _0x238232['beginPath'](), _0x238232['lineCap'] = 'round', _0x238232['lineJoin'] = 'round', _0x238232['moveTo'](0x29 * _0x25859a, 0x2b * _0x25859a), _0x238232['bezierCurveTo'](0x1e * _0x25859a, 0x2a * _0x25859a, 0x18 * _0x25859a, 0x21 * _0x25859a, 0x19 * _0x25859a, 0x11 * _0x25859a), _0x238232['bezierCurveTo'](0x7 * _0x25859a, 0x22 * _0x25859a, 0x11 * _0x25859a, 0x3f * _0x25859a, 0x21 * _0x25859a, 0x42 * _0x25859a), _0x238232['bezierCurveTo'](0x2d * _0x25859a, 0x3b * _0x25859a, 0x2c * _0x25859a, 0x35 * _0x25859a, 0x2a * _0x25859a, 0x2c * _0x25859a), _0x238232['closePath'](), fill_path(_0x238232, _0x4f4593[0x3]), _0x238232['beginPath'](), _0x238232['lineCap'] = 'round', _0x238232['lineJoin'] = 'round', _0x238232['moveTo'](0x18 * _0x25859a, 0x13 * _0x25859a), _0x238232['bezierCurveTo'](0x18 * _0x25859a, 0x23 * _0x25859a, 0x23 * _0x25859a, 0x2a * _0x25859a, 0x2a * _0x25859a, 0x2c * _0x25859a), _0x238232['bezierCurveTo'](0x2b * _0x25859a, 0x33 * _0x25859a, 0x2b * _0x25859a, 0x30 * _0x25859a, 0x2b * _0x25859a, 0x38 * _0x25859a), _0x238232['bezierCurveTo'](0x19 * _0x25859a, 0x2f * _0x25859a, 0x11 * _0x25859a, 0x24 * _0x25859a, 0x17 * _0x25859a, 0x14 * _0x25859a), _0x238232['closePath'](), fill_path(_0x238232, _0x4f4593[0x6]), _0x238232['beginPath'](), _0x238232['lineCap'] = 'round', _0x238232['lineJoin'] = 'round', _0x238232['moveTo'](0x94 * _0x25859a, 0x12 * _0x25859a), _0x238232['bezierCurveTo'](0x9f * _0x25859a, 0x2c * _0x25859a, 0x8b * _0x25859a, 0x34 * _0x25859a, 0x82 * _0x25859a, 0x37 * _0x25859a), _0x238232['bezierCurveTo'](0x81 * _0x25859a, 0x30 * _0x25859a, 0x81 * _0x25859a, 0x2e * _0x25859a, 0x83 * _0x25859a, 0x2b * _0x25859a), _0x238232['bezierCurveTo'](0x90 * _0x25859a, 0x25 * _0x25859a, 0x94 * _0x25859a, 0x23 * _0x25859a, 0x93 * _0x25859a, 0x12 * _0x25859a), _0x238232['closePath'](), fill_path(_0x238232, _0x4f4593[0x6]), _0x238232['beginPath'](), _0x238232['lineCap'] = 'round', _0x238232['lineJoin'] = 'round', _0x238232['moveTo'](0x83 * _0x25859a, 0x2b * _0x25859a), _0x238232['bezierCurveTo'](0x91 * _0x25859a, 0x28 * _0x25859a, 0x94 * _0x25859a, 0x20 * _0x25859a, 0x93 * _0x25859a, 0x11 * _0x25859a), _0x238232['bezierCurveTo'](0xa6 * _0x25859a, 0x27 * _0x25859a, 0x9b * _0x25859a, 0x3e * _0x25859a, 0x8c * _0x25859a, 0x43 * _0x25859a), _0x238232['bezierCurveTo'](0x80 * _0x25859a, 0x41 * _0x25859a, 0x80 * _0x25859a, 0x34 * _0x25859a, 0x83 * _0x25859a, 0x2d * _0x25859a), _0x238232['closePath'](), fill_path(_0x238232, undefined, _0x4f4593[0x4], 0x4 * _0x25859a), _0x238232['beginPath'](), _0x238232['lineCap'] = 'round', _0x238232['lineJoin'] = 'round', _0x238232['moveTo'](0x29 * _0x25859a, 0x2b * _0x25859a), _0x238232['bezierCurveTo'](0x1e * _0x25859a, 0x2a * _0x25859a, 0x18 * _0x25859a, 0x21 * _0x25859a, 0x19 * _0x25859a, 0x11 * _0x25859a), _0x238232['bezierCurveTo'](0x7 * _0x25859a, 0x22 * _0x25859a, 0x11 * _0x25859a, 0x3f * _0x25859a, 0x21 * _0x25859a, 0x42 * _0x25859a), _0x238232['bezierCurveTo'](0x2d * _0x25859a, 0x3b * _0x25859a, 0x2c * _0x25859a, 0x35 * _0x25859a, 0x2a * _0x25859a, 0x2c * _0x25859a), _0x238232['closePath'](), fill_path(_0x238232, undefined, _0x4f4593[0x4], 0x4 * _0x25859a), _0x238232['save'](), _0x238232['translate'](0x57 * _0x25859a, 34.5 * _0x25859a), _0x238232['rotate'](0x0), round_rect(_0x238232, -0x8 * _0x25859a, -10.5 * _0x25859a, 0x10 * _0x25859a, 0x15 * _0x25859a, 0xa * _0x25859a), _0x238232['restore'](), fill_path(_0x238232, _0x4f4593[0x7], _0x4f4593[0x2], 0x4 * _0x25859a), _0x238232['save'](), _0x238232['translate'](0x57 * _0x25859a, 0x39 * _0x25859a), _0x238232['rotate'](0x0), round_rect(_0x238232, -0x8 * _0x25859a, -0x17 * _0x25859a, 0x10 * _0x25859a, 0x2e * _0x25859a, 0xa * _0x25859a), _0x238232['restore'](), fill_path(_0x238232, _0x4f4593[0x8], _0x4f4593[0x2], 0x4 * _0x25859a), circle(_0x238232, 0x57 * _0x25859a, 0x27 * _0x25859a, 4.123105625617661 * _0x25859a), fill_path(_0x238232, _0x4f4593[0x9], _0x4f4593[0x2], 0x4 * _0x25859a), circle(_0x238232, 0x57 * _0x25859a, 0x3c * _0x25859a, 4.242640687119285 * _0x25859a), fill_path(_0x238232, _0x4f4593[0x9], _0x4f4593[0x2], 0x4 * _0x25859a), _0x238232['beginPath'](), _0x238232['lineCap'] = 'round', _0x238232['lineJoin'] = 'round', _0x238232['moveTo'](0x1c * _0x25859a, 0x43 * _0x25859a), _0x238232['bezierCurveTo'](0x37 * _0x25859a, 0x50 * _0x25859a, 0x7e * _0x25859a, 0x4a * _0x25859a, 0x90 * _0x25859a, 0x44 * _0x25859a), _0x238232['bezierCurveTo'](144.5 * _0x25859a, 0x4b * _0x25859a, 144.5 * _0x25859a, 0x4b * _0x25859a, 0x91 * _0x25859a, 0x52 * _0x25859a), _0x238232['bezierCurveTo'](0x72 * _0x25859a, 0x5e * _0x25859a, 0x2f * _0x25859a, 0x5b * _0x25859a, 0x1c * _0x25859a, 0x52 * _0x25859a), _0x238232['closePath'](), fill_path(_0x238232, _0x4f4593[0x8], _0x4f4593[0x2], 0x4 * _0x25859a), _0x238232['beginPath'](), _0x238232['lineCap'] = 'round', _0x238232['lineJoin'] = 'round', _0x238232['moveTo'](0x1b * _0x25859a, 0x45 * _0x25859a), _0x238232['bezierCurveTo'](0xd * _0x25859a, 0x4d * _0x25859a, 0x10 * _0x25859a, 0x4a * _0x25859a, 0x1b * _0x25859a, 0x50 * _0x25859a), _0x238232['closePath'](), fill_path(_0x238232, _0x4f4593[0x9], _0x4f4593[0x2], 0x4 * _0x25859a), _0x238232['beginPath'](), _0x238232['lineCap'] = 'round', _0x238232['lineJoin'] = 'round', _0x238232['moveTo'](0x91 * _0x25859a, 0x46 * _0x25859a), _0x238232['bezierCurveTo'](149.5 * _0x25859a, 0x48 * _0x25859a, 149.5 * _0x25859a, 0x48 * _0x25859a, 0x9a * _0x25859a, 0x4a * _0x25859a), _0x238232['bezierCurveTo'](0x96 * _0x25859a, 0x4d * _0x25859a, 0x96 * _0x25859a, 0x4d * _0x25859a, 0x92 * _0x25859a, 0x50 * _0x25859a), _0x238232['closePath'](), fill_path(_0x238232, _0x4f4593[0x9], _0x4f4593[0x2], 0x4 * _0x25859a), circle(_0x238232, 0x32 * _0x25859a, 0x50 * _0x25859a, 0x5 * _0x25859a), fill_path(_0x238232, _0x4f4593[0x9], _0x4f4593[0x2], 0x4 * _0x25859a), circle(_0x238232, 86.01141357421875 * _0x25859a, 81.76705932617188 * _0x25859a, 0x5 * _0x25859a), fill_path(_0x238232, _0x4f4593[0x9], _0x4f4593[0x2], 0x4 * _0x25859a), circle(_0x238232, 119.01141357421875 * _0x25859a, 80.13069152832031 * _0x25859a, 0x5 * _0x25859a), fill_path(_0x238232, _0x4f4593[0x9], _0x4f4593[0x2], 0x4 * _0x25859a), _0x125618;
}

function create_gold_helmet(_0x660931, _0x107cb1, _0x51aa87) {
    var _0x24daee = document['createElement']('canvas'),
        _0x4abc20 = _0x24daee['getContext']('2d');
    return _0x24daee['width'] = 0x8e * _0x660931, _0x24daee['height'] = 0x76 * _0x660931, _0x4abc20['save'](), _0x4abc20['translate'](70.16665649414062 * _0x660931, 38.20831298828125 * _0x660931), round_rect(_0x4abc20, -58.5 * _0x660931, -27.5 * _0x660931, 0x75 * _0x660931, 0x37 * _0x660931, 0x14 * _0x660931), _0x4abc20['restore'](), fill_path(_0x4abc20, _0x51aa87[0x0], _0x51aa87[0x1], 0x4 * _0x660931), _0x4abc20['save'](), _0x4abc20['translate'](0x46 * _0x660931, 42.70831298828125 * _0x660931), round_rect(_0x4abc20, -0x3d * _0x660931, -0x14 * _0x660931, 0x7a * _0x660931, 0x28 * _0x660931, 0x14 * _0x660931), _0x4abc20['restore'](), fill_path(_0x4abc20, _0x51aa87[0x2], _0x51aa87[0x1], 0x4 * _0x660931), _0x4abc20['beginPath'](), _0x4abc20['lineCap'] = 'round', _0x4abc20['lineJoin'] = 'round', _0x4abc20['moveTo'](0x7b * _0x660931, 70.375 * _0x660931), _0x4abc20['bezierCurveTo'](0x73 * _0x660931, 99.375 * _0x660931, 0x77 * _0x660931, 85.375 * _0x660931, 0x73 * _0x660931, 100.375 * _0x660931), _0x4abc20['bezierCurveTo'](0x70 * _0x660931, 116.375 * _0x660931, 0x75 * _0x660931, 109.375 * _0x660931, 0x83 * _0x660931, 100.375 * _0x660931), _0x4abc20['bezierCurveTo'](0x83 * _0x660931, 83.375 * _0x660931, 0x83 * _0x660931, 83.375 * _0x660931, 0x83 * _0x660931, 66.375 * _0x660931), _0x4abc20['closePath'](), fill_path(_0x4abc20, _0x51aa87[0x2], _0x51aa87[0x1], 0x4 * _0x660931), _0x4abc20['beginPath'](), _0x4abc20['lineCap'] = 'round', _0x4abc20['lineJoin'] = 'round', _0x4abc20['moveTo'](0xb * _0x660931, 68.375 * _0x660931), _0x4abc20['bezierCurveTo'](11.166656494140625 * _0x660931, 84.375 * _0x660931, 0x9 * _0x660931, 99.375 * _0x660931, 0xa * _0x660931, 100.375 * _0x660931), _0x4abc20['bezierCurveTo'](0x23 * _0x660931, 113.375 * _0x660931, 0x1b * _0x660931, 110.375 * _0x660931, 0x19 * _0x660931, 95.375 * _0x660931), _0x4abc20['bezierCurveTo'](0x10 * _0x660931, 68.375 * _0x660931, 0x11 * _0x660931, 69.375 * _0x660931, 0x11 * _0x660931, 68.375 * _0x660931), _0x4abc20['closePath'](), fill_path(_0x4abc20, _0x51aa87[0x2], _0x51aa87[0x1], 0x4 * _0x660931), _0x4abc20['beginPath'](), _0x4abc20['lineCap'] = 'round', _0x4abc20['lineJoin'] = 'round', _0x4abc20['moveTo'](0x2e * _0x660931, 32.375 * _0x660931), _0x4abc20['bezierCurveTo'](0x2b * _0x660931, 8.375 * _0x660931, 0x2d * _0x660931, 7.375 * _0x660931, 0x38 * _0x660931, 6.375 * _0x660931), _0x4abc20['bezierCurveTo'](0x69 * _0x660931, 4.375 * _0x660931, 0x66 * _0x660931, 6.375 * _0x660931, 0x61 * _0x660931, 32.375 * _0x660931), _0x4abc20['bezierCurveTo'](0x8a * _0x660931, 43.375 * _0x660931, 0x85 * _0x660931, 45.375 * _0x660931, 0x85 * _0x660931, 58.375 * _0x660931), _0x4abc20['bezierCurveTo'](0x85 * _0x660931, 85.375 * _0x660931, 0x7d * _0x660931, 74.375 * _0x660931, 0x6f * _0x660931, 70.375 * _0x660931), _0x4abc20['bezierCurveTo'](0x46 * _0x660931, 69.875 * _0x660931, 0x1d * _0x660931, 69.375 * _0x660931, 0x1d * _0x660931, 69.375 * _0x660931), _0x4abc20['bezierCurveTo'](0x7 * _0x660931, 84.375 * _0x660931, 0x7 * _0x660931, 70.375 * _0x660931, 0x7 * _0x660931, 59.375 * _0x660931), _0x4abc20['bezierCurveTo'](0x6 * _0x660931, 28.375 * _0x660931, 0x20 * _0x660931, 39.375 * _0x660931, 0x2c * _0x660931, 32.375 * _0x660931), _0x4abc20['closePath'](), fill_path(_0x4abc20, _0x51aa87[0x2], _0x51aa87[0x1], 0x4 * _0x660931), circle(_0x4abc20, 0x47 * _0x660931, 44.375 * _0x660931, 16.55294535724685 * _0x660931), fill_path(_0x4abc20, _0x51aa87[0x2], _0x51aa87[0x1], 0x4 * _0x660931), circle(_0x4abc20, 0x47 * _0x660931, 43.70831298828125 * _0x660931, 8.94427190999916 * _0x660931), fill_path(_0x4abc20, _0x51aa87[0x2], _0x51aa87[0x1], 0x4 * _0x660931), _0x24daee;
}

function create_diamond_helmet(_0x1e3ae2, _0x4b6e5d, _0xf8eb58) {
    var _0x477124 = document['createElement']('canvas'),
        _0x10f567 = _0x477124['getContext']('2d');
    return _0x477124['width'] = 0x8e * _0x1e3ae2, _0x477124['height'] = 0x76 * _0x1e3ae2, _0x10f567['beginPath'](), _0x10f567['lineCap'] = 'round', _0x10f567['lineJoin'] = 'round', _0x10f567['moveTo'](0x6f * _0x1e3ae2, 27.3671875 * _0x1e3ae2), _0x10f567['bezierCurveTo'](0x80 * _0x1e3ae2, 9.3671875 * _0x1e3ae2, 0x7d * _0x1e3ae2, 13.3671875 * _0x1e3ae2, 0x7e * _0x1e3ae2, 21.3671875 * _0x1e3ae2), _0x10f567['bezierCurveTo'](0x7e * _0x1e3ae2, 33.3671875 * _0x1e3ae2, 0x77 * _0x1e3ae2, 43.3671875 * _0x1e3ae2, 0x76 * _0x1e3ae2, 42.3671875 * _0x1e3ae2), _0x10f567['closePath'](), fill_path(_0x10f567, _0xf8eb58[0x3], _0xf8eb58[0x4], 0x4 * _0x1e3ae2), _0x10f567['beginPath'](), _0x10f567['lineCap'] = 'round', _0x10f567['lineJoin'] = 'round', _0x10f567['moveTo'](0x1f * _0x1e3ae2, 23.3671875 * _0x1e3ae2), _0x10f567['bezierCurveTo'](0x11 * _0x1e3ae2, 15.3671875 * _0x1e3ae2, 0x10 * _0x1e3ae2, 14.3671875 * _0x1e3ae2, 0x11 * _0x1e3ae2, 20.3671875 * _0x1e3ae2), _0x10f567['bezierCurveTo'](0x16 * _0x1e3ae2, 33.3671875 * _0x1e3ae2, 0x14 * _0x1e3ae2, 27.3671875 * _0x1e3ae2, 0x18 * _0x1e3ae2, 34.3671875 * _0x1e3ae2), _0x10f567['closePath'](), fill_path(_0x10f567, _0xf8eb58[0x3], _0xf8eb58[0x4], 0x4 * _0x1e3ae2), _0x10f567['save'](), _0x10f567['translate'](70.5 * _0x1e3ae2, 34.8671875 * _0x1e3ae2), _0x10f567['rotate'](0x0), round_rect(_0x10f567, -49.5 * _0x1e3ae2, -21.5 * _0x1e3ae2, 0x63 * _0x1e3ae2, 0x2b * _0x1e3ae2, 0xf * _0x1e3ae2), _0x10f567['restore'](), fill_path(_0x10f567, _0xf8eb58[0x0], _0xf8eb58[0x1], 0x4 * _0x1e3ae2), _0x10f567['save'](), _0x10f567['translate'](0x47 * _0x1e3ae2, 40.8671875 * _0x1e3ae2), _0x10f567['rotate'](0x0), round_rect(_0x10f567, -0x31 * _0x1e3ae2, -12.5 * _0x1e3ae2, 0x62 * _0x1e3ae2, 0x19 * _0x1e3ae2, 0xf * _0x1e3ae2), _0x10f567['restore'](), fill_path(_0x10f567, _0xf8eb58[0x2], _0xf8eb58[0x1], 0x4 * _0x1e3ae2), _0x10f567['beginPath'](), _0x10f567['lineCap'] = 'round', _0x10f567['lineJoin'] = 'round', _0x10f567['moveTo'](19.800003051757812 * _0x1e3ae2, 75.95625305175781 * _0x1e3ae2), _0x10f567['bezierCurveTo'](19.300003051757812 * _0x1e3ae2, 82.95625305175781 * _0x1e3ae2, 19.300003051757812 * _0x1e3ae2, 82.95625305175781 * _0x1e3ae2, 18.800003051757812 * _0x1e3ae2, 89.95625305175781 * _0x1e3ae2), _0x10f567['bezierCurveTo'](38.80000305175781 * _0x1e3ae2, 115.95625305175781 * _0x1e3ae2, 37.80000305175781 * _0x1e3ae2, 104.95625305175781 * _0x1e3ae2, 31.800003051757812 * _0x1e3ae2, 91.95625305175781 * _0x1e3ae2), _0x10f567['closePath'](), fill_path(_0x10f567, _0xf8eb58[0x2], _0xf8eb58[0x1], 0x4 * _0x1e3ae2), _0x10f567['beginPath'](), _0x10f567['lineCap'] = 'round', _0x10f567['lineJoin'] = 'round', _0x10f567['moveTo'](119.80000305175781 * _0x1e3ae2, 75.95625305175781 * _0x1e3ae2), _0x10f567['bezierCurveTo'](120.80000305175781 * _0x1e3ae2, 82.95625305175781 * _0x1e3ae2, 120.80000305175781 * _0x1e3ae2, 82.95625305175781 * _0x1e3ae2, 121.80000305175781 * _0x1e3ae2, 89.95625305175781 * _0x1e3ae2), _0x10f567['bezierCurveTo'](101.80000305175781 * _0x1e3ae2, 111.95625305175781 * _0x1e3ae2, 99.80000305175781 * _0x1e3ae2, 111.95625305175781 * _0x1e3ae2, 112.80000305175781 * _0x1e3ae2, 81.95625305175781 * _0x1e3ae2), _0x10f567['closePath'](), fill_path(_0x10f567, _0xf8eb58[0x2], _0xf8eb58[0x1], 0x4 * _0x1e3ae2), _0x10f567['beginPath'](), _0x10f567['lineCap'] = 'round', _0x10f567['lineJoin'] = 'round', _0x10f567['moveTo'](17.800003051757812 * _0x1e3ae2, 49.15625 * _0x1e3ae2), _0x10f567['bezierCurveTo'](17.800003051757812 * _0x1e3ae2, 64.15625 * _0x1e3ae2, 17.800003051757812 * _0x1e3ae2, 64.15625 * _0x1e3ae2, 17.800003051757812 * _0x1e3ae2, 79.15625 * _0x1e3ae2), _0x10f567['bezierCurveTo'](23.300003051757812 * _0x1e3ae2, 85.15625 * _0x1e3ae2, 23.300003051757812 * _0x1e3ae2, 85.15625 * _0x1e3ae2, 28.800003051757812 * _0x1e3ae2, 91.15625 * _0x1e3ae2), _0x10f567['bezierCurveTo'](36.80000305175781 * _0x1e3ae2, 96.15625 * _0x1e3ae2, 32.80000305175781 * _0x1e3ae2, 91.15625 * _0x1e3ae2, 28.800003051757812 * _0x1e3ae2, 77.15625 * _0x1e3ae2), _0x10f567['bezierCurveTo'](33.80000305175781 * _0x1e3ae2, 65.15625 * _0x1e3ae2, 33.80000305175781 * _0x1e3ae2, 65.15625 * _0x1e3ae2, 38.80000305175781 * _0x1e3ae2, 53.15625 * _0x1e3ae2), _0x10f567['closePath'](), fill_path(_0x10f567, _0xf8eb58[0x3], _0xf8eb58[0x4], 0x4 * _0x1e3ae2), _0x10f567['beginPath'](), _0x10f567['lineCap'] = 'round', _0x10f567['lineJoin'] = 'round', _0x10f567['moveTo'](123.80000305175781 * _0x1e3ae2, 53.95625305175781 * _0x1e3ae2), _0x10f567['bezierCurveTo'](121.80000305175781 * _0x1e3ae2, 77.95625305175781 * _0x1e3ae2, 121.80000305175781 * _0x1e3ae2, 74.95625305175781 * _0x1e3ae2, 121.80000305175781 * _0x1e3ae2, 78.95625305175781 * _0x1e3ae2), _0x10f567['bezierCurveTo'](115.80000305175781 * _0x1e3ae2, 84.95625305175781 * _0x1e3ae2, 115.80000305175781 * _0x1e3ae2, 84.95625305175781 * _0x1e3ae2, 109.80000305175781 * _0x1e3ae2, 90.95625305175781 * _0x1e3ae2), _0x10f567['bezierCurveTo'](102.80000305175781 * _0x1e3ae2, 93.95625305175781 * _0x1e3ae2, 105.80000305175781 * _0x1e3ae2, 86.95625305175781 * _0x1e3ae2, 110.80000305175781 * _0x1e3ae2, 76.95625305175781 * _0x1e3ae2), _0x10f567['bezierCurveTo'](107.30000305175781 * _0x1e3ae2, 65.45625305175781 * _0x1e3ae2, 103.80000305175781 * _0x1e3ae2, 53.95625305175781 * _0x1e3ae2, 103.80000305175781 * _0x1e3ae2, 53.95625305175781 * _0x1e3ae2), _0x10f567['closePath'](), fill_path(_0x10f567, _0xf8eb58[0x3], _0xf8eb58[0x4], 0x4 * _0x1e3ae2), _0x10f567['beginPath'](), _0x10f567['lineCap'] = 'round', _0x10f567['lineJoin'] = 'round', _0x10f567['moveTo'](0x12 * _0x1e3ae2, 56.3671875 * _0x1e3ae2), _0x10f567['bezierCurveTo'](0x46 * _0x1e3ae2, 56.8671875 * _0x1e3ae2, 0x46 * _0x1e3ae2, 56.8671875 * _0x1e3ae2, 0x7a * _0x1e3ae2, 57.3671875 * _0x1e3ae2), _0x10f567['bezierCurveTo'](0x89 * _0x1e3ae2, 20.3671875 * _0x1e3ae2, 0x89 * _0x1e3ae2, 16.3671875 * _0x1e3ae2, 0x7e * _0x1e3ae2, 22.3671875 * _0x1e3ae2), _0x10f567['bezierCurveTo'](115.5 * _0x1e3ae2, 34.3671875 * _0x1e3ae2, 115.5 * _0x1e3ae2, 34.3671875 * _0x1e3ae2, 0x69 * _0x1e3ae2, 46.3671875 * _0x1e3ae2), _0x10f567['bezierCurveTo'](70.5 * _0x1e3ae2, 46.3671875 * _0x1e3ae2, 70.5 * _0x1e3ae2, 46.3671875 * _0x1e3ae2, 0x24 * _0x1e3ae2, 46.3671875 * _0x1e3ae2), _0x10f567['bezierCurveTo'](0x4 * _0x1e3ae2, 14.3671875 * _0x1e3ae2, 0x7 * _0x1e3ae2, 18.3671875 * _0x1e3ae2, 0x8 * _0x1e3ae2, 27.3671875 * _0x1e3ae2), _0x10f567['bezierCurveTo'](12.5 * _0x1e3ae2, 41.8671875 * _0x1e3ae2, 12.5 * _0x1e3ae2, 41.8671875 * _0x1e3ae2, 0x11 * _0x1e3ae2, 56.3671875 * _0x1e3ae2), _0x10f567['closePath'](), fill_path(_0x10f567, _0xf8eb58[0x3], _0xf8eb58[0x4], 0x4 * _0x1e3ae2), _0x10f567['save'](), _0x10f567['translate'](68.30000305175781 * _0x1e3ae2, 41.45625305175781 * _0x1e3ae2), _0x10f567['rotate'](0.76), round_rect(_0x10f567, -20.5 * _0x1e3ae2, -20.5 * _0x1e3ae2, 0x29 * _0x1e3ae2, 0x29 * _0x1e3ae2, 0xa * _0x1e3ae2), _0x10f567['restore'](), fill_path(_0x10f567, undefined, _0xf8eb58[0x5], 0x4 * _0x1e3ae2), _0x10f567['save'](), _0x10f567['translate'](68.80000305175781 * _0x1e3ae2, 44.45625305175781 * _0x1e3ae2), _0x10f567['rotate'](0.76), round_rect(_0x10f567, -0x15 * _0x1e3ae2, -20.5 * _0x1e3ae2, 0x2a * _0x1e3ae2, 0x29 * _0x1e3ae2, 0xa * _0x1e3ae2), _0x10f567['restore'](), fill_path(_0x10f567, _0xf8eb58[0x3], _0xf8eb58[0x4], 0x4 * _0x1e3ae2), _0x10f567['save'](), _0x10f567['translate'](69.80000305175781 * _0x1e3ae2, 44.556243896484375 * _0x1e3ae2), _0x10f567['rotate'](0.76), round_rect(_0x10f567, -0xa * _0x1e3ae2, -0xa * _0x1e3ae2, 0x14 * _0x1e3ae2, 0x14 * _0x1e3ae2, 0x5 * _0x1e3ae2), _0x10f567['restore'](), fill_path(_0x10f567, _0xf8eb58[0x6], _0xf8eb58[0x7], 0x4 * _0x1e3ae2), _0x477124;
}

function create_amethyst_helmet(_0x24e79f, _0x5e5b9c, _0x1cb9d7) {
    var _0x1dbc0d = document['createElement']('canvas'),
        _0x2bacc4 = _0x1dbc0d['getContext']('2d');
    return _0x1dbc0d['width'] = 0x91 * _0x24e79f, _0x1dbc0d['height'] = 0x78 * _0x24e79f, _0x2bacc4['beginPath'](), _0x2bacc4['scale'](0.6, 0.6), _0x2bacc4['lineCap'] = 'round', _0x2bacc4['lineJoin'] = 'round', _0x2bacc4['translate'](0x12 * _0x24e79f, -0x8 * _0x24e79f), _0x2bacc4['moveTo'](0x65 * _0x24e79f, 0x48 * _0x24e79f), _0x2bacc4['bezierCurveTo'](0x90 * _0x24e79f, 0x45 * _0x24e79f, 0x95 * _0x24e79f, 0x3a * _0x24e79f, 0xa2 * _0x24e79f, 0x31 * _0x24e79f), _0x2bacc4['bezierCurveTo'](0xae * _0x24e79f, 0x1f * _0x24e79f, 0xad * _0x24e79f, 0x26 * _0x24e79f, 0xac * _0x24e79f, 0x2d * _0x24e79f), _0x2bacc4['bezierCurveTo'](0xa8 * _0x24e79f, 0x49 * _0x24e79f, 0x9e * _0x24e79f, 0x4b * _0x24e79f, 0x98 * _0x24e79f, 0x4e * _0x24e79f), _0x2bacc4['bezierCurveTo'](0x6a * _0x24e79f, 0x59 * _0x24e79f, 0x6b * _0x24e79f, 0x5b * _0x24e79f, 0x6b * _0x24e79f, 0x5e * _0x24e79f), _0x2bacc4['bezierCurveTo'](0x6b * _0x24e79f, 0x64 * _0x24e79f, 0x6b * _0x24e79f, 0x6b * _0x24e79f, 0x6b * _0x24e79f, 0x6b * _0x24e79f), _0x2bacc4['bezierCurveTo'](0x63 * _0x24e79f, 0x70 * _0x24e79f, 0x62 * _0x24e79f, 0x6e * _0x24e79f, 0x5d * _0x24e79f, 0x6b * _0x24e79f), _0x2bacc4['bezierCurveTo'](0x5e * _0x24e79f, 0x6b * _0x24e79f, 0x5d * _0x24e79f, 0x6b * _0x24e79f, 0x5d * _0x24e79f, 0x6b * _0x24e79f), _0x2bacc4['bezierCurveTo'](0x5d * _0x24e79f, 0x64 * _0x24e79f, 0x5d * _0x24e79f, 0x64 * _0x24e79f, 0x5c * _0x24e79f, 0x5e * _0x24e79f), _0x2bacc4['bezierCurveTo'](0x5c * _0x24e79f, 0x59 * _0x24e79f, 0x5a * _0x24e79f, 0x5a * _0x24e79f, 0x49 * _0x24e79f, 0x56 * _0x24e79f), _0x2bacc4['bezierCurveTo'](0x2d * _0x24e79f, 0x51 * _0x24e79f, 0x28 * _0x24e79f, 0x4d * _0x24e79f, 0x23 * _0x24e79f, 0x44 * _0x24e79f), _0x2bacc4['bezierCurveTo'](0x17 * _0x24e79f, 0x24 * _0x24e79f, 0x1c * _0x24e79f, 0x22 * _0x24e79f, 0x24 * _0x24e79f, 0x2e * _0x24e79f), _0x2bacc4['bezierCurveTo'](0x2d * _0x24e79f, 0x3a * _0x24e79f, 0x53 * _0x24e79f, 0x48 * _0x24e79f, 0x62 * _0x24e79f, 0x48 * _0x24e79f), _0x2bacc4['closePath'](), fill_path(_0x2bacc4, _0x1cb9d7[0x4], _0x1cb9d7[0x5], 0x4 * _0x24e79f), _0x2bacc4['beginPath'](), _0x2bacc4['scale'](1.1, 1.1), _0x2bacc4['lineCap'] = 'round', _0x2bacc4['lineJoin'] = 'round', _0x2bacc4['translate'](-0x9 * _0x24e79f, 0x4 * _0x24e79f), _0x2bacc4['moveTo'](0x65 * _0x24e79f, 0x48 * _0x24e79f), _0x2bacc4['bezierCurveTo'](0x90 * _0x24e79f, 0x45 * _0x24e79f, 0x95 * _0x24e79f, 0x3a * _0x24e79f, 0xa2 * _0x24e79f, 0x31 * _0x24e79f), _0x2bacc4['bezierCurveTo'](0xae * _0x24e79f, 0x1f * _0x24e79f, 0xad * _0x24e79f, 0x26 * _0x24e79f, 0xac * _0x24e79f, 0x2d * _0x24e79f), _0x2bacc4['bezierCurveTo'](0xa8 * _0x24e79f, 0x49 * _0x24e79f, 0x9e * _0x24e79f, 0x4b * _0x24e79f, 0x98 * _0x24e79f, 0x4e * _0x24e79f), _0x2bacc4['bezierCurveTo'](0x6a * _0x24e79f, 0x59 * _0x24e79f, 0x6b * _0x24e79f, 0x5b * _0x24e79f, 0x6b * _0x24e79f, 0x5e * _0x24e79f), _0x2bacc4['bezierCurveTo'](0x6b * _0x24e79f, 0x64 * _0x24e79f, 0x6b * _0x24e79f, 0x6b * _0x24e79f, 0x6b * _0x24e79f, 0x6b * _0x24e79f), _0x2bacc4['bezierCurveTo'](0x63 * _0x24e79f, 0x70 * _0x24e79f, 0x62 * _0x24e79f, 0x6e * _0x24e79f, 0x5d * _0x24e79f, 0x6b * _0x24e79f), _0x2bacc4['bezierCurveTo'](0x5e * _0x24e79f, 0x6b * _0x24e79f, 0x5d * _0x24e79f, 0x6b * _0x24e79f, 0x5d * _0x24e79f, 0x6b * _0x24e79f), _0x2bacc4['bezierCurveTo'](0x5d * _0x24e79f, 0x64 * _0x24e79f, 0x5d * _0x24e79f, 0x64 * _0x24e79f, 0x5c * _0x24e79f, 0x5e * _0x24e79f), _0x2bacc4['bezierCurveTo'](0x5c * _0x24e79f, 0x59 * _0x24e79f, 0x5a * _0x24e79f, 0x5a * _0x24e79f, 0x49 * _0x24e79f, 0x56 * _0x24e79f), _0x2bacc4['bezierCurveTo'](0x2d * _0x24e79f, 0x51 * _0x24e79f, 0x28 * _0x24e79f, 0x4d * _0x24e79f, 0x23 * _0x24e79f, 0x44 * _0x24e79f), _0x2bacc4['bezierCurveTo'](0x17 * _0x24e79f, 0x24 * _0x24e79f, 0x1c * _0x24e79f, 0x22 * _0x24e79f, 0x24 * _0x24e79f, 0x2e * _0x24e79f), _0x2bacc4['bezierCurveTo'](0x2d * _0x24e79f, 0x3a * _0x24e79f, 0x53 * _0x24e79f, 0x48 * _0x24e79f, 0x62 * _0x24e79f, 0x48 * _0x24e79f), _0x2bacc4['closePath'](), fill_path(_0x2bacc4, _0x1cb9d7[0x4], _0x1cb9d7[0x5], 0x4 * _0x24e79f), _0x2bacc4['scale'](1.1, 1.1), _0x2bacc4['translate'](-0x9 * _0x24e79f, 0x4 * _0x24e79f), _0x2bacc4['save'](), _0x2bacc4['translate'](0x64 * _0x24e79f, 73.06874084472656 * _0x24e79f), _0x2bacc4['rotate'](0x0), round_rect(_0x2bacc4, -0x3d * _0x24e79f, -38.5 * _0x24e79f, 0x7a * _0x24e79f, 0x28 * _0x24e79f, 0x14 * _0x24e79f), _0x2bacc4['restore'](), fill_path(_0x2bacc4, _0x1cb9d7[0x1], _0x1cb9d7[0x2], 0x4 * _0x24e79f), _0x2bacc4['save'](), _0x2bacc4['translate'](0x64 * _0x24e79f, 71.36874389648438 * _0x24e79f), _0x2bacc4['rotate'](0x0), round_rect(_0x2bacc4, -60.5 * _0x24e79f, -0x12 * _0x24e79f, 0x79 * _0x24e79f, 0x1e * _0x24e79f, 0x14 * _0x24e79f), _0x2bacc4['restore'](), fill_path(_0x2bacc4, _0x1cb9d7[0x3], _0x1cb9d7[0x2], 0x4 * _0x24e79f), _0x2bacc4['beginPath'](), _0x2bacc4['lineCap'] = 'round', _0x2bacc4['lineJoin'] = 'round', _0x2bacc4['moveTo'](0x90 * _0x24e79f, 0x50 * _0x24e79f), _0x2bacc4['bezierCurveTo'](0x98 * _0x24e79f, 0x64 * _0x24e79f, 0x98 * _0x24e79f, 0x65 * _0x24e79f, 0x99 * _0x24e79f, 0x66 * _0x24e79f), _0x2bacc4['bezierCurveTo'](0x9f * _0x24e79f, 0x64 * _0x24e79f, 0x9f * _0x24e79f, 0x64 * _0x24e79f, 0xa0 * _0x24e79f, 0x64 * _0x24e79f), _0x2bacc4['bezierCurveTo'](0xa1 * _0x24e79f, 0x54 * _0x24e79f, 0xa1 * _0x24e79f, 0x54 * _0x24e79f, 0xa2 * _0x24e79f, 0x44 * _0x24e79f), _0x2bacc4['closePath'](), fill_path(_0x2bacc4, _0x1cb9d7[0x2]), _0x2bacc4['beginPath'](), _0x2bacc4['lineCap'] = 'round', _0x2bacc4['lineJoin'] = 'round', _0x2bacc4['moveTo'](0x39 * _0x24e79f, 0x4b * _0x24e79f), _0x2bacc4['bezierCurveTo'](0x30 * _0x24e79f, 0x65 * _0x24e79f, 0x35 * _0x24e79f, 0x59 * _0x24e79f, 0x30 * _0x24e79f, 0x66 * _0x24e79f), _0x2bacc4['bezierCurveTo'](0x2c * _0x24e79f, 0x64 * _0x24e79f, 0x2c * _0x24e79f, 0x64 * _0x24e79f, 0x27 * _0x24e79f, 0x61 * _0x24e79f), _0x2bacc4['bezierCurveTo'](0x27 * _0x24e79f, 0x53 * _0x24e79f, 0x27 * _0x24e79f, 0x53 * _0x24e79f, 0x27 * _0x24e79f, 0x45 * _0x24e79f), _0x2bacc4['closePath'](), fill_path(_0x2bacc4, _0x1cb9d7[0x2]), _0x2bacc4['beginPath'](), _0x2bacc4['lineCap'] = 'round', _0x2bacc4['lineJoin'] = 'round', _0x2bacc4['moveTo'](0x65 * _0x24e79f, 0x48 * _0x24e79f), _0x2bacc4['bezierCurveTo'](0x90 * _0x24e79f, 0x45 * _0x24e79f, 0x95 * _0x24e79f, 0x3a * _0x24e79f, 0xa2 * _0x24e79f, 0x31 * _0x24e79f), _0x2bacc4['bezierCurveTo'](0xae * _0x24e79f, 0x1f * _0x24e79f, 0xad * _0x24e79f, 0x26 * _0x24e79f, 0xac * _0x24e79f, 0x2d * _0x24e79f), _0x2bacc4['bezierCurveTo'](0xa8 * _0x24e79f, 0x49 * _0x24e79f, 0x9e * _0x24e79f, 0x4b * _0x24e79f, 0x98 * _0x24e79f, 0x4e * _0x24e79f), _0x2bacc4['bezierCurveTo'](0x6a * _0x24e79f, 0x59 * _0x24e79f, 0x6b * _0x24e79f, 0x5b * _0x24e79f, 0x6b * _0x24e79f, 0x5e * _0x24e79f), _0x2bacc4['bezierCurveTo'](0x6b * _0x24e79f, 0x64 * _0x24e79f, 0x6b * _0x24e79f, 0x6b * _0x24e79f, 0x6b * _0x24e79f, 0x6b * _0x24e79f), _0x2bacc4['bezierCurveTo'](0x63 * _0x24e79f, 0x70 * _0x24e79f, 0x62 * _0x24e79f, 0x6e * _0x24e79f, 0x5d * _0x24e79f, 0x6b * _0x24e79f), _0x2bacc4['bezierCurveTo'](0x5e * _0x24e79f, 0x6b * _0x24e79f, 0x5d * _0x24e79f, 0x6b * _0x24e79f, 0x5d * _0x24e79f, 0x6b * _0x24e79f), _0x2bacc4['bezierCurveTo'](0x5d * _0x24e79f, 0x64 * _0x24e79f, 0x5d * _0x24e79f, 0x64 * _0x24e79f, 0x5c * _0x24e79f, 0x5e * _0x24e79f), _0x2bacc4['bezierCurveTo'](0x5c * _0x24e79f, 0x59 * _0x24e79f, 0x5a * _0x24e79f, 0x5a * _0x24e79f, 0x49 * _0x24e79f, 0x56 * _0x24e79f), _0x2bacc4['bezierCurveTo'](0x2d * _0x24e79f, 0x51 * _0x24e79f, 0x28 * _0x24e79f, 0x4d * _0x24e79f, 0x23 * _0x24e79f, 0x44 * _0x24e79f), _0x2bacc4['bezierCurveTo'](0x17 * _0x24e79f, 0x24 * _0x24e79f, 0x1c * _0x24e79f, 0x22 * _0x24e79f, 0x24 * _0x24e79f, 0x2e * _0x24e79f), _0x2bacc4['bezierCurveTo'](0x2d * _0x24e79f, 0x3a * _0x24e79f, 0x53 * _0x24e79f, 0x48 * _0x24e79f, 0x62 * _0x24e79f, 0x48 * _0x24e79f), _0x2bacc4['closePath'](), fill_path(_0x2bacc4, _0x1cb9d7[0x4], _0x1cb9d7[0x5], 0x4 * _0x24e79f), _0x2bacc4['translate'](0x0, 0x0), _0x2bacc4['beginPath'](), _0x2bacc4['lineCap'] = 'round', _0x2bacc4['lineJoin'] = 'round', _0x2bacc4['moveTo'](115.5 * _0x24e79f, 116.07290649414062 * _0x24e79f), _0x2bacc4['bezierCurveTo'](159.5 * _0x24e79f, 99.07290649414062 * _0x24e79f, 159.5 * _0x24e79f, 98.07290649414062 * _0x24e79f, 159.5 * _0x24e79f, 98.07290649414062 * _0x24e79f), _0x2bacc4['bezierCurveTo'](155.5 * _0x24e79f, 116.07290649414062 * _0x24e79f, 159.5 * _0x24e79f, 116.07290649414062 * _0x24e79f, 159.5 * _0x24e79f, 118.07290649414062 * _0x24e79f), _0x2bacc4['bezierCurveTo'](147.5 * _0x24e79f, 130.07290649414062 * _0x24e79f, 136.5 * _0x24e79f, 132.07290649414062 * _0x24e79f, 115.5 * _0x24e79f, 138.07290649414062 * _0x24e79f), _0x2bacc4['closePath'](), fill_path(_0x2bacc4, _0x1cb9d7[0x3], _0x1cb9d7[0x2], 0x4 * _0x24e79f), _0x2bacc4['beginPath'](), _0x2bacc4['lineCap'] = 'round', _0x2bacc4['lineJoin'] = 'round', _0x2bacc4['moveTo'](39.5 * _0x24e79f, 96.07290649414062 * _0x24e79f), _0x2bacc4['bezierCurveTo'](85.5 * _0x24e79f, 114.07290649414062 * _0x24e79f, 62.5 * _0x24e79f, 105.57290649414062 * _0x24e79f, 85.5 * _0x24e79f, 115.07290649414062 * _0x24e79f), _0x2bacc4['bezierCurveTo'](85.5 * _0x24e79f, 125.57290649414062 * _0x24e79f, 85.5 * _0x24e79f, 125.57290649414062 * _0x24e79f, 85.5 * _0x24e79f, 136.07290649414062 * _0x24e79f), _0x2bacc4['bezierCurveTo'](51.5 * _0x24e79f, 129.07290649414062 * _0x24e79f, 51.5 * _0x24e79f, 125.07290649414062 * _0x24e79f, 41.5 * _0x24e79f, 118.07290649414062 * _0x24e79f), _0x2bacc4['bezierCurveTo'](44.5 * _0x24e79f, 106.07290649414062 * _0x24e79f, 42.5 * _0x24e79f, 103.07290649414062 * _0x24e79f, 40.5 * _0x24e79f, 96.07290649414062 * _0x24e79f), _0x2bacc4['closePath'](), fill_path(_0x2bacc4, _0x1cb9d7[0x3], _0x1cb9d7[0x2], 0x4 * _0x24e79f), _0x2bacc4['beginPath'](), _0x2bacc4['lineCap'] = 'round', _0x2bacc4['lineJoin'] = 'round', _0x2bacc4['moveTo'](0x56 * _0x24e79f, 0x50 * _0x24e79f), _0x2bacc4['bezierCurveTo'](0x61 * _0x24e79f, 0x58 * _0x24e79f, 0x6a * _0x24e79f, 0x54 * _0x24e79f, 0x70 * _0x24e79f, 0x50 * _0x24e79f), _0x2bacc4['bezierCurveTo'](0x70 * _0x24e79f, 0x3e * _0x24e79f, 0x6a * _0x24e79f, 0x3b * _0x24e79f, 0x63 * _0x24e79f, 0x36 * _0x24e79f), _0x2bacc4['bezierCurveTo'](0x56 * _0x24e79f, 0x3e * _0x24e79f, 0x56 * _0x24e79f, 0x49 * _0x24e79f, 0x56 * _0x24e79f, 0x50 * _0x24e79f), _0x2bacc4['closePath'](), fill_path(_0x2bacc4, _0x1cb9d7[0x3], _0x1cb9d7[0x2], 0x4 * _0x24e79f), _0x2bacc4['scale'](0.5, 0.5), _0x2bacc4['translate'](0x64 * _0x24e79f, 0x47 * _0x24e79f), _0x2bacc4['beginPath'](), _0x2bacc4['lineCap'] = 'round', _0x2bacc4['lineJoin'] = 'round', _0x2bacc4['moveTo'](0x56 * _0x24e79f, 0x50 * _0x24e79f), _0x2bacc4['bezierCurveTo'](0x61 * _0x24e79f, 0x58 * _0x24e79f, 0x6a * _0x24e79f, 0x54 * _0x24e79f, 0x70 * _0x24e79f, 0x50 * _0x24e79f), _0x2bacc4['bezierCurveTo'](0x70 * _0x24e79f, 0x3e * _0x24e79f, 0x6a * _0x24e79f, 0x3b * _0x24e79f, 0x63 * _0x24e79f, 0x36 * _0x24e79f), _0x2bacc4['bezierCurveTo'](0x56 * _0x24e79f, 0x3e * _0x24e79f, 0x56 * _0x24e79f, 0x49 * _0x24e79f, 0x56 * _0x24e79f, 0x50 * _0x24e79f), _0x2bacc4['closePath'](), fill_path(_0x2bacc4, _0x1cb9d7[0x6], _0x1cb9d7[0x2], 0x4 * _0x24e79f), _0x1dbc0d;
}

function create_book(_0x3a6f15, _0x1e310b, _0x4d98a2) {
    var _0x330ce4 = document['createElement']('canvas'),
        _0x1938be = _0x330ce4['getContext']('2d');
    return _0x330ce4['width'] = 0x190 * _0x3a6f15, _0x330ce4['height'] = 0x190 * _0x3a6f15, _0x1938be['save'](), _0x1938be['translate'](0xcc * _0x3a6f15, 195.0833282470703 * _0x3a6f15), _0x1938be['rotate'](10.16), round_rect(_0x1938be, -97.5 * _0x3a6f15, -134.5 * _0x3a6f15, 0xc3 * _0x3a6f15, 0x10d * _0x3a6f15, 0xa * _0x3a6f15), _0x1938be['restore'](), fill_path(_0x1938be, _0x4d98a2[0x0], _0x4d98a2[0x1], 0x8 * _0x3a6f15), _0x1938be['beginPath'](), _0x1938be['lineCap'] = 'round', _0x1938be['lineJoin'] = 'round', _0x1938be['moveTo'](58.5 * _0x3a6f15, 226.5833282470703 * _0x3a6f15), _0x1938be['bezierCurveTo'](120.5 * _0x3a6f15, 281.5833282470703 * _0x3a6f15, 120.5 * _0x3a6f15, 281.5833282470703 * _0x3a6f15, 182.5 * _0x3a6f15, 336.5833282470703 * _0x3a6f15), _0x1938be['bezierCurveTo'](0x107 * _0x3a6f15, 248.5833282470703 * _0x3a6f15, 0x107 * _0x3a6f15, 248.5833282470703 * _0x3a6f15, 343.5 * _0x3a6f15, 160.5833282470703 * _0x3a6f15), _0x1938be['bezierCurveTo'](280.5 * _0x3a6f15, 104.58332824707031 * _0x3a6f15, 280.5 * _0x3a6f15, 104.58332824707031 * _0x3a6f15, 217.5 * _0x3a6f15, 48.58332824707031 * _0x3a6f15), _0x1938be['closePath'](), fill_path(_0x1938be, _0x4d98a2[0x2], _0x4d98a2[0x3], 0x4 * _0x3a6f15), _0x1938be['save'](), _0x1938be['translate'](0xc5 * _0x3a6f15, 169.0833282470703 * _0x3a6f15), _0x1938be['rotate'](10.16), round_rect(_0x1938be, -93.5 * _0x3a6f15, -126.5 * _0x3a6f15, 0xbb * _0x3a6f15, 0xfd * _0x3a6f15, 0xa * _0x3a6f15), _0x1938be['restore'](), fill_path(_0x1938be, _0x4d98a2[0x4], _0x4d98a2[0x1], 0x8 * _0x3a6f15), _0x1938be['beginPath'](), _0x1938be['lineCap'] = 'round', _0x1938be['lineJoin'] = 'round', _0x1938be['moveTo'](226.5 * _0x3a6f15, 24.583328247070312 * _0x3a6f15), _0x1938be['bezierCurveTo'](58.5 * _0x3a6f15, 207.5833282470703 * _0x3a6f15, 0x8f * _0x3a6f15, 116.58332824707031 * _0x3a6f15, 59.5 * _0x3a6f15, 208.5833282470703 * _0x3a6f15), _0x1938be['closePath'](), fill_path(_0x1938be, undefined, _0x4d98a2[0x1], 0x8 * _0x3a6f15), _0x1938be['beginPath'](), _0x1938be['lineCap'] = 'round', _0x1938be['lineJoin'] = 'round', _0x1938be['moveTo'](46.133331298828125 * _0x3a6f15, 202.64999389648438 * _0x3a6f15), _0x1938be['bezierCurveTo'](46.133331298828125 * _0x3a6f15, 215.64999389648438 * _0x3a6f15, 46.133331298828125 * _0x3a6f15, 215.64999389648438 * _0x3a6f15, 46.133331298828125 * _0x3a6f15, 228.64999389648438 * _0x3a6f15), _0x1938be['closePath'](), fill_path(_0x1938be, _0x4d98a2[0x4], _0x4d98a2[0x1], 0x8 * _0x3a6f15), _0x1938be['beginPath'](), _0x1938be['lineCap'] = 'round', _0x1938be['lineJoin'] = 'round', _0x1938be['moveTo'](55.133331298828125 * _0x3a6f15, 211.64999389648438 * _0x3a6f15), _0x1938be['bezierCurveTo'](55.133331298828125 * _0x3a6f15, 225.14999389648438 * _0x3a6f15, 55.133331298828125 * _0x3a6f15, 225.14999389648438 * _0x3a6f15, 55.133331298828125 * _0x3a6f15, 238.64999389648438 * _0x3a6f15), _0x1938be['bezierCurveTo'](50.133331298828125 * _0x3a6f15, 235.64999389648438 * _0x3a6f15, 50.133331298828125 * _0x3a6f15, 235.64999389648438 * _0x3a6f15, 45.133331298828125 * _0x3a6f15, 232.64999389648438 * _0x3a6f15), _0x1938be['bezierCurveTo'](45.133331298828125 * _0x3a6f15, 216.64999389648438 * _0x3a6f15, 45.133331298828125 * _0x3a6f15, 216.64999389648438 * _0x3a6f15, 45.133331298828125 * _0x3a6f15, 200.64999389648438 * _0x3a6f15), _0x1938be['closePath'](), fill_path(_0x1938be, _0x4d98a2[0x4], _0x4d98a2[0x1], 0x8 * _0x3a6f15), _0x1938be['beginPath'](), _0x1938be['lineCap'] = 'round', _0x1938be['lineJoin'] = 'round', _0x1938be['moveTo'](46.133331298828125 * _0x3a6f15, 198.39999389648438 * _0x3a6f15), _0x1938be['bezierCurveTo'](46.133331298828125 * _0x3a6f15, 199.89999389648438 * _0x3a6f15, 46.133331298828125 * _0x3a6f15, 199.89999389648438 * _0x3a6f15, 46.133331298828125 * _0x3a6f15, 201.39999389648438 * _0x3a6f15), _0x1938be['closePath'](), fill_path(_0x1938be, _0x4d98a2[0x4], _0x4d98a2[0x1], 0x8 * _0x3a6f15), _0x1938be['save'](), _0x1938be['translate'](249.63333129882812 * _0x3a6f15, 120.89999389648438 * _0x3a6f15), _0x1938be['rotate'](7.04), round_rect(_0x1938be, -58.5 * _0x3a6f15, -0x20 * _0x3a6f15, 0x75 * _0x3a6f15, 0x40 * _0x3a6f15, 0xa * _0x3a6f15), _0x1938be['restore'](), fill_path(_0x1938be, _0x4d98a2[0x5]), _0x330ce4;
}

function create_paper(_0x24fd2b, _0x6e0ef7, _0x1e2790) {
    var _0xf5f877 = document['createElement']('canvas'),
        _0x41df97 = _0xf5f877['getContext']('2d');
    return _0xf5f877['width'] = 0xaa * _0x24fd2b, _0xf5f877['height'] = 0xaa * _0x24fd2b, _0x41df97['globalAlpha'] = _0x6e0ef7 ? 0.5 : 0x1, _0x41df97['translate'](-0xa * _0x24fd2b, 0xa * _0x24fd2b), _0x41df97['beginPath'](), _0x41df97['lineCap'] = 'round', _0x41df97['lineJoin'] = 'round', _0x41df97['moveTo'](72.5 * _0x24fd2b, 4.109375 * _0x24fd2b), _0x41df97['bezierCurveTo'](0x75 * _0x24fd2b, 9.609375 * _0x24fd2b, 0x75 * _0x24fd2b, 9.609375 * _0x24fd2b, 161.5 * _0x24fd2b, 15.109375 * _0x24fd2b), _0x41df97['bezierCurveTo'](134.5 * _0x24fd2b, 106.109375 * _0x24fd2b, 110.5 * _0x24fd2b, 130.109375 * _0x24fd2b, 63.5 * _0x24fd2b, 145.109375 * _0x24fd2b), _0x41df97['bezierCurveTo'](33.5 * _0x24fd2b, 120.609375 * _0x24fd2b, 33.5 * _0x24fd2b, 120.609375 * _0x24fd2b, 3.5 * _0x24fd2b, 96.109375 * _0x24fd2b), _0x41df97['bezierCurveTo'](82.5 * _0x24fd2b, 75.109375 * _0x24fd2b, 69.5 * _0x24fd2b, 29.109375 * _0x24fd2b, 71.5 * _0x24fd2b, 6.109375 * _0x24fd2b), _0x41df97['closePath'](), fill_path(_0x41df97, _0x1e2790[0x0]), _0x41df97['globalAlpha'] = 0x1, _0x41df97['translate'](0xa * _0x24fd2b, -0xa * _0x24fd2b), _0x41df97['beginPath'](), _0x41df97['lineCap'] = 'round', _0x41df97['lineJoin'] = 'round', _0x41df97['moveTo'](72.5 * _0x24fd2b, 4.109375 * _0x24fd2b), _0x41df97['bezierCurveTo'](0x75 * _0x24fd2b, 9.609375 * _0x24fd2b, 0x75 * _0x24fd2b, 9.609375 * _0x24fd2b, 161.5 * _0x24fd2b, 15.109375 * _0x24fd2b), _0x41df97['bezierCurveTo'](134.5 * _0x24fd2b, 106.109375 * _0x24fd2b, 110.5 * _0x24fd2b, 130.109375 * _0x24fd2b, 63.5 * _0x24fd2b, 145.109375 * _0x24fd2b), _0x41df97['bezierCurveTo'](33.5 * _0x24fd2b, 120.609375 * _0x24fd2b, 33.5 * _0x24fd2b, 120.609375 * _0x24fd2b, 3.5 * _0x24fd2b, 96.109375 * _0x24fd2b), _0x41df97['bezierCurveTo'](82.5 * _0x24fd2b, 75.109375 * _0x24fd2b, 69.5 * _0x24fd2b, 29.109375 * _0x24fd2b, 71.5 * _0x24fd2b, 6.109375 * _0x24fd2b), _0x41df97['closePath'](), fill_path(_0x41df97, _0x1e2790[0x1], _0x1e2790[0x2], 0xa * _0x24fd2b), _0xf5f877;
}

function create_lock(_0x5a552a, _0x41d3ba, _0x33f6d8) {
    var _0x35c77e = document['createElement']('canvas'),
        _0x55e058 = _0x35c77e['getContext']('2d');
    _0x35c77e['width'] = 0x2f * _0x5a552a, _0x35c77e['height'] = 0x3c * _0x5a552a;
    var _0x35c77e = document['createElement']('canvas'),
        _0x55e058 = _0x35c77e['getContext']('2d');
    return _0x35c77e['width'] = 0x2f * _0x5a552a, _0x35c77e['height'] = 0x3c * _0x5a552a, circle(_0x55e058, 23.5 * _0x5a552a, 20.734375 * _0x5a552a, 15.132745950421556 * _0x5a552a), fill_path(_0x55e058, undefined, _0x33f6d8[0x2], 0x4 * _0x5a552a), circle(_0x55e058, 23.5 * _0x5a552a, 20.734375 * _0x5a552a, 18.601075237738275 * _0x5a552a), fill_path(_0x55e058, undefined, _0x33f6d8[0x1], 0x4 * _0x5a552a), circle(_0x55e058, 23.5 * _0x5a552a, 20.734375 * _0x5a552a, 11.40175425099138 * _0x5a552a), fill_path(_0x55e058, undefined, _0x33f6d8[0x1], 0x4 * _0x5a552a), _0x55e058['save'](), _0x55e058['translate'](0x17 * _0x5a552a, 38.734375 * _0x5a552a), _0x55e058['rotate'](0x0), round_rect(_0x55e058, -21.5 * _0x5a552a, -0x13 * _0x5a552a, 0x2b * _0x5a552a, 0x26 * _0x5a552a, 0xa * _0x5a552a), _0x55e058['restore'](), fill_path(_0x55e058, _0x33f6d8[0x2], _0x33f6d8[0x1], 0x4 * _0x5a552a), _0x55e058['save'](), _0x55e058['translate'](23.5 * _0x5a552a, 43.734375 * _0x5a552a), _0x55e058['rotate'](0.5235987755982988), round_regular_polygon(_0x55e058, 0x3, 8.06225774829855 * _0x5a552a, 0x0 * _0x5a552a), _0x55e058['restore'](), fill_path(_0x55e058, _0x33f6d8[0x3]), circle(_0x55e058, 23.5 * _0x5a552a, 35.734375 * _0x5a552a, 7.0710678118654755 * _0x5a552a), fill_path(_0x55e058, _0x33f6d8[0x3]), _0x35c77e;
}

function create_tronctotem(_0xe8b7, _0x3f2590, _0x5d6873) {
    var _0xe9a41d = document['createElement']('canvas'),
        _0x321e7e = _0xe9a41d['getContext']('2d');
    return _0xe9a41d['width'] = 0xc9 * _0xe8b7, _0xe9a41d['height'] = 0xa4 * _0xe8b7, _0x321e7e['translate'](0x0, 0x5 * _0xe8b7), _0x321e7e['globalAlpha'] = _0x3f2590 ? 0.5 : 0x1, circle(_0x321e7e, 100.5 * _0xe8b7, 0x52 * _0xe8b7, 74.92746655359852 * _0xe8b7), fill_path(_0x321e7e, _0x5d6873[0x0], _0x5d6873[0x0], 0x4 * _0xe8b7), circle(_0x321e7e, 100.5 * _0xe8b7, 0x52 * _0xe8b7, 65.9417374971317 * _0xe8b7), fill_path(_0x321e7e, _0x5d6873[0x0], _0x5d6873[0x0], 0x4 * _0xe8b7), _0x321e7e['translate'](0x0, -0x5), _0x321e7e['globalAlpha'] = 0x1, circle(_0x321e7e, 100.5 * _0xe8b7, 0x52 * _0xe8b7, 74.92746655359852 * _0xe8b7), fill_path(_0x321e7e, _0x5d6873[0x1], _0x5d6873[0x3], 0x4 * _0xe8b7), circle(_0x321e7e, 100.5 * _0xe8b7, 0x52 * _0xe8b7, 65.9417374971317 * _0xe8b7), fill_path(_0x321e7e, _0x5d6873[0x1], _0x5d6873[0x2], 0x4 * _0xe8b7), circle(_0x321e7e, 100.5 * _0xe8b7, 0x52 * _0xe8b7, 35.9417374971317 * _0xe8b7), fill_path(_0x321e7e, _0x5d6873[0x1], _0x5d6873[0x2], 0x14 * _0xe8b7), circle(_0x321e7e, 100.5 * _0xe8b7, 0x52 * _0xe8b7, 15.9417374971317 * _0xe8b7), fill_path(_0x321e7e, _0x5d6873[0x1], _0x5d6873[0x2], 0x6 * _0xe8b7), _0xe9a41d;
}

function create_headtotem(_0x41b50e, _0x562844, _0x2771d7, _0x277a09) {
    var _0x1cfef3 = document['createElement']('canvas'),
        _0x27a2ff = _0x1cfef3['getContext']('2d');
    return _0x1cfef3['width'] = 0x1f5 * _0x41b50e, _0x1cfef3['height'] = 0x234 * _0x41b50e, _0x27a2ff['scale'](0.5, 0.5), _0x27a2ff['translate'](0xf0 * _0x41b50e, 0xff * _0x41b50e), _0x27a2ff['rotate'](_0x277a09), _0x27a2ff['globalAlpha'] = _0x562844 ? 0.5 : 0.2, circle(_0x27a2ff, 0xae * _0x41b50e, 87.984375 * _0x41b50e, 20.8806130178211 * _0x41b50e), fill_path(_0x27a2ff, _0x2771d7[0x0], _0x2771d7[0x0], 0x8 * _0x41b50e), circle(_0x27a2ff, 0xae * _0x41b50e, 87.984375 * _0x41b50e, 12.165525060596439 * _0x41b50e), fill_path(_0x27a2ff, _0x2771d7[0x0], _0x2771d7[0x0], 0x8 * _0x41b50e), circle(_0x27a2ff, 0xae * _0x41b50e, 87.484375 * _0x41b50e, 0x6 * _0x41b50e), fill_path(_0x27a2ff, _0x2771d7[0x0]), circle(_0x27a2ff, 0x1e * _0x41b50e, 87.984375 * _0x41b50e, 20.8806130178211 * _0x41b50e), fill_path(_0x27a2ff, _0x2771d7[0x0], _0x2771d7[0x0], 0x4 * _0x41b50e), circle(_0x27a2ff, 0x1e * _0x41b50e, 87.984375 * _0x41b50e, 12.165525060596439 * _0x41b50e), fill_path(_0x27a2ff, _0x2771d7[0x0], _0x2771d7[0x0], 0x4 * _0x41b50e), circle(_0x27a2ff, 0x1e * _0x41b50e, 87.484375 * _0x41b50e, 0x6 * _0x41b50e), fill_path(_0x27a2ff, _0x2771d7[0x0]), circle(_0x27a2ff, 0x64 * _0x41b50e, 0x1e * _0x41b50e, 20.8806130178211 * _0x41b50e), fill_path(_0x27a2ff, _0x2771d7[0x0], _0x2771d7[0x0], 0x4 * _0x41b50e), circle(_0x27a2ff, 0x64 * _0x41b50e, 0x1e * _0x41b50e, 12.165525060596439 * _0x41b50e), fill_path(_0x27a2ff, _0x2771d7[0x0], _0x2771d7[0x0], 0x4 * _0x41b50e), circle(_0x27a2ff, 0x64 * _0x41b50e, 0x1e * _0x41b50e, 0x6 * _0x41b50e), fill_path(_0x27a2ff, _0x2771d7[0x0]), circle(_0x27a2ff, 0x64 * _0x41b50e, 0x82 * _0x41b50e, 20.8806130178211 * _0x41b50e), fill_path(_0x27a2ff, _0x2771d7[0x0], _0x2771d7[0x0], 0x4 * _0x41b50e), circle(_0x27a2ff, 0x64 * _0x41b50e, 0x82 * _0x41b50e, 12.165525060596439 * _0x41b50e), fill_path(_0x27a2ff, _0x2771d7[0x0], _0x2771d7[0x0], 0x4 * _0x41b50e), circle(_0x27a2ff, 0x64 * _0x41b50e, 0x82 * _0x41b50e, 0x6 * _0x41b50e), fill_path(_0x27a2ff, _0x2771d7[0x0]), _0x27a2ff['save'](), _0x27a2ff['translate'](0x66 * _0x41b50e, 81.984375 * _0x41b50e), _0x27a2ff['rotate'](0x0), round_rect(_0x27a2ff, -0x4a * _0x41b50e, -0x39 * _0x41b50e, 0x94 * _0x41b50e, 0x72 * _0x41b50e, 0x17 * _0x41b50e), _0x27a2ff['restore'](), fill_path(_0x27a2ff, _0x2771d7[0x0], _0x2771d7[0x0], 0x4 * _0x41b50e), _0x27a2ff['save'](), _0x27a2ff['translate'](0x65 * _0x41b50e, 64.984375 * _0x41b50e), _0x27a2ff['rotate'](0x0), round_rect(_0x27a2ff, -0x21 * _0x41b50e, -0xa * _0x41b50e, 0x42 * _0x41b50e, 0x14 * _0x41b50e, 0xf * _0x41b50e), _0x27a2ff['restore'](), fill_path(_0x27a2ff, _0x2771d7[0x0], _0x2771d7[0x0], 0x4 * _0x41b50e), _0x27a2ff['save'](), _0x27a2ff['translate'](0x66 * _0x41b50e, 63.484375 * _0x41b50e), _0x27a2ff['rotate'](0x0), round_rect(_0x27a2ff, -0x9 * _0x41b50e, -27.5 * _0x41b50e, 0x12 * _0x41b50e, 0x37 * _0x41b50e, 0xf * _0x41b50e), _0x27a2ff['restore'](), _0x27a2ff['translate'](0x5, -0x5), _0x27a2ff['globalAlpha'] = 0x1, circle(_0x27a2ff, 0xae * _0x41b50e, 87.984375 * _0x41b50e, 20.8806130178211 * _0x41b50e), fill_path(_0x27a2ff, _0x2771d7[0x1], _0x2771d7[0x3], 0x8 * _0x41b50e), circle(_0x27a2ff, 0xae * _0x41b50e, 87.984375 * _0x41b50e, 12.165525060596439 * _0x41b50e), fill_path(_0x27a2ff, _0x2771d7[0x1], _0x2771d7[0x3], 0x8 * _0x41b50e), circle(_0x27a2ff, 0xae * _0x41b50e, 87.484375 * _0x41b50e, 0x6 * _0x41b50e), fill_path(_0x27a2ff, _0x2771d7[0x2]), circle(_0x27a2ff, 0x1e * _0x41b50e, 87.984375 * _0x41b50e, 20.8806130178211 * _0x41b50e), fill_path(_0x27a2ff, _0x2771d7[0x1], _0x2771d7[0x3], 0x8 * _0x41b50e), circle(_0x27a2ff, 0x1e * _0x41b50e, 87.984375 * _0x41b50e, 12.165525060596439 * _0x41b50e), fill_path(_0x27a2ff, _0x2771d7[0x1], _0x2771d7[0x3], 0x8 * _0x41b50e), circle(_0x27a2ff, 0x1e * _0x41b50e, 87.484375 * _0x41b50e, 0x6 * _0x41b50e), fill_path(_0x27a2ff, _0x2771d7[0x2]), circle(_0x27a2ff, 0x66 * _0x41b50e, 0x1e * _0x41b50e, 20.8806130178211 * _0x41b50e), fill_path(_0x27a2ff, _0x2771d7[0x1], _0x2771d7[0x3], 0x8 * _0x41b50e), circle(_0x27a2ff, 0x66 * _0x41b50e, 0x1e * _0x41b50e, 12.165525060596439 * _0x41b50e), fill_path(_0x27a2ff, _0x2771d7[0x1], _0x2771d7[0x3], 0x8 * _0x41b50e), circle(_0x27a2ff, 0x66 * _0x41b50e, 0x1e * _0x41b50e, 0x6 * _0x41b50e), fill_path(_0x27a2ff, _0x2771d7[0x1]), circle(_0x27a2ff, 0x66 * _0x41b50e, 0x82 * _0x41b50e, 20.8806130178211 * _0x41b50e), fill_path(_0x27a2ff, _0x2771d7[0x1], _0x2771d7[0x3], 0x8 * _0x41b50e), circle(_0x27a2ff, 0x66 * _0x41b50e, 0x82 * _0x41b50e, 12.165525060596439 * _0x41b50e), fill_path(_0x27a2ff, _0x2771d7[0x1], _0x2771d7[0x3], 0x8 * _0x41b50e), circle(_0x27a2ff, 0x66 * _0x41b50e, 0x82 * _0x41b50e, 0x6 * _0x41b50e), fill_path(_0x27a2ff, _0x2771d7[0x1]), _0x27a2ff['save'](), _0x27a2ff['translate'](0x66 * _0x41b50e, 81.984375 * _0x41b50e), round_rect(_0x27a2ff, -0x4a * _0x41b50e, -0x39 * _0x41b50e, 0x94 * _0x41b50e, 0x72 * _0x41b50e, 0x17 * _0x41b50e), _0x27a2ff['restore'](), fill_path(_0x27a2ff, _0x2771d7[0x1], _0x2771d7[0x3], 0x8 * _0x41b50e), _0x27a2ff['save'](), _0x27a2ff['translate'](0x65 * _0x41b50e, 64.984375 * _0x41b50e), round_rect(_0x27a2ff, -0x21 * _0x41b50e, -0xa * _0x41b50e, 0x42 * _0x41b50e, 0x14 * _0x41b50e, 0xf * _0x41b50e), _0x27a2ff['restore'](), fill_path(_0x27a2ff, _0x2771d7[0x2], _0x2771d7[0x1], 0x8 * _0x41b50e), _0x27a2ff['save'](), _0x27a2ff['translate'](0x66 * _0x41b50e, 63.484375 * _0x41b50e), round_rect(_0x27a2ff, -0x9 * _0x41b50e, -27.5 * _0x41b50e, 0x12 * _0x41b50e, 0x37 * _0x41b50e, 0xf * _0x41b50e), _0x27a2ff['restore'](), fill_path(_0x27a2ff, _0x2771d7[0x2], _0x2771d7[0x1], 0x8 * _0x41b50e), circle(_0x27a2ff, 0x87 * _0x41b50e, 107.36605834960938 * _0x41b50e, 21.095023109728988 * _0x41b50e), fill_path(_0x27a2ff, _0x2771d7[0x1], _0x2771d7[0x3], 0x8 * _0x41b50e), circle(_0x27a2ff, 0x87 * _0x41b50e, 107.36605834960938 * _0x41b50e, 0xd * _0x41b50e), fill_path(_0x27a2ff, _0x2771d7[0x1], _0x2771d7[0x3], 0x8 * _0x41b50e), circle(_0x27a2ff, 0x87 * _0x41b50e, 107.36605834960938 * _0x41b50e, 6.082762530298219 * _0x41b50e), fill_path(_0x27a2ff, _0x2771d7[0x2]), circle(_0x27a2ff, 0x46 * _0x41b50e, 107.36605834960938 * _0x41b50e, 21.095023109728988 * _0x41b50e), fill_path(_0x27a2ff, _0x2771d7[0x1], _0x2771d7[0x3], 0x8 * _0x41b50e), circle(_0x27a2ff, 0x46 * _0x41b50e, 107.36605834960938 * _0x41b50e, 0xd * _0x41b50e), fill_path(_0x27a2ff, _0x2771d7[0x1], _0x2771d7[0x3], 0x8 * _0x41b50e), circle(_0x27a2ff, 0x46 * _0x41b50e, 107.36605834960938 * _0x41b50e, 6.082762530298219 * _0x41b50e), fill_path(_0x27a2ff, _0x2771d7[0x2]), _0x1cfef3;
}

function create_icon_team(_0x4180a8, _0x220d1f, _0xb47f93) {
    var _0xcf56e0 = document['createElement']('canvas'),
        _0x27de48 = _0xcf56e0['getContext']('2d');
    _0xcf56e0['width'] = 0x5f * _0x4180a8, _0xcf56e0['height'] = 0x55 * _0x4180a8;
    if (_0xb47f93 == 0x0) _0x27de48['translate'](0x7 * _0x4180a8, 0xf * _0x4180a8), _0x27de48['scale'](0.9, 0.9), _0x27de48['save'](), round_rect(_0x27de48, 0x0 * _0x4180a8, 0x5 * _0x4180a8, 0x5a * _0x4180a8, 0x3c * _0x4180a8, 0xa), fill_path(_0x27de48, _0x220d1f[0x0]), _0x27de48['globalCompositeOperation'] = 'destination-out', circle(_0x27de48, 0x19 * _0x4180a8, 0x28 * _0x4180a8, 0xa * _0x4180a8), _0x27de48['fill'](), circle(_0x27de48, 0x41 * _0x4180a8, 0x28 * _0x4180a8, 0xa * _0x4180a8), _0x27de48['fill'](), _0x27de48['restore'](), _0x27de48['save'](), round_rect(_0x27de48, 0x0, 0x0, 0x5a * _0x4180a8, 0x3c * _0x4180a8, 0xa * _0x4180a8), fill_path(_0x27de48, _0x220d1f[0x1]), _0x27de48['globalCompositeOperation'] = 'destination-out', circle(_0x27de48, 0x19 * _0x4180a8, 0x28 * _0x4180a8, 0xa * _0x4180a8), _0x27de48['fill'](), circle(_0x27de48, 0x41 * _0x4180a8, 0x28 * _0x4180a8, 0xa * _0x4180a8), _0x27de48['fill'](), _0x27de48['restore']();
    else _0xb47f93 == 0x1 && (_0x27de48['scale'](0.8, 0.8), _0x27de48['translate'](0xf * _0x4180a8, 0x21 * _0x4180a8), _0x27de48['save'](), _0x27de48['scale'](0.56, 0.56), _0x27de48['translate'](-0x27 * _0x4180a8, -0x3c * _0x4180a8), _0x27de48['beginPath'](), _0x27de48['lineCap'] = 'round', _0x27de48['lineJoin'] = 'round', _0x27de48['moveTo'](32.5 * _0x4180a8, 50.642852783203125 * _0x4180a8), _0x27de48['bezierCurveTo'](0x53 * _0x4180a8, 69.64285278320312 * _0x4180a8, 0x53 * _0x4180a8, 69.64285278320312 * _0x4180a8, 133.5 * _0x4180a8, 88.64285278320312 * _0x4180a8), _0x27de48['bezierCurveTo'](0x5d * _0x4180a8, 92.64285278320312 * _0x4180a8, 0x5d * _0x4180a8, 92.64285278320312 * _0x4180a8, 52.5 * _0x4180a8, 96.64285278320312 * _0x4180a8), _0x27de48['bezierCurveTo'](30.5 * _0x4180a8, 100.64285278320312 * _0x4180a8, 36.5 * _0x4180a8, 94.64285278320312 * _0x4180a8, 32.5 * _0x4180a8, 84.64285278320312 * _0x4180a8), _0x27de48['bezierCurveTo'](21.5 * _0x4180a8, 45.642852783203125 * _0x4180a8, 24.5 * _0x4180a8, 48.642852783203125 * _0x4180a8, 31.5 * _0x4180a8, 50.642852783203125 * _0x4180a8), _0x27de48['closePath'](), fill_path(_0x27de48, _0x220d1f[0x1]), _0x27de48['beginPath'](), _0x27de48['lineCap'] = 'round', _0x27de48['lineJoin'] = 'round', _0x27de48['moveTo'](116.5 * _0x4180a8, 85.64285278320312 * _0x4180a8), _0x27de48['bezierCurveTo'](160.5 * _0x4180a8, 67.14285278320312 * _0x4180a8, 160.5 * _0x4180a8, 67.14285278320312 * _0x4180a8, 204.5 * _0x4180a8, 48.642852783203125 * _0x4180a8), _0x27de48['bezierCurveTo'](220.5 * _0x4180a8, 42.642852783203125 * _0x4180a8, 208.5 * _0x4180a8, 68.64285278320312 * _0x4180a8, 205.5 * _0x4180a8, 85.64285278320312 * _0x4180a8), _0x27de48['bezierCurveTo'](202.5 * _0x4180a8, 98.64285278320312 * _0x4180a8, 199.5 * _0x4180a8, 98.64285278320312 * _0x4180a8, 188.5 * _0x4180a8, 100.64285278320312 * _0x4180a8), _0x27de48['closePath'](), fill_path(_0x27de48, _0x220d1f[0x1]), _0x27de48['beginPath'](), _0x27de48['lineCap'] = 'round', _0x27de48['lineJoin'] = 'round', _0x27de48['moveTo'](166.5 * _0x4180a8, 68.64285278320312 * _0x4180a8), _0x27de48['bezierCurveTo'](147.5 * _0x4180a8, 72.64285278320312 * _0x4180a8, 145.5 * _0x4180a8, 73.64285278320312 * _0x4180a8, 142.5 * _0x4180a8, 62.642852783203125 * _0x4180a8), _0x27de48['bezierCurveTo'](121.5 * _0x4180a8, 12.642852783203125 * _0x4180a8, 122.5 * _0x4180a8, 5.642852783203125 * _0x4180a8, 117.5 * _0x4180a8, 15.642852783203125 * _0x4180a8), _0x27de48['bezierCurveTo'](105.5 * _0x4180a8, 40.642852783203125 * _0x4180a8, 105.5 * _0x4180a8, 40.642852783203125 * _0x4180a8, 93.5 * _0x4180a8, 65.64285278320312 * _0x4180a8), _0x27de48['bezierCurveTo'](89.5 * _0x4180a8, 74.64285278320312 * _0x4180a8, 84.5 * _0x4180a8, 72.64285278320312 * _0x4180a8, 73.5 * _0x4180a8, 74.64285278320312 * _0x4180a8), _0x27de48['bezierCurveTo'](0x62 * _0x4180a8, 87.64285278320312 * _0x4180a8, 0x62 * _0x4180a8, 87.64285278320312 * _0x4180a8, 122.5 * _0x4180a8, 100.64285278320312 * _0x4180a8), _0x27de48['closePath'](), fill_path(_0x27de48, _0x220d1f[0x1]), _0x27de48['restore'](), _0x27de48['save'](), round_rect(_0x27de48, 0x0, 0xf * _0x4180a8, 0x5a * _0x4180a8, 0x32 * _0x4180a8, 0xa * _0x4180a8), fill_path(_0x27de48, _0x220d1f[0x0]), round_rect(_0x27de48, 0x0, 0xa * _0x4180a8, 0x5a * _0x4180a8, 0x32 * _0x4180a8, 0xa * _0x4180a8), fill_path(_0x27de48, _0x220d1f[0x1]), _0x27de48['globalCompositeOperation'] = 'destination-out', circle(_0x27de48, 0x19 * _0x4180a8, 0x28 * _0x4180a8, 0xa * _0x4180a8), _0x27de48['fill'](), circle(_0x27de48, 0x41 * _0x4180a8, 0x28 * _0x4180a8, 0xa * _0x4180a8), _0x27de48['fill'](), _0x27de48['restore']());
    return _0xcf56e0;
}

function create_team_button(_0x364540, _0xc93d01, _0x4491b9) {
    var _0x571cf0 = document['createElement']('canvas'),
        _0x582217 = _0x571cf0['getContext']('2d');
    _0x571cf0['width'] = 0x78 * _0x364540, _0x571cf0['height'] = 0x64 * _0x364540, round_rect(_0x582217, 0xa * _0x364540, 0xa * _0x364540, 0x5f * _0x364540, 0x50 * _0x364540, 0xa * _0x364540), fill_path(_0x582217, _0xc93d01[0x2]), round_rect(_0x582217, 0xa * _0x364540, 0x5 * _0x364540, 0x5f * _0x364540, 0x50 * _0x364540, 0xa * _0x364540), fill_path(_0x582217, _0xc93d01[0x3], _0xc93d01[0x4], 0x4 * _0x364540);
    if (_0x4491b9 == 0x0) {
        var _0x4eecd9 = create_icon_team(0.75 * _0x364540, _0xc93d01, 0x0);
        _0x582217['drawImage'](_0x4eecd9, 0x16 * _0x364540, 0x12 * _0x364540);
    } else {
        if (_0x4491b9 == 0x1) {
            var _0x4eecd9 = create_icon_team(0.75 * _0x364540, _0xc93d01, 0x1);
            _0x582217['drawImage'](_0x4eecd9, 0x16 * _0x364540, 0x12 * _0x364540);
        }
    }
    return _0x571cf0;
}

function create_totem(_0x57bb7f, _0xf4e18, _0x26d73b) {
    var _0x3ac58f = document['createElement']('canvas'),
        _0x6e0f39 = _0x3ac58f['getContext']('2d');
    _0x3ac58f['width'] = 0xb9 * _0x57bb7f, _0x3ac58f['height'] = 0xa4 * _0x57bb7f, _0x6e0f39['translate'](0x0, 0x0);
    var _0xf3d178 = create_tronctotem(_0x57bb7f, _0xf4e18, _0x26d73b);
    _0x6e0f39['drawImage'](_0xf3d178, -0xa * _0x57bb7f, 0x0 * _0x57bb7f);
    var _0xf3d178 = create_headtotem(_0x57bb7f, _0xf4e18, _0x26d73b, 0x0);
    _0x6e0f39['drawImage'](_0xf3d178, -0x53 * _0x57bb7f, -0x28 * _0x57bb7f);
    var _0xf3d178 = create_headtotem(_0x57bb7f, _0xf4e18, _0x26d73b, Math['PI'] / 1.4);
    _0x6e0f39['drawImage'](_0xf3d178, -0xf * _0x57bb7f, -0x58 * _0x57bb7f);
    var _0xf3d178 = create_headtotem(_0x57bb7f, _0xf4e18, _0x26d73b, Math['PI'] / -1.4);
    return _0x6e0f39['drawImage'](_0xf3d178, 0xf * _0x57bb7f, -0x8 * _0x57bb7f), _0x3ac58f;
}

function create_lockpick(_0x380db6, _0x21b01e, _0x1313f6) {
    var _0x52f349 = document['createElement']('canvas'),
        _0x1760c6 = _0x52f349['getContext']('2d');
    return _0x52f349['width'] = 0x1c2 * _0x380db6, _0x52f349['height'] = 0x316 * _0x380db6, _0x1760c6['translate'](0x5 * _0x380db6, 0x5 * _0x380db6), _0x1760c6['globalAlpha'] = _0x21b01e ? 0x0 : 0x0, circle(_0x1760c6, 178.5 * _0x380db6, 172.828125 * _0x380db6, 0x96 * _0x380db6), fill_path(_0x1760c6, undefined, _0x1313f6[0x0], 0x41 * _0x380db6), circle(_0x1760c6, 178.5 * _0x380db6, 172.828125 * _0x380db6, 0x96 * _0x380db6), fill_path(_0x1760c6, undefined, _0x1313f6[0x0], 0x37 * _0x380db6), _0x1760c6['closePath'](), _0x1760c6['save'](), _0x1760c6['translate'](0xb1 * _0x380db6, 512.328125 * _0x380db6), round_rect(_0x1760c6, -0x19 * _0x380db6, -202.5 * _0x380db6, 0x41 * _0x380db6, 0x195 * _0x380db6, 0x19 * _0x380db6), _0x1760c6['restore'](), fill_path(_0x1760c6, _0x1313f6[0x0]), _0x1760c6['save'](), _0x1760c6['translate'](0x88 * _0x380db6, 581.828125 * _0x380db6), round_rect(_0x1760c6, -0x27 * _0x380db6, -0x17 * _0x380db6, 0x4e * _0x380db6, 0x2e * _0x380db6, 0x19 * _0x380db6), _0x1760c6['restore'](), fill_path(_0x1760c6, _0x1313f6[0x0]), _0x1760c6['save'](), _0x1760c6['translate'](135.5 * _0x380db6, 663.828125 * _0x380db6), round_rect(_0x1760c6, -39.5 * _0x380db6, -0x16 * _0x380db6, 0x4f * _0x380db6, 0x2c * _0x380db6, 0x19 * _0x380db6), _0x1760c6['restore'](), fill_path(_0x1760c6, _0x1313f6[0x0]), _0x1760c6['beginPath'](), _0x1760c6['lineCap'] = 'round', _0x1760c6['lineJoin'] = 'round', _0x1760c6['moveTo'](0x72 * _0x380db6, 594.828125 * _0x380db6), _0x1760c6['bezierCurveTo'](0xaf * _0x380db6, 596.828125 * _0x380db6, 0xa3 * _0x380db6, 596.828125 * _0x380db6, 0xac * _0x380db6, 594.828125 * _0x380db6), _0x1760c6['bezierCurveTo'](171.5 * _0x380db6, 633.828125 * _0x380db6, 171.5 * _0x380db6, 633.828125 * _0x380db6, 0xab * _0x380db6, 672.828125 * _0x380db6), _0x1760c6['bezierCurveTo'](0x6e * _0x380db6, 673.828125 * _0x380db6, 140.5 * _0x380db6, 673.328125 * _0x380db6, 0x6e * _0x380db6, 673.828125 * _0x380db6), _0x1760c6['bezierCurveTo'](110.5 * _0x380db6, 661.828125 * _0x380db6, 110.5 * _0x380db6, 661.828125 * _0x380db6, 0x6f * _0x380db6, 649.828125 * _0x380db6), _0x1760c6['bezierCurveTo'](0x9d * _0x380db6, 633.828125 * _0x380db6, 0x86 * _0x380db6, 607.828125 * _0x380db6, 0x72 * _0x380db6, 594.828125 * _0x380db6), _0x1760c6['closePath'](), fill_path(_0x1760c6, _0x1313f6[0x0]), _0x1760c6['beginPath'](), _0x1760c6['lineCap'] = 'round', _0x1760c6['lineJoin'] = 'round', _0x1760c6['translate'](0x0, 0x5 * _0x380db6), _0x1760c6['moveTo'](0x8c * _0x380db6, 294.828125 * _0x380db6), _0x1760c6['bezierCurveTo'](0xd4 * _0x380db6, 295.828125 * _0x380db6, 176.5 * _0x380db6, 295.328125 * _0x380db6, 0xd5 * _0x380db6, 295.828125 * _0x380db6), _0x1760c6['bezierCurveTo'](201.5 * _0x380db6, 325.328125 * _0x380db6, 201.5 * _0x380db6, 325.328125 * _0x380db6, 0xbe * _0x380db6, 354.828125 * _0x380db6), _0x1760c6['bezierCurveTo'](175.5 * _0x380db6, 355.828125 * _0x380db6, 175.5 * _0x380db6, 355.828125 * _0x380db6, 0xa1 * _0x380db6, 356.828125 * _0x380db6), _0x1760c6['bezierCurveTo'](154.5 * _0x380db6, 328.828125 * _0x380db6, 154.5 * _0x380db6, 328.828125 * _0x380db6, 0x94 * _0x380db6, 300.828125 * _0x380db6), _0x1760c6['closePath'](), fill_path(_0x1760c6, _0x1313f6[0x0]), _0x1760c6['translate'](0x3, -0x5 * _0x380db6), _0x1760c6['beginPath'](), _0x1760c6['lineCap'] = 'round', _0x1760c6['lineJoin'] = 'round', _0x1760c6['moveTo'](0x9f * _0x380db6, 679.828125 * _0x380db6), _0x1760c6['bezierCurveTo'](0xb4 * _0x380db6, 665.828125 * _0x380db6, 0x9b * _0x380db6, 675.828125 * _0x380db6, 0x97 * _0x380db6, 671.828125 * _0x380db6), _0x1760c6['bezierCurveTo'](154.5 * _0x380db6, 685.328125 * _0x380db6, 154.5 * _0x380db6, 685.328125 * _0x380db6, 0x9e * _0x380db6, 698.828125 * _0x380db6), _0x1760c6['bezierCurveTo'](0xab * _0x380db6, 699.828125 * _0x380db6, 0xab * _0x380db6, 699.828125 * _0x380db6, 0xb8 * _0x380db6, 700.828125 * _0x380db6), _0x1760c6['closePath'](), fill_path(_0x1760c6, _0x1313f6[0x0]), _0x1760c6['save'](), _0x1760c6['beginPath'](), _0x1760c6['lineCap'] = 'round', _0x1760c6['lineJoin'] = 'round', _0x1760c6['moveTo'](0x9d * _0x380db6, 548.828125 * _0x380db6), _0x1760c6['bezierCurveTo'](0x9d * _0x380db6, 561.828125 * _0x380db6, 0x9d * _0x380db6, 561.828125 * _0x380db6, 0x9d * _0x380db6, 574.828125 * _0x380db6), _0x1760c6['bezierCurveTo'](132.5 * _0x380db6, 580.828125 * _0x380db6, 132.5 * _0x380db6, 580.828125 * _0x380db6, 0x6c * _0x380db6, 586.828125 * _0x380db6), _0x1760c6['bezierCurveTo'](0x70 * _0x380db6, 599.828125 * _0x380db6, 0x6f * _0x380db6, 593.828125 * _0x380db6, 0x70 * _0x380db6, 599.828125 * _0x380db6), _0x1760c6['bezierCurveTo'](0x9f * _0x380db6, 603.828125 * _0x380db6, 126.5 * _0x380db6, 601.328125 * _0x380db6, 0x8d * _0x380db6, 602.828125 * _0x380db6), _0x1760c6['bezierCurveTo'](0x91 * _0x380db6, 641.828125 * _0x380db6, 143.5 * _0x380db6, 623.828125 * _0x380db6, 0x92 * _0x380db6, 644.828125 * _0x380db6), _0x1760c6['bezierCurveTo'](129.5 * _0x380db6, 645.328125 * _0x380db6, 129.5 * _0x380db6, 645.328125 * _0x380db6, 0x71 * _0x380db6, 645.828125 * _0x380db6), _0x1760c6['bezierCurveTo'](107.5 * _0x380db6, 652.828125 * _0x380db6, 107.5 * _0x380db6, 652.828125 * _0x380db6, 0x66 * _0x380db6, 659.828125 * _0x380db6), _0x1760c6['bezierCurveTo'](0x68 * _0x380db6, 669.328125 * _0x380db6, 0x68 * _0x380db6, 669.328125 * _0x380db6, 0x6a * _0x380db6, 678.828125 * _0x380db6), _0x1760c6['bezierCurveTo'](0x91 * _0x380db6, 679.328125 * _0x380db6, 0x91 * _0x380db6, 679.328125 * _0x380db6, 0xb8 * _0x380db6, 679.828125 * _0x380db6), _0x1760c6['bezierCurveTo'](0xb9 * _0x380db6, 615.828125 * _0x380db6, 0xb9 * _0x380db6, 615.828125 * _0x380db6, 0xba * _0x380db6, 551.828125 * _0x380db6), _0x1760c6['bezierCurveTo'](172.5 * _0x380db6, 551.328125 * _0x380db6, 172.5 * _0x380db6, 551.328125 * _0x380db6, 0x9f * _0x380db6, 550.828125 * _0x380db6), _0x1760c6['closePath'](), fill_path(_0x1760c6, _0x1313f6[0x0], _0x1313f6[0x0], 0x7 * _0x380db6), _0x1760c6['restore'](), _0x1760c6['globalAlpha'] = 0x1, _0x1760c6['translate'](0xf * _0x380db6, 0x23 * _0x380db6), circle(_0x1760c6, 178.5 * _0x380db6, 172.828125 * _0x380db6, 0x96 * _0x380db6), fill_path(_0x1760c6, undefined, _0x1313f6[0x2], 0x5f * _0x380db6), circle(_0x1760c6, 178.5 * _0x380db6, 172.828125 * _0x380db6, 0x96 * _0x380db6), fill_path(_0x1760c6, undefined, _0x1313f6[0x1], 0x37 * _0x380db6), _0x1760c6['closePath'](), _0x1760c6['save'](), _0x1760c6['translate'](0xb1 * _0x380db6, 512.328125 * _0x380db6), round_rect(_0x1760c6, -0x19 * _0x380db6, -202.5 * _0x380db6, 0x41 * _0x380db6, 0x195 * _0x380db6, 0x19 * _0x380db6), _0x1760c6['restore'](), fill_path(_0x1760c6, _0x1313f6[0x1], _0x1313f6[0x2], 0x14 * _0x380db6), _0x1760c6['save'](), _0x1760c6['translate'](0x88 * _0x380db6, 581.828125 * _0x380db6), round_rect(_0x1760c6, -0x27 * _0x380db6, -0x17 * _0x380db6, 0x4e * _0x380db6, 0x2e * _0x380db6, 0x19 * _0x380db6), _0x1760c6['restore'](), fill_path(_0x1760c6, _0x1313f6[0x1], _0x1313f6[0x2], 0x14 * _0x380db6), _0x1760c6['save'](), _0x1760c6['translate'](135.5 * _0x380db6, 663.828125 * _0x380db6), round_rect(_0x1760c6, -39.5 * _0x380db6, -0x16 * _0x380db6, 0x4f * _0x380db6, 0x2c * _0x380db6, 0x19 * _0x380db6), _0x1760c6['restore'](), fill_path(_0x1760c6, _0x1313f6[0x1], _0x1313f6[0x2], 0x14 * _0x380db6), _0x1760c6['beginPath'](), _0x1760c6['lineCap'] = 'round', _0x1760c6['lineJoin'] = 'round', _0x1760c6['moveTo'](0x72 * _0x380db6, 594.828125 * _0x380db6), _0x1760c6['bezierCurveTo'](0xaf * _0x380db6, 596.828125 * _0x380db6, 0xa3 * _0x380db6, 596.828125 * _0x380db6, 0xac * _0x380db6, 594.828125 * _0x380db6), _0x1760c6['bezierCurveTo'](171.5 * _0x380db6, 633.828125 * _0x380db6, 171.5 * _0x380db6, 633.828125 * _0x380db6, 0xab * _0x380db6, 672.828125 * _0x380db6), _0x1760c6['bezierCurveTo'](0x6e * _0x380db6, 673.828125 * _0x380db6, 140.5 * _0x380db6, 673.328125 * _0x380db6, 0x6e * _0x380db6, 673.828125 * _0x380db6), _0x1760c6['bezierCurveTo'](110.5 * _0x380db6, 661.828125 * _0x380db6, 110.5 * _0x380db6, 661.828125 * _0x380db6, 0x6f * _0x380db6, 649.828125 * _0x380db6), _0x1760c6['bezierCurveTo'](0x9d * _0x380db6, 633.828125 * _0x380db6, 0x86 * _0x380db6, 607.828125 * _0x380db6, 0x72 * _0x380db6, 594.828125 * _0x380db6), _0x1760c6['closePath'](), fill_path(_0x1760c6, _0x1313f6[0x1]), _0x1760c6['beginPath'](), _0x1760c6['lineCap'] = 'round', _0x1760c6['lineJoin'] = 'round', _0x1760c6['translate'](0x0, 0x5 * _0x380db6), _0x1760c6['moveTo'](0x7b * _0x380db6, 294.828125 * _0x380db6), _0x1760c6['bezierCurveTo'](0xd4 * _0x380db6, 295.828125 * _0x380db6, 190.5 * _0x380db6, 295.328125 * _0x380db6, 0xfa * _0x380db6, 295.828125 * _0x380db6), _0x1760c6['bezierCurveTo'](231.5 * _0x380db6, 325.328125 * _0x380db6, 231.5 * _0x380db6, 325.328125 * _0x380db6, 0xdc * _0x380db6, 354.828125 * _0x380db6), _0x1760c6['bezierCurveTo'](175.5 * _0x380db6, 355.828125 * _0x380db6, 175.5 * _0x380db6, 355.828125 * _0x380db6, 0x8c * _0x380db6, 356.828125 * _0x380db6), _0x1760c6['bezierCurveTo'](123.5 * _0x380db6, 328.828125 * _0x380db6, 123.5 * _0x380db6, 328.828125 * _0x380db6, 0x7b * _0x380db6, 294.828125 * _0x380db6), _0x1760c6['closePath'](), fill_path(_0x1760c6, _0x1313f6[0x1]), _0x1760c6['translate'](0x0, -0x5 * _0x380db6), _0x1760c6['beginPath'](), _0x1760c6['lineCap'] = 'round', _0x1760c6['lineJoin'] = 'round', _0x1760c6['moveTo'](0x9f * _0x380db6, 679.828125 * _0x380db6), _0x1760c6['bezierCurveTo'](0xb4 * _0x380db6, 665.828125 * _0x380db6, 0x9b * _0x380db6, 675.828125 * _0x380db6, 0x97 * _0x380db6, 671.828125 * _0x380db6), _0x1760c6['bezierCurveTo'](154.5 * _0x380db6, 685.328125 * _0x380db6, 154.5 * _0x380db6, 685.328125 * _0x380db6, 0x9e * _0x380db6, 698.828125 * _0x380db6), _0x1760c6['bezierCurveTo'](0xab * _0x380db6, 699.828125 * _0x380db6, 0xab * _0x380db6, 699.828125 * _0x380db6, 0xb8 * _0x380db6, 700.828125 * _0x380db6), _0x1760c6['closePath'](), fill_path(_0x1760c6, _0x1313f6[0x1]), _0x1760c6['save'](), _0x1760c6['beginPath'](), _0x1760c6['lineCap'] = 'round', _0x1760c6['lineJoin'] = 'round', _0x1760c6['moveTo'](0x9d * _0x380db6, 548.828125 * _0x380db6), _0x1760c6['bezierCurveTo'](0x9d * _0x380db6, 561.828125 * _0x380db6, 0x9d * _0x380db6, 561.828125 * _0x380db6, 0x9d * _0x380db6, 574.828125 * _0x380db6), _0x1760c6['bezierCurveTo'](132.5 * _0x380db6, 580.828125 * _0x380db6, 132.5 * _0x380db6, 580.828125 * _0x380db6, 0x6c * _0x380db6, 586.828125 * _0x380db6), _0x1760c6['bezierCurveTo'](0x70 * _0x380db6, 599.828125 * _0x380db6, 0x6f * _0x380db6, 593.828125 * _0x380db6, 0x70 * _0x380db6, 599.828125 * _0x380db6), _0x1760c6['bezierCurveTo'](0x9f * _0x380db6, 603.828125 * _0x380db6, 126.5 * _0x380db6, 601.328125 * _0x380db6, 0x8d * _0x380db6, 602.828125 * _0x380db6), _0x1760c6['bezierCurveTo'](0x91 * _0x380db6, 641.828125 * _0x380db6, 143.5 * _0x380db6, 623.828125 * _0x380db6, 0x92 * _0x380db6, 644.828125 * _0x380db6), _0x1760c6['bezierCurveTo'](129.5 * _0x380db6, 645.328125 * _0x380db6, 129.5 * _0x380db6, 645.328125 * _0x380db6, 0x71 * _0x380db6, 645.828125 * _0x380db6), _0x1760c6['bezierCurveTo'](107.5 * _0x380db6, 652.828125 * _0x380db6, 107.5 * _0x380db6, 652.828125 * _0x380db6, 0x66 * _0x380db6, 659.828125 * _0x380db6), _0x1760c6['bezierCurveTo'](0x68 * _0x380db6, 669.328125 * _0x380db6, 0x68 * _0x380db6, 669.328125 * _0x380db6, 0x6a * _0x380db6, 678.828125 * _0x380db6), _0x1760c6['bezierCurveTo'](0x91 * _0x380db6, 679.328125 * _0x380db6, 0x91 * _0x380db6, 679.328125 * _0x380db6, 0xb8 * _0x380db6, 679.828125 * _0x380db6), _0x1760c6['bezierCurveTo'](0xb9 * _0x380db6, 615.828125 * _0x380db6, 0xb9 * _0x380db6, 615.828125 * _0x380db6, 0xba * _0x380db6, 551.828125 * _0x380db6), _0x1760c6['bezierCurveTo'](172.5 * _0x380db6, 551.328125 * _0x380db6, 172.5 * _0x380db6, 551.328125 * _0x380db6, 0x9f * _0x380db6, 550.828125 * _0x380db6), _0x1760c6['closePath'](), fill_path(_0x1760c6, _0x1313f6[0x1], _0x1313f6[0x1], 0x7 * _0x380db6), _0x1760c6['restore'](), _0x52f349;
}

function create_resurrection_ground(_0x4fd068, _0x11923a, _0x4de729) {
    var _0x3716e2 = document['createElement']('canvas'),
        _0x3a8031 = _0x3716e2['getContext']('2d');
    return _0x3716e2['width'] = 0xca * _0x4fd068, _0x3716e2['height'] = 0xca * _0x4fd068, _0x3a8031['translate'](0x2 * _0x4fd068, 0x1 * _0x4fd068), _0x3a8031['globalAlpha'] = 0.3, circle(_0x3a8031, 0x62 * _0x4fd068, 0x63 * _0x4fd068, 0x64 * _0x4fd068), fill_path(_0x3a8031, _0x4de729[0x0]), _0x3a8031['globalAlpha'] = 0.5, circle(_0x3a8031, 0x62 * _0x4fd068, 0x63 * _0x4fd068, 0x5a * _0x4fd068), fill_path(_0x3a8031, _0x4de729[0x1]), _0x3716e2;
}

function create_resurrection_hole(_0x270d62, _0xb09f6e, _0x10072f) {
    var _0x2e5153 = document['createElement']('canvas'),
        _0xa130de = _0x2e5153['getContext']('2d');
    return _0x2e5153['width'] = 0x59 * _0x270d62, _0x2e5153['height'] = 0x59 * _0x270d62, _0xa130de['save'](), _0xa130de['translate'](44.5 * _0x270d62, 44.5 * _0x270d62), round_regular_polygon(_0xa130de, 0x6, 0x28 * _0x270d62, 0xa * _0x270d62), _0xa130de['restore'](), fill_path(_0xa130de, _0x10072f[0x0], _0x10072f[0x1], 0x5 * _0x270d62), _0xa130de['save'](), _0xa130de['translate'](44.5 * _0x270d62, 44.5 * _0x270d62), round_regular_polygon(_0xa130de, 0x6, 25.11521001172521 * _0x270d62, 0xa * _0x270d62), _0xa130de['restore'](), fill_path(_0xa130de, _0x10072f[0x2], _0x10072f[0x3], 0x5 * _0x270d62), _0x2e5153;
}

function create_resurrection_rotate(_0x116f67, _0x564706, _0x5873a0) {
    var _0x30b2b8 = document['createElement']('canvas'),
        _0x4fede1 = _0x30b2b8['getContext']('2d');
    return _0x30b2b8['width'] = 0x58 * _0x116f67, _0x30b2b8['height'] = 0x58 * _0x116f67, _0x4fede1['save'](), _0x4fede1['translate'](0x2c * _0x116f67, 0x2c * _0x116f67), _0x4fede1['rotate'](0.52), round_regular_polygon(_0x4fede1, 0x6, 0x2b * _0x116f67, 0xa * _0x116f67), _0x4fede1['restore'](), fill_path(_0x4fede1, _0x5873a0[0x0], _0x5873a0[0x1], 0x3 * _0x116f67), _0x30b2b8;
}

function create_resurrection(_0x435fbd, _0x182ad3, _0x21df79) {
    var _0xc63a9d = document['createElement']('canvas'),
        _0x33d395 = _0xc63a9d['getContext']('2d');
    return _0xc63a9d['width'] = 0xca * _0x435fbd, _0xc63a9d['height'] = 0xca * _0x435fbd, _0x33d395['translate'](0x2 * _0x435fbd, 0x1 * _0x435fbd), _0x33d395['globalAlpha'] = _0x182ad3 ? 0.5 : 0x1, _0x33d395['translate'](0x0, 0xa * _0x435fbd), _0x33d395['save'](), _0x33d395['translate'](0x62 * _0x435fbd, 41.15177917480469 * _0x435fbd), _0x33d395['rotate'](0.8), round_rect(_0x33d395, -0x10 * _0x435fbd, -16.5 * _0x435fbd, 0x20 * _0x435fbd, 0x21 * _0x435fbd, 0x7 * _0x435fbd), _0x33d395['restore'](), fill_path(_0x33d395, _0x21df79[0x2]), _0x33d395['beginPath'](), _0x33d395['lineCap'] = 'round', _0x33d395['lineJoin'] = 'round', _0x33d395['moveTo'](0x62 * _0x435fbd, 22.5089111328125 * _0x435fbd), _0x33d395['bezierCurveTo'](97.5 * _0x435fbd, 41.5089111328125 * _0x435fbd, 97.5 * _0x435fbd, 41.5089111328125 * _0x435fbd, 0x61 * _0x435fbd, 60.5089111328125 * _0x435fbd), fill_path(_0x33d395, _0x21df79[0x2]), _0x33d395['save'](), _0x33d395['translate'](147.5 * _0x435fbd, 69.5089111328125 * _0x435fbd), _0x33d395['rotate'](0.2), round_rect(_0x33d395, -15.5 * _0x435fbd, -0x10 * _0x435fbd, 0x1f * _0x435fbd, 0x20 * _0x435fbd, 0x7 * _0x435fbd), _0x33d395['restore'](), fill_path(_0x33d395, _0x21df79[0x2]), _0x33d395['beginPath'](), _0x33d395['lineCap'] = 'round', _0x33d395['lineJoin'] = 'round', _0x33d395['moveTo'](0xa3 * _0x435fbd, 59.50892639160156 * _0x435fbd), _0x33d395['bezierCurveTo'](0x93 * _0x435fbd, 69.50892639160156 * _0x435fbd, 0x7f * _0x435fbd, 82.50892639160156 * _0x435fbd, 0x83 * _0x435fbd, 79.50892639160156 * _0x435fbd), fill_path(_0x33d395, _0x21df79[0x2]), _0x33d395['save'](), _0x33d395['translate'](143.5 * _0x435fbd, 128.2946319580078 * _0x435fbd), _0x33d395['rotate'](1.24), round_rect(_0x33d395, -16.5 * _0x435fbd, -17.5 * _0x435fbd, 0x21 * _0x435fbd, 0x23 * _0x435fbd, 0x7 * _0x435fbd), _0x33d395['restore'](), fill_path(_0x33d395, _0x21df79[0x2]), _0x33d395['beginPath'](), _0x33d395['lineCap'] = 'round', _0x33d395['lineJoin'] = 'round', _0x33d395['moveTo'](0xa2 * _0x435fbd, 135.93748474121094 * _0x435fbd), _0x33d395['bezierCurveTo'](143.5 * _0x435fbd, 128.43748474121094 * _0x435fbd, 0x81 * _0x435fbd, 120.93748474121094 * _0x435fbd, 0x7d * _0x435fbd, 120.93748474121094 * _0x435fbd), fill_path(_0x33d395, _0x21df79[0x2]), _0x33d395['save'](), _0x33d395['translate'](0x63 * _0x435fbd, 156.08035278320312 * _0x435fbd), _0x33d395['rotate'](0.84), round_rect(_0x33d395, -0x12 * _0x435fbd, -0x12 * _0x435fbd, 0x24 * _0x435fbd, 0x24 * _0x435fbd, 0x7 * _0x435fbd), _0x33d395['restore'](), fill_path(_0x33d395, _0x21df79[0x2]), _0x33d395['beginPath'](), _0x33d395['lineCap'] = 'round', _0x33d395['lineJoin'] = 'round', _0x33d395['moveTo'](0x62 * _0x435fbd, 136.08035278320312 * _0x435fbd), _0x33d395['bezierCurveTo'](0x62 * _0x435fbd, 156.08035278320312 * _0x435fbd, 0x62 * _0x435fbd, 156.08035278320312 * _0x435fbd, 0x62 * _0x435fbd, 176.08035278320312 * _0x435fbd), fill_path(_0x33d395, _0x21df79[0x2]), _0x33d395['save'](), _0x33d395['translate'](0x36 * _0x435fbd, 72.22320556640625 * _0x435fbd), _0x33d395['rotate'](1.32), round_rect(_0x33d395, -0x12 * _0x435fbd, -0x13 * _0x435fbd, 0x24 * _0x435fbd, 0x26 * _0x435fbd, 0x7 * _0x435fbd), _0x33d395['restore'](), fill_path(_0x33d395, _0x21df79[0x2]), _0x33d395['beginPath'](), _0x33d395['lineCap'] = 'round', _0x33d395['lineJoin'] = 'round', _0x33d395['moveTo'](0x22 * _0x435fbd, 60.79463195800781 * _0x435fbd), _0x33d395['bezierCurveTo'](53.5 * _0x435fbd, 72.29463195800781 * _0x435fbd, 0x45 * _0x435fbd, 79.79463195800781 * _0x435fbd, 0x49 * _0x435fbd, 83.79463195800781 * _0x435fbd), fill_path(_0x33d395, _0x21df79[0x2]), _0x33d395['save'](), _0x33d395['translate'](0x31 * _0x435fbd, 127.29463195800781 * _0x435fbd), _0x33d395['rotate'](1.76), round_rect(_0x33d395, -0x14 * _0x435fbd, -17.5 * _0x435fbd, 0x28 * _0x435fbd, 0x23 * _0x435fbd, 0x7 * _0x435fbd), _0x33d395['restore'](), fill_path(_0x33d395, _0x21df79[0x2]), _0x33d395['beginPath'](), _0x33d395['lineCap'] = 'round', _0x33d395['lineJoin'] = 'round', _0x33d395['moveTo'](0x1e * _0x435fbd, 141.7946319580078 * _0x435fbd), _0x33d395['bezierCurveTo'](0x2f * _0x435fbd, 130.2946319580078 * _0x435fbd, 0x40 * _0x435fbd, 119.79463195800781 * _0x435fbd, 0x40 * _0x435fbd, 118.79463195800781 * _0x435fbd), fill_path(_0x33d395, _0x21df79[0x2]), _0x33d395['globalAlpha'] = 0x1, _0x33d395['translate'](0x0, -0xa * _0x435fbd), _0x33d395['save'](), _0x33d395['translate'](0x62 * _0x435fbd, 41.15177917480469 * _0x435fbd), _0x33d395['rotate'](0.8), round_rect(_0x33d395, -0x10 * _0x435fbd, -16.5 * _0x435fbd, 0x20 * _0x435fbd, 0x21 * _0x435fbd, 0x7 * _0x435fbd), _0x33d395['restore'](), fill_path(_0x33d395, _0x21df79[0x3], _0x21df79[0x4], 0x5 * _0x435fbd), _0x33d395['beginPath'](), _0x33d395['lineCap'] = 'round', _0x33d395['lineJoin'] = 'round', _0x33d395['moveTo'](0x62 * _0x435fbd, 22.5089111328125 * _0x435fbd), _0x33d395['bezierCurveTo'](97.5 * _0x435fbd, 41.5089111328125 * _0x435fbd, 97.5 * _0x435fbd, 41.5089111328125 * _0x435fbd, 0x61 * _0x435fbd, 60.5089111328125 * _0x435fbd), fill_path(_0x33d395, undefined, _0x21df79[0x4], 0x5 * _0x435fbd), _0x33d395['save'](), _0x33d395['translate'](147.5 * _0x435fbd, 69.5089111328125 * _0x435fbd), _0x33d395['rotate'](0.2), round_rect(_0x33d395, -15.5 * _0x435fbd, -0x10 * _0x435fbd, 0x1f * _0x435fbd, 0x20 * _0x435fbd, 0x7 * _0x435fbd), _0x33d395['restore'](), fill_path(_0x33d395, _0x21df79[0x3], _0x21df79[0x4], 0x5 * _0x435fbd), _0x33d395['beginPath'](), _0x33d395['lineCap'] = 'round', _0x33d395['lineJoin'] = 'round', _0x33d395['moveTo'](0xa3 * _0x435fbd, 59.50892639160156 * _0x435fbd), _0x33d395['bezierCurveTo'](0x93 * _0x435fbd, 69.50892639160156 * _0x435fbd, 0x7f * _0x435fbd, 82.50892639160156 * _0x435fbd, 0x83 * _0x435fbd, 79.50892639160156 * _0x435fbd), fill_path(_0x33d395, undefined, _0x21df79[0x4], 0x5 * _0x435fbd), _0x33d395['save'](), _0x33d395['translate'](143.5 * _0x435fbd, 128.2946319580078 * _0x435fbd), _0x33d395['rotate'](1.24), round_rect(_0x33d395, -16.5 * _0x435fbd, -17.5 * _0x435fbd, 0x21 * _0x435fbd, 0x23 * _0x435fbd, 0x7 * _0x435fbd), _0x33d395['restore'](), fill_path(_0x33d395, _0x21df79[0x3], _0x21df79[0x4], 0x5 * _0x435fbd), _0x33d395['beginPath'](), _0x33d395['lineCap'] = 'round', _0x33d395['lineJoin'] = 'round', _0x33d395['moveTo'](0xa2 * _0x435fbd, 135.93748474121094 * _0x435fbd), _0x33d395['bezierCurveTo'](143.5 * _0x435fbd, 128.43748474121094 * _0x435fbd, 0x81 * _0x435fbd, 120.93748474121094 * _0x435fbd, 0x7d * _0x435fbd, 120.93748474121094 * _0x435fbd), fill_path(_0x33d395, undefined, _0x21df79[0x4], 0x5 * _0x435fbd), _0x33d395['save'](), _0x33d395['translate'](0x63 * _0x435fbd, 156.08035278320312 * _0x435fbd), _0x33d395['rotate'](0.84), round_rect(_0x33d395, -0x12 * _0x435fbd, -0x12 * _0x435fbd, 0x24 * _0x435fbd, 0x24 * _0x435fbd, 0x7 * _0x435fbd), _0x33d395['restore'](), fill_path(_0x33d395, _0x21df79[0x3], _0x21df79[0x4], 0x5 * _0x435fbd), _0x33d395['beginPath'](), _0x33d395['lineCap'] = 'round', _0x33d395['lineJoin'] = 'round', _0x33d395['moveTo'](0x62 * _0x435fbd, 136.08035278320312 * _0x435fbd), _0x33d395['bezierCurveTo'](0x62 * _0x435fbd, 156.08035278320312 * _0x435fbd, 0x62 * _0x435fbd, 156.08035278320312 * _0x435fbd, 0x62 * _0x435fbd, 176.08035278320312 * _0x435fbd), fill_path(_0x33d395, undefined, _0x21df79[0x4], 0x5 * _0x435fbd), _0x33d395['save'](), _0x33d395['translate'](0x36 * _0x435fbd, 72.22320556640625 * _0x435fbd), _0x33d395['rotate'](1.32), round_rect(_0x33d395, -0x12 * _0x435fbd, -0x13 * _0x435fbd, 0x24 * _0x435fbd, 0x26 * _0x435fbd, 0x7 * _0x435fbd), _0x33d395['restore'](), fill_path(_0x33d395, _0x21df79[0x3], _0x21df79[0x4], 0x5 * _0x435fbd), _0x33d395['beginPath'](), _0x33d395['lineCap'] = 'round', _0x33d395['lineJoin'] = 'round', _0x33d395['moveTo'](0x22 * _0x435fbd, 60.79463195800781 * _0x435fbd), _0x33d395['bezierCurveTo'](53.5 * _0x435fbd, 72.29463195800781 * _0x435fbd, 0x45 * _0x435fbd, 79.79463195800781 * _0x435fbd, 0x49 * _0x435fbd, 83.79463195800781 * _0x435fbd), fill_path(_0x33d395, undefined, _0x21df79[0x4], 0x5 * _0x435fbd), _0x33d395['save'](), _0x33d395['translate'](0x31 * _0x435fbd, 127.29463195800781 * _0x435fbd), _0x33d395['rotate'](1.76), round_rect(_0x33d395, -0x14 * _0x435fbd, -17.5 * _0x435fbd, 0x28 * _0x435fbd, 0x23 * _0x435fbd, 0x7 * _0x435fbd), _0x33d395['restore'](), fill_path(_0x33d395, _0x21df79[0x3], _0x21df79[0x4], 0x5 * _0x435fbd), _0x33d395['beginPath'](), _0x33d395['lineCap'] = 'round', _0x33d395['lineJoin'] = 'round', _0x33d395['moveTo'](0x1e * _0x435fbd, 141.7946319580078 * _0x435fbd), _0x33d395['bezierCurveTo'](0x2f * _0x435fbd, 130.2946319580078 * _0x435fbd, 0x40 * _0x435fbd, 119.79463195800781 * _0x435fbd, 0x40 * _0x435fbd, 118.79463195800781 * _0x435fbd), fill_path(_0x33d395, undefined, _0x21df79[0x4], 0x5 * _0x435fbd), _0x33d395['globalAlpha'] = _0x182ad3 ? 0.5 : 0x1, _0x33d395['translate'](0x0, 0xa * _0x435fbd), _0x33d395['save'](), _0x33d395['translate'](0x62 * _0x435fbd, 0x63 * _0x435fbd), round_regular_polygon(_0x33d395, 0x6, 70.28669492273468 * _0x435fbd, 0xa * _0x435fbd), _0x33d395['restore'](), fill_path(_0x33d395, _0x21df79[0x2]), _0x33d395['save'](), _0x33d395['translate'](0x62 * _0x435fbd, 0x63 * _0x435fbd), round_regular_polygon(_0x33d395, 0x6, 56.455940020351264 * _0x435fbd, 0xa * _0x435fbd), _0x33d395['restore'](), fill_path(_0x33d395, _0x21df79[0x2]), _0x33d395['globalAlpha'] = 0x1, _0x33d395['translate'](0x0, -0xa * _0x435fbd), _0x33d395['save'](), _0x33d395['translate'](0x62 * _0x435fbd, 0x63 * _0x435fbd), round_regular_polygon(_0x33d395, 0x6, 70.28669492273468 * _0x435fbd, 0xa * _0x435fbd), _0x33d395['restore'](), fill_path(_0x33d395, _0x21df79[0x5], _0x21df79[0x6], 0x5 * _0x435fbd), _0x33d395['save'](), _0x33d395['translate'](0x62 * _0x435fbd, 0x63 * _0x435fbd), round_regular_polygon(_0x33d395, 0x6, 56.455940020351264 * _0x435fbd, 0xa * _0x435fbd), _0x33d395['restore'](), fill_path(_0x33d395, _0x21df79[0x7], _0x21df79[0x8], 0x7 * _0x435fbd), _0xc63a9d;
}

function create_dragon_heart(_0x2d6158, _0xa54732, _0x24f51c) {
    var _0x3d0b2f = document['createElement']('canvas'),
        _0x12c34c = _0x3d0b2f['getContext']('2d');
    return _0x3d0b2f['width'] = 0xa1 * _0x2d6158, _0x3d0b2f['height'] = 0xb8 * _0x2d6158, _0x12c34c['translate'](0x0, 0xa * _0x2d6158), _0x12c34c['globalAlpha'] = 0x1, _0x12c34c['beginPath'](), _0x12c34c['lineCap'] = 'round', _0x12c34c['lineJoin'] = 'round', _0x12c34c['moveTo'](105.5 * _0x2d6158, 34.609375 * _0x2d6158), _0x12c34c['bezierCurveTo'](48.5 * _0x2d6158, 7.609375 * _0x2d6158, 11.5 * _0x2d6158, 58.609375 * _0x2d6158, 20.5 * _0x2d6158, 97.609375 * _0x2d6158), _0x12c34c['bezierCurveTo'](44.5 * _0x2d6158, 161.609375 * _0x2d6158, 70.5 * _0x2d6158, 171.609375 * _0x2d6158, 88.5 * _0x2d6158, 156.609375 * _0x2d6158), _0x12c34c['bezierCurveTo'](120.5 * _0x2d6158, 129.609375 * _0x2d6158, 123.5 * _0x2d6158, 105.609375 * _0x2d6158, 128.5 * _0x2d6158, 83.609375 * _0x2d6158), _0x12c34c['bezierCurveTo'](137.5 * _0x2d6158, 79.609375 * _0x2d6158, 141.5 * _0x2d6158, 79.609375 * _0x2d6158, 146.5 * _0x2d6158, 81.609375 * _0x2d6158), _0x12c34c['bezierCurveTo'](153.5 * _0x2d6158, 70.609375 * _0x2d6158, 151.5 * _0x2d6158, 65.609375 * _0x2d6158, 148.5 * _0x2d6158, 61.609375 * _0x2d6158), _0x12c34c['bezierCurveTo'](134.5 * _0x2d6158, 60.609375 * _0x2d6158, 131.5 * _0x2d6158, 63.609375 * _0x2d6158, 127.5 * _0x2d6158, 66.609375 * _0x2d6158), _0x12c34c['bezierCurveTo'](127.5 * _0x2d6158, 55.609375 * _0x2d6158, 125.5 * _0x2d6158, 54.609375 * _0x2d6158, 120.5 * _0x2d6158, 51.609375 * _0x2d6158), _0x12c34c['bezierCurveTo'](128.5 * _0x2d6158, 42.609375 * _0x2d6158, 136.5 * _0x2d6158, 38.609375 * _0x2d6158, 147.5 * _0x2d6158, 39.609375 * _0x2d6158), _0x12c34c['bezierCurveTo'](152.5 * _0x2d6158, 23.609375 * _0x2d6158, 147.5 * _0x2d6158, 21.609375 * _0x2d6158, 140.5 * _0x2d6158, 17.609375 * _0x2d6158), _0x12c34c['bezierCurveTo'](120.5 * _0x2d6158, 17.609375 * _0x2d6158, 114.5 * _0x2d6158, 27.609375 * _0x2d6158, 106.5 * _0x2d6158, 35.609375 * _0x2d6158), _0x12c34c['closePath'](), fill_path(_0x12c34c, _0x24f51c[0x0]), _0x12c34c['beginPath'](), _0x12c34c['lineCap'] = 'round', _0x12c34c['lineJoin'] = 'round', _0x12c34c['moveTo'](45.5 * _0x2d6158, 144.609375 * _0x2d6158), _0x12c34c['bezierCurveTo'](35.5 * _0x2d6158, 155.609375 * _0x2d6158, 0x25 * _0x2d6158, 152.109375 * _0x2d6158, 28.5 * _0x2d6158, 159.609375 * _0x2d6158), _0x12c34c['bezierCurveTo'](16.5 * _0x2d6158, 154.609375 * _0x2d6158, 16.5 * _0x2d6158, 151.609375 * _0x2d6158, 17.5 * _0x2d6158, 141.609375 * _0x2d6158), _0x12c34c['bezierCurveTo'](25.5 * _0x2d6158, 134.109375 * _0x2d6158, 25.5 * _0x2d6158, 134.109375 * _0x2d6158, 33.5 * _0x2d6158, 126.609375 * _0x2d6158), fill_path(_0x12c34c, _0x24f51c[0x0]), _0x12c34c['translate'](0x0, -0xa * _0x2d6158), _0x12c34c['beginPath'](), _0x12c34c['lineCap'] = 'round', _0x12c34c['lineJoin'] = 'round', _0x12c34c['moveTo'](45.5 * _0x2d6158, 144.609375 * _0x2d6158), _0x12c34c['bezierCurveTo'](35.5 * _0x2d6158, 155.609375 * _0x2d6158, 0x25 * _0x2d6158, 152.109375 * _0x2d6158, 28.5 * _0x2d6158, 159.609375 * _0x2d6158), _0x12c34c['bezierCurveTo'](16.5 * _0x2d6158, 154.609375 * _0x2d6158, 16.5 * _0x2d6158, 151.609375 * _0x2d6158, 17.5 * _0x2d6158, 141.609375 * _0x2d6158), _0x12c34c['bezierCurveTo'](25.5 * _0x2d6158, 134.109375 * _0x2d6158, 25.5 * _0x2d6158, 134.109375 * _0x2d6158, 33.5 * _0x2d6158, 126.609375 * _0x2d6158), fill_path(_0x12c34c, _0x24f51c[0x1], _0x24f51c[0x2], 0x8 * _0x2d6158), _0x12c34c['beginPath'](), _0x12c34c['lineCap'] = 'round', _0x12c34c['lineJoin'] = 'round', _0x12c34c['moveTo'](105.5 * _0x2d6158, 34.609375 * _0x2d6158), _0x12c34c['bezierCurveTo'](48.5 * _0x2d6158, 7.609375 * _0x2d6158, 11.5 * _0x2d6158, 58.609375 * _0x2d6158, 20.5 * _0x2d6158, 97.609375 * _0x2d6158), _0x12c34c['bezierCurveTo'](44.5 * _0x2d6158, 161.609375 * _0x2d6158, 70.5 * _0x2d6158, 171.609375 * _0x2d6158, 88.5 * _0x2d6158, 156.609375 * _0x2d6158), _0x12c34c['bezierCurveTo'](120.5 * _0x2d6158, 129.609375 * _0x2d6158, 123.5 * _0x2d6158, 105.609375 * _0x2d6158, 128.5 * _0x2d6158, 83.609375 * _0x2d6158), _0x12c34c['bezierCurveTo'](137.5 * _0x2d6158, 79.609375 * _0x2d6158, 141.5 * _0x2d6158, 79.609375 * _0x2d6158, 146.5 * _0x2d6158, 81.609375 * _0x2d6158), _0x12c34c['bezierCurveTo'](153.5 * _0x2d6158, 70.609375 * _0x2d6158, 151.5 * _0x2d6158, 65.609375 * _0x2d6158, 148.5 * _0x2d6158, 61.609375 * _0x2d6158), _0x12c34c['bezierCurveTo'](134.5 * _0x2d6158, 60.609375 * _0x2d6158, 131.5 * _0x2d6158, 63.609375 * _0x2d6158, 127.5 * _0x2d6158, 66.609375 * _0x2d6158), _0x12c34c['bezierCurveTo'](127.5 * _0x2d6158, 55.609375 * _0x2d6158, 125.5 * _0x2d6158, 54.609375 * _0x2d6158, 120.5 * _0x2d6158, 51.609375 * _0x2d6158), _0x12c34c['bezierCurveTo'](128.5 * _0x2d6158, 42.609375 * _0x2d6158, 136.5 * _0x2d6158, 38.609375 * _0x2d6158, 147.5 * _0x2d6158, 39.609375 * _0x2d6158), _0x12c34c['bezierCurveTo'](152.5 * _0x2d6158, 23.609375 * _0x2d6158, 147.5 * _0x2d6158, 21.609375 * _0x2d6158, 140.5 * _0x2d6158, 17.609375 * _0x2d6158), _0x12c34c['bezierCurveTo'](120.5 * _0x2d6158, 17.609375 * _0x2d6158, 114.5 * _0x2d6158, 27.609375 * _0x2d6158, 106.5 * _0x2d6158, 35.609375 * _0x2d6158), _0x12c34c['closePath'](), fill_path(_0x12c34c, _0x24f51c[0x1], _0x24f51c[0x2], 0x8 * _0x2d6158), _0x12c34c['beginPath'](), _0x12c34c['lineCap'] = 'round', _0x12c34c['lineJoin'] = 'round', _0x12c34c['moveTo'](104.5 * _0x2d6158, 35.609375 * _0x2d6158), _0x12c34c['bezierCurveTo'](71.5 * _0x2d6158, 36.609375 * _0x2d6158, 57.5 * _0x2d6158, 52.609375 * _0x2d6158, 58.5 * _0x2d6158, 81.609375 * _0x2d6158), _0x12c34c['bezierCurveTo'](59.5 * _0x2d6158, 103.609375 * _0x2d6158, 66.5 * _0x2d6158, 107.609375 * _0x2d6158, 66.5 * _0x2d6158, 116.609375 * _0x2d6158), _0x12c34c['bezierCurveTo'](67.5 * _0x2d6158, 128.609375 * _0x2d6158, 65.5 * _0x2d6158, 131.609375 * _0x2d6158, 63.5 * _0x2d6158, 137.609375 * _0x2d6158), fill_path(_0x12c34c, undefined, _0x24f51c[0x2], 0x8 * _0x2d6158), _0x12c34c['beginPath'](), _0x12c34c['lineCap'] = 'round', _0x12c34c['lineJoin'] = 'round', _0x12c34c['moveTo'](59.5 * _0x2d6158, 72.609375 * _0x2d6158), _0x12c34c['bezierCurveTo'](38.5 * _0x2d6158, 80.609375 * _0x2d6158, 43.5 * _0x2d6158, 81.609375 * _0x2d6158, 37.5 * _0x2d6158, 89.609375 * _0x2d6158), fill_path(_0x12c34c, undefined, _0x24f51c[0x2], 0x4 * _0x2d6158), _0x12c34c['beginPath'](), _0x12c34c['lineCap'] = 'round', _0x12c34c['lineJoin'] = 'round', _0x12c34c['moveTo'](60.5 * _0x2d6158, 85.609375 * _0x2d6158), _0x12c34c['bezierCurveTo'](75.5 * _0x2d6158, 91.609375 * _0x2d6158, 76.5 * _0x2d6158, 96.609375 * _0x2d6158, 81.5 * _0x2d6158, 104.609375 * _0x2d6158), fill_path(_0x12c34c, undefined, _0x24f51c[0x2], 0x4 * _0x2d6158), _0x12c34c['beginPath'](), _0x12c34c['lineCap'] = 'round', _0x12c34c['lineJoin'] = 'round', _0x12c34c['moveTo'](68.5 * _0x2d6158, 122.609375 * _0x2d6158), _0x12c34c['bezierCurveTo'](79.5 * _0x2d6158, 130.609375 * _0x2d6158, 74.5 * _0x2d6158, 128.609375 * _0x2d6158, 80.5 * _0x2d6158, 134.609375 * _0x2d6158), fill_path(_0x12c34c, _0x24f51c[0x1], _0x24f51c[0x2], 0x4 * _0x2d6158), _0x12c34c['beginPath'](), _0x12c34c['lineCap'] = 'round', _0x12c34c['lineJoin'] = 'round', _0x12c34c['moveTo'](142.5 * _0x2d6158, 18.609375 * _0x2d6158), _0x12c34c['bezierCurveTo'](151.5 * _0x2d6158, 28.609375 * _0x2d6158, 151.5 * _0x2d6158, 32.609375 * _0x2d6158, 146.5 * _0x2d6158, 40.609375 * _0x2d6158), _0x12c34c['bezierCurveTo'](137.5 * _0x2d6158, 26.609375 * _0x2d6158, 138.5 * _0x2d6158, 24.609375 * _0x2d6158, 142.5 * _0x2d6158, 19.609375 * _0x2d6158), _0x12c34c['closePath'](), fill_path(_0x12c34c, _0x24f51c[0x3]), _0x12c34c['beginPath'](), _0x12c34c['lineCap'] = 'round', _0x12c34c['lineJoin'] = 'round', _0x12c34c['moveTo'](146.5 * _0x2d6158, 61.50892639160156 * _0x2d6158), _0x12c34c['bezierCurveTo'](157.5 * _0x2d6158, 69.50892639160156 * _0x2d6158, 150.5 * _0x2d6158, 79.50892639160156 * _0x2d6158, 145.5 * _0x2d6158, 81.50892639160156 * _0x2d6158), _0x12c34c['bezierCurveTo'](140.5 * _0x2d6158, 65.50892639160156 * _0x2d6158, 144.5 * _0x2d6158, 64.50892639160156 * _0x2d6158, 146.5 * _0x2d6158, 62.50892639160156 * _0x2d6158), _0x12c34c['closePath'](), fill_path(_0x12c34c, _0x24f51c[0x3]), _0x3d0b2f;
}

function create_ghost(_0x44a0f6, _0x52fde3, _0x7faba1) {
    var _0x7d1e51 = document['createElement']('canvas'),
        _0x4873f5 = _0x7d1e51['getContext']('2d');
    return _0x7d1e51['width'] = 0xfe * _0x44a0f6, _0x7d1e51['height'] = 0x120 * _0x44a0f6, _0x4873f5['translate'](0x0, 0x5), _0x4873f5['globalAlpha'] = 0.5, _0x4873f5['beginPath'](), _0x4873f5['lineCap'] = 'round', _0x4873f5['lineJoin'] = 'round', _0x4873f5['moveTo'](0xda * _0x44a0f6, 84.640625 * _0x44a0f6), _0x4873f5['bezierCurveTo'](0x96 * _0x44a0f6, 13.640625 * _0x44a0f6, 0xba * _0x44a0f6, 92.640625 * _0x44a0f6, 0xa8 * _0x44a0f6, 103.640625 * _0x44a0f6), _0x4873f5['bezierCurveTo'](0x97 * _0x44a0f6, 107.640625 * _0x44a0f6, 0x96 * _0x44a0f6, 61.640625 * _0x44a0f6, 0x90 * _0x44a0f6, 39.640625 * _0x44a0f6), _0x4873f5['bezierCurveTo'](0x87 * _0x44a0f6, 1.640625 * _0x44a0f6, 0x71 * _0x44a0f6, 2.640625 * _0x44a0f6, 0x6e * _0x44a0f6, 40.640625 * _0x44a0f6), _0x4873f5['bezierCurveTo'](0x6a * _0x44a0f6, 97.640625 * _0x44a0f6, 0x62 * _0x44a0f6, 102.640625 * _0x44a0f6, 0x53 * _0x44a0f6, 100.640625 * _0x44a0f6), _0x4873f5['bezierCurveTo'](0x44 * _0x44a0f6, 98.640625 * _0x44a0f6, 0x43 * _0x44a0f6, 77.640625 * _0x44a0f6, 0x46 * _0x44a0f6, 55.640625 * _0x44a0f6), _0x4873f5['bezierCurveTo'](0x4b * _0x44a0f6, 16.640625 * _0x44a0f6, 0x2f * _0x44a0f6, 52.640625 * _0x44a0f6, 0x26 * _0x44a0f6, 67.640625 * _0x44a0f6), _0x4873f5['bezierCurveTo'](0xa * _0x44a0f6, 113.640625 * _0x44a0f6, 0xa * _0x44a0f6, 181.640625 * _0x44a0f6, 0x17 * _0x44a0f6, 213.640625 * _0x44a0f6), _0x4873f5['bezierCurveTo'](0x2d * _0x44a0f6, 266.640625 * _0x44a0f6, 0x61 * _0x44a0f6, 277.640625 * _0x44a0f6, 0x93 * _0x44a0f6, 269.640625 * _0x44a0f6), _0x4873f5['bezierCurveTo'](0xd9 * _0x44a0f6, 259.640625 * _0x44a0f6, 0xec * _0x44a0f6, 221.640625 * _0x44a0f6, 0xef * _0x44a0f6, 166.640625 * _0x44a0f6), _0x4873f5['bezierCurveTo'](0xef * _0x44a0f6, 113.640625 * _0x44a0f6, 0xdf * _0x44a0f6, 90.640625 * _0x44a0f6, 0xdb * _0x44a0f6, 86.640625 * _0x44a0f6), _0x4873f5['closePath'](), fill_path(_0x4873f5, _0x7faba1[0x0], _0x7faba1[0x0], 0x4 * _0x44a0f6), circle(_0x4873f5, 0xaf * _0x44a0f6, 220.640625 * _0x44a0f6, 29.546573405388315 * _0x44a0f6), fill_path(_0x4873f5, _0x7faba1[0x0]), circle(_0x4873f5, 0x4f * _0x44a0f6, 222.640625 * _0x44a0f6, 28.178005607210743 * _0x44a0f6), fill_path(_0x4873f5, _0x7faba1[0x0]), circle(_0x4873f5, 0xaf * _0x44a0f6, 214.640625 * _0x44a0f6, 27.892651361962706 * _0x44a0f6), fill_path(_0x4873f5, _0x7faba1[0x0], _0x7faba1[0x0], 0x4 * _0x44a0f6), circle(_0x4873f5, 0x4f * _0x44a0f6, 215.640625 * _0x44a0f6, 26.570660511172846 * _0x44a0f6), fill_path(_0x4873f5, _0x7faba1[0x0], _0x7faba1[0x0], 0x4 * _0x44a0f6), _0x4873f5['translate'](0x0, -0x5), _0x4873f5['globalAlpha'] = 0x1, _0x4873f5['beginPath'](), _0x4873f5['lineCap'] = 'round', _0x4873f5['lineJoin'] = 'round', _0x4873f5['moveTo'](0xda * _0x44a0f6, 84.640625 * _0x44a0f6), _0x4873f5['bezierCurveTo'](0x96 * _0x44a0f6, 13.640625 * _0x44a0f6, 0xba * _0x44a0f6, 92.640625 * _0x44a0f6, 0xa8 * _0x44a0f6, 103.640625 * _0x44a0f6), _0x4873f5['bezierCurveTo'](0x97 * _0x44a0f6, 107.640625 * _0x44a0f6, 0x96 * _0x44a0f6, 61.640625 * _0x44a0f6, 0x90 * _0x44a0f6, 39.640625 * _0x44a0f6), _0x4873f5['bezierCurveTo'](0x87 * _0x44a0f6, 1.640625 * _0x44a0f6, 0x71 * _0x44a0f6, 2.640625 * _0x44a0f6, 0x6e * _0x44a0f6, 40.640625 * _0x44a0f6), _0x4873f5['bezierCurveTo'](0x6a * _0x44a0f6, 97.640625 * _0x44a0f6, 0x62 * _0x44a0f6, 102.640625 * _0x44a0f6, 0x53 * _0x44a0f6, 100.640625 * _0x44a0f6), _0x4873f5['bezierCurveTo'](0x44 * _0x44a0f6, 98.640625 * _0x44a0f6, 0x43 * _0x44a0f6, 77.640625 * _0x44a0f6, 0x46 * _0x44a0f6, 55.640625 * _0x44a0f6), _0x4873f5['bezierCurveTo'](0x4b * _0x44a0f6, 16.640625 * _0x44a0f6, 0x2f * _0x44a0f6, 52.640625 * _0x44a0f6, 0x26 * _0x44a0f6, 67.640625 * _0x44a0f6), _0x4873f5['bezierCurveTo'](0xa * _0x44a0f6, 113.640625 * _0x44a0f6, 0xa * _0x44a0f6, 181.640625 * _0x44a0f6, 0x17 * _0x44a0f6, 213.640625 * _0x44a0f6), _0x4873f5['bezierCurveTo'](0x2d * _0x44a0f6, 266.640625 * _0x44a0f6, 0x61 * _0x44a0f6, 277.640625 * _0x44a0f6, 0x93 * _0x44a0f6, 269.640625 * _0x44a0f6), _0x4873f5['bezierCurveTo'](0xd9 * _0x44a0f6, 259.640625 * _0x44a0f6, 0xec * _0x44a0f6, 221.640625 * _0x44a0f6, 0xef * _0x44a0f6, 166.640625 * _0x44a0f6), _0x4873f5['bezierCurveTo'](0xef * _0x44a0f6, 113.640625 * _0x44a0f6, 0xdf * _0x44a0f6, 90.640625 * _0x44a0f6, 0xdb * _0x44a0f6, 86.640625 * _0x44a0f6), _0x4873f5['closePath'](), fill_path(_0x4873f5, _0x7faba1[0x1], _0x7faba1[0x2], 0x4 * _0x44a0f6), circle(_0x4873f5, 0xaf * _0x44a0f6, 222.640625 * _0x44a0f6, 26.546573405388315 * _0x44a0f6), fill_path(_0x4873f5, _0x7faba1[0x3]), circle(_0x4873f5, 0x4f * _0x44a0f6, 222.640625 * _0x44a0f6, 26.178005607210743 * _0x44a0f6), fill_path(_0x4873f5, _0x7faba1[0x3]), circle(_0x4873f5, 0xaf * _0x44a0f6, 210.640625 * _0x44a0f6, 26.892651361962706 * _0x44a0f6), fill_path(_0x4873f5, _0x7faba1[0x4], _0x7faba1[0x5], 0x8 * _0x44a0f6), circle(_0x4873f5, 0x4f * _0x44a0f6, 210.640625 * _0x44a0f6, 26.570660511172846 * _0x44a0f6), fill_path(_0x4873f5, _0x7faba1[0x4], _0x7faba1[0x5], 0x8 * _0x44a0f6), _0x7d1e51;
}

function create_gemme_green(_0x6d7e85, _0x44cffb, _0x42c3ec) {
    var _0x263881 = document['createElement']('canvas'),
        _0x4538d3 = _0x263881['getContext']('2d');
    return _0x263881['width'] = 0x68 * _0x6d7e85, _0x263881['height'] = 0x75 * _0x6d7e85, _0x4538d3['beginPath'](), _0x4538d3['lineCap'] = 'round', _0x4538d3['lineJoin'] = 'round', _0x4538d3['moveTo'](0x4 * _0x6d7e85, 0x5a * _0x6d7e85), _0x4538d3['bezierCurveTo'](0x14 * _0x6d7e85, 99.5 * _0x6d7e85, 0x14 * _0x6d7e85, 99.5 * _0x6d7e85, 0x24 * _0x6d7e85, 0x6d * _0x6d7e85), _0x4538d3['bezierCurveTo'](0x43 * _0x6d7e85, 0x5c * _0x6d7e85, 0x43 * _0x6d7e85, 0x5c * _0x6d7e85, 0x62 * _0x6d7e85, 0x4b * _0x6d7e85), _0x4538d3['bezierCurveTo'](0x5b * _0x6d7e85, 0x1b * _0x6d7e85, 0x5b * _0x6d7e85, 0x1b * _0x6d7e85, 0x5b * _0x6d7e85, 0x1c * _0x6d7e85), _0x4538d3['bezierCurveTo'](72.5 * _0x6d7e85, 0x10 * _0x6d7e85, 72.5 * _0x6d7e85, 0x10 * _0x6d7e85, 0x36 * _0x6d7e85, 0x4 * _0x6d7e85), _0x4538d3['bezierCurveTo'](33.5 * _0x6d7e85, 0xa * _0x6d7e85, 33.5 * _0x6d7e85, 0xa * _0x6d7e85, 0xd * _0x6d7e85, 0x10 * _0x6d7e85), _0x4538d3['closePath'](), fill_path(_0x4538d3, _0x42c3ec[0x0]), _0x4538d3['beginPath'](), _0x4538d3['lineCap'] = 'round', _0x4538d3['lineJoin'] = 'round', _0x4538d3['moveTo'](0x6 * _0x6d7e85, 0x4c * _0x6d7e85), _0x4538d3['bezierCurveTo'](13.5 * _0x6d7e85, 51.5 * _0x6d7e85, 13.5 * _0x6d7e85, 51.5 * _0x6d7e85, 0x15 * _0x6d7e85, 0x1b * _0x6d7e85), _0x4538d3['bezierCurveTo'](37.5 * _0x6d7e85, 0x11 * _0x6d7e85, 37.5 * _0x6d7e85, 0x11 * _0x6d7e85, 0x36 * _0x6d7e85, 0x7 * _0x6d7e85), _0x4538d3['bezierCurveTo'](33.5 * _0x6d7e85, 12.5 * _0x6d7e85, 33.5 * _0x6d7e85, 12.5 * _0x6d7e85, 0xd * _0x6d7e85, 0x12 * _0x6d7e85), _0x4538d3['closePath'](), fill_path(_0x4538d3, _0x42c3ec[0x1]), _0x4538d3['beginPath'](), _0x4538d3['lineCap'] = 'round', _0x4538d3['lineJoin'] = 'round', _0x4538d3['moveTo'](0x18 * _0x6d7e85, 0x3e * _0x6d7e85), _0x4538d3['bezierCurveTo'](28.5 * _0x6d7e85, 0x35 * _0x6d7e85, 28.5 * _0x6d7e85, 0x35 * _0x6d7e85, 0x21 * _0x6d7e85, 0x2c * _0x6d7e85), _0x4538d3['bezierCurveTo'](41.5 * _0x6d7e85, 0x29 * _0x6d7e85, 41.5 * _0x6d7e85, 0x29 * _0x6d7e85, 0x32 * _0x6d7e85, 0x26 * _0x6d7e85), _0x4538d3['bezierCurveTo'](52.5 * _0x6d7e85, 0x23 * _0x6d7e85, 52.5 * _0x6d7e85, 0x23 * _0x6d7e85, 0x37 * _0x6d7e85, 0x20 * _0x6d7e85), _0x4538d3['bezierCurveTo'](0x34 * _0x6d7e85, 0x1e * _0x6d7e85, 0x34 * _0x6d7e85, 0x1e * _0x6d7e85, 0x31 * _0x6d7e85, 0x1c * _0x6d7e85), _0x4538d3['bezierCurveTo'](0x26 * _0x6d7e85, 31.5 * _0x6d7e85, 0x26 * _0x6d7e85, 31.5 * _0x6d7e85, 0x1b * _0x6d7e85, 0x23 * _0x6d7e85), _0x4538d3['closePath'](), fill_path(_0x4538d3, _0x42c3ec[0x1]), _0x4538d3['beginPath'](), _0x4538d3['lineCap'] = 'round', _0x4538d3['lineJoin'] = 'round', _0x4538d3['moveTo'](0x24 * _0x6d7e85, 0x6b * _0x6d7e85), _0x4538d3['bezierCurveTo'](0x42 * _0x6d7e85, 90.5 * _0x6d7e85, 0x42 * _0x6d7e85, 90.5 * _0x6d7e85, 0x60 * _0x6d7e85, 0x4a * _0x6d7e85), _0x4538d3['bezierCurveTo'](0x5d * _0x6d7e85, 52.5 * _0x6d7e85, 0x5d * _0x6d7e85, 52.5 * _0x6d7e85, 0x5a * _0x6d7e85, 0x1f * _0x6d7e85), _0x4538d3['bezierCurveTo'](0x57 * _0x6d7e85, 0x30 * _0x6d7e85, 0x57 * _0x6d7e85, 0x30 * _0x6d7e85, 0x54 * _0x6d7e85, 0x41 * _0x6d7e85), _0x4538d3['closePath'](), fill_path(_0x4538d3, _0x42c3ec[0x2]), _0x4538d3['beginPath'](), _0x4538d3['lineCap'] = 'round', _0x4538d3['lineJoin'] = 'round', _0x4538d3['moveTo'](0x1 * _0x6d7e85, 0x59 * _0x6d7e85), _0x4538d3['bezierCurveTo'](0x12 * _0x6d7e85, 0x64 * _0x6d7e85, 0x22 * _0x6d7e85, 0x6e * _0x6d7e85, 0x23 * _0x6d7e85, 0x6f * _0x6d7e85), _0x4538d3['bezierCurveTo'](0x43 * _0x6d7e85, 0x5d * _0x6d7e85, 0x43 * _0x6d7e85, 0x5d * _0x6d7e85, 0x63 * _0x6d7e85, 0x4b * _0x6d7e85), _0x4538d3['bezierCurveTo'](0x64 * _0x6d7e85, 78.5 * _0x6d7e85, 0x64 * _0x6d7e85, 78.5 * _0x6d7e85, 0x65 * _0x6d7e85, 0x52 * _0x6d7e85), _0x4538d3['bezierCurveTo'](0x44 * _0x6d7e85, 0x63 * _0x6d7e85, 0x44 * _0x6d7e85, 0x63 * _0x6d7e85, 0x23 * _0x6d7e85, 0x74 * _0x6d7e85), _0x4538d3['bezierCurveTo'](0x12 * _0x6d7e85, 106.5 * _0x6d7e85, 0x12 * _0x6d7e85, 106.5 * _0x6d7e85, 0x1 * _0x6d7e85, 0x61 * _0x6d7e85), _0x4538d3['closePath'](), fill_path(_0x4538d3, _0x42c3ec[0x3]), _0x4538d3['beginPath'](), _0x4538d3['lineCap'] = 'round', _0x4538d3['lineJoin'] = 'round', _0x4538d3['moveTo'](0x24 * _0x6d7e85, 0x6b * _0x6d7e85), _0x4538d3['bezierCurveTo'](66.5 * _0x6d7e85, 91.5 * _0x6d7e85, 66.5 * _0x6d7e85, 91.5 * _0x6d7e85, 0x61 * _0x6d7e85, 0x4c * _0x6d7e85), _0x4538d3['bezierCurveTo'](94.5 * _0x6d7e85, 0x34 * _0x6d7e85, 94.5 * _0x6d7e85, 0x34 * _0x6d7e85, 0x5c * _0x6d7e85, 0x1c * _0x6d7e85), _0x4538d3['bezierCurveTo'](0x49 * _0x6d7e85, 15.5 * _0x6d7e85, 0x49 * _0x6d7e85, 15.5 * _0x6d7e85, 0x36 * _0x6d7e85, 0x3 * _0x6d7e85), _0x4538d3['bezierCurveTo'](0x21 * _0x6d7e85, 9.5 * _0x6d7e85, 0x21 * _0x6d7e85, 9.5 * _0x6d7e85, 0xc * _0x6d7e85, 0x10 * _0x6d7e85), _0x4538d3['bezierCurveTo'](0x8 * _0x6d7e85, 0x35 * _0x6d7e85, 0x8 * _0x6d7e85, 0x35 * _0x6d7e85, 0x4 * _0x6d7e85, 0x5a * _0x6d7e85), _0x4538d3['bezierCurveTo'](18.5 * _0x6d7e85, 0x63 * _0x6d7e85, 18.5 * _0x6d7e85, 0x63 * _0x6d7e85, 0x21 * _0x6d7e85, 0x6c * _0x6d7e85), _0x4538d3['closePath'](), fill_path(_0x4538d3, undefined, _0x42c3ec[0x4], 0x6 * _0x6d7e85), _0x4538d3['beginPath'](), _0x4538d3['lineCap'] = 'round', _0x4538d3['lineJoin'] = 'round', _0x4538d3['moveTo'](0x16 * _0x6d7e85, 0x47 * _0x6d7e85), _0x4538d3['bezierCurveTo'](0x1e * _0x6d7e85, 76.5 * _0x6d7e85, 0x1e * _0x6d7e85, 76.5 * _0x6d7e85, 0x26 * _0x6d7e85, 0x52 * _0x6d7e85), _0x4538d3['bezierCurveTo'](0x35 * _0x6d7e85, 0x48 * _0x6d7e85, 0x35 * _0x6d7e85, 0x48 * _0x6d7e85, 0x44 * _0x6d7e85, 0x3e * _0x6d7e85), _0x4538d3['bezierCurveTo'](0x44 * _0x6d7e85, 0x34 * _0x6d7e85, 0x44 * _0x6d7e85, 0x34 * _0x6d7e85, 0x44 * _0x6d7e85, 0x2a * _0x6d7e85), _0x4538d3['bezierCurveTo'](59.5 * _0x6d7e85, 35.5 * _0x6d7e85, 59.5 * _0x6d7e85, 35.5 * _0x6d7e85, 0x33 * _0x6d7e85, 0x1d * _0x6d7e85), _0x4538d3['bezierCurveTo'](39.5 * _0x6d7e85, 0x20 * _0x6d7e85, 39.5 * _0x6d7e85, 0x20 * _0x6d7e85, 0x1c * _0x6d7e85, 0x23 * _0x6d7e85), _0x4538d3['bezierCurveTo'](0x19 * _0x6d7e85, 0x34 * _0x6d7e85, 0x19 * _0x6d7e85, 0x34 * _0x6d7e85, 0x16 * _0x6d7e85, 0x45 * _0x6d7e85), _0x4538d3['closePath'](), fill_path(_0x4538d3, undefined, _0x42c3ec[0x4], 0x6 * _0x6d7e85), _0x4538d3['beginPath'](), _0x4538d3['lineCap'] = 'round', _0x4538d3['lineJoin'] = 'round', _0x4538d3['moveTo'](0x5 * _0x6d7e85, 0x59 * _0x6d7e85), _0x4538d3['bezierCurveTo'](0x14 * _0x6d7e85, 0x49 * _0x6d7e85, 12.5 * _0x6d7e85, 80.5 * _0x6d7e85, 0x14 * _0x6d7e85, 0x48 * _0x6d7e85), _0x4538d3['closePath'](), fill_path(_0x4538d3, undefined, _0x42c3ec[0x4], 0x6 * _0x6d7e85), _0x4538d3['beginPath'](), _0x4538d3['lineCap'] = 'round', _0x4538d3['lineJoin'] = 'round', _0x4538d3['moveTo'](0x23 * _0x6d7e85, 0x66 * _0x6d7e85), _0x4538d3['bezierCurveTo'](0x24 * _0x6d7e85, 92.5 * _0x6d7e85, 0x24 * _0x6d7e85, 92.5 * _0x6d7e85, 0x25 * _0x6d7e85, 0x53 * _0x6d7e85), _0x4538d3['closePath'](), fill_path(_0x4538d3, undefined, _0x42c3ec[0x4], 0x6 * _0x6d7e85), _0x4538d3['beginPath'](), _0x4538d3['lineCap'] = 'round', _0x4538d3['lineJoin'] = 'round', _0x4538d3['moveTo'](0x44 * _0x6d7e85, 0x3e * _0x6d7e85), _0x4538d3['bezierCurveTo'](0x51 * _0x6d7e85, 67.5 * _0x6d7e85, 0x51 * _0x6d7e85, 67.5 * _0x6d7e85, 0x5e * _0x6d7e85, 0x49 * _0x6d7e85), _0x4538d3['closePath'](), fill_path(_0x4538d3, undefined, _0x42c3ec[0x4], 0x6 * _0x6d7e85), _0x4538d3['beginPath'](), _0x4538d3['lineCap'] = 'round', _0x4538d3['lineJoin'] = 'round', _0x4538d3['moveTo'](0x46 * _0x6d7e85, 0x29 * _0x6d7e85), _0x4538d3['bezierCurveTo'](0x50 * _0x6d7e85, 35.5 * _0x6d7e85, 0x50 * _0x6d7e85, 35.5 * _0x6d7e85, 0x5a * _0x6d7e85, 0x1e * _0x6d7e85), _0x4538d3['closePath'](), fill_path(_0x4538d3, undefined, _0x42c3ec[0x4], 0x6 * _0x6d7e85), _0x4538d3['beginPath'](), _0x4538d3['lineCap'] = 'round', _0x4538d3['lineJoin'] = 'round', _0x4538d3['moveTo'](0x1c * _0x6d7e85, 0x21 * _0x6d7e85), _0x4538d3['bezierCurveTo'](21.5 * _0x6d7e85, 26.5 * _0x6d7e85, 21.5 * _0x6d7e85, 26.5 * _0x6d7e85, 0xf * _0x6d7e85, 0x14 * _0x6d7e85), _0x4538d3['closePath'](), fill_path(_0x4538d3, undefined, _0x42c3ec[0x4], 0x6 * _0x6d7e85), _0x4538d3['beginPath'](), _0x4538d3['lineCap'] = 'round', _0x4538d3['lineJoin'] = 'round', _0x4538d3['moveTo'](0x33 * _0x6d7e85, 0x1c * _0x6d7e85), _0x4538d3['bezierCurveTo'](0x35 * _0x6d7e85, 0x11 * _0x6d7e85, 0x35 * _0x6d7e85, 0x11 * _0x6d7e85, 0x37 * _0x6d7e85, 0x6 * _0x6d7e85), _0x4538d3['closePath'](), fill_path(_0x4538d3, undefined, _0x42c3ec[0x4], 0x6 * _0x6d7e85), _0x263881;
}

function create_superhammer(_0x341145, _0x233ebe, _0x3abbc4) {
    var _0x9b9c8b = document['createElement']('canvas'),
        _0x19c754 = _0x9b9c8b['getContext']('2d');
    return _0x9b9c8b['width'] = 0x69 * _0x341145, _0x9b9c8b['height'] = 0x90 * _0x341145, _0x19c754['globalAlpha'] = _0x233ebe ? 0.5 : 0x1, _0x19c754['translate'](-0x5 * _0x341145, 0x0 * _0x341145), _0x19c754['save'](), _0x19c754['translate'](52.5 * _0x341145, 91.5 * _0x341145), round_rect(_0x19c754, -4.5 * _0x341145, -0x27 * _0x341145, 0x9 * _0x341145, 0x4e * _0x341145, 0x5 * _0x341145), _0x19c754['restore'](), fill_path(_0x19c754, _0x3abbc4[0x0], _0x3abbc4[0x0], 0x3 * _0x341145), _0x19c754['save'](), _0x19c754['translate'](0x35 * _0x341145, 0x24 * _0x341145), round_rect(_0x19c754, -0x1d * _0x341145, -17.5 * _0x341145, 0x3a * _0x341145, 0x23 * _0x341145, 0x5 * _0x341145), _0x19c754['restore'](), fill_path(_0x19c754, _0x3abbc4[0x0], _0x3abbc4[0x0], 0x4 * _0x341145), _0x19c754['save'](), _0x19c754['translate'](53.5 * _0x341145, 35.5 * _0x341145), round_rect(_0x19c754, -26.5 * _0x341145, -0xf * _0x341145, 0x35 * _0x341145, 0x1e * _0x341145, 0x5 * _0x341145), _0x19c754['restore'](), fill_path(_0x19c754, _0x3abbc4[0x0], _0x3abbc4[0x0], 0x4 * _0x341145), _0x19c754['translate'](0x5 * _0x341145, 0x0 * _0x341145), _0x19c754['globalAlpha'] = 0x1, _0x19c754['save'](), _0x19c754['translate'](52.5 * _0x341145, 91.5 * _0x341145), round_rect(_0x19c754, -4.5 * _0x341145, -0x27 * _0x341145, 0x9 * _0x341145, 0x4e * _0x341145, 0x5 * _0x341145), _0x19c754['restore'](), fill_path(_0x19c754, _0x3abbc4[0x1], _0x3abbc4[0x2], 0x3 * _0x341145), _0x19c754['save'](), _0x19c754['translate'](0x35 * _0x341145, 0x24 * _0x341145), round_rect(_0x19c754, -0x1d * _0x341145, -17.5 * _0x341145, 0x3a * _0x341145, 0x23 * _0x341145, 0x5 * _0x341145), _0x19c754['restore'](), fill_path(_0x19c754, _0x3abbc4[0x3], _0x3abbc4[0x4], 0x4 * _0x341145), _0x19c754['save'](), _0x19c754['translate'](53.5 * _0x341145, 35.5 * _0x341145), round_rect(_0x19c754, -26.5 * _0x341145, -0xf * _0x341145, 0x35 * _0x341145, 0x1e * _0x341145, 0x5 * _0x341145), _0x19c754['restore'](), fill_path(_0x19c754, _0x3abbc4[0x5], _0x3abbc4[0x6], 0x4 * _0x341145), _0x19c754['beginPath'](), _0x19c754['lineCap'] = 'round', _0x19c754['lineJoin'] = 'round', _0x19c754['moveTo'](0x31 * _0x341145, 60.5 * _0x341145), _0x19c754['bezierCurveTo'](0x2c * _0x341145, 56.5 * _0x341145, 0x2c * _0x341145, 56.5 * _0x341145, 0x27 * _0x341145, 52.5 * _0x341145), _0x19c754['bezierCurveTo'](0x27 * _0x341145, 46.5 * _0x341145, 0x27 * _0x341145, 46.5 * _0x341145, 0x27 * _0x341145, 40.5 * _0x341145), _0x19c754['bezierCurveTo'](0x2c * _0x341145, 0x2c * _0x341145, 0x2c * _0x341145, 0x2c * _0x341145, 0x31 * _0x341145, 47.5 * _0x341145), _0x19c754['bezierCurveTo'](0x31 * _0x341145, 0x36 * _0x341145, 0x31 * _0x341145, 0x36 * _0x341145, 0x31 * _0x341145, 60.5 * _0x341145), _0x19c754['closePath'](), fill_path(_0x19c754, _0x3abbc4[0x7], _0x3abbc4[0x6], 0x3 * _0x341145), _0x19c754['beginPath'](), _0x19c754['lineCap'] = 'round', _0x19c754['lineJoin'] = 'round', _0x19c754['moveTo'](0x42 * _0x341145, 40.5 * _0x341145), _0x19c754['bezierCurveTo'](0x42 * _0x341145, 46.5 * _0x341145, 0x42 * _0x341145, 46.5 * _0x341145, 0x42 * _0x341145, 52.5 * _0x341145), _0x19c754['bezierCurveTo'](60.5 * _0x341145, 56.5 * _0x341145, 60.5 * _0x341145, 56.5 * _0x341145, 0x37 * _0x341145, 60.5 * _0x341145), _0x19c754['bezierCurveTo'](0x38 * _0x341145, 0x35 * _0x341145, 0x38 * _0x341145, 0x35 * _0x341145, 0x39 * _0x341145, 45.5 * _0x341145), _0x19c754['bezierCurveTo'](61.5 * _0x341145, 0x2b * _0x341145, 61.5 * _0x341145, 0x2b * _0x341145, 0x42 * _0x341145, 40.5 * _0x341145), _0x19c754['closePath'](), fill_path(_0x19c754, _0x3abbc4[0x7], _0x3abbc4[0x6], 0x3 * _0x341145), _0x19c754['beginPath'](), _0x19c754['lineCap'] = 'round', _0x19c754['lineJoin'] = 'round', _0x19c754['moveTo'](0x34 * _0x341145, 33.5 * _0x341145), _0x19c754['bezierCurveTo'](55.5 * _0x341145, 0x29 * _0x341145, 55.5 * _0x341145, 0x29 * _0x341145, 0x3b * _0x341145, 48.5 * _0x341145), _0x19c754['bezierCurveTo'](0x38 * _0x341145, 0x3a * _0x341145, 0x38 * _0x341145, 0x3a * _0x341145, 0x35 * _0x341145, 67.5 * _0x341145), _0x19c754['bezierCurveTo'](0x31 * _0x341145, 0x3a * _0x341145, 0x31 * _0x341145, 0x3a * _0x341145, 0x2d * _0x341145, 48.5 * _0x341145), _0x19c754['bezierCurveTo'](48.5 * _0x341145, 0x29 * _0x341145, 48.5 * _0x341145, 0x29 * _0x341145, 0x34 * _0x341145, 33.5 * _0x341145), _0x19c754['closePath'](), fill_path(_0x19c754, _0x3abbc4[0x9], _0x3abbc4[0x8], 0x3 * _0x341145), _0x19c754['beginPath'](), _0x19c754['lineCap'] = 'round', _0x19c754['lineJoin'] = 'round', _0x19c754['moveTo'](0x34 * _0x341145, 47.5 * _0x341145), _0x19c754['bezierCurveTo'](54.5 * _0x341145, 50.5 * _0x341145, 54.5 * _0x341145, 50.5 * _0x341145, 0x39 * _0x341145, 53.5 * _0x341145), _0x19c754['bezierCurveTo'](0x37 * _0x341145, 0x3c * _0x341145, 0x37 * _0x341145, 0x3c * _0x341145, 0x35 * _0x341145, 66.5 * _0x341145), _0x19c754['bezierCurveTo'](50.5 * _0x341145, 0x3d * _0x341145, 50.5 * _0x341145, 0x3d * _0x341145, 0x30 * _0x341145, 55.5 * _0x341145), _0x19c754['bezierCurveTo'](0x32 * _0x341145, 0x34 * _0x341145, 0x32 * _0x341145, 0x34 * _0x341145, 0x34 * _0x341145, 48.5 * _0x341145), _0x19c754['closePath'](), fill_path(_0x19c754, _0x3abbc4[0xb], _0x3abbc4[0xa], 0x3 * _0x341145), _0x9b9c8b;
}

function create_dragon_sword(_0x371a01, _0x2d26a4, _0x5b8e84) {
    var _0x50cb93 = document['createElement']('canvas'),
        _0xef2fd7 = _0x50cb93['getContext']('2d');
    return _0x50cb93['width'] = 0x2e * _0x371a01, _0x50cb93['height'] = 0x8c * _0x371a01, _0xef2fd7['scale'](-0x1 * _0x371a01, 0x1 * _0x371a01), _0xef2fd7['translate'](-0x32 * _0x371a01, 0x28 * _0x371a01), _0xef2fd7['translate'](-0x14 * _0x371a01, 0x0), _0xef2fd7['globalAlpha'] = _0x2d26a4 ? 0.5 : 0x1, _0xef2fd7['translate'](0xa * _0x371a01, 0x0), _0xef2fd7['beginPath'](), _0xef2fd7['lineCap'] = 'round', _0xef2fd7['lineJoin'] = 'round', _0xef2fd7['moveTo'](22.599990844726562 * _0x371a01, 85.94999694824219 * _0x371a01), _0xef2fd7['bezierCurveTo'](17.599990844726562 * _0x371a01, 83.94999694824219 * _0x371a01, 17.599990844726562 * _0x371a01, 83.94999694824219 * _0x371a01, 12.599990844726562 * _0x371a01, 81.94999694824219 * _0x371a01), _0xef2fd7['bezierCurveTo'](19.599990844726562 * _0x371a01, 73.94999694824219 * _0x371a01, 2.5999908447265625 * _0x371a01, 22.949996948242188 * _0x371a01, 33.59999084472656 * _0x371a01, 7.9499969482421875 * _0x371a01), _0xef2fd7['bezierCurveTo'](27.599990844726562 * _0x371a01, 28.949996948242188 * _0x371a01, 33.59999084472656 * _0x371a01, 26.949996948242188 * _0x371a01, 35.59999084472656 * _0x371a01, 32.94999694824219 * _0x371a01), _0xef2fd7['bezierCurveTo'](25.599990844726562 * _0x371a01, 59.94999694824219 * _0x371a01, 26.599990844726562 * _0x371a01, 69.94999694824219 * _0x371a01, 29.599990844726562 * _0x371a01, 82.94999694824219 * _0x371a01), _0xef2fd7['closePath'](), fill_path(_0xef2fd7, _0x5b8e84[0x0]), _0xef2fd7['beginPath'](), _0xef2fd7['lineCap'] = 'round', _0xef2fd7['lineJoin'] = 'round', _0xef2fd7['translate'](-0x1 * _0x371a01, 0x0), _0xef2fd7['moveTo'](17.599990844726562 * _0x371a01, 89.75 * _0x371a01), _0xef2fd7['bezierCurveTo'](24.599990844726562 * _0x371a01, 99.75 * _0x371a01, 24.599990844726562 * _0x371a01, 101.75 * _0x371a01, 20.599990844726562 * _0x371a01, 111.75 * _0x371a01), _0xef2fd7['bezierCurveTo'](28.599990844726562 * _0x371a01, 110.75 * _0x371a01, 26.599990844726562 * _0x371a01, 112.75 * _0x371a01, 28.599990844726562 * _0x371a01, 111.75 * _0x371a01), _0xef2fd7['bezierCurveTo'](30.599990844726562 * _0x371a01, 96.75 * _0x371a01, 32.59999084472656 * _0x371a01, 96.75 * _0x371a01, 30.599990844726562 * _0x371a01, 87.75 * _0x371a01), _0xef2fd7['closePath'](), fill_path(_0xef2fd7, _0x5b8e84[0x0]), _0xef2fd7['beginPath'](), _0xef2fd7['lineCap'] = 'round', _0xef2fd7['lineJoin'] = 'round', _0xef2fd7['translate'](0x1 * _0x371a01, 0x0), _0xef2fd7['moveTo'](7.5999908447265625 * _0x371a01, 86.34999084472656 * _0x371a01), _0xef2fd7['bezierCurveTo'](12.599990844726562 * _0x371a01, 85.34999084472656 * _0x371a01, 14.599990844726562 * _0x371a01, 84.34999084472656 * _0x371a01, 13.599990844726562 * _0x371a01, 84.34999084472656 * _0x371a01), _0xef2fd7['bezierCurveTo'](21.599990844726562 * _0x371a01, 83.34999084472656 * _0x371a01, 21.599990844726562 * _0x371a01, 83.34999084472656 * _0x371a01, 29.599990844726562 * _0x371a01, 82.34999084472656 * _0x371a01), _0xef2fd7['bezierCurveTo'](33.59999084472656 * _0x371a01, 85.84999084472656 * _0x371a01, 33.59999084472656 * _0x371a01, 85.84999084472656 * _0x371a01, 37.59999084472656 * _0x371a01, 89.34999084472656 * _0x371a01), _0xef2fd7['bezierCurveTo'](34.09999084472656 * _0x371a01, 91.84999084472656 * _0x371a01, 34.09999084472656 * _0x371a01, 91.84999084472656 * _0x371a01, 30.599990844726562 * _0x371a01, 94.34999084472656 * _0x371a01), _0xef2fd7['bezierCurveTo'](21.099990844726562 * _0x371a01, 93.34999084472656 * _0x371a01, 21.099990844726562 * _0x371a01, 93.34999084472656 * _0x371a01, 11.599990844726562 * _0x371a01, 92.34999084472656 * _0x371a01), _0xef2fd7['closePath'](), fill_path(_0xef2fd7, _0x5b8e84[0x0]), _0xef2fd7['save'](), _0xef2fd7['translate'](23.599990844726562 * _0x371a01, 110.94999694824219 * _0x371a01), _0xef2fd7['rotate'](0x0), round_rect(_0xef2fd7, -0x7 * _0x371a01, -0x4 * _0x371a01, 0xe * _0x371a01, 0x8 * _0x371a01, 0xa * _0x371a01), _0xef2fd7['restore'](), fill_path(_0xef2fd7, _0x5b8e84[0x0]), _0xef2fd7['translate'](0x0 * _0x371a01, 0x0), _0xef2fd7['globalAlpha'] = 0x1, _0xef2fd7['translate'](0xa * _0x371a01, 0x0), _0xef2fd7['beginPath'](), _0xef2fd7['lineCap'] = 'round', _0xef2fd7['lineJoin'] = 'round', _0xef2fd7['moveTo'](22.599990844726562 * _0x371a01, 85.94999694824219 * _0x371a01), _0xef2fd7['bezierCurveTo'](17.599990844726562 * _0x371a01, 83.94999694824219 * _0x371a01, 17.599990844726562 * _0x371a01, 83.94999694824219 * _0x371a01, 12.599990844726562 * _0x371a01, 81.94999694824219 * _0x371a01), _0xef2fd7['bezierCurveTo'](19.599990844726562 * _0x371a01, 73.94999694824219 * _0x371a01, 2.5999908447265625 * _0x371a01, 22.949996948242188 * _0x371a01, 33.59999084472656 * _0x371a01, 7.9499969482421875 * _0x371a01), _0xef2fd7['bezierCurveTo'](27.599990844726562 * _0x371a01, 28.949996948242188 * _0x371a01, 33.59999084472656 * _0x371a01, 26.949996948242188 * _0x371a01, 35.59999084472656 * _0x371a01, 32.94999694824219 * _0x371a01), _0xef2fd7['bezierCurveTo'](25.599990844726562 * _0x371a01, 59.94999694824219 * _0x371a01, 26.599990844726562 * _0x371a01, 69.94999694824219 * _0x371a01, 29.599990844726562 * _0x371a01, 82.94999694824219 * _0x371a01), _0xef2fd7['closePath'](), fill_path(_0xef2fd7, _0x5b8e84[0x3], _0x5b8e84[0x4], 0x3 * _0x371a01), _0xef2fd7['beginPath'](), _0xef2fd7['lineCap'] = 'round', _0xef2fd7['lineJoin'] = 'round', _0xef2fd7['translate'](-0x1 * _0x371a01, 0x0), _0xef2fd7['moveTo'](17.599990844726562 * _0x371a01, 89.75 * _0x371a01), _0xef2fd7['bezierCurveTo'](24.599990844726562 * _0x371a01, 99.75 * _0x371a01, 24.599990844726562 * _0x371a01, 101.75 * _0x371a01, 20.599990844726562 * _0x371a01, 111.75 * _0x371a01), _0xef2fd7['bezierCurveTo'](28.599990844726562 * _0x371a01, 110.75 * _0x371a01, 26.599990844726562 * _0x371a01, 112.75 * _0x371a01, 28.599990844726562 * _0x371a01, 111.75 * _0x371a01), _0xef2fd7['bezierCurveTo'](30.599990844726562 * _0x371a01, 96.75 * _0x371a01, 32.59999084472656 * _0x371a01, 96.75 * _0x371a01, 30.599990844726562 * _0x371a01, 87.75 * _0x371a01), _0xef2fd7['closePath'](), fill_path(_0xef2fd7, _0x5b8e84[0x1], _0x5b8e84[0x2], 0x3 * _0x371a01), _0xef2fd7['beginPath'](), _0xef2fd7['lineCap'] = 'round', _0xef2fd7['lineJoin'] = 'round', _0xef2fd7['translate'](0x1 * _0x371a01, 0x0), _0xef2fd7['moveTo'](7.5999908447265625 * _0x371a01, 86.34999084472656 * _0x371a01), _0xef2fd7['bezierCurveTo'](12.599990844726562 * _0x371a01, 85.34999084472656 * _0x371a01, 14.599990844726562 * _0x371a01, 84.34999084472656 * _0x371a01, 13.599990844726562 * _0x371a01, 84.34999084472656 * _0x371a01), _0xef2fd7['bezierCurveTo'](21.599990844726562 * _0x371a01, 83.34999084472656 * _0x371a01, 21.599990844726562 * _0x371a01, 83.34999084472656 * _0x371a01, 29.599990844726562 * _0x371a01, 82.34999084472656 * _0x371a01), _0xef2fd7['bezierCurveTo'](33.59999084472656 * _0x371a01, 85.84999084472656 * _0x371a01, 33.59999084472656 * _0x371a01, 85.84999084472656 * _0x371a01, 37.59999084472656 * _0x371a01, 89.34999084472656 * _0x371a01), _0xef2fd7['bezierCurveTo'](34.09999084472656 * _0x371a01, 91.84999084472656 * _0x371a01, 34.09999084472656 * _0x371a01, 91.84999084472656 * _0x371a01, 30.599990844726562 * _0x371a01, 94.34999084472656 * _0x371a01), _0xef2fd7['bezierCurveTo'](21.099990844726562 * _0x371a01, 93.34999084472656 * _0x371a01, 21.099990844726562 * _0x371a01, 93.34999084472656 * _0x371a01, 11.599990844726562 * _0x371a01, 92.34999084472656 * _0x371a01), _0xef2fd7['closePath'](), fill_path(_0xef2fd7, _0x5b8e84[0x1], _0x5b8e84[0x2], 0x3 * _0x371a01), _0xef2fd7['save'](), _0xef2fd7['translate'](23.599990844726562 * _0x371a01, 110.94999694824219 * _0x371a01), _0xef2fd7['rotate'](0x0), round_rect(_0xef2fd7, -0x7 * _0x371a01, -0x4 * _0x371a01, 0xe * _0x371a01, 0x8 * _0x371a01, 0xa * _0x371a01), _0xef2fd7['restore'](), fill_path(_0xef2fd7, _0x5b8e84[0x1], _0x5b8e84[0x2], 0x3 * _0x371a01), _0x50cb93;
}

function create_cursed_sword(_0x37ca96, _0x5df1ae, _0x773c68) {
    var _0x444d1c = document['createElement']('canvas'),
        _0x366db4 = _0x444d1c['getContext']('2d');
    return _0x444d1c['width'] = 0x41 * _0x37ca96, _0x444d1c['height'] = 0x83 * _0x37ca96, _0x366db4['globalAlpha'] = _0x5df1ae ? 0.5 : 0x1, _0x366db4['translate'](0x3, 0x0), _0x366db4['beginPath'](), _0x366db4['lineCap'] = 'round', _0x366db4['lineJoin'] = 'round', _0x366db4['moveTo'](21.25 * _0x37ca96, 88.9375 * _0x37ca96), _0x366db4['bezierCurveTo'](19.25 * _0x37ca96, 57.9375 * _0x37ca96, 19.25 * _0x37ca96, 57.9375 * _0x37ca96, 17.25 * _0x37ca96, 26.9375 * _0x37ca96), _0x366db4['bezierCurveTo'](24.25 * _0x37ca96, 20.9375 * _0x37ca96, 24.25 * _0x37ca96, 20.9375 * _0x37ca96, 31.25 * _0x37ca96, 14.9375 * _0x37ca96), _0x366db4['bezierCurveTo'](32.75 * _0x37ca96, 54.4375 * _0x37ca96, 32.75 * _0x37ca96, 54.4375 * _0x37ca96, 34.25 * _0x37ca96, 93.9375 * _0x37ca96), _0x366db4['closePath'](), fill_path(_0x366db4, _0x773c68[0x0]), _0x366db4['beginPath'](), _0x366db4['lineCap'] = 'round', _0x366db4['lineJoin'] = 'round', _0x366db4['moveTo'](30.25 * _0x37ca96, 5.9375 * _0x37ca96), _0x366db4['bezierCurveTo'](39.25 * _0x37ca96, 14.9375 * _0x37ca96, 39.25 * _0x37ca96, 14.9375 * _0x37ca96, 48.25 * _0x37ca96, 23.9375 * _0x37ca96), _0x366db4['bezierCurveTo'](44.75 * _0x37ca96, 56.4375 * _0x37ca96, 44.75 * _0x37ca96, 56.4375 * _0x37ca96, 41.25 * _0x37ca96, 88.9375 * _0x37ca96), _0x366db4['bezierCurveTo'](36.25 * _0x37ca96, 88.9375 * _0x37ca96, 36.25 * _0x37ca96, 88.9375 * _0x37ca96, 31.25 * _0x37ca96, 88.9375 * _0x37ca96), _0x366db4['bezierCurveTo'](30.75 * _0x37ca96, 47.9375 * _0x37ca96, 30.75 * _0x37ca96, 47.9375 * _0x37ca96, 30.25 * _0x37ca96, 6.9375 * _0x37ca96), _0x366db4['closePath'](), fill_path(_0x366db4, _0x773c68[0x0], _0x773c68[0x0], 0x4 * _0x37ca96), _0x366db4['beginPath'](), _0x366db4['lineCap'] = 'round', _0x366db4['lineJoin'] = 'round', _0x366db4['moveTo'](7.25 * _0x37ca96, 85.4375 * _0x37ca96), _0x366db4['bezierCurveTo'](31.75 * _0x37ca96, 85.4375 * _0x37ca96, 31.75 * _0x37ca96, 85.4375 * _0x37ca96, 56.25 * _0x37ca96, 85.4375 * _0x37ca96), _0x366db4['bezierCurveTo'](51.25 * _0x37ca96, 91.9375 * _0x37ca96, 51.25 * _0x37ca96, 91.9375 * _0x37ca96, 46.25 * _0x37ca96, 98.4375 * _0x37ca96), _0x366db4['bezierCurveTo'](30.25 * _0x37ca96, 98.4375 * _0x37ca96, 30.25 * _0x37ca96, 98.4375 * _0x37ca96, 14.25 * _0x37ca96, 98.4375 * _0x37ca96), _0x366db4['closePath'](), fill_path(_0x366db4, _0x773c68[0x0], _0x773c68[0x0], 0x4 * _0x37ca96), _0x366db4['save'](), _0x366db4['translate'](31.25 * _0x37ca96, 108.9375 * _0x37ca96), round_rect(_0x366db4, -0x6 * _0x37ca96, -14.5 * _0x37ca96, 0xc * _0x37ca96, 0x1d * _0x37ca96, 0xa * _0x37ca96), _0x366db4['restore'](), _0x366db4['globalAlpha'] = 0x1, _0x366db4['translate'](-0x3, 0x0), _0x366db4['beginPath'](), _0x366db4['lineCap'] = 'round', _0x366db4['lineJoin'] = 'round', _0x366db4['moveTo'](21.25 * _0x37ca96, 88.9375 * _0x37ca96), _0x366db4['bezierCurveTo'](19.25 * _0x37ca96, 57.9375 * _0x37ca96, 19.25 * _0x37ca96, 57.9375 * _0x37ca96, 17.25 * _0x37ca96, 26.9375 * _0x37ca96), _0x366db4['bezierCurveTo'](24.25 * _0x37ca96, 20.9375 * _0x37ca96, 24.25 * _0x37ca96, 20.9375 * _0x37ca96, 31.25 * _0x37ca96, 14.9375 * _0x37ca96), _0x366db4['bezierCurveTo'](32.75 * _0x37ca96, 54.4375 * _0x37ca96, 32.75 * _0x37ca96, 54.4375 * _0x37ca96, 34.25 * _0x37ca96, 93.9375 * _0x37ca96), _0x366db4['closePath'](), fill_path(_0x366db4, _0x773c68[0x1]), _0x366db4['beginPath'](), _0x366db4['lineCap'] = 'round', _0x366db4['lineJoin'] = 'round', _0x366db4['moveTo'](30.25 * _0x37ca96, 5.9375 * _0x37ca96), _0x366db4['bezierCurveTo'](39.25 * _0x37ca96, 14.9375 * _0x37ca96, 39.25 * _0x37ca96, 14.9375 * _0x37ca96, 48.25 * _0x37ca96, 23.9375 * _0x37ca96), _0x366db4['bezierCurveTo'](44.75 * _0x37ca96, 56.4375 * _0x37ca96, 44.75 * _0x37ca96, 56.4375 * _0x37ca96, 41.25 * _0x37ca96, 88.9375 * _0x37ca96), _0x366db4['bezierCurveTo'](36.25 * _0x37ca96, 88.9375 * _0x37ca96, 36.25 * _0x37ca96, 88.9375 * _0x37ca96, 31.25 * _0x37ca96, 88.9375 * _0x37ca96), _0x366db4['bezierCurveTo'](30.75 * _0x37ca96, 47.9375 * _0x37ca96, 30.75 * _0x37ca96, 47.9375 * _0x37ca96, 30.25 * _0x37ca96, 6.9375 * _0x37ca96), _0x366db4['closePath'](), fill_path(_0x366db4, _0x773c68[0x2], _0x773c68[0x1], 0x4 * _0x37ca96), _0x366db4['beginPath'](), _0x366db4['lineCap'] = 'round', _0x366db4['lineJoin'] = 'round', _0x366db4['moveTo'](7.25 * _0x37ca96, 85.4375 * _0x37ca96), _0x366db4['bezierCurveTo'](31.75 * _0x37ca96, 85.4375 * _0x37ca96, 31.75 * _0x37ca96, 85.4375 * _0x37ca96, 56.25 * _0x37ca96, 85.4375 * _0x37ca96), _0x366db4['bezierCurveTo'](51.25 * _0x37ca96, 91.9375 * _0x37ca96, 51.25 * _0x37ca96, 91.9375 * _0x37ca96, 46.25 * _0x37ca96, 98.4375 * _0x37ca96), _0x366db4['bezierCurveTo'](30.25 * _0x37ca96, 98.4375 * _0x37ca96, 30.25 * _0x37ca96, 98.4375 * _0x37ca96, 14.25 * _0x37ca96, 98.4375 * _0x37ca96), _0x366db4['closePath'](), fill_path(_0x366db4, _0x773c68[0x4], _0x773c68[0x5], 0x4 * _0x37ca96), _0x366db4['save'](), _0x366db4['translate'](31.25 * _0x37ca96, 108.9375 * _0x37ca96), round_rect(_0x366db4, -0x6 * _0x37ca96, -14.5 * _0x37ca96, 0xc * _0x37ca96, 0x1d * _0x37ca96, 0xa * _0x37ca96), _0x366db4['restore'](), fill_path(_0x366db4, _0x773c68[0x4], _0x773c68[0x5], 0x4 * _0x37ca96), _0x366db4['beginPath'](), _0x366db4['lineCap'] = 'round', _0x366db4['lineJoin'] = 'round', _0x366db4['moveTo'](31.25 * _0x37ca96, 73.4375 * _0x37ca96), _0x366db4['bezierCurveTo'](33.25 * _0x37ca96, 77.9375 * _0x37ca96, 33.25 * _0x37ca96, 77.9375 * _0x37ca96, 35.25 * _0x37ca96, 82.4375 * _0x37ca96), _0x366db4['bezierCurveTo'](33.25 * _0x37ca96, 87.4375 * _0x37ca96, 33.25 * _0x37ca96, 87.4375 * _0x37ca96, 31.25 * _0x37ca96, 92.4375 * _0x37ca96), _0x366db4['bezierCurveTo'](29.25 * _0x37ca96, 87.9375 * _0x37ca96, 29.25 * _0x37ca96, 87.9375 * _0x37ca96, 27.25 * _0x37ca96, 83.4375 * _0x37ca96), _0x366db4['closePath'](), fill_path(_0x366db4, _0x773c68[0x3], _0x773c68[0x1], 0x2 * _0x37ca96), _0x444d1c;
}

function create_shop(_0x2f760d, _0xfe4b08) {
    var _0x513ff8 = document['createElement']('canvas'),
        _0x1db21c = _0x513ff8['getContext']('2d'),
        _0x2d1b8a = _0x2f760d * 0x78,
        _0x5b772e = _0x2f760d * 0x8c;
    _0x513ff8['width'] = _0x2d1b8a, _0x513ff8['height'] = _0x5b772e, _0x513ff8['width'] = 0x82 * _0x2f760d, _0x513ff8['height'] = 0x78 * _0x2f760d, round_rect(_0x1db21c, 0xa * _0x2f760d, 0xc * _0x2f760d, 0x6e * _0x2f760d, 0x5a * _0x2f760d, 0xa * _0x2f760d), fill_path(_0x1db21c, _0xfe4b08[0x0]), round_rect(_0x1db21c, 0xa * _0x2f760d, 0x5 * _0x2f760d, 0x6e * _0x2f760d, 0x5a * _0x2f760d, 0xa * _0x2f760d), fill_path(_0x1db21c, _0xfe4b08[0x1], _0xfe4b08[0x2], 0x4 * _0x2f760d);
    var _0x4e2541 = create_rotated_img(-Math['PI'] / 0x5, create_pickaxe(_0x2f760d * 0.5, !![], ['rgba(255,\x20255,\x20255,\x200)', 'rgba(255,\x20255,\x20255,\x200)', 'rgba(255,\x20255,\x20255,\x200)', '#FFF', '#FFF', '#FFF', '#FFF']));
    _0x1db21c['drawImage'](_0x4e2541, 0xc * _0x2f760d, 0x12 * _0x2f760d);
    var _0x4e2541 = create_rotated_img(Math['PI'] / 0x4, create_hammer(_0x2f760d * 0.55, !![], ['rgba(255,\x20255,\x20255,\x200)', '#FFF', '#FFF', '#FFF', '#FFF']));
    return _0x1db21c['drawImage'](_0x4e2541, 0x24 * _0x2f760d, 0x10 * _0x2f760d), _0x513ff8;
}

function create_blue_orb(_0x7adb41, _0x69f815, _0xda8731) {
    var _0x4e7a20 = document['createElement']('canvas'),
        _0x896ad4 = _0x4e7a20['getContext']('2d');
    return _0x4e7a20['width'] = 0x89 * _0x7adb41, _0x4e7a20['height'] = 0x81 * _0x7adb41, _0x896ad4['globalAlpha'] = 0.5, circle(_0x896ad4, 0x45 * _0x7adb41, 0x40 * _0x7adb41, 48.16637831516918 * _0x7adb41), fill_path(_0x896ad4, _0xda8731[0x1]), _0x896ad4['globalAlpha'] = 0.7, circle(_0x896ad4, 0x45 * _0x7adb41, 0x40 * _0x7adb41, 38.23105625617661 * _0x7adb41), fill_path(_0x896ad4, _0xda8731[0x2]), _0x896ad4['globalAlpha'] = 0.7, circle(_0x896ad4, 0x45 * _0x7adb41, 0x40 * _0x7adb41, 32.01562118716424 * _0x7adb41), fill_path(_0x896ad4, _0xda8731[0x2], _0xda8731[0x3], 0x4 * _0x7adb41), _0x896ad4['beginPath'](), _0x896ad4['lineCap'] = 'round', _0x896ad4['lineJoin'] = 'round', _0x896ad4['moveTo'](0x48 * _0x7adb41, 0x29 * _0x7adb41), _0x896ad4['bezierCurveTo'](0x34 * _0x7adb41, 0x29 * _0x7adb41, 0x30 * _0x7adb41, 0x32 * _0x7adb41, 0x2d * _0x7adb41, 0x3a * _0x7adb41), _0x896ad4['bezierCurveTo'](0x2b * _0x7adb41, 0x43 * _0x7adb41, 0x2d * _0x7adb41, 0x44 * _0x7adb41, 0x2e * _0x7adb41, 0x48 * _0x7adb41), _0x896ad4['bezierCurveTo'](0x34 * _0x7adb41, 0x35 * _0x7adb41, 0x3c * _0x7adb41, 0x30 * _0x7adb41, 0x48 * _0x7adb41, 0x2a * _0x7adb41), _0x896ad4['closePath'](), fill_path(_0x896ad4, _0xda8731[0x3]), _0x896ad4['beginPath'](), _0x896ad4['lineCap'] = 'round', _0x896ad4['lineJoin'] = 'round', _0x896ad4['moveTo'](0x5d * _0x7adb41, 0x3e * _0x7adb41), _0x896ad4['bezierCurveTo'](0x5f * _0x7adb41, 0x48 * _0x7adb41, 0x5a * _0x7adb41, 0x51 * _0x7adb41, 0x51 * _0x7adb41, 0x57 * _0x7adb41), _0x896ad4['bezierCurveTo'](0x4a * _0x7adb41, 0x5b * _0x7adb41, 0x45 * _0x7adb41, 0x59 * _0x7adb41, 0x40 * _0x7adb41, 0x58 * _0x7adb41), _0x896ad4['bezierCurveTo'](0x4d * _0x7adb41, 0x53 * _0x7adb41, 0x54 * _0x7adb41, 0x52 * _0x7adb41, 0x5c * _0x7adb41, 0x3e * _0x7adb41), _0x896ad4['closePath'](), fill_path(_0x896ad4, _0xda8731[0x3]), _0x4e7a20;
}

function create_dragon_cube(_0x5dc057, _0x37235a, _0x2dbcb2) {
    var _0x2f3045 = document['createElement']('canvas'),
        _0x371ef0 = _0x2f3045['getContext']('2d');
    return _0x2f3045['width'] = 0x89 * _0x5dc057, _0x2f3045['height'] = 0x81 * _0x5dc057, _0x371ef0['globalAlpha'] = 0.4, _0x371ef0['beginPath'](), _0x371ef0['lineCap'] = 'round', _0x371ef0['lineJoin'] = 'round', _0x371ef0['moveTo'](42.000030517578125 * _0x5dc057, 41.17047119140625 * _0x5dc057), _0x371ef0['bezierCurveTo'](45.000030517578125 * _0x5dc057, 38.17047119140625 * _0x5dc057, 49.000030517578125 * _0x5dc057, 37.17047119140625 * _0x5dc057, 62.000030517578125 * _0x5dc057, 38.17047119140625 * _0x5dc057), _0x371ef0['bezierCurveTo'](78.00003051757812 * _0x5dc057, 38.17047119140625 * _0x5dc057, 78.00003051757812 * _0x5dc057, 38.17047119140625 * _0x5dc057, 94.00003051757812 * _0x5dc057, 38.17047119140625 * _0x5dc057), _0x371ef0['bezierCurveTo'](100.00003051757812 * _0x5dc057, 38.17047119140625 * _0x5dc057, 102.00003051757812 * _0x5dc057, 38.17047119140625 * _0x5dc057, 101.00003051757812 * _0x5dc057, 47.17047119140625 * _0x5dc057), _0x371ef0['bezierCurveTo'](101.00003051757812 * _0x5dc057, 63.67047119140625 * _0x5dc057, 101.00003051757812 * _0x5dc057, 63.67047119140625 * _0x5dc057, 101.00003051757812 * _0x5dc057, 80.17047119140625 * _0x5dc057), _0x371ef0['bezierCurveTo'](102.00003051757812 * _0x5dc057, 84.17047119140625 * _0x5dc057, 100.00003051757812 * _0x5dc057, 86.17047119140625 * _0x5dc057, 95.00003051757812 * _0x5dc057, 88.17047119140625 * _0x5dc057), _0x371ef0['bezierCurveTo'](84.00003051757812 * _0x5dc057, 94.17047119140625 * _0x5dc057, 89.00003051757812 * _0x5dc057, 94.17047119140625 * _0x5dc057, 79.00003051757812 * _0x5dc057, 94.17047119140625 * _0x5dc057), _0x371ef0['bezierCurveTo'](59.500030517578125 * _0x5dc057, 94.17047119140625 * _0x5dc057, 59.500030517578125 * _0x5dc057, 94.17047119140625 * _0x5dc057, 40.000030517578125 * _0x5dc057, 94.17047119140625 * _0x5dc057), _0x371ef0['bezierCurveTo'](33.000030517578125 * _0x5dc057, 94.17047119140625 * _0x5dc057, 34.000030517578125 * _0x5dc057, 94.17047119140625 * _0x5dc057, 34.000030517578125 * _0x5dc057, 86.17047119140625 * _0x5dc057), _0x371ef0['bezierCurveTo'](34.000030517578125 * _0x5dc057, 69.67047119140625 * _0x5dc057, 34.000030517578125 * _0x5dc057, 69.67047119140625 * _0x5dc057, 34.000030517578125 * _0x5dc057, 53.17047119140625 * _0x5dc057), _0x371ef0['bezierCurveTo'](33.000030517578125 * _0x5dc057, 47.17047119140625 * _0x5dc057, 34.000030517578125 * _0x5dc057, 47.17047119140625 * _0x5dc057, 40.000030517578125 * _0x5dc057, 42.17047119140625 * _0x5dc057), _0x371ef0['closePath'](), fill_path(_0x371ef0, undefined, _0x2dbcb2[0x2], 0x28 * _0x5dc057), _0x371ef0['globalAlpha'] = 0.4, _0x371ef0['beginPath'](), _0x371ef0['lineCap'] = 'round', _0x371ef0['lineJoin'] = 'round', _0x371ef0['moveTo'](42.000030517578125 * _0x5dc057, 41.17047119140625 * _0x5dc057), _0x371ef0['bezierCurveTo'](45.000030517578125 * _0x5dc057, 38.17047119140625 * _0x5dc057, 49.000030517578125 * _0x5dc057, 37.17047119140625 * _0x5dc057, 62.000030517578125 * _0x5dc057, 38.17047119140625 * _0x5dc057), _0x371ef0['bezierCurveTo'](78.00003051757812 * _0x5dc057, 38.17047119140625 * _0x5dc057, 78.00003051757812 * _0x5dc057, 38.17047119140625 * _0x5dc057, 94.00003051757812 * _0x5dc057, 38.17047119140625 * _0x5dc057), _0x371ef0['bezierCurveTo'](100.00003051757812 * _0x5dc057, 38.17047119140625 * _0x5dc057, 102.00003051757812 * _0x5dc057, 38.17047119140625 * _0x5dc057, 101.00003051757812 * _0x5dc057, 47.17047119140625 * _0x5dc057), _0x371ef0['bezierCurveTo'](101.00003051757812 * _0x5dc057, 63.67047119140625 * _0x5dc057, 101.00003051757812 * _0x5dc057, 63.67047119140625 * _0x5dc057, 101.00003051757812 * _0x5dc057, 80.17047119140625 * _0x5dc057), _0x371ef0['bezierCurveTo'](102.00003051757812 * _0x5dc057, 84.17047119140625 * _0x5dc057, 100.00003051757812 * _0x5dc057, 86.17047119140625 * _0x5dc057, 95.00003051757812 * _0x5dc057, 88.17047119140625 * _0x5dc057), _0x371ef0['bezierCurveTo'](84.00003051757812 * _0x5dc057, 94.17047119140625 * _0x5dc057, 89.00003051757812 * _0x5dc057, 94.17047119140625 * _0x5dc057, 79.00003051757812 * _0x5dc057, 94.17047119140625 * _0x5dc057), _0x371ef0['bezierCurveTo'](59.500030517578125 * _0x5dc057, 94.17047119140625 * _0x5dc057, 59.500030517578125 * _0x5dc057, 94.17047119140625 * _0x5dc057, 40.000030517578125 * _0x5dc057, 94.17047119140625 * _0x5dc057), _0x371ef0['bezierCurveTo'](33.000030517578125 * _0x5dc057, 94.17047119140625 * _0x5dc057, 34.000030517578125 * _0x5dc057, 94.17047119140625 * _0x5dc057, 34.000030517578125 * _0x5dc057, 86.17047119140625 * _0x5dc057), _0x371ef0['bezierCurveTo'](34.000030517578125 * _0x5dc057, 69.67047119140625 * _0x5dc057, 34.000030517578125 * _0x5dc057, 69.67047119140625 * _0x5dc057, 34.000030517578125 * _0x5dc057, 53.17047119140625 * _0x5dc057), _0x371ef0['bezierCurveTo'](33.000030517578125 * _0x5dc057, 47.17047119140625 * _0x5dc057, 34.000030517578125 * _0x5dc057, 47.17047119140625 * _0x5dc057, 40.000030517578125 * _0x5dc057, 42.17047119140625 * _0x5dc057), _0x371ef0['closePath'](), fill_path(_0x371ef0, undefined, _0x2dbcb2[0x1], 0x14 * _0x5dc057), _0x371ef0['globalAlpha'] = 0.8, _0x371ef0['beginPath'](), _0x371ef0['lineCap'] = 'round', _0x371ef0['lineJoin'] = 'round', _0x371ef0['moveTo'](42.000030517578125 * _0x5dc057, 41.17047119140625 * _0x5dc057), _0x371ef0['bezierCurveTo'](45.000030517578125 * _0x5dc057, 38.17047119140625 * _0x5dc057, 49.000030517578125 * _0x5dc057, 37.17047119140625 * _0x5dc057, 62.000030517578125 * _0x5dc057, 38.17047119140625 * _0x5dc057), _0x371ef0['bezierCurveTo'](78.00003051757812 * _0x5dc057, 38.17047119140625 * _0x5dc057, 78.00003051757812 * _0x5dc057, 38.17047119140625 * _0x5dc057, 94.00003051757812 * _0x5dc057, 38.17047119140625 * _0x5dc057), _0x371ef0['bezierCurveTo'](100.00003051757812 * _0x5dc057, 38.17047119140625 * _0x5dc057, 102.00003051757812 * _0x5dc057, 38.17047119140625 * _0x5dc057, 101.00003051757812 * _0x5dc057, 47.17047119140625 * _0x5dc057), _0x371ef0['bezierCurveTo'](101.00003051757812 * _0x5dc057, 63.67047119140625 * _0x5dc057, 101.00003051757812 * _0x5dc057, 63.67047119140625 * _0x5dc057, 101.00003051757812 * _0x5dc057, 80.17047119140625 * _0x5dc057), _0x371ef0['bezierCurveTo'](102.00003051757812 * _0x5dc057, 84.17047119140625 * _0x5dc057, 100.00003051757812 * _0x5dc057, 86.17047119140625 * _0x5dc057, 95.00003051757812 * _0x5dc057, 88.17047119140625 * _0x5dc057), _0x371ef0['bezierCurveTo'](84.00003051757812 * _0x5dc057, 94.17047119140625 * _0x5dc057, 89.00003051757812 * _0x5dc057, 94.17047119140625 * _0x5dc057, 79.00003051757812 * _0x5dc057, 94.17047119140625 * _0x5dc057), _0x371ef0['bezierCurveTo'](59.500030517578125 * _0x5dc057, 94.17047119140625 * _0x5dc057, 59.500030517578125 * _0x5dc057, 94.17047119140625 * _0x5dc057, 40.000030517578125 * _0x5dc057, 94.17047119140625 * _0x5dc057), _0x371ef0['bezierCurveTo'](33.000030517578125 * _0x5dc057, 94.17047119140625 * _0x5dc057, 34.000030517578125 * _0x5dc057, 94.17047119140625 * _0x5dc057, 34.000030517578125 * _0x5dc057, 86.17047119140625 * _0x5dc057), _0x371ef0['bezierCurveTo'](34.000030517578125 * _0x5dc057, 69.67047119140625 * _0x5dc057, 34.000030517578125 * _0x5dc057, 69.67047119140625 * _0x5dc057, 34.000030517578125 * _0x5dc057, 53.17047119140625 * _0x5dc057), _0x371ef0['bezierCurveTo'](33.000030517578125 * _0x5dc057, 47.17047119140625 * _0x5dc057, 34.000030517578125 * _0x5dc057, 47.17047119140625 * _0x5dc057, 40.000030517578125 * _0x5dc057, 42.17047119140625 * _0x5dc057), _0x371ef0['closePath'](), fill_path(_0x371ef0, _0x2dbcb2[0x0], _0x2dbcb2[0x1], 0x4 * _0x5dc057), _0x371ef0['beginPath'](), _0x371ef0['lineCap'] = 'round', _0x371ef0['lineJoin'] = 'round', _0x371ef0['moveTo'](51.000030517578125 * _0x5dc057, 37.9886474609375 * _0x5dc057), _0x371ef0['bezierCurveTo'](51.000030517578125 * _0x5dc057, 61.9886474609375 * _0x5dc057, 51.000030517578125 * _0x5dc057, 61.9886474609375 * _0x5dc057, 51.000030517578125 * _0x5dc057, 85.9886474609375 * _0x5dc057), _0x371ef0['bezierCurveTo'](75.50003051757812 * _0x5dc057, 85.9886474609375 * _0x5dc057, 75.50003051757812 * _0x5dc057, 85.9886474609375 * _0x5dc057, 100.00003051757812 * _0x5dc057, 85.9886474609375 * _0x5dc057), _0x371ef0['bezierCurveTo'](100.00003051757812 * _0x5dc057, 61.9886474609375 * _0x5dc057, 100.00003051757812 * _0x5dc057, 61.9886474609375 * _0x5dc057, 100.00003051757812 * _0x5dc057, 37.9886474609375 * _0x5dc057), _0x371ef0['bezierCurveTo'](76.00003051757812 * _0x5dc057, 37.9886474609375 * _0x5dc057, 76.00003051757812 * _0x5dc057, 37.9886474609375 * _0x5dc057, 52.000030517578125 * _0x5dc057, 37.9886474609375 * _0x5dc057), _0x371ef0['closePath'](), fill_path(_0x371ef0, _0x2dbcb2[0x1], _0x2dbcb2[0x2], 0x4 * _0x5dc057), _0x371ef0['beginPath'](), _0x371ef0['lineCap'] = 'round', _0x371ef0['lineJoin'] = 'round', _0x371ef0['moveTo'](99.00003051757812 * _0x5dc057, 38.9886474609375 * _0x5dc057), _0x371ef0['bezierCurveTo'](93.50003051757812 * _0x5dc057, 44.9886474609375 * _0x5dc057, 93.50003051757812 * _0x5dc057, 44.9886474609375 * _0x5dc057, 88.00003051757812 * _0x5dc057, 50.9886474609375 * _0x5dc057), _0x371ef0['bezierCurveTo'](88.00003051757812 * _0x5dc057, 72.4886474609375 * _0x5dc057, 88.00003051757812 * _0x5dc057, 72.4886474609375 * _0x5dc057, 88.00003051757812 * _0x5dc057, 93.9886474609375 * _0x5dc057), _0x371ef0['bezierCurveTo'](94.00003051757812 * _0x5dc057, 90.4886474609375 * _0x5dc057, 94.00003051757812 * _0x5dc057, 90.4886474609375 * _0x5dc057, 100.00003051757812 * _0x5dc057, 86.9886474609375 * _0x5dc057), _0x371ef0['closePath'](), fill_path(_0x371ef0, _0x2dbcb2[0x1], _0x2dbcb2[0x2], 0x4 * _0x5dc057), _0x371ef0['beginPath'](), _0x371ef0['lineCap'] = 'round', _0x371ef0['lineJoin'] = 'round', _0x371ef0['moveTo'](87.00003051757812 * _0x5dc057, 49.625 * _0x5dc057), _0x371ef0['bezierCurveTo'](61.000030517578125 * _0x5dc057, 49.625 * _0x5dc057, 61.000030517578125 * _0x5dc057, 49.625 * _0x5dc057, 35.000030517578125 * _0x5dc057, 49.625 * _0x5dc057), _0x371ef0['bezierCurveTo'](35.000030517578125 * _0x5dc057, 70.625 * _0x5dc057, 35.000030517578125 * _0x5dc057, 70.625 * _0x5dc057, 35.000030517578125 * _0x5dc057, 91.625 * _0x5dc057), _0x371ef0['bezierCurveTo'](60.500030517578125 * _0x5dc057, 91.625 * _0x5dc057, 60.500030517578125 * _0x5dc057, 91.625 * _0x5dc057, 86.00003051757812 * _0x5dc057, 91.625 * _0x5dc057), _0x371ef0['bezierCurveTo'](86.50003051757812 * _0x5dc057, 70.625 * _0x5dc057, 86.50003051757812 * _0x5dc057, 70.625 * _0x5dc057, 87.00003051757812 * _0x5dc057, 49.625 * _0x5dc057), _0x371ef0['closePath'](), fill_path(_0x371ef0, _0x2dbcb2[0x1], _0x2dbcb2[0x3], 0x4 * _0x5dc057), _0x371ef0['beginPath'](), _0x371ef0['lineCap'] = 'round', _0x371ef0['lineJoin'] = 'round', _0x371ef0['moveTo'](47.000030517578125 * _0x5dc057, 36.625 * _0x5dc057), _0x371ef0['bezierCurveTo'](73.00003051757812 * _0x5dc057, 37.125 * _0x5dc057, 73.00003051757812 * _0x5dc057, 37.125 * _0x5dc057, 99.00003051757812 * _0x5dc057, 37.625 * _0x5dc057), _0x371ef0['bezierCurveTo'](93.50003051757812 * _0x5dc057, 44.125 * _0x5dc057, 93.50003051757812 * _0x5dc057, 44.125 * _0x5dc057, 88.00003051757812 * _0x5dc057, 50.625 * _0x5dc057), _0x371ef0['bezierCurveTo'](60.500030517578125 * _0x5dc057, 50.125 * _0x5dc057, 60.500030517578125 * _0x5dc057, 50.125 * _0x5dc057, 33.000030517578125 * _0x5dc057, 49.625 * _0x5dc057), _0x371ef0['closePath'](), fill_path(_0x371ef0, _0x2dbcb2[0x1], _0x2dbcb2[0x3], 0x4 * _0x5dc057), _0x371ef0['beginPath'](), _0x371ef0['lineCap'] = 'round', _0x371ef0['lineJoin'] = 'round', _0x371ef0['moveTo'](53.000030517578125 * _0x5dc057, 52.625 * _0x5dc057), _0x371ef0['bezierCurveTo'](40.000030517578125 * _0x5dc057, 54.625 * _0x5dc057, 39.000030517578125 * _0x5dc057, 59.625 * _0x5dc057, 40.000030517578125 * _0x5dc057, 67.625 * _0x5dc057), _0x371ef0['bezierCurveTo'](45.000030517578125 * _0x5dc057, 59.625 * _0x5dc057, 48.000030517578125 * _0x5dc057, 58.625 * _0x5dc057, 54.000030517578125 * _0x5dc057, 53.625 * _0x5dc057), _0x371ef0['closePath'](), fill_path(_0x371ef0, _0x2dbcb2[0x3]), _0x371ef0['globalAlpha'] = 0x1, _0x371ef0['beginPath'](), _0x371ef0['lineCap'] = 'round', _0x371ef0['lineJoin'] = 'round', _0x371ef0['moveTo'](42.000030517578125 * _0x5dc057, 41.17047119140625 * _0x5dc057), _0x371ef0['bezierCurveTo'](45.000030517578125 * _0x5dc057, 38.17047119140625 * _0x5dc057, 49.000030517578125 * _0x5dc057, 37.17047119140625 * _0x5dc057, 62.000030517578125 * _0x5dc057, 38.17047119140625 * _0x5dc057), _0x371ef0['bezierCurveTo'](78.00003051757812 * _0x5dc057, 38.17047119140625 * _0x5dc057, 78.00003051757812 * _0x5dc057, 38.17047119140625 * _0x5dc057, 94.00003051757812 * _0x5dc057, 38.17047119140625 * _0x5dc057), _0x371ef0['bezierCurveTo'](100.00003051757812 * _0x5dc057, 38.17047119140625 * _0x5dc057, 102.00003051757812 * _0x5dc057, 38.17047119140625 * _0x5dc057, 101.00003051757812 * _0x5dc057, 47.17047119140625 * _0x5dc057), _0x371ef0['bezierCurveTo'](101.00003051757812 * _0x5dc057, 63.67047119140625 * _0x5dc057, 101.00003051757812 * _0x5dc057, 63.67047119140625 * _0x5dc057, 101.00003051757812 * _0x5dc057, 80.17047119140625 * _0x5dc057), _0x371ef0['bezierCurveTo'](102.00003051757812 * _0x5dc057, 84.17047119140625 * _0x5dc057, 100.00003051757812 * _0x5dc057, 86.17047119140625 * _0x5dc057, 95.00003051757812 * _0x5dc057, 88.17047119140625 * _0x5dc057), _0x371ef0['bezierCurveTo'](84.00003051757812 * _0x5dc057, 94.17047119140625 * _0x5dc057, 89.00003051757812 * _0x5dc057, 94.17047119140625 * _0x5dc057, 79.00003051757812 * _0x5dc057, 94.17047119140625 * _0x5dc057), _0x371ef0['bezierCurveTo'](59.500030517578125 * _0x5dc057, 94.17047119140625 * _0x5dc057, 59.500030517578125 * _0x5dc057, 94.17047119140625 * _0x5dc057, 40.000030517578125 * _0x5dc057, 94.17047119140625 * _0x5dc057), _0x371ef0['bezierCurveTo'](33.000030517578125 * _0x5dc057, 94.17047119140625 * _0x5dc057, 34.000030517578125 * _0x5dc057, 94.17047119140625 * _0x5dc057, 34.000030517578125 * _0x5dc057, 86.17047119140625 * _0x5dc057), _0x371ef0['bezierCurveTo'](34.000030517578125 * _0x5dc057, 69.67047119140625 * _0x5dc057, 34.000030517578125 * _0x5dc057, 69.67047119140625 * _0x5dc057, 34.000030517578125 * _0x5dc057, 53.17047119140625 * _0x5dc057), _0x371ef0['bezierCurveTo'](33.000030517578125 * _0x5dc057, 47.17047119140625 * _0x5dc057, 34.000030517578125 * _0x5dc057, 47.17047119140625 * _0x5dc057, 40.000030517578125 * _0x5dc057, 42.17047119140625 * _0x5dc057), _0x371ef0['closePath'](), fill_path(_0x371ef0, undefined, _0x2dbcb2[0x3], 0x4 * _0x5dc057), _0x2f3045;
}

function create_lake_edge(_0x2030a3, _0x10dc2f, _0xb474d2) {
    var _0x4eba9a = document['createElement']('canvas'),
        _0x2ee142 = _0x4eba9a['getContext']('2d');
    if (_0xb474d2 == 0x0) _0x4eba9a['width'] = 0x21f * _0x2030a3, _0x4eba9a['height'] = 0x189 * _0x2030a3, _0x2ee142['beginPath'](), _0x2ee142['lineCap'] = 'round', _0x2ee142['lineJoin'] = 'round', _0x2ee142['moveTo'](164.23297119140625 * _0x2030a3, 72.80398559570312 * _0x2030a3), _0x2ee142['bezierCurveTo'](289.23297119140625 * _0x2030a3, 41.803985595703125 * _0x2030a3, 413.23297119140625 * _0x2030a3, 86.80398559570312 * _0x2030a3, 441.23297119140625 * _0x2030a3, 105.80398559570312 * _0x2030a3), _0x2ee142['bezierCurveTo'](513.2329711914062 * _0x2030a3, 149.80398559570312 * _0x2030a3, 475.23297119140625 * _0x2030a3, 224.80398559570312 * _0x2030a3, 451.23297119140625 * _0x2030a3, 258.8039855957031 * _0x2030a3), _0x2ee142['bezierCurveTo'](410.23297119140625 * _0x2030a3, 315.8039855957031 * _0x2030a3, 380.23297119140625 * _0x2030a3, 314.8039855957031 * _0x2030a3, 289.23297119140625 * _0x2030a3, 320.8039855957031 * _0x2030a3), _0x2ee142['bezierCurveTo'](160.23297119140625 * _0x2030a3, 329.8039855957031 * _0x2030a3, 102.23297119140625 * _0x2030a3, 312.8039855957031 * _0x2030a3, 72.23297119140625 * _0x2030a3, 258.8039855957031 * _0x2030a3), _0x2ee142['bezierCurveTo'](32.23297119140625 * _0x2030a3, 156.80398559570312 * _0x2030a3, 93.23297119140625 * _0x2030a3, 92.80398559570312 * _0x2030a3, 164.23297119140625 * _0x2030a3, 72.80398559570312 * _0x2030a3), _0x2ee142['closePath'](), fill_path(_0x2ee142, _0x10dc2f[0x0]);
    else _0xb474d2 == 0x1 ? (_0x4eba9a['width'] = 0x21f * _0x2030a3, _0x4eba9a['height'] = 0x1d6 * _0x2030a3, _0x2ee142['beginPath'](), _0x2ee142['lineCap'] = 'round', _0x2ee142['lineJoin'] = 'round', _0x2ee142['moveTo'](238.23297119140625 * _0x2030a3, 34.622161865234375 * _0x2030a3), _0x2ee142['bezierCurveTo'](423.23297119140625 * _0x2030a3, 21.622161865234375 * _0x2030a3, 474.23297119140625 * _0x2030a3, 96.62216186523438 * _0x2030a3, 499.23297119140625 * _0x2030a3, 167.62216186523438 * _0x2030a3), _0x2ee142['bezierCurveTo'](536.2329711914062 * _0x2030a3, 288.6221618652344 * _0x2030a3, 487.23297119140625 * _0x2030a3, 367.6221618652344 * _0x2030a3, 403.23297119140625 * _0x2030a3, 412.6221618652344 * _0x2030a3), _0x2ee142['bezierCurveTo'](287.23297119140625 * _0x2030a3, 466.6221618652344 * _0x2030a3, 127.23297119140625 * _0x2030a3, 424.6221618652344 * _0x2030a3, 50.23297119140625 * _0x2030a3, 318.6221618652344 * _0x2030a3), _0x2ee142['bezierCurveTo'](-0.76702880859375 * _0x2030a3, 239.62216186523438 * _0x2030a3, 30.23297119140625 * _0x2030a3, 110.62216186523438 * _0x2030a3, 73.23297119140625 * _0x2030a3, 77.62216186523438 * _0x2030a3), _0x2ee142['bezierCurveTo'](128.23297119140625 * _0x2030a3, 29.622161865234375 * _0x2030a3, 202.23297119140625 * _0x2030a3, 40.622161865234375 * _0x2030a3, 238.23297119140625 * _0x2030a3, 34.622161865234375 * _0x2030a3), _0x2ee142['closePath'](), fill_path(_0x2ee142, _0x10dc2f[0x0])) : (_0x4eba9a['width'] = 0x21f * _0x2030a3, _0x4eba9a['height'] = 0x1d6 * _0x2030a3, _0x2ee142['beginPath'](), _0x2ee142['lineCap'] = 'round', _0x2ee142['lineJoin'] = 'round', _0x2ee142['moveTo'](268.23297119140625 * _0x2030a3, 23.349441528320312 * _0x2030a3), _0x2ee142['bezierCurveTo'](424.23297119140625 * _0x2030a3, -0.6505584716796875 * _0x2030a3, 524.2329711914062 * _0x2030a3, 44.34944152832031 * _0x2030a3, 519.2329711914062 * _0x2030a3, 186.3494415283203 * _0x2030a3), _0x2ee142['bezierCurveTo'](515.2329711914062 * _0x2030a3, 341.3494415283203 * _0x2030a3, 431.23297119140625 * _0x2030a3, 409.3494415283203 * _0x2030a3, 357.23297119140625 * _0x2030a3, 442.3494415283203 * _0x2030a3), _0x2ee142['bezierCurveTo'](278.23297119140625 * _0x2030a3, 469.3494415283203 * _0x2030a3, 144.23297119140625 * _0x2030a3, 460.3494415283203 * _0x2030a3, 51.23297119140625 * _0x2030a3, 348.3494415283203 * _0x2030a3), _0x2ee142['bezierCurveTo'](3.23297119140625 * _0x2030a3, 274.3494415283203 * _0x2030a3, 45.23297119140625 * _0x2030a3, 87.34944152832031 * _0x2030a3, 268.23297119140625 * _0x2030a3, 23.349441528320312 * _0x2030a3), _0x2ee142['closePath'](), fill_path(_0x2ee142, _0x10dc2f[0x0]));
    return _0x4eba9a;
}

function create_lake_deep(_0x106d47, _0x24ca24, _0x485c80) {
    var _0x34e30c = document['createElement']('canvas'),
        _0x1b8376 = _0x34e30c['getContext']('2d');
    if (_0x485c80 == 0x0) _0x34e30c['width'] = 0x21f * _0x106d47, _0x34e30c['height'] = 0x189 * _0x106d47, _0x1b8376['beginPath'](), _0x1b8376['lineCap'] = 'round', _0x1b8376['lineJoin'] = 'round', _0x1b8376['moveTo'](109.5 * _0x106d47, 154.046875 * _0x106d47), _0x1b8376['bezierCurveTo'](143.5 * _0x106d47, 96.046875 * _0x106d47, 208.5 * _0x106d47, 92.046875 * _0x106d47, 288.5 * _0x106d47, 97.046875 * _0x106d47), _0x1b8376['bezierCurveTo'](357.5 * _0x106d47, 104.046875 * _0x106d47, 414.5 * _0x106d47, 132.046875 * _0x106d47, 422.5 * _0x106d47, 166.046875 * _0x106d47), _0x1b8376['bezierCurveTo'](431.5 * _0x106d47, 192.046875 * _0x106d47, 400.5 * _0x106d47, 261.046875 * _0x106d47, 332.5 * _0x106d47, 271.046875 * _0x106d47), _0x1b8376['bezierCurveTo'](272.5 * _0x106d47, 279.046875 * _0x106d47, 159.5 * _0x106d47, 285.046875 * _0x106d47, 126.5 * _0x106d47, 260.046875 * _0x106d47), _0x1b8376['bezierCurveTo'](99.5 * _0x106d47, 238.046875 * _0x106d47, 95.5 * _0x106d47, 183.046875 * _0x106d47, 109.5 * _0x106d47, 154.046875 * _0x106d47), _0x1b8376['closePath'](), fill_path(_0x1b8376, _0x24ca24[0x0]);
    else _0x485c80 == 0x1 ? (_0x34e30c['width'] = 0x21f * _0x106d47, _0x34e30c['height'] = 0x1d6 * _0x106d47, _0x1b8376['beginPath'](), _0x1b8376['lineCap'] = 'round', _0x1b8376['lineJoin'] = 'round', _0x1b8376['moveTo'](216.23297119140625 * _0x106d47, 100.34944152832031 * _0x106d47), _0x1b8376['bezierCurveTo'](349.23297119140625 * _0x106d47, 110.34944152832031 * _0x106d47, 422.23297119140625 * _0x106d47, 142.3494415283203 * _0x106d47, 434.23297119140625 * _0x106d47, 194.3494415283203 * _0x106d47), _0x1b8376['bezierCurveTo'](451.23297119140625 * _0x106d47, 268.3494415283203 * _0x106d47, 397.23297119140625 * _0x106d47, 367.3494415283203 * _0x106d47, 313.23297119140625 * _0x106d47, 351.3494415283203 * _0x106d47), _0x1b8376['bezierCurveTo'](148.23297119140625 * _0x106d47, 330.3494415283203 * _0x106d47, 106.23297119140625 * _0x106d47, 319.3494415283203 * _0x106d47, 87.23297119140625 * _0x106d47, 248.3494415283203 * _0x106d47), _0x1b8376['bezierCurveTo'](63.23297119140625 * _0x106d47, 164.3494415283203 * _0x106d47, 102.23297119140625 * _0x106d47, 90.34944152832031 * _0x106d47, 216.23297119140625 * _0x106d47, 100.34944152832031 * _0x106d47), _0x1b8376['closePath'](), fill_path(_0x1b8376, _0x24ca24[0x0])) : (_0x34e30c['width'] = 0x21f * _0x106d47, _0x34e30c['height'] = 0x1d6 * _0x106d47, _0x1b8376['beginPath'](), _0x1b8376['lineCap'] = 'round', _0x1b8376['lineJoin'] = 'round', _0x1b8376['moveTo'](155.23297119140625 * _0x106d47, 126.71307373046875 * _0x106d47), _0x1b8376['bezierCurveTo'](232.23297119140625 * _0x106d47, 76.71307373046875 * _0x106d47, 340.23297119140625 * _0x106d47, 67.71307373046875 * _0x106d47, 411.23297119140625 * _0x106d47, 106.71307373046875 * _0x106d47), _0x1b8376['bezierCurveTo'](458.23297119140625 * _0x106d47, 131.71307373046875 * _0x106d47, 465.23297119140625 * _0x106d47, 280.71307373046875 * _0x106d47, 353.23297119140625 * _0x106d47, 363.71307373046875 * _0x106d47), _0x1b8376['bezierCurveTo'](299.23297119140625 * _0x106d47, 404.71307373046875 * _0x106d47, 143.23297119140625 * _0x106d47, 415.71307373046875 * _0x106d47, 88.23297119140625 * _0x106d47, 327.71307373046875 * _0x106d47), _0x1b8376['bezierCurveTo'](48.23297119140625 * _0x106d47, 256.71307373046875 * _0x106d47, 93.23297119140625 * _0x106d47, 171.71307373046875 * _0x106d47, 155.23297119140625 * _0x106d47, 126.71307373046875 * _0x106d47), _0x1b8376['closePath'](), fill_path(_0x1b8376, _0x24ca24[0x0]));
    return _0x34e30c;
}

function create_lake(_0xf4923b, _0x3cb7fd, _0x190a0a) {
    var _0x11d7dc = document['createElement']('canvas'),
        _0x50a67a = _0x11d7dc['getContext']('2d');
    if (_0x190a0a == 0x0) _0x11d7dc['width'] = 0x21f * _0xf4923b, _0x11d7dc['height'] = 0x189 * _0xf4923b, _0x50a67a['beginPath'](), _0x50a67a['lineCap'] = 'round', _0x50a67a['lineJoin'] = 'round', _0x50a67a['moveTo'](196.23297119140625 * _0xf4923b, 77.8948974609375 * _0xf4923b), _0x50a67a['bezierCurveTo'](276.23297119140625 * _0xf4923b, 69.8948974609375 * _0xf4923b, 360.23297119140625 * _0xf4923b, 87.8948974609375 * _0xf4923b, 431.23297119140625 * _0xf4923b, 121.8948974609375 * _0xf4923b), _0x50a67a['bezierCurveTo'](474.23297119140625 * _0xf4923b, 146.8948974609375 * _0xf4923b, 463.23297119140625 * _0xf4923b, 184.8948974609375 * _0xf4923b, 437.23297119140625 * _0xf4923b, 235.8948974609375 * _0xf4923b), _0x50a67a['bezierCurveTo'](413.23297119140625 * _0xf4923b, 277.8948974609375 * _0xf4923b, 383.23297119140625 * _0xf4923b, 289.8948974609375 * _0xf4923b, 303.23297119140625 * _0xf4923b, 289.8948974609375 * _0xf4923b), _0x50a67a['bezierCurveTo'](178.23297119140625 * _0xf4923b, 292.8948974609375 * _0xf4923b, 127.23297119140625 * _0xf4923b, 301.8948974609375 * _0xf4923b, 92.23297119140625 * _0xf4923b, 268.8948974609375 * _0xf4923b), _0x50a67a['bezierCurveTo'](55.23297119140625 * _0xf4923b, 234.8948974609375 * _0xf4923b, 59.23297119140625 * _0xf4923b, 147.8948974609375 * _0xf4923b, 100.23297119140625 * _0xf4923b, 112.8948974609375 * _0xf4923b), _0x50a67a['bezierCurveTo'](133.23297119140625 * _0xf4923b, 83.8948974609375 * _0xf4923b, 167.23297119140625 * _0xf4923b, 82.8948974609375 * _0xf4923b, 196.23297119140625 * _0xf4923b, 77.8948974609375 * _0xf4923b), _0x50a67a['closePath'](), fill_path(_0x50a67a, _0x3cb7fd[0x0]);
    else _0x190a0a == 0x1 ? (_0x11d7dc['width'] = 0x21f * _0xf4923b, _0x11d7dc['height'] = 0x1d6 * _0xf4923b, _0x50a67a['beginPath'](), _0x50a67a['lineCap'] = 'round', _0x50a67a['lineJoin'] = 'round', _0x50a67a['moveTo'](285.23297119140625 * _0xf4923b, 51.803985595703125 * _0xf4923b), _0x50a67a['bezierCurveTo'](408.23297119140625 * _0xf4923b, 57.803985595703125 * _0xf4923b, 463.23297119140625 * _0xf4923b, 107.80398559570312 * _0xf4923b, 480.23297119140625 * _0xf4923b, 183.80398559570312 * _0xf4923b), _0x50a67a['bezierCurveTo'](500.23297119140625 * _0xf4923b, 282.8039855957031 * _0xf4923b, 473.23297119140625 * _0xf4923b, 351.8039855957031 * _0xf4923b, 373.23297119140625 * _0xf4923b, 390.8039855957031 * _0xf4923b), _0x50a67a['bezierCurveTo'](286.23297119140625 * _0xf4923b, 420.8039855957031 * _0xf4923b, 173.23297119140625 * _0xf4923b, 396.8039855957031 * _0xf4923b, 86.23297119140625 * _0xf4923b, 331.8039855957031 * _0xf4923b), _0x50a67a['bezierCurveTo'](13.23297119140625 * _0xf4923b, 267.8039855957031 * _0xf4923b, 19.23297119140625 * _0xf4923b, 79.80398559570312 * _0xf4923b, 143.23297119140625 * _0xf4923b, 50.803985595703125 * _0xf4923b), _0x50a67a['bezierCurveTo'](175.23297119140625 * _0xf4923b, 41.803985595703125 * _0xf4923b, 263.23297119140625 * _0xf4923b, 51.803985595703125 * _0xf4923b, 285.23297119140625 * _0xf4923b, 51.803985595703125 * _0xf4923b), _0x50a67a['closePath'](), fill_path(_0x50a67a, _0x3cb7fd[0x0])) : (_0x11d7dc['width'] = 0x21f * _0xf4923b, _0x11d7dc['height'] = 0x1d6 * _0xf4923b, _0x50a67a['beginPath'](), _0x50a67a['lineCap'] = 'round', _0x50a67a['lineJoin'] = 'round', _0x50a67a['moveTo'](492.23297119140625 * _0xf4923b, 170.0767059326172 * _0xf4923b), _0x50a67a['bezierCurveTo'](493.23297119140625 * _0xf4923b, 300.16761779785156 * _0xf4923b, 411.23297119140625 * _0xf4923b, 382.16761779785156 * _0xf4923b, 321.23297119140625 * _0xf4923b, 419.16761779785156 * _0xf4923b), _0x50a67a['bezierCurveTo'](251.23297119140625 * _0xf4923b, 444.16761779785156 * _0xf4923b, 125.23297119140625 * _0xf4923b, 422.16761779785156 * _0xf4923b, 63.23297119140625 * _0xf4923b, 347.16761779785156 * _0xf4923b), _0x50a67a['bezierCurveTo'](22.23297119140625 * _0xf4923b, 282.16761779785156 * _0xf4923b, 53.23297119140625 * _0xf4923b, 152.16761779785156 * _0xf4923b, 179.23297119140625 * _0xf4923b, 79.16761779785156 * _0xf4923b), _0x50a67a['bezierCurveTo'](237.23297119140625 * _0xf4923b, 46.16761779785156 * _0xf4923b, 326.23297119140625 * _0xf4923b, 27.167617797851562 * _0xf4923b, 409.23297119140625 * _0xf4923b, 50.16761779785156 * _0xf4923b), _0x50a67a['bezierCurveTo'](470.23297119140625 * _0xf4923b, 66.16761779785156 * _0xf4923b, 493.23297119140625 * _0xf4923b, 104.16761779785156 * _0xf4923b, 492.23297119140625 * _0xf4923b, 170.0767059326172 * _0xf4923b), _0x50a67a['closePath'](), fill_path(_0x50a67a, _0x3cb7fd[0x0]));
    return _0x11d7dc;
}

function create_shingle(_0x465b46, _0x50daab, _0x3e7f60) {
    var _0x398977 = document['createElement']('canvas'),
        _0x5e53f4 = _0x398977['getContext']('2d');
    if (_0x3e7f60 == 0x0) _0x398977['width'] = 0x21f * _0x465b46, _0x398977['height'] = 0x189 * _0x465b46, _0x5e53f4['translate'](0x28 * _0x465b46, 0x3c * _0x465b46), _0x5e53f4['globalAlpha'] = 0.5, _0x5e53f4['translate'](0x3 * _0x465b46, 0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](0xb0 * _0x465b46, 10.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](0xbc * _0x465b46, 16.25 * _0x465b46, 0xbb * _0x465b46, 25.25 * _0x465b46, 0xb7 * _0x465b46, 26.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](0xb1 * _0x465b46, 26.25 * _0x465b46, 0xaf * _0x465b46, 21.25 * _0x465b46, 0xad * _0x465b46, 19.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](0xaa * _0x465b46, 14.25 * _0x465b46, 0xaa * _0x465b46, 10.25 * _0x465b46, 0xb0 * _0x465b46, 10.25 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x0]), _0x5e53f4['globalAlpha'] = 0x1, _0x5e53f4['translate'](-0x3 * _0x465b46, -0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](0xb0 * _0x465b46, 10.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](0xbc * _0x465b46, 16.25 * _0x465b46, 0xbb * _0x465b46, 25.25 * _0x465b46, 0xb7 * _0x465b46, 26.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](0xb1 * _0x465b46, 26.25 * _0x465b46, 0xaf * _0x465b46, 21.25 * _0x465b46, 0xad * _0x465b46, 19.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](0xaa * _0x465b46, 14.25 * _0x465b46, 0xaa * _0x465b46, 10.25 * _0x465b46, 0xb0 * _0x465b46, 10.25 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x1]), _0x5e53f4['globalAlpha'] = 0.5, _0x5e53f4['translate'](0x3 * _0x465b46, 0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](0x112 * _0x465b46, 0x8 * _0x465b46), _0x5e53f4['bezierCurveTo'](0x114 * _0x465b46, 0xc * _0x465b46, 0x10f * _0x465b46, 0x17 * _0x465b46, 0x10a * _0x465b46, 0x14 * _0x465b46), _0x5e53f4['bezierCurveTo'](0x108 * _0x465b46, 0x13 * _0x465b46, 0x106 * _0x465b46, 0xf * _0x465b46, 0x10b * _0x465b46, 0x9 * _0x465b46), _0x5e53f4['bezierCurveTo'](0x10f * _0x465b46, 0x5 * _0x465b46, 0x112 * _0x465b46, 0x5 * _0x465b46, 0x112 * _0x465b46, 0x8 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x0]), _0x5e53f4['globalAlpha'] = 0x1, _0x5e53f4['translate'](-0x3 * _0x465b46, -0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](0x112 * _0x465b46, 0x8 * _0x465b46), _0x5e53f4['bezierCurveTo'](0x114 * _0x465b46, 0xc * _0x465b46, 0x10f * _0x465b46, 0x17 * _0x465b46, 0x10a * _0x465b46, 0x14 * _0x465b46), _0x5e53f4['bezierCurveTo'](0x108 * _0x465b46, 0x13 * _0x465b46, 0x106 * _0x465b46, 0xf * _0x465b46, 0x10b * _0x465b46, 0x9 * _0x465b46), _0x5e53f4['bezierCurveTo'](0x10f * _0x465b46, 0x5 * _0x465b46, 0x112 * _0x465b46, 0x5 * _0x465b46, 0x112 * _0x465b46, 0x8 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x1]), _0x5e53f4['globalAlpha'] = 0.5, _0x5e53f4['translate'](0x3 * _0x465b46, 0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](0x11a * _0x465b46, 23.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](0x113 * _0x465b46, 25.25 * _0x465b46, 0x110 * _0x465b46, 29.25 * _0x465b46, 0x112 * _0x465b46, 36.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](0x115 * _0x465b46, 40.25 * _0x465b46, 0x118 * _0x465b46, 37.25 * _0x465b46, 0x11b * _0x465b46, 32.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](0x11e * _0x465b46, 26.25 * _0x465b46, 0x11e * _0x465b46, 25.25 * _0x465b46, 0x11a * _0x465b46, 23.25 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x0]), _0x5e53f4['globalAlpha'] = 0x1, _0x5e53f4['translate'](-0x3 * _0x465b46, -0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](0x11a * _0x465b46, 23.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](0x113 * _0x465b46, 25.25 * _0x465b46, 0x110 * _0x465b46, 29.25 * _0x465b46, 0x112 * _0x465b46, 36.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](0x115 * _0x465b46, 40.25 * _0x465b46, 0x118 * _0x465b46, 37.25 * _0x465b46, 0x11b * _0x465b46, 32.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](0x11e * _0x465b46, 26.25 * _0x465b46, 0x11e * _0x465b46, 25.25 * _0x465b46, 0x11a * _0x465b46, 23.25 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x1]), _0x5e53f4['globalAlpha'] = 0.5, _0x5e53f4['translate'](0x3 * _0x465b46, 0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](343.75 * _0x465b46, 18.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](346.75 * _0x465b46, 27.25 * _0x465b46, 346.75 * _0x465b46, 32.25 * _0x465b46, 339.75 * _0x465b46, 31.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](336.75 * _0x465b46, 29.25 * _0x465b46, 335.75 * _0x465b46, 27.25 * _0x465b46, 336.75 * _0x465b46, 22.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](336.75 * _0x465b46, 16.25 * _0x465b46, 338.75 * _0x465b46, 15.25 * _0x465b46, 343.75 * _0x465b46, 18.25 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x0]), _0x5e53f4['globalAlpha'] = 0x1, _0x5e53f4['translate'](-0x3 * _0x465b46, -0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](343.75 * _0x465b46, 18.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](346.75 * _0x465b46, 27.25 * _0x465b46, 346.75 * _0x465b46, 32.25 * _0x465b46, 339.75 * _0x465b46, 31.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](336.75 * _0x465b46, 29.25 * _0x465b46, 335.75 * _0x465b46, 27.25 * _0x465b46, 336.75 * _0x465b46, 22.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](336.75 * _0x465b46, 16.25 * _0x465b46, 338.75 * _0x465b46, 15.25 * _0x465b46, 343.75 * _0x465b46, 18.25 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x1]), _0x5e53f4['globalAlpha'] = 0.5, _0x5e53f4['translate'](0x3 * _0x465b46, 0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](364.75 * _0x465b46, 22.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](368.75 * _0x465b46, 27.25 * _0x465b46, 362.75 * _0x465b46, 36.25 * _0x465b46, 356.75 * _0x465b46, 39.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](346.75 * _0x465b46, 43.25 * _0x465b46, 346.75 * _0x465b46, 34.25 * _0x465b46, 348.75 * _0x465b46, 31.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](352.75 * _0x465b46, 23.25 * _0x465b46, 360.75 * _0x465b46, 20.25 * _0x465b46, 363.75 * _0x465b46, 22.25 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x0]), _0x5e53f4['globalAlpha'] = 0x1, _0x5e53f4['translate'](-0x3 * _0x465b46, -0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](364.75 * _0x465b46, 22.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](368.75 * _0x465b46, 27.25 * _0x465b46, 362.75 * _0x465b46, 36.25 * _0x465b46, 356.75 * _0x465b46, 39.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](346.75 * _0x465b46, 43.25 * _0x465b46, 346.75 * _0x465b46, 34.25 * _0x465b46, 348.75 * _0x465b46, 31.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](352.75 * _0x465b46, 23.25 * _0x465b46, 360.75 * _0x465b46, 20.25 * _0x465b46, 363.75 * _0x465b46, 22.25 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x1]), _0x5e53f4['globalAlpha'] = 0.5, _0x5e53f4['translate'](0x3 * _0x465b46, 0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](350.75 * _0x465b46, 52.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](352.75 * _0x465b46, 45.25 * _0x465b46, 360.75 * _0x465b46, 43.25 * _0x465b46, 368.75 * _0x465b46, 52.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](369.75 * _0x465b46, 58.25 * _0x465b46, 366.75 * _0x465b46, 59.25 * _0x465b46, 357.75 * _0x465b46, 57.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](350.75 * _0x465b46, 56.25 * _0x465b46, 352.75 * _0x465b46, 55.25 * _0x465b46, 350.75 * _0x465b46, 52.25 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x0]), _0x5e53f4['globalAlpha'] = 0x1, _0x5e53f4['translate'](-0x3 * _0x465b46, -0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](350.75 * _0x465b46, 52.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](352.75 * _0x465b46, 45.25 * _0x465b46, 360.75 * _0x465b46, 43.25 * _0x465b46, 368.75 * _0x465b46, 52.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](369.75 * _0x465b46, 58.25 * _0x465b46, 366.75 * _0x465b46, 59.25 * _0x465b46, 357.75 * _0x465b46, 57.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](350.75 * _0x465b46, 56.25 * _0x465b46, 352.75 * _0x465b46, 55.25 * _0x465b46, 350.75 * _0x465b46, 52.25 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x1]), _0x5e53f4['globalAlpha'] = 0.5, _0x5e53f4['translate'](0x3 * _0x465b46, 0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](421.75 * _0x465b46, 81.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](432.75 * _0x465b46, 85.25 * _0x465b46, 431.75 * _0x465b46, 89.25 * _0x465b46, 426.75 * _0x465b46, 93.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](418.75 * _0x465b46, 95.25 * _0x465b46, 414.75 * _0x465b46, 93.25 * _0x465b46, 412.75 * _0x465b46, 89.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](411.75 * _0x465b46, 84.25 * _0x465b46, 413.75 * _0x465b46, 81.25 * _0x465b46, 421.75 * _0x465b46, 81.25 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x0]), _0x5e53f4['globalAlpha'] = 0x1, _0x5e53f4['translate'](-0x3 * _0x465b46, -0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](421.75 * _0x465b46, 81.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](432.75 * _0x465b46, 85.25 * _0x465b46, 431.75 * _0x465b46, 89.25 * _0x465b46, 426.75 * _0x465b46, 93.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](418.75 * _0x465b46, 95.25 * _0x465b46, 414.75 * _0x465b46, 93.25 * _0x465b46, 412.75 * _0x465b46, 89.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](411.75 * _0x465b46, 84.25 * _0x465b46, 413.75 * _0x465b46, 81.25 * _0x465b46, 421.75 * _0x465b46, 81.25 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x1]), _0x5e53f4['globalAlpha'] = 0.5, _0x5e53f4['translate'](0x3 * _0x465b46, 0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](432.75 * _0x465b46, 105.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](430.75 * _0x465b46, 115.25 * _0x465b46, 411.75 * _0x465b46, 130.25 * _0x465b46, 408.75 * _0x465b46, 117.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](407.75 * _0x465b46, 106.25 * _0x465b46, 414.75 * _0x465b46, 103.25 * _0x465b46, 421.75 * _0x465b46, 101.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](430.75 * _0x465b46, 100.25 * _0x465b46, 432.75 * _0x465b46, 101.25 * _0x465b46, 432.75 * _0x465b46, 105.25 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x0]), _0x5e53f4['globalAlpha'] = 0x1, _0x5e53f4['translate'](-0x3 * _0x465b46, -0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](432.75 * _0x465b46, 105.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](430.75 * _0x465b46, 115.25 * _0x465b46, 411.75 * _0x465b46, 130.25 * _0x465b46, 408.75 * _0x465b46, 117.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](407.75 * _0x465b46, 106.25 * _0x465b46, 414.75 * _0x465b46, 103.25 * _0x465b46, 421.75 * _0x465b46, 101.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](430.75 * _0x465b46, 100.25 * _0x465b46, 432.75 * _0x465b46, 101.25 * _0x465b46, 432.75 * _0x465b46, 105.25 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x1]), _0x5e53f4['globalAlpha'] = 0.5, _0x5e53f4['translate'](0x3 * _0x465b46, 0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](422.75 * _0x465b46, 153.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](437.75 * _0x465b46, 155.25 * _0x465b46, 442.75 * _0x465b46, 158.25 * _0x465b46, 436.75 * _0x465b46, 165.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](431.75 * _0x465b46, 170.25 * _0x465b46, 424.75 * _0x465b46, 167.25 * _0x465b46, 419.75 * _0x465b46, 163.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](413.75 * _0x465b46, 157.25 * _0x465b46, 415.75 * _0x465b46, 153.25 * _0x465b46, 422.75 * _0x465b46, 153.25 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x0]), _0x5e53f4['globalAlpha'] = 0x1, _0x5e53f4['translate'](-0x3 * _0x465b46, -0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](422.75 * _0x465b46, 153.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](437.75 * _0x465b46, 155.25 * _0x465b46, 442.75 * _0x465b46, 158.25 * _0x465b46, 436.75 * _0x465b46, 165.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](431.75 * _0x465b46, 170.25 * _0x465b46, 424.75 * _0x465b46, 167.25 * _0x465b46, 419.75 * _0x465b46, 163.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](413.75 * _0x465b46, 157.25 * _0x465b46, 415.75 * _0x465b46, 153.25 * _0x465b46, 422.75 * _0x465b46, 153.25 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x1]), _0x5e53f4['globalAlpha'] = 0.5, _0x5e53f4['translate'](0x3 * _0x465b46, 0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](409.75 * _0x465b46, 158.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](409.75 * _0x465b46, 168.25 * _0x465b46, 401.75 * _0x465b46, 172.25 * _0x465b46, 397.75 * _0x465b46, 167.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](394.75 * _0x465b46, 159.25 * _0x465b46, 407.75 * _0x465b46, 150.25 * _0x465b46, 408.75 * _0x465b46, 158.25 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x0]), _0x5e53f4['globalAlpha'] = 0x1, _0x5e53f4['translate'](-0x3 * _0x465b46, -0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](409.75 * _0x465b46, 158.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](409.75 * _0x465b46, 168.25 * _0x465b46, 401.75 * _0x465b46, 172.25 * _0x465b46, 397.75 * _0x465b46, 167.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](394.75 * _0x465b46, 159.25 * _0x465b46, 407.75 * _0x465b46, 150.25 * _0x465b46, 408.75 * _0x465b46, 158.25 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x1]), _0x5e53f4['globalAlpha'] = 0.5, _0x5e53f4['translate'](0x3 * _0x465b46, 0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](0xcc * _0x465b46, 238.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](0xcc * _0x465b46, 248.25 * _0x465b46, 0xb8 * _0x465b46, 255.25 * _0x465b46, 0xb4 * _0x465b46, 247.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](0xb1 * _0x465b46, 241.25 * _0x465b46, 0xbb * _0x465b46, 236.25 * _0x465b46, 0xc0 * _0x465b46, 235.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](0xc9 * _0x465b46, 233.25 * _0x465b46, 0xcc * _0x465b46, 233.25 * _0x465b46, 0xcc * _0x465b46, 238.25 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x0]), _0x5e53f4['globalAlpha'] = 0x1, _0x5e53f4['translate'](-0x3 * _0x465b46, -0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](0xcc * _0x465b46, 238.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](0xcc * _0x465b46, 248.25 * _0x465b46, 0xb8 * _0x465b46, 255.25 * _0x465b46, 0xb4 * _0x465b46, 247.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](0xb1 * _0x465b46, 241.25 * _0x465b46, 0xbb * _0x465b46, 236.25 * _0x465b46, 0xc0 * _0x465b46, 235.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](0xc9 * _0x465b46, 233.25 * _0x465b46, 0xcc * _0x465b46, 233.25 * _0x465b46, 0xcc * _0x465b46, 238.25 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x1]), _0x5e53f4['globalAlpha'] = 0.5, _0x5e53f4['translate'](0x3 * _0x465b46, 0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](0xd0 * _0x465b46, 246.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](0xca * _0x465b46, 255.25 * _0x465b46, 0xcc * _0x465b46, 258.25 * _0x465b46, 0xd4 * _0x465b46, 255.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](0xd9 * _0x465b46, 250.25 * _0x465b46, 0xd9 * _0x465b46, 248.25 * _0x465b46, 0xd8 * _0x465b46, 244.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](0xd2 * _0x465b46, 241.25 * _0x465b46, 0xd1 * _0x465b46, 245.25 * _0x465b46, 0xd0 * _0x465b46, 246.25 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x0]), _0x5e53f4['globalAlpha'] = 0x1, _0x5e53f4['translate'](-0x3 * _0x465b46, -0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](0xd0 * _0x465b46, 246.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](0xca * _0x465b46, 255.25 * _0x465b46, 0xcc * _0x465b46, 258.25 * _0x465b46, 0xd4 * _0x465b46, 255.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](0xd9 * _0x465b46, 250.25 * _0x465b46, 0xd9 * _0x465b46, 248.25 * _0x465b46, 0xd8 * _0x465b46, 244.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](0xd2 * _0x465b46, 241.25 * _0x465b46, 0xd1 * _0x465b46, 245.25 * _0x465b46, 0xd0 * _0x465b46, 246.25 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x1]), _0x5e53f4['globalAlpha'] = 0.5, _0x5e53f4['translate'](0x3 * _0x465b46, 0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](0xc5 * _0x465b46, 258.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](0xc2 * _0x465b46, 265.25 * _0x465b46, 0xba * _0x465b46, 270.25 * _0x465b46, 0xb9 * _0x465b46, 262.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](0xbb * _0x465b46, 255.25 * _0x465b46, 0xbf * _0x465b46, 252.25 * _0x465b46, 0xc3 * _0x465b46, 253.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](0xc6 * _0x465b46, 256.25 * _0x465b46, 0xc5 * _0x465b46, 257.25 * _0x465b46, 0xc5 * _0x465b46, 258.25 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x0]), _0x5e53f4['globalAlpha'] = 0x1, _0x5e53f4['translate'](-0x3 * _0x465b46, -0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](0xc5 * _0x465b46, 258.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](0xc2 * _0x465b46, 265.25 * _0x465b46, 0xba * _0x465b46, 270.25 * _0x465b46, 0xb9 * _0x465b46, 262.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](0xbb * _0x465b46, 255.25 * _0x465b46, 0xbf * _0x465b46, 252.25 * _0x465b46, 0xc3 * _0x465b46, 253.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](0xc6 * _0x465b46, 256.25 * _0x465b46, 0xc5 * _0x465b46, 257.25 * _0x465b46, 0xc5 * _0x465b46, 258.25 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x1]), _0x5e53f4['globalAlpha'] = 0.5, _0x5e53f4['translate'](0x3 * _0x465b46, 0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](0x18 * _0x465b46, 111.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](0x20 * _0x465b46, 115.25 * _0x465b46, 0x1d * _0x465b46, 123.25 * _0x465b46, 0x16 * _0x465b46, 133.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](0xf * _0x465b46, 140.25 * _0x465b46, 0x7 * _0x465b46, 137.25 * _0x465b46, 0x9 * _0x465b46, 125.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](0xc * _0x465b46, 114.25 * _0x465b46, 0x14 * _0x465b46, 110.25 * _0x465b46, 0x18 * _0x465b46, 111.25 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x0]), _0x5e53f4['globalAlpha'] = 0x1, _0x5e53f4['translate'](-0x3 * _0x465b46, -0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](0x18 * _0x465b46, 111.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](0x20 * _0x465b46, 115.25 * _0x465b46, 0x1d * _0x465b46, 123.25 * _0x465b46, 0x16 * _0x465b46, 133.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](0xf * _0x465b46, 140.25 * _0x465b46, 0x7 * _0x465b46, 137.25 * _0x465b46, 0x9 * _0x465b46, 125.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](0xc * _0x465b46, 114.25 * _0x465b46, 0x14 * _0x465b46, 110.25 * _0x465b46, 0x18 * _0x465b46, 111.25 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x1]), _0x5e53f4['globalAlpha'] = 0.5, _0x5e53f4['translate'](0x3 * _0x465b46, 0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](0x21 * _0x465b46, 137.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](0x29 * _0x465b46, 142.25 * _0x465b46, 0x28 * _0x465b46, 145.25 * _0x465b46, 0x23 * _0x465b46, 147.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](0x16 * _0x465b46, 147.25 * _0x465b46, 0x12 * _0x465b46, 144.25 * _0x465b46, 0x16 * _0x465b46, 138.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](0x1a * _0x465b46, 133.25 * _0x465b46, 0x1f * _0x465b46, 136.25 * _0x465b46, 0x21 * _0x465b46, 137.25 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x0]), _0x5e53f4['globalAlpha'] = 0x1, _0x5e53f4['translate'](-0x3 * _0x465b46, -0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](0x21 * _0x465b46, 137.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](0x29 * _0x465b46, 142.25 * _0x465b46, 0x28 * _0x465b46, 145.25 * _0x465b46, 0x23 * _0x465b46, 147.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](0x16 * _0x465b46, 147.25 * _0x465b46, 0x12 * _0x465b46, 144.25 * _0x465b46, 0x16 * _0x465b46, 138.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](0x1a * _0x465b46, 133.25 * _0x465b46, 0x1f * _0x465b46, 136.25 * _0x465b46, 0x21 * _0x465b46, 137.25 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x1]), _0x5e53f4['globalAlpha'] = 0.5, _0x5e53f4['translate'](0x3 * _0x465b46, 0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](0x24 * _0x465b46, 187.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](0x19 * _0x465b46, 198.25 * _0x465b46, 0x13 * _0x465b46, 193.25 * _0x465b46, 0x17 * _0x465b46, 187.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](0x1a * _0x465b46, 178.25 * _0x465b46, 0x20 * _0x465b46, 173.25 * _0x465b46, 0x26 * _0x465b46, 175.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](0x2c * _0x465b46, 180.25 * _0x465b46, 0x27 * _0x465b46, 186.25 * _0x465b46, 0x24 * _0x465b46, 187.25 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x0]), _0x5e53f4['globalAlpha'] = 0x1, _0x5e53f4['translate'](-0x3 * _0x465b46, -0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](0x24 * _0x465b46, 187.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](0x19 * _0x465b46, 198.25 * _0x465b46, 0x13 * _0x465b46, 193.25 * _0x465b46, 0x17 * _0x465b46, 187.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](0x1a * _0x465b46, 178.25 * _0x465b46, 0x20 * _0x465b46, 173.25 * _0x465b46, 0x26 * _0x465b46, 175.25 * _0x465b46), _0x5e53f4['bezierCurveTo'](0x2c * _0x465b46, 180.25 * _0x465b46, 0x27 * _0x465b46, 186.25 * _0x465b46, 0x24 * _0x465b46, 187.25 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x1]);
    else _0x3e7f60 == 0x1 ? (_0x398977['width'] = 0x21f * _0x465b46, _0x398977['height'] = 0x1d6 * _0x465b46, _0x5e53f4['globalAlpha'] = 0.5, _0x5e53f4['translate'](0x3 * _0x465b46, 0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](377.1428527832031 * _0x465b46, 56.87498474121094 * _0x465b46), _0x5e53f4['bezierCurveTo'](384.1428527832031 * _0x465b46, 44.87498474121094 * _0x465b46, 403.1428527832031 * _0x465b46, 39.87498474121094 * _0x465b46, 403.1428527832031 * _0x465b46, 51.87498474121094 * _0x465b46), _0x5e53f4['bezierCurveTo'](402.1428527832031 * _0x465b46, 59.87498474121094 * _0x465b46, 396.1428527832031 * _0x465b46, 61.87498474121094 * _0x465b46, 389.1428527832031 * _0x465b46, 64.87498474121094 * _0x465b46), _0x5e53f4['bezierCurveTo'](376.1428527832031 * _0x465b46, 67.87498474121094 * _0x465b46, 375.1428527832031 * _0x465b46, 62.87498474121094 * _0x465b46, 377.1428527832031 * _0x465b46, 56.87498474121094 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x0]), _0x5e53f4['globalAlpha'] = 0x1, _0x5e53f4['translate'](-0x3 * _0x465b46, -0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](377.1428527832031 * _0x465b46, 56.87498474121094 * _0x465b46), _0x5e53f4['bezierCurveTo'](384.1428527832031 * _0x465b46, 44.87498474121094 * _0x465b46, 403.1428527832031 * _0x465b46, 39.87498474121094 * _0x465b46, 403.1428527832031 * _0x465b46, 51.87498474121094 * _0x465b46), _0x5e53f4['bezierCurveTo'](402.1428527832031 * _0x465b46, 59.87498474121094 * _0x465b46, 396.1428527832031 * _0x465b46, 61.87498474121094 * _0x465b46, 389.1428527832031 * _0x465b46, 64.87498474121094 * _0x465b46), _0x5e53f4['bezierCurveTo'](376.1428527832031 * _0x465b46, 67.87498474121094 * _0x465b46, 375.1428527832031 * _0x465b46, 62.87498474121094 * _0x465b46, 377.1428527832031 * _0x465b46, 56.87498474121094 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x1]), _0x5e53f4['globalAlpha'] = 0.5, _0x5e53f4['translate'](0x3 * _0x465b46, 0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](349.1428527832031 * _0x465b46, 44.303558349609375 * _0x465b46), _0x5e53f4['bezierCurveTo'](358.1428527832031 * _0x465b46, 37.303558349609375 * _0x465b46, 370.1428527832031 * _0x465b46, 47.303558349609375 * _0x465b46, 364.1428527832031 * _0x465b46, 51.303558349609375 * _0x465b46), _0x5e53f4['bezierCurveTo'](356.1428527832031 * _0x465b46, 55.303558349609375 * _0x465b46, 345.1428527832031 * _0x465b46, 48.303558349609375 * _0x465b46, 349.1428527832031 * _0x465b46, 45.303558349609375 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x0]), _0x5e53f4['globalAlpha'] = 0x1, _0x5e53f4['translate'](-0x3 * _0x465b46, -0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](349.1428527832031 * _0x465b46, 44.303558349609375 * _0x465b46), _0x5e53f4['bezierCurveTo'](358.1428527832031 * _0x465b46, 37.303558349609375 * _0x465b46, 370.1428527832031 * _0x465b46, 47.303558349609375 * _0x465b46, 364.1428527832031 * _0x465b46, 51.303558349609375 * _0x465b46), _0x5e53f4['bezierCurveTo'](356.1428527832031 * _0x465b46, 55.303558349609375 * _0x465b46, 345.1428527832031 * _0x465b46, 48.303558349609375 * _0x465b46, 349.1428527832031 * _0x465b46, 45.303558349609375 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x1]), _0x5e53f4['globalAlpha'] = 0.5, _0x5e53f4['translate'](0x3 * _0x465b46, 0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](480.1428527832031 * _0x465b46, 152.30355834960938 * _0x465b46), _0x5e53f4['bezierCurveTo'](477.1428527832031 * _0x465b46, 145.30355834960938 * _0x465b46, 480.1428527832031 * _0x465b46, 140.30355834960938 * _0x465b46, 489.1428527832031 * _0x465b46, 135.30355834960938 * _0x465b46), _0x5e53f4['bezierCurveTo'](497.1428527832031 * _0x465b46, 133.30355834960938 * _0x465b46, 498.1428527832031 * _0x465b46, 140.30355834960938 * _0x465b46, 491.1428527832031 * _0x465b46, 147.30355834960938 * _0x465b46), _0x5e53f4['bezierCurveTo'](485.1428527832031 * _0x465b46, 155.30355834960938 * _0x465b46, 482.1428527832031 * _0x465b46, 156.30355834960938 * _0x465b46, 480.1428527832031 * _0x465b46, 152.30355834960938 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x0]), _0x5e53f4['globalAlpha'] = 0x1, _0x5e53f4['translate'](-0x3 * _0x465b46, -0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](480.1428527832031 * _0x465b46, 152.30355834960938 * _0x465b46), _0x5e53f4['bezierCurveTo'](477.1428527832031 * _0x465b46, 145.30355834960938 * _0x465b46, 480.1428527832031 * _0x465b46, 140.30355834960938 * _0x465b46, 489.1428527832031 * _0x465b46, 135.30355834960938 * _0x465b46), _0x5e53f4['bezierCurveTo'](497.1428527832031 * _0x465b46, 133.30355834960938 * _0x465b46, 498.1428527832031 * _0x465b46, 140.30355834960938 * _0x465b46, 491.1428527832031 * _0x465b46, 147.30355834960938 * _0x465b46), _0x5e53f4['bezierCurveTo'](485.1428527832031 * _0x465b46, 155.30355834960938 * _0x465b46, 482.1428527832031 * _0x465b46, 156.30355834960938 * _0x465b46, 480.1428527832031 * _0x465b46, 152.30355834960938 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x1]), _0x5e53f4['globalAlpha'] = 0.5, _0x5e53f4['translate'](0x3 * _0x465b46, 0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](211.14285278320312 * _0x465b46, 27.303558349609375 * _0x465b46), _0x5e53f4['bezierCurveTo'](223.14285278320312 * _0x465b46, 21.303558349609375 * _0x465b46, 234.14285278320312 * _0x465b46, 34.303558349609375 * _0x465b46, 232.14285278320312 * _0x465b46, 42.303558349609375 * _0x465b46), _0x5e53f4['bezierCurveTo'](228.14285278320312 * _0x465b46, 49.303558349609375 * _0x465b46, 223.14285278320312 * _0x465b46, 45.303558349609375 * _0x465b46, 213.14285278320312 * _0x465b46, 38.303558349609375 * _0x465b46), _0x5e53f4['bezierCurveTo'](205.14285278320312 * _0x465b46, 31.303558349609375 * _0x465b46, 208.14285278320312 * _0x465b46, 29.303558349609375 * _0x465b46, 211.14285278320312 * _0x465b46, 27.303558349609375 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x0]), _0x5e53f4['globalAlpha'] = 0x1, _0x5e53f4['translate'](-0x3 * _0x465b46, -0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](211.14285278320312 * _0x465b46, 27.303558349609375 * _0x465b46), _0x5e53f4['bezierCurveTo'](223.14285278320312 * _0x465b46, 21.303558349609375 * _0x465b46, 234.14285278320312 * _0x465b46, 34.303558349609375 * _0x465b46, 232.14285278320312 * _0x465b46, 42.303558349609375 * _0x465b46), _0x5e53f4['bezierCurveTo'](228.14285278320312 * _0x465b46, 49.303558349609375 * _0x465b46, 223.14285278320312 * _0x465b46, 45.303558349609375 * _0x465b46, 213.14285278320312 * _0x465b46, 38.303558349609375 * _0x465b46), _0x5e53f4['bezierCurveTo'](205.14285278320312 * _0x465b46, 31.303558349609375 * _0x465b46, 208.14285278320312 * _0x465b46, 29.303558349609375 * _0x465b46, 211.14285278320312 * _0x465b46, 27.303558349609375 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x1]), _0x5e53f4['globalAlpha'] = 0.5, _0x5e53f4['translate'](0x3 * _0x465b46, 0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](364.1428527832031 * _0x465b46, 73.30355834960938 * _0x465b46), _0x5e53f4['bezierCurveTo'](354.1428527832031 * _0x465b46, 72.30355834960938 * _0x465b46, 356.1428527832031 * _0x465b46, 64.30355834960938 * _0x465b46, 359.1428527832031 * _0x465b46, 59.303558349609375 * _0x465b46), _0x5e53f4['bezierCurveTo'](365.1428527832031 * _0x465b46, 55.303558349609375 * _0x465b46, 366.1428527832031 * _0x465b46, 61.303558349609375 * _0x465b46, 366.1428527832031 * _0x465b46, 69.30355834960938 * _0x465b46), _0x5e53f4['bezierCurveTo'](365.1428527832031 * _0x465b46, 73.30355834960938 * _0x465b46, 365.1428527832031 * _0x465b46, 73.30355834960938 * _0x465b46, 364.1428527832031 * _0x465b46, 73.30355834960938 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x0]), _0x5e53f4['globalAlpha'] = 0x1, _0x5e53f4['translate'](-0x3 * _0x465b46, -0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](364.1428527832031 * _0x465b46, 73.30355834960938 * _0x465b46), _0x5e53f4['bezierCurveTo'](354.1428527832031 * _0x465b46, 72.30355834960938 * _0x465b46, 356.1428527832031 * _0x465b46, 64.30355834960938 * _0x465b46, 359.1428527832031 * _0x465b46, 59.303558349609375 * _0x465b46), _0x5e53f4['bezierCurveTo'](365.1428527832031 * _0x465b46, 55.303558349609375 * _0x465b46, 366.1428527832031 * _0x465b46, 61.303558349609375 * _0x465b46, 366.1428527832031 * _0x465b46, 69.30355834960938 * _0x465b46), _0x5e53f4['bezierCurveTo'](365.1428527832031 * _0x465b46, 73.30355834960938 * _0x465b46, 365.1428527832031 * _0x465b46, 73.30355834960938 * _0x465b46, 364.1428527832031 * _0x465b46, 73.30355834960938 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x1]), _0x5e53f4['globalAlpha'] = 0.5, _0x5e53f4['translate'](0x3 * _0x465b46, 0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](182.14285278320312 * _0x465b46, 57.303558349609375 * _0x465b46), _0x5e53f4['bezierCurveTo'](173.14285278320312 * _0x465b46, 52.303558349609375 * _0x465b46, 177.14285278320312 * _0x465b46, 39.303558349609375 * _0x465b46, 198.14285278320312 * _0x465b46, 36.303558349609375 * _0x465b46), _0x5e53f4['bezierCurveTo'](209.14285278320312 * _0x465b46, 37.303558349609375 * _0x465b46, 206.14285278320312 * _0x465b46, 49.303558349609375 * _0x465b46, 193.14285278320312 * _0x465b46, 53.303558349609375 * _0x465b46), _0x5e53f4['bezierCurveTo'](187.14285278320312 * _0x465b46, 56.303558349609375 * _0x465b46, 185.14285278320312 * _0x465b46, 57.303558349609375 * _0x465b46, 182.14285278320312 * _0x465b46, 57.303558349609375 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x0]), _0x5e53f4['globalAlpha'] = 0x1, _0x5e53f4['translate'](-0x3 * _0x465b46, -0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](182.14285278320312 * _0x465b46, 57.303558349609375 * _0x465b46), _0x5e53f4['bezierCurveTo'](173.14285278320312 * _0x465b46, 52.303558349609375 * _0x465b46, 177.14285278320312 * _0x465b46, 39.303558349609375 * _0x465b46, 198.14285278320312 * _0x465b46, 36.303558349609375 * _0x465b46), _0x5e53f4['bezierCurveTo'](209.14285278320312 * _0x465b46, 37.303558349609375 * _0x465b46, 206.14285278320312 * _0x465b46, 49.303558349609375 * _0x465b46, 193.14285278320312 * _0x465b46, 53.303558349609375 * _0x465b46), _0x5e53f4['bezierCurveTo'](187.14285278320312 * _0x465b46, 56.303558349609375 * _0x465b46, 185.14285278320312 * _0x465b46, 57.303558349609375 * _0x465b46, 182.14285278320312 * _0x465b46, 57.303558349609375 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x1]), _0x5e53f4['globalAlpha'] = 0.5, _0x5e53f4['translate'](0x3 * _0x465b46, 0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](489.1428527832031 * _0x465b46, 267.0178527832031 * _0x465b46), _0x5e53f4['bezierCurveTo'](500.1428527832031 * _0x465b46, 257.0178527832031 * _0x465b46, 511.1428527832031 * _0x465b46, 269.0178527832031 * _0x465b46, 514.1428527832031 * _0x465b46, 275.0178527832031 * _0x465b46), _0x5e53f4['bezierCurveTo'](519.1428527832031 * _0x465b46, 285.0178527832031 * _0x465b46, 509.1428527832031 * _0x465b46, 288.0178527832031 * _0x465b46, 501.1428527832031 * _0x465b46, 282.0178527832031 * _0x465b46), _0x5e53f4['bezierCurveTo'](488.1428527832031 * _0x465b46, 277.0178527832031 * _0x465b46, 485.1428527832031 * _0x465b46, 271.0178527832031 * _0x465b46, 489.1428527832031 * _0x465b46, 267.0178527832031 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x0]), _0x5e53f4['globalAlpha'] = 0x1, _0x5e53f4['translate'](-0x3 * _0x465b46, -0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](489.1428527832031 * _0x465b46, 267.0178527832031 * _0x465b46), _0x5e53f4['bezierCurveTo'](500.1428527832031 * _0x465b46, 257.0178527832031 * _0x465b46, 511.1428527832031 * _0x465b46, 269.0178527832031 * _0x465b46, 514.1428527832031 * _0x465b46, 275.0178527832031 * _0x465b46), _0x5e53f4['bezierCurveTo'](519.1428527832031 * _0x465b46, 285.0178527832031 * _0x465b46, 509.1428527832031 * _0x465b46, 288.0178527832031 * _0x465b46, 501.1428527832031 * _0x465b46, 282.0178527832031 * _0x465b46), _0x5e53f4['bezierCurveTo'](488.1428527832031 * _0x465b46, 277.0178527832031 * _0x465b46, 485.1428527832031 * _0x465b46, 271.0178527832031 * _0x465b46, 489.1428527832031 * _0x465b46, 267.0178527832031 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x1]), _0x5e53f4['globalAlpha'] = 0.5, _0x5e53f4['translate'](0x3 * _0x465b46, 0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](480.1428527832031 * _0x465b46, 122.73213958740234 * _0x465b46), _0x5e53f4['bezierCurveTo'](469.1428527832031 * _0x465b46, 119.73213958740234 * _0x465b46, 473.1428527832031 * _0x465b46, 108.73213958740234 * _0x465b46, 476.1428527832031 * _0x465b46, 107.73213958740234 * _0x465b46), _0x5e53f4['bezierCurveTo'](483.1428527832031 * _0x465b46, 102.73213958740234 * _0x465b46, 485.1428527832031 * _0x465b46, 118.73213958740234 * _0x465b46, 480.1428527832031 * _0x465b46, 122.73213958740234 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x0]), _0x5e53f4['globalAlpha'] = 0x1, _0x5e53f4['translate'](-0x3 * _0x465b46, -0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](480.1428527832031 * _0x465b46, 122.73213958740234 * _0x465b46), _0x5e53f4['bezierCurveTo'](469.1428527832031 * _0x465b46, 119.73213958740234 * _0x465b46, 473.1428527832031 * _0x465b46, 108.73213958740234 * _0x465b46, 476.1428527832031 * _0x465b46, 107.73213958740234 * _0x465b46), _0x5e53f4['bezierCurveTo'](483.1428527832031 * _0x465b46, 102.73213958740234 * _0x465b46, 485.1428527832031 * _0x465b46, 118.73213958740234 * _0x465b46, 480.1428527832031 * _0x465b46, 122.73213958740234 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x1]), _0x5e53f4['globalAlpha'] = 0.5, _0x5e53f4['translate'](0x3 * _0x465b46, 0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](470.1428527832031 * _0x465b46, 286.3035697937012 * _0x465b46), _0x5e53f4['bezierCurveTo'](472.1428527832031 * _0x465b46, 277.3035697937012 * _0x465b46, 480.1428527832031 * _0x465b46, 277.3035697937012 * _0x465b46, 489.1428527832031 * _0x465b46, 286.3035697937012 * _0x465b46), _0x5e53f4['bezierCurveTo'](490.1428527832031 * _0x465b46, 292.3035697937012 * _0x465b46, 482.1428527832031 * _0x465b46, 294.3035697937012 * _0x465b46, 470.1428527832031 * _0x465b46, 286.3035697937012 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x0]), _0x5e53f4['globalAlpha'] = 0x1, _0x5e53f4['translate'](-0x3 * _0x465b46, -0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](470.1428527832031 * _0x465b46, 286.3035697937012 * _0x465b46), _0x5e53f4['bezierCurveTo'](472.1428527832031 * _0x465b46, 277.3035697937012 * _0x465b46, 480.1428527832031 * _0x465b46, 277.3035697937012 * _0x465b46, 489.1428527832031 * _0x465b46, 286.3035697937012 * _0x465b46), _0x5e53f4['bezierCurveTo'](490.1428527832031 * _0x465b46, 292.3035697937012 * _0x465b46, 482.1428527832031 * _0x465b46, 294.3035697937012 * _0x465b46, 470.1428527832031 * _0x465b46, 286.3035697937012 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x1]), _0x5e53f4['globalAlpha'] = 0.5, _0x5e53f4['translate'](0x3 * _0x465b46, 0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](518.1428527832031 * _0x465b46, 265.0178565979004 * _0x465b46), _0x5e53f4['bezierCurveTo'](524.1428527832031 * _0x465b46, 262.0178565979004 * _0x465b46, 521.1428527832031 * _0x465b46, 247.0178565979004 * _0x465b46, 514.1428527832031 * _0x465b46, 250.0178565979004 * _0x465b46), _0x5e53f4['bezierCurveTo'](510.1428527832031 * _0x465b46, 252.0178565979004 * _0x465b46, 509.1428527832031 * _0x465b46, 266.0178565979004 * _0x465b46, 518.1428527832031 * _0x465b46, 266.0178565979004 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x0]), _0x5e53f4['globalAlpha'] = 0x1, _0x5e53f4['translate'](-0x3 * _0x465b46, -0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](518.1428527832031 * _0x465b46, 265.0178565979004 * _0x465b46), _0x5e53f4['bezierCurveTo'](524.1428527832031 * _0x465b46, 262.0178565979004 * _0x465b46, 521.1428527832031 * _0x465b46, 247.0178565979004 * _0x465b46, 514.1428527832031 * _0x465b46, 250.0178565979004 * _0x465b46), _0x5e53f4['bezierCurveTo'](510.1428527832031 * _0x465b46, 252.0178565979004 * _0x465b46, 509.1428527832031 * _0x465b46, 266.0178565979004 * _0x465b46, 518.1428527832031 * _0x465b46, 266.0178565979004 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x1]), _0x5e53f4['globalAlpha'] = 0.5, _0x5e53f4['translate'](0x3 * _0x465b46, 0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](179.14285278320312 * _0x465b46, 399.5892858505249 * _0x465b46), _0x5e53f4['bezierCurveTo'](174.14285278320312 * _0x465b46, 385.5892858505249 * _0x465b46, 186.14285278320312 * _0x465b46, 379.5892858505249 * _0x465b46, 198.14285278320312 * _0x465b46, 379.5892858505249 * _0x465b46), _0x5e53f4['bezierCurveTo'](208.14285278320312 * _0x465b46, 379.5892858505249 * _0x465b46, 206.14285278320312 * _0x465b46, 391.5892858505249 * _0x465b46, 194.14285278320312 * _0x465b46, 396.5892858505249 * _0x465b46), _0x5e53f4['bezierCurveTo'](184.14285278320312 * _0x465b46, 401.5892858505249 * _0x465b46, 182.14285278320312 * _0x465b46, 402.5892858505249 * _0x465b46, 179.14285278320312 * _0x465b46, 399.5892858505249 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x0]), _0x5e53f4['globalAlpha'] = 0x1, _0x5e53f4['translate'](-0x3 * _0x465b46, -0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](179.14285278320312 * _0x465b46, 399.5892858505249 * _0x465b46), _0x5e53f4['bezierCurveTo'](174.14285278320312 * _0x465b46, 385.5892858505249 * _0x465b46, 186.14285278320312 * _0x465b46, 379.5892858505249 * _0x465b46, 198.14285278320312 * _0x465b46, 379.5892858505249 * _0x465b46), _0x5e53f4['bezierCurveTo'](208.14285278320312 * _0x465b46, 379.5892858505249 * _0x465b46, 206.14285278320312 * _0x465b46, 391.5892858505249 * _0x465b46, 194.14285278320312 * _0x465b46, 396.5892858505249 * _0x465b46), _0x5e53f4['bezierCurveTo'](184.14285278320312 * _0x465b46, 401.5892858505249 * _0x465b46, 182.14285278320312 * _0x465b46, 402.5892858505249 * _0x465b46, 179.14285278320312 * _0x465b46, 399.5892858505249 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x1]), _0x5e53f4['globalAlpha'] = 0.5, _0x5e53f4['translate'](0x3 * _0x465b46, 0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](163.14285278320312 * _0x465b46, 407.875 * _0x465b46), _0x5e53f4['bezierCurveTo'](152.14285278320312 * _0x465b46, 405.875 * _0x465b46, 156.14285278320312 * _0x465b46, 391.875 * _0x465b46, 163.14285278320312 * _0x465b46, 385.875 * _0x465b46), _0x5e53f4['bezierCurveTo'](170.14285278320312 * _0x465b46, 381.875 * _0x465b46, 173.14285278320312 * _0x465b46, 385.875 * _0x465b46, 170.14285278320312 * _0x465b46, 398.875 * _0x465b46), _0x5e53f4['bezierCurveTo'](169.14285278320312 * _0x465b46, 403.875 * _0x465b46, 165.14285278320312 * _0x465b46, 408.875 * _0x465b46, 164.14285278320312 * _0x465b46, 407.875 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x0]), _0x5e53f4['globalAlpha'] = 0x1, _0x5e53f4['translate'](-0x3 * _0x465b46, -0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](163.14285278320312 * _0x465b46, 407.875 * _0x465b46), _0x5e53f4['bezierCurveTo'](152.14285278320312 * _0x465b46, 405.875 * _0x465b46, 156.14285278320312 * _0x465b46, 391.875 * _0x465b46, 163.14285278320312 * _0x465b46, 385.875 * _0x465b46), _0x5e53f4['bezierCurveTo'](170.14285278320312 * _0x465b46, 381.875 * _0x465b46, 173.14285278320312 * _0x465b46, 385.875 * _0x465b46, 170.14285278320312 * _0x465b46, 398.875 * _0x465b46), _0x5e53f4['bezierCurveTo'](169.14285278320312 * _0x465b46, 403.875 * _0x465b46, 165.14285278320312 * _0x465b46, 408.875 * _0x465b46, 164.14285278320312 * _0x465b46, 407.875 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x1]), _0x5e53f4['globalAlpha'] = 0.5, _0x5e53f4['translate'](0x3 * _0x465b46, 0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](78.14285278320312 * _0x465b46, 71.73211669921875 * _0x465b46), _0x5e53f4['bezierCurveTo'](82.14285278320312 * _0x465b46, 62.73211669921875 * _0x465b46, 88.14285278320312 * _0x465b46, 69.73211669921875 * _0x465b46, 91.14285278320312 * _0x465b46, 79.73211669921875 * _0x465b46), _0x5e53f4['bezierCurveTo'](90.14285278320312 * _0x465b46, 86.73211669921875 * _0x465b46, 79.14285278320312 * _0x465b46, 83.73211669921875 * _0x465b46, 78.14285278320312 * _0x465b46, 71.73211669921875 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x0]), _0x5e53f4['globalAlpha'] = 0x1, _0x5e53f4['translate'](-0x3 * _0x465b46, -0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](78.14285278320312 * _0x465b46, 71.73211669921875 * _0x465b46), _0x5e53f4['bezierCurveTo'](82.14285278320312 * _0x465b46, 62.73211669921875 * _0x465b46, 88.14285278320312 * _0x465b46, 69.73211669921875 * _0x465b46, 91.14285278320312 * _0x465b46, 79.73211669921875 * _0x465b46), _0x5e53f4['bezierCurveTo'](90.14285278320312 * _0x465b46, 86.73211669921875 * _0x465b46, 79.14285278320312 * _0x465b46, 83.73211669921875 * _0x465b46, 78.14285278320312 * _0x465b46, 71.73211669921875 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x1]), _0x5e53f4['globalAlpha'] = 0.5, _0x5e53f4['translate'](0x3 * _0x465b46, 0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](385.1428527832031 * _0x465b46, 405.017858505249 * _0x465b46), _0x5e53f4['bezierCurveTo'](392.1428527832031 * _0x465b46, 397.017858505249 * _0x465b46, 406.1428527832031 * _0x465b46, 401.017858505249 * _0x465b46, 409.1428527832031 * _0x465b46, 418.017858505249 * _0x465b46), _0x5e53f4['bezierCurveTo'](410.1428527832031 * _0x465b46, 426.017858505249 * _0x465b46, 401.1428527832031 * _0x465b46, 425.017858505249 * _0x465b46, 388.1428527832031 * _0x465b46, 418.017858505249 * _0x465b46), _0x5e53f4['bezierCurveTo'](381.1428527832031 * _0x465b46, 411.017858505249 * _0x465b46, 383.1428527832031 * _0x465b46, 407.017858505249 * _0x465b46, 385.1428527832031 * _0x465b46, 405.017858505249 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x0]), _0x5e53f4['globalAlpha'] = 0x1, _0x5e53f4['translate'](-0x3 * _0x465b46, -0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](385.1428527832031 * _0x465b46, 405.017858505249 * _0x465b46), _0x5e53f4['bezierCurveTo'](392.1428527832031 * _0x465b46, 397.017858505249 * _0x465b46, 406.1428527832031 * _0x465b46, 401.017858505249 * _0x465b46, 409.1428527832031 * _0x465b46, 418.017858505249 * _0x465b46), _0x5e53f4['bezierCurveTo'](410.1428527832031 * _0x465b46, 426.017858505249 * _0x465b46, 401.1428527832031 * _0x465b46, 425.017858505249 * _0x465b46, 388.1428527832031 * _0x465b46, 418.017858505249 * _0x465b46), _0x5e53f4['bezierCurveTo'](381.1428527832031 * _0x465b46, 411.017858505249 * _0x465b46, 383.1428527832031 * _0x465b46, 407.017858505249 * _0x465b46, 385.1428527832031 * _0x465b46, 405.017858505249 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x1]), _0x5e53f4['globalAlpha'] = 0.5, _0x5e53f4['translate'](0x3 * _0x465b46, 0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](414.1428527832031 * _0x465b46, 361.4464282989502 * _0x465b46), _0x5e53f4['bezierCurveTo'](418.1428527832031 * _0x465b46, 352.4464282989502 * _0x465b46, 426.1428527832031 * _0x465b46, 353.4464282989502 * _0x465b46, 437.1428527832031 * _0x465b46, 362.4464282989502 * _0x465b46), _0x5e53f4['bezierCurveTo'](441.1428527832031 * _0x465b46, 366.4464282989502 * _0x465b46, 439.1428527832031 * _0x465b46, 373.4464282989502 * _0x465b46, 428.1428527832031 * _0x465b46, 372.4464282989502 * _0x465b46), _0x5e53f4['bezierCurveTo'](416.1428527832031 * _0x465b46, 370.4464282989502 * _0x465b46, 412.1428527832031 * _0x465b46, 367.4464282989502 * _0x465b46, 415.1428527832031 * _0x465b46, 361.4464282989502 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x0]), _0x5e53f4['globalAlpha'] = 0x1, _0x5e53f4['translate'](-0x3 * _0x465b46, -0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](414.1428527832031 * _0x465b46, 361.4464282989502 * _0x465b46), _0x5e53f4['bezierCurveTo'](418.1428527832031 * _0x465b46, 352.4464282989502 * _0x465b46, 426.1428527832031 * _0x465b46, 353.4464282989502 * _0x465b46, 437.1428527832031 * _0x465b46, 362.4464282989502 * _0x465b46), _0x5e53f4['bezierCurveTo'](441.1428527832031 * _0x465b46, 366.4464282989502 * _0x465b46, 439.1428527832031 * _0x465b46, 373.4464282989502 * _0x465b46, 428.1428527832031 * _0x465b46, 372.4464282989502 * _0x465b46), _0x5e53f4['bezierCurveTo'](416.1428527832031 * _0x465b46, 370.4464282989502 * _0x465b46, 412.1428527832031 * _0x465b46, 367.4464282989502 * _0x465b46, 415.1428527832031 * _0x465b46, 361.4464282989502 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x1]), _0x5e53f4['globalAlpha'] = 0.5, _0x5e53f4['translate'](0x3 * _0x465b46, 0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](453.1428527832031 * _0x465b46, 356.875 * _0x465b46), _0x5e53f4['bezierCurveTo'](458.1428527832031 * _0x465b46, 363.875 * _0x465b46, 447.1428527832031 * _0x465b46, 373.875 * _0x465b46, 444.1428527832031 * _0x465b46, 369.875 * _0x465b46), _0x5e53f4['bezierCurveTo'](441.1428527832031 * _0x465b46, 361.875 * _0x465b46, 448.1428527832031 * _0x465b46, 352.875 * _0x465b46, 453.1428527832031 * _0x465b46, 356.875 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x0]), _0x5e53f4['globalAlpha'] = 0x1, _0x5e53f4['translate'](-0x3 * _0x465b46, -0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](453.1428527832031 * _0x465b46, 356.875 * _0x465b46), _0x5e53f4['bezierCurveTo'](458.1428527832031 * _0x465b46, 363.875 * _0x465b46, 447.1428527832031 * _0x465b46, 373.875 * _0x465b46, 444.1428527832031 * _0x465b46, 369.875 * _0x465b46), _0x5e53f4['bezierCurveTo'](441.1428527832031 * _0x465b46, 361.875 * _0x465b46, 448.1428527832031 * _0x465b46, 352.875 * _0x465b46, 453.1428527832031 * _0x465b46, 356.875 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x1]), _0x5e53f4['globalAlpha'] = 0.5, _0x5e53f4['translate'](0x3 * _0x465b46, 0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](40.142852783203125 * _0x465b46, 225.1607151031494 * _0x465b46), _0x5e53f4['bezierCurveTo'](52.142852783203125 * _0x465b46, 224.1607151031494 * _0x465b46, 44.142852783203125 * _0x465b46, 251.1607151031494 * _0x465b46, 36.142852783203125 * _0x465b46, 248.1607151031494 * _0x465b46), _0x5e53f4['bezierCurveTo'](25.142852783203125 * _0x465b46, 245.1607151031494 * _0x465b46, 34.142852783203125 * _0x465b46, 225.1607151031494 * _0x465b46, 41.142852783203125 * _0x465b46, 225.1607151031494 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x0]), _0x5e53f4['globalAlpha'] = 0x1, _0x5e53f4['translate'](-0x3 * _0x465b46, -0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](40.142852783203125 * _0x465b46, 225.1607151031494 * _0x465b46), _0x5e53f4['bezierCurveTo'](52.142852783203125 * _0x465b46, 224.1607151031494 * _0x465b46, 44.142852783203125 * _0x465b46, 251.1607151031494 * _0x465b46, 36.142852783203125 * _0x465b46, 248.1607151031494 * _0x465b46), _0x5e53f4['bezierCurveTo'](25.142852783203125 * _0x465b46, 245.1607151031494 * _0x465b46, 34.142852783203125 * _0x465b46, 225.1607151031494 * _0x465b46, 41.142852783203125 * _0x465b46, 225.1607151031494 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x1]), _0x5e53f4['globalAlpha'] = 0.5, _0x5e53f4['translate'](0x3 * _0x465b46, 0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](114.14285278320312 * _0x465b46, 52.4464111328125 * _0x465b46), _0x5e53f4['bezierCurveTo'](123.14285278320312 * _0x465b46, 57.4464111328125 * _0x465b46, 111.14285278320312 * _0x465b46, 71.4464111328125 * _0x465b46, 106.14285278320312 * _0x465b46, 65.4464111328125 * _0x465b46), _0x5e53f4['bezierCurveTo'](101.14285278320312 * _0x465b46, 58.4464111328125 * _0x465b46, 111.14285278320312 * _0x465b46, 51.4464111328125 * _0x465b46, 114.14285278320312 * _0x465b46, 52.4464111328125 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x0]), _0x5e53f4['globalAlpha'] = 0x1, _0x5e53f4['translate'](-0x3 * _0x465b46, -0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](114.14285278320312 * _0x465b46, 52.4464111328125 * _0x465b46), _0x5e53f4['bezierCurveTo'](123.14285278320312 * _0x465b46, 57.4464111328125 * _0x465b46, 111.14285278320312 * _0x465b46, 71.4464111328125 * _0x465b46, 106.14285278320312 * _0x465b46, 65.4464111328125 * _0x465b46), _0x5e53f4['bezierCurveTo'](101.14285278320312 * _0x465b46, 58.4464111328125 * _0x465b46, 111.14285278320312 * _0x465b46, 51.4464111328125 * _0x465b46, 114.14285278320312 * _0x465b46, 52.4464111328125 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x1]), _0x5e53f4['globalAlpha'] = 0.5, _0x5e53f4['translate'](0x3 * _0x465b46, 0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](35.142852783203125 * _0x465b46, 256.3035707473755 * _0x465b46), _0x5e53f4['bezierCurveTo'](41.142852783203125 * _0x465b46, 263.3035707473755 * _0x465b46, 32.142852783203125 * _0x465b46, 270.3035707473755 * _0x465b46, 27.142852783203125 * _0x465b46, 270.3035707473755 * _0x465b46), _0x5e53f4['bezierCurveTo'](20.142852783203125 * _0x465b46, 267.3035707473755 * _0x465b46, 29.142852783203125 * _0x465b46, 252.3035707473755 * _0x465b46, 35.142852783203125 * _0x465b46, 255.3035707473755 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x0]), _0x5e53f4['globalAlpha'] = 0x1, _0x5e53f4['translate'](-0x3 * _0x465b46, -0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](35.142852783203125 * _0x465b46, 256.3035707473755 * _0x465b46), _0x5e53f4['bezierCurveTo'](41.142852783203125 * _0x465b46, 263.3035707473755 * _0x465b46, 32.142852783203125 * _0x465b46, 270.3035707473755 * _0x465b46, 27.142852783203125 * _0x465b46, 270.3035707473755 * _0x465b46), _0x5e53f4['bezierCurveTo'](20.142852783203125 * _0x465b46, 267.3035707473755 * _0x465b46, 29.142852783203125 * _0x465b46, 252.3035707473755 * _0x465b46, 35.142852783203125 * _0x465b46, 255.3035707473755 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x1]), _0x5e53f4['globalAlpha'] = 0.5, _0x5e53f4['translate'](0x3 * _0x465b46, 0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](48.142852783203125 * _0x465b46, 266.4464282989502 * _0x465b46), _0x5e53f4['bezierCurveTo'](59.142852783203125 * _0x465b46, 273.4464282989502 * _0x465b46, 41.142852783203125 * _0x465b46, 290.4464282989502 * _0x465b46, 33.142852783203125 * _0x465b46, 285.4464282989502 * _0x465b46), _0x5e53f4['bezierCurveTo'](25.142852783203125 * _0x465b46, 277.4464282989502 * _0x465b46, 44.142852783203125 * _0x465b46, 261.4464282989502 * _0x465b46, 48.142852783203125 * _0x465b46, 266.4464282989502 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x0]), _0x5e53f4['globalAlpha'] = 0x1, _0x5e53f4['translate'](-0x3 * _0x465b46, -0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](48.142852783203125 * _0x465b46, 266.4464282989502 * _0x465b46), _0x5e53f4['bezierCurveTo'](59.142852783203125 * _0x465b46, 273.4464282989502 * _0x465b46, 41.142852783203125 * _0x465b46, 290.4464282989502 * _0x465b46, 33.142852783203125 * _0x465b46, 285.4464282989502 * _0x465b46), _0x5e53f4['bezierCurveTo'](25.142852783203125 * _0x465b46, 277.4464282989502 * _0x465b46, 44.142852783203125 * _0x465b46, 261.4464282989502 * _0x465b46, 48.142852783203125 * _0x465b46, 266.4464282989502 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x1]), _0x5e53f4['globalAlpha'] = 0.5, _0x5e53f4['translate'](0x3 * _0x465b46, 0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](138.14285278320312 * _0x465b46, 385.5892868041992 * _0x465b46), _0x5e53f4['bezierCurveTo'](150.14285278320312 * _0x465b46, 387.5892868041992 * _0x465b46, 140.14285278320312 * _0x465b46, 405.5892868041992 * _0x465b46, 131.14285278320312 * _0x465b46, 402.5892868041992 * _0x465b46), _0x5e53f4['bezierCurveTo'](125.14285278320312 * _0x465b46, 397.5892868041992 * _0x465b46, 134.14285278320312 * _0x465b46, 385.5892868041992 * _0x465b46, 138.14285278320312 * _0x465b46, 385.5892868041992 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x0]), _0x5e53f4['globalAlpha'] = 0x1, _0x5e53f4['translate'](-0x3 * _0x465b46, -0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](138.14285278320312 * _0x465b46, 385.5892868041992 * _0x465b46), _0x5e53f4['bezierCurveTo'](150.14285278320312 * _0x465b46, 387.5892868041992 * _0x465b46, 140.14285278320312 * _0x465b46, 405.5892868041992 * _0x465b46, 131.14285278320312 * _0x465b46, 402.5892868041992 * _0x465b46), _0x5e53f4['bezierCurveTo'](125.14285278320312 * _0x465b46, 397.5892868041992 * _0x465b46, 134.14285278320312 * _0x465b46, 385.5892868041992 * _0x465b46, 138.14285278320312 * _0x465b46, 385.5892868041992 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x1]), _0x5e53f4['globalAlpha'] = 0.5, _0x5e53f4['translate'](0x3 * _0x465b46, 0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](218.14285278320312 * _0x465b46, 394.16071701049805 * _0x465b46), _0x5e53f4['bezierCurveTo'](224.14285278320312 * _0x465b46, 398.16071701049805 * _0x465b46, 222.14285278320312 * _0x465b46, 403.16071701049805 * _0x465b46, 214.14285278320312 * _0x465b46, 407.16071701049805 * _0x465b46), _0x5e53f4['bezierCurveTo'](204.14285278320312 * _0x465b46, 407.16071701049805 * _0x465b46, 213.14285278320312 * _0x465b46, 392.16071701049805 * _0x465b46, 218.14285278320312 * _0x465b46, 394.16071701049805 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x0]), _0x5e53f4['globalAlpha'] = 0x1, _0x5e53f4['translate'](-0x3 * _0x465b46, -0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](218.14285278320312 * _0x465b46, 394.16071701049805 * _0x465b46), _0x5e53f4['bezierCurveTo'](224.14285278320312 * _0x465b46, 398.16071701049805 * _0x465b46, 222.14285278320312 * _0x465b46, 403.16071701049805 * _0x465b46, 214.14285278320312 * _0x465b46, 407.16071701049805 * _0x465b46), _0x5e53f4['bezierCurveTo'](204.14285278320312 * _0x465b46, 407.16071701049805 * _0x465b46, 213.14285278320312 * _0x465b46, 392.16071701049805 * _0x465b46, 218.14285278320312 * _0x465b46, 394.16071701049805 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x1]), _0x5e53f4['translate'](0x32 * _0x465b46, 0x64 * _0x465b46)) : (_0x398977['width'] = 0x21f * _0x465b46, _0x398977['height'] = 0x1d6 * _0x465b46, _0x5e53f4['globalAlpha'] = 0.5, _0x5e53f4['translate'](0x3 * _0x465b46, 0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](97.14285278320312 * _0x465b46, 113.875 * _0x465b46), _0x5e53f4['bezierCurveTo'](104.14285278320312 * _0x465b46, 106.875 * _0x465b46, 113.14285278320312 * _0x465b46, 109.875 * _0x465b46, 118.14285278320312 * _0x465b46, 118.875 * _0x465b46), _0x5e53f4['bezierCurveTo'](119.14285278320312 * _0x465b46, 121.875 * _0x465b46, 118.14285278320312 * _0x465b46, 129.875 * _0x465b46, 103.14285278320312 * _0x465b46, 124.875 * _0x465b46), _0x5e53f4['bezierCurveTo'](94.14285278320312 * _0x465b46, 120.875 * _0x465b46, 95.14285278320312 * _0x465b46, 117.875 * _0x465b46, 97.14285278320312 * _0x465b46, 113.875 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x0]), _0x5e53f4['globalAlpha'] = 0x1, _0x5e53f4['translate'](-0x3 * _0x465b46, -0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](97.14285278320312 * _0x465b46, 113.875 * _0x465b46), _0x5e53f4['bezierCurveTo'](104.14285278320312 * _0x465b46, 106.875 * _0x465b46, 113.14285278320312 * _0x465b46, 109.875 * _0x465b46, 118.14285278320312 * _0x465b46, 118.875 * _0x465b46), _0x5e53f4['bezierCurveTo'](119.14285278320312 * _0x465b46, 121.875 * _0x465b46, 118.14285278320312 * _0x465b46, 129.875 * _0x465b46, 103.14285278320312 * _0x465b46, 124.875 * _0x465b46), _0x5e53f4['bezierCurveTo'](94.14285278320312 * _0x465b46, 120.875 * _0x465b46, 95.14285278320312 * _0x465b46, 117.875 * _0x465b46, 97.14285278320312 * _0x465b46, 113.875 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x1]), _0x5e53f4['globalAlpha'] = 0.5, _0x5e53f4['translate'](0x3 * _0x465b46, 0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](88.14285278320312 * _0x465b46, 138.87498474121094 * _0x465b46), _0x5e53f4['bezierCurveTo'](90.14285278320312 * _0x465b46, 128.87498474121094 * _0x465b46, 104.14285278320312 * _0x465b46, 130.87498474121094 * _0x465b46, 107.14285278320312 * _0x465b46, 138.87498474121094 * _0x465b46), _0x5e53f4['bezierCurveTo'](109.14285278320312 * _0x465b46, 147.87498474121094 * _0x465b46, 89.14285278320312 * _0x465b46, 145.87498474121094 * _0x465b46, 88.14285278320312 * _0x465b46, 138.87498474121094 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x0]), _0x5e53f4['globalAlpha'] = 0x1, _0x5e53f4['translate'](-0x3 * _0x465b46, -0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](88.14285278320312 * _0x465b46, 138.87498474121094 * _0x465b46), _0x5e53f4['bezierCurveTo'](90.14285278320312 * _0x465b46, 128.87498474121094 * _0x465b46, 104.14285278320312 * _0x465b46, 130.87498474121094 * _0x465b46, 107.14285278320312 * _0x465b46, 138.87498474121094 * _0x465b46), _0x5e53f4['bezierCurveTo'](109.14285278320312 * _0x465b46, 147.87498474121094 * _0x465b46, 89.14285278320312 * _0x465b46, 145.87498474121094 * _0x465b46, 88.14285278320312 * _0x465b46, 138.87498474121094 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x1]), _0x5e53f4['globalAlpha'] = 0.5, _0x5e53f4['translate'](0x3 * _0x465b46, 0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](194.14285278320312 * _0x465b46, 44.87498474121094 * _0x465b46), _0x5e53f4['bezierCurveTo'](202.14285278320312 * _0x465b46, 49.87498474121094 * _0x465b46, 195.14285278320312 * _0x465b46, 62.87498474121094 * _0x465b46, 187.14285278320312 * _0x465b46, 60.87498474121094 * _0x465b46), _0x5e53f4['bezierCurveTo'](180.14285278320312 * _0x465b46, 57.87498474121094 * _0x465b46, 190.14285278320312 * _0x465b46, 40.87498474121094 * _0x465b46, 194.14285278320312 * _0x465b46, 44.87498474121094 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x0]), _0x5e53f4['globalAlpha'] = 0x1, _0x5e53f4['translate'](-0x3 * _0x465b46, -0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](194.14285278320312 * _0x465b46, 44.87498474121094 * _0x465b46), _0x5e53f4['bezierCurveTo'](202.14285278320312 * _0x465b46, 49.87498474121094 * _0x465b46, 195.14285278320312 * _0x465b46, 62.87498474121094 * _0x465b46, 187.14285278320312 * _0x465b46, 60.87498474121094 * _0x465b46), _0x5e53f4['bezierCurveTo'](180.14285278320312 * _0x465b46, 57.87498474121094 * _0x465b46, 190.14285278320312 * _0x465b46, 40.87498474121094 * _0x465b46, 194.14285278320312 * _0x465b46, 44.87498474121094 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x1]), _0x5e53f4['globalAlpha'] = 0.5, _0x5e53f4['translate'](0x3 * _0x465b46, 0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](22.142852783203125 * _0x465b46, 218.44642639160156 * _0x465b46), _0x5e53f4['bezierCurveTo'](31.142852783203125 * _0x465b46, 205.44642639160156 * _0x465b46, 49.142852783203125 * _0x465b46, 221.44642639160156 * _0x465b46, 49.142852783203125 * _0x465b46, 230.44642639160156 * _0x465b46), _0x5e53f4['bezierCurveTo'](44.142852783203125 * _0x465b46, 243.44642639160156 * _0x465b46, 14.142852783203125 * _0x465b46, 228.44642639160156 * _0x465b46, 22.142852783203125 * _0x465b46, 218.44642639160156 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x0]), _0x5e53f4['globalAlpha'] = 0x1, _0x5e53f4['translate'](-0x3 * _0x465b46, -0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](22.142852783203125 * _0x465b46, 218.44642639160156 * _0x465b46), _0x5e53f4['bezierCurveTo'](31.142852783203125 * _0x465b46, 205.44642639160156 * _0x465b46, 49.142852783203125 * _0x465b46, 221.44642639160156 * _0x465b46, 49.142852783203125 * _0x465b46, 230.44642639160156 * _0x465b46), _0x5e53f4['bezierCurveTo'](44.142852783203125 * _0x465b46, 243.44642639160156 * _0x465b46, 14.142852783203125 * _0x465b46, 228.44642639160156 * _0x465b46, 22.142852783203125 * _0x465b46, 218.44642639160156 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x1]), _0x5e53f4['globalAlpha'] = 0.5, _0x5e53f4['translate'](0x3 * _0x465b46, 0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](41.142852783203125 * _0x465b46, 249.875 * _0x465b46), _0x5e53f4['bezierCurveTo'](33.142852783203125 * _0x465b46, 255.875 * _0x465b46, 30.142852783203125 * _0x465b46, 265.875 * _0x465b46, 40.142852783203125 * _0x465b46, 266.875 * _0x465b46), _0x5e53f4['bezierCurveTo'](49.142852783203125 * _0x465b46, 261.875 * _0x465b46, 53.142852783203125 * _0x465b46, 244.875 * _0x465b46, 41.142852783203125 * _0x465b46, 249.875 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x0]), _0x5e53f4['globalAlpha'] = 0x1, _0x5e53f4['translate'](-0x3 * _0x465b46, -0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](41.142852783203125 * _0x465b46, 249.875 * _0x465b46), _0x5e53f4['bezierCurveTo'](33.142852783203125 * _0x465b46, 255.875 * _0x465b46, 30.142852783203125 * _0x465b46, 265.875 * _0x465b46, 40.142852783203125 * _0x465b46, 266.875 * _0x465b46), _0x5e53f4['bezierCurveTo'](49.142852783203125 * _0x465b46, 261.875 * _0x465b46, 53.142852783203125 * _0x465b46, 244.875 * _0x465b46, 41.142852783203125 * _0x465b46, 249.875 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x1]), _0x5e53f4['globalAlpha'] = 0.5, _0x5e53f4['translate'](0x3 * _0x465b46, 0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](105.14285278320312 * _0x465b46, 369.875 * _0x465b46), _0x5e53f4['bezierCurveTo'](92.14285278320312 * _0x465b46, 361.875 * _0x465b46, 77.14285278320312 * _0x465b46, 375.875 * _0x465b46, 79.14285278320312 * _0x465b46, 384.875 * _0x465b46), _0x5e53f4['bezierCurveTo'](84.14285278320312 * _0x465b46, 399.875 * _0x465b46, 114.14285278320312 * _0x465b46, 375.875 * _0x465b46, 104.14285278320312 * _0x465b46, 369.875 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x0]), _0x5e53f4['globalAlpha'] = 0x1, _0x5e53f4['translate'](-0x3 * _0x465b46, -0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](105.14285278320312 * _0x465b46, 369.875 * _0x465b46), _0x5e53f4['bezierCurveTo'](92.14285278320312 * _0x465b46, 361.875 * _0x465b46, 77.14285278320312 * _0x465b46, 375.875 * _0x465b46, 79.14285278320312 * _0x465b46, 384.875 * _0x465b46), _0x5e53f4['bezierCurveTo'](84.14285278320312 * _0x465b46, 399.875 * _0x465b46, 114.14285278320312 * _0x465b46, 375.875 * _0x465b46, 104.14285278320312 * _0x465b46, 369.875 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x1]), _0x5e53f4['globalAlpha'] = 0.5, _0x5e53f4['translate'](0x3 * _0x465b46, 0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](233.14285278320312 * _0x465b46, 43.4464111328125 * _0x465b46), _0x5e53f4['bezierCurveTo'](238.14285278320312 * _0x465b46, 47.4464111328125 * _0x465b46, 222.14285278320312 * _0x465b46, 73.4464111328125 * _0x465b46, 214.14285278320312 * _0x465b46, 58.4464111328125 * _0x465b46), _0x5e53f4['bezierCurveTo'](211.14285278320312 * _0x465b46, 48.4464111328125 * _0x465b46, 230.14285278320312 * _0x465b46, 35.4464111328125 * _0x465b46, 233.14285278320312 * _0x465b46, 42.4464111328125 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x0]), _0x5e53f4['globalAlpha'] = 0x1, _0x5e53f4['translate'](-0x3 * _0x465b46, -0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](233.14285278320312 * _0x465b46, 43.4464111328125 * _0x465b46), _0x5e53f4['bezierCurveTo'](238.14285278320312 * _0x465b46, 47.4464111328125 * _0x465b46, 222.14285278320312 * _0x465b46, 73.4464111328125 * _0x465b46, 214.14285278320312 * _0x465b46, 58.4464111328125 * _0x465b46), _0x5e53f4['bezierCurveTo'](211.14285278320312 * _0x465b46, 48.4464111328125 * _0x465b46, 230.14285278320312 * _0x465b46, 35.4464111328125 * _0x465b46, 233.14285278320312 * _0x465b46, 42.4464111328125 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x1]), _0x5e53f4['globalAlpha'] = 0.5, _0x5e53f4['translate'](0x3 * _0x465b46, 0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](371.1428527832031 * _0x465b46, 34.73213195800781 * _0x465b46), _0x5e53f4['bezierCurveTo'](378.1428527832031 * _0x465b46, 20.732131958007812 * _0x465b46, 395.1428527832031 * _0x465b46, 32.73213195800781 * _0x465b46, 396.1428527832031 * _0x465b46, 42.73213195800781 * _0x465b46), _0x5e53f4['bezierCurveTo'](399.1428527832031 * _0x465b46, 59.73213195800781 * _0x465b46, 369.1428527832031 * _0x465b46, 43.73213195800781 * _0x465b46, 372.1428527832031 * _0x465b46, 34.73213195800781 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x0]), _0x5e53f4['globalAlpha'] = 0x1, _0x5e53f4['translate'](-0x3 * _0x465b46, -0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](371.1428527832031 * _0x465b46, 34.73213195800781 * _0x465b46), _0x5e53f4['bezierCurveTo'](378.1428527832031 * _0x465b46, 20.732131958007812 * _0x465b46, 395.1428527832031 * _0x465b46, 32.73213195800781 * _0x465b46, 396.1428527832031 * _0x465b46, 42.73213195800781 * _0x465b46), _0x5e53f4['bezierCurveTo'](399.1428527832031 * _0x465b46, 59.73213195800781 * _0x465b46, 369.1428527832031 * _0x465b46, 43.73213195800781 * _0x465b46, 372.1428527832031 * _0x465b46, 34.73213195800781 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x1]), _0x5e53f4['globalAlpha'] = 0.5, _0x5e53f4['translate'](0x3 * _0x465b46, 0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](117.14285278320312 * _0x465b46, 392.5892868041992 * _0x465b46), _0x5e53f4['bezierCurveTo'](115.14285278320312 * _0x465b46, 384.5892868041992 * _0x465b46, 109.14285278320312 * _0x465b46, 383.5892868041992 * _0x465b46, 103.14285278320312 * _0x465b46, 384.5892868041992 * _0x465b46), _0x5e53f4['bezierCurveTo'](95.14285278320312 * _0x465b46, 389.5892868041992 * _0x465b46, 97.14285278320312 * _0x465b46, 393.5892868041992 * _0x465b46, 107.14285278320312 * _0x465b46, 396.5892868041992 * _0x465b46), _0x5e53f4['bezierCurveTo'](114.14285278320312 * _0x465b46, 396.5892868041992 * _0x465b46, 118.14285278320312 * _0x465b46, 393.5892868041992 * _0x465b46, 116.14285278320312 * _0x465b46, 391.5892868041992 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x0]), _0x5e53f4['globalAlpha'] = 0x1, _0x5e53f4['translate'](-0x3 * _0x465b46, -0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](117.14285278320312 * _0x465b46, 392.5892868041992 * _0x465b46), _0x5e53f4['bezierCurveTo'](115.14285278320312 * _0x465b46, 384.5892868041992 * _0x465b46, 109.14285278320312 * _0x465b46, 383.5892868041992 * _0x465b46, 103.14285278320312 * _0x465b46, 384.5892868041992 * _0x465b46), _0x5e53f4['bezierCurveTo'](95.14285278320312 * _0x465b46, 389.5892868041992 * _0x465b46, 97.14285278320312 * _0x465b46, 393.5892868041992 * _0x465b46, 107.14285278320312 * _0x465b46, 396.5892868041992 * _0x465b46), _0x5e53f4['bezierCurveTo'](114.14285278320312 * _0x465b46, 396.5892868041992 * _0x465b46, 118.14285278320312 * _0x465b46, 393.5892868041992 * _0x465b46, 116.14285278320312 * _0x465b46, 391.5892868041992 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x1]), _0x5e53f4['globalAlpha'] = 0.5, _0x5e53f4['translate'](0x3 * _0x465b46, 0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](122.14285278320312 * _0x465b46, 403.7321472167969 * _0x465b46), _0x5e53f4['bezierCurveTo'](132.14285278320312 * _0x465b46, 399.7321472167969 * _0x465b46, 133.14285278320312 * _0x465b46, 418.7321472167969 * _0x465b46, 129.14285278320312 * _0x465b46, 419.7321472167969 * _0x465b46), _0x5e53f4['bezierCurveTo'](119.14285278320312 * _0x465b46, 420.7321472167969 * _0x465b46, 118.14285278320312 * _0x465b46, 402.7321472167969 * _0x465b46, 123.14285278320312 * _0x465b46, 403.7321472167969 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x0]), _0x5e53f4['globalAlpha'] = 0x1, _0x5e53f4['translate'](-0x3 * _0x465b46, -0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](122.14285278320312 * _0x465b46, 403.7321472167969 * _0x465b46), _0x5e53f4['bezierCurveTo'](132.14285278320312 * _0x465b46, 399.7321472167969 * _0x465b46, 133.14285278320312 * _0x465b46, 418.7321472167969 * _0x465b46, 129.14285278320312 * _0x465b46, 419.7321472167969 * _0x465b46), _0x5e53f4['bezierCurveTo'](119.14285278320312 * _0x465b46, 420.7321472167969 * _0x465b46, 118.14285278320312 * _0x465b46, 402.7321472167969 * _0x465b46, 123.14285278320312 * _0x465b46, 403.7321472167969 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x1]), _0x5e53f4['globalAlpha'] = 0.5, _0x5e53f4['translate'](0x3 * _0x465b46, 0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](317.1428527832031 * _0x465b46, 417.5892868041992 * _0x465b46), _0x5e53f4['bezierCurveTo'](333.1428527832031 * _0x465b46, 421.5892868041992 * _0x465b46, 299.1428527832031 * _0x465b46, 455.5892868041992 * _0x465b46, 294.1428527832031 * _0x465b46, 438.5892868041992 * _0x465b46), _0x5e53f4['bezierCurveTo'](289.1428527832031 * _0x465b46, 423.5892868041992 * _0x465b46, 307.1428527832031 * _0x465b46, 414.5892868041992 * _0x465b46, 317.1428527832031 * _0x465b46, 417.5892868041992 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x0]), _0x5e53f4['globalAlpha'] = 0x1, _0x5e53f4['translate'](-0x3 * _0x465b46, -0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](317.1428527832031 * _0x465b46, 417.5892868041992 * _0x465b46), _0x5e53f4['bezierCurveTo'](333.1428527832031 * _0x465b46, 421.5892868041992 * _0x465b46, 299.1428527832031 * _0x465b46, 455.5892868041992 * _0x465b46, 294.1428527832031 * _0x465b46, 438.5892868041992 * _0x465b46), _0x5e53f4['bezierCurveTo'](289.1428527832031 * _0x465b46, 423.5892868041992 * _0x465b46, 307.1428527832031 * _0x465b46, 414.5892868041992 * _0x465b46, 317.1428527832031 * _0x465b46, 417.5892868041992 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x1]), _0x5e53f4['globalAlpha'] = 0.5, _0x5e53f4['translate'](0x3 * _0x465b46, 0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](322.1428527832031 * _0x465b46, 437.30357360839844 * _0x465b46), _0x5e53f4['bezierCurveTo'](330.1428527832031 * _0x465b46, 431.30357360839844 * _0x465b46, 336.1428527832031 * _0x465b46, 440.30357360839844 * _0x465b46, 336.1428527832031 * _0x465b46, 448.30357360839844 * _0x465b46), _0x5e53f4['bezierCurveTo'](334.1428527832031 * _0x465b46, 454.30357360839844 * _0x465b46, 316.1428527832031 * _0x465b46, 447.30357360839844 * _0x465b46, 323.1428527832031 * _0x465b46, 437.30357360839844 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x0]), _0x5e53f4['globalAlpha'] = 0x1, _0x5e53f4['translate'](-0x3 * _0x465b46, -0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](322.1428527832031 * _0x465b46, 437.30357360839844 * _0x465b46), _0x5e53f4['bezierCurveTo'](330.1428527832031 * _0x465b46, 431.30357360839844 * _0x465b46, 336.1428527832031 * _0x465b46, 440.30357360839844 * _0x465b46, 336.1428527832031 * _0x465b46, 448.30357360839844 * _0x465b46), _0x5e53f4['bezierCurveTo'](334.1428527832031 * _0x465b46, 454.30357360839844 * _0x465b46, 316.1428527832031 * _0x465b46, 447.30357360839844 * _0x465b46, 323.1428527832031 * _0x465b46, 437.30357360839844 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x1]), _0x5e53f4['globalAlpha'] = 0.5, _0x5e53f4['translate'](0x3 * _0x465b46, 0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](438.1428527832031 * _0x465b46, 358.5892868041992 * _0x465b46), _0x5e53f4['bezierCurveTo'](455.1428527832031 * _0x465b46, 351.5892868041992 * _0x465b46, 467.1428527832031 * _0x465b46, 371.5892868041992 * _0x465b46, 455.1428527832031 * _0x465b46, 374.5892868041992 * _0x465b46), _0x5e53f4['bezierCurveTo'](442.1428527832031 * _0x465b46, 377.5892868041992 * _0x465b46, 429.1428527832031 * _0x465b46, 361.5892868041992 * _0x465b46, 438.1428527832031 * _0x465b46, 358.5892868041992 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x0]), _0x5e53f4['globalAlpha'] = 0x1, _0x5e53f4['translate'](-0x3 * _0x465b46, -0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](438.1428527832031 * _0x465b46, 358.5892868041992 * _0x465b46), _0x5e53f4['bezierCurveTo'](455.1428527832031 * _0x465b46, 351.5892868041992 * _0x465b46, 467.1428527832031 * _0x465b46, 371.5892868041992 * _0x465b46, 455.1428527832031 * _0x465b46, 374.5892868041992 * _0x465b46), _0x5e53f4['bezierCurveTo'](442.1428527832031 * _0x465b46, 377.5892868041992 * _0x465b46, 429.1428527832031 * _0x465b46, 361.5892868041992 * _0x465b46, 438.1428527832031 * _0x465b46, 358.5892868041992 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x1]), _0x5e53f4['globalAlpha'] = 0.5, _0x5e53f4['translate'](0x3 * _0x465b46, 0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](423.1428527832031 * _0x465b46, 363.16071701049805 * _0x465b46), _0x5e53f4['bezierCurveTo'](433.1428527832031 * _0x465b46, 362.16071701049805 * _0x465b46, 433.1428527832031 * _0x465b46, 374.16071701049805 * _0x465b46, 421.1428527832031 * _0x465b46, 382.16071701049805 * _0x465b46), _0x5e53f4['bezierCurveTo'](413.1428527832031 * _0x465b46, 383.16071701049805 * _0x465b46, 413.1428527832031 * _0x465b46, 368.16071701049805 * _0x465b46, 423.1428527832031 * _0x465b46, 363.16071701049805 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x0]), _0x5e53f4['globalAlpha'] = 0x1, _0x5e53f4['translate'](-0x3 * _0x465b46, -0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](423.1428527832031 * _0x465b46, 363.16071701049805 * _0x465b46), _0x5e53f4['bezierCurveTo'](433.1428527832031 * _0x465b46, 362.16071701049805 * _0x465b46, 433.1428527832031 * _0x465b46, 374.16071701049805 * _0x465b46, 421.1428527832031 * _0x465b46, 382.16071701049805 * _0x465b46), _0x5e53f4['bezierCurveTo'](413.1428527832031 * _0x465b46, 383.16071701049805 * _0x465b46, 413.1428527832031 * _0x465b46, 368.16071701049805 * _0x465b46, 423.1428527832031 * _0x465b46, 363.16071701049805 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x1]), _0x5e53f4['globalAlpha'] = 0.5, _0x5e53f4['translate'](0x3 * _0x465b46, 0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](431.1428527832031 * _0x465b46, 333.0178565979004 * _0x465b46), _0x5e53f4['bezierCurveTo'](447.1428527832031 * _0x465b46, 330.0178565979004 * _0x465b46, 448.1428527832031 * _0x465b46, 340.0178565979004 * _0x465b46, 447.1428527832031 * _0x465b46, 343.0178565979004 * _0x465b46), _0x5e53f4['bezierCurveTo'](445.1428527832031 * _0x465b46, 351.0178565979004 * _0x465b46, 415.1428527832031 * _0x465b46, 343.0178565979004 * _0x465b46, 431.1428527832031 * _0x465b46, 333.0178565979004 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x0]), _0x5e53f4['globalAlpha'] = 0x1, _0x5e53f4['translate'](-0x3 * _0x465b46, -0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](431.1428527832031 * _0x465b46, 333.0178565979004 * _0x465b46), _0x5e53f4['bezierCurveTo'](447.1428527832031 * _0x465b46, 330.0178565979004 * _0x465b46, 448.1428527832031 * _0x465b46, 340.0178565979004 * _0x465b46, 447.1428527832031 * _0x465b46, 343.0178565979004 * _0x465b46), _0x5e53f4['bezierCurveTo'](445.1428527832031 * _0x465b46, 351.0178565979004 * _0x465b46, 415.1428527832031 * _0x465b46, 343.0178565979004 * _0x465b46, 431.1428527832031 * _0x465b46, 333.0178565979004 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x1]), _0x5e53f4['globalAlpha'] = 0.5, _0x5e53f4['translate'](0x3 * _0x465b46, 0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](486.1428527832031 * _0x465b46, 272.44642639160156 * _0x465b46), _0x5e53f4['bezierCurveTo'](493.1428527832031 * _0x465b46, 260.44642639160156 * _0x465b46, 519.1428527832031 * _0x465b46, 277.44642639160156 * _0x465b46, 511.1428527832031 * _0x465b46, 289.44642639160156 * _0x465b46), _0x5e53f4['bezierCurveTo'](503.1428527832031 * _0x465b46, 297.44642639160156 * _0x465b46, 483.1428527832031 * _0x465b46, 277.44642639160156 * _0x465b46, 486.1428527832031 * _0x465b46, 273.44642639160156 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x0]), _0x5e53f4['globalAlpha'] = 0x1, _0x5e53f4['translate'](-0x3 * _0x465b46, -0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](486.1428527832031 * _0x465b46, 272.44642639160156 * _0x465b46), _0x5e53f4['bezierCurveTo'](493.1428527832031 * _0x465b46, 260.44642639160156 * _0x465b46, 519.1428527832031 * _0x465b46, 277.44642639160156 * _0x465b46, 511.1428527832031 * _0x465b46, 289.44642639160156 * _0x465b46), _0x5e53f4['bezierCurveTo'](503.1428527832031 * _0x465b46, 297.44642639160156 * _0x465b46, 483.1428527832031 * _0x465b46, 277.44642639160156 * _0x465b46, 486.1428527832031 * _0x465b46, 273.44642639160156 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x1]), _0x5e53f4['globalAlpha'] = 0.5, _0x5e53f4['translate'](0x3 * _0x465b46, 0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](503.1428527832031 * _0x465b46, 245.01785278320312 * _0x465b46), _0x5e53f4['bezierCurveTo'](516.1428527832031 * _0x465b46, 247.01785278320312 * _0x465b46, 513.1428527832031 * _0x465b46, 264.0178527832031 * _0x465b46, 509.1428527832031 * _0x465b46, 265.0178527832031 * _0x465b46), _0x5e53f4['bezierCurveTo'](499.1428527832031 * _0x465b46, 268.0178527832031 * _0x465b46, 494.1428527832031 * _0x465b46, 244.01785278320312 * _0x465b46, 504.1428527832031 * _0x465b46, 245.01785278320312 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x0]), _0x5e53f4['globalAlpha'] = 0x1, _0x5e53f4['translate'](-0x3 * _0x465b46, -0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](503.1428527832031 * _0x465b46, 245.01785278320312 * _0x465b46), _0x5e53f4['bezierCurveTo'](516.1428527832031 * _0x465b46, 247.01785278320312 * _0x465b46, 513.1428527832031 * _0x465b46, 264.0178527832031 * _0x465b46, 509.1428527832031 * _0x465b46, 265.0178527832031 * _0x465b46), _0x5e53f4['bezierCurveTo'](499.1428527832031 * _0x465b46, 268.0178527832031 * _0x465b46, 494.1428527832031 * _0x465b46, 244.01785278320312 * _0x465b46, 504.1428527832031 * _0x465b46, 245.01785278320312 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x1]), _0x5e53f4['globalAlpha'] = 0.5, _0x5e53f4['translate'](0x3 * _0x465b46, 0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](518.1428527832031 * _0x465b46, 179.73213958740234 * _0x465b46), _0x5e53f4['bezierCurveTo'](529.1428527832031 * _0x465b46, 181.73213958740234 * _0x465b46, 514.1428527832031 * _0x465b46, 212.73213958740234 * _0x465b46, 505.1428527832031 * _0x465b46, 200.73213958740234 * _0x465b46), _0x5e53f4['bezierCurveTo'](499.1428527832031 * _0x465b46, 186.73213958740234 * _0x465b46, 515.1428527832031 * _0x465b46, 177.73213958740234 * _0x465b46, 518.1428527832031 * _0x465b46, 179.73213958740234 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x0]), _0x5e53f4['globalAlpha'] = 0x1, _0x5e53f4['translate'](-0x3 * _0x465b46, -0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](518.1428527832031 * _0x465b46, 179.73213958740234 * _0x465b46), _0x5e53f4['bezierCurveTo'](529.1428527832031 * _0x465b46, 181.73213958740234 * _0x465b46, 514.1428527832031 * _0x465b46, 212.73213958740234 * _0x465b46, 505.1428527832031 * _0x465b46, 200.73213958740234 * _0x465b46), _0x5e53f4['bezierCurveTo'](499.1428527832031 * _0x465b46, 186.73213958740234 * _0x465b46, 515.1428527832031 * _0x465b46, 177.73213958740234 * _0x465b46, 518.1428527832031 * _0x465b46, 179.73213958740234 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x1]), _0x5e53f4['globalAlpha'] = 0.5, _0x5e53f4['translate'](0x3 * _0x465b46, 0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](438.1428527832031 * _0x465b46, 22.16070556640625 * _0x465b46), _0x5e53f4['bezierCurveTo'](446.1428527832031 * _0x465b46, 27.16070556640625 * _0x465b46, 422.1428527832031 * _0x465b46, 54.16070556640625 * _0x465b46, 414.1428527832031 * _0x465b46, 40.16070556640625 * _0x465b46), _0x5e53f4['bezierCurveTo'](409.1428527832031 * _0x465b46, 27.16070556640625 * _0x465b46, 430.1428527832031 * _0x465b46, 15.16070556640625 * _0x465b46, 438.1428527832031 * _0x465b46, 22.16070556640625 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x0]), _0x5e53f4['globalAlpha'] = 0x1, _0x5e53f4['translate'](-0x3 * _0x465b46, -0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](438.1428527832031 * _0x465b46, 22.16070556640625 * _0x465b46), _0x5e53f4['bezierCurveTo'](446.1428527832031 * _0x465b46, 27.16070556640625 * _0x465b46, 422.1428527832031 * _0x465b46, 54.16070556640625 * _0x465b46, 414.1428527832031 * _0x465b46, 40.16070556640625 * _0x465b46), _0x5e53f4['bezierCurveTo'](409.1428527832031 * _0x465b46, 27.16070556640625 * _0x465b46, 430.1428527832031 * _0x465b46, 15.16070556640625 * _0x465b46, 438.1428527832031 * _0x465b46, 22.16070556640625 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x1]), _0x5e53f4['globalAlpha'] = 0.5, _0x5e53f4['translate'](0x3 * _0x465b46, 0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](406.1428527832031 * _0x465b46, 11.16070556640625 * _0x465b46), _0x5e53f4['bezierCurveTo'](418.1428527832031 * _0x465b46, 14.16070556640625 * _0x465b46, 411.1428527832031 * _0x465b46, 27.16070556640625 * _0x465b46, 403.1428527832031 * _0x465b46, 30.16070556640625 * _0x465b46), _0x5e53f4['bezierCurveTo'](395.1428527832031 * _0x465b46, 31.16070556640625 * _0x465b46, 391.1428527832031 * _0x465b46, 16.16070556640625 * _0x465b46, 406.1428527832031 * _0x465b46, 10.16070556640625 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x0]), _0x5e53f4['globalAlpha'] = 0x1, _0x5e53f4['translate'](-0x3 * _0x465b46, -0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](406.1428527832031 * _0x465b46, 11.16070556640625 * _0x465b46), _0x5e53f4['bezierCurveTo'](418.1428527832031 * _0x465b46, 14.16070556640625 * _0x465b46, 411.1428527832031 * _0x465b46, 27.16070556640625 * _0x465b46, 403.1428527832031 * _0x465b46, 30.16070556640625 * _0x465b46), _0x5e53f4['bezierCurveTo'](395.1428527832031 * _0x465b46, 31.16070556640625 * _0x465b46, 391.1428527832031 * _0x465b46, 16.16070556640625 * _0x465b46, 406.1428527832031 * _0x465b46, 10.16070556640625 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x1]), _0x5e53f4['translate'](0x64 * _0x465b46, 0x64 * _0x465b46));
    return _0x5e53f4['globalAlpha'] = 0x1, _0x5e53f4['translate'](-0x3 * _0x465b46, -0x3 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](0x10f * _0x465b46, 0x6f * _0x465b46), _0x5e53f4['bezierCurveTo'](0x103 * _0x465b46, 0x6e * _0x465b46, 0x102 * _0x465b46, 0x63 * _0x465b46, 0x109 * _0x465b46, 0x5f * _0x465b46), _0x5e53f4['bezierCurveTo'](0x114 * _0x465b46, 0x5b * _0x465b46, 0x117 * _0x465b46, 0x64 * _0x465b46, 0x113 * _0x465b46, 0x6b * _0x465b46), _0x5e53f4['bezierCurveTo'](0x112 * _0x465b46, 0x6d * _0x465b46, 0x111 * _0x465b46, 0x6e * _0x465b46, 0x10f * _0x465b46, 0x6f * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x2], _0x50daab[0x3], 0x2 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](0xa9 * _0x465b46, 0x79 * _0x465b46), _0x5e53f4['bezierCurveTo'](0x9f * _0x465b46, 0x81 * _0x465b46, 0x95 * _0x465b46, 0x7e * _0x465b46, 0x90 * _0x465b46, 0x72 * _0x465b46), _0x5e53f4['bezierCurveTo'](0x8e * _0x465b46, 0x66 * _0x465b46, 0x95 * _0x465b46, 0x62 * _0x465b46, 0xa3 * _0x465b46, 0x60 * _0x465b46), _0x5e53f4['bezierCurveTo'](0xaf * _0x465b46, 0x62 * _0x465b46, 0xb0 * _0x465b46, 0x73 * _0x465b46, 0xa9 * _0x465b46, 0x79 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x2], _0x50daab[0x3], 0x2 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](0xd5 * _0x465b46, 0x96 * _0x465b46), _0x5e53f4['bezierCurveTo'](0xce * _0x465b46, 0x86 * _0x465b46, 0xd8 * _0x465b46, 0x78 * _0x465b46, 0xeb * _0x465b46, 0x81 * _0x465b46), _0x5e53f4['bezierCurveTo'](0xf7 * _0x465b46, 0x8b * _0x465b46, 0xf2 * _0x465b46, 0x92 * _0x465b46, 0xed * _0x465b46, 0x9a * _0x465b46), _0x5e53f4['bezierCurveTo'](0xe2 * _0x465b46, 0xa2 * _0x465b46, 0xda * _0x465b46, 0x9f * _0x465b46, 0xd5 * _0x465b46, 0x96 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x2], _0x50daab[0x3], 0x2 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](0xec * _0x465b46, 0xa9 * _0x465b46), _0x5e53f4['bezierCurveTo'](0xf7 * _0x465b46, 0xa6 * _0x465b46, 0xfa * _0x465b46, 0xac * _0x465b46, 0xf7 * _0x465b46, 0xb5 * _0x465b46), _0x5e53f4['bezierCurveTo'](0xf2 * _0x465b46, 0xba * _0x465b46, 0xf1 * _0x465b46, 0xb5 * _0x465b46, 0xf2 * _0x465b46, 0xb6 * _0x465b46), _0x5e53f4['bezierCurveTo'](0xf1 * _0x465b46, 0xb2 * _0x465b46, 0xf0 * _0x465b46, 0xb3 * _0x465b46, 0xef * _0x465b46, 0xb5 * _0x465b46), _0x5e53f4['bezierCurveTo'](0xf0 * _0x465b46, 0xb8 * _0x465b46, 0xed * _0x465b46, 0xba * _0x465b46, 0xe9 * _0x465b46, 0xb5 * _0x465b46), _0x5e53f4['bezierCurveTo'](0xe6 * _0x465b46, 0xad * _0x465b46, 0xe9 * _0x465b46, 0xa9 * _0x465b46, 0xec * _0x465b46, 0xa9 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x2], _0x50daab[0x3], 0x2 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](0xa3 * _0x465b46, 0xaa * _0x465b46), _0x5e53f4['bezierCurveTo'](0xb0 * _0x465b46, 0xa5 * _0x465b46, 0xb4 * _0x465b46, 0xac * _0x465b46, 0xb5 * _0x465b46, 0xb5 * _0x465b46), _0x5e53f4['bezierCurveTo'](0xb6 * _0x465b46, 0xbd * _0x465b46, 0xb2 * _0x465b46, 0xc0 * _0x465b46, 0xae * _0x465b46, 0xbc * _0x465b46), _0x5e53f4['bezierCurveTo'](0xac * _0x465b46, 0xb7 * _0x465b46, 0xaa * _0x465b46, 0xb8 * _0x465b46, 0xaa * _0x465b46, 0xbc * _0x465b46), _0x5e53f4['bezierCurveTo'](0xb0 * _0x465b46, 0xc2 * _0x465b46, 0xa5 * _0x465b46, 0xc4 * _0x465b46, 0xa2 * _0x465b46, 0xbe * _0x465b46), _0x5e53f4['bezierCurveTo'](0x98 * _0x465b46, 0xb5 * _0x465b46, 0x9d * _0x465b46, 0xad * _0x465b46, 0xa3 * _0x465b46, 0xaa * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x2], _0x50daab[0x3], 0x2 * _0x465b46), _0x5e53f4['scale'](0.05, 0.05), _0x5e53f4['translate'](0x1388 * _0x465b46, 0x76c * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](0x111 * _0x465b46, 46.546875 * _0x465b46), _0x5e53f4['bezierCurveTo'](0x161 * _0x465b46, 131.546875 * _0x465b46, 0x12f * _0x465b46, 213.546875 * _0x465b46, 0x110 * _0x465b46, 236.546875 * _0x465b46), _0x5e53f4['bezierCurveTo'](0xcb * _0x465b46, 179.546875 * _0x465b46, 0xec * _0x465b46, 84.546875 * _0x465b46, 0x111 * _0x465b46, 47.546875 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x4], _0x50daab[0x5], 0x2 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](0x1d3 * _0x465b46, 257.546875 * _0x465b46), _0x5e53f4['bezierCurveTo'](0x171 * _0x465b46, 194.546875 * _0x465b46, 0x145 * _0x465b46, 236.546875 * _0x465b46, 0x123 * _0x465b46, 271.546875 * _0x465b46), _0x5e53f4['bezierCurveTo'](0x173 * _0x465b46, 335.546875 * _0x465b46, 0x1ab * _0x465b46, 313.546875 * _0x465b46, 0x1d3 * _0x465b46, 258.546875 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x4], _0x50daab[0x5], 0x2 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](0x10d * _0x465b46, 275.546875 * _0x465b46), _0x5e53f4['bezierCurveTo'](0x157 * _0x465b46, 356.546875 * _0x465b46, 0x163 * _0x465b46, 407.546875 * _0x465b46, 0x143 * _0x465b46, 472.546875 * _0x465b46), _0x5e53f4['bezierCurveTo'](0xe0 * _0x465b46, 451.546875 * _0x465b46, 0xee * _0x465b46, 326.546875 * _0x465b46, 0x10e * _0x465b46, 275.546875 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x4], _0x50daab[0x5], 0x2 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](0x104 * _0x465b46, 267.546875 * _0x465b46), _0x5e53f4['bezierCurveTo'](0x86 * _0x465b46, 221.546875 * _0x465b46, 0x59 * _0x465b46, 256.546875 * _0x465b46, 0x3c * _0x465b46, 295.546875 * _0x465b46), _0x5e53f4['bezierCurveTo'](0x74 * _0x465b46, 357.546875 * _0x465b46, 0xf2 * _0x465b46, 344.546875 * _0x465b46, 0x104 * _0x465b46, 267.546875 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x4], _0x50daab[0x5], 0x2 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](0x7c * _0x465b46, 123.546875 * _0x465b46), _0x5e53f4['bezierCurveTo'](0xff * _0x465b46, 140.546875 * _0x465b46, 0x109 * _0x465b46, 234.546875 * _0x465b46, 0x10b * _0x465b46, 269.546875 * _0x465b46), _0x5e53f4['bezierCurveTo'](0x9f * _0x465b46, 283.546875 * _0x465b46, 0x7f * _0x465b46, 192.546875 * _0x465b46, 0x7c * _0x465b46, 124.546875 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x6], _0x50daab[0x7], 0x2 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](0x10b * _0x465b46, 268.546875 * _0x465b46), _0x5e53f4['bezierCurveTo'](0x109 * _0x465b46, 170.546875 * _0x465b46, 0x16c * _0x465b46, 127.546875 * _0x465b46, 0x197 * _0x465b46, 132.546875 * _0x465b46), _0x5e53f4['bezierCurveTo'](0x1ab * _0x465b46, 204.546875 * _0x465b46, 0x155 * _0x465b46, 277.546875 * _0x465b46, 0x10c * _0x465b46, 271.546875 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x6], _0x50daab[0x7], 0x2 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](0x10e * _0x465b46, 269.546875 * _0x465b46), _0x5e53f4['bezierCurveTo'](0x172 * _0x465b46, 251.546875 * _0x465b46, 0x19a * _0x465b46, 328.546875 * _0x465b46, 0x1a4 * _0x465b46, 399.546875 * _0x465b46), _0x5e53f4['bezierCurveTo'](0x124 * _0x465b46, 412.546875 * _0x465b46, 0x113 * _0x465b46, 313.546875 * _0x465b46, 0x10d * _0x465b46, 272.546875 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x6], _0x50daab[0x7], 0x2 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](0x111 * _0x465b46, 266.546875 * _0x465b46), _0x5e53f4['bezierCurveTo'](0x123 * _0x465b46, 370.546875 * _0x465b46, 0xeb * _0x465b46, 428.546875 * _0x465b46, 0xad * _0x465b46, 451.546875 * _0x465b46), _0x5e53f4['bezierCurveTo'](0x7c * _0x465b46, 365.546875 * _0x465b46, 0xd9 * _0x465b46, 274.546875 * _0x465b46, 0x110 * _0x465b46, 265.546875 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x6], _0x50daab[0x7], 0x2 * _0x465b46), circle(_0x5e53f4, 0x10a * _0x465b46, 251.546875 * _0x465b46, 19.1049731745428 * _0x465b46), fill_path(_0x5e53f4, _0x50daab[0x8], _0x50daab[0x9], 0x2 * _0x465b46), circle(_0x5e53f4, 0x124 * _0x465b46, 274.546875 * _0x465b46, 15.556349186104045 * _0x465b46), fill_path(_0x5e53f4, _0x50daab[0x8], _0x50daab[0x9], 0x2 * _0x465b46), circle(_0x5e53f4, 0x102 * _0x465b46, 291.546875 * _0x465b46, 17.029386365926403 * _0x465b46), fill_path(_0x5e53f4, _0x50daab[0x8], _0x50daab[0x9], 0x2 * _0x465b46), _0x5e53f4['scale'](1.4, 1.4), _0x5e53f4['translate'](-0x2bc * _0x465b46, 0x118 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](0x111 * _0x465b46, 46.546875 * _0x465b46), _0x5e53f4['bezierCurveTo'](0x161 * _0x465b46, 131.546875 * _0x465b46, 0x12f * _0x465b46, 213.546875 * _0x465b46, 0x110 * _0x465b46, 236.546875 * _0x465b46), _0x5e53f4['bezierCurveTo'](0xcb * _0x465b46, 179.546875 * _0x465b46, 0xec * _0x465b46, 84.546875 * _0x465b46, 0x111 * _0x465b46, 47.546875 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x4], _0x50daab[0x5], 0x2 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](0x1d3 * _0x465b46, 257.546875 * _0x465b46), _0x5e53f4['bezierCurveTo'](0x171 * _0x465b46, 194.546875 * _0x465b46, 0x145 * _0x465b46, 236.546875 * _0x465b46, 0x123 * _0x465b46, 271.546875 * _0x465b46), _0x5e53f4['bezierCurveTo'](0x173 * _0x465b46, 335.546875 * _0x465b46, 0x1ab * _0x465b46, 313.546875 * _0x465b46, 0x1d3 * _0x465b46, 258.546875 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x4], _0x50daab[0x5], 0x2 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](0x10d * _0x465b46, 275.546875 * _0x465b46), _0x5e53f4['bezierCurveTo'](0x157 * _0x465b46, 356.546875 * _0x465b46, 0x163 * _0x465b46, 407.546875 * _0x465b46, 0x143 * _0x465b46, 472.546875 * _0x465b46), _0x5e53f4['bezierCurveTo'](0xe0 * _0x465b46, 451.546875 * _0x465b46, 0xee * _0x465b46, 326.546875 * _0x465b46, 0x10e * _0x465b46, 275.546875 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x4], _0x50daab[0x5], 0x2 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](0x104 * _0x465b46, 267.546875 * _0x465b46), _0x5e53f4['bezierCurveTo'](0x86 * _0x465b46, 221.546875 * _0x465b46, 0x59 * _0x465b46, 256.546875 * _0x465b46, 0x3c * _0x465b46, 295.546875 * _0x465b46), _0x5e53f4['bezierCurveTo'](0x74 * _0x465b46, 357.546875 * _0x465b46, 0xf2 * _0x465b46, 344.546875 * _0x465b46, 0x104 * _0x465b46, 267.546875 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x4], _0x50daab[0x5], 0x2 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](0x7c * _0x465b46, 123.546875 * _0x465b46), _0x5e53f4['bezierCurveTo'](0xff * _0x465b46, 140.546875 * _0x465b46, 0x109 * _0x465b46, 234.546875 * _0x465b46, 0x10b * _0x465b46, 269.546875 * _0x465b46), _0x5e53f4['bezierCurveTo'](0x9f * _0x465b46, 283.546875 * _0x465b46, 0x7f * _0x465b46, 192.546875 * _0x465b46, 0x7c * _0x465b46, 124.546875 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x6], _0x50daab[0x7], 0x2 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](0x10b * _0x465b46, 268.546875 * _0x465b46), _0x5e53f4['bezierCurveTo'](0x109 * _0x465b46, 170.546875 * _0x465b46, 0x16c * _0x465b46, 127.546875 * _0x465b46, 0x197 * _0x465b46, 132.546875 * _0x465b46), _0x5e53f4['bezierCurveTo'](0x1ab * _0x465b46, 204.546875 * _0x465b46, 0x155 * _0x465b46, 277.546875 * _0x465b46, 0x10c * _0x465b46, 271.546875 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x6], _0x50daab[0x7], 0x2 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](0x10e * _0x465b46, 269.546875 * _0x465b46), _0x5e53f4['bezierCurveTo'](0x172 * _0x465b46, 251.546875 * _0x465b46, 0x19a * _0x465b46, 328.546875 * _0x465b46, 0x1a4 * _0x465b46, 399.546875 * _0x465b46), _0x5e53f4['bezierCurveTo'](0x124 * _0x465b46, 412.546875 * _0x465b46, 0x113 * _0x465b46, 313.546875 * _0x465b46, 0x10d * _0x465b46, 272.546875 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x6], _0x50daab[0x7], 0x2 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](0x111 * _0x465b46, 266.546875 * _0x465b46), _0x5e53f4['bezierCurveTo'](0x123 * _0x465b46, 370.546875 * _0x465b46, 0xeb * _0x465b46, 428.546875 * _0x465b46, 0xad * _0x465b46, 451.546875 * _0x465b46), _0x5e53f4['bezierCurveTo'](0x7c * _0x465b46, 365.546875 * _0x465b46, 0xd9 * _0x465b46, 274.546875 * _0x465b46, 0x110 * _0x465b46, 265.546875 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x6], _0x50daab[0x7], 0x2 * _0x465b46), circle(_0x5e53f4, 0x10a * _0x465b46, 251.546875 * _0x465b46, 19.1049731745428 * _0x465b46), fill_path(_0x5e53f4, _0x50daab[0x8], _0x50daab[0x9], 0x2 * _0x465b46), circle(_0x5e53f4, 0x124 * _0x465b46, 274.546875 * _0x465b46, 15.556349186104045 * _0x465b46), fill_path(_0x5e53f4, _0x50daab[0x8], _0x50daab[0x9], 0x2 * _0x465b46), circle(_0x5e53f4, 0x102 * _0x465b46, 291.546875 * _0x465b46, 17.029386365926403 * _0x465b46), fill_path(_0x5e53f4, _0x50daab[0x8], _0x50daab[0x9], 0x2 * _0x465b46), _0x5e53f4['translate'](-0x384 * _0x465b46, -0xc8 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](0x111 * _0x465b46, 46.546875 * _0x465b46), _0x5e53f4['bezierCurveTo'](0x161 * _0x465b46, 131.546875 * _0x465b46, 0x12f * _0x465b46, 213.546875 * _0x465b46, 0x110 * _0x465b46, 236.546875 * _0x465b46), _0x5e53f4['bezierCurveTo'](0xcb * _0x465b46, 179.546875 * _0x465b46, 0xec * _0x465b46, 84.546875 * _0x465b46, 0x111 * _0x465b46, 47.546875 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x4], _0x50daab[0x5], 0x2 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](0x1d3 * _0x465b46, 257.546875 * _0x465b46), _0x5e53f4['bezierCurveTo'](0x171 * _0x465b46, 194.546875 * _0x465b46, 0x145 * _0x465b46, 236.546875 * _0x465b46, 0x123 * _0x465b46, 271.546875 * _0x465b46), _0x5e53f4['bezierCurveTo'](0x173 * _0x465b46, 335.546875 * _0x465b46, 0x1ab * _0x465b46, 313.546875 * _0x465b46, 0x1d3 * _0x465b46, 258.546875 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x4], _0x50daab[0x5], 0x2 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](0x10d * _0x465b46, 275.546875 * _0x465b46), _0x5e53f4['bezierCurveTo'](0x157 * _0x465b46, 356.546875 * _0x465b46, 0x163 * _0x465b46, 407.546875 * _0x465b46, 0x143 * _0x465b46, 472.546875 * _0x465b46), _0x5e53f4['bezierCurveTo'](0xe0 * _0x465b46, 451.546875 * _0x465b46, 0xee * _0x465b46, 326.546875 * _0x465b46, 0x10e * _0x465b46, 275.546875 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x4], _0x50daab[0x5], 0x2 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](0x104 * _0x465b46, 267.546875 * _0x465b46), _0x5e53f4['bezierCurveTo'](0x86 * _0x465b46, 221.546875 * _0x465b46, 0x59 * _0x465b46, 256.546875 * _0x465b46, 0x3c * _0x465b46, 295.546875 * _0x465b46), _0x5e53f4['bezierCurveTo'](0x74 * _0x465b46, 357.546875 * _0x465b46, 0xf2 * _0x465b46, 344.546875 * _0x465b46, 0x104 * _0x465b46, 267.546875 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x4], _0x50daab[0x5], 0x2 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](0x7c * _0x465b46, 123.546875 * _0x465b46), _0x5e53f4['bezierCurveTo'](0xff * _0x465b46, 140.546875 * _0x465b46, 0x109 * _0x465b46, 234.546875 * _0x465b46, 0x10b * _0x465b46, 269.546875 * _0x465b46), _0x5e53f4['bezierCurveTo'](0x9f * _0x465b46, 283.546875 * _0x465b46, 0x7f * _0x465b46, 192.546875 * _0x465b46, 0x7c * _0x465b46, 124.546875 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x6], _0x50daab[0x7], 0x2 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](0x10b * _0x465b46, 268.546875 * _0x465b46), _0x5e53f4['bezierCurveTo'](0x109 * _0x465b46, 170.546875 * _0x465b46, 0x16c * _0x465b46, 127.546875 * _0x465b46, 0x197 * _0x465b46, 132.546875 * _0x465b46), _0x5e53f4['bezierCurveTo'](0x1ab * _0x465b46, 204.546875 * _0x465b46, 0x155 * _0x465b46, 277.546875 * _0x465b46, 0x10c * _0x465b46, 271.546875 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x6], _0x50daab[0x7], 0x2 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](0x10e * _0x465b46, 269.546875 * _0x465b46), _0x5e53f4['bezierCurveTo'](0x172 * _0x465b46, 251.546875 * _0x465b46, 0x19a * _0x465b46, 328.546875 * _0x465b46, 0x1a4 * _0x465b46, 399.546875 * _0x465b46), _0x5e53f4['bezierCurveTo'](0x124 * _0x465b46, 412.546875 * _0x465b46, 0x113 * _0x465b46, 313.546875 * _0x465b46, 0x10d * _0x465b46, 272.546875 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x6], _0x50daab[0x7], 0x2 * _0x465b46), _0x5e53f4['beginPath'](), _0x5e53f4['lineCap'] = 'round', _0x5e53f4['lineJoin'] = 'round', _0x5e53f4['moveTo'](0x111 * _0x465b46, 266.546875 * _0x465b46), _0x5e53f4['bezierCurveTo'](0x123 * _0x465b46, 370.546875 * _0x465b46, 0xeb * _0x465b46, 428.546875 * _0x465b46, 0xad * _0x465b46, 451.546875 * _0x465b46), _0x5e53f4['bezierCurveTo'](0x7c * _0x465b46, 365.546875 * _0x465b46, 0xd9 * _0x465b46, 274.546875 * _0x465b46, 0x110 * _0x465b46, 265.546875 * _0x465b46), _0x5e53f4['closePath'](), fill_path(_0x5e53f4, _0x50daab[0x6], _0x50daab[0x7], 0x2 * _0x465b46), circle(_0x5e53f4, 0x10a * _0x465b46, 251.546875 * _0x465b46, 19.1049731745428 * _0x465b46), fill_path(_0x5e53f4, _0x50daab[0x8], _0x50daab[0x9], 0x2 * _0x465b46), circle(_0x5e53f4, 0x124 * _0x465b46, 274.546875 * _0x465b46, 15.556349186104045 * _0x465b46), fill_path(_0x5e53f4, _0x50daab[0x8], _0x50daab[0x9], 0x2 * _0x465b46), circle(_0x5e53f4, 0x102 * _0x465b46, 291.546875 * _0x465b46, 17.029386365926403 * _0x465b46), fill_path(_0x5e53f4, _0x50daab[0x8], _0x50daab[0x9], 0x2 * _0x465b46), _0x398977;
}

function create_kraken(_0x4f29b0, _0x82c77d) {
    var _0x3d6d77 = document['createElement']('canvas'),
        _0x5eb712 = _0x3d6d77['getContext']('2d');
    return _0x3d6d77['width'] = 0x178 * _0x4f29b0, _0x3d6d77['height'] = 0x173 * _0x4f29b0, _0x5eb712['globalAlpha'] = 0.5, _0x5eb712['translate'](0x5 * _0x4f29b0, 0x5 * _0x4f29b0), _0x5eb712['beginPath'](), _0x5eb712['lineCap'] = 'round', _0x5eb712['lineJoin'] = 'round', _0x5eb712['moveTo'](191.633544921875 * _0x4f29b0, 123.98580932617188 * _0x4f29b0), _0x5eb712['bezierCurveTo'](215.633544921875 * _0x4f29b0, 85.98580932617188 * _0x4f29b0, 187.633544921875 * _0x4f29b0, 71.98580932617188 * _0x4f29b0, 202.633544921875 * _0x4f29b0, 19.985809326171875 * _0x4f29b0), _0x5eb712['bezierCurveTo'](231.633544921875 * _0x4f29b0, 68.98580932617188 * _0x4f29b0, 253.633544921875 * _0x4f29b0, 71.98580932617188 * _0x4f29b0, 256.633544921875 * _0x4f29b0, 93.98580932617188 * _0x4f29b0), _0x5eb712['bezierCurveTo'](306.633544921875 * _0x4f29b0, 64.98580932617188 * _0x4f29b0, 319.633544921875 * _0x4f29b0, 61.985809326171875 * _0x4f29b0, 350.633544921875 * _0x4f29b0, 58.985809326171875 * _0x4f29b0), _0x5eb712['bezierCurveTo'](280.633544921875 * _0x4f29b0, 86.98580932617188 * _0x4f29b0, 281.633544921875 * _0x4f29b0, 106.98580932617188 * _0x4f29b0, 268.633544921875 * _0x4f29b0, 130.98580932617188 * _0x4f29b0), _0x5eb712['bezierCurveTo'](295.633544921875 * _0x4f29b0, 158.98580932617188 * _0x4f29b0, 328.633544921875 * _0x4f29b0, 155.98580932617188 * _0x4f29b0, 353.633544921875 * _0x4f29b0, 90.98580932617188 * _0x4f29b0), _0x5eb712['bezierCurveTo'](371.633544921875 * _0x4f29b0, 158.98580932617188 * _0x4f29b0, 337.633544921875 * _0x4f29b0, 210.98580932617188 * _0x4f29b0, 286.633544921875 * _0x4f29b0, 209.98580932617188 * _0x4f29b0), _0x5eb712['bezierCurveTo'](323.633544921875 * _0x4f29b0, 230.98580932617188 * _0x4f29b0, 317.633544921875 * _0x4f29b0, 274.9858093261719 * _0x4f29b0, 356.633544921875 * _0x4f29b0, 305.9858093261719 * _0x4f29b0), _0x5eb712['bezierCurveTo'](288.633544921875 * _0x4f29b0, 297.9858093261719 * _0x4f29b0, 288.633544921875 * _0x4f29b0, 265.9858093261719 * _0x4f29b0, 275.633544921875 * _0x4f29b0, 266.9858093261719 * _0x4f29b0), _0x5eb712['bezierCurveTo'](280.633544921875 * _0x4f29b0, 294.9858093261719 * _0x4f29b0, 315.633544921875 * _0x4f29b0, 306.9858093261719 * _0x4f29b0, 336.633544921875 * _0x4f29b0, 316.9858093261719 * _0x4f29b0), _0x5eb712['bezierCurveTo'](295.633544921875 * _0x4f29b0, 318.9858093261719 * _0x4f29b0, 264.633544921875 * _0x4f29b0, 302.9858093261719 * _0x4f29b0, 254.633544921875 * _0x4f29b0, 289.9858093261719 * _0x4f29b0), _0x5eb712['bezierCurveTo'](252.633544921875 * _0x4f29b0, 301.9858093261719 * _0x4f29b0, 224.633544921875 * _0x4f29b0, 315.9858093261719 * _0x4f29b0, 201.633544921875 * _0x4f29b0, 356.9858093261719 * _0x4f29b0), _0x5eb712['bezierCurveTo'](195.633544921875 * _0x4f29b0, 313.9858093261719 * _0x4f29b0, 195.633544921875 * _0x4f29b0, 308.9858093261719 * _0x4f29b0, 196.633544921875 * _0x4f29b0, 307.9858093261719 * _0x4f29b0), _0x5eb712['bezierCurveTo'](197.633544921875 * _0x4f29b0, 289.9858093261719 * _0x4f29b0, 207.633544921875 * _0x4f29b0, 283.9858093261719 * _0x4f29b0, 195.633544921875 * _0x4f29b0, 258.9858093261719 * _0x4f29b0), _0x5eb712['bezierCurveTo'](182.633544921875 * _0x4f29b0, 282.9858093261719 * _0x4f29b0, 190.633544921875 * _0x4f29b0, 287.9858093261719 * _0x4f29b0, 193.633544921875 * _0x4f29b0, 297.9858093261719 * _0x4f29b0), _0x5eb712['bezierCurveTo'](195.633544921875 * _0x4f29b0, 306.9858093261719 * _0x4f29b0, 191.633544921875 * _0x4f29b0, 334.9858093261719 * _0x4f29b0, 187.633544921875 * _0x4f29b0, 354.9858093261719 * _0x4f29b0), _0x5eb712['bezierCurveTo'](165.633544921875 * _0x4f29b0, 320.9858093261719 * _0x4f29b0, 138.633544921875 * _0x4f29b0, 307.9858093261719 * _0x4f29b0, 135.633544921875 * _0x4f29b0, 288.9858093261719 * _0x4f29b0), _0x5eb712['bezierCurveTo'](110.633544921875 * _0x4f29b0, 318.9858093261719 * _0x4f29b0, 68.633544921875 * _0x4f29b0, 323.9858093261719 * _0x4f29b0, 49.633544921875 * _0x4f29b0, 320.9858093261719 * _0x4f29b0), _0x5eb712['bezierCurveTo'](88.633544921875 * _0x4f29b0, 308.9858093261719 * _0x4f29b0, 108.633544921875 * _0x4f29b0, 284.9858093261719 * _0x4f29b0, 118.633544921875 * _0x4f29b0, 258.9858093261719 * _0x4f29b0), _0x5eb712['bezierCurveTo'](86.633544921875 * _0x4f29b0, 264.9858093261719 * _0x4f29b0, 75.633544921875 * _0x4f29b0, 310.9858093261719 * _0x4f29b0, 19.633544921875 * _0x4f29b0, 304.9858093261719 * _0x4f29b0), _0x5eb712['bezierCurveTo'](54.633544921875 * _0x4f29b0, 276.9858093261719 * _0x4f29b0, 59.633544921875 * _0x4f29b0, 214.98580932617188 * _0x4f29b0, 105.633544921875 * _0x4f29b0, 205.98580932617188 * _0x4f29b0), _0x5eb712['bezierCurveTo'](14.633544921875 * _0x4f29b0, 201.98580932617188 * _0x4f29b0, 24.633544921875 * _0x4f29b0, 141.98580932617188 * _0x4f29b0, 25.633544921875 * _0x4f29b0, 82.98580932617188 * _0x4f29b0), _0x5eb712['bezierCurveTo'](49.633544921875 * _0x4f29b0, 168.98580932617188 * _0x4f29b0, 87.633544921875 * _0x4f29b0, 141.98580932617188 * _0x4f29b0, 112.633544921875 * _0x4f29b0, 123.98580932617188 * _0x4f29b0), _0x5eb712['bezierCurveTo'](95.633544921875 * _0x4f29b0, 75.98580932617188 * _0x4f29b0, 70.633544921875 * _0x4f29b0, 68.98580932617188 * _0x4f29b0, 35.633544921875 * _0x4f29b0, 50.985809326171875 * _0x4f29b0), _0x5eb712['bezierCurveTo'](70.633544921875 * _0x4f29b0, 53.985809326171875 * _0x4f29b0, 102.633544921875 * _0x4f29b0, 65.98580932617188 * _0x4f29b0, 125.633544921875 * _0x4f29b0, 84.98580932617188 * _0x4f29b0), _0x5eb712['bezierCurveTo'](133.633544921875 * _0x4f29b0, 69.98580932617188 * _0x4f29b0, 166.633544921875 * _0x4f29b0, 42.985809326171875 * _0x4f29b0, 176.633544921875 * _0x4f29b0, 21.985809326171875 * _0x4f29b0), _0x5eb712['bezierCurveTo'](185.633544921875 * _0x4f29b0, 49.985809326171875 * _0x4f29b0, 168.633544921875 * _0x4f29b0, 95.98580932617188 * _0x4f29b0, 191.633544921875 * _0x4f29b0, 121.98580932617188 * _0x4f29b0), _0x5eb712['closePath'](), fill_path(_0x5eb712, _0x82c77d[0x0]), _0x5eb712['globalAlpha'] = 0x1, _0x5eb712['translate'](-0x4 * _0x4f29b0, -0x5 * _0x4f29b0), _0x5eb712['beginPath'](), _0x5eb712['lineCap'] = 'round', _0x5eb712['lineJoin'] = 'round', _0x5eb712['moveTo'](191.633544921875 * _0x4f29b0, 123.98580932617188 * _0x4f29b0), _0x5eb712['bezierCurveTo'](215.633544921875 * _0x4f29b0, 85.98580932617188 * _0x4f29b0, 187.633544921875 * _0x4f29b0, 71.98580932617188 * _0x4f29b0, 202.633544921875 * _0x4f29b0, 19.985809326171875 * _0x4f29b0), _0x5eb712['bezierCurveTo'](231.633544921875 * _0x4f29b0, 68.98580932617188 * _0x4f29b0, 253.633544921875 * _0x4f29b0, 71.98580932617188 * _0x4f29b0, 256.633544921875 * _0x4f29b0, 93.98580932617188 * _0x4f29b0), _0x5eb712['bezierCurveTo'](306.633544921875 * _0x4f29b0, 64.98580932617188 * _0x4f29b0, 319.633544921875 * _0x4f29b0, 61.985809326171875 * _0x4f29b0, 350.633544921875 * _0x4f29b0, 58.985809326171875 * _0x4f29b0), _0x5eb712['bezierCurveTo'](280.633544921875 * _0x4f29b0, 86.98580932617188 * _0x4f29b0, 281.633544921875 * _0x4f29b0, 106.98580932617188 * _0x4f29b0, 268.633544921875 * _0x4f29b0, 130.98580932617188 * _0x4f29b0), _0x5eb712['bezierCurveTo'](295.633544921875 * _0x4f29b0, 158.98580932617188 * _0x4f29b0, 328.633544921875 * _0x4f29b0, 155.98580932617188 * _0x4f29b0, 353.633544921875 * _0x4f29b0, 90.98580932617188 * _0x4f29b0), _0x5eb712['bezierCurveTo'](371.633544921875 * _0x4f29b0, 158.98580932617188 * _0x4f29b0, 337.633544921875 * _0x4f29b0, 210.98580932617188 * _0x4f29b0, 286.633544921875 * _0x4f29b0, 209.98580932617188 * _0x4f29b0), _0x5eb712['bezierCurveTo'](323.633544921875 * _0x4f29b0, 230.98580932617188 * _0x4f29b0, 317.633544921875 * _0x4f29b0, 274.9858093261719 * _0x4f29b0, 356.633544921875 * _0x4f29b0, 305.9858093261719 * _0x4f29b0), _0x5eb712['bezierCurveTo'](288.633544921875 * _0x4f29b0, 297.9858093261719 * _0x4f29b0, 288.633544921875 * _0x4f29b0, 265.9858093261719 * _0x4f29b0, 275.633544921875 * _0x4f29b0, 266.9858093261719 * _0x4f29b0), _0x5eb712['bezierCurveTo'](280.633544921875 * _0x4f29b0, 294.9858093261719 * _0x4f29b0, 315.633544921875 * _0x4f29b0, 306.9858093261719 * _0x4f29b0, 336.633544921875 * _0x4f29b0, 316.9858093261719 * _0x4f29b0), _0x5eb712['bezierCurveTo'](295.633544921875 * _0x4f29b0, 318.9858093261719 * _0x4f29b0, 264.633544921875 * _0x4f29b0, 302.9858093261719 * _0x4f29b0, 254.633544921875 * _0x4f29b0, 289.9858093261719 * _0x4f29b0), _0x5eb712['bezierCurveTo'](252.633544921875 * _0x4f29b0, 301.9858093261719 * _0x4f29b0, 224.633544921875 * _0x4f29b0, 315.9858093261719 * _0x4f29b0, 201.633544921875 * _0x4f29b0, 356.9858093261719 * _0x4f29b0), _0x5eb712['bezierCurveTo'](195.633544921875 * _0x4f29b0, 313.9858093261719 * _0x4f29b0, 195.633544921875 * _0x4f29b0, 308.9858093261719 * _0x4f29b0, 196.633544921875 * _0x4f29b0, 307.9858093261719 * _0x4f29b0), _0x5eb712['bezierCurveTo'](197.633544921875 * _0x4f29b0, 289.9858093261719 * _0x4f29b0, 207.633544921875 * _0x4f29b0, 283.9858093261719 * _0x4f29b0, 195.633544921875 * _0x4f29b0, 258.9858093261719 * _0x4f29b0), _0x5eb712['bezierCurveTo'](182.633544921875 * _0x4f29b0, 282.9858093261719 * _0x4f29b0, 190.633544921875 * _0x4f29b0, 287.9858093261719 * _0x4f29b0, 193.633544921875 * _0x4f29b0, 297.9858093261719 * _0x4f29b0), _0x5eb712['bezierCurveTo'](195.633544921875 * _0x4f29b0, 306.9858093261719 * _0x4f29b0, 191.633544921875 * _0x4f29b0, 334.9858093261719 * _0x4f29b0, 187.633544921875 * _0x4f29b0, 354.9858093261719 * _0x4f29b0), _0x5eb712['bezierCurveTo'](165.633544921875 * _0x4f29b0, 320.9858093261719 * _0x4f29b0, 138.633544921875 * _0x4f29b0, 307.9858093261719 * _0x4f29b0, 135.633544921875 * _0x4f29b0, 288.9858093261719 * _0x4f29b0), _0x5eb712['bezierCurveTo'](110.633544921875 * _0x4f29b0, 318.9858093261719 * _0x4f29b0, 68.633544921875 * _0x4f29b0, 323.9858093261719 * _0x4f29b0, 49.633544921875 * _0x4f29b0, 320.9858093261719 * _0x4f29b0), _0x5eb712['bezierCurveTo'](88.633544921875 * _0x4f29b0, 308.9858093261719 * _0x4f29b0, 108.633544921875 * _0x4f29b0, 284.9858093261719 * _0x4f29b0, 118.633544921875 * _0x4f29b0, 258.9858093261719 * _0x4f29b0), _0x5eb712['bezierCurveTo'](86.633544921875 * _0x4f29b0, 264.9858093261719 * _0x4f29b0, 75.633544921875 * _0x4f29b0, 310.9858093261719 * _0x4f29b0, 19.633544921875 * _0x4f29b0, 304.9858093261719 * _0x4f29b0), _0x5eb712['bezierCurveTo'](54.633544921875 * _0x4f29b0, 276.9858093261719 * _0x4f29b0, 59.633544921875 * _0x4f29b0, 214.98580932617188 * _0x4f29b0, 105.633544921875 * _0x4f29b0, 205.98580932617188 * _0x4f29b0), _0x5eb712['bezierCurveTo'](14.633544921875 * _0x4f29b0, 201.98580932617188 * _0x4f29b0, 24.633544921875 * _0x4f29b0, 141.98580932617188 * _0x4f29b0, 25.633544921875 * _0x4f29b0, 82.98580932617188 * _0x4f29b0), _0x5eb712['bezierCurveTo'](49.633544921875 * _0x4f29b0, 168.98580932617188 * _0x4f29b0, 87.633544921875 * _0x4f29b0, 141.98580932617188 * _0x4f29b0, 112.633544921875 * _0x4f29b0, 123.98580932617188 * _0x4f29b0), _0x5eb712['bezierCurveTo'](95.633544921875 * _0x4f29b0, 75.98580932617188 * _0x4f29b0, 70.633544921875 * _0x4f29b0, 68.98580932617188 * _0x4f29b0, 35.633544921875 * _0x4f29b0, 50.985809326171875 * _0x4f29b0), _0x5eb712['bezierCurveTo'](70.633544921875 * _0x4f29b0, 53.985809326171875 * _0x4f29b0, 102.633544921875 * _0x4f29b0, 65.98580932617188 * _0x4f29b0, 125.633544921875 * _0x4f29b0, 84.98580932617188 * _0x4f29b0), _0x5eb712['bezierCurveTo'](133.633544921875 * _0x4f29b0, 69.98580932617188 * _0x4f29b0, 166.633544921875 * _0x4f29b0, 42.985809326171875 * _0x4f29b0, 176.633544921875 * _0x4f29b0, 21.985809326171875 * _0x4f29b0), _0x5eb712['bezierCurveTo'](185.633544921875 * _0x4f29b0, 49.985809326171875 * _0x4f29b0, 168.633544921875 * _0x4f29b0, 95.98580932617188 * _0x4f29b0, 191.633544921875 * _0x4f29b0, 121.98580932617188 * _0x4f29b0), _0x5eb712['closePath'](), fill_path(_0x5eb712, undefined, _0x82c77d[0x1], 0xc * _0x4f29b0), _0x5eb712['translate'](-0x1 * _0x4f29b0, 0x0 * _0x4f29b0), _0x5eb712['beginPath'](), _0x5eb712['lineCap'] = 'round', _0x5eb712['lineJoin'] = 'round', _0x5eb712['moveTo'](270.633544921875 * _0x4f29b0, 88.98580932617188 * _0x4f29b0), _0x5eb712['bezierCurveTo'](296.633544921875 * _0x4f29b0, 65.98580932617188 * _0x4f29b0, 318.633544921875 * _0x4f29b0, 62.985809326171875 * _0x4f29b0, 348.633544921875 * _0x4f29b0, 57.985809326171875 * _0x4f29b0), _0x5eb712['bezierCurveTo'](309.633544921875 * _0x4f29b0, 76.98580932617188 * _0x4f29b0, 291.633544921875 * _0x4f29b0, 88.98580932617188 * _0x4f29b0, 280.633544921875 * _0x4f29b0, 99.98580932617188 * _0x4f29b0), _0x5eb712['closePath'](), fill_path(_0x5eb712, _0x82c77d[0x4], _0x82c77d[0x5], 0x4 * _0x4f29b0), _0x5eb712['beginPath'](), _0x5eb712['lineCap'] = 'round', _0x5eb712['lineJoin'] = 'round', _0x5eb712['moveTo'](275.633544921875 * _0x4f29b0, 281.9858093261719 * _0x4f29b0), _0x5eb712['bezierCurveTo'](303.633544921875 * _0x4f29b0, 308.9858093261719 * _0x4f29b0, 321.633544921875 * _0x4f29b0, 308.9858093261719 * _0x4f29b0, 335.633544921875 * _0x4f29b0, 315.9858093261719 * _0x4f29b0), _0x5eb712['bezierCurveTo'](305.633544921875 * _0x4f29b0, 320.9858093261719 * _0x4f29b0, 278.633544921875 * _0x4f29b0, 307.9858093261719 * _0x4f29b0, 264.633544921875 * _0x4f29b0, 293.9858093261719 * _0x4f29b0), _0x5eb712['closePath'](), fill_path(_0x5eb712, _0x82c77d[0x4], _0x82c77d[0x5], 0x4 * _0x4f29b0), _0x5eb712['beginPath'](), _0x5eb712['lineCap'] = 'round', _0x5eb712['lineJoin'] = 'round', _0x5eb712['moveTo'](124.633544921875 * _0x4f29b0, 291.9858093261719 * _0x4f29b0), _0x5eb712['bezierCurveTo'](106.633544921875 * _0x4f29b0, 316.9858093261719 * _0x4f29b0, 72.633544921875 * _0x4f29b0, 325.9858093261719 * _0x4f29b0, 53.633544921875 * _0x4f29b0, 319.9858093261719 * _0x4f29b0), _0x5eb712['bezierCurveTo'](83.633544921875 * _0x4f29b0, 308.9858093261719 * _0x4f29b0, 97.633544921875 * _0x4f29b0, 298.9858093261719 * _0x4f29b0, 112.633544921875 * _0x4f29b0, 284.9858093261719 * _0x4f29b0), _0x5eb712['closePath'](), fill_path(_0x5eb712, _0x82c77d[0x4], _0x82c77d[0x5], 0x4 * _0x4f29b0), _0x5eb712['beginPath'](), _0x5eb712['lineCap'] = 'round', _0x5eb712['lineJoin'] = 'round', _0x5eb712['moveTo'](113.633544921875 * _0x4f29b0, 80.98580932617188 * _0x4f29b0), _0x5eb712['bezierCurveTo'](91.633544921875 * _0x4f29b0, 54.985809326171875 * _0x4f29b0, 72.633544921875 * _0x4f29b0, 56.985809326171875 * _0x4f29b0, 36.633544921875 * _0x4f29b0, 49.985809326171875 * _0x4f29b0), _0x5eb712['bezierCurveTo'](87.633544921875 * _0x4f29b0, 72.98580932617188 * _0x4f29b0, 95.633544921875 * _0x4f29b0, 82.98580932617188 * _0x4f29b0, 106.633544921875 * _0x4f29b0, 96.98580932617188 * _0x4f29b0), _0x5eb712['closePath'](), fill_path(_0x5eb712, _0x82c77d[0x4], _0x82c77d[0x5], 0x4 * _0x4f29b0), _0x5eb712['beginPath'](), _0x5eb712['lineCap'] = 'round', _0x5eb712['lineJoin'] = 'round', _0x5eb712['moveTo'](202.633544921875 * _0x4f29b0, 20.985809326171875 * _0x4f29b0), _0x5eb712['bezierCurveTo'](219.633544921875 * _0x4f29b0, 49.985809326171875 * _0x4f29b0, 259.633544921875 * _0x4f29b0, 80.98580932617188 * _0x4f29b0, 255.633544921875 * _0x4f29b0, 92.98580932617188 * _0x4f29b0), _0x5eb712['bezierCurveTo'](268.633544921875 * _0x4f29b0, 86.98580932617188 * _0x4f29b0, 265.633544921875 * _0x4f29b0, 87.98580932617188 * _0x4f29b0, 275.633544921875 * _0x4f29b0, 82.98580932617188 * _0x4f29b0), _0x5eb712['bezierCurveTo'](283.633544921875 * _0x4f29b0, 87.98580932617188 * _0x4f29b0, 283.633544921875 * _0x4f29b0, 87.98580932617188 * _0x4f29b0, 291.633544921875 * _0x4f29b0, 92.98580932617188 * _0x4f29b0), _0x5eb712['bezierCurveTo'](269.633544921875 * _0x4f29b0, 116.98580932617188 * _0x4f29b0, 270.633544921875 * _0x4f29b0, 124.98580932617188 * _0x4f29b0, 267.633544921875 * _0x4f29b0, 130.98580932617188 * _0x4f29b0), _0x5eb712['bezierCurveTo'](307.633544921875 * _0x4f29b0, 168.98580932617188 * _0x4f29b0, 339.633544921875 * _0x4f29b0, 132.98580932617188 * _0x4f29b0, 352.633544921875 * _0x4f29b0, 93.98580932617188 * _0x4f29b0), _0x5eb712['bezierCurveTo'](366.633544921875 * _0x4f29b0, 145.98580932617188 * _0x4f29b0, 345.633544921875 * _0x4f29b0, 207.98580932617188 * _0x4f29b0, 286.633544921875 * _0x4f29b0, 208.98580932617188 * _0x4f29b0), _0x5eb712['bezierCurveTo'](315.633544921875 * _0x4f29b0, 223.98580932617188 * _0x4f29b0, 327.633544921875 * _0x4f29b0, 287.9858093261719 * _0x4f29b0, 355.633544921875 * _0x4f29b0, 305.9858093261719 * _0x4f29b0), _0x5eb712['bezierCurveTo'](293.633544921875 * _0x4f29b0, 298.9858093261719 * _0x4f29b0, 293.633544921875 * _0x4f29b0, 275.9858093261719 * _0x4f29b0, 276.633544921875 * _0x4f29b0, 266.9858093261719 * _0x4f29b0), _0x5eb712['bezierCurveTo'](274.633544921875 * _0x4f29b0, 282.9858093261719 * _0x4f29b0, 287.633544921875 * _0x4f29b0, 288.9858093261719 * _0x4f29b0, 295.633544921875 * _0x4f29b0, 296.9858093261719 * _0x4f29b0), _0x5eb712['bezierCurveTo'](287.133544921875 * _0x4f29b0, 302.4858093261719 * _0x4f29b0, 287.133544921875 * _0x4f29b0, 302.4858093261719 * _0x4f29b0, 278.633544921875 * _0x4f29b0, 307.9858093261719 * _0x4f29b0), _0x5eb712['bezierCurveTo'](261.633544921875 * _0x4f29b0, 297.9858093261719 * _0x4f29b0, 258.633544921875 * _0x4f29b0, 293.9858093261719 * _0x4f29b0, 255.633544921875 * _0x4f29b0, 290.9858093261719 * _0x4f29b0), _0x5eb712['bezierCurveTo'](249.633544921875 * _0x4f29b0, 301.9858093261719 * _0x4f29b0, 225.633544921875 * _0x4f29b0, 320.9858093261719 * _0x4f29b0, 202.633544921875 * _0x4f29b0, 354.9858093261719 * _0x4f29b0), _0x5eb712['bezierCurveTo'](195.633544921875 * _0x4f29b0, 318.9858093261719 * _0x4f29b0, 196.633544921875 * _0x4f29b0, 306.9858093261719 * _0x4f29b0, 198.633544921875 * _0x4f29b0, 300.9858093261719 * _0x4f29b0), _0x5eb712['bezierCurveTo'](209.633544921875 * _0x4f29b0, 268.9858093261719 * _0x4f29b0, 199.633544921875 * _0x4f29b0, 266.9858093261719 * _0x4f29b0, 195.633544921875 * _0x4f29b0, 256.9858093261719 * _0x4f29b0), _0x5eb712['bezierCurveTo'](183.633544921875 * _0x4f29b0, 274.9858093261719 * _0x4f29b0, 182.633544921875 * _0x4f29b0, 281.9858093261719 * _0x4f29b0, 192.633544921875 * _0x4f29b0, 305.9858093261719 * _0x4f29b0), _0x5eb712['bezierCurveTo'](194.633544921875 * _0x4f29b0, 317.9858093261719 * _0x4f29b0, 191.633544921875 * _0x4f29b0, 336.9858093261719 * _0x4f29b0, 186.633544921875 * _0x4f29b0, 351.9858093261719 * _0x4f29b0), _0x5eb712['bezierCurveTo'](166.633544921875 * _0x4f29b0, 318.9858093261719 * _0x4f29b0, 141.633544921875 * _0x4f29b0, 303.9858093261719 * _0x4f29b0, 136.633544921875 * _0x4f29b0, 286.9858093261719 * _0x4f29b0), _0x5eb712['bezierCurveTo'](122.633544921875 * _0x4f29b0, 303.9858093261719 * _0x4f29b0, 115.633544921875 * _0x4f29b0, 305.9858093261719 * _0x4f29b0, 109.633544921875 * _0x4f29b0, 306.9858093261719 * _0x4f29b0), _0x5eb712['bezierCurveTo'](101.133544921875 * _0x4f29b0, 301.9858093261719 * _0x4f29b0, 94.633544921875 * _0x4f29b0, 297.9858093261719 * _0x4f29b0, 92.633544921875 * _0x4f29b0, 296.9858093261719 * _0x4f29b0), _0x5eb712['bezierCurveTo'](116.633544921875 * _0x4f29b0, 277.9858093261719 * _0x4f29b0, 116.633544921875 * _0x4f29b0, 266.9858093261719 * _0x4f29b0, 119.633544921875 * _0x4f29b0, 257.9858093261719 * _0x4f29b0), _0x5eb712['bezierCurveTo'](107.633544921875 * _0x4f29b0, 257.9858093261719 * _0x4f29b0, 65.633544921875 * _0x4f29b0, 308.9858093261719 * _0x4f29b0, 24.633544921875 * _0x4f29b0, 303.9858093261719 * _0x4f29b0), _0x5eb712['bezierCurveTo'](51.633544921875 * _0x4f29b0, 275.9858093261719 * _0x4f29b0, 64.633544921875 * _0x4f29b0, 220.98580932617188 * _0x4f29b0, 108.633544921875 * _0x4f29b0, 205.98580932617188 * _0x4f29b0), _0x5eb712['bezierCurveTo'](14.633544921875 * _0x4f29b0, 198.98580932617188 * _0x4f29b0, 26.633544921875 * _0x4f29b0, 142.98580932617188 * _0x4f29b0, 25.633544921875 * _0x4f29b0, 86.98580932617188 * _0x4f29b0), _0x5eb712['bezierCurveTo'](41.633544921875 * _0x4f29b0, 155.98580932617188 * _0x4f29b0, 81.633544921875 * _0x4f29b0, 148.98580932617188 * _0x4f29b0, 113.633544921875 * _0x4f29b0, 124.98580932617188 * _0x4f29b0), _0x5eb712['bezierCurveTo'](102.633544921875 * _0x4f29b0, 93.98580932617188 * _0x4f29b0, 95.633544921875 * _0x4f29b0, 88.98580932617188 * _0x4f29b0, 89.633544921875 * _0x4f29b0, 81.98580932617188 * _0x4f29b0), _0x5eb712['bezierCurveTo'](97.633544921875 * _0x4f29b0, 76.48580932617188 * _0x4f29b0, 97.633544921875 * _0x4f29b0, 76.48580932617188 * _0x4f29b0, 105.633544921875 * _0x4f29b0, 70.98580932617188 * _0x4f29b0), _0x5eb712['bezierCurveTo'](120.633544921875 * _0x4f29b0, 78.98580932617188 * _0x4f29b0, 121.633544921875 * _0x4f29b0, 81.98580932617188 * _0x4f29b0, 124.633544921875 * _0x4f29b0, 86.98580932617188 * _0x4f29b0), _0x5eb712['bezierCurveTo'](132.633544921875 * _0x4f29b0, 71.98580932617188 * _0x4f29b0, 160.633544921875 * _0x4f29b0, 56.985809326171875 * _0x4f29b0, 175.633544921875 * _0x4f29b0, 23.985809326171875 * _0x4f29b0), _0x5eb712['bezierCurveTo'](182.633544921875 * _0x4f29b0, 53.985809326171875 * _0x4f29b0, 170.633544921875 * _0x4f29b0, 102.98580932617188 * _0x4f29b0, 191.633544921875 * _0x4f29b0, 125.98580932617188 * _0x4f29b0), _0x5eb712['bezierCurveTo'](214.633544921875 * _0x4f29b0, 89.98580932617188 * _0x4f29b0, 192.633544921875 * _0x4f29b0, 58.985809326171875 * _0x4f29b0, 202.633544921875 * _0x4f29b0, 20.985809326171875 * _0x4f29b0), _0x5eb712['closePath'](), fill_path(_0x5eb712, _0x82c77d[0x2], _0x82c77d[0x3], 0x5 * _0x4f29b0), _0x5eb712['beginPath'](), _0x5eb712['lineCap'] = 'round', _0x5eb712['lineJoin'] = 'round', _0x5eb712['moveTo'](203.633544921875 * _0x4f29b0, 21.985809326171875 * _0x4f29b0), _0x5eb712['bezierCurveTo'](223.633544921875 * _0x4f29b0, 63.985809326171875 * _0x4f29b0, 227.633544921875 * _0x4f29b0, 72.98580932617188 * _0x4f29b0, 235.633544921875 * _0x4f29b0, 98.98580932617188 * _0x4f29b0), _0x5eb712['bezierCurveTo'](241.633544921875 * _0x4f29b0, 123.98580932617188 * _0x4f29b0, 225.633544921875 * _0x4f29b0, 138.98580932617188 * _0x4f29b0, 196.633544921875 * _0x4f29b0, 122.98580932617188 * _0x4f29b0), _0x5eb712['bezierCurveTo'](213.633544921875 * _0x4f29b0, 93.98580932617188 * _0x4f29b0, 199.633544921875 * _0x4f29b0, 49.985809326171875 * _0x4f29b0, 203.633544921875 * _0x4f29b0, 26.985809326171875 * _0x4f29b0), _0x5eb712['closePath'](), fill_path(_0x5eb712, _0x82c77d[0x3]), _0x5eb712['beginPath'](), _0x5eb712['lineCap'] = 'round', _0x5eb712['lineJoin'] = 'round', _0x5eb712['moveTo'](175.633544921875 * _0x4f29b0, 25.985809326171875 * _0x4f29b0), _0x5eb712['bezierCurveTo'](176.633544921875 * _0x4f29b0, 51.985809326171875 * _0x4f29b0, 171.633544921875 * _0x4f29b0, 88.98580932617188 * _0x4f29b0, 186.633544921875 * _0x4f29b0, 121.98580932617188 * _0x4f29b0), _0x5eb712['bezierCurveTo'](156.633544921875 * _0x4f29b0, 144.98580932617188 * _0x4f29b0, 139.633544921875 * _0x4f29b0, 120.98580932617188 * _0x4f29b0, 147.633544921875 * _0x4f29b0, 97.98580932617188 * _0x4f29b0), _0x5eb712['bezierCurveTo'](152.633544921875 * _0x4f29b0, 77.98580932617188 * _0x4f29b0, 162.633544921875 * _0x4f29b0, 60.985809326171875 * _0x4f29b0, 176.633544921875 * _0x4f29b0, 25.985809326171875 * _0x4f29b0), _0x5eb712['closePath'](), fill_path(_0x5eb712, _0x82c77d[0x3]), _0x5eb712['beginPath'](), _0x5eb712['lineCap'] = 'round', _0x5eb712['lineJoin'] = 'round', _0x5eb712['moveTo'](26.633544921875 * _0x4f29b0, 96.98580932617188 * _0x4f29b0), _0x5eb712['bezierCurveTo'](38.633544921875 * _0x4f29b0, 151.98580932617188 * _0x4f29b0, 61.633544921875 * _0x4f29b0, 161.98580932617188 * _0x4f29b0, 88.633544921875 * _0x4f29b0, 168.98580932617188 * _0x4f29b0), _0x5eb712['bezierCurveTo'](117.633544921875 * _0x4f29b0, 177.98580932617188 * _0x4f29b0, 113.633544921875 * _0x4f29b0, 185.98580932617188 * _0x4f29b0, 106.633544921875 * _0x4f29b0, 204.98580932617188 * _0x4f29b0), _0x5eb712['bezierCurveTo'](32.633544921875 * _0x4f29b0, 204.98580932617188 * _0x4f29b0, 25.633544921875 * _0x4f29b0, 149.98580932617188 * _0x4f29b0, 25.633544921875 * _0x4f29b0, 97.98580932617188 * _0x4f29b0), _0x5eb712['closePath'](), fill_path(_0x5eb712, _0x82c77d[0x3]), _0x5eb712['beginPath'](), _0x5eb712['lineCap'] = 'round', _0x5eb712['lineJoin'] = 'round', _0x5eb712['moveTo'](351.633544921875 * _0x4f29b0, 99.98580932617188 * _0x4f29b0), _0x5eb712['bezierCurveTo'](365.633544921875 * _0x4f29b0, 161.98580932617188 * _0x4f29b0, 333.633544921875 * _0x4f29b0, 203.98580932617188 * _0x4f29b0, 287.633544921875 * _0x4f29b0, 207.98580932617188 * _0x4f29b0), _0x5eb712['bezierCurveTo'](255.633544921875 * _0x4f29b0, 208.98580932617188 * _0x4f29b0, 266.633544921875 * _0x4f29b0, 174.98580932617188 * _0x4f29b0, 285.633544921875 * _0x4f29b0, 176.98580932617188 * _0x4f29b0), _0x5eb712['bezierCurveTo'](313.633544921875 * _0x4f29b0, 178.98580932617188 * _0x4f29b0, 348.633544921875 * _0x4f29b0, 135.98580932617188 * _0x4f29b0, 353.633544921875 * _0x4f29b0, 99.98580932617188 * _0x4f29b0), _0x5eb712['closePath'](), fill_path(_0x5eb712, _0x82c77d[0x3]), _0x5eb712['beginPath'](), _0x5eb712['lineCap'] = 'round', _0x5eb712['lineJoin'] = 'round', _0x5eb712['moveTo'](350.633544921875 * _0x4f29b0, 302.9858093261719 * _0x4f29b0), _0x5eb712['bezierCurveTo'](310.633544921875 * _0x4f29b0, 280.9858093261719 * _0x4f29b0, 314.633544921875 * _0x4f29b0, 244.98580932617188 * _0x4f29b0, 292.633544921875 * _0x4f29b0, 230.98580932617188 * _0x4f29b0), _0x5eb712['bezierCurveTo'](272.633544921875 * _0x4f29b0, 215.98580932617188 * _0x4f29b0, 263.633544921875 * _0x4f29b0, 222.98580932617188 * _0x4f29b0, 256.633544921875 * _0x4f29b0, 236.98580932617188 * _0x4f29b0), _0x5eb712['bezierCurveTo'](251.633544921875 * _0x4f29b0, 249.98580932617188 * _0x4f29b0, 264.633544921875 * _0x4f29b0, 255.98580932617188 * _0x4f29b0, 279.633544921875 * _0x4f29b0, 268.9858093261719 * _0x4f29b0), _0x5eb712['bezierCurveTo'](306.633544921875 * _0x4f29b0, 295.9858093261719 * _0x4f29b0, 325.633544921875 * _0x4f29b0, 299.9858093261719 * _0x4f29b0, 349.633544921875 * _0x4f29b0, 302.9858093261719 * _0x4f29b0), _0x5eb712['closePath'](), fill_path(_0x5eb712, _0x82c77d[0x3]), _0x5eb712['beginPath'](), _0x5eb712['lineCap'] = 'round', _0x5eb712['lineJoin'] = 'round', _0x5eb712['moveTo'](95.633544921875 * _0x4f29b0, 224.98580932617188 * _0x4f29b0), _0x5eb712['bezierCurveTo'](64.633544921875 * _0x4f29b0, 245.98580932617188 * _0x4f29b0, 62.633544921875 * _0x4f29b0, 280.9858093261719 * _0x4f29b0, 32.633544921875 * _0x4f29b0, 303.9858093261719 * _0x4f29b0), _0x5eb712['bezierCurveTo'](59.633544921875 * _0x4f29b0, 301.9858093261719 * _0x4f29b0, 102.633544921875 * _0x4f29b0, 260.9858093261719 * _0x4f29b0, 116.633544921875 * _0x4f29b0, 255.98580932617188 * _0x4f29b0), _0x5eb712['bezierCurveTo'](139.633544921875 * _0x4f29b0, 229.98580932617188 * _0x4f29b0, 108.633544921875 * _0x4f29b0, 209.98580932617188 * _0x4f29b0, 97.633544921875 * _0x4f29b0, 224.98580932617188 * _0x4f29b0), _0x5eb712['closePath'](), fill_path(_0x5eb712, _0x82c77d[0x3]), _0x5eb712['beginPath'](), _0x5eb712['lineCap'] = 'round', _0x5eb712['lineJoin'] = 'round', _0x5eb712['moveTo'](195.633544921875 * _0x4f29b0, 253.98580932617188 * _0x4f29b0), _0x5eb712['bezierCurveTo'](209.633544921875 * _0x4f29b0, 282.9858093261719 * _0x4f29b0, 205.633544921875 * _0x4f29b0, 278.9858093261719 * _0x4f29b0, 199.633544921875 * _0x4f29b0, 307.9858093261719 * _0x4f29b0), _0x5eb712['bezierCurveTo'](198.633544921875 * _0x4f29b0, 332.9858093261719 * _0x4f29b0, 201.633544921875 * _0x4f29b0, 340.9858093261719 * _0x4f29b0, 202.633544921875 * _0x4f29b0, 348.9858093261719 * _0x4f29b0), _0x5eb712['bezierCurveTo'](215.633544921875 * _0x4f29b0, 313.9858093261719 * _0x4f29b0, 226.633544921875 * _0x4f29b0, 291.9858093261719 * _0x4f29b0, 235.633544921875 * _0x4f29b0, 270.9858093261719 * _0x4f29b0), _0x5eb712['bezierCurveTo'](243.633544921875 * _0x4f29b0, 247.98580932617188 * _0x4f29b0, 219.633544921875 * _0x4f29b0, 235.98580932617188 * _0x4f29b0, 196.633544921875 * _0x4f29b0, 252.98580932617188 * _0x4f29b0), _0x5eb712['closePath'](), fill_path(_0x5eb712, _0x82c77d[0x3]), _0x5eb712['beginPath'](), _0x5eb712['lineCap'] = 'round', _0x5eb712['lineJoin'] = 'round', _0x5eb712['moveTo'](195.633544921875 * _0x4f29b0, 251.98580932617188 * _0x4f29b0), _0x5eb712['bezierCurveTo'](176.633544921875 * _0x4f29b0, 275.9858093261719 * _0x4f29b0, 182.633544921875 * _0x4f29b0, 285.9858093261719 * _0x4f29b0, 191.633544921875 * _0x4f29b0, 308.9858093261719 * _0x4f29b0), _0x5eb712['bezierCurveTo'](194.633544921875 * _0x4f29b0, 318.9858093261719 * _0x4f29b0, 190.633544921875 * _0x4f29b0, 334.9858093261719 * _0x4f29b0, 186.633544921875 * _0x4f29b0, 348.9858093261719 * _0x4f29b0), _0x5eb712['bezierCurveTo'](175.633544921875 * _0x4f29b0, 307.9858093261719 * _0x4f29b0, 157.633544921875 * _0x4f29b0, 291.9858093261719 * _0x4f29b0, 155.633544921875 * _0x4f29b0, 272.9858093261719 * _0x4f29b0), _0x5eb712['bezierCurveTo'](150.633544921875 * _0x4f29b0, 243.98580932617188 * _0x4f29b0, 170.633544921875 * _0x4f29b0, 236.98580932617188 * _0x4f29b0, 195.633544921875 * _0x4f29b0, 251.98580932617188 * _0x4f29b0), _0x5eb712['closePath'](), fill_path(_0x5eb712, _0x82c77d[0x3]), _0x5eb712['beginPath'](), _0x5eb712['lineCap'] = 'round', _0x5eb712['lineJoin'] = 'round', _0x5eb712['moveTo'](0x13c * _0x4f29b0, 186.8020782470703 * _0x4f29b0), _0x5eb712['bezierCurveTo'](0x13b * _0x4f29b0, 173.8020782470703 * _0x4f29b0, 0x12a * _0x4f29b0, 177.8020782470703 * _0x4f29b0, 0x125 * _0x4f29b0, 183.8020782470703 * _0x4f29b0), _0x5eb712['bezierCurveTo'](0x11d * _0x4f29b0, 195.8020782470703 * _0x4f29b0, 0x13a * _0x4f29b0, 197.8020782470703 * _0x4f29b0, 0x13b * _0x4f29b0, 187.8020782470703 * _0x4f29b0), _0x5eb712['closePath'](), fill_path(_0x5eb712, _0x82c77d[0x6], _0x82c77d[0x7], 0x4 * _0x4f29b0), _0x5eb712['beginPath'](), _0x5eb712['lineCap'] = 'round', _0x5eb712['lineJoin'] = 'round', _0x5eb712['moveTo'](0x154 * _0x4f29b0, 157.8020782470703 * _0x4f29b0), _0x5eb712['bezierCurveTo'](0x147 * _0x4f29b0, 153.8020782470703 * _0x4f29b0, 0x141 * _0x4f29b0, 168.8020782470703 * _0x4f29b0, 0x14a * _0x4f29b0, 174.8020782470703 * _0x4f29b0), _0x5eb712['bezierCurveTo'](0x155 * _0x4f29b0, 178.8020782470703 * _0x4f29b0, 0x15b * _0x4f29b0, 161.8020782470703 * _0x4f29b0, 0x155 * _0x4f29b0, 157.8020782470703 * _0x4f29b0), _0x5eb712['closePath'](), fill_path(_0x5eb712, _0x82c77d[0x6], _0x82c77d[0x7], 0x4 * _0x4f29b0), _0x5eb712['beginPath'](), _0x5eb712['lineCap'] = 'round', _0x5eb712['lineJoin'] = 'round', _0x5eb712['moveTo'](0x15d * _0x4f29b0, 136.8020782470703 * _0x4f29b0), _0x5eb712['bezierCurveTo'](0x157 * _0x4f29b0, 135.8020782470703 * _0x4f29b0, 0x156 * _0x4f29b0, 139.8020782470703 * _0x4f29b0, 0x155 * _0x4f29b0, 147.8020782470703 * _0x4f29b0), _0x5eb712['bezierCurveTo'](0x157 * _0x4f29b0, 155.8020782470703 * _0x4f29b0, 0x161 * _0x4f29b0, 143.8020782470703 * _0x4f29b0, 0x15d * _0x4f29b0, 137.8020782470703 * _0x4f29b0), _0x5eb712['closePath'](), fill_path(_0x5eb712, _0x82c77d[0x6], _0x82c77d[0x7], 0x4 * _0x4f29b0), _0x5eb712['beginPath'](), _0x5eb712['lineCap'] = 'round', _0x5eb712['lineJoin'] = 'round', _0x5eb712['moveTo'](278.75 * _0x4f29b0, 246.4375 * _0x4f29b0), _0x5eb712['bezierCurveTo'](288.75 * _0x4f29b0, 242.4375 * _0x4f29b0, 301.75 * _0x4f29b0, 248.4375 * _0x4f29b0, 298.75 * _0x4f29b0, 262.4375 * _0x4f29b0), _0x5eb712['bezierCurveTo'](293.75 * _0x4f29b0, 271.4375 * _0x4f29b0, 287.75 * _0x4f29b0, 271.4375 * _0x4f29b0, 278.75 * _0x4f29b0, 262.4375 * _0x4f29b0), _0x5eb712['bezierCurveTo'](271.75 * _0x4f29b0, 255.4375 * _0x4f29b0, 274.75 * _0x4f29b0, 250.4375 * _0x4f29b0, 277.75 * _0x4f29b0, 247.4375 * _0x4f29b0), _0x5eb712['closePath'](), fill_path(_0x5eb712, _0x82c77d[0x6], _0x82c77d[0x7], 0x4 * _0x4f29b0), _0x5eb712['beginPath'](), _0x5eb712['lineCap'] = 'round', _0x5eb712['lineJoin'] = 'round', _0x5eb712['moveTo'](310.75 * _0x4f29b0, 277.4375 * _0x4f29b0), _0x5eb712['bezierCurveTo'](319.75 * _0x4f29b0, 280.4375 * _0x4f29b0, 322.75 * _0x4f29b0, 283.4375 * _0x4f29b0, 321.75 * _0x4f29b0, 289.4375 * _0x4f29b0), _0x5eb712['bezierCurveTo'](319.75 * _0x4f29b0, 295.4375 * _0x4f29b0, 313.75 * _0x4f29b0, 291.4375 * _0x4f29b0, 308.75 * _0x4f29b0, 288.4375 * _0x4f29b0), _0x5eb712['bezierCurveTo'](301.75 * _0x4f29b0, 281.4375 * _0x4f29b0, 306.75 * _0x4f29b0, 277.4375 * _0x4f29b0, 309.75 * _0x4f29b0, 277.4375 * _0x4f29b0), _0x5eb712['closePath'](), fill_path(_0x5eb712, _0x82c77d[0x6], _0x82c77d[0x7], 0x4 * _0x4f29b0), _0x5eb712['beginPath'](), _0x5eb712['lineCap'] = 'round', _0x5eb712['lineJoin'] = 'round', _0x5eb712['moveTo'](217.75 * _0x4f29b0, 257.4375 * _0x4f29b0), _0x5eb712['bezierCurveTo'](227.75 * _0x4f29b0, 269.4375 * _0x4f29b0, 220.75 * _0x4f29b0, 281.4375 * _0x4f29b0, 212.75 * _0x4f29b0, 280.4375 * _0x4f29b0), _0x5eb712['bezierCurveTo'](206.75 * _0x4f29b0, 279.4375 * _0x4f29b0, 206.75 * _0x4f29b0, 269.4375 * _0x4f29b0, 204.75 * _0x4f29b0, 260.4375 * _0x4f29b0), _0x5eb712['bezierCurveTo'](204.75 * _0x4f29b0, 254.4375 * _0x4f29b0, 211.75 * _0x4f29b0, 253.4375 * _0x4f29b0, 216.75 * _0x4f29b0, 256.4375 * _0x4f29b0), _0x5eb712['closePath'](), fill_path(_0x5eb712, _0x82c77d[0x6], _0x82c77d[0x7], 0x4 * _0x4f29b0), _0x5eb712['beginPath'](), _0x5eb712['lineCap'] = 'round', _0x5eb712['lineJoin'] = 'round', _0x5eb712['moveTo'](211.75 * _0x4f29b0, 289.4375 * _0x4f29b0), _0x5eb712['bezierCurveTo'](219.75 * _0x4f29b0, 292.4375 * _0x4f29b0, 213.75 * _0x4f29b0, 306.4375 * _0x4f29b0, 206.75 * _0x4f29b0, 307.4375 * _0x4f29b0), _0x5eb712['bezierCurveTo'](199.75 * _0x4f29b0, 303.4375 * _0x4f29b0, 209.75 * _0x4f29b0, 287.4375 * _0x4f29b0, 210.75 * _0x4f29b0, 289.4375 * _0x4f29b0), _0x5eb712['closePath'](), fill_path(_0x5eb712, _0x82c77d[0x6], _0x82c77d[0x7], 0x4 * _0x4f29b0), _0x5eb712['beginPath'](), _0x5eb712['lineCap'] = 'round', _0x5eb712['lineJoin'] = 'round', _0x5eb712['moveTo'](171.75 * _0x4f29b0, 256.4375 * _0x4f29b0), _0x5eb712['bezierCurveTo'](162.75 * _0x4f29b0, 273.4375 * _0x4f29b0, 166.75 * _0x4f29b0, 278.4375 * _0x4f29b0, 175.75 * _0x4f29b0, 280.4375 * _0x4f29b0), _0x5eb712['bezierCurveTo'](183.75 * _0x4f29b0, 278.4375 * _0x4f29b0, 185.75 * _0x4f29b0, 257.4375 * _0x4f29b0, 182.75 * _0x4f29b0, 255.4375 * _0x4f29b0), _0x5eb712['bezierCurveTo'](176.75 * _0x4f29b0, 251.4375 * _0x4f29b0, 172.75 * _0x4f29b0, 253.4375 * _0x4f29b0, 172.75 * _0x4f29b0, 256.4375 * _0x4f29b0), _0x5eb712['closePath'](), fill_path(_0x5eb712, _0x82c77d[0x6], _0x82c77d[0x7], 0x4 * _0x4f29b0), _0x5eb712['beginPath'](), _0x5eb712['lineCap'] = 'round', _0x5eb712['lineJoin'] = 'round', _0x5eb712['moveTo'](175.75 * _0x4f29b0, 289.9375 * _0x4f29b0), _0x5eb712['bezierCurveTo'](183.75 * _0x4f29b0, 287.9375 * _0x4f29b0, 186.75 * _0x4f29b0, 301.9375 * _0x4f29b0, 182.75 * _0x4f29b0, 305.9375 * _0x4f29b0), _0x5eb712['bezierCurveTo'](176.75 * _0x4f29b0, 307.9375 * _0x4f29b0, 171.75 * _0x4f29b0, 292.9375 * _0x4f29b0, 174.75 * _0x4f29b0, 290.9375 * _0x4f29b0), _0x5eb712['closePath'](), fill_path(_0x5eb712, _0x82c77d[0x6], _0x82c77d[0x7], 0x4 * _0x4f29b0), _0x5eb712['beginPath'](), _0x5eb712['lineCap'] = 'round', _0x5eb712['lineJoin'] = 'round', _0x5eb712['moveTo'](205.75 * _0x4f29b0, 314.4375 * _0x4f29b0), _0x5eb712['bezierCurveTo'](209.75 * _0x4f29b0, 316.4375 * _0x4f29b0, 210.75 * _0x4f29b0, 320.4375 * _0x4f29b0, 206.75 * _0x4f29b0, 323.4375 * _0x4f29b0), _0x5eb712['bezierCurveTo'](201.75 * _0x4f29b0, 324.4375 * _0x4f29b0, 201.75 * _0x4f29b0, 314.4375 * _0x4f29b0, 204.75 * _0x4f29b0, 314.4375 * _0x4f29b0), _0x5eb712['closePath'](), fill_path(_0x5eb712, _0x82c77d[0x6], _0x82c77d[0x7], 0x4 * _0x4f29b0), _0x5eb712['beginPath'](), _0x5eb712['lineCap'] = 'round', _0x5eb712['lineJoin'] = 'round', _0x5eb712['moveTo'](186.75 * _0x4f29b0, 313.4375 * _0x4f29b0), _0x5eb712['bezierCurveTo'](181.75 * _0x4f29b0, 315.4375 * _0x4f29b0, 180.75 * _0x4f29b0, 321.4375 * _0x4f29b0, 185.75 * _0x4f29b0, 326.4375 * _0x4f29b0), _0x5eb712['bezierCurveTo'](190.75 * _0x4f29b0, 327.4375 * _0x4f29b0, 190.75 * _0x4f29b0, 313.4375 * _0x4f29b0, 187.75 * _0x4f29b0, 314.4375 * _0x4f29b0), _0x5eb712['closePath'](), fill_path(_0x5eb712, _0x82c77d[0x6], _0x82c77d[0x7], 0x4 * _0x4f29b0), _0x5eb712['beginPath'](), _0x5eb712['lineCap'] = 'round', _0x5eb712['lineJoin'] = 'round', _0x5eb712['moveTo'](103.75 * _0x4f29b0, 244.4375 * _0x4f29b0), _0x5eb712['bezierCurveTo'](96.75 * _0x4f29b0, 239.4375 * _0x4f29b0, 83.75 * _0x4f29b0, 240.4375 * _0x4f29b0, 81.75 * _0x4f29b0, 255.4375 * _0x4f29b0), _0x5eb712['bezierCurveTo'](80.75 * _0x4f29b0, 264.4375 * _0x4f29b0, 89.75 * _0x4f29b0, 269.4375 * _0x4f29b0, 99.75 * _0x4f29b0, 260.4375 * _0x4f29b0), _0x5eb712['bezierCurveTo'](106.75 * _0x4f29b0, 254.4375 * _0x4f29b0, 106.75 * _0x4f29b0, 250.4375 * _0x4f29b0, 104.75 * _0x4f29b0, 245.4375 * _0x4f29b0), _0x5eb712['closePath'](), fill_path(_0x5eb712, _0x82c77d[0x6], _0x82c77d[0x7], 0x4 * _0x4f29b0), _0x5eb712['beginPath'](), _0x5eb712['lineCap'] = 'round', _0x5eb712['lineJoin'] = 'round', _0x5eb712['moveTo'](86.75 * _0x4f29b0, 182.4375 * _0x4f29b0), _0x5eb712['bezierCurveTo'](82.75 * _0x4f29b0, 170.4375 * _0x4f29b0, 66.75 * _0x4f29b0, 169.4375 * _0x4f29b0, 61.75 * _0x4f29b0, 181.4375 * _0x4f29b0), _0x5eb712['bezierCurveTo'](58.75 * _0x4f29b0, 187.4375 * _0x4f29b0, 68.75 * _0x4f29b0, 194.4375 * _0x4f29b0, 75.75 * _0x4f29b0, 192.4375 * _0x4f29b0), _0x5eb712['bezierCurveTo'](83.75 * _0x4f29b0, 192.4375 * _0x4f29b0, 86.75 * _0x4f29b0, 187.4375 * _0x4f29b0, 86.75 * _0x4f29b0, 183.4375 * _0x4f29b0), _0x5eb712['closePath'](), fill_path(_0x5eb712, _0x82c77d[0x6], _0x82c77d[0x7], 0x4 * _0x4f29b0), _0x5eb712['beginPath'](), _0x5eb712['lineCap'] = 'round', _0x5eb712['lineJoin'] = 'round', _0x5eb712['moveTo'](44.75 * _0x4f29b0, 152.4375 * _0x4f29b0), _0x5eb712['bezierCurveTo'](55.75 * _0x4f29b0, 159.4375 * _0x4f29b0, 54.75 * _0x4f29b0, 170.4375 * _0x4f29b0, 46.75 * _0x4f29b0, 171.4375 * _0x4f29b0), _0x5eb712['bezierCurveTo'](39.75 * _0x4f29b0, 170.4375 * _0x4f29b0, 34.75 * _0x4f29b0, 151.4375 * _0x4f29b0, 43.75 * _0x4f29b0, 152.4375 * _0x4f29b0), _0x5eb712['closePath'](), fill_path(_0x5eb712, _0x82c77d[0x6], _0x82c77d[0x7], 0x4 * _0x4f29b0), _0x5eb712['beginPath'](), _0x5eb712['lineCap'] = 'round', _0x5eb712['lineJoin'] = 'round', _0x5eb712['moveTo'](31.75 * _0x4f29b0, 130.4375 * _0x4f29b0), _0x5eb712['bezierCurveTo'](35.75 * _0x4f29b0, 132.4375 * _0x4f29b0, 35.75 * _0x4f29b0, 131.4375 * _0x4f29b0, 37.75 * _0x4f29b0, 137.4375 * _0x4f29b0), _0x5eb712['bezierCurveTo'](36.75 * _0x4f29b0, 144.4375 * _0x4f29b0, 36.75 * _0x4f29b0, 145.4375 * _0x4f29b0, 33.75 * _0x4f29b0, 144.4375 * _0x4f29b0), _0x5eb712['bezierCurveTo'](26.75 * _0x4f29b0, 137.4375 * _0x4f29b0, 29.75 * _0x4f29b0, 131.4375 * _0x4f29b0, 31.75 * _0x4f29b0, 130.4375 * _0x4f29b0), _0x5eb712['closePath'](), fill_path(_0x5eb712, _0x82c77d[0x6], _0x82c77d[0x7], 0x4 * _0x4f29b0), _0x5eb712['beginPath'](), _0x5eb712['lineCap'] = 'round', _0x5eb712['lineJoin'] = 'round', _0x5eb712['moveTo'](69.75 * _0x4f29b0, 274.4375 * _0x4f29b0), _0x5eb712['bezierCurveTo'](62.75 * _0x4f29b0, 272.4375 * _0x4f29b0, 59.75 * _0x4f29b0, 277.4375 * _0x4f29b0, 57.75 * _0x4f29b0, 284.4375 * _0x4f29b0), _0x5eb712['bezierCurveTo'](56.75 * _0x4f29b0, 290.4375 * _0x4f29b0, 63.75 * _0x4f29b0, 289.4375 * _0x4f29b0, 71.75 * _0x4f29b0, 282.4375 * _0x4f29b0), _0x5eb712['bezierCurveTo'](75.75 * _0x4f29b0, 277.4375 * _0x4f29b0, 72.75 * _0x4f29b0, 275.4375 * _0x4f29b0, 69.75 * _0x4f29b0, 274.4375 * _0x4f29b0), _0x5eb712['closePath'](), fill_path(_0x5eb712, _0x82c77d[0x6], _0x82c77d[0x7], 0x4 * _0x4f29b0), _0x5eb712['beginPath'](), _0x5eb712['lineCap'] = 'round', _0x5eb712['lineJoin'] = 'round', _0x5eb712['moveTo'](165.75 * _0x4f29b0, 95.4375 * _0x4f29b0), _0x5eb712['bezierCurveTo'](177.75 * _0x4f29b0, 97.4375 * _0x4f29b0, 182.75 * _0x4f29b0, 115.4375 * _0x4f29b0, 173.75 * _0x4f29b0, 121.4375 * _0x4f29b0), _0x5eb712['bezierCurveTo'](164.75 * _0x4f29b0, 126.4375 * _0x4f29b0, 149.75 * _0x4f29b0, 102.4375 * _0x4f29b0, 164.75 * _0x4f29b0, 96.4375 * _0x4f29b0), _0x5eb712['closePath'](), fill_path(_0x5eb712, _0x82c77d[0x6], _0x82c77d[0x7], 0x4 * _0x4f29b0), _0x5eb712['beginPath'](), _0x5eb712['lineCap'] = 'round', _0x5eb712['lineJoin'] = 'round', _0x5eb712['moveTo'](216.75 * _0x4f29b0, 94.4375 * _0x4f29b0), _0x5eb712['bezierCurveTo'](227.75 * _0x4f29b0, 99.4375 * _0x4f29b0, 223.75 * _0x4f29b0, 122.4375 * _0x4f29b0, 210.75 * _0x4f29b0, 119.4375 * _0x4f29b0), _0x5eb712['bezierCurveTo'](203.75 * _0x4f29b0, 115.4375 * _0x4f29b0, 207.75 * _0x4f29b0, 93.4375 * _0x4f29b0, 216.75 * _0x4f29b0, 94.4375 * _0x4f29b0), _0x5eb712['closePath'](), fill_path(_0x5eb712, _0x82c77d[0x6], _0x82c77d[0x7], 0x4 * _0x4f29b0), _0x5eb712['beginPath'](), _0x5eb712['lineCap'] = 'round', _0x5eb712['lineJoin'] = 'round', _0x5eb712['moveTo'](211.75 * _0x4f29b0, 68.4375 * _0x4f29b0), _0x5eb712['bezierCurveTo'](218.75 * _0x4f29b0, 69.4375 * _0x4f29b0, 220.75 * _0x4f29b0, 77.4375 * _0x4f29b0, 216.75 * _0x4f29b0, 83.4375 * _0x4f29b0), _0x5eb712['bezierCurveTo'](208.75 * _0x4f29b0, 89.4375 * _0x4f29b0, 205.75 * _0x4f29b0, 68.4375 * _0x4f29b0, 210.75 * _0x4f29b0, 68.4375 * _0x4f29b0), _0x5eb712['closePath'](), fill_path(_0x5eb712, _0x82c77d[0x6], _0x82c77d[0x7], 0x4 * _0x4f29b0), _0x5eb712['beginPath'](), _0x5eb712['lineCap'] = 'round', _0x5eb712['lineJoin'] = 'round', _0x5eb712['moveTo'](169.75 * _0x4f29b0, 71.4375 * _0x4f29b0), _0x5eb712['bezierCurveTo'](162.75 * _0x4f29b0, 72.4375 * _0x4f29b0, 159.75 * _0x4f29b0, 83.4375 * _0x4f29b0, 167.75 * _0x4f29b0, 88.4375 * _0x4f29b0), _0x5eb712['bezierCurveTo'](174.75 * _0x4f29b0, 90.4375 * _0x4f29b0, 174.75 * _0x4f29b0, 72.4375 * _0x4f29b0, 170.75 * _0x4f29b0, 71.4375 * _0x4f29b0), _0x5eb712['closePath'](), fill_path(_0x5eb712, _0x82c77d[0x6], _0x82c77d[0x7], 0x4 * _0x4f29b0), _0x5eb712['beginPath'](), _0x5eb712['lineCap'] = 'round', _0x5eb712['lineJoin'] = 'round', _0x5eb712['moveTo'](193.75 * _0x4f29b0, 160.4375 * _0x4f29b0), _0x5eb712['bezierCurveTo'](215.75 * _0x4f29b0, 168.4375 * _0x4f29b0, 224.75 * _0x4f29b0, 180.4375 * _0x4f29b0, 229.75 * _0x4f29b0, 193.4375 * _0x4f29b0), _0x5eb712['bezierCurveTo'](223.75 * _0x4f29b0, 211.4375 * _0x4f29b0, 205.75 * _0x4f29b0, 225.4375 * _0x4f29b0, 193.75 * _0x4f29b0, 229.4375 * _0x4f29b0), _0x5eb712['bezierCurveTo'](167.75 * _0x4f29b0, 217.4375 * _0x4f29b0, 161.75 * _0x4f29b0, 205.4375 * _0x4f29b0, 156.75 * _0x4f29b0, 192.4375 * _0x4f29b0), _0x5eb712['bezierCurveTo'](164.75 * _0x4f29b0, 175.4375 * _0x4f29b0, 176.75 * _0x4f29b0, 166.4375 * _0x4f29b0, 192.75 * _0x4f29b0, 160.4375 * _0x4f29b0), _0x5eb712['closePath'](), fill_path(_0x5eb712, _0x82c77d[0x8], _0x82c77d[0x9], 0x3 * _0x4f29b0), _0x5eb712['beginPath'](), _0x5eb712['lineCap'] = 'round', _0x5eb712['lineJoin'] = 'round', _0x5eb712['moveTo'](189.1999969482422 * _0x4f29b0, 182.61249923706055 * _0x4f29b0), _0x5eb712['bezierCurveTo'](190.1999969482422 * _0x4f29b0, 184.11249923706055 * _0x4f29b0, 190.1999969482422 * _0x4f29b0, 184.11249923706055 * _0x4f29b0, 191.1999969482422 * _0x4f29b0, 185.61249923706055 * _0x4f29b0), _0x5eb712['bezierCurveTo'](192.1999969482422 * _0x4f29b0, 180.61249923706055 * _0x4f29b0, 192.1999969482422 * _0x4f29b0, 180.61249923706055 * _0x4f29b0, 193.1999969482422 * _0x4f29b0, 175.61249923706055 * _0x4f29b0), _0x5eb712['bezierCurveTo'](195.6999969482422 * _0x4f29b0, 177.11249923706055 * _0x4f29b0, 195.6999969482422 * _0x4f29b0, 177.11249923706055 * _0x4f29b0, 198.1999969482422 * _0x4f29b0, 178.61249923706055 * _0x4f29b0), _0x5eb712['bezierCurveTo'](198.1999969482422 * _0x4f29b0, 181.11249923706055 * _0x4f29b0, 198.1999969482422 * _0x4f29b0, 181.11249923706055 * _0x4f29b0, 198.1999969482422 * _0x4f29b0, 183.61249923706055 * _0x4f29b0), _0x5eb712['bezierCurveTo'](201.6999969482422 * _0x4f29b0, 181.11249923706055 * _0x4f29b0, 201.6999969482422 * _0x4f29b0, 181.11249923706055 * _0x4f29b0, 205.1999969482422 * _0x4f29b0, 178.61249923706055 * _0x4f29b0), _0x5eb712['bezierCurveTo'](206.6999969482422 * _0x4f29b0, 180.61249923706055 * _0x4f29b0, 206.6999969482422 * _0x4f29b0, 180.61249923706055 * _0x4f29b0, 208.1999969482422 * _0x4f29b0, 182.61249923706055 * _0x4f29b0), _0x5eb712['bezierCurveTo'](206.1999969482422 * _0x4f29b0, 185.61249923706055 * _0x4f29b0, 206.1999969482422 * _0x4f29b0, 185.61249923706055 * _0x4f29b0, 204.1999969482422 * _0x4f29b0, 188.61249923706055 * _0x4f29b0), _0x5eb712['bezierCurveTo'](208.6999969482422 * _0x4f29b0, 188.61249923706055 * _0x4f29b0, 208.6999969482422 * _0x4f29b0, 188.61249923706055 * _0x4f29b0, 213.1999969482422 * _0x4f29b0, 188.61249923706055 * _0x4f29b0), _0x5eb712['bezierCurveTo'](213.1999969482422 * _0x4f29b0, 191.11249923706055 * _0x4f29b0, 213.1999969482422 * _0x4f29b0, 191.11249923706055 * _0x4f29b0, 213.1999969482422 * _0x4f29b0, 193.61249923706055 * _0x4f29b0), _0x5eb712['bezierCurveTo'](209.6999969482422 * _0x4f29b0, 194.61249923706055 * _0x4f29b0, 209.6999969482422 * _0x4f29b0, 194.61249923706055 * _0x4f29b0, 206.1999969482422 * _0x4f29b0, 195.61249923706055 * _0x4f29b0), _0x5eb712['bezierCurveTo'](210.1999969482422 * _0x4f29b0, 198.61249923706055 * _0x4f29b0, 210.1999969482422 * _0x4f29b0, 198.61249923706055 * _0x4f29b0, 214.1999969482422 * _0x4f29b0, 201.61249923706055 * _0x4f29b0), _0x5eb712['bezierCurveTo'](212.1999969482422 * _0x4f29b0, 203.61249923706055 * _0x4f29b0, 212.1999969482422 * _0x4f29b0, 203.61249923706055 * _0x4f29b0, 210.1999969482422 * _0x4f29b0, 205.61249923706055 * _0x4f29b0), _0x5eb712['bezierCurveTo'](207.1999969482422 * _0x4f29b0, 204.11249923706055 * _0x4f29b0, 207.1999969482422 * _0x4f29b0, 204.11249923706055 * _0x4f29b0, 204.1999969482422 * _0x4f29b0, 202.61249923706055 * _0x4f29b0), _0x5eb712['bezierCurveTo'](205.6999969482422 * _0x4f29b0, 207.61249923706055 * _0x4f29b0, 205.6999969482422 * _0x4f29b0, 207.61249923706055 * _0x4f29b0, 207.1999969482422 * _0x4f29b0, 212.61249923706055 * _0x4f29b0), _0x5eb712['bezierCurveTo'](204.6999969482422 * _0x4f29b0, 213.61249923706055 * _0x4f29b0, 204.6999969482422 * _0x4f29b0, 213.61249923706055 * _0x4f29b0, 202.1999969482422 * _0x4f29b0, 214.61249923706055 * _0x4f29b0), _0x5eb712['bezierCurveTo'](200.1999969482422 * _0x4f29b0, 210.61249923706055 * _0x4f29b0, 200.1999969482422 * _0x4f29b0, 210.61249923706055 * _0x4f29b0, 198.1999969482422 * _0x4f29b0, 206.61249923706055 * _0x4f29b0), _0x5eb712['bezierCurveTo'](196.6999969482422 * _0x4f29b0, 211.61249923706055 * _0x4f29b0, 196.6999969482422 * _0x4f29b0, 211.61249923706055 * _0x4f29b0, 195.1999969482422 * _0x4f29b0, 216.61249923706055 * _0x4f29b0), _0x5eb712['bezierCurveTo'](192.6999969482422 * _0x4f29b0, 216.11249923706055 * _0x4f29b0, 192.6999969482422 * _0x4f29b0, 216.11249923706055 * _0x4f29b0, 190.1999969482422 * _0x4f29b0, 215.61249923706055 * _0x4f29b0), _0x5eb712['bezierCurveTo'](190.1999969482422 * _0x4f29b0, 211.61249923706055 * _0x4f29b0, 190.1999969482422 * _0x4f29b0, 211.61249923706055 * _0x4f29b0, 190.1999969482422 * _0x4f29b0, 207.61249923706055 * _0x4f29b0), _0x5eb712['bezierCurveTo'](186.1999969482422 * _0x4f29b0, 210.61249923706055 * _0x4f29b0, 186.1999969482422 * _0x4f29b0, 210.61249923706055 * _0x4f29b0, 182.1999969482422 * _0x4f29b0, 213.61249923706055 * _0x4f29b0), _0x5eb712['bezierCurveTo'](181.1999969482422 * _0x4f29b0, 211.11249923706055 * _0x4f29b0, 181.1999969482422 * _0x4f29b0, 211.11249923706055 * _0x4f29b0, 180.1999969482422 * _0x4f29b0, 208.61249923706055 * _0x4f29b0), _0x5eb712['bezierCurveTo'](183.1999969482422 * _0x4f29b0, 205.61249923706055 * _0x4f29b0, 183.1999969482422 * _0x4f29b0, 205.61249923706055 * _0x4f29b0, 186.1999969482422 * _0x4f29b0, 202.61249923706055 * _0x4f29b0), _0x5eb712['bezierCurveTo'](180.6999969482422 * _0x4f29b0, 203.11249923706055 * _0x4f29b0, 180.6999969482422 * _0x4f29b0, 203.11249923706055 * _0x4f29b0, 175.1999969482422 * _0x4f29b0, 203.61249923706055 * _0x4f29b0), _0x5eb712['bezierCurveTo'](174.6999969482422 * _0x4f29b0, 200.11249923706055 * _0x4f29b0, 174.6999969482422 * _0x4f29b0, 200.11249923706055 * _0x4f29b0, 174.1999969482422 * _0x4f29b0, 196.61249923706055 * _0x4f29b0), _0x5eb712['bezierCurveTo'](177.1999969482422 * _0x4f29b0, 195.61249923706055 * _0x4f29b0, 177.1999969482422 * _0x4f29b0, 195.61249923706055 * _0x4f29b0, 180.1999969482422 * _0x4f29b0, 194.61249923706055 * _0x4f29b0), _0x5eb712['bezierCurveTo'](177.1999969482422 * _0x4f29b0, 191.61249923706055 * _0x4f29b0, 177.1999969482422 * _0x4f29b0, 191.61249923706055 * _0x4f29b0, 174.1999969482422 * _0x4f29b0, 188.61249923706055 * _0x4f29b0), _0x5eb712['bezierCurveTo'](175.6999969482422 * _0x4f29b0, 187.11249923706055 * _0x4f29b0, 175.6999969482422 * _0x4f29b0, 187.11249923706055 * _0x4f29b0, 177.1999969482422 * _0x4f29b0, 185.61249923706055 * _0x4f29b0), _0x5eb712['bezierCurveTo'](180.6999969482422 * _0x4f29b0, 187.11249923706055 * _0x4f29b0, 180.6999969482422 * _0x4f29b0, 187.11249923706055 * _0x4f29b0, 184.1999969482422 * _0x4f29b0, 188.61249923706055 * _0x4f29b0), _0x5eb712['bezierCurveTo'](182.6999969482422 * _0x4f29b0, 183.61249923706055 * _0x4f29b0, 182.6999969482422 * _0x4f29b0, 183.61249923706055 * _0x4f29b0, 181.1999969482422 * _0x4f29b0, 178.61249923706055 * _0x4f29b0), _0x5eb712['bezierCurveTo'](183.1999969482422 * _0x4f29b0, 177.11249923706055 * _0x4f29b0, 183.1999969482422 * _0x4f29b0, 177.11249923706055 * _0x4f29b0, 185.1999969482422 * _0x4f29b0, 175.61249923706055 * _0x4f29b0), _0x5eb712['closePath'](), fill_path(_0x5eb712, _0x82c77d[0xa]), _0x5eb712['beginPath'](), _0x5eb712['lineCap'] = 'round', _0x5eb712['lineJoin'] = 'round', _0x5eb712['moveTo'](185.1999969482422 * _0x4f29b0, 173.8125 * _0x4f29b0), _0x5eb712['bezierCurveTo'](187.1999969482422 * _0x4f29b0, 179.3125 * _0x4f29b0, 187.1999969482422 * _0x4f29b0, 179.3125 * _0x4f29b0, 189.1999969482422 * _0x4f29b0, 184.8125 * _0x4f29b0), _0x5eb712['bezierCurveTo'](184.1999969482422 * _0x4f29b0, 181.8125 * _0x4f29b0, 184.1999969482422 * _0x4f29b0, 181.8125 * _0x4f29b0, 179.1999969482422 * _0x4f29b0, 178.8125 * _0x4f29b0), _0x5eb712['bezierCurveTo'](181.1999969482422 * _0x4f29b0, 175.8125 * _0x4f29b0, 182.1999969482422 * _0x4f29b0, 174.8125 * _0x4f29b0, 185.1999969482422 * _0x4f29b0, 173.8125 * _0x4f29b0), _0x5eb712['closePath'](), fill_path(_0x5eb712, _0x82c77d[0xb]), _0x5eb712['beginPath'](), _0x5eb712['lineCap'] = 'round', _0x5eb712['lineJoin'] = 'round', _0x5eb712['moveTo'](192.1999969482422 * _0x4f29b0, 173.61249542236328 * _0x4f29b0), _0x5eb712['bezierCurveTo'](194.1999969482422 * _0x4f29b0, 172.61249542236328 * _0x4f29b0, 196.1999969482422 * _0x4f29b0, 171.61249542236328 * _0x4f29b0, 199.1999969482422 * _0x4f29b0, 173.61249542236328 * _0x4f29b0), _0x5eb712['bezierCurveTo'](197.6999969482422 * _0x4f29b0, 179.61249542236328 * _0x4f29b0, 197.6999969482422 * _0x4f29b0, 179.61249542236328 * _0x4f29b0, 196.1999969482422 * _0x4f29b0, 185.61249542236328 * _0x4f29b0), _0x5eb712['bezierCurveTo'](194.1999969482422 * _0x4f29b0, 179.61249542236328 * _0x4f29b0, 194.1999969482422 * _0x4f29b0, 179.61249542236328 * _0x4f29b0, 192.1999969482422 * _0x4f29b0, 173.61249542236328 * _0x4f29b0), _0x5eb712['closePath'](), fill_path(_0x5eb712, _0x82c77d[0xb]), _0x5eb712['beginPath'](), _0x5eb712['lineCap'] = 'round', _0x5eb712['lineJoin'] = 'round', _0x5eb712['moveTo'](205.1999969482422 * _0x4f29b0, 176.2125015258789 * _0x4f29b0), _0x5eb712['bezierCurveTo'](210.1999969482422 * _0x4f29b0, 178.2125015258789 * _0x4f29b0, 211.1999969482422 * _0x4f29b0, 179.2125015258789 * _0x4f29b0, 211.1999969482422 * _0x4f29b0, 181.2125015258789 * _0x4f29b0), _0x5eb712['bezierCurveTo'](206.6999969482422 * _0x4f29b0, 184.7125015258789 * _0x4f29b0, 206.6999969482422 * _0x4f29b0, 184.7125015258789 * _0x4f29b0, 202.1999969482422 * _0x4f29b0, 188.2125015258789 * _0x4f29b0), _0x5eb712['bezierCurveTo'](203.6999969482422 * _0x4f29b0, 182.2125015258789 * _0x4f29b0, 203.6999969482422 * _0x4f29b0, 182.2125015258789 * _0x4f29b0, 205.1999969482422 * _0x4f29b0, 176.2125015258789 * _0x4f29b0), _0x5eb712['closePath'](), fill_path(_0x5eb712, _0x82c77d[0xb]), _0x5eb712['beginPath'](), _0x5eb712['lineCap'] = 'round', _0x5eb712['lineJoin'] = 'round', _0x5eb712['moveTo'](214.1999969482422 * _0x4f29b0, 187.21249985694885 * _0x4f29b0), _0x5eb712['bezierCurveTo'](216.1999969482422 * _0x4f29b0, 191.21249985694885 * _0x4f29b0, 216.1999969482422 * _0x4f29b0, 192.21249985694885 * _0x4f29b0, 215.1999969482422 * _0x4f29b0, 195.21249985694885 * _0x4f29b0), _0x5eb712['bezierCurveTo'](206.1999969482422 * _0x4f29b0, 194.21249985694885 * _0x4f29b0, 205.1999969482422 * _0x4f29b0, 194.21249985694885 * _0x4f29b0, 205.1999969482422 * _0x4f29b0, 194.21249985694885 * _0x4f29b0), _0x5eb712['bezierCurveTo'](209.6999969482422 * _0x4f29b0, 190.71249985694885 * _0x4f29b0, 209.6999969482422 * _0x4f29b0, 190.71249985694885 * _0x4f29b0, 214.1999969482422 * _0x4f29b0, 187.21249985694885 * _0x4f29b0), _0x5eb712['closePath'](), fill_path(_0x5eb712, _0x82c77d[0xb]), _0x5eb712['beginPath'](), _0x5eb712['lineCap'] = 'round', _0x5eb712['lineJoin'] = 'round', _0x5eb712['moveTo'](204.1999969482422 * _0x4f29b0, 201.8125 * _0x4f29b0), _0x5eb712['bezierCurveTo'](209.1999969482422 * _0x4f29b0, 201.3125 * _0x4f29b0, 209.1999969482422 * _0x4f29b0, 201.3125 * _0x4f29b0, 214.1999969482422 * _0x4f29b0, 200.8125 * _0x4f29b0), _0x5eb712['bezierCurveTo'](215.1999969482422 * _0x4f29b0, 204.8125 * _0x4f29b0, 214.1999969482422 * _0x4f29b0, 205.8125 * _0x4f29b0, 213.1999969482422 * _0x4f29b0, 208.8125 * _0x4f29b0), _0x5eb712['bezierCurveTo'](208.6999969482422 * _0x4f29b0, 205.3125 * _0x4f29b0, 208.6999969482422 * _0x4f29b0, 205.3125 * _0x4f29b0, 204.1999969482422 * _0x4f29b0, 201.8125 * _0x4f29b0), _0x5eb712['closePath'](), fill_path(_0x5eb712, _0x82c77d[0xb]), _0x5eb712['beginPath'](), _0x5eb712['lineCap'] = 'round', _0x5eb712['lineJoin'] = 'round', _0x5eb712['moveTo'](199.1999969482422 * _0x4f29b0, 205.61249923706055 * _0x4f29b0), _0x5eb712['bezierCurveTo'](207.1999969482422 * _0x4f29b0, 212.61249923706055 * _0x4f29b0, 203.6999969482422 * _0x4f29b0, 209.11249923706055 * _0x4f29b0, 208.1999969482422 * _0x4f29b0, 212.61249923706055 * _0x4f29b0), _0x5eb712['bezierCurveTo'](206.1999969482422 * _0x4f29b0, 215.61249923706055 * _0x4f29b0, 204.1999969482422 * _0x4f29b0, 217.61249923706055 * _0x4f29b0, 203.1999969482422 * _0x4f29b0, 216.61249923706055 * _0x4f29b0), _0x5eb712['bezierCurveTo'](201.1999969482422 * _0x4f29b0, 211.11249923706055 * _0x4f29b0, 201.1999969482422 * _0x4f29b0, 211.11249923706055 * _0x4f29b0, 199.1999969482422 * _0x4f29b0, 205.61249923706055 * _0x4f29b0), _0x5eb712['closePath'](), fill_path(_0x5eb712, _0x82c77d[0xb]), _0x5eb712['beginPath'](), _0x5eb712['lineCap'] = 'round', _0x5eb712['lineJoin'] = 'round', _0x5eb712['moveTo'](191.1999969482422 * _0x4f29b0, 207.01250076293945 * _0x4f29b0), _0x5eb712['bezierCurveTo'](194.1999969482422 * _0x4f29b0, 213.01250076293945 * _0x4f29b0, 194.1999969482422 * _0x4f29b0, 216.01250076293945 * _0x4f29b0, 196.1999969482422 * _0x4f29b0, 218.01250076293945 * _0x4f29b0), _0x5eb712['bezierCurveTo'](193.1999969482422 * _0x4f29b0, 220.01250076293945 * _0x4f29b0, 190.1999969482422 * _0x4f29b0, 220.01250076293945 * _0x4f29b0, 188.1999969482422 * _0x4f29b0, 218.01250076293945 * _0x4f29b0), _0x5eb712['bezierCurveTo'](189.6999969482422 * _0x4f29b0, 213.01250076293945 * _0x4f29b0, 189.6999969482422 * _0x4f29b0, 213.01250076293945 * _0x4f29b0, 191.1999969482422 * _0x4f29b0, 208.01250076293945 * _0x4f29b0), _0x5eb712['closePath'](), fill_path(_0x5eb712, _0x82c77d[0xb]), _0x5eb712['beginPath'](), _0x5eb712['lineCap'] = 'round', _0x5eb712['lineJoin'] = 'round', _0x5eb712['moveTo'](186.1999969482422 * _0x4f29b0, 203.21249961853027 * _0x4f29b0), _0x5eb712['bezierCurveTo'](184.1999969482422 * _0x4f29b0, 209.21249961853027 * _0x4f29b0, 184.1999969482422 * _0x4f29b0, 209.21249961853027 * _0x4f29b0, 182.1999969482422 * _0x4f29b0, 215.21249961853027 * _0x4f29b0), _0x5eb712['bezierCurveTo'](177.1999969482422 * _0x4f29b0, 212.21249961853027 * _0x4f29b0, 176.1999969482422 * _0x4f29b0, 211.21249961853027 * _0x4f29b0, 177.1999969482422 * _0x4f29b0, 210.21249961853027 * _0x4f29b0), _0x5eb712['bezierCurveTo'](181.6999969482422 * _0x4f29b0, 206.71249961853027 * _0x4f29b0, 181.6999969482422 * _0x4f29b0, 206.71249961853027 * _0x4f29b0, 186.1999969482422 * _0x4f29b0, 203.21249961853027 * _0x4f29b0), _0x5eb712['closePath'](), fill_path(_0x5eb712, _0x82c77d[0xb]), _0x5eb712['beginPath'](), _0x5eb712['lineCap'] = 'round', _0x5eb712['lineJoin'] = 'round', _0x5eb712['moveTo'](183.1999969482422 * _0x4f29b0, 196.8125 * _0x4f29b0), _0x5eb712['bezierCurveTo'](177.1999969482422 * _0x4f29b0, 196.3125 * _0x4f29b0, 177.1999969482422 * _0x4f29b0, 196.3125 * _0x4f29b0, 171.1999969482422 * _0x4f29b0, 195.8125 * _0x4f29b0), _0x5eb712['bezierCurveTo'](171.1999969482422 * _0x4f29b0, 199.8125 * _0x4f29b0, 171.1999969482422 * _0x4f29b0, 202.8125 * _0x4f29b0, 174.1999969482422 * _0x4f29b0, 204.8125 * _0x4f29b0), _0x5eb712['bezierCurveTo'](178.6999969482422 * _0x4f29b0, 200.8125 * _0x4f29b0, 178.6999969482422 * _0x4f29b0, 200.8125 * _0x4f29b0, 183.1999969482422 * _0x4f29b0, 196.8125 * _0x4f29b0), _0x5eb712['closePath'](), fill_path(_0x5eb712, _0x82c77d[0xb]), _0x5eb712['beginPath'](), _0x5eb712['lineCap'] = 'round', _0x5eb712['lineJoin'] = 'round', _0x5eb712['moveTo'](185.1999969482422 * _0x4f29b0, 190.21249771118164 * _0x4f29b0), _0x5eb712['bezierCurveTo'](179.6999969482422 * _0x4f29b0, 186.71249771118164 * _0x4f29b0, 179.6999969482422 * _0x4f29b0, 186.71249771118164 * _0x4f29b0, 174.1999969482422 * _0x4f29b0, 183.21249771118164 * _0x4f29b0), _0x5eb712['bezierCurveTo'](172.1999969482422 * _0x4f29b0, 186.21249771118164 * _0x4f29b0, 172.1999969482422 * _0x4f29b0, 187.21249771118164 * _0x4f29b0, 172.1999969482422 * _0x4f29b0, 190.21249771118164 * _0x4f29b0), _0x5eb712['bezierCurveTo'](178.1999969482422 * _0x4f29b0, 190.21249771118164 * _0x4f29b0, 178.1999969482422 * _0x4f29b0, 190.21249771118164 * _0x4f29b0, 184.1999969482422 * _0x4f29b0, 190.21249771118164 * _0x4f29b0), _0x5eb712['closePath'](), fill_path(_0x5eb712, _0x82c77d[0xb]), circle(_0x5eb712, 126.19999694824219 * _0x4f29b0, 169.8125 * _0x4f29b0, 8.94427190999916 * _0x4f29b0), fill_path(_0x5eb712, _0x82c77d[0xc]), circle(_0x5eb712, 123.19999694824219 * _0x4f29b0, 164.8125 * _0x4f29b0, 2.8284271247461903 * _0x4f29b0), fill_path(_0x5eb712, _0x82c77d[0xd]), circle(_0x5eb712, 253.1999969482422 * _0x4f29b0, 169.8125 * _0x4f29b0, 8.94427190999916 * _0x4f29b0), fill_path(_0x5eb712, _0x82c77d[0xc]), circle(_0x5eb712, 255.1999969482422 * _0x4f29b0, 164.8125 * _0x4f29b0, 2.23606797749979 * _0x4f29b0), fill_path(_0x5eb712, _0x82c77d[0xd]), _0x3d6d77;
}

function create_bread(_0x5ebbf3, _0x1c6ff8, _0x51e679) {
    var _0x49b746 = document['createElement']('canvas'),
        _0x143613 = _0x49b746['getContext']('2d');
    return _0x49b746['width'] = 0x190 * _0x5ebbf3, _0x49b746['height'] = 0x190 * _0x5ebbf3, _0x143613['globalAlpha'] = 0x1, _0x143613['translate'](0x14 * _0x5ebbf3, 0x14 * _0x5ebbf3), _0x143613['beginPath'](), _0x143613['lineCap'] = 'round', _0x143613['lineJoin'] = 'round', _0x143613['moveTo'](36.5 * _0x5ebbf3, 278.0625 * _0x5ebbf3), _0x143613['bezierCurveTo'](67.5 * _0x5ebbf3, 316.0625 * _0x5ebbf3, 134.5 * _0x5ebbf3, 334.0625 * _0x5ebbf3, 199.5 * _0x5ebbf3, 319.0625 * _0x5ebbf3), _0x143613['bezierCurveTo'](254.5 * _0x5ebbf3, 304.0625 * _0x5ebbf3, 346.5 * _0x5ebbf3, 270.0625 * _0x5ebbf3, 348.5 * _0x5ebbf3, 237.0625 * _0x5ebbf3), _0x143613['bezierCurveTo'](359.5 * _0x5ebbf3, 206.0625 * _0x5ebbf3, 318.5 * _0x5ebbf3, 129.0625 * _0x5ebbf3, 262.5 * _0x5ebbf3, 122.0625 * _0x5ebbf3), _0x143613['bezierCurveTo'](213.5 * _0x5ebbf3, 115.0625 * _0x5ebbf3, 166.5 * _0x5ebbf3, 133.0625 * _0x5ebbf3, 104.5 * _0x5ebbf3, 166.0625 * _0x5ebbf3), _0x143613['bezierCurveTo'](54.5 * _0x5ebbf3, 194.0625 * _0x5ebbf3, 23.5 * _0x5ebbf3, 241.0625 * _0x5ebbf3, 36.5 * _0x5ebbf3, 277.0625 * _0x5ebbf3), _0x143613['closePath'](), fill_path(_0x143613, _0x51e679[0x0]), _0x143613['translate'](-0x14 * _0x5ebbf3, -0x14 * _0x5ebbf3), _0x143613['beginPath'](), _0x143613['lineCap'] = 'round', _0x143613['lineJoin'] = 'round', _0x143613['moveTo'](36.5 * _0x5ebbf3, 278.0625 * _0x5ebbf3), _0x143613['bezierCurveTo'](67.5 * _0x5ebbf3, 316.0625 * _0x5ebbf3, 134.5 * _0x5ebbf3, 334.0625 * _0x5ebbf3, 199.5 * _0x5ebbf3, 319.0625 * _0x5ebbf3), _0x143613['bezierCurveTo'](254.5 * _0x5ebbf3, 304.0625 * _0x5ebbf3, 346.5 * _0x5ebbf3, 270.0625 * _0x5ebbf3, 348.5 * _0x5ebbf3, 237.0625 * _0x5ebbf3), _0x143613['bezierCurveTo'](359.5 * _0x5ebbf3, 206.0625 * _0x5ebbf3, 318.5 * _0x5ebbf3, 129.0625 * _0x5ebbf3, 262.5 * _0x5ebbf3, 122.0625 * _0x5ebbf3), _0x143613['bezierCurveTo'](213.5 * _0x5ebbf3, 115.0625 * _0x5ebbf3, 166.5 * _0x5ebbf3, 133.0625 * _0x5ebbf3, 104.5 * _0x5ebbf3, 166.0625 * _0x5ebbf3), _0x143613['bezierCurveTo'](54.5 * _0x5ebbf3, 194.0625 * _0x5ebbf3, 23.5 * _0x5ebbf3, 241.0625 * _0x5ebbf3, 36.5 * _0x5ebbf3, 277.0625 * _0x5ebbf3), _0x143613['closePath'](), fill_path(_0x143613, _0x51e679[0x1], _0x51e679[0x2], 0x13 * _0x5ebbf3), _0x143613['beginPath'](), _0x143613['lineCap'] = 'round', _0x143613['lineJoin'] = 'round', _0x143613['moveTo'](214.5 * _0x5ebbf3, 124.0625 * _0x5ebbf3), _0x143613['bezierCurveTo'](242.5 * _0x5ebbf3, 125.0625 * _0x5ebbf3, 272.5 * _0x5ebbf3, 159.0625 * _0x5ebbf3, 283.5 * _0x5ebbf3, 184.0625 * _0x5ebbf3), _0x143613['bezierCurveTo'](277.5 * _0x5ebbf3, 161.0625 * _0x5ebbf3, 233.5 * _0x5ebbf3, 128.0625 * _0x5ebbf3, 219.5 * _0x5ebbf3, 122.0625 * _0x5ebbf3), _0x143613['closePath'](), fill_path(_0x143613, undefined, _0x51e679[0x2], 0x13 * _0x5ebbf3), _0x143613['beginPath'](), _0x143613['lineCap'] = 'round', _0x143613['lineJoin'] = 'round', _0x143613['moveTo'](157.5 * _0x5ebbf3, 145.0625 * _0x5ebbf3), _0x143613['bezierCurveTo'](176.5 * _0x5ebbf3, 148.0625 * _0x5ebbf3, 205.5 * _0x5ebbf3, 176.0625 * _0x5ebbf3, 212.5 * _0x5ebbf3, 197.0625 * _0x5ebbf3), _0x143613['bezierCurveTo'](205.5 * _0x5ebbf3, 178.0625 * _0x5ebbf3, 177.5 * _0x5ebbf3, 152.0625 * _0x5ebbf3, 156.5 * _0x5ebbf3, 142.0625 * _0x5ebbf3), _0x143613['closePath'](), fill_path(_0x143613, undefined, _0x51e679[0x2], 0x13 * _0x5ebbf3), _0x143613['beginPath'](), _0x143613['lineCap'] = 'round', _0x143613['lineJoin'] = 'round', _0x143613['moveTo'](103.5 * _0x5ebbf3, 169.0625 * _0x5ebbf3), _0x143613['bezierCurveTo'](160.5 * _0x5ebbf3, 166.0625 * _0x5ebbf3, 228.5 * _0x5ebbf3, 312.0625 * _0x5ebbf3, 162.5 * _0x5ebbf3, 323.0625 * _0x5ebbf3), _0x143613['bezierCurveTo'](128.5 * _0x5ebbf3, 330.0625 * _0x5ebbf3, 45.5 * _0x5ebbf3, 312.0625 * _0x5ebbf3, 34.5 * _0x5ebbf3, 268.0625 * _0x5ebbf3), _0x143613['bezierCurveTo'](30.5 * _0x5ebbf3, 238.0625 * _0x5ebbf3, 44.5 * _0x5ebbf3, 222.0625 * _0x5ebbf3, 52.5 * _0x5ebbf3, 211.0625 * _0x5ebbf3), _0x143613['bezierCurveTo'](82.5 * _0x5ebbf3, 174.0625 * _0x5ebbf3, 104.5 * _0x5ebbf3, 166.0625 * _0x5ebbf3, 119.5 * _0x5ebbf3, 172.0625 * _0x5ebbf3), _0x143613['closePath'](), fill_path(_0x143613, _0x51e679[0x3], _0x51e679[0x2], 0x13 * _0x5ebbf3), circle(_0x143613, 92.5 * _0x5ebbf3, 216.0625 * _0x5ebbf3, 13.892443989449804 * _0x5ebbf3), fill_path(_0x143613, _0x51e679[0x4]), circle(_0x143613, 68.5 * _0x5ebbf3, 227.0625 * _0x5ebbf3, 8.06225774829855 * _0x5ebbf3), fill_path(_0x143613, _0x51e679[0x4]), circle(_0x143613, 85.5 * _0x5ebbf3, 240.0625 * _0x5ebbf3, 6.708203932499369 * _0x5ebbf3), fill_path(_0x143613, _0x51e679[0x4]), circle(_0x143613, 147.5 * _0x5ebbf3, 294.0625 * _0x5ebbf3, 17.46424919657298 * _0x5ebbf3), fill_path(_0x143613, _0x51e679[0x4]), circle(_0x143613, 166.5 * _0x5ebbf3, 273.0625 * _0x5ebbf3, 6.708203932499369 * _0x5ebbf3), fill_path(_0x143613, _0x51e679[0x4]), circle(_0x143613, 114.5 * _0x5ebbf3, 294.0625 * _0x5ebbf3, 12.36931687685298 * _0x5ebbf3), fill_path(_0x143613, _0x51e679[0x4]), circle(_0x143613, 123.5 * _0x5ebbf3, 220.0625 * _0x5ebbf3, 5.830951894845301 * _0x5ebbf3), fill_path(_0x143613, _0x51e679[0x4]), circle(_0x143613, 114.5 * _0x5ebbf3, 259.0625 * _0x5ebbf3, 4.123105625617661 * _0x5ebbf3), fill_path(_0x143613, _0x51e679[0x4]), circle(_0x143613, 63.5 * _0x5ebbf3, 265.0625 * _0x5ebbf3, 5.385164807134504 * _0x5ebbf3), fill_path(_0x143613, _0x51e679[0x4]), circle(_0x143613, 148.5 * _0x5ebbf3, 235.0625 * _0x5ebbf3, 4.47213595499958 * _0x5ebbf3), fill_path(_0x143613, _0x51e679[0x4]), _0x143613['beginPath'](), _0x143613['lineCap'] = 'round', _0x143613['lineJoin'] = 'round', _0x143613['moveTo'](194.5 * _0x5ebbf3, 313.0625 * _0x5ebbf3), _0x143613['bezierCurveTo'](222.5 * _0x5ebbf3, 306.0625 * _0x5ebbf3, 319.5 * _0x5ebbf3, 271.0625 * _0x5ebbf3, 337.5 * _0x5ebbf3, 241.0625 * _0x5ebbf3), _0x143613['bezierCurveTo'](274.5 * _0x5ebbf3, 270.0625 * _0x5ebbf3, 216.5 * _0x5ebbf3, 288.0625 * _0x5ebbf3, 199.5 * _0x5ebbf3, 287.0625 * _0x5ebbf3), _0x143613['bezierCurveTo'](198.5 * _0x5ebbf3, 302.0625 * _0x5ebbf3, 195.5 * _0x5ebbf3, 311.0625 * _0x5ebbf3, 193.5 * _0x5ebbf3, 312.0625 * _0x5ebbf3), _0x143613['closePath'](), fill_path(_0x143613, _0x51e679[0x5]), _0x49b746;
}

function create_hurt_kraken(_0x537e56, _0x16cd0c) {
    var _0x565f57 = document['createElement']('canvas'),
        _0x2eea3f = _0x565f57['getContext']('2d');
    return _0x565f57['width'] = 0x178 * _0x537e56, _0x565f57['height'] = 0x173 * _0x537e56, _0x2eea3f['globalAlpha'] = 0x1, _0x2eea3f['beginPath'](), _0x2eea3f['lineCap'] = 'round', _0x2eea3f['lineJoin'] = 'round', _0x2eea3f['moveTo'](191.633544921875 * _0x537e56, 123.98580932617188 * _0x537e56), _0x2eea3f['bezierCurveTo'](215.633544921875 * _0x537e56, 85.98580932617188 * _0x537e56, 187.633544921875 * _0x537e56, 71.98580932617188 * _0x537e56, 202.633544921875 * _0x537e56, 19.985809326171875 * _0x537e56), _0x2eea3f['bezierCurveTo'](231.633544921875 * _0x537e56, 68.98580932617188 * _0x537e56, 253.633544921875 * _0x537e56, 71.98580932617188 * _0x537e56, 256.633544921875 * _0x537e56, 93.98580932617188 * _0x537e56), _0x2eea3f['bezierCurveTo'](306.633544921875 * _0x537e56, 64.98580932617188 * _0x537e56, 319.633544921875 * _0x537e56, 61.985809326171875 * _0x537e56, 350.633544921875 * _0x537e56, 58.985809326171875 * _0x537e56), _0x2eea3f['bezierCurveTo'](280.633544921875 * _0x537e56, 86.98580932617188 * _0x537e56, 281.633544921875 * _0x537e56, 106.98580932617188 * _0x537e56, 268.633544921875 * _0x537e56, 130.98580932617188 * _0x537e56), _0x2eea3f['bezierCurveTo'](295.633544921875 * _0x537e56, 158.98580932617188 * _0x537e56, 328.633544921875 * _0x537e56, 155.98580932617188 * _0x537e56, 353.633544921875 * _0x537e56, 90.98580932617188 * _0x537e56), _0x2eea3f['bezierCurveTo'](371.633544921875 * _0x537e56, 158.98580932617188 * _0x537e56, 337.633544921875 * _0x537e56, 210.98580932617188 * _0x537e56, 286.633544921875 * _0x537e56, 209.98580932617188 * _0x537e56), _0x2eea3f['bezierCurveTo'](323.633544921875 * _0x537e56, 230.98580932617188 * _0x537e56, 317.633544921875 * _0x537e56, 274.9858093261719 * _0x537e56, 356.633544921875 * _0x537e56, 305.9858093261719 * _0x537e56), _0x2eea3f['bezierCurveTo'](288.633544921875 * _0x537e56, 297.9858093261719 * _0x537e56, 288.633544921875 * _0x537e56, 265.9858093261719 * _0x537e56, 275.633544921875 * _0x537e56, 266.9858093261719 * _0x537e56), _0x2eea3f['bezierCurveTo'](280.633544921875 * _0x537e56, 294.9858093261719 * _0x537e56, 315.633544921875 * _0x537e56, 306.9858093261719 * _0x537e56, 336.633544921875 * _0x537e56, 316.9858093261719 * _0x537e56), _0x2eea3f['bezierCurveTo'](295.633544921875 * _0x537e56, 318.9858093261719 * _0x537e56, 264.633544921875 * _0x537e56, 302.9858093261719 * _0x537e56, 254.633544921875 * _0x537e56, 289.9858093261719 * _0x537e56), _0x2eea3f['bezierCurveTo'](252.633544921875 * _0x537e56, 301.9858093261719 * _0x537e56, 224.633544921875 * _0x537e56, 315.9858093261719 * _0x537e56, 201.633544921875 * _0x537e56, 356.9858093261719 * _0x537e56), _0x2eea3f['bezierCurveTo'](195.633544921875 * _0x537e56, 313.9858093261719 * _0x537e56, 195.633544921875 * _0x537e56, 308.9858093261719 * _0x537e56, 196.633544921875 * _0x537e56, 307.9858093261719 * _0x537e56), _0x2eea3f['bezierCurveTo'](197.633544921875 * _0x537e56, 289.9858093261719 * _0x537e56, 207.633544921875 * _0x537e56, 283.9858093261719 * _0x537e56, 195.633544921875 * _0x537e56, 258.9858093261719 * _0x537e56), _0x2eea3f['bezierCurveTo'](182.633544921875 * _0x537e56, 282.9858093261719 * _0x537e56, 190.633544921875 * _0x537e56, 287.9858093261719 * _0x537e56, 193.633544921875 * _0x537e56, 297.9858093261719 * _0x537e56), _0x2eea3f['bezierCurveTo'](195.633544921875 * _0x537e56, 306.9858093261719 * _0x537e56, 191.633544921875 * _0x537e56, 334.9858093261719 * _0x537e56, 187.633544921875 * _0x537e56, 354.9858093261719 * _0x537e56), _0x2eea3f['bezierCurveTo'](165.633544921875 * _0x537e56, 320.9858093261719 * _0x537e56, 138.633544921875 * _0x537e56, 307.9858093261719 * _0x537e56, 135.633544921875 * _0x537e56, 288.9858093261719 * _0x537e56), _0x2eea3f['bezierCurveTo'](110.633544921875 * _0x537e56, 318.9858093261719 * _0x537e56, 68.633544921875 * _0x537e56, 323.9858093261719 * _0x537e56, 49.633544921875 * _0x537e56, 320.9858093261719 * _0x537e56), _0x2eea3f['bezierCurveTo'](88.633544921875 * _0x537e56, 308.9858093261719 * _0x537e56, 108.633544921875 * _0x537e56, 284.9858093261719 * _0x537e56, 118.633544921875 * _0x537e56, 258.9858093261719 * _0x537e56), _0x2eea3f['bezierCurveTo'](86.633544921875 * _0x537e56, 264.9858093261719 * _0x537e56, 75.633544921875 * _0x537e56, 310.9858093261719 * _0x537e56, 19.633544921875 * _0x537e56, 304.9858093261719 * _0x537e56), _0x2eea3f['bezierCurveTo'](54.633544921875 * _0x537e56, 276.9858093261719 * _0x537e56, 59.633544921875 * _0x537e56, 214.98580932617188 * _0x537e56, 105.633544921875 * _0x537e56, 205.98580932617188 * _0x537e56), _0x2eea3f['bezierCurveTo'](14.633544921875 * _0x537e56, 201.98580932617188 * _0x537e56, 24.633544921875 * _0x537e56, 141.98580932617188 * _0x537e56, 25.633544921875 * _0x537e56, 82.98580932617188 * _0x537e56), _0x2eea3f['bezierCurveTo'](49.633544921875 * _0x537e56, 168.98580932617188 * _0x537e56, 87.633544921875 * _0x537e56, 141.98580932617188 * _0x537e56, 112.633544921875 * _0x537e56, 123.98580932617188 * _0x537e56), _0x2eea3f['bezierCurveTo'](95.633544921875 * _0x537e56, 75.98580932617188 * _0x537e56, 70.633544921875 * _0x537e56, 68.98580932617188 * _0x537e56, 35.633544921875 * _0x537e56, 50.985809326171875 * _0x537e56), _0x2eea3f['bezierCurveTo'](70.633544921875 * _0x537e56, 53.985809326171875 * _0x537e56, 102.633544921875 * _0x537e56, 65.98580932617188 * _0x537e56, 125.633544921875 * _0x537e56, 84.98580932617188 * _0x537e56), _0x2eea3f['bezierCurveTo'](133.633544921875 * _0x537e56, 69.98580932617188 * _0x537e56, 166.633544921875 * _0x537e56, 42.985809326171875 * _0x537e56, 176.633544921875 * _0x537e56, 21.985809326171875 * _0x537e56), _0x2eea3f['bezierCurveTo'](185.633544921875 * _0x537e56, 49.985809326171875 * _0x537e56, 168.633544921875 * _0x537e56, 95.98580932617188 * _0x537e56, 191.633544921875 * _0x537e56, 121.98580932617188 * _0x537e56), _0x2eea3f['closePath'](), fill_path(_0x2eea3f, _0x16cd0c[0x0], _0x16cd0c[0x0], 0xc * _0x537e56), _0x565f57;
}

function create_bread_oven_off(_0x4fcfc7, _0x171e34, _0x122ef2) {
    var _0x57bb98 = document['createElement']('canvas'),
        _0x53808f = _0x57bb98['getContext']('2d');
    return _0x57bb98['width'] = 0x1b8 * _0x4fcfc7, _0x57bb98['height'] = 0x184 * _0x4fcfc7, _0x53808f['globalAlpha'] = _0x171e34 ? 0.5 : 0x1, _0x53808f['translate'](0x5 * _0x4fcfc7, 0x5 * _0x4fcfc7), circle(_0x53808f, 0xdc * _0x4fcfc7, 0xc9 * _0x4fcfc7, 170.41713528867922 * _0x4fcfc7), fill_path(_0x53808f, _0x122ef2[0x0], _0x122ef2[0x0], 0x6 * _0x4fcfc7), _0x53808f['globalAlpha'] = 0x1, _0x53808f['translate'](-0x5 * _0x4fcfc7, -0x5 * _0x4fcfc7), circle(_0x53808f, 0xdc * _0x4fcfc7, 0xc9 * _0x4fcfc7, 170.41713528867922 * _0x4fcfc7), fill_path(_0x53808f, _0x122ef2[0x1], _0x122ef2[0x2], 0x6 * _0x4fcfc7), circle(_0x53808f, 0xdc * _0x4fcfc7, 0xc9 * _0x4fcfc7, 0x82 * _0x4fcfc7), fill_path(_0x53808f, _0x122ef2[0xb], _0x122ef2[0x2], 0x6 * _0x4fcfc7), circle(_0x53808f, 0xde * _0x4fcfc7, 0xc7 * _0x4fcfc7, 120.74767078498864 * _0x4fcfc7), fill_path(_0x53808f, undefined, _0x122ef2[0x3], 0x28 * _0x4fcfc7), circle(_0x53808f, 0xdc * _0x4fcfc7, 0xc8 * _0x4fcfc7, 95.44108130150245 * _0x4fcfc7), fill_path(_0x53808f, undefined, _0x122ef2[0x2], 0xf * _0x4fcfc7), _0x53808f['globalAlpha'] = _0x171e34 ? 0.5 : 0x1, _0x53808f['translate'](0x5 * _0x4fcfc7, 0x5 * _0x4fcfc7), circle(_0x53808f, 0x3f * _0x4fcfc7, 0x88 * _0x4fcfc7, 49.193495504995376 * _0x4fcfc7), fill_path(_0x53808f, _0x122ef2[0x0], _0x122ef2[0x0], 0x4 * _0x4fcfc7), _0x53808f['globalAlpha'] = 0x1, _0x53808f['translate'](-0x5 * _0x4fcfc7, -0x5 * _0x4fcfc7), circle(_0x53808f, 0x3f * _0x4fcfc7, 0x88 * _0x4fcfc7, 49.193495504995376 * _0x4fcfc7), fill_path(_0x53808f, _0x122ef2[0x8], _0x122ef2[0x2], 0x4 * _0x4fcfc7), circle(_0x53808f, 0x3f * _0x4fcfc7, 0x89 * _0x4fcfc7, 25.632011235952593 * _0x4fcfc7), fill_path(_0x53808f, _0x122ef2[0x7], _0x122ef2[0x2], 0x4 * _0x4fcfc7), _0x57bb98;
}

function create_bread_oven(_0x1adec8, _0x2b6fae, _0x2b4540) {
    var _0x42a182 = document['createElement']('canvas'),
        _0x538e1b = _0x42a182['getContext']('2d');
    return _0x42a182['width'] = 0x1b8 * _0x1adec8, _0x42a182['height'] = 0x184 * _0x1adec8, _0x538e1b['globalAlpha'] = _0x2b6fae ? 0.5 : 0x1, _0x538e1b['translate'](0x5 * _0x1adec8, 0x5 * _0x1adec8), circle(_0x538e1b, 0xdc * _0x1adec8, 0xc9 * _0x1adec8, 170.41713528867922 * _0x1adec8), fill_path(_0x538e1b, _0x2b4540[0x0], _0x2b4540[0x0], 0x6 * _0x1adec8), _0x538e1b['globalAlpha'] = 0x1, _0x538e1b['translate'](-0x5 * _0x1adec8, -0x5 * _0x1adec8), circle(_0x538e1b, 0xdc * _0x1adec8, 0xc9 * _0x1adec8, 170.41713528867922 * _0x1adec8), fill_path(_0x538e1b, _0x2b4540[0x1], _0x2b4540[0x2], 0x6 * _0x1adec8), circle(_0x538e1b, 0xdc * _0x1adec8, 0xc9 * _0x1adec8, 0x82 * _0x1adec8), fill_path(_0x538e1b, _0x2b4540[0xb], _0x2b4540[0x2], 0x6 * _0x1adec8), _0x538e1b['beginPath'](), _0x538e1b['lineCap'] = 'round', _0x538e1b['lineJoin'] = 'round', _0x538e1b['moveTo'](0xda * _0x1adec8, 0x61 * _0x1adec8), _0x538e1b['bezierCurveTo'](0xdb * _0x1adec8, 0xa3 * _0x1adec8, 0xc9 * _0x1adec8, 0xb0 * _0x1adec8, 0xbf * _0x1adec8, 0xaf * _0x1adec8), _0x538e1b['bezierCurveTo'](0xb0 * _0x1adec8, 0xb1 * _0x1adec8, 0xa8 * _0x1adec8, 0xa7 * _0x1adec8, 0xa0 * _0x1adec8, 0x73 * _0x1adec8), _0x538e1b['closePath'](), fill_path(_0x538e1b, _0x2b4540[0x5], _0x2b4540[0x6], 0x4 * _0x1adec8), _0x538e1b['beginPath'](), _0x538e1b['lineCap'] = 'round', _0x538e1b['lineJoin'] = 'round', _0x538e1b['moveTo'](0xe0 * _0x1adec8, 0xb5 * _0x1adec8), _0x538e1b['bezierCurveTo'](0xe1 * _0x1adec8, 0x8a * _0x1adec8, 0xf6 * _0x1adec8, 0x73 * _0x1adec8, 0x107 * _0x1adec8, 0x89 * _0x1adec8), _0x538e1b['bezierCurveTo'](0x11a * _0x1adec8, 0xae * _0x1adec8, 0x117 * _0x1adec8, 0xd9 * _0x1adec8, 0x109 * _0x1adec8, 0xf3 * _0x1adec8), _0x538e1b['bezierCurveTo'](0xfd * _0x1adec8, 0x108 * _0x1adec8, 0xf0 * _0x1adec8, 0x100 * _0x1adec8, 0xe9 * _0x1adec8, 0xee * _0x1adec8), _0x538e1b['bezierCurveTo'](0xdd * _0x1adec8, 0xd4 * _0x1adec8, 0xe1 * _0x1adec8, 0xc6 * _0x1adec8, 0xe0 * _0x1adec8, 0xb8 * _0x1adec8), _0x538e1b['closePath'](), fill_path(_0x538e1b, _0x2b4540[0x5], _0x2b4540[0x6], 0x4 * _0x1adec8), _0x538e1b['beginPath'](), _0x538e1b['lineCap'] = 'round', _0x538e1b['lineJoin'] = 'round', _0x538e1b['moveTo'](0xa9 * _0x1adec8, 0x121 * _0x1adec8), _0x538e1b['bezierCurveTo'](0xa1 * _0x1adec8, 0xea * _0x1adec8, 0xa8 * _0x1adec8, 0xc5 * _0x1adec8, 0xbb * _0x1adec8, 0xc3 * _0x1adec8), _0x538e1b['bezierCurveTo'](0xdb * _0x1adec8, 0xbd * _0x1adec8, 0xde * _0x1adec8, 0x100 * _0x1adec8, 0xd8 * _0x1adec8, 0x133 * _0x1adec8), _0x538e1b['closePath'](), fill_path(_0x538e1b, _0x2b4540[0x5], _0x2b4540[0x6], 0x4 * _0x1adec8), _0x538e1b['beginPath'](), _0x538e1b['lineCap'] = 'round', _0x538e1b['lineJoin'] = 'round', _0x538e1b['moveTo'](0x8f * _0x1adec8, 0x92 * _0x1adec8), _0x538e1b['bezierCurveTo'](0xa1 * _0x1adec8, 0xc7 * _0x1adec8, 0x97 * _0x1adec8, 0xf5 * _0x1adec8, 0x8a * _0x1adec8, 0x10a * _0x1adec8), _0x538e1b['bezierCurveTo'](120.5 * _0x1adec8, 239.5 * _0x1adec8, 120.5 * _0x1adec8, 239.5 * _0x1adec8, 0x67 * _0x1adec8, 0xd5 * _0x1adec8), _0x538e1b['closePath'](), fill_path(_0x538e1b, _0x2b4540[0x5], _0x2b4540[0x6], 0x4 * _0x1adec8), _0x538e1b['beginPath'](), _0x538e1b['lineCap'] = 'round', _0x538e1b['lineJoin'] = 'round', _0x538e1b['moveTo'](0x11b * _0x1adec8, 0x87 * _0x1adec8), _0x538e1b['bezierCurveTo'](0x115 * _0x1adec8, 0xb0 * _0x1adec8, 0x12a * _0x1adec8, 0xc2 * _0x1adec8, 0x13b * _0x1adec8, 0xcd * _0x1adec8), _0x538e1b['bezierCurveTo'](323.5 * _0x1adec8, 0xaf * _0x1adec8, 323.5 * _0x1adec8, 0xaf * _0x1adec8, 0x14c * _0x1adec8, 0x91 * _0x1adec8), _0x538e1b['closePath'](), fill_path(_0x538e1b, _0x2b4540[0x5], _0x2b4540[0x6], 0x4 * _0x1adec8), _0x538e1b['beginPath'](), _0x538e1b['lineCap'] = 'round', _0x538e1b['lineJoin'] = 'round', _0x538e1b['moveTo'](0x13e * _0x1adec8, 0xdf * _0x1adec8), _0x538e1b['bezierCurveTo'](0x122 * _0x1adec8, 0xc3 * _0x1adec8, 0x10f * _0x1adec8, 0x100 * _0x1adec8, 0x11b * _0x1adec8, 0x119 * _0x1adec8), _0x538e1b['bezierCurveTo'](303.5 * _0x1adec8, 0x10b * _0x1adec8, 303.5 * _0x1adec8, 0x10b * _0x1adec8, 0x144 * _0x1adec8, 0xfd * _0x1adec8), _0x538e1b['closePath'](), fill_path(_0x538e1b, _0x2b4540[0x5], _0x2b4540[0x6], 0x4 * _0x1adec8), _0x538e1b['beginPath'](), _0x538e1b['lineCap'] = 'round', _0x538e1b['lineJoin'] = 'round', _0x538e1b['moveTo'](0x8e * _0x1adec8, 0xdf * _0x1adec8), _0x538e1b['bezierCurveTo'](0x80 * _0x1adec8, 0xd5 * _0x1adec8, 0x7b * _0x1adec8, 0xd6 * _0x1adec8, 0x6f * _0x1adec8, 0xdf * _0x1adec8), _0x538e1b['closePath'](), fill_path(_0x538e1b, _0x2b4540[0xa], _0x2b4540[0xa], 0x4 * _0x1adec8), _0x538e1b['beginPath'](), _0x538e1b['lineCap'] = 'round', _0x538e1b['lineJoin'] = 'round', _0x538e1b['moveTo'](0xfb * _0x1adec8, 0x85 * _0x1adec8), _0x538e1b['bezierCurveTo'](0x10d * _0x1adec8, 0xbc * _0x1adec8, 0x106 * _0x1adec8, 0xe5 * _0x1adec8, 0xfb * _0x1adec8, 0xfd * _0x1adec8), _0x538e1b['bezierCurveTo'](0x120 * _0x1adec8, 0xe0 * _0x1adec8, 0x111 * _0x1adec8, 0x8b * _0x1adec8, 0xfc * _0x1adec8, 0x85 * _0x1adec8), _0x538e1b['closePath'](), fill_path(_0x538e1b, _0x2b4540[0xa], _0x2b4540[0xa], 0x4 * _0x1adec8), _0x538e1b['beginPath'](), _0x538e1b['lineCap'] = 'round', _0x538e1b['lineJoin'] = 'round', _0x538e1b['moveTo'](0xcb * _0x1adec8, 0x66 * _0x1adec8), _0x538e1b['bezierCurveTo'](0xcc * _0x1adec8, 0x88 * _0x1adec8, 0xc8 * _0x1adec8, 0x9f * _0x1adec8, 0xbd * _0x1adec8, 0xae * _0x1adec8), _0x538e1b['bezierCurveTo'](0xdf * _0x1adec8, 0xa4 * _0x1adec8, 0xdb * _0x1adec8, 0x57 * _0x1adec8, 0xcd * _0x1adec8, 0x53 * _0x1adec8), _0x538e1b['closePath'](), fill_path(_0x538e1b, _0x2b4540[0xa], _0x2b4540[0xa], 0x4 * _0x1adec8), _0x538e1b['beginPath'](), _0x538e1b['lineCap'] = 'round', _0x538e1b['lineJoin'] = 'round', _0x538e1b['moveTo'](0xc4 * _0x1adec8, 0x144 * _0x1adec8), _0x538e1b['bezierCurveTo'](0xd1 * _0x1adec8, 0xef * _0x1adec8, 0xc8 * _0x1adec8, 0xdb * _0x1adec8, 0xc0 * _0x1adec8, 0xc4 * _0x1adec8), _0x538e1b['bezierCurveTo'](0xe5 * _0x1adec8, 0xd8 * _0x1adec8, 0xdb * _0x1adec8, 0x13c * _0x1adec8, 0xc6 * _0x1adec8, 0x145 * _0x1adec8), _0x538e1b['closePath'](), fill_path(_0x538e1b, _0x2b4540[0xa], _0x2b4540[0xa], 0x4 * _0x1adec8), _0x538e1b['beginPath'](), _0x538e1b['lineCap'] = 'round', _0x538e1b['lineJoin'] = 'round', _0x538e1b['moveTo'](0x10a * _0x1adec8, 0xa6 * _0x1adec8), _0x538e1b['bezierCurveTo'](0xf9 * _0x1adec8, 0x9a * _0x1adec8, 0xf3 * _0x1adec8, 0xa1 * _0x1adec8, 0xe9 * _0x1adec8, 0xa7 * _0x1adec8), fill_path(_0x538e1b, undefined, _0x2b4540[0x6], 0x6 * _0x1adec8), _0x538e1b['beginPath'](), _0x538e1b['lineCap'] = 'round', _0x538e1b['lineJoin'] = 'round', _0x538e1b['moveTo'](0x10d * _0x1adec8, 0xc0 * _0x1adec8), _0x538e1b['bezierCurveTo'](0x100 * _0x1adec8, 0xb7 * _0x1adec8, 0xf1 * _0x1adec8, 0xba * _0x1adec8, 0xe9 * _0x1adec8, 0xc0 * _0x1adec8), fill_path(_0x538e1b, undefined, _0x2b4540[0x6], 0x6 * _0x1adec8), _0x538e1b['beginPath'](), _0x538e1b['lineCap'] = 'round', _0x538e1b['lineJoin'] = 'round', _0x538e1b['moveTo'](0x107 * _0x1adec8, 0xd9 * _0x1adec8), _0x538e1b['bezierCurveTo'](0xfb * _0x1adec8, 0xd3 * _0x1adec8, 0xf2 * _0x1adec8, 0xd5 * _0x1adec8, 0xec * _0x1adec8, 0xda * _0x1adec8), fill_path(_0x538e1b, undefined, _0x2b4540[0x6], 0x6 * _0x1adec8), _0x538e1b['beginPath'](), _0x538e1b['lineCap'] = 'round', _0x538e1b['lineJoin'] = 'round', _0x538e1b['moveTo'](0xcc * _0x1adec8, 0x8d * _0x1adec8), _0x538e1b['bezierCurveTo'](0xbf * _0x1adec8, 0x83 * _0x1adec8, 0xbb * _0x1adec8, 0x85 * _0x1adec8, 0xb0 * _0x1adec8, 0x8d * _0x1adec8), fill_path(_0x538e1b, undefined, _0x2b4540[0x6], 0x6 * _0x1adec8), _0x538e1b['beginPath'](), _0x538e1b['lineCap'] = 'round', _0x538e1b['lineJoin'] = 'round', _0x538e1b['moveTo'](0xcf * _0x1adec8, 0xe6 * _0x1adec8), _0x538e1b['bezierCurveTo'](0xc1 * _0x1adec8, 0xde * _0x1adec8, 0xb9 * _0x1adec8, 0xe0 * _0x1adec8, 0xb1 * _0x1adec8, 0xe7 * _0x1adec8), fill_path(_0x538e1b, undefined, _0x2b4540[0x6], 0x6 * _0x1adec8), _0x538e1b['lineCap'] = 'round', _0x538e1b['lineJoin'] = 'round', _0x538e1b['moveTo'](0xd2 * _0x1adec8, 0x102 * _0x1adec8), _0x538e1b['bezierCurveTo'](0xc4 * _0x1adec8, 0xf7 * _0x1adec8, 0xbf * _0x1adec8, 0xfa * _0x1adec8, 0xb1 * _0x1adec8, 0x103 * _0x1adec8), fill_path(_0x538e1b, undefined, _0x2b4540[0x6], 0x6 * _0x1adec8), _0x538e1b['beginPath'](), _0x538e1b['lineCap'] = 'round', _0x538e1b['lineJoin'] = 'round', _0x538e1b['moveTo'](0x91 * _0x1adec8, 0xc4 * _0x1adec8), _0x538e1b['bezierCurveTo'](0x82 * _0x1adec8, 0xba * _0x1adec8, 0x7c * _0x1adec8, 0xbb * _0x1adec8, 0x72 * _0x1adec8, 0xc3 * _0x1adec8), fill_path(_0x538e1b, undefined, _0x2b4540[0x6], 0x6 * _0x1adec8), _0x538e1b['beginPath'](), _0x538e1b['lineCap'] = 'round', _0x538e1b['lineJoin'] = 'round', _0x538e1b['moveTo'](0xda * _0x1adec8, 0x61 * _0x1adec8), _0x538e1b['bezierCurveTo'](0xdb * _0x1adec8, 0xa3 * _0x1adec8, 0xc9 * _0x1adec8, 0xb0 * _0x1adec8, 0xbf * _0x1adec8, 0xaf * _0x1adec8), _0x538e1b['bezierCurveTo'](0xb0 * _0x1adec8, 0xb1 * _0x1adec8, 0xa8 * _0x1adec8, 0xa7 * _0x1adec8, 0xa0 * _0x1adec8, 0x73 * _0x1adec8), _0x538e1b['closePath'](), fill_path(_0x538e1b, undefined, _0x2b4540[0x6], 0x6 * _0x1adec8), _0x538e1b['beginPath'](), _0x538e1b['lineCap'] = 'round', _0x538e1b['lineJoin'] = 'round', _0x538e1b['moveTo'](0xe0 * _0x1adec8, 0xb5 * _0x1adec8), _0x538e1b['bezierCurveTo'](0xe1 * _0x1adec8, 0x8a * _0x1adec8, 0xf6 * _0x1adec8, 0x73 * _0x1adec8, 0x107 * _0x1adec8, 0x89 * _0x1adec8), _0x538e1b['bezierCurveTo'](0x11a * _0x1adec8, 0xae * _0x1adec8, 0x117 * _0x1adec8, 0xd9 * _0x1adec8, 0x109 * _0x1adec8, 0xf3 * _0x1adec8), _0x538e1b['bezierCurveTo'](0xfd * _0x1adec8, 0x108 * _0x1adec8, 0xf0 * _0x1adec8, 0x100 * _0x1adec8, 0xe9 * _0x1adec8, 0xee * _0x1adec8), _0x538e1b['bezierCurveTo'](0xdd * _0x1adec8, 0xd4 * _0x1adec8, 0xe1 * _0x1adec8, 0xc6 * _0x1adec8, 0xe0 * _0x1adec8, 0xb8 * _0x1adec8), _0x538e1b['closePath'](), fill_path(_0x538e1b, undefined, _0x2b4540[0x6], 0x6 * _0x1adec8), _0x538e1b['beginPath'](), _0x538e1b['lineCap'] = 'round', _0x538e1b['lineJoin'] = 'round', _0x538e1b['moveTo'](0xa9 * _0x1adec8, 0x121 * _0x1adec8), _0x538e1b['bezierCurveTo'](0xa1 * _0x1adec8, 0xea * _0x1adec8, 0xa8 * _0x1adec8, 0xc5 * _0x1adec8, 0xbb * _0x1adec8, 0xc3 * _0x1adec8), _0x538e1b['bezierCurveTo'](0xdb * _0x1adec8, 0xbd * _0x1adec8, 0xde * _0x1adec8, 0x100 * _0x1adec8, 0xd8 * _0x1adec8, 0x133 * _0x1adec8), _0x538e1b['closePath'](), fill_path(_0x538e1b, undefined, _0x2b4540[0x6], 0x6 * _0x1adec8), _0x538e1b['beginPath'](), _0x538e1b['lineCap'] = 'round', _0x538e1b['lineJoin'] = 'round', _0x538e1b['moveTo'](0x8f * _0x1adec8, 0x92 * _0x1adec8), _0x538e1b['bezierCurveTo'](0xa1 * _0x1adec8, 0xc7 * _0x1adec8, 0x97 * _0x1adec8, 0xf5 * _0x1adec8, 0x8a * _0x1adec8, 0x10a * _0x1adec8), _0x538e1b['bezierCurveTo'](120.5 * _0x1adec8, 239.5 * _0x1adec8, 120.5 * _0x1adec8, 239.5 * _0x1adec8, 0x67 * _0x1adec8, 0xd5 * _0x1adec8), _0x538e1b['closePath'](), fill_path(_0x538e1b, undefined, _0x2b4540[0x6], 0x6 * _0x1adec8), _0x538e1b['beginPath'](), _0x538e1b['lineCap'] = 'round', _0x538e1b['lineJoin'] = 'round', _0x538e1b['moveTo'](0x11b * _0x1adec8, 0x87 * _0x1adec8), _0x538e1b['bezierCurveTo'](0x115 * _0x1adec8, 0xb0 * _0x1adec8, 0x12a * _0x1adec8, 0xc2 * _0x1adec8, 0x13b * _0x1adec8, 0xcd * _0x1adec8), _0x538e1b['bezierCurveTo'](323.5 * _0x1adec8, 0xaf * _0x1adec8, 323.5 * _0x1adec8, 0xaf * _0x1adec8, 0x14c * _0x1adec8, 0x91 * _0x1adec8), _0x538e1b['closePath'](), fill_path(_0x538e1b, undefined, _0x2b4540[0x6], 0x6 * _0x1adec8), _0x538e1b['beginPath'](), _0x538e1b['lineCap'] = 'round', _0x538e1b['lineJoin'] = 'round', _0x538e1b['moveTo'](0x13e * _0x1adec8, 0xdf * _0x1adec8), _0x538e1b['bezierCurveTo'](0x122 * _0x1adec8, 0xc3 * _0x1adec8, 0x10f * _0x1adec8, 0x100 * _0x1adec8, 0x11b * _0x1adec8, 0x119 * _0x1adec8), _0x538e1b['bezierCurveTo'](303.5 * _0x1adec8, 0x10b * _0x1adec8, 303.5 * _0x1adec8, 0x10b * _0x1adec8, 0x144 * _0x1adec8, 0xfd * _0x1adec8), _0x538e1b['closePath'](), fill_path(_0x538e1b, undefined, _0x2b4540[0x6], 0x6 * _0x1adec8), circle(_0x538e1b, 0xde * _0x1adec8, 0xc7 * _0x1adec8, 120.74767078498864 * _0x1adec8), fill_path(_0x538e1b, undefined, _0x2b4540[0x3], 0x28 * _0x1adec8), circle(_0x538e1b, 0xdc * _0x1adec8, 0xc8 * _0x1adec8, 95.44108130150245 * _0x1adec8), fill_path(_0x538e1b, undefined, _0x2b4540[0x2], 0xf * _0x1adec8), circle(_0x538e1b, 0xdc * _0x1adec8, 0xc9 * _0x1adec8, 0x55 * _0x1adec8), fill_path(_0x538e1b, undefined, _0x2b4540[0x4], 0xa * _0x1adec8), _0x538e1b['globalAlpha'] = 0.5, circle(_0x538e1b, 0xdc * _0x1adec8, 0xc9 * _0x1adec8, 0x52 * _0x1adec8), fill_path(_0x538e1b, _0x2b4540[0x9]), _0x538e1b['globalAlpha'] = _0x2b6fae ? 0.5 : 0x1, _0x538e1b['translate'](0x5 * _0x1adec8, 0x5 * _0x1adec8), circle(_0x538e1b, 0x3f * _0x1adec8, 0x88 * _0x1adec8, 49.193495504995376 * _0x1adec8), fill_path(_0x538e1b, _0x2b4540[0x0], _0x2b4540[0x0], 0x4 * _0x1adec8), _0x538e1b['globalAlpha'] = 0x1, _0x538e1b['translate'](-0x5 * _0x1adec8, -0x5 * _0x1adec8), circle(_0x538e1b, 0x3f * _0x1adec8, 0x88 * _0x1adec8, 49.193495504995376 * _0x1adec8), fill_path(_0x538e1b, _0x2b4540[0x8], _0x2b4540[0x2], 0x4 * _0x1adec8), circle(_0x538e1b, 0x3f * _0x1adec8, 0x89 * _0x1adec8, 25.632011235952593 * _0x1adec8), fill_path(_0x538e1b, _0x2b4540[0x7], _0x2b4540[0x2], 0x4 * _0x1adec8), _0x42a182;
}

function create_bread_light_down(_0x4ef254, _0x488a4f) {
    var _0x545d6f = document['createElement']('canvas'),
        _0xe08b5d = _0x545d6f['getContext']('2d');
    return _0x545d6f['width'] = 0x6e * _0x4ef254, _0x545d6f['height'] = 0x6e * _0x4ef254, _0xe08b5d['globalAlpha'] = 0.2, circle(_0xe08b5d, 0x37 * _0x4ef254, 0x37 * _0x4ef254, 0x37 * _0x4ef254), fill_path(_0xe08b5d, _0x488a4f[0x0]), _0x545d6f;
}

function create_bread_light_up(_0x2cebf7, _0x28bc04) {
    var _0x2f9db3 = document['createElement']('canvas'),
        _0x41a515 = _0x2f9db3['getContext']('2d');
    return _0x2f9db3['width'] = 0x6e * _0x2cebf7, _0x2f9db3['height'] = 0x6e * _0x2cebf7, _0x41a515['globalAlpha'] = 0.2, circle(_0x41a515, 0x37 * _0x2cebf7, 0x37 * _0x2cebf7, 0x37 * _0x2cebf7), fill_path(_0x41a515, _0x28bc04[0x0]), _0x2f9db3;
}

function create_bridge(_0x2afe7e, _0x51333f, _0x347033) {
    var _0x4c90c0 = document['createElement']('canvas'),
        _0x2445bb = _0x4c90c0['getContext']('2d');
    return _0x4c90c0['width'] = 0x66 * _0x2afe7e, _0x4c90c0['height'] = 0x66 * _0x2afe7e, _0x2445bb['globalAlpha'] = _0x51333f ? 0.5 : 0x1, _0x2445bb['translate'](0x3, 0x3), round_rect(_0x2445bb, 0x18 * _0x2afe7e, 0x1a * _0x2afe7e, 0x46 * _0x2afe7e, 0x9 * _0x2afe7e, 0xa * _0x2afe7e), fill_path(_0x2445bb, _0x347033[0x0]), round_rect(_0x2445bb, 0x1a * _0x2afe7e, 0x46 * _0x2afe7e, 0x46 * _0x2afe7e, 0x9 * _0x2afe7e, 0xa * _0x2afe7e), fill_path(_0x2445bb, _0x347033[0x0]), round_rect(_0x2445bb, 0x5 * _0x2afe7e, 0x3 * _0x2afe7e, 0x16 * _0x2afe7e, 0x5e * _0x2afe7e, 0x5 * _0x2afe7e), fill_path(_0x2445bb, _0x347033[0x0]), round_rect(_0x2445bb, 0x28 * _0x2afe7e, 0x3 * _0x2afe7e, 0x16 * _0x2afe7e, 0x5e * _0x2afe7e, 0x5 * _0x2afe7e), fill_path(_0x2445bb, _0x347033[0x0]), round_rect(_0x2445bb, 0x4b * _0x2afe7e, 0x3 * _0x2afe7e, 0x16 * _0x2afe7e, 0x5e * _0x2afe7e, 0x5 * _0x2afe7e), fill_path(_0x2445bb, _0x347033[0x0]), _0x2445bb['globalAlpha'] = 0x1, _0x2445bb['translate'](-0x3, -0x3), round_rect(_0x2445bb, 0x18 * _0x2afe7e, 0x1a * _0x2afe7e, 0x46 * _0x2afe7e, 0x9 * _0x2afe7e, 0xa * _0x2afe7e), fill_path(_0x2445bb, _0x347033[0x1]), round_rect(_0x2445bb, 0x1a * _0x2afe7e, 0x46 * _0x2afe7e, 0x46 * _0x2afe7e, 0x9 * _0x2afe7e, 0xa * _0x2afe7e), fill_path(_0x2445bb, _0x347033[0x1]), round_rect(_0x2445bb, 0x5 * _0x2afe7e, 0x3 * _0x2afe7e, 0x16 * _0x2afe7e, 0x5e * _0x2afe7e, 0x5 * _0x2afe7e), fill_path(_0x2445bb, _0x347033[0x2], _0x347033[0x3], 0x4 * _0x2afe7e), round_rect(_0x2445bb, 0x28 * _0x2afe7e, 0x3 * _0x2afe7e, 0x16 * _0x2afe7e, 0x5e * _0x2afe7e, 0x5 * _0x2afe7e), fill_path(_0x2445bb, _0x347033[0x2], _0x347033[0x3], 0x4 * _0x2afe7e), round_rect(_0x2445bb, 0x4b * _0x2afe7e, 0x3 * _0x2afe7e, 0x16 * _0x2afe7e, 0x5e * _0x2afe7e, 0x5 * _0x2afe7e), fill_path(_0x2445bb, _0x347033[0x2], _0x347033[0x3], 0x4 * _0x2afe7e), _0x4c90c0;
}

function create_well_border(_0x5bc168, _0x236234) {
    var _0x559e66 = document['createElement']('canvas'),
        _0x3f12f9 = _0x559e66['getContext']('2d');
    return _0x559e66['width'] = 0x1f0 * _0x5bc168, _0x559e66['height'] = 0x208 * _0x5bc168, _0x3f12f9['globalAlpha'] = 0x1, _0x3f12f9['translate'](0x0, -0xa * _0x5bc168), circle(_0x3f12f9, 247.01138305664062 * _0x5bc168, 250.13068389892578 * _0x5bc168, 232.81967270830015 * _0x5bc168), fill_path(_0x3f12f9, _0x236234[0x1], _0x236234[0x2], 0xe * _0x5bc168), _0x3f12f9['globalCompositeOperation'] = 'destination-out', circle(_0x3f12f9, 247.01138305664062 * _0x5bc168, 249.3125 * _0x5bc168, 161.4465855941215 * _0x5bc168), fill_path(_0x3f12f9, _0x236234[0x0], _0x236234[0x0], 0xe * _0x5bc168), _0x3f12f9['globalCompositeOperation'] = 'source-over', _0x559e66;
}

function create_well(_0x51b136, _0x15d554, _0x3d257f) {
    var _0x2beb98 = document['createElement']('canvas'),
        _0x4da8b7 = _0x2beb98['getContext']('2d');
    _0x2beb98['width'] = 0x1f0 * _0x51b136, _0x2beb98['height'] = 0x208 * _0x51b136, _0x4da8b7['globalAlpha'] = _0x15d554 ? 0.5 : 0x1, _0x4da8b7['translate'](0x0, 0xa * _0x51b136), _0x4da8b7['beginPath'](), _0x4da8b7['lineCap'] = 'round', _0x4da8b7['lineJoin'] = 'round', _0x4da8b7['moveTo'](19.000030517578125 * _0x51b136, 256.67613983154297 * _0x51b136), _0x4da8b7['bezierCurveTo'](1.000030517578125 * _0x51b136, 332.67613983154297 * _0x51b136, 23.000030517578125 * _0x51b136, 404.67613983154297 * _0x51b136, 95.00003051757812 * _0x51b136, 463.67613983154297 * _0x51b136), _0x4da8b7['bezierCurveTo'](128.00003051757812 * _0x51b136, 491.67613983154297 * _0x51b136, 165.00003051757812 * _0x51b136, 507.67613983154297 * _0x51b136, 194.00003051757812 * _0x51b136, 512.676139831543 * _0x51b136), _0x4da8b7['bezierCurveTo'](280.0000305175781 * _0x51b136, 517.676139831543 * _0x51b136, 291.0000305175781 * _0x51b136, 516.676139831543 * _0x51b136, 342.0000305175781 * _0x51b136, 497.67613983154297 * _0x51b136), _0x4da8b7['bezierCurveTo'](425.0000305175781 * _0x51b136, 454.67613983154297 * _0x51b136, 469.0000305175781 * _0x51b136, 392.67613983154297 * _0x51b136, 468.0000305175781 * _0x51b136, 300.67613983154297 * _0x51b136), _0x4da8b7['bezierCurveTo'](408.5000305175781 * _0x51b136, 365.17613983154297 * _0x51b136, 408.5000305175781 * _0x51b136, 365.17613983154297 * _0x51b136, 349.0000305175781 * _0x51b136, 429.67613983154297 * _0x51b136), _0x4da8b7['bezierCurveTo'](256.0000305175781 * _0x51b136, 473.67613983154297 * _0x51b136, 167.00003051757812 * _0x51b136, 459.67613983154297 * _0x51b136, 78.00003051757812 * _0x51b136, 384.67613983154297 * _0x51b136), _0x4da8b7['closePath'](), fill_path(_0x4da8b7, _0x3d257f[0x0]), _0x4da8b7['globalAlpha'] = 0x1, _0x4da8b7['translate'](0x0, -0xa * _0x51b136), circle(_0x4da8b7, 247.01138305664062 * _0x51b136, 249.3125 * _0x51b136, 161.4465855941215 * _0x51b136), fill_path(_0x4da8b7, _0x3d257f[0x5], undefined, 0xc * _0x51b136), _0x4da8b7['globalAlpha'] = _0x15d554 ? 0.5 : 0x1, _0x4da8b7['translate'](0x0, 0xa * _0x51b136), _0x4da8b7['beginPath'](), _0x4da8b7['lineCap'] = 'round', _0x4da8b7['lineJoin'] = 'round', _0x4da8b7['moveTo'](65.00003051757812 * _0x51b136, 263.4034118652344 * _0x51b136), _0x4da8b7['bezierCurveTo'](109.00003051757812 * _0x51b136, 160.40341186523438 * _0x51b136, 185.00003051757812 * _0x51b136, 128.40341186523438 * _0x51b136, 222.00003051757812 * _0x51b136, 124.40341186523438 * _0x51b136), _0x4da8b7['bezierCurveTo'](277.0000305175781 * _0x51b136, 116.40341186523438 * _0x51b136, 339.0000305175781 * _0x51b136, 134.40341186523438 * _0x51b136, 379.0000305175781 * _0x51b136, 195.40341186523438 * _0x51b136), _0x4da8b7['bezierCurveTo'](409.0000305175781 * _0x51b136, 242.40341186523438 * _0x51b136, 416.0000305175781 * _0x51b136, 256.4034118652344 * _0x51b136, 428.0000305175781 * _0x51b136, 304.4034118652344 * _0x51b136), _0x4da8b7['bezierCurveTo'](457.0000305175781 * _0x51b136, 203.40341186523438 * _0x51b136, 449.0000305175781 * _0x51b136, 183.40341186523438 * _0x51b136, 438.0000305175781 * _0x51b136, 162.40341186523438 * _0x51b136), _0x4da8b7['bezierCurveTo'](381.0000305175781 * _0x51b136, 73.40341186523438 * _0x51b136, 360.0000305175781 * _0x51b136, 66.40341186523438 * _0x51b136, 257.0000305175781 * _0x51b136, 46.403411865234375 * _0x51b136), _0x4da8b7['bezierCurveTo'](191.00003051757812 * _0x51b136, 45.403411865234375 * _0x51b136, 142.00003051757812 * _0x51b136, 65.40341186523438 * _0x51b136, 101.00003051757812 * _0x51b136, 115.40341186523438 * _0x51b136), _0x4da8b7['closePath'](), fill_path(_0x4da8b7, _0x3d257f[0x0]), _0x4da8b7['globalAlpha'] = 0x1;
    var _0x49ea18 = create_well_border(_0x51b136, _0x3d257f);
    return _0x4da8b7['drawImage'](_0x49ea18, 0x0, 0x0), _0x4da8b7['translate'](0x0, -0xa * _0x51b136), circle(_0x4da8b7, 247.01138305664062 * _0x51b136, 249.3125 * _0x51b136, 161.4465855941215 * _0x51b136), fill_path(_0x4da8b7, undefined, _0x3d257f[0x2], 0xc * _0x51b136), _0x4da8b7['globalAlpha'] = _0x15d554 ? 0.5 : 0x1, _0x4da8b7['translate'](0x0, 0x5 * _0x51b136), _0x4da8b7['beginPath'](), _0x4da8b7['lineCap'] = 'round', _0x4da8b7['lineJoin'] = 'round', _0x4da8b7['moveTo'](325.0113830566406 * _0x51b136, 13.767059326171875 * _0x51b136), _0x4da8b7['bezierCurveTo'](349.5113830566406 * _0x51b136, 25.767059326171875 * _0x51b136, 349.5113830566406 * _0x51b136, 25.767059326171875 * _0x51b136, 374.0113830566406 * _0x51b136, 37.767059326171875 * _0x51b136), _0x4da8b7['bezierCurveTo'](384.0113830566406 * _0x51b136, 44.767059326171875 * _0x51b136, 383.0113830566406 * _0x51b136, 50.767059326171875 * _0x51b136, 368.0113830566406 * _0x51b136, 68.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](352.5113830566406 * _0x51b136, 91.26705932617188 * _0x51b136, 352.5113830566406 * _0x51b136, 91.26705932617188 * _0x51b136, 337.0113830566406 * _0x51b136, 113.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](328.0113830566406 * _0x51b136, 119.76705932617188 * _0x51b136, 328.0113830566406 * _0x51b136, 121.76705932617188 * _0x51b136, 312.0113830566406 * _0x51b136, 112.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](303.0113830566406 * _0x51b136, 108.26705932617188 * _0x51b136, 303.0113830566406 * _0x51b136, 108.26705932617188 * _0x51b136, 294.0113830566406 * _0x51b136, 103.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](287.0113830566406 * _0x51b136, 99.76705932617188 * _0x51b136, 293.0113830566406 * _0x51b136, 84.76705932617188 * _0x51b136, 297.0113830566406 * _0x51b136, 67.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](302.0113830566406 * _0x51b136, 47.767059326171875 * _0x51b136, 302.0113830566406 * _0x51b136, 47.767059326171875 * _0x51b136, 307.0113830566406 * _0x51b136, 27.767059326171875 * _0x51b136), _0x4da8b7['bezierCurveTo'](310.0113830566406 * _0x51b136, 15.767059326171875 * _0x51b136, 317.0113830566406 * _0x51b136, 12.767059326171875 * _0x51b136, 323.0113830566406 * _0x51b136, 13.767059326171875 * _0x51b136), _0x4da8b7['closePath'](), fill_path(_0x4da8b7, _0x3d257f[0x0], _0x3d257f[0x0], 0xc * _0x51b136), _0x4da8b7['globalAlpha'] = 0x1, _0x4da8b7['translate'](0x0, -0x5 * _0x51b136), _0x4da8b7['beginPath'](), _0x4da8b7['lineCap'] = 'round', _0x4da8b7['lineJoin'] = 'round', _0x4da8b7['moveTo'](325.0113830566406 * _0x51b136, 13.767059326171875 * _0x51b136), _0x4da8b7['bezierCurveTo'](349.5113830566406 * _0x51b136, 25.767059326171875 * _0x51b136, 349.5113830566406 * _0x51b136, 25.767059326171875 * _0x51b136, 374.0113830566406 * _0x51b136, 37.767059326171875 * _0x51b136), _0x4da8b7['bezierCurveTo'](384.0113830566406 * _0x51b136, 44.767059326171875 * _0x51b136, 383.0113830566406 * _0x51b136, 50.767059326171875 * _0x51b136, 368.0113830566406 * _0x51b136, 68.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](352.5113830566406 * _0x51b136, 91.26705932617188 * _0x51b136, 352.5113830566406 * _0x51b136, 91.26705932617188 * _0x51b136, 337.0113830566406 * _0x51b136, 113.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](328.0113830566406 * _0x51b136, 119.76705932617188 * _0x51b136, 328.0113830566406 * _0x51b136, 121.76705932617188 * _0x51b136, 312.0113830566406 * _0x51b136, 112.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](303.0113830566406 * _0x51b136, 108.26705932617188 * _0x51b136, 303.0113830566406 * _0x51b136, 108.26705932617188 * _0x51b136, 294.0113830566406 * _0x51b136, 103.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](287.0113830566406 * _0x51b136, 99.76705932617188 * _0x51b136, 293.0113830566406 * _0x51b136, 84.76705932617188 * _0x51b136, 297.0113830566406 * _0x51b136, 67.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](302.0113830566406 * _0x51b136, 47.767059326171875 * _0x51b136, 302.0113830566406 * _0x51b136, 47.767059326171875 * _0x51b136, 307.0113830566406 * _0x51b136, 27.767059326171875 * _0x51b136), _0x4da8b7['bezierCurveTo'](310.0113830566406 * _0x51b136, 15.767059326171875 * _0x51b136, 317.0113830566406 * _0x51b136, 12.767059326171875 * _0x51b136, 323.0113830566406 * _0x51b136, 13.767059326171875 * _0x51b136), _0x4da8b7['closePath'](), fill_path(_0x4da8b7, _0x3d257f[0x3], _0x3d257f[0x2], 0xc * _0x51b136), _0x4da8b7['globalAlpha'] = _0x15d554 ? 0.5 : 0x1, _0x4da8b7['translate'](0x0, 0x5 * _0x51b136), _0x4da8b7['beginPath'](), _0x4da8b7['lineCap'] = 'round', _0x4da8b7['lineJoin'] = 'round', _0x4da8b7['moveTo'](403.0113830566406 * _0x51b136, 89.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](413.0113830566406 * _0x51b136, 76.76705932617188 * _0x51b136, 418.0113830566406 * _0x51b136, 79.76705932617188 * _0x51b136, 428.0113830566406 * _0x51b136, 92.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](435.0113830566406 * _0x51b136, 99.76705932617188 * _0x51b136, 435.0113830566406 * _0x51b136, 99.76705932617188 * _0x51b136, 442.0113830566406 * _0x51b136, 106.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](450.0113830566406 * _0x51b136, 116.76705932617188 * _0x51b136, 445.0113830566406 * _0x51b136, 119.76705932617188 * _0x51b136, 433.0113830566406 * _0x51b136, 128.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](408.0113830566406 * _0x51b136, 146.26705932617188 * _0x51b136, 408.0113830566406 * _0x51b136, 146.26705932617188 * _0x51b136, 383.0113830566406 * _0x51b136, 163.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](376.0113830566406 * _0x51b136, 166.76705932617188 * _0x51b136, 377.0113830566406 * _0x51b136, 165.76705932617188 * _0x51b136, 368.0113830566406 * _0x51b136, 156.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](359.0113830566406 * _0x51b136, 144.76705932617188 * _0x51b136, 359.0113830566406 * _0x51b136, 142.76705932617188 * _0x51b136, 367.0113830566406 * _0x51b136, 133.76705932617188 * _0x51b136), _0x4da8b7['closePath'](), fill_path(_0x4da8b7, _0x3d257f[0x0], _0x3d257f[0x0], 0xc * _0x51b136), _0x4da8b7['globalAlpha'] = 0x1, _0x4da8b7['translate'](0x0, -0x5 * _0x51b136), _0x4da8b7['beginPath'](), _0x4da8b7['lineCap'] = 'round', _0x4da8b7['lineJoin'] = 'round', _0x4da8b7['moveTo'](403.0113830566406 * _0x51b136, 89.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](413.0113830566406 * _0x51b136, 76.76705932617188 * _0x51b136, 418.0113830566406 * _0x51b136, 79.76705932617188 * _0x51b136, 428.0113830566406 * _0x51b136, 92.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](435.0113830566406 * _0x51b136, 99.76705932617188 * _0x51b136, 435.0113830566406 * _0x51b136, 99.76705932617188 * _0x51b136, 442.0113830566406 * _0x51b136, 106.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](450.0113830566406 * _0x51b136, 116.76705932617188 * _0x51b136, 445.0113830566406 * _0x51b136, 119.76705932617188 * _0x51b136, 433.0113830566406 * _0x51b136, 128.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](408.0113830566406 * _0x51b136, 146.26705932617188 * _0x51b136, 408.0113830566406 * _0x51b136, 146.26705932617188 * _0x51b136, 383.0113830566406 * _0x51b136, 163.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](376.0113830566406 * _0x51b136, 166.76705932617188 * _0x51b136, 377.0113830566406 * _0x51b136, 165.76705932617188 * _0x51b136, 368.0113830566406 * _0x51b136, 156.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](359.0113830566406 * _0x51b136, 144.76705932617188 * _0x51b136, 359.0113830566406 * _0x51b136, 142.76705932617188 * _0x51b136, 367.0113830566406 * _0x51b136, 133.76705932617188 * _0x51b136), _0x4da8b7['closePath'](), fill_path(_0x4da8b7, _0x3d257f[0x4], _0x3d257f[0x2], 0xc * _0x51b136), _0x4da8b7['globalAlpha'] = _0x15d554 ? 0.5 : 0x1, _0x4da8b7['translate'](0x0, 0x5 * _0x51b136), _0x4da8b7['beginPath'](), _0x4da8b7['lineCap'] = 'round', _0x4da8b7['lineJoin'] = 'round', _0x4da8b7['moveTo'](228.01138305664062 * _0x51b136, 1.767059326171875 * _0x51b136), _0x4da8b7['bezierCurveTo'](246.51138305664062 * _0x51b136, 3.267059326171875 * _0x51b136, 246.51138305664062 * _0x51b136, 3.267059326171875 * _0x51b136, 265.0113830566406 * _0x51b136, 4.767059326171875 * _0x51b136), _0x4da8b7['bezierCurveTo'](273.0113830566406 * _0x51b136, 5.767059326171875 * _0x51b136, 275.0113830566406 * _0x51b136, 11.767059326171875 * _0x51b136, 270.0113830566406 * _0x51b136, 27.767059326171875 * _0x51b136), _0x4da8b7['bezierCurveTo'](264.0113830566406 * _0x51b136, 54.267059326171875 * _0x51b136, 264.0113830566406 * _0x51b136, 54.267059326171875 * _0x51b136, 258.0113830566406 * _0x51b136, 80.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](256.0113830566406 * _0x51b136, 92.76705932617188 * _0x51b136, 256.0113830566406 * _0x51b136, 94.76705932617188 * _0x51b136, 242.01138305664062 * _0x51b136, 93.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](226.01138305664062 * _0x51b136, 95.76705932617188 * _0x51b136, 225.01138305664062 * _0x51b136, 91.76705932617188 * _0x51b136, 225.01138305664062 * _0x51b136, 80.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](223.51138305664062 * _0x51b136, 50.267059326171875 * _0x51b136, 223.51138305664062 * _0x51b136, 50.267059326171875 * _0x51b136, 222.01138305664062 * _0x51b136, 19.767059326171875 * _0x51b136), _0x4da8b7['bezierCurveTo'](219.01138305664062 * _0x51b136, 8.767059326171875 * _0x51b136, 224.01138305664062 * _0x51b136, 4.767059326171875 * _0x51b136, 227.01138305664062 * _0x51b136, 2.767059326171875 * _0x51b136), _0x4da8b7['closePath'](), fill_path(_0x4da8b7, _0x3d257f[0x0], _0x3d257f[0x0], 0xc * _0x51b136), _0x4da8b7['globalAlpha'] = 0x1, _0x4da8b7['translate'](0x0, -0x5 * _0x51b136), _0x4da8b7['beginPath'](), _0x4da8b7['lineCap'] = 'round', _0x4da8b7['lineJoin'] = 'round', _0x4da8b7['moveTo'](228.01138305664062 * _0x51b136, 1.767059326171875 * _0x51b136), _0x4da8b7['bezierCurveTo'](246.51138305664062 * _0x51b136, 3.267059326171875 * _0x51b136, 246.51138305664062 * _0x51b136, 3.267059326171875 * _0x51b136, 265.0113830566406 * _0x51b136, 4.767059326171875 * _0x51b136), _0x4da8b7['bezierCurveTo'](273.0113830566406 * _0x51b136, 5.767059326171875 * _0x51b136, 275.0113830566406 * _0x51b136, 11.767059326171875 * _0x51b136, 270.0113830566406 * _0x51b136, 27.767059326171875 * _0x51b136), _0x4da8b7['bezierCurveTo'](264.0113830566406 * _0x51b136, 54.267059326171875 * _0x51b136, 264.0113830566406 * _0x51b136, 54.267059326171875 * _0x51b136, 258.0113830566406 * _0x51b136, 80.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](256.0113830566406 * _0x51b136, 92.76705932617188 * _0x51b136, 256.0113830566406 * _0x51b136, 94.76705932617188 * _0x51b136, 242.01138305664062 * _0x51b136, 93.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](226.01138305664062 * _0x51b136, 95.76705932617188 * _0x51b136, 225.01138305664062 * _0x51b136, 91.76705932617188 * _0x51b136, 225.01138305664062 * _0x51b136, 80.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](223.51138305664062 * _0x51b136, 50.267059326171875 * _0x51b136, 223.51138305664062 * _0x51b136, 50.267059326171875 * _0x51b136, 222.01138305664062 * _0x51b136, 19.767059326171875 * _0x51b136), _0x4da8b7['bezierCurveTo'](219.01138305664062 * _0x51b136, 8.767059326171875 * _0x51b136, 224.01138305664062 * _0x51b136, 4.767059326171875 * _0x51b136, 227.01138305664062 * _0x51b136, 2.767059326171875 * _0x51b136), _0x4da8b7['closePath'](), fill_path(_0x4da8b7, _0x3d257f[0x4], _0x3d257f[0x2], 0xc * _0x51b136), _0x4da8b7['globalAlpha'] = _0x15d554 ? 0.5 : 0x1, _0x4da8b7['translate'](0x0, 0x5 * _0x51b136), _0x4da8b7['beginPath'](), _0x4da8b7['lineCap'] = 'round', _0x4da8b7['lineJoin'] = 'round', _0x4da8b7['moveTo'](142.01138305664062 * _0x51b136, 25.767059326171875 * _0x51b136), _0x4da8b7['bezierCurveTo'](158.51138305664062 * _0x51b136, 19.767059326171875 * _0x51b136, 158.51138305664062 * _0x51b136, 19.767059326171875 * _0x51b136, 175.01138305664062 * _0x51b136, 13.767059326171875 * _0x51b136), _0x4da8b7['bezierCurveTo'](188.01138305664062 * _0x51b136, 11.767059326171875 * _0x51b136, 188.01138305664062 * _0x51b136, 16.767059326171875 * _0x51b136, 191.01138305664062 * _0x51b136, 29.767059326171875 * _0x51b136), _0x4da8b7['bezierCurveTo'](197.01138305664062 * _0x51b136, 60.267059326171875 * _0x51b136, 197.01138305664062 * _0x51b136, 60.267059326171875 * _0x51b136, 203.01138305664062 * _0x51b136, 90.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](206.01138305664062 * _0x51b136, 102.76705932617188 * _0x51b136, 196.01138305664062 * _0x51b136, 99.76705932617188 * _0x51b136, 181.01138305664062 * _0x51b136, 105.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](175.01138305664062 * _0x51b136, 108.76705932617188 * _0x51b136, 172.01138305664062 * _0x51b136, 104.76705932617188 * _0x51b136, 164.01138305664062 * _0x51b136, 84.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](152.51138305664062 * _0x51b136, 63.267059326171875 * _0x51b136, 152.51138305664062 * _0x51b136, 63.267059326171875 * _0x51b136, 141.01138305664062 * _0x51b136, 41.767059326171875 * _0x51b136), _0x4da8b7['bezierCurveTo'](138.01138305664062 * _0x51b136, 35.767059326171875 * _0x51b136, 138.01138305664062 * _0x51b136, 29.767059326171875 * _0x51b136, 141.01138305664062 * _0x51b136, 27.767059326171875 * _0x51b136), _0x4da8b7['closePath'](), fill_path(_0x4da8b7, _0x3d257f[0x0], _0x3d257f[0x0], 0xc * _0x51b136), _0x4da8b7['globalAlpha'] = 0x1, _0x4da8b7['translate'](0x0, -0x5 * _0x51b136), _0x4da8b7['beginPath'](), _0x4da8b7['lineCap'] = 'round', _0x4da8b7['lineJoin'] = 'round', _0x4da8b7['moveTo'](142.01138305664062 * _0x51b136, 25.767059326171875 * _0x51b136), _0x4da8b7['bezierCurveTo'](158.51138305664062 * _0x51b136, 19.767059326171875 * _0x51b136, 158.51138305664062 * _0x51b136, 19.767059326171875 * _0x51b136, 175.01138305664062 * _0x51b136, 13.767059326171875 * _0x51b136), _0x4da8b7['bezierCurveTo'](188.01138305664062 * _0x51b136, 11.767059326171875 * _0x51b136, 188.01138305664062 * _0x51b136, 16.767059326171875 * _0x51b136, 191.01138305664062 * _0x51b136, 29.767059326171875 * _0x51b136), _0x4da8b7['bezierCurveTo'](197.01138305664062 * _0x51b136, 60.267059326171875 * _0x51b136, 197.01138305664062 * _0x51b136, 60.267059326171875 * _0x51b136, 203.01138305664062 * _0x51b136, 90.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](206.01138305664062 * _0x51b136, 102.76705932617188 * _0x51b136, 196.01138305664062 * _0x51b136, 99.76705932617188 * _0x51b136, 181.01138305664062 * _0x51b136, 105.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](175.01138305664062 * _0x51b136, 108.76705932617188 * _0x51b136, 172.01138305664062 * _0x51b136, 104.76705932617188 * _0x51b136, 164.01138305664062 * _0x51b136, 84.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](152.51138305664062 * _0x51b136, 63.267059326171875 * _0x51b136, 152.51138305664062 * _0x51b136, 63.267059326171875 * _0x51b136, 141.01138305664062 * _0x51b136, 41.767059326171875 * _0x51b136), _0x4da8b7['bezierCurveTo'](138.01138305664062 * _0x51b136, 35.767059326171875 * _0x51b136, 138.01138305664062 * _0x51b136, 29.767059326171875 * _0x51b136, 141.01138305664062 * _0x51b136, 27.767059326171875 * _0x51b136), _0x4da8b7['closePath'](), fill_path(_0x4da8b7, _0x3d257f[0x4], _0x3d257f[0x2], 0xc * _0x51b136), _0x4da8b7['globalAlpha'] = _0x15d554 ? 0.5 : 0x1, _0x4da8b7['translate'](0x0, 0x5 * _0x51b136), _0x4da8b7['beginPath'](), _0x4da8b7['lineCap'] = 'round', _0x4da8b7['lineJoin'] = 'round', _0x4da8b7['moveTo'](70.01138305664062 * _0x51b136, 76.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](83.01138305664062 * _0x51b136, 64.26705932617188 * _0x51b136, 83.01138305664062 * _0x51b136, 64.26705932617188 * _0x51b136, 96.01138305664062 * _0x51b136, 51.767059326171875 * _0x51b136), _0x4da8b7['bezierCurveTo'](104.01138305664062 * _0x51b136, 44.767059326171875 * _0x51b136, 110.01138305664062 * _0x51b136, 51.767059326171875 * _0x51b136, 119.01138305664062 * _0x51b136, 66.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](135.01138305664062 * _0x51b136, 88.26705932617188 * _0x51b136, 135.01138305664062 * _0x51b136, 88.26705932617188 * _0x51b136, 151.01138305664062 * _0x51b136, 109.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](157.01138305664062 * _0x51b136, 119.76705932617188 * _0x51b136, 153.01138305664062 * _0x51b136, 122.76705932617188 * _0x51b136, 147.01138305664062 * _0x51b136, 129.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](138.01138305664062 * _0x51b136, 140.76705932617188 * _0x51b136, 136.01138305664062 * _0x51b136, 140.76705932617188 * _0x51b136, 122.01138305664062 * _0x51b136, 127.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](99.51138305664062 * _0x51b136, 110.26705932617188 * _0x51b136, 99.51138305664062 * _0x51b136, 110.26705932617188 * _0x51b136, 77.01138305664062 * _0x51b136, 92.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](66.01138305664062 * _0x51b136, 83.76705932617188 * _0x51b136, 66.01138305664062 * _0x51b136, 82.76705932617188 * _0x51b136, 69.01138305664062 * _0x51b136, 78.76705932617188 * _0x51b136), _0x4da8b7['closePath'](), fill_path(_0x4da8b7, _0x3d257f[0x0], _0x3d257f[0x0], 0xc * _0x51b136), _0x4da8b7['globalAlpha'] = 0x1, _0x4da8b7['translate'](0x0, -0x5 * _0x51b136), _0x4da8b7['beginPath'](), _0x4da8b7['lineCap'] = 'round', _0x4da8b7['lineJoin'] = 'round', _0x4da8b7['moveTo'](70.01138305664062 * _0x51b136, 76.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](83.01138305664062 * _0x51b136, 64.26705932617188 * _0x51b136, 83.01138305664062 * _0x51b136, 64.26705932617188 * _0x51b136, 96.01138305664062 * _0x51b136, 51.767059326171875 * _0x51b136), _0x4da8b7['bezierCurveTo'](104.01138305664062 * _0x51b136, 44.767059326171875 * _0x51b136, 110.01138305664062 * _0x51b136, 51.767059326171875 * _0x51b136, 119.01138305664062 * _0x51b136, 66.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](135.01138305664062 * _0x51b136, 88.26705932617188 * _0x51b136, 135.01138305664062 * _0x51b136, 88.26705932617188 * _0x51b136, 151.01138305664062 * _0x51b136, 109.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](157.01138305664062 * _0x51b136, 119.76705932617188 * _0x51b136, 153.01138305664062 * _0x51b136, 122.76705932617188 * _0x51b136, 147.01138305664062 * _0x51b136, 129.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](138.01138305664062 * _0x51b136, 140.76705932617188 * _0x51b136, 136.01138305664062 * _0x51b136, 140.76705932617188 * _0x51b136, 122.01138305664062 * _0x51b136, 127.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](99.51138305664062 * _0x51b136, 110.26705932617188 * _0x51b136, 99.51138305664062 * _0x51b136, 110.26705932617188 * _0x51b136, 77.01138305664062 * _0x51b136, 92.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](66.01138305664062 * _0x51b136, 83.76705932617188 * _0x51b136, 66.01138305664062 * _0x51b136, 82.76705932617188 * _0x51b136, 69.01138305664062 * _0x51b136, 78.76705932617188 * _0x51b136), _0x4da8b7['closePath'](), fill_path(_0x4da8b7, _0x3d257f[0x4], _0x3d257f[0x2], 0xc * _0x51b136), _0x4da8b7['globalAlpha'] = _0x15d554 ? 0.5 : 0x1, _0x4da8b7['translate'](0x0, 0x5 * _0x51b136), _0x4da8b7['beginPath'](), _0x4da8b7['lineCap'] = 'round', _0x4da8b7['lineJoin'] = 'round', _0x4da8b7['moveTo'](33.011383056640625 * _0x51b136, 126.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](22.011383056640625 * _0x51b136, 149.76705932617188 * _0x51b136, 22.011383056640625 * _0x51b136, 149.76705932617188 * _0x51b136, 11.011383056640625 * _0x51b136, 172.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](7.011383056640625 * _0x51b136, 184.76705932617188 * _0x51b136, 11.011383056640625 * _0x51b136, 189.76705932617188 * _0x51b136, 36.011383056640625 * _0x51b136, 195.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](61.011383056640625 * _0x51b136, 202.26705932617188 * _0x51b136, 61.011383056640625 * _0x51b136, 202.26705932617188 * _0x51b136, 86.01138305664062 * _0x51b136, 208.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](100.01138305664062 * _0x51b136, 214.76705932617188 * _0x51b136, 102.01138305664062 * _0x51b136, 203.76705932617188 * _0x51b136, 109.01138305664062 * _0x51b136, 189.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](117.01138305664062 * _0x51b136, 171.76705932617188 * _0x51b136, 116.01138305664062 * _0x51b136, 166.76705932617188 * _0x51b136, 97.01138305664062 * _0x51b136, 156.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](74.01138305664062 * _0x51b136, 140.76705932617188 * _0x51b136, 74.01138305664062 * _0x51b136, 140.76705932617188 * _0x51b136, 51.011383056640625 * _0x51b136, 124.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](42.011383056640625 * _0x51b136, 118.76705932617188 * _0x51b136, 37.011383056640625 * _0x51b136, 119.76705932617188 * _0x51b136, 33.011383056640625 * _0x51b136, 126.76705932617188 * _0x51b136), _0x4da8b7['closePath'](), fill_path(_0x4da8b7, _0x3d257f[0x0], _0x3d257f[0x0], 0xc * _0x51b136), _0x4da8b7['globalAlpha'] = 0x1, _0x4da8b7['translate'](0x0, -0x5 * _0x51b136), _0x4da8b7['beginPath'](), _0x4da8b7['lineCap'] = 'round', _0x4da8b7['lineJoin'] = 'round', _0x4da8b7['moveTo'](33.011383056640625 * _0x51b136, 126.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](22.011383056640625 * _0x51b136, 149.76705932617188 * _0x51b136, 22.011383056640625 * _0x51b136, 149.76705932617188 * _0x51b136, 11.011383056640625 * _0x51b136, 172.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](7.011383056640625 * _0x51b136, 184.76705932617188 * _0x51b136, 11.011383056640625 * _0x51b136, 189.76705932617188 * _0x51b136, 36.011383056640625 * _0x51b136, 195.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](61.011383056640625 * _0x51b136, 202.26705932617188 * _0x51b136, 61.011383056640625 * _0x51b136, 202.26705932617188 * _0x51b136, 86.01138305664062 * _0x51b136, 208.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](100.01138305664062 * _0x51b136, 214.76705932617188 * _0x51b136, 102.01138305664062 * _0x51b136, 203.76705932617188 * _0x51b136, 109.01138305664062 * _0x51b136, 189.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](117.01138305664062 * _0x51b136, 171.76705932617188 * _0x51b136, 116.01138305664062 * _0x51b136, 166.76705932617188 * _0x51b136, 97.01138305664062 * _0x51b136, 156.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](74.01138305664062 * _0x51b136, 140.76705932617188 * _0x51b136, 74.01138305664062 * _0x51b136, 140.76705932617188 * _0x51b136, 51.011383056640625 * _0x51b136, 124.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](42.011383056640625 * _0x51b136, 118.76705932617188 * _0x51b136, 37.011383056640625 * _0x51b136, 119.76705932617188 * _0x51b136, 33.011383056640625 * _0x51b136, 126.76705932617188 * _0x51b136), _0x4da8b7['closePath'](), fill_path(_0x4da8b7, _0x3d257f[0x3], _0x3d257f[0x2], 0xc * _0x51b136), _0x4da8b7['globalAlpha'] = _0x15d554 ? 0.5 : 0x1, _0x4da8b7['translate'](0x0, 0x5 * _0x51b136), _0x4da8b7['beginPath'](), _0x4da8b7['lineCap'] = 'round', _0x4da8b7['lineJoin'] = 'round', _0x4da8b7['moveTo'](13.011383056640625 * _0x51b136, 229.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](45.511383056640625 * _0x51b136, 233.76705932617188 * _0x51b136, 45.511383056640625 * _0x51b136, 233.76705932617188 * _0x51b136, 78.01138305664062 * _0x51b136, 237.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](92.01138305664062 * _0x51b136, 239.76705932617188 * _0x51b136, 92.01138305664062 * _0x51b136, 246.76705932617188 * _0x51b136, 91.01138305664062 * _0x51b136, 257.7670593261719 * _0x51b136), _0x4da8b7['bezierCurveTo'](92.01138305664062 * _0x51b136, 275.7670593261719 * _0x51b136, 91.01138305664062 * _0x51b136, 274.7670593261719 * _0x51b136, 68.01138305664062 * _0x51b136, 276.7670593261719 * _0x51b136), _0x4da8b7['bezierCurveTo'](42.511383056640625 * _0x51b136, 279.7670593261719 * _0x51b136, 42.511383056640625 * _0x51b136, 279.7670593261719 * _0x51b136, 17.011383056640625 * _0x51b136, 282.7670593261719 * _0x51b136), _0x4da8b7['bezierCurveTo'](2.011383056640625 * _0x51b136, 282.7670593261719 * _0x51b136, 3.011383056640625 * _0x51b136, 276.7670593261719 * _0x51b136, 2.011383056640625 * _0x51b136, 260.7670593261719 * _0x51b136), _0x4da8b7['bezierCurveTo'](2.011383056640625 * _0x51b136, 231.76705932617188 * _0x51b136, 4.011383056640625 * _0x51b136, 232.76705932617188 * _0x51b136, 11.011383056640625 * _0x51b136, 230.76705932617188 * _0x51b136), _0x4da8b7['closePath'](), fill_path(_0x4da8b7, _0x3d257f[0x0], _0x3d257f[0x0], 0xc * _0x51b136), _0x4da8b7['globalAlpha'] = 0x1, _0x4da8b7['translate'](0x0, -0x5 * _0x51b136), _0x4da8b7['beginPath'](), _0x4da8b7['lineCap'] = 'round', _0x4da8b7['lineJoin'] = 'round', _0x4da8b7['moveTo'](13.011383056640625 * _0x51b136, 229.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](45.511383056640625 * _0x51b136, 233.76705932617188 * _0x51b136, 45.511383056640625 * _0x51b136, 233.76705932617188 * _0x51b136, 78.01138305664062 * _0x51b136, 237.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](92.01138305664062 * _0x51b136, 239.76705932617188 * _0x51b136, 92.01138305664062 * _0x51b136, 246.76705932617188 * _0x51b136, 91.01138305664062 * _0x51b136, 257.7670593261719 * _0x51b136), _0x4da8b7['bezierCurveTo'](92.01138305664062 * _0x51b136, 275.7670593261719 * _0x51b136, 91.01138305664062 * _0x51b136, 274.7670593261719 * _0x51b136, 68.01138305664062 * _0x51b136, 276.7670593261719 * _0x51b136), _0x4da8b7['bezierCurveTo'](42.511383056640625 * _0x51b136, 279.7670593261719 * _0x51b136, 42.511383056640625 * _0x51b136, 279.7670593261719 * _0x51b136, 17.011383056640625 * _0x51b136, 282.7670593261719 * _0x51b136), _0x4da8b7['bezierCurveTo'](2.011383056640625 * _0x51b136, 282.7670593261719 * _0x51b136, 3.011383056640625 * _0x51b136, 276.7670593261719 * _0x51b136, 2.011383056640625 * _0x51b136, 260.7670593261719 * _0x51b136), _0x4da8b7['bezierCurveTo'](2.011383056640625 * _0x51b136, 231.76705932617188 * _0x51b136, 4.011383056640625 * _0x51b136, 232.76705932617188 * _0x51b136, 11.011383056640625 * _0x51b136, 230.76705932617188 * _0x51b136), _0x4da8b7['closePath'](), fill_path(_0x4da8b7, _0x3d257f[0x4], _0x3d257f[0x2], 0xc * _0x51b136), _0x4da8b7['globalAlpha'] = _0x15d554 ? 0.5 : 0x1, _0x4da8b7['translate'](0x0, 0x5 * _0x51b136), _0x4da8b7['beginPath'](), _0x4da8b7['lineCap'] = 'round', _0x4da8b7['lineJoin'] = 'round', _0x4da8b7['moveTo'](97.01138305664062 * _0x51b136, 329.7670593261719 * _0x51b136), _0x4da8b7['bezierCurveTo'](68.51138305664062 * _0x51b136, 343.7670593261719 * _0x51b136, 68.51138305664062 * _0x51b136, 343.7670593261719 * _0x51b136, 40.011383056640625 * _0x51b136, 357.7670593261719 * _0x51b136), _0x4da8b7['bezierCurveTo'](29.011383056640625 * _0x51b136, 360.7670593261719 * _0x51b136, 27.011383056640625 * _0x51b136, 361.7670593261719 * _0x51b136, 20.011383056640625 * _0x51b136, 346.7670593261719 * _0x51b136), _0x4da8b7['bezierCurveTo'](16.511383056640625 * _0x51b136, 336.2670593261719 * _0x51b136, 16.511383056640625 * _0x51b136, 336.2670593261719 * _0x51b136, 13.011383056640625 * _0x51b136, 325.7670593261719 * _0x51b136), _0x4da8b7['bezierCurveTo'](10.011383056640625 * _0x51b136, 307.7670593261719 * _0x51b136, 18.011383056640625 * _0x51b136, 312.7670593261719 * _0x51b136, 34.011383056640625 * _0x51b136, 306.7670593261719 * _0x51b136), _0x4da8b7['bezierCurveTo'](59.511383056640625 * _0x51b136, 302.2670593261719 * _0x51b136, 59.511383056640625 * _0x51b136, 302.2670593261719 * _0x51b136, 85.01138305664062 * _0x51b136, 297.7670593261719 * _0x51b136), _0x4da8b7['bezierCurveTo'](97.01138305664062 * _0x51b136, 294.7670593261719 * _0x51b136, 100.01138305664062 * _0x51b136, 297.7670593261719 * _0x51b136, 100.01138305664062 * _0x51b136, 307.7670593261719 * _0x51b136), _0x4da8b7['bezierCurveTo'](105.01138305664062 * _0x51b136, 326.7670593261719 * _0x51b136, 103.01138305664062 * _0x51b136, 325.7670593261719 * _0x51b136, 97.01138305664062 * _0x51b136, 329.7670593261719 * _0x51b136), _0x4da8b7['closePath'](), fill_path(_0x4da8b7, _0x3d257f[0x0], _0x3d257f[0x0], 0xc * _0x51b136), _0x4da8b7['globalAlpha'] = 0x1, _0x4da8b7['translate'](0x0, -0x5 * _0x51b136), _0x4da8b7['beginPath'](), _0x4da8b7['lineCap'] = 'round', _0x4da8b7['lineJoin'] = 'round', _0x4da8b7['moveTo'](97.01138305664062 * _0x51b136, 329.7670593261719 * _0x51b136), _0x4da8b7['bezierCurveTo'](68.51138305664062 * _0x51b136, 343.7670593261719 * _0x51b136, 68.51138305664062 * _0x51b136, 343.7670593261719 * _0x51b136, 40.011383056640625 * _0x51b136, 357.7670593261719 * _0x51b136), _0x4da8b7['bezierCurveTo'](29.011383056640625 * _0x51b136, 360.7670593261719 * _0x51b136, 27.011383056640625 * _0x51b136, 361.7670593261719 * _0x51b136, 20.011383056640625 * _0x51b136, 346.7670593261719 * _0x51b136), _0x4da8b7['bezierCurveTo'](16.511383056640625 * _0x51b136, 336.2670593261719 * _0x51b136, 16.511383056640625 * _0x51b136, 336.2670593261719 * _0x51b136, 13.011383056640625 * _0x51b136, 325.7670593261719 * _0x51b136), _0x4da8b7['bezierCurveTo'](10.011383056640625 * _0x51b136, 307.7670593261719 * _0x51b136, 18.011383056640625 * _0x51b136, 312.7670593261719 * _0x51b136, 34.011383056640625 * _0x51b136, 306.7670593261719 * _0x51b136), _0x4da8b7['bezierCurveTo'](59.511383056640625 * _0x51b136, 302.2670593261719 * _0x51b136, 59.511383056640625 * _0x51b136, 302.2670593261719 * _0x51b136, 85.01138305664062 * _0x51b136, 297.7670593261719 * _0x51b136), _0x4da8b7['bezierCurveTo'](97.01138305664062 * _0x51b136, 294.7670593261719 * _0x51b136, 100.01138305664062 * _0x51b136, 297.7670593261719 * _0x51b136, 100.01138305664062 * _0x51b136, 307.7670593261719 * _0x51b136), _0x4da8b7['bezierCurveTo'](105.01138305664062 * _0x51b136, 326.7670593261719 * _0x51b136, 103.01138305664062 * _0x51b136, 325.7670593261719 * _0x51b136, 97.01138305664062 * _0x51b136, 329.7670593261719 * _0x51b136), _0x4da8b7['closePath'](), fill_path(_0x4da8b7, _0x3d257f[0x4], _0x3d257f[0x2], 0xc * _0x51b136), _0x4da8b7['globalAlpha'] = _0x15d554 ? 0.5 : 0x1, _0x4da8b7['translate'](0x0, 0x5 * _0x51b136), _0x4da8b7['beginPath'](), _0x4da8b7['lineCap'] = 'round', _0x4da8b7['lineJoin'] = 'round', _0x4da8b7['moveTo'](394.0113830566406 * _0x51b136, 181.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](426.5113830566406 * _0x51b136, 166.76705932617188 * _0x51b136, 426.5113830566406 * _0x51b136, 166.76705932617188 * _0x51b136, 459.0113830566406 * _0x51b136, 151.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](469.0113830566406 * _0x51b136, 152.76705932617188 * _0x51b136, 469.0113830566406 * _0x51b136, 155.76705932617188 * _0x51b136, 472.0113830566406 * _0x51b136, 165.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](476.0113830566406 * _0x51b136, 177.26705932617188 * _0x51b136, 476.0113830566406 * _0x51b136, 177.26705932617188 * _0x51b136, 480.0113830566406 * _0x51b136, 188.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](483.0113830566406 * _0x51b136, 199.76705932617188 * _0x51b136, 480.0113830566406 * _0x51b136, 200.76705932617188 * _0x51b136, 460.0113830566406 * _0x51b136, 205.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](433.5113830566406 * _0x51b136, 210.26705932617188 * _0x51b136, 433.5113830566406 * _0x51b136, 210.26705932617188 * _0x51b136, 407.0113830566406 * _0x51b136, 214.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](395.0113830566406 * _0x51b136, 218.76705932617188 * _0x51b136, 397.0113830566406 * _0x51b136, 211.76705932617188 * _0x51b136, 393.0113830566406 * _0x51b136, 202.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](387.0113830566406 * _0x51b136, 188.76705932617188 * _0x51b136, 387.0113830566406 * _0x51b136, 187.76705932617188 * _0x51b136, 394.0113830566406 * _0x51b136, 181.76705932617188 * _0x51b136), _0x4da8b7['closePath'](), fill_path(_0x4da8b7, _0x3d257f[0x0], _0x3d257f[0x0], 0xc * _0x51b136), _0x4da8b7['globalAlpha'] = 0x1, _0x4da8b7['translate'](0x0, -0x5 * _0x51b136), _0x4da8b7['beginPath'](), _0x4da8b7['lineCap'] = 'round', _0x4da8b7['lineJoin'] = 'round', _0x4da8b7['moveTo'](394.0113830566406 * _0x51b136, 181.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](426.5113830566406 * _0x51b136, 166.76705932617188 * _0x51b136, 426.5113830566406 * _0x51b136, 166.76705932617188 * _0x51b136, 459.0113830566406 * _0x51b136, 151.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](469.0113830566406 * _0x51b136, 152.76705932617188 * _0x51b136, 469.0113830566406 * _0x51b136, 155.76705932617188 * _0x51b136, 472.0113830566406 * _0x51b136, 165.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](476.0113830566406 * _0x51b136, 177.26705932617188 * _0x51b136, 476.0113830566406 * _0x51b136, 177.26705932617188 * _0x51b136, 480.0113830566406 * _0x51b136, 188.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](483.0113830566406 * _0x51b136, 199.76705932617188 * _0x51b136, 480.0113830566406 * _0x51b136, 200.76705932617188 * _0x51b136, 460.0113830566406 * _0x51b136, 205.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](433.5113830566406 * _0x51b136, 210.26705932617188 * _0x51b136, 433.5113830566406 * _0x51b136, 210.26705932617188 * _0x51b136, 407.0113830566406 * _0x51b136, 214.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](395.0113830566406 * _0x51b136, 218.76705932617188 * _0x51b136, 397.0113830566406 * _0x51b136, 211.76705932617188 * _0x51b136, 393.0113830566406 * _0x51b136, 202.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](387.0113830566406 * _0x51b136, 188.76705932617188 * _0x51b136, 387.0113830566406 * _0x51b136, 187.76705932617188 * _0x51b136, 394.0113830566406 * _0x51b136, 181.76705932617188 * _0x51b136), _0x4da8b7['closePath'](), fill_path(_0x4da8b7, _0x3d257f[0x4], _0x3d257f[0x2], 0xc * _0x51b136), _0x4da8b7['globalAlpha'] = _0x15d554 ? 0.5 : 0x1, _0x4da8b7['translate'](0x0, 0x5 * _0x51b136), _0x4da8b7['beginPath'](), _0x4da8b7['lineCap'] = 'round', _0x4da8b7['lineJoin'] = 'round', _0x4da8b7['moveTo'](411.0113830566406 * _0x51b136, 234.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](446.0113830566406 * _0x51b136, 233.26705932617188 * _0x51b136, 446.0113830566406 * _0x51b136, 233.26705932617188 * _0x51b136, 481.0113830566406 * _0x51b136, 231.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](491.0113830566406 * _0x51b136, 232.76705932617188 * _0x51b136, 493.0113830566406 * _0x51b136, 239.76705932617188 * _0x51b136, 491.0113830566406 * _0x51b136, 251.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](490.0113830566406 * _0x51b136, 263.7670593261719 * _0x51b136, 490.0113830566406 * _0x51b136, 263.7670593261719 * _0x51b136, 489.0113830566406 * _0x51b136, 275.7670593261719 * _0x51b136), _0x4da8b7['bezierCurveTo'](487.0113830566406 * _0x51b136, 283.7670593261719 * _0x51b136, 483.0113830566406 * _0x51b136, 284.7670593261719 * _0x51b136, 464.0113830566406 * _0x51b136, 280.7670593261719 * _0x51b136), _0x4da8b7['bezierCurveTo'](437.0113830566406 * _0x51b136, 273.7670593261719 * _0x51b136, 437.0113830566406 * _0x51b136, 273.7670593261719 * _0x51b136, 410.0113830566406 * _0x51b136, 266.7670593261719 * _0x51b136), _0x4da8b7['bezierCurveTo'](400.0113830566406 * _0x51b136, 261.7670593261719 * _0x51b136, 401.0113830566406 * _0x51b136, 259.7670593261719 * _0x51b136, 402.0113830566406 * _0x51b136, 249.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](401.0113830566406 * _0x51b136, 237.76705932617188 * _0x51b136, 403.0113830566406 * _0x51b136, 235.76705932617188 * _0x51b136, 408.0113830566406 * _0x51b136, 234.76705932617188 * _0x51b136), _0x4da8b7['closePath'](), fill_path(_0x4da8b7, _0x3d257f[0x0], _0x3d257f[0x0], 0xc * _0x51b136), _0x4da8b7['globalAlpha'] = 0x1, _0x4da8b7['translate'](0x0, -0x5 * _0x51b136), _0x4da8b7['beginPath'](), _0x4da8b7['lineCap'] = 'round', _0x4da8b7['lineJoin'] = 'round', _0x4da8b7['moveTo'](411.0113830566406 * _0x51b136, 234.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](446.0113830566406 * _0x51b136, 233.26705932617188 * _0x51b136, 446.0113830566406 * _0x51b136, 233.26705932617188 * _0x51b136, 481.0113830566406 * _0x51b136, 231.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](491.0113830566406 * _0x51b136, 232.76705932617188 * _0x51b136, 493.0113830566406 * _0x51b136, 239.76705932617188 * _0x51b136, 491.0113830566406 * _0x51b136, 251.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](490.0113830566406 * _0x51b136, 263.7670593261719 * _0x51b136, 490.0113830566406 * _0x51b136, 263.7670593261719 * _0x51b136, 489.0113830566406 * _0x51b136, 275.7670593261719 * _0x51b136), _0x4da8b7['bezierCurveTo'](487.0113830566406 * _0x51b136, 283.7670593261719 * _0x51b136, 483.0113830566406 * _0x51b136, 284.7670593261719 * _0x51b136, 464.0113830566406 * _0x51b136, 280.7670593261719 * _0x51b136), _0x4da8b7['bezierCurveTo'](437.0113830566406 * _0x51b136, 273.7670593261719 * _0x51b136, 437.0113830566406 * _0x51b136, 273.7670593261719 * _0x51b136, 410.0113830566406 * _0x51b136, 266.7670593261719 * _0x51b136), _0x4da8b7['bezierCurveTo'](400.0113830566406 * _0x51b136, 261.7670593261719 * _0x51b136, 401.0113830566406 * _0x51b136, 259.7670593261719 * _0x51b136, 402.0113830566406 * _0x51b136, 249.76705932617188 * _0x51b136), _0x4da8b7['bezierCurveTo'](401.0113830566406 * _0x51b136, 237.76705932617188 * _0x51b136, 403.0113830566406 * _0x51b136, 235.76705932617188 * _0x51b136, 408.0113830566406 * _0x51b136, 234.76705932617188 * _0x51b136), _0x4da8b7['closePath'](), fill_path(_0x4da8b7, _0x3d257f[0x4], _0x3d257f[0x2], 0xc * _0x51b136), _0x4da8b7['globalAlpha'] = _0x15d554 ? 0.5 : 0x1, _0x4da8b7['translate'](0x0, 0x5 * _0x51b136), _0x4da8b7['beginPath'](), _0x4da8b7['lineCap'] = 'round', _0x4da8b7['lineJoin'] = 'round', _0x4da8b7['moveTo'](400.0113830566406 * _0x51b136, 290.7670593261719 * _0x51b136), _0x4da8b7['bezierCurveTo'](437.0113830566406 * _0x51b136, 301.2670593261719 * _0x51b136, 437.0113830566406 * _0x51b136, 301.2670593261719 * _0x51b136, 474.0113830566406 * _0x51b136, 311.7670593261719 * _0x51b136), _0x4da8b7['bezierCurveTo'](484.0113830566406 * _0x51b136, 319.7670593261719 * _0x51b136, 481.0113830566406 * _0x51b136, 322.7670593261719 * _0x51b136, 474.0113830566406 * _0x51b136, 335.7670593261719 * _0x51b136), _0x4da8b7['bezierCurveTo'](465.5113830566406 * _0x51b136, 354.7670593261719 * _0x51b136, 465.5113830566406 * _0x51b136, 354.7670593261719 * _0x51b136, 457.0113830566406 * _0x51b136, 373.7670593261719 * _0x51b136), _0x4da8b7['bezierCurveTo'](449.0113830566406 * _0x51b136, 386.7670593261719 * _0x51b136, 444.0113830566406 * _0x51b136, 384.7670593261719 * _0x51b136, 427.0113830566406 * _0x51b136, 370.7670593261719 * _0x51b136), _0x4da8b7['bezierCurveTo'](403.0113830566406 * _0x51b136, 354.7670593261719 * _0x51b136, 403.0113830566406 * _0x51b136, 354.7670593261719 * _0x51b136, 379.0113830566406 * _0x51b136, 338.7670593261719 * _0x51b136), _0x4da8b7['bezierCurveTo'](371.0113830566406 * _0x51b136, 327.7670593261719 * _0x51b136, 373.0113830566406 * _0x51b136, 323.7670593261719 * _0x51b136, 377.0113830566406 * _0x51b136, 313.7670593261719 * _0x51b136), _0x4da8b7['bezierCurveTo'](386.0113830566406 * _0x51b136, 292.7670593261719 * _0x51b136, 393.0113830566406 * _0x51b136, 288.7670593261719 * _0x51b136, 398.0113830566406 * _0x51b136, 291.7670593261719 * _0x51b136), _0x4da8b7['closePath'](), fill_path(_0x4da8b7, _0x3d257f[0x0], _0x3d257f[0x0], 0xc * _0x51b136), _0x4da8b7['globalAlpha'] = 0x1, _0x4da8b7['translate'](0x0, -0x5 * _0x51b136), _0x4da8b7['beginPath'](), _0x4da8b7['lineCap'] = 'round', _0x4da8b7['lineJoin'] = 'round', _0x4da8b7['moveTo'](400.0113830566406 * _0x51b136, 290.7670593261719 * _0x51b136), _0x4da8b7['bezierCurveTo'](437.0113830566406 * _0x51b136, 301.2670593261719 * _0x51b136, 437.0113830566406 * _0x51b136, 301.2670593261719 * _0x51b136, 474.0113830566406 * _0x51b136, 311.7670593261719 * _0x51b136), _0x4da8b7['bezierCurveTo'](484.0113830566406 * _0x51b136, 319.7670593261719 * _0x51b136, 481.0113830566406 * _0x51b136, 322.7670593261719 * _0x51b136, 474.0113830566406 * _0x51b136, 335.7670593261719 * _0x51b136), _0x4da8b7['bezierCurveTo'](465.5113830566406 * _0x51b136, 354.7670593261719 * _0x51b136, 465.5113830566406 * _0x51b136, 354.7670593261719 * _0x51b136, 457.0113830566406 * _0x51b136, 373.7670593261719 * _0x51b136), _0x4da8b7['bezierCurveTo'](449.0113830566406 * _0x51b136, 386.7670593261719 * _0x51b136, 444.0113830566406 * _0x51b136, 384.7670593261719 * _0x51b136, 427.0113830566406 * _0x51b136, 370.7670593261719 * _0x51b136), _0x4da8b7['bezierCurveTo'](403.0113830566406 * _0x51b136, 354.7670593261719 * _0x51b136, 403.0113830566406 * _0x51b136, 354.7670593261719 * _0x51b136, 379.0113830566406 * _0x51b136, 338.7670593261719 * _0x51b136), _0x4da8b7['bezierCurveTo'](371.0113830566406 * _0x51b136, 327.7670593261719 * _0x51b136, 373.0113830566406 * _0x51b136, 323.7670593261719 * _0x51b136, 377.0113830566406 * _0x51b136, 313.7670593261719 * _0x51b136), _0x4da8b7['bezierCurveTo'](386.0113830566406 * _0x51b136, 292.7670593261719 * _0x51b136, 393.0113830566406 * _0x51b136, 288.7670593261719 * _0x51b136, 398.0113830566406 * _0x51b136, 291.7670593261719 * _0x51b136), _0x4da8b7['closePath'](), fill_path(_0x4da8b7, _0x3d257f[0x3], _0x3d257f[0x2], 0xc * _0x51b136), _0x4da8b7['globalAlpha'] = _0x15d554 ? 0.5 : 0x1, _0x4da8b7['translate'](0x0, 0x5 * _0x51b136), _0x4da8b7['beginPath'](), _0x4da8b7['lineCap'] = 'round', _0x4da8b7['lineJoin'] = 'round', _0x4da8b7['moveTo'](366.0113830566406 * _0x51b136, 361.2216033935547 * _0x51b136), _0x4da8b7['bezierCurveTo'](393.0113830566406 * _0x51b136, 383.2216033935547 * _0x51b136, 393.0113830566406 * _0x51b136, 383.2216033935547 * _0x51b136, 420.0113830566406 * _0x51b136, 405.2216033935547 * _0x51b136), _0x4da8b7['bezierCurveTo'](427.0113830566406 * _0x51b136, 414.2216033935547 * _0x51b136, 425.0113830566406 * _0x51b136, 417.2216033935547 * _0x51b136, 413.0113830566406 * _0x51b136, 428.2216033935547 * _0x51b136), _0x4da8b7['bezierCurveTo'](405.5113830566406 * _0x51b136, 435.2216033935547 * _0x51b136, 405.5113830566406 * _0x51b136, 435.2216033935547 * _0x51b136, 398.0113830566406 * _0x51b136, 442.2216033935547 * _0x51b136), _0x4da8b7['bezierCurveTo'](388.0113830566406 * _0x51b136, 451.2216033935547 * _0x51b136, 385.0113830566406 * _0x51b136, 445.2216033935547 * _0x51b136, 373.0113830566406 * _0x51b136, 428.2216033935547 * _0x51b136), _0x4da8b7['bezierCurveTo'](358.5113830566406 * _0x51b136, 408.2216033935547 * _0x51b136, 358.5113830566406 * _0x51b136, 408.2216033935547 * _0x51b136, 344.0113830566406 * _0x51b136, 388.2216033935547 * _0x51b136), _0x4da8b7['bezierCurveTo'](337.0113830566406 * _0x51b136, 378.2216033935547 * _0x51b136, 342.0113830566406 * _0x51b136, 377.2216033935547 * _0x51b136, 347.0113830566406 * _0x51b136, 371.2216033935547 * _0x51b136), _0x4da8b7['bezierCurveTo'](359.0113830566406 * _0x51b136, 359.2216033935547 * _0x51b136, 361.0113830566406 * _0x51b136, 358.2216033935547 * _0x51b136, 364.0113830566406 * _0x51b136, 361.2216033935547 * _0x51b136), _0x4da8b7['closePath'](), fill_path(_0x4da8b7, _0x3d257f[0x0], _0x3d257f[0x0], 0xc * _0x51b136), _0x4da8b7['globalAlpha'] = 0x1, _0x4da8b7['translate'](0x0, -0x5 * _0x51b136), _0x4da8b7['beginPath'](), _0x4da8b7['lineCap'] = 'round', _0x4da8b7['lineJoin'] = 'round', _0x4da8b7['moveTo'](366.0113830566406 * _0x51b136, 361.2216033935547 * _0x51b136), _0x4da8b7['bezierCurveTo'](393.0113830566406 * _0x51b136, 383.2216033935547 * _0x51b136, 393.0113830566406 * _0x51b136, 383.2216033935547 * _0x51b136, 420.0113830566406 * _0x51b136, 405.2216033935547 * _0x51b136), _0x4da8b7['bezierCurveTo'](427.0113830566406 * _0x51b136, 414.2216033935547 * _0x51b136, 425.0113830566406 * _0x51b136, 417.2216033935547 * _0x51b136, 413.0113830566406 * _0x51b136, 428.2216033935547 * _0x51b136), _0x4da8b7['bezierCurveTo'](405.5113830566406 * _0x51b136, 435.2216033935547 * _0x51b136, 405.5113830566406 * _0x51b136, 435.2216033935547 * _0x51b136, 398.0113830566406 * _0x51b136, 442.2216033935547 * _0x51b136), _0x4da8b7['bezierCurveTo'](388.0113830566406 * _0x51b136, 451.2216033935547 * _0x51b136, 385.0113830566406 * _0x51b136, 445.2216033935547 * _0x51b136, 373.0113830566406 * _0x51b136, 428.2216033935547 * _0x51b136), _0x4da8b7['bezierCurveTo'](358.5113830566406 * _0x51b136, 408.2216033935547 * _0x51b136, 358.5113830566406 * _0x51b136, 408.2216033935547 * _0x51b136, 344.0113830566406 * _0x51b136, 388.2216033935547 * _0x51b136), _0x4da8b7['bezierCurveTo'](337.0113830566406 * _0x51b136, 378.2216033935547 * _0x51b136, 342.0113830566406 * _0x51b136, 377.2216033935547 * _0x51b136, 347.0113830566406 * _0x51b136, 371.2216033935547 * _0x51b136), _0x4da8b7['bezierCurveTo'](359.0113830566406 * _0x51b136, 359.2216033935547 * _0x51b136, 361.0113830566406 * _0x51b136, 358.2216033935547 * _0x51b136, 364.0113830566406 * _0x51b136, 361.2216033935547 * _0x51b136), _0x4da8b7['closePath'](), fill_path(_0x4da8b7, _0x3d257f[0x4], _0x3d257f[0x2], 0xc * _0x51b136), _0x4da8b7['globalAlpha'] = _0x15d554 ? 0.5 : 0x1, _0x4da8b7['translate'](0x0, 0x5 * _0x51b136), _0x4da8b7['beginPath'](), _0x4da8b7['lineCap'] = 'round', _0x4da8b7['lineJoin'] = 'round', _0x4da8b7['moveTo'](323.0113830566406 * _0x51b136, 393.2216033935547 * _0x51b136), _0x4da8b7['bezierCurveTo'](338.0113830566406 * _0x51b136, 424.7216033935547 * _0x51b136, 338.0113830566406 * _0x51b136, 424.7216033935547 * _0x51b136, 353.0113830566406 * _0x51b136, 456.2216033935547 * _0x51b136), _0x4da8b7['bezierCurveTo'](355.0113830566406 * _0x51b136, 467.2216033935547 * _0x51b136, 354.0113830566406 * _0x51b136, 469.2216033935547 * _0x51b136, 336.0113830566406 * _0x51b136, 475.2216033935547 * _0x51b136), _0x4da8b7['bezierCurveTo'](326.0113830566406 * _0x51b136, 478.2216033935547 * _0x51b136, 326.0113830566406 * _0x51b136, 478.2216033935547 * _0x51b136, 316.0113830566406 * _0x51b136, 481.2216033935547 * _0x51b136), _0x4da8b7['bezierCurveTo'](304.0113830566406 * _0x51b136, 484.2216033935547 * _0x51b136, 304.0113830566406 * _0x51b136, 477.2216033935547 * _0x51b136, 301.0113830566406 * _0x51b136, 454.2216033935547 * _0x51b136), _0x4da8b7['bezierCurveTo'](295.5113830566406 * _0x51b136, 429.2216033935547 * _0x51b136, 295.5113830566406 * _0x51b136, 429.2216033935547 * _0x51b136, 290.0113830566406 * _0x51b136, 404.2216033935547 * _0x51b136), _0x4da8b7['bezierCurveTo'](287.0113830566406 * _0x51b136, 396.2216033935547 * _0x51b136, 297.0113830566406 * _0x51b136, 394.2216033935547 * _0x51b136, 303.0113830566406 * _0x51b136, 392.2216033935547 * _0x51b136), _0x4da8b7['bezierCurveTo'](316.0113830566406 * _0x51b136, 387.2216033935547 * _0x51b136, 318.0113830566406 * _0x51b136, 387.2216033935547 * _0x51b136, 323.0113830566406 * _0x51b136, 394.2216033935547 * _0x51b136), _0x4da8b7['closePath'](), fill_path(_0x4da8b7, _0x3d257f[0x0], _0x3d257f[0x0], 0xc * _0x51b136), _0x4da8b7['globalAlpha'] = 0x1, _0x4da8b7['translate'](0x0, -0x5 * _0x51b136), _0x4da8b7['beginPath'](), _0x4da8b7['lineCap'] = 'round', _0x4da8b7['lineJoin'] = 'round', _0x4da8b7['moveTo'](323.0113830566406 * _0x51b136, 393.2216033935547 * _0x51b136), _0x4da8b7['bezierCurveTo'](338.0113830566406 * _0x51b136, 424.7216033935547 * _0x51b136, 338.0113830566406 * _0x51b136, 424.7216033935547 * _0x51b136, 353.0113830566406 * _0x51b136, 456.2216033935547 * _0x51b136), _0x4da8b7['bezierCurveTo'](355.0113830566406 * _0x51b136, 467.2216033935547 * _0x51b136, 354.0113830566406 * _0x51b136, 469.2216033935547 * _0x51b136, 336.0113830566406 * _0x51b136, 475.2216033935547 * _0x51b136), _0x4da8b7['bezierCurveTo'](326.0113830566406 * _0x51b136, 478.2216033935547 * _0x51b136, 326.0113830566406 * _0x51b136, 478.2216033935547 * _0x51b136, 316.0113830566406 * _0x51b136, 481.2216033935547 * _0x51b136), _0x4da8b7['bezierCurveTo'](304.0113830566406 * _0x51b136, 484.2216033935547 * _0x51b136, 304.0113830566406 * _0x51b136, 477.2216033935547 * _0x51b136, 301.0113830566406 * _0x51b136, 454.2216033935547 * _0x51b136), _0x4da8b7['bezierCurveTo'](295.5113830566406 * _0x51b136, 429.2216033935547 * _0x51b136, 295.5113830566406 * _0x51b136, 429.2216033935547 * _0x51b136, 290.0113830566406 * _0x51b136, 404.2216033935547 * _0x51b136), _0x4da8b7['bezierCurveTo'](287.0113830566406 * _0x51b136, 396.2216033935547 * _0x51b136, 297.0113830566406 * _0x51b136, 394.2216033935547 * _0x51b136, 303.0113830566406 * _0x51b136, 392.2216033935547 * _0x51b136), _0x4da8b7['bezierCurveTo'](316.0113830566406 * _0x51b136, 387.2216033935547 * _0x51b136, 318.0113830566406 * _0x51b136, 387.2216033935547 * _0x51b136, 323.0113830566406 * _0x51b136, 394.2216033935547 * _0x51b136), _0x4da8b7['closePath'](), fill_path(_0x4da8b7, _0x3d257f[0x4], _0x3d257f[0x2], 0xc * _0x51b136), _0x4da8b7['globalAlpha'] = _0x15d554 ? 0.5 : 0x1, _0x4da8b7['translate'](0x0, 0x5 * _0x51b136), _0x4da8b7['beginPath'](), _0x4da8b7['lineCap'] = 'round', _0x4da8b7['lineJoin'] = 'round', _0x4da8b7['moveTo'](270.0113830566406 * _0x51b136, 413.2216033935547 * _0x51b136), _0x4da8b7['bezierCurveTo'](271.0113830566406 * _0x51b136, 445.7216033935547 * _0x51b136, 271.0113830566406 * _0x51b136, 445.7216033935547 * _0x51b136, 272.0113830566406 * _0x51b136, 478.2216033935547 * _0x51b136), _0x4da8b7['bezierCurveTo'](273.0113830566406 * _0x51b136, 490.2216033935547 * _0x51b136, 267.0113830566406 * _0x51b136, 493.2216033935547 * _0x51b136, 249.01138305664062 * _0x51b136, 490.2216033935547 * _0x51b136), _0x4da8b7['bezierCurveTo'](222.01138305664062 * _0x51b136, 492.2216033935547 * _0x51b136, 220.01138305664062 * _0x51b136, 485.2216033935547 * _0x51b136, 225.01138305664062 * _0x51b136, 467.2216033935547 * _0x51b136), _0x4da8b7['bezierCurveTo'](230.51138305664062 * _0x51b136, 440.2216033935547 * _0x51b136, 230.51138305664062 * _0x51b136, 440.2216033935547 * _0x51b136, 236.01138305664062 * _0x51b136, 413.2216033935547 * _0x51b136), _0x4da8b7['bezierCurveTo'](237.01138305664062 * _0x51b136, 405.2216033935547 * _0x51b136, 238.01138305664062 * _0x51b136, 404.2216033935547 * _0x51b136, 253.01138305664062 * _0x51b136, 403.2216033935547 * _0x51b136), _0x4da8b7['bezierCurveTo'](269.0113830566406 * _0x51b136, 405.2216033935547 * _0x51b136, 270.0113830566406 * _0x51b136, 407.2216033935547 * _0x51b136, 269.0113830566406 * _0x51b136, 412.2216033935547 * _0x51b136), _0x4da8b7['closePath'](), fill_path(_0x4da8b7, _0x3d257f[0x0], _0x3d257f[0x0], 0xc * _0x51b136), _0x4da8b7['globalAlpha'] = 0x1, _0x4da8b7['translate'](0x0, -0x5 * _0x51b136), _0x4da8b7['beginPath'](), _0x4da8b7['lineCap'] = 'round', _0x4da8b7['lineJoin'] = 'round', _0x4da8b7['moveTo'](270.0113830566406 * _0x51b136, 413.2216033935547 * _0x51b136), _0x4da8b7['bezierCurveTo'](271.0113830566406 * _0x51b136, 445.7216033935547 * _0x51b136, 271.0113830566406 * _0x51b136, 445.7216033935547 * _0x51b136, 272.0113830566406 * _0x51b136, 478.2216033935547 * _0x51b136), _0x4da8b7['bezierCurveTo'](273.0113830566406 * _0x51b136, 490.2216033935547 * _0x51b136, 267.0113830566406 * _0x51b136, 493.2216033935547 * _0x51b136, 249.01138305664062 * _0x51b136, 490.2216033935547 * _0x51b136), _0x4da8b7['bezierCurveTo'](222.01138305664062 * _0x51b136, 492.2216033935547 * _0x51b136, 220.01138305664062 * _0x51b136, 485.2216033935547 * _0x51b136, 225.01138305664062 * _0x51b136, 467.2216033935547 * _0x51b136), _0x4da8b7['bezierCurveTo'](230.51138305664062 * _0x51b136, 440.2216033935547 * _0x51b136, 230.51138305664062 * _0x51b136, 440.2216033935547 * _0x51b136, 236.01138305664062 * _0x51b136, 413.2216033935547 * _0x51b136), _0x4da8b7['bezierCurveTo'](237.01138305664062 * _0x51b136, 405.2216033935547 * _0x51b136, 238.01138305664062 * _0x51b136, 404.2216033935547 * _0x51b136, 253.01138305664062 * _0x51b136, 403.2216033935547 * _0x51b136), _0x4da8b7['bezierCurveTo'](269.0113830566406 * _0x51b136, 405.2216033935547 * _0x51b136, 270.0113830566406 * _0x51b136, 407.2216033935547 * _0x51b136, 269.0113830566406 * _0x51b136, 412.2216033935547 * _0x51b136), _0x4da8b7['closePath'](), fill_path(_0x4da8b7, _0x3d257f[0x4], _0x3d257f[0x2], 0xc * _0x51b136), _0x4da8b7['globalAlpha'] = _0x15d554 ? 0.5 : 0x1, _0x4da8b7['translate'](0x0, 0x5 * _0x51b136), _0x4da8b7['beginPath'](), _0x4da8b7['lineCap'] = 'round', _0x4da8b7['lineJoin'] = 'round', _0x4da8b7['moveTo'](207.01138305664062 * _0x51b136, 406.2216033935547 * _0x51b136), _0x4da8b7['bezierCurveTo'](197.51138305664062 * _0x51b136, 440.7216033935547 * _0x51b136, 197.51138305664062 * _0x51b136, 440.7216033935547 * _0x51b136, 188.01138305664062 * _0x51b136, 475.2216033935547 * _0x51b136), _0x4da8b7['bezierCurveTo'](184.01138305664062 * _0x51b136, 485.2216033935547 * _0x51b136, 179.01138305664062 * _0x51b136, 491.2216033935547 * _0x51b136, 152.01138305664062 * _0x51b136, 477.2216033935547 * _0x51b136), _0x4da8b7['bezierCurveTo'](136.51138305664062 * _0x51b136, 469.7216033935547 * _0x51b136, 136.51138305664062 * _0x51b136, 469.7216033935547 * _0x51b136, 121.01138305664062 * _0x51b136, 462.2216033935547 * _0x51b136), _0x4da8b7['bezierCurveTo'](109.01138305664062 * _0x51b136, 453.2216033935547 * _0x51b136, 117.01138305664062 * _0x51b136, 447.2216033935547 * _0x51b136, 133.01138305664062 * _0x51b136, 427.2216033935547 * _0x51b136), _0x4da8b7['bezierCurveTo'](146.51138305664062 * _0x51b136, 406.7216033935547 * _0x51b136, 146.51138305664062 * _0x51b136, 406.7216033935547 * _0x51b136, 160.01138305664062 * _0x51b136, 386.2216033935547 * _0x51b136), _0x4da8b7['bezierCurveTo'](163.01138305664062 * _0x51b136, 377.2216033935547 * _0x51b136, 168.01138305664062 * _0x51b136, 378.2216033935547 * _0x51b136, 187.01138305664062 * _0x51b136, 387.2216033935547 * _0x51b136), _0x4da8b7['bezierCurveTo'](206.01138305664062 * _0x51b136, 395.2216033935547 * _0x51b136, 208.01138305664062 * _0x51b136, 398.2216033935547 * _0x51b136, 207.01138305664062 * _0x51b136, 405.2216033935547 * _0x51b136), _0x4da8b7['closePath'](), fill_path(_0x4da8b7, _0x3d257f[0x0], _0x3d257f[0x0], 0xc * _0x51b136), _0x4da8b7['globalAlpha'] = 0x1, _0x4da8b7['translate'](0x0, -0x5 * _0x51b136), _0x4da8b7['beginPath'](), _0x4da8b7['lineCap'] = 'round', _0x4da8b7['lineJoin'] = 'round', _0x4da8b7['moveTo'](207.01138305664062 * _0x51b136, 406.2216033935547 * _0x51b136), _0x4da8b7['bezierCurveTo'](197.51138305664062 * _0x51b136, 440.7216033935547 * _0x51b136, 197.51138305664062 * _0x51b136, 440.7216033935547 * _0x51b136, 188.01138305664062 * _0x51b136, 475.2216033935547 * _0x51b136), _0x4da8b7['bezierCurveTo'](184.01138305664062 * _0x51b136, 485.2216033935547 * _0x51b136, 179.01138305664062 * _0x51b136, 491.2216033935547 * _0x51b136, 152.01138305664062 * _0x51b136, 477.2216033935547 * _0x51b136), _0x4da8b7['bezierCurveTo'](136.51138305664062 * _0x51b136, 469.7216033935547 * _0x51b136, 136.51138305664062 * _0x51b136, 469.7216033935547 * _0x51b136, 121.01138305664062 * _0x51b136, 462.2216033935547 * _0x51b136), _0x4da8b7['bezierCurveTo'](109.01138305664062 * _0x51b136, 453.2216033935547 * _0x51b136, 117.01138305664062 * _0x51b136, 447.2216033935547 * _0x51b136, 133.01138305664062 * _0x51b136, 427.2216033935547 * _0x51b136), _0x4da8b7['bezierCurveTo'](146.51138305664062 * _0x51b136, 406.7216033935547 * _0x51b136, 146.51138305664062 * _0x51b136, 406.7216033935547 * _0x51b136, 160.01138305664062 * _0x51b136, 386.2216033935547 * _0x51b136), _0x4da8b7['bezierCurveTo'](163.01138305664062 * _0x51b136, 377.2216033935547 * _0x51b136, 168.01138305664062 * _0x51b136, 378.2216033935547 * _0x51b136, 187.01138305664062 * _0x51b136, 387.2216033935547 * _0x51b136), _0x4da8b7['bezierCurveTo'](206.01138305664062 * _0x51b136, 395.2216033935547 * _0x51b136, 208.01138305664062 * _0x51b136, 398.2216033935547 * _0x51b136, 207.01138305664062 * _0x51b136, 405.2216033935547 * _0x51b136), _0x4da8b7['closePath'](), fill_path(_0x4da8b7, _0x3d257f[0x3], _0x3d257f[0x2], 0xc * _0x51b136), _0x4da8b7['globalAlpha'] = _0x15d554 ? 0.5 : 0x1, _0x4da8b7['translate'](0x0, 0x5 * _0x51b136), _0x4da8b7['beginPath'](), _0x4da8b7['lineCap'] = 'round', _0x4da8b7['lineJoin'] = 'round', _0x4da8b7['moveTo'](130.01138305664062 * _0x51b136, 375.2216033935547 * _0x51b136), _0x4da8b7['bezierCurveTo'](109.51138305664062 * _0x51b136, 400.7216033935547 * _0x51b136, 109.51138305664062 * _0x51b136, 400.7216033935547 * _0x51b136, 89.01138305664062 * _0x51b136, 426.2216033935547 * _0x51b136), _0x4da8b7['bezierCurveTo'](82.01138305664062 * _0x51b136, 435.2216033935547 * _0x51b136, 77.01138305664062 * _0x51b136, 435.2216033935547 * _0x51b136, 62.011383056640625 * _0x51b136, 417.2216033935547 * _0x51b136), _0x4da8b7['bezierCurveTo'](43.011383056640625 * _0x51b136, 397.2216033935547 * _0x51b136, 47.011383056640625 * _0x51b136, 395.2216033935547 * _0x51b136, 62.011383056640625 * _0x51b136, 382.2216033935547 * _0x51b136), _0x4da8b7['bezierCurveTo'](84.01138305664062 * _0x51b136, 366.7216033935547 * _0x51b136, 84.01138305664062 * _0x51b136, 366.7216033935547 * _0x51b136, 106.01138305664062 * _0x51b136, 351.2216033935547 * _0x51b136), _0x4da8b7['bezierCurveTo'](116.01138305664062 * _0x51b136, 344.2216033935547 * _0x51b136, 120.01138305664062 * _0x51b136, 347.2216033935547 * _0x51b136, 127.01138305664062 * _0x51b136, 356.2216033935547 * _0x51b136), _0x4da8b7['bezierCurveTo'](137.01138305664062 * _0x51b136, 366.2216033935547 * _0x51b136, 137.01138305664062 * _0x51b136, 366.2216033935547 * _0x51b136, 131.01138305664062 * _0x51b136, 376.2216033935547 * _0x51b136), _0x4da8b7['closePath'](), fill_path(_0x4da8b7, _0x3d257f[0x0], _0x3d257f[0x0], 0xc * _0x51b136), _0x4da8b7['globalAlpha'] = 0x1, _0x4da8b7['translate'](0x0, -0x5 * _0x51b136), _0x4da8b7['beginPath'](), _0x4da8b7['lineCap'] = 'round', _0x4da8b7['lineJoin'] = 'round', _0x4da8b7['moveTo'](130.01138305664062 * _0x51b136, 375.2216033935547 * _0x51b136), _0x4da8b7['bezierCurveTo'](109.51138305664062 * _0x51b136, 400.7216033935547 * _0x51b136, 109.51138305664062 * _0x51b136, 400.7216033935547 * _0x51b136, 89.01138305664062 * _0x51b136, 426.2216033935547 * _0x51b136), _0x4da8b7['bezierCurveTo'](82.01138305664062 * _0x51b136, 435.2216033935547 * _0x51b136, 77.01138305664062 * _0x51b136, 435.2216033935547 * _0x51b136, 62.011383056640625 * _0x51b136, 417.2216033935547 * _0x51b136), _0x4da8b7['bezierCurveTo'](43.011383056640625 * _0x51b136, 397.2216033935547 * _0x51b136, 47.011383056640625 * _0x51b136, 395.2216033935547 * _0x51b136, 62.011383056640625 * _0x51b136, 382.2216033935547 * _0x51b136), _0x4da8b7['bezierCurveTo'](84.01138305664062 * _0x51b136, 366.7216033935547 * _0x51b136, 84.01138305664062 * _0x51b136, 366.7216033935547 * _0x51b136, 106.01138305664062 * _0x51b136, 351.2216033935547 * _0x51b136), _0x4da8b7['bezierCurveTo'](116.01138305664062 * _0x51b136, 344.2216033935547 * _0x51b136, 120.01138305664062 * _0x51b136, 347.2216033935547 * _0x51b136, 127.01138305664062 * _0x51b136, 356.2216033935547 * _0x51b136), _0x4da8b7['bezierCurveTo'](137.01138305664062 * _0x51b136, 366.2216033935547 * _0x51b136, 137.01138305664062 * _0x51b136, 366.2216033935547 * _0x51b136, 131.01138305664062 * _0x51b136, 376.2216033935547 * _0x51b136), _0x4da8b7['closePath'](), fill_path(_0x4da8b7, _0x3d257f[0x4], _0x3d257f[0x2], 0xc * _0x51b136), _0x2beb98;
}

function create_sand(_0x18f376, _0x2d4ab5, _0x120d55) {
    var _0x4d4077 = document['createElement']('canvas'),
        _0x36ed86 = _0x4d4077['getContext']('2d');
    return _0x4d4077['width'] = 0xda * _0x18f376, _0x4d4077['height'] = 0xb9 * _0x18f376, _0x36ed86['beginPath'](), _0x36ed86['lineCap'] = 'round', _0x36ed86['lineJoin'] = 'round', _0x36ed86['moveTo'](0x40 * _0x18f376, 53.135406494140625 * _0x18f376), _0x36ed86['bezierCurveTo'](0x5c * _0x18f376, 17.135406494140625 * _0x18f376, 0x74 * _0x18f376, 11.135406494140625 * _0x18f376, 0x9e * _0x18f376, 53.135406494140625 * _0x18f376), _0x36ed86['bezierCurveTo'](0xb2 * _0x18f376, 74.13540649414062 * _0x18f376, 0xb5 * _0x18f376, 81.13540649414062 * _0x18f376, 0xc4 * _0x18f376, 101.13540649414062 * _0x18f376), _0x36ed86['bezierCurveTo'](0xd6 * _0x18f376, 127.13540649414062 * _0x18f376, 0xc0 * _0x18f376, 138.13540649414062 * _0x18f376, 0xad * _0x18f376, 149.13540649414062 * _0x18f376), _0x36ed86['bezierCurveTo'](0x89 * _0x18f376, 166.13540649414062 * _0x18f376, 0x4a * _0x18f376, 170.13540649414062 * _0x18f376, 0x24 * _0x18f376, 141.13540649414062 * _0x18f376), _0x36ed86['bezierCurveTo'](0xd * _0x18f376, 127.13540649414062 * _0x18f376, 0x14 * _0x18f376, 119.13540649414062 * _0x18f376, 0x1e * _0x18f376, 103.13540649414062 * _0x18f376), _0x36ed86['bezierCurveTo'](0x30 * _0x18f376, 71.13540649414062 * _0x18f376, 0x36 * _0x18f376, 67.13540649414062 * _0x18f376, 0x3f * _0x18f376, 54.135406494140625 * _0x18f376), _0x36ed86['closePath'](), fill_path(_0x36ed86, _0x120d55[0x0], _0x120d55[0x1], 0xa * _0x18f376), _0x36ed86['beginPath'](), _0x36ed86['lineCap'] = 'round', _0x36ed86['lineJoin'] = 'round', _0x36ed86['moveTo'](0x6b * _0x18f376, 25.135406494140625 * _0x18f376), _0x36ed86['bezierCurveTo'](0x3e * _0x18f376, 90.13540649414062 * _0x18f376, 0x36 * _0x18f376, 129.13540649414062 * _0x18f376, 0x35 * _0x18f376, 151.13540649414062 * _0x18f376), _0x36ed86['bezierCurveTo'](39.5 * _0x18f376, 142.13540649414062 * _0x18f376, 39.5 * _0x18f376, 142.13540649414062 * _0x18f376, 0x1a * _0x18f376, 133.13540649414062 * _0x18f376), _0x36ed86['bezierCurveTo'](23.5 * _0x18f376, 128.63540649414062 * _0x18f376, 23.5 * _0x18f376, 128.63540649414062 * _0x18f376, 0x15 * _0x18f376, 124.13540649414062 * _0x18f376), _0x36ed86['bezierCurveTo'](0x16 * _0x18f376, 113.13540649414062 * _0x18f376, 0x1f * _0x18f376, 99.13540649414062 * _0x18f376, 0x28 * _0x18f376, 88.13540649414062 * _0x18f376), _0x36ed86['bezierCurveTo'](54.5 * _0x18f376, 67.13540649414062 * _0x18f376, 54.5 * _0x18f376, 67.13540649414062 * _0x18f376, 0x45 * _0x18f376, 46.135406494140625 * _0x18f376), _0x36ed86['bezierCurveTo'](80.5 * _0x18f376, 36.635406494140625 * _0x18f376, 80.5 * _0x18f376, 36.635406494140625 * _0x18f376, 0x5c * _0x18f376, 27.135406494140625 * _0x18f376), _0x36ed86['closePath'](), fill_path(_0x36ed86, _0x120d55[0x1]), _0x4d4077;
}

function create_ice(_0x171778, _0x1d5710, _0x34261a) {
    var _0x1df8b7 = document['createElement']('canvas'),
        _0x119301 = _0x1df8b7['getContext']('2d');
    return _0x1df8b7['width'] = 0xa7 * _0x171778, _0x1df8b7['height'] = 0x88 * _0x171778, _0x119301['globalAlpha'] = 0.5, _0x119301['save'](), _0x119301['translate'](76.71426391601562 * _0x171778, 67.85713195800781 * _0x171778), round_rect(_0x119301, -57.5 * _0x171778, -54.5 * _0x171778, 0x73 * _0x171778, 0x6d * _0x171778, 0xf * _0x171778), _0x119301['restore'](), fill_path(_0x119301, _0x34261a[0x0]), _0x119301['globalAlpha'] = 0.8, _0x119301['save'](), _0x119301['translate'](76.71426391601562 * _0x171778, 67.85713195800781 * _0x171778), round_rect(_0x119301, -57.5 * _0x171778, -54.5 * _0x171778, 0x73 * _0x171778, 0x6d * _0x171778, 0xf * _0x171778), _0x119301['restore'](), fill_path(_0x119301, undefined, _0x34261a[0x1], 0x7 * _0x171778), _0x119301['globalAlpha'] = 0.5, _0x119301['save'](), _0x119301['translate'](91.21426391601562 * _0x171778, 67.35713195800781 * _0x171778), round_rect(_0x119301, -0x38 * _0x171778, -0x37 * _0x171778, 0x73 * _0x171778, 0x6d * _0x171778, 0xf * _0x171778), _0x119301['restore'](), fill_path(_0x119301, _0x34261a[0x0]), _0x119301['globalAlpha'] = 0x1, _0x119301['save'](), _0x119301['translate'](91.21426391601562 * _0x171778, 67.35713195800781 * _0x171778), round_rect(_0x119301, -0x38 * _0x171778, -0x37 * _0x171778, 0x73 * _0x171778, 0x6d * _0x171778, 0xf * _0x171778), _0x119301['restore'](), fill_path(_0x119301, undefined, _0x34261a[0x1], 0x7 * _0x171778), _0x119301['beginPath'](), _0x119301['lineCap'] = 'round', _0x119301['lineJoin'] = 'round', _0x119301['moveTo'](131.21426391601562 * _0x171778, 70.35713195800781 * _0x171778), _0x119301['bezierCurveTo'](133.21426391601562 * _0x171778, 95.35713195800781 * _0x171778, 128.21426391601562 * _0x171778, 109.35713195800781 * _0x171778, 108.21426391601562 * _0x171778, 108.35713195800781 * _0x171778), fill_path(_0x119301, undefined, _0x34261a[0x1], 0xa * _0x171778), _0x1df8b7;
}

function create_plot(_0x54417d, _0x33fe49, _0x4b986b) {
    var _0x156c4f = document['createElement']('canvas'),
        _0x599aa5 = _0x156c4f['getContext']('2d');
    return _0x156c4f['width'] = 0xa3 * _0x54417d, _0x156c4f['height'] = 0xa3 * _0x54417d, _0x599aa5['save'](), _0x599aa5['translate'](82.5 * _0x54417d, 81.1015625 * _0x54417d), _0x599aa5['rotate'](0x0), round_rect(_0x599aa5, -65.5 * _0x54417d, -0x42 * _0x54417d, 0x83 * _0x54417d, 0x83 * _0x54417d, 0x5 * _0x54417d), _0x599aa5['restore'](), fill_path(_0x599aa5, _0x4b986b[0x1]), _0x599aa5['globalAlpha'] = _0x33fe49 ? 0.5 : 0x1, _0x599aa5['translate'](0x5 * _0x54417d, 0x5 * _0x54417d), _0x599aa5['save'](), _0x599aa5['translate'](0x50 * _0x54417d, 17.1015625 * _0x54417d), round_rect(_0x599aa5, -0x40 * _0x54417d, -4.5 * _0x54417d, 0x81 * _0x54417d, 0x9 * _0x54417d, 0x5 * _0x54417d), _0x599aa5['restore'](), fill_path(_0x599aa5, _0x4b986b[0x0]), _0x599aa5['globalAlpha'] = 0x1, _0x599aa5['translate'](-0x5 * _0x54417d, -0x5 * _0x54417d), _0x599aa5['save'](), _0x599aa5['translate'](0x50 * _0x54417d, 17.1015625 * _0x54417d), round_rect(_0x599aa5, -0x40 * _0x54417d, -4.5 * _0x54417d, 0x81 * _0x54417d, 0x9 * _0x54417d, 0x5 * _0x54417d), _0x599aa5['restore'](), fill_path(_0x599aa5, _0x4b986b[0x2], _0x4b986b[0x3], 0x3 * _0x54417d), _0x599aa5['globalAlpha'] = _0x33fe49 ? 0.5 : 0x1, _0x599aa5['translate'](0x5 * _0x54417d, 0x5 * _0x54417d), _0x599aa5['save'](), _0x599aa5['translate'](145.5 * _0x54417d, 83.6015625 * _0x54417d), round_rect(_0x599aa5, -4.5 * _0x54417d, -0x3d * _0x54417d, 0x9 * _0x54417d, 0x81 * _0x54417d, 0x5 * _0x54417d), _0x599aa5['restore'](), fill_path(_0x599aa5, _0x4b986b[0x0]), _0x599aa5['globalAlpha'] = 0x1, _0x599aa5['translate'](-0x5 * _0x54417d, -0x5 * _0x54417d), _0x599aa5['save'](), _0x599aa5['translate'](145.5 * _0x54417d, 83.6015625 * _0x54417d), round_rect(_0x599aa5, -4.5 * _0x54417d, -0x3d * _0x54417d, 0x9 * _0x54417d, 0x81 * _0x54417d, 0x5 * _0x54417d), _0x599aa5['restore'](), fill_path(_0x599aa5, _0x4b986b[0x2], _0x4b986b[0x3], 0x3 * _0x54417d), _0x599aa5['globalAlpha'] = _0x33fe49 ? 0.5 : 0x1, _0x599aa5['translate'](0x5 * _0x54417d, 0x5 * _0x54417d), _0x599aa5['save'](), _0x599aa5['translate'](17.5 * _0x54417d, 82.6015625 * _0x54417d), round_rect(_0x599aa5, -4.5 * _0x54417d, -0x41 * _0x54417d, 0x9 * _0x54417d, 0x81 * _0x54417d, 0x5 * _0x54417d), _0x599aa5['restore'](), fill_path(_0x599aa5, _0x4b986b[0x0]), _0x599aa5['globalAlpha'] = 0x1, _0x599aa5['translate'](-0x5 * _0x54417d, -0x5 * _0x54417d), _0x599aa5['save'](), _0x599aa5['translate'](17.5 * _0x54417d, 82.6015625 * _0x54417d), round_rect(_0x599aa5, -4.5 * _0x54417d, -0x41 * _0x54417d, 0x9 * _0x54417d, 0x81 * _0x54417d, 0x5 * _0x54417d), _0x599aa5['restore'](), fill_path(_0x599aa5, _0x4b986b[0x2], _0x4b986b[0x3], 0x3 * _0x54417d), _0x599aa5['globalAlpha'] = _0x33fe49 ? 0.5 : 0x1, _0x599aa5['translate'](0x5 * _0x54417d, 0x5 * _0x54417d), _0x599aa5['save'](), _0x599aa5['translate'](80.5 * _0x54417d, 145.6015625 * _0x54417d), round_rect(_0x599aa5, -65.5 * _0x54417d, -0x4 * _0x54417d, 0x81 * _0x54417d, 0x9 * _0x54417d, 0x5 * _0x54417d), _0x599aa5['restore'](), fill_path(_0x599aa5, _0x4b986b[0x0]), _0x599aa5['globalAlpha'] = 0x1, _0x599aa5['translate'](-0x5 * _0x54417d, -0x5 * _0x54417d), _0x599aa5['save'](), _0x599aa5['translate'](80.5 * _0x54417d, 145.6015625 * _0x54417d), round_rect(_0x599aa5, -65.5 * _0x54417d, -0x4 * _0x54417d, 0x81 * _0x54417d, 0x9 * _0x54417d, 0x5 * _0x54417d), _0x599aa5['restore'](), fill_path(_0x599aa5, _0x4b986b[0x2], _0x4b986b[0x3], 0x3 * _0x54417d), _0x599aa5['globalAlpha'] = _0x33fe49 ? 0.5 : 0x1, _0x599aa5['translate'](0x5 * _0x54417d, 0x5 * _0x54417d), _0x599aa5['save'](), _0x599aa5['translate'](0x11 * _0x54417d, 18.1015625 * _0x54417d), round_rect(_0x599aa5, -0xb * _0x54417d, -11.5 * _0x54417d, 0x16 * _0x54417d, 0x16 * _0x54417d, 0x5 * _0x54417d), _0x599aa5['restore'](), fill_path(_0x599aa5, _0x4b986b[0x0]), _0x599aa5['globalAlpha'] = 0x1, _0x599aa5['translate'](-0x5 * _0x54417d, -0x5 * _0x54417d), _0x599aa5['save'](), _0x599aa5['translate'](0x11 * _0x54417d, 18.1015625 * _0x54417d), round_rect(_0x599aa5, -0xb * _0x54417d, -11.5 * _0x54417d, 0x16 * _0x54417d, 0x16 * _0x54417d, 0x5 * _0x54417d), _0x599aa5['restore'](), fill_path(_0x599aa5, _0x4b986b[0x2], _0x4b986b[0x3], 0x3 * _0x54417d), _0x599aa5['globalAlpha'] = _0x33fe49 ? 0.5 : 0x1, _0x599aa5['translate'](0x5 * _0x54417d, 0x5 * _0x54417d), _0x599aa5['save'](), _0x599aa5['translate'](145.5 * _0x54417d, 16.6015625 * _0x54417d), round_rect(_0x599aa5, -10.5 * _0x54417d, -11.5 * _0x54417d, 0x15 * _0x54417d, 0x16 * _0x54417d, 0x5 * _0x54417d), _0x599aa5['restore'](), fill_path(_0x599aa5, _0x4b986b[0x0]), _0x599aa5['globalAlpha'] = 0x1, _0x599aa5['translate'](-0x5 * _0x54417d, -0x5 * _0x54417d), _0x599aa5['save'](), _0x599aa5['translate'](145.5 * _0x54417d, 16.6015625 * _0x54417d), round_rect(_0x599aa5, -10.5 * _0x54417d, -11.5 * _0x54417d, 0x15 * _0x54417d, 0x16 * _0x54417d, 0x5 * _0x54417d), _0x599aa5['restore'](), fill_path(_0x599aa5, _0x4b986b[0x2], _0x4b986b[0x3], 0x3 * _0x54417d), _0x599aa5['globalAlpha'] = _0x33fe49 ? 0.5 : 0x1, _0x599aa5['translate'](0x5 * _0x54417d, 0x5 * _0x54417d), _0x599aa5['save'](), _0x599aa5['translate'](145.5 * _0x54417d, 144.1015625 * _0x54417d), round_rect(_0x599aa5, -10.5 * _0x54417d, -0xb * _0x54417d, 0x16 * _0x54417d, 0x16 * _0x54417d, 0x5 * _0x54417d), _0x599aa5['restore'](), fill_path(_0x599aa5, _0x4b986b[0x0]), _0x599aa5['globalAlpha'] = 0x1, _0x599aa5['translate'](-0x5 * _0x54417d, -0x5 * _0x54417d), _0x599aa5['save'](), _0x599aa5['translate'](145.5 * _0x54417d, 144.1015625 * _0x54417d), round_rect(_0x599aa5, -10.5 * _0x54417d, -0xb * _0x54417d, 0x16 * _0x54417d, 0x16 * _0x54417d, 0x5 * _0x54417d), _0x599aa5['restore'](), fill_path(_0x599aa5, _0x4b986b[0x2], _0x4b986b[0x3], 0x3 * _0x54417d), _0x599aa5['globalAlpha'] = _0x33fe49 ? 0.5 : 0x1, _0x599aa5['translate'](0x5 * _0x54417d, 0x5 * _0x54417d), _0x599aa5['save'](), _0x599aa5['translate'](17.5 * _0x54417d, 145.1015625 * _0x54417d), round_rect(_0x599aa5, -11.5 * _0x54417d, -0xc * _0x54417d, 0x16 * _0x54417d, 0x16 * _0x54417d, 0x5 * _0x54417d), _0x599aa5['restore'](), fill_path(_0x599aa5, _0x4b986b[0x0]), _0x599aa5['globalAlpha'] = 0x1, _0x599aa5['translate'](-0x5 * _0x54417d, -0x5 * _0x54417d), _0x599aa5['save'](), _0x599aa5['translate'](17.5 * _0x54417d, 145.1015625 * _0x54417d), round_rect(_0x599aa5, -11.5 * _0x54417d, -0xc * _0x54417d, 0x16 * _0x54417d, 0x16 * _0x54417d, 0x5 * _0x54417d), _0x599aa5['restore'](), fill_path(_0x599aa5, _0x4b986b[0x2], _0x4b986b[0x3], 0x3 * _0x54417d), _0x156c4f;
}

function create_watering_can(_0x3369da, _0x1eef2e, _0xdcff3d) {
    var _0x5529d2 = document['createElement']('canvas'),
        _0x3b6c29 = _0x5529d2['getContext']('2d');
    return _0x5529d2['width'] = 0xa8 * _0x3369da, _0x5529d2['height'] = 0x64 * _0x3369da, _0x3b6c29['globalAlpha'] = _0x1eef2e ? 0.5 : 0x1, _0x3b6c29['translate'](0xa * _0x3369da, 0x5 * _0x3369da), _0x3b6c29['save'](), _0x3b6c29['translate'](24.5 * _0x3369da, 44.30000305175781 * _0x3369da), round_rect(_0x3b6c29, -19.5 * _0x3369da, -8.5 * _0x3369da, 0x27 * _0x3369da, 0x11 * _0x3369da, 0xa * _0x3369da), _0x3b6c29['restore'](), fill_path(_0x3b6c29, _0xdcff3d[0x0]), _0x3b6c29['beginPath'](), _0x3b6c29['lineCap'] = 'round', _0x3b6c29['lineJoin'] = 'round', _0x3b6c29['moveTo'](0x73 * _0x3369da, 37.80000305175781 * _0x3369da), _0x3b6c29['bezierCurveTo'](0x8e * _0x3369da, 37.80000305175781 * _0x3369da, 0x8c * _0x3369da, 37.80000305175781 * _0x3369da, 0x8d * _0x3369da, 37.80000305175781 * _0x3369da), _0x3b6c29['bezierCurveTo'](0x93 * _0x3369da, 28.800003051757812 * _0x3369da, 0x95 * _0x3369da, 26.800003051757812 * _0x3369da, 0x99 * _0x3369da, 32.80000305175781 * _0x3369da), _0x3b6c29['bezierCurveTo'](0xa0 * _0x3369da, 42.80000305175781 * _0x3369da, 0x9d * _0x3369da, 50.80000305175781 * _0x3369da, 0x99 * _0x3369da, 58.80000305175781 * _0x3369da), _0x3b6c29['bezierCurveTo'](0x94 * _0x3369da, 62.80000305175781 * _0x3369da, 0x93 * _0x3369da, 59.80000305175781 * _0x3369da, 0x8f * _0x3369da, 52.80000305175781 * _0x3369da), _0x3b6c29['bezierCurveTo'](0x81 * _0x3369da, 52.80000305175781 * _0x3369da, 0x81 * _0x3369da, 52.80000305175781 * _0x3369da, 0x73 * _0x3369da, 52.80000305175781 * _0x3369da), _0x3b6c29['closePath'](), fill_path(_0x3b6c29, _0xdcff3d[0x0]), circle(_0x3b6c29, 0x4e * _0x3369da, 44.80000305175781 * _0x3369da, 39.44616584663204 * _0x3369da), fill_path(_0x3b6c29, _0xdcff3d[0x0]), _0x3b6c29['globalAlpha'] = 0x1, _0x3b6c29['translate'](-0xa * _0x3369da, -0x5 * _0x3369da), _0x3b6c29['save'](), _0x3b6c29['translate'](24.5 * _0x3369da, 44.30000305175781 * _0x3369da), round_rect(_0x3b6c29, -19.5 * _0x3369da, -8.5 * _0x3369da, 0x27 * _0x3369da, 0x11 * _0x3369da, 0xa * _0x3369da), _0x3b6c29['restore'](), fill_path(_0x3b6c29, undefined, _0xdcff3d[0x3], 0x6 * _0x3369da), _0x3b6c29['beginPath'](), _0x3b6c29['lineCap'] = 'round', _0x3b6c29['lineJoin'] = 'round', _0x3b6c29['moveTo'](0x73 * _0x3369da, 37.80000305175781 * _0x3369da), _0x3b6c29['bezierCurveTo'](0x8e * _0x3369da, 37.80000305175781 * _0x3369da, 0x8c * _0x3369da, 37.80000305175781 * _0x3369da, 0x8d * _0x3369da, 37.80000305175781 * _0x3369da), _0x3b6c29['bezierCurveTo'](0x93 * _0x3369da, 28.800003051757812 * _0x3369da, 0x95 * _0x3369da, 26.800003051757812 * _0x3369da, 0x99 * _0x3369da, 32.80000305175781 * _0x3369da), _0x3b6c29['bezierCurveTo'](0xa0 * _0x3369da, 42.80000305175781 * _0x3369da, 0x9d * _0x3369da, 50.80000305175781 * _0x3369da, 0x99 * _0x3369da, 58.80000305175781 * _0x3369da), _0x3b6c29['bezierCurveTo'](0x94 * _0x3369da, 62.80000305175781 * _0x3369da, 0x93 * _0x3369da, 59.80000305175781 * _0x3369da, 0x8f * _0x3369da, 52.80000305175781 * _0x3369da), _0x3b6c29['bezierCurveTo'](0x81 * _0x3369da, 52.80000305175781 * _0x3369da, 0x81 * _0x3369da, 52.80000305175781 * _0x3369da, 0x73 * _0x3369da, 52.80000305175781 * _0x3369da), _0x3b6c29['closePath'](), fill_path(_0x3b6c29, undefined, _0xdcff3d[0x3], 0x6 * _0x3369da), circle(_0x3b6c29, 0x4e * _0x3369da, 44.80000305175781 * _0x3369da, 42.44616584663204 * _0x3369da), fill_path(_0x3b6c29, undefined, _0xdcff3d[0x3], 0x6 * _0x3369da), _0x3b6c29['save'](), _0x3b6c29['translate'](24.5 * _0x3369da, 44.30000305175781 * _0x3369da), round_rect(_0x3b6c29, -19.5 * _0x3369da, -8.5 * _0x3369da, 0x27 * _0x3369da, 0x11 * _0x3369da, 0xa * _0x3369da), _0x3b6c29['restore'](), fill_path(_0x3b6c29, _0xdcff3d[0x1]), _0x3b6c29['beginPath'](), _0x3b6c29['lineCap'] = 'round', _0x3b6c29['lineJoin'] = 'round', _0x3b6c29['moveTo'](0x73 * _0x3369da, 37.80000305175781 * _0x3369da), _0x3b6c29['bezierCurveTo'](0x8e * _0x3369da, 37.80000305175781 * _0x3369da, 0x8c * _0x3369da, 37.80000305175781 * _0x3369da, 0x8d * _0x3369da, 37.80000305175781 * _0x3369da), _0x3b6c29['bezierCurveTo'](0x93 * _0x3369da, 28.800003051757812 * _0x3369da, 0x95 * _0x3369da, 26.800003051757812 * _0x3369da, 0x99 * _0x3369da, 32.80000305175781 * _0x3369da), _0x3b6c29['bezierCurveTo'](0xa0 * _0x3369da, 42.80000305175781 * _0x3369da, 0x9d * _0x3369da, 50.80000305175781 * _0x3369da, 0x99 * _0x3369da, 58.80000305175781 * _0x3369da), _0x3b6c29['bezierCurveTo'](0x94 * _0x3369da, 62.80000305175781 * _0x3369da, 0x93 * _0x3369da, 59.80000305175781 * _0x3369da, 0x8f * _0x3369da, 52.80000305175781 * _0x3369da), _0x3b6c29['bezierCurveTo'](0x81 * _0x3369da, 52.80000305175781 * _0x3369da, 0x81 * _0x3369da, 52.80000305175781 * _0x3369da, 0x73 * _0x3369da, 52.80000305175781 * _0x3369da), _0x3b6c29['closePath'](), fill_path(_0x3b6c29, _0xdcff3d[0x1]), circle(_0x3b6c29, 0x4e * _0x3369da, 44.80000305175781 * _0x3369da, 39.44616584663204 * _0x3369da), fill_path(_0x3b6c29, _0xdcff3d[0x2], _0xdcff3d[0x1], 0x4 * _0x3369da), circle(_0x3b6c29, 0x4e * _0x3369da, 44.80000305175781 * _0x3369da, 29.68164415931166 * _0x3369da), fill_path(_0x3b6c29, _0xdcff3d[0x3], _0xdcff3d[0x1], 0x4 * _0x3369da), circle(_0x3b6c29, 0x4e * _0x3369da, 0x2c * _0x3369da, 0x14 * _0x3369da), fill_path(_0x3b6c29, _0xdcff3d[0x4]), _0x5529d2;
}

function create_pirahna(_0x22c996, _0xf38ab4, _0x4a1217) {
    var _0x5173aa = document['createElement']('canvas'),
        _0x197f29 = _0x5173aa['getContext']('2d');
    return _0x5173aa['width'] = 0x9e * _0x22c996, _0x5173aa['height'] = 0xc9 * _0x22c996, _0x197f29['beginPath'](), _0x197f29['lineCap'] = 'round', _0x197f29['lineJoin'] = 'round', _0x197f29['moveTo'](96.5 * _0x22c996, 76.421875 * _0x22c996), _0x197f29['bezierCurveTo'](100.5 * _0x22c996, 64.421875 * _0x22c996, 103.5 * _0x22c996, 62.421875 * _0x22c996, 110.5 * _0x22c996, 65.421875 * _0x22c996), _0x197f29['bezierCurveTo'](116.5 * _0x22c996, 66.421875 * _0x22c996, 117.5 * _0x22c996, 67.421875 * _0x22c996, 112.5 * _0x22c996, 73.421875 * _0x22c996), _0x197f29['bezierCurveTo'](0x6b * _0x22c996, 79.921875 * _0x22c996, 0x6b * _0x22c996, 79.921875 * _0x22c996, 101.5 * _0x22c996, 86.421875 * _0x22c996), _0x197f29['closePath'](), fill_path(_0x197f29, _0x4a1217[0x8], _0x4a1217[0x8], 0xa * _0x22c996), _0x197f29['beginPath'](), _0x197f29['lineCap'] = 'round', _0x197f29['lineJoin'] = 'round', _0x197f29['moveTo'](61.5 * _0x22c996, 78.421875 * _0x22c996), _0x197f29['bezierCurveTo'](57.5 * _0x22c996, 73.421875 * _0x22c996, 51.5 * _0x22c996, 66.421875 * _0x22c996, 45.5 * _0x22c996, 68.421875 * _0x22c996), _0x197f29['bezierCurveTo'](32.5 * _0x22c996, 73.421875 * _0x22c996, 38.5 * _0x22c996, 75.421875 * _0x22c996, 46.5 * _0x22c996, 81.421875 * _0x22c996), _0x197f29['bezierCurveTo'](51.5 * _0x22c996, 84.921875 * _0x22c996, 51.5 * _0x22c996, 84.921875 * _0x22c996, 56.5 * _0x22c996, 88.421875 * _0x22c996), _0x197f29['closePath'](), fill_path(_0x197f29, _0x4a1217[0x8], _0x4a1217[0x8], 0xa * _0x22c996), _0x197f29['beginPath'](), _0x197f29['lineCap'] = 'round', _0x197f29['lineJoin'] = 'round', _0x197f29['moveTo'](116.5 * _0x22c996, 127.421875 * _0x22c996), _0x197f29['bezierCurveTo'](124.5 * _0x22c996, 108.421875 * _0x22c996, 129.5 * _0x22c996, 104.421875 * _0x22c996, 141.5 * _0x22c996, 107.421875 * _0x22c996), _0x197f29['bezierCurveTo'](156.5 * _0x22c996, 112.421875 * _0x22c996, 153.5 * _0x22c996, 113.421875 * _0x22c996, 132.5 * _0x22c996, 134.421875 * _0x22c996), _0x197f29['bezierCurveTo'](123.5 * _0x22c996, 141.921875 * _0x22c996, 123.5 * _0x22c996, 141.921875 * _0x22c996, 114.5 * _0x22c996, 149.421875 * _0x22c996), _0x197f29['closePath'](), fill_path(_0x197f29, _0x4a1217[0x8], _0x4a1217[0x8], 0xa * _0x22c996), _0x197f29['beginPath'](), _0x197f29['lineCap'] = 'round', _0x197f29['lineJoin'] = 'round', _0x197f29['moveTo'](41.5 * _0x22c996, 134.421875 * _0x22c996), _0x197f29['bezierCurveTo'](30.5 * _0x22c996, 119.421875 * _0x22c996, 25.5 * _0x22c996, 111.421875 * _0x22c996, 12.5 * _0x22c996, 115.421875 * _0x22c996), _0x197f29['bezierCurveTo'](4.5 * _0x22c996, 120.421875 * _0x22c996, 4.5 * _0x22c996, 121.421875 * _0x22c996, 26.5 * _0x22c996, 142.421875 * _0x22c996), _0x197f29['bezierCurveTo'](0x23 * _0x22c996, 149.921875 * _0x22c996, 0x23 * _0x22c996, 149.921875 * _0x22c996, 43.5 * _0x22c996, 157.421875 * _0x22c996), _0x197f29['closePath'](), fill_path(_0x197f29, _0x4a1217[0x8], _0x4a1217[0x8], 0xa * _0x22c996), _0x197f29['beginPath'](), _0x197f29['lineCap'] = 'round', _0x197f29['lineJoin'] = 'round', _0x197f29['moveTo'](78.5 * _0x22c996, 51.921875 * _0x22c996), _0x197f29['bezierCurveTo'](99.5 * _0x22c996, 75.921875 * _0x22c996, 110.5 * _0x22c996, 96.921875 * _0x22c996, 118.5 * _0x22c996, 120.921875 * _0x22c996), _0x197f29['bezierCurveTo'](121.5 * _0x22c996, 140.921875 * _0x22c996, 107.5 * _0x22c996, 179.921875 * _0x22c996, 75.5 * _0x22c996, 183.921875 * _0x22c996), _0x197f29['bezierCurveTo'](30.5 * _0x22c996, 169.921875 * _0x22c996, 37.5 * _0x22c996, 131.921875 * _0x22c996, 34.5 * _0x22c996, 120.921875 * _0x22c996), _0x197f29['bezierCurveTo'](41.5 * _0x22c996, 89.921875 * _0x22c996, 61.5 * _0x22c996, 67.921875 * _0x22c996, 78.5 * _0x22c996, 51.921875 * _0x22c996), _0x197f29['closePath'](), fill_path(_0x197f29, _0x4a1217[0x8], _0x4a1217[0x8], 0xa * _0x22c996), _0x197f29['beginPath'](), _0x197f29['lineCap'] = 'round', _0x197f29['lineJoin'] = 'round', _0x197f29['moveTo'](72.5 * _0x22c996, 72.421875 * _0x22c996), _0x197f29['bezierCurveTo'](76.5 * _0x22c996, 79.421875 * _0x22c996, 79.5 * _0x22c996, 80.421875 * _0x22c996, 83.5 * _0x22c996, 73.421875 * _0x22c996), _0x197f29['bezierCurveTo'](80.5 * _0x22c996, 96.921875 * _0x22c996, 79.5 * _0x22c996, 114.421875 * _0x22c996, 77.5 * _0x22c996, 120.421875 * _0x22c996), _0x197f29['closePath'](), fill_path(_0x197f29, _0x4a1217[0x8], _0x4a1217[0x8], 0xa * _0x22c996), _0x197f29['beginPath'](), _0x197f29['lineCap'] = 'round', _0x197f29['lineJoin'] = 'round', _0x197f29['moveTo'](42.5 * _0x22c996, 163.421875 * _0x22c996), _0x197f29['bezierCurveTo'](62.5 * _0x22c996, 185.421875 * _0x22c996, 86.5 * _0x22c996, 186.421875 * _0x22c996, 111.5 * _0x22c996, 165.421875 * _0x22c996), _0x197f29['bezierCurveTo'](107.5 * _0x22c996, 176.421875 * _0x22c996, 95.5 * _0x22c996, 187.421875 * _0x22c996, 75.5 * _0x22c996, 188.421875 * _0x22c996), _0x197f29['bezierCurveTo'](53.5 * _0x22c996, 188.421875 * _0x22c996, 43.5 * _0x22c996, 171.421875 * _0x22c996, 42.5 * _0x22c996, 164.421875 * _0x22c996), _0x197f29['closePath'](), fill_path(_0x197f29, _0x4a1217[0x8], _0x4a1217[0x8], 0x8 * _0x22c996), _0x197f29['beginPath'](), _0x197f29['lineCap'] = 'round', _0x197f29['lineJoin'] = 'round', _0x197f29['moveTo'](79.5 * _0x22c996, 61.421875 * _0x22c996), _0x197f29['bezierCurveTo'](88.5 * _0x22c996, 31.421875 * _0x22c996, 81.5 * _0x22c996, 16.421875 * _0x22c996, 75.5 * _0x22c996, 7.421875 * _0x22c996), _0x197f29['bezierCurveTo'](77.5 * _0x22c996, 28.421875 * _0x22c996, 77.5 * _0x22c996, 37.421875 * _0x22c996, 68.5 * _0x22c996, 42.421875 * _0x22c996), _0x197f29['bezierCurveTo'](79.5 * _0x22c996, 57.421875 * _0x22c996, 79.5 * _0x22c996, 58.421875 * _0x22c996, 80.5 * _0x22c996, 61.421875 * _0x22c996), _0x197f29['closePath'](), fill_path(_0x197f29, _0x4a1217[0x8], _0x4a1217[0x8], 0xa * _0x22c996), _0x197f29['beginPath'](), _0x197f29['lineCap'] = 'round', _0x197f29['lineJoin'] = 'round', _0x197f29['moveTo'](72.5 * _0x22c996, 72.421875 * _0x22c996), _0x197f29['bezierCurveTo'](76.5 * _0x22c996, 79.421875 * _0x22c996, 79.5 * _0x22c996, 80.421875 * _0x22c996, 83.5 * _0x22c996, 73.421875 * _0x22c996), _0x197f29['bezierCurveTo'](80.5 * _0x22c996, 96.921875 * _0x22c996, 79.5 * _0x22c996, 114.421875 * _0x22c996, 77.5 * _0x22c996, 120.421875 * _0x22c996), _0x197f29['closePath'](), fill_path(_0x197f29, _0x4a1217[0x8], _0x4a1217[0x8], 0xa * _0x22c996), _0x197f29['beginPath'](), _0x197f29['lineCap'] = 'round', _0x197f29['lineJoin'] = 'round', _0x197f29['moveTo'](96.5 * _0x22c996, 76.421875 * _0x22c996), _0x197f29['bezierCurveTo'](100.5 * _0x22c996, 64.421875 * _0x22c996, 103.5 * _0x22c996, 62.421875 * _0x22c996, 110.5 * _0x22c996, 65.421875 * _0x22c996), _0x197f29['bezierCurveTo'](116.5 * _0x22c996, 66.421875 * _0x22c996, 117.5 * _0x22c996, 67.421875 * _0x22c996, 112.5 * _0x22c996, 73.421875 * _0x22c996), _0x197f29['bezierCurveTo'](0x6b * _0x22c996, 79.921875 * _0x22c996, 0x6b * _0x22c996, 79.921875 * _0x22c996, 101.5 * _0x22c996, 86.421875 * _0x22c996), _0x197f29['closePath'](), fill_path(_0x197f29, _0x4a1217[0x1], _0x4a1217[0x2], 0x4 * _0x22c996), _0x197f29['beginPath'](), _0x197f29['lineCap'] = 'round', _0x197f29['lineJoin'] = 'round', _0x197f29['moveTo'](61.5 * _0x22c996, 78.421875 * _0x22c996), _0x197f29['bezierCurveTo'](57.5 * _0x22c996, 73.421875 * _0x22c996, 51.5 * _0x22c996, 66.421875 * _0x22c996, 45.5 * _0x22c996, 68.421875 * _0x22c996), _0x197f29['bezierCurveTo'](32.5 * _0x22c996, 73.421875 * _0x22c996, 38.5 * _0x22c996, 75.421875 * _0x22c996, 46.5 * _0x22c996, 81.421875 * _0x22c996), _0x197f29['bezierCurveTo'](51.5 * _0x22c996, 84.921875 * _0x22c996, 51.5 * _0x22c996, 84.921875 * _0x22c996, 56.5 * _0x22c996, 88.421875 * _0x22c996), _0x197f29['closePath'](), fill_path(_0x197f29, _0x4a1217[0x1], _0x4a1217[0x2], 0x4 * _0x22c996), _0x197f29['beginPath'](), _0x197f29['lineCap'] = 'round', _0x197f29['lineJoin'] = 'round', _0x197f29['moveTo'](116.5 * _0x22c996, 127.421875 * _0x22c996), _0x197f29['bezierCurveTo'](124.5 * _0x22c996, 108.421875 * _0x22c996, 129.5 * _0x22c996, 104.421875 * _0x22c996, 141.5 * _0x22c996, 107.421875 * _0x22c996), _0x197f29['bezierCurveTo'](156.5 * _0x22c996, 112.421875 * _0x22c996, 153.5 * _0x22c996, 113.421875 * _0x22c996, 132.5 * _0x22c996, 134.421875 * _0x22c996), _0x197f29['bezierCurveTo'](123.5 * _0x22c996, 141.921875 * _0x22c996, 123.5 * _0x22c996, 141.921875 * _0x22c996, 114.5 * _0x22c996, 149.421875 * _0x22c996), _0x197f29['closePath'](), fill_path(_0x197f29, _0x4a1217[0x1], _0x4a1217[0x2], 0x4 * _0x22c996), _0x197f29['beginPath'](), _0x197f29['lineCap'] = 'round', _0x197f29['lineJoin'] = 'round', _0x197f29['moveTo'](41.5 * _0x22c996, 134.421875 * _0x22c996), _0x197f29['bezierCurveTo'](30.5 * _0x22c996, 119.421875 * _0x22c996, 25.5 * _0x22c996, 111.421875 * _0x22c996, 12.5 * _0x22c996, 115.421875 * _0x22c996), _0x197f29['bezierCurveTo'](4.5 * _0x22c996, 120.421875 * _0x22c996, 4.5 * _0x22c996, 121.421875 * _0x22c996, 26.5 * _0x22c996, 142.421875 * _0x22c996), _0x197f29['bezierCurveTo'](0x23 * _0x22c996, 149.921875 * _0x22c996, 0x23 * _0x22c996, 149.921875 * _0x22c996, 43.5 * _0x22c996, 157.421875 * _0x22c996), _0x197f29['closePath'](), fill_path(_0x197f29, _0x4a1217[0x1], _0x4a1217[0x2], 0x4 * _0x22c996), _0x197f29['beginPath'](), _0x197f29['lineCap'] = 'round', _0x197f29['lineJoin'] = 'round', _0x197f29['moveTo'](78.5 * _0x22c996, 51.921875 * _0x22c996), _0x197f29['bezierCurveTo'](99.5 * _0x22c996, 75.921875 * _0x22c996, 110.5 * _0x22c996, 96.921875 * _0x22c996, 118.5 * _0x22c996, 120.921875 * _0x22c996), _0x197f29['bezierCurveTo'](121.5 * _0x22c996, 140.921875 * _0x22c996, 107.5 * _0x22c996, 179.921875 * _0x22c996, 75.5 * _0x22c996, 183.921875 * _0x22c996), _0x197f29['bezierCurveTo'](30.5 * _0x22c996, 169.921875 * _0x22c996, 37.5 * _0x22c996, 131.921875 * _0x22c996, 34.5 * _0x22c996, 120.921875 * _0x22c996), _0x197f29['bezierCurveTo'](41.5 * _0x22c996, 89.921875 * _0x22c996, 61.5 * _0x22c996, 67.921875 * _0x22c996, 78.5 * _0x22c996, 51.921875 * _0x22c996), _0x197f29['closePath'](), fill_path(_0x197f29, _0x4a1217[0x3], _0x4a1217[0x2], 0x4 * _0x22c996), circle(_0x197f29, 108.5 * _0x22c996, 148.421875 * _0x22c996, 0x9 * _0x22c996), fill_path(_0x197f29, _0x4a1217[0x5]), circle(_0x197f29, 106.5 * _0x22c996, 144.421875 * _0x22c996, 0x3 * _0x22c996), fill_path(_0x197f29, _0x4a1217[0x6]), circle(_0x197f29, 46.5 * _0x22c996, 148.421875 * _0x22c996, 0x9 * _0x22c996), fill_path(_0x197f29, _0x4a1217[0x5]), circle(_0x197f29, 44.5 * _0x22c996, 144.421875 * _0x22c996, 0x3 * _0x22c996), fill_path(_0x197f29, _0x4a1217[0x6]), _0x197f29['beginPath'](), _0x197f29['lineCap'] = 'round', _0x197f29['lineJoin'] = 'round', _0x197f29['moveTo'](116.5 * _0x22c996, 114.421875 * _0x22c996), _0x197f29['bezierCurveTo'](121.5 * _0x22c996, 137.421875 * _0x22c996, 118.5 * _0x22c996, 133.421875 * _0x22c996, 108.5 * _0x22c996, 139.421875 * _0x22c996), _0x197f29['bezierCurveTo'](94.5 * _0x22c996, 146.421875 * _0x22c996, 96.5 * _0x22c996, 148.421875 * _0x22c996, 95.5 * _0x22c996, 152.421875 * _0x22c996), fill_path(_0x197f29, _0x4a1217[0x3], _0x4a1217[0x2], 0x4 * _0x22c996), _0x197f29['beginPath'](), _0x197f29['translate'](0x0, -0x2 * _0x22c996), _0x197f29['lineCap'] = 'round', _0x197f29['lineJoin'] = 'round', _0x197f29['moveTo'](35.5 * _0x22c996, 131.421875 * _0x22c996), _0x197f29['bezierCurveTo'](36.5 * _0x22c996, 140.421875 * _0x22c996, 39.5 * _0x22c996, 140.421875 * _0x22c996, 49.5 * _0x22c996, 143.421875 * _0x22c996), _0x197f29['bezierCurveTo'](59.5 * _0x22c996, 149.421875 * _0x22c996, 57.5 * _0x22c996, 151.421875 * _0x22c996, 59.5 * _0x22c996, 155.421875 * _0x22c996), fill_path(_0x197f29, _0x4a1217[0x3], _0x4a1217[0x2], 0x4 * _0x22c996), _0x197f29['beginPath'](), _0x197f29['lineCap'] = 'round', _0x197f29['lineJoin'] = 'round', _0x197f29['moveTo'](84.5 * _0x22c996, 57.421875 * _0x22c996), _0x197f29['bezierCurveTo'](101.5 * _0x22c996, 120.421875 * _0x22c996, 92.5 * _0x22c996, 127.421875 * _0x22c996, 78.5 * _0x22c996, 134.421875 * _0x22c996), _0x197f29['bezierCurveTo'](51.5 * _0x22c996, 131.421875 * _0x22c996, 63.5 * _0x22c996, 102.421875 * _0x22c996, 70.5 * _0x22c996, 59.421875 * _0x22c996), _0x197f29['bezierCurveTo'](0x4b * _0x22c996, 55.421875 * _0x22c996, 78.5 * _0x22c996, 52.421875 * _0x22c996, 79.5 * _0x22c996, 51.421875 * _0x22c996), _0x197f29['closePath'](), fill_path(_0x197f29, _0x4a1217[0x4]), _0x197f29['beginPath'](), _0x197f29['lineCap'] = 'round', _0x197f29['lineJoin'] = 'round', _0x197f29['moveTo'](79.5 * _0x22c996, 61.421875 * _0x22c996), _0x197f29['bezierCurveTo'](88.5 * _0x22c996, 31.421875 * _0x22c996, 81.5 * _0x22c996, 16.421875 * _0x22c996, 75.5 * _0x22c996, 7.421875 * _0x22c996), _0x197f29['bezierCurveTo'](77.5 * _0x22c996, 28.421875 * _0x22c996, 77.5 * _0x22c996, 37.421875 * _0x22c996, 68.5 * _0x22c996, 42.421875 * _0x22c996), _0x197f29['bezierCurveTo'](79.5 * _0x22c996, 57.421875 * _0x22c996, 79.5 * _0x22c996, 58.421875 * _0x22c996, 80.5 * _0x22c996, 61.421875 * _0x22c996), _0x197f29['closePath'](), fill_path(_0x197f29, _0x4a1217[0x3], _0x4a1217[0x2], 0x4 * _0x22c996), _0x197f29['beginPath'](), _0x197f29['lineCap'] = 'round', _0x197f29['lineJoin'] = 'round', _0x197f29['moveTo'](72.5 * _0x22c996, 72.421875 * _0x22c996), _0x197f29['bezierCurveTo'](76.5 * _0x22c996, 79.421875 * _0x22c996, 79.5 * _0x22c996, 80.421875 * _0x22c996, 83.5 * _0x22c996, 73.421875 * _0x22c996), _0x197f29['bezierCurveTo'](80.5 * _0x22c996, 96.921875 * _0x22c996, 79.5 * _0x22c996, 114.421875 * _0x22c996, 77.5 * _0x22c996, 120.421875 * _0x22c996), _0x197f29['closePath'](), fill_path(_0x197f29, _0x4a1217[0x3], _0x4a1217[0x2], 0x4 * _0x22c996), _0x197f29['beginPath'](), _0x197f29['lineCap'] = 'round', _0x197f29['lineJoin'] = 'round', _0x197f29['moveTo'](87.5 * _0x22c996, 154.421875 * _0x22c996), _0x197f29['bezierCurveTo'](93.5 * _0x22c996, 163.921875 * _0x22c996, 93.5 * _0x22c996, 163.921875 * _0x22c996, 99.5 * _0x22c996, 173.421875 * _0x22c996), _0x197f29['bezierCurveTo'](0x5f * _0x22c996, 177.421875 * _0x22c996, 0x5f * _0x22c996, 177.421875 * _0x22c996, 90.5 * _0x22c996, 181.421875 * _0x22c996), _0x197f29['bezierCurveTo'](0x59 * _0x22c996, 167.921875 * _0x22c996, 0x59 * _0x22c996, 167.921875 * _0x22c996, 87.5 * _0x22c996, 154.421875 * _0x22c996), _0x197f29['closePath'](), fill_path(_0x197f29, _0x4a1217[0x6], _0x4a1217[0x7], 0x2 * _0x22c996), _0x197f29['beginPath'](), _0x197f29['lineCap'] = 'round', _0x197f29['lineJoin'] = 'round', _0x197f29['moveTo'](81.5 * _0x22c996, 164.421875 * _0x22c996), _0x197f29['bezierCurveTo'](0x54 * _0x22c996, 172.921875 * _0x22c996, 0x54 * _0x22c996, 172.921875 * _0x22c996, 86.5 * _0x22c996, 181.421875 * _0x22c996), _0x197f29['bezierCurveTo'](82.5 * _0x22c996, 182.421875 * _0x22c996, 82.5 * _0x22c996, 182.421875 * _0x22c996, 78.5 * _0x22c996, 183.421875 * _0x22c996), _0x197f29['closePath'](), fill_path(_0x197f29, _0x4a1217[0x6], _0x4a1217[0x7], 0x2 * _0x22c996), _0x197f29['beginPath'](), _0x197f29['lineCap'] = 'round', _0x197f29['lineJoin'] = 'round', _0x197f29['moveTo'](72.5 * _0x22c996, 164.421875 * _0x22c996), _0x197f29['bezierCurveTo'](73.5 * _0x22c996, 173.921875 * _0x22c996, 73.5 * _0x22c996, 173.921875 * _0x22c996, 74.5 * _0x22c996, 183.421875 * _0x22c996), _0x197f29['bezierCurveTo'](70.5 * _0x22c996, 182.921875 * _0x22c996, 70.5 * _0x22c996, 182.921875 * _0x22c996, 66.5 * _0x22c996, 182.421875 * _0x22c996), _0x197f29['closePath'](), fill_path(_0x197f29, _0x4a1217[0x6], _0x4a1217[0x7], 0x2 * _0x22c996), _0x197f29['beginPath'](), _0x197f29['lineCap'] = 'round', _0x197f29['lineJoin'] = 'round', _0x197f29['moveTo'](65.5 * _0x22c996, 156.421875 * _0x22c996), _0x197f29['bezierCurveTo'](0x41 * _0x22c996, 168.421875 * _0x22c996, 0x41 * _0x22c996, 168.421875 * _0x22c996, 64.5 * _0x22c996, 180.421875 * _0x22c996), _0x197f29['bezierCurveTo'](58.5 * _0x22c996, 177.421875 * _0x22c996, 58.5 * _0x22c996, 177.421875 * _0x22c996, 52.5 * _0x22c996, 174.421875 * _0x22c996), _0x197f29['closePath'](), fill_path(_0x197f29, _0x4a1217[0x6], _0x4a1217[0x7], 0x2 * _0x22c996), _0x197f29['beginPath'](), _0x197f29['lineCap'] = 'round', _0x197f29['lineJoin'] = 'round', _0x197f29['moveTo'](42.5 * _0x22c996, 163.421875 * _0x22c996), _0x197f29['bezierCurveTo'](62.5 * _0x22c996, 185.421875 * _0x22c996, 86.5 * _0x22c996, 186.421875 * _0x22c996, 111.5 * _0x22c996, 165.421875 * _0x22c996), _0x197f29['bezierCurveTo'](107.5 * _0x22c996, 176.421875 * _0x22c996, 95.5 * _0x22c996, 187.421875 * _0x22c996, 75.5 * _0x22c996, 188.421875 * _0x22c996), _0x197f29['bezierCurveTo'](53.5 * _0x22c996, 188.421875 * _0x22c996, 43.5 * _0x22c996, 171.421875 * _0x22c996, 42.5 * _0x22c996, 164.421875 * _0x22c996), _0x197f29['closePath'](), fill_path(_0x197f29, _0x4a1217[0x3], _0x4a1217[0x2], 0x4 * _0x22c996), _0x5173aa;
}

function create_hurt_pirahna(_0x4488d0, _0x5596e0) {
    var _0x109cf8 = document['createElement']('canvas'),
        _0xa617e2 = _0x109cf8['getContext']('2d');
    return _0x109cf8['width'] = 0x9e * _0x4488d0, _0x109cf8['height'] = 0xc9 * _0x4488d0, _0xa617e2['beginPath'](), _0xa617e2['lineCap'] = 'round', _0xa617e2['lineJoin'] = 'round', _0xa617e2['moveTo'](96.5 * _0x4488d0, 76.421875 * _0x4488d0), _0xa617e2['bezierCurveTo'](100.5 * _0x4488d0, 64.421875 * _0x4488d0, 103.5 * _0x4488d0, 62.421875 * _0x4488d0, 110.5 * _0x4488d0, 65.421875 * _0x4488d0), _0xa617e2['bezierCurveTo'](116.5 * _0x4488d0, 66.421875 * _0x4488d0, 117.5 * _0x4488d0, 67.421875 * _0x4488d0, 112.5 * _0x4488d0, 73.421875 * _0x4488d0), _0xa617e2['bezierCurveTo'](0x6b * _0x4488d0, 79.921875 * _0x4488d0, 0x6b * _0x4488d0, 79.921875 * _0x4488d0, 101.5 * _0x4488d0, 86.421875 * _0x4488d0), _0xa617e2['closePath'](), fill_path(_0xa617e2, _0x5596e0[0x0], _0x5596e0[0x0], 0xa * _0x4488d0), _0xa617e2['beginPath'](), _0xa617e2['lineCap'] = 'round', _0xa617e2['lineJoin'] = 'round', _0xa617e2['moveTo'](61.5 * _0x4488d0, 78.421875 * _0x4488d0), _0xa617e2['bezierCurveTo'](57.5 * _0x4488d0, 73.421875 * _0x4488d0, 51.5 * _0x4488d0, 66.421875 * _0x4488d0, 45.5 * _0x4488d0, 68.421875 * _0x4488d0), _0xa617e2['bezierCurveTo'](32.5 * _0x4488d0, 73.421875 * _0x4488d0, 38.5 * _0x4488d0, 75.421875 * _0x4488d0, 46.5 * _0x4488d0, 81.421875 * _0x4488d0), _0xa617e2['bezierCurveTo'](51.5 * _0x4488d0, 84.921875 * _0x4488d0, 51.5 * _0x4488d0, 84.921875 * _0x4488d0, 56.5 * _0x4488d0, 88.421875 * _0x4488d0), _0xa617e2['closePath'](), fill_path(_0xa617e2, _0x5596e0[0x0], _0x5596e0[0x0], 0xa * _0x4488d0), _0xa617e2['beginPath'](), _0xa617e2['lineCap'] = 'round', _0xa617e2['lineJoin'] = 'round', _0xa617e2['moveTo'](116.5 * _0x4488d0, 127.421875 * _0x4488d0), _0xa617e2['bezierCurveTo'](124.5 * _0x4488d0, 108.421875 * _0x4488d0, 129.5 * _0x4488d0, 104.421875 * _0x4488d0, 141.5 * _0x4488d0, 107.421875 * _0x4488d0), _0xa617e2['bezierCurveTo'](156.5 * _0x4488d0, 112.421875 * _0x4488d0, 153.5 * _0x4488d0, 113.421875 * _0x4488d0, 132.5 * _0x4488d0, 134.421875 * _0x4488d0), _0xa617e2['bezierCurveTo'](123.5 * _0x4488d0, 141.921875 * _0x4488d0, 123.5 * _0x4488d0, 141.921875 * _0x4488d0, 114.5 * _0x4488d0, 149.421875 * _0x4488d0), _0xa617e2['closePath'](), fill_path(_0xa617e2, _0x5596e0[0x0], _0x5596e0[0x0], 0xa * _0x4488d0), _0xa617e2['beginPath'](), _0xa617e2['lineCap'] = 'round', _0xa617e2['lineJoin'] = 'round', _0xa617e2['moveTo'](41.5 * _0x4488d0, 134.421875 * _0x4488d0), _0xa617e2['bezierCurveTo'](30.5 * _0x4488d0, 119.421875 * _0x4488d0, 25.5 * _0x4488d0, 111.421875 * _0x4488d0, 12.5 * _0x4488d0, 115.421875 * _0x4488d0), _0xa617e2['bezierCurveTo'](4.5 * _0x4488d0, 120.421875 * _0x4488d0, 4.5 * _0x4488d0, 121.421875 * _0x4488d0, 26.5 * _0x4488d0, 142.421875 * _0x4488d0), _0xa617e2['bezierCurveTo'](0x23 * _0x4488d0, 149.921875 * _0x4488d0, 0x23 * _0x4488d0, 149.921875 * _0x4488d0, 43.5 * _0x4488d0, 157.421875 * _0x4488d0), _0xa617e2['closePath'](), fill_path(_0xa617e2, _0x5596e0[0x0], _0x5596e0[0x0], 0xa * _0x4488d0), _0xa617e2['beginPath'](), _0xa617e2['lineCap'] = 'round', _0xa617e2['lineJoin'] = 'round', _0xa617e2['moveTo'](78.5 * _0x4488d0, 51.921875 * _0x4488d0), _0xa617e2['bezierCurveTo'](99.5 * _0x4488d0, 75.921875 * _0x4488d0, 110.5 * _0x4488d0, 96.921875 * _0x4488d0, 118.5 * _0x4488d0, 120.921875 * _0x4488d0), _0xa617e2['bezierCurveTo'](121.5 * _0x4488d0, 140.921875 * _0x4488d0, 107.5 * _0x4488d0, 179.921875 * _0x4488d0, 75.5 * _0x4488d0, 183.921875 * _0x4488d0), _0xa617e2['bezierCurveTo'](30.5 * _0x4488d0, 169.921875 * _0x4488d0, 37.5 * _0x4488d0, 131.921875 * _0x4488d0, 34.5 * _0x4488d0, 120.921875 * _0x4488d0), _0xa617e2['bezierCurveTo'](41.5 * _0x4488d0, 89.921875 * _0x4488d0, 61.5 * _0x4488d0, 67.921875 * _0x4488d0, 78.5 * _0x4488d0, 51.921875 * _0x4488d0), _0xa617e2['closePath'](), fill_path(_0xa617e2, _0x5596e0[0x0], _0x5596e0[0x0], 0xa * _0x4488d0), _0xa617e2['beginPath'](), _0xa617e2['lineCap'] = 'round', _0xa617e2['lineJoin'] = 'round', _0xa617e2['moveTo'](72.5 * _0x4488d0, 72.421875 * _0x4488d0), _0xa617e2['bezierCurveTo'](76.5 * _0x4488d0, 79.421875 * _0x4488d0, 79.5 * _0x4488d0, 80.421875 * _0x4488d0, 83.5 * _0x4488d0, 73.421875 * _0x4488d0), _0xa617e2['bezierCurveTo'](80.5 * _0x4488d0, 96.921875 * _0x4488d0, 79.5 * _0x4488d0, 114.421875 * _0x4488d0, 77.5 * _0x4488d0, 120.421875 * _0x4488d0), _0xa617e2['closePath'](), fill_path(_0xa617e2, _0x5596e0[0x0], _0x5596e0[0x0], 0xa * _0x4488d0), _0xa617e2['beginPath'](), _0xa617e2['lineCap'] = 'round', _0xa617e2['lineJoin'] = 'round', _0xa617e2['moveTo'](42.5 * _0x4488d0, 163.421875 * _0x4488d0), _0xa617e2['bezierCurveTo'](62.5 * _0x4488d0, 185.421875 * _0x4488d0, 86.5 * _0x4488d0, 186.421875 * _0x4488d0, 111.5 * _0x4488d0, 165.421875 * _0x4488d0), _0xa617e2['bezierCurveTo'](107.5 * _0x4488d0, 176.421875 * _0x4488d0, 95.5 * _0x4488d0, 187.421875 * _0x4488d0, 75.5 * _0x4488d0, 188.421875 * _0x4488d0), _0xa617e2['bezierCurveTo'](53.5 * _0x4488d0, 188.421875 * _0x4488d0, 43.5 * _0x4488d0, 171.421875 * _0x4488d0, 42.5 * _0x4488d0, 164.421875 * _0x4488d0), _0xa617e2['closePath'](), fill_path(_0xa617e2, _0x5596e0[0x0], _0x5596e0[0x0], 0xa * _0x4488d0), _0xa617e2['beginPath'](), _0xa617e2['lineCap'] = 'round', _0xa617e2['lineJoin'] = 'round', _0xa617e2['moveTo'](79.5 * _0x4488d0, 61.421875 * _0x4488d0), _0xa617e2['bezierCurveTo'](88.5 * _0x4488d0, 31.421875 * _0x4488d0, 81.5 * _0x4488d0, 16.421875 * _0x4488d0, 75.5 * _0x4488d0, 7.421875 * _0x4488d0), _0xa617e2['bezierCurveTo'](77.5 * _0x4488d0, 28.421875 * _0x4488d0, 77.5 * _0x4488d0, 37.421875 * _0x4488d0, 68.5 * _0x4488d0, 42.421875 * _0x4488d0), _0xa617e2['bezierCurveTo'](79.5 * _0x4488d0, 57.421875 * _0x4488d0, 79.5 * _0x4488d0, 58.421875 * _0x4488d0, 80.5 * _0x4488d0, 61.421875 * _0x4488d0), _0xa617e2['closePath'](), fill_path(_0xa617e2, _0x5596e0[0x0], _0x5596e0[0x0], 0xa * _0x4488d0), _0xa617e2['beginPath'](), _0xa617e2['lineCap'] = 'round', _0xa617e2['lineJoin'] = 'round', _0xa617e2['moveTo'](72.5 * _0x4488d0, 72.421875 * _0x4488d0), _0xa617e2['bezierCurveTo'](76.5 * _0x4488d0, 79.421875 * _0x4488d0, 79.5 * _0x4488d0, 80.421875 * _0x4488d0, 83.5 * _0x4488d0, 73.421875 * _0x4488d0), _0xa617e2['bezierCurveTo'](80.5 * _0x4488d0, 96.921875 * _0x4488d0, 79.5 * _0x4488d0, 114.421875 * _0x4488d0, 77.5 * _0x4488d0, 120.421875 * _0x4488d0), _0xa617e2['closePath'](), fill_path(_0xa617e2, _0x5596e0[0x0], _0x5596e0[0x0], 0xa * _0x4488d0), _0x109cf8;
}

function create_flour(_0x3ec64c, _0x4fff0e, _0x4e8d01) {
    var _0x43fd3d = document['createElement']('canvas'),
        _0x1edebf = _0x43fd3d['getContext']('2d');
    return _0x43fd3d['width'] = 0x190 * _0x3ec64c, _0x43fd3d['height'] = 0xaa * _0x3ec64c, _0x1edebf['translate'](0x0, -0xaa * _0x3ec64c), _0x1edebf['beginPath'](), _0x1edebf['lineCap'] = 'round', _0x1edebf['lineJoin'] = 'round', _0x1edebf['moveTo'](159.5 * _0x3ec64c, 322.0625 * _0x3ec64c), _0x1edebf['bezierCurveTo'](240.5 * _0x3ec64c, 293.0625 * _0x3ec64c, 240.5 * _0x3ec64c, 293.0625 * _0x3ec64c, 321.5 * _0x3ec64c, 264.0625 * _0x3ec64c), _0x1edebf['bezierCurveTo'](276.5 * _0x3ec64c, 230.0625 * _0x3ec64c, 276.5 * _0x3ec64c, 230.0625 * _0x3ec64c, 231.5 * _0x3ec64c, 196.0625 * _0x3ec64c), _0x1edebf['bezierCurveTo'](158.5 * _0x3ec64c, 221.5625 * _0x3ec64c, 158.5 * _0x3ec64c, 221.5625 * _0x3ec64c, 85.5 * _0x3ec64c, 247.0625 * _0x3ec64c), _0x1edebf['closePath'](), fill_path(_0x1edebf, _0x4e8d01[0x0], _0x4e8d01[0x1], 0xc * _0x3ec64c), _0x1edebf['beginPath'](), _0x1edebf['lineCap'] = 'round', _0x1edebf['lineJoin'] = 'round', _0x1edebf['moveTo'](212.5 * _0x3ec64c, 270.0625 * _0x3ec64c), _0x1edebf['bezierCurveTo'](0xeb * _0x3ec64c, 261.5625 * _0x3ec64c, 0xeb * _0x3ec64c, 261.5625 * _0x3ec64c, 257.5 * _0x3ec64c, 253.0625 * _0x3ec64c), _0x1edebf['closePath'](), fill_path(_0x1edebf, undefined, _0x4e8d01[0x0], 0xc * _0x3ec64c), _0x1edebf['beginPath'](), _0x1edebf['lineCap'] = 'round', _0x1edebf['lineJoin'] = 'round', _0x1edebf['moveTo'](193.5 * _0x3ec64c, 226.0625 * _0x3ec64c), _0x1edebf['bezierCurveTo'](204.5 * _0x3ec64c, 242.0625 * _0x3ec64c, 242.5 * _0x3ec64c, 237.0625 * _0x3ec64c, 251.5 * _0x3ec64c, 225.0625 * _0x3ec64c), _0x1edebf['bezierCurveTo'](246.5 * _0x3ec64c, 195.0625 * _0x3ec64c, 205.5 * _0x3ec64c, 190.0625 * _0x3ec64c, 193.5 * _0x3ec64c, 227.0625 * _0x3ec64c), _0x1edebf['closePath'](), fill_path(_0x1edebf, _0x4e8d01[0x2], _0x4e8d01[0x3], 0xc * _0x3ec64c), _0x1edebf['beginPath'](), _0x1edebf['lineCap'] = 'round', _0x1edebf['lineJoin'] = 'round', _0x1edebf['moveTo'](164.5 * _0x3ec64c, 245.0625 * _0x3ec64c), _0x1edebf['bezierCurveTo'](182.5 * _0x3ec64c, 264.0625 * _0x3ec64c, 252.5 * _0x3ec64c, 258.0625 * _0x3ec64c, 276.5 * _0x3ec64c, 244.0625 * _0x3ec64c), _0x1edebf['bezierCurveTo'](265.5 * _0x3ec64c, 226.0625 * _0x3ec64c, 244.5 * _0x3ec64c, 231.0625 * _0x3ec64c, 229.5 * _0x3ec64c, 230.0625 * _0x3ec64c), _0x1edebf['bezierCurveTo'](205.5 * _0x3ec64c, 227.0625 * _0x3ec64c, 175.5 * _0x3ec64c, 202.0625 * _0x3ec64c, 162.5 * _0x3ec64c, 244.0625 * _0x3ec64c), _0x1edebf['closePath'](), fill_path(_0x1edebf, _0x4e8d01[0x2], _0x4e8d01[0x3], 0xc * _0x3ec64c), _0x1edebf['beginPath'](), _0x1edebf['lineCap'] = 'round', _0x1edebf['lineJoin'] = 'round', _0x1edebf['moveTo'](115.5 * _0x3ec64c, 260.0625 * _0x3ec64c), _0x1edebf['bezierCurveTo'](134.5 * _0x3ec64c, 279.0625 * _0x3ec64c, 170.5 * _0x3ec64c, 275.0625 * _0x3ec64c, 191.5 * _0x3ec64c, 257.0625 * _0x3ec64c), _0x1edebf['bezierCurveTo'](174.5 * _0x3ec64c, 208.0625 * _0x3ec64c, 142.5 * _0x3ec64c, 197.0625 * _0x3ec64c, 116.5 * _0x3ec64c, 259.0625 * _0x3ec64c), _0x1edebf['closePath'](), fill_path(_0x1edebf, _0x4e8d01[0x2], _0x4e8d01[0x3], 0xc * _0x3ec64c), _0x1edebf['beginPath'](), _0x1edebf['lineCap'] = 'round', _0x1edebf['lineJoin'] = 'round', _0x1edebf['moveTo'](152.5 * _0x3ec64c, 278.0625 * _0x3ec64c), _0x1edebf['bezierCurveTo'](165.5 * _0x3ec64c, 294.0625 * _0x3ec64c, 200.5 * _0x3ec64c, 287.0625 * _0x3ec64c, 216.5 * _0x3ec64c, 278.0625 * _0x3ec64c), _0x1edebf['bezierCurveTo'](206.5 * _0x3ec64c, 247.0625 * _0x3ec64c, 173.5 * _0x3ec64c, 233.0625 * _0x3ec64c, 153.5 * _0x3ec64c, 276.0625 * _0x3ec64c), _0x1edebf['closePath'](), fill_path(_0x1edebf, _0x4e8d01[0x2], _0x4e8d01[0x3], 0xc * _0x3ec64c), _0x43fd3d;
}

function create_leaderboard_mobile(_0x10060c) {
    var _0x21239b = document['createElement']('canvas'),
        _0x423ae5 = _0x21239b['getContext']('2d'),
        _0x414d7d = 0xc8 * _0x10060c,
        _0x248581 = 0xb4 * _0x10060c,
        _0x402679 = 0x8 * _0x10060c;
    _0x21239b['width'] = _0x414d7d, _0x21239b['height'] = _0x248581, _0x423ae5['beginPath'](), round_rect(_0x423ae5, 0x0, 0x0, _0x414d7d, _0x248581 - _0x402679, _0x402679), _0x423ae5['globalAlpha'] = 0.8, fill_path(_0x423ae5, '#1D6055'), _0x423ae5['globalAlpha'] = 0x1;
    var _0x1a27a5 = create_text(_0x10060c, 'Leaderboard', 0x19, '#FFF');
    return _0x423ae5['drawImage'](_0x1a27a5, (_0x414d7d - _0x1a27a5['width']) / 0x2, _0x10060c * 0x5), _0x21239b;
}

function create_leaderboard(_0x47e4be) {
    var _0x3d6356 = document['createElement']('canvas'),
        _0x20fce6 = _0x3d6356['getContext']('2d'),
        _0x141c59 = 0xc8 * _0x47e4be,
        _0x226c89 = 0x10e * _0x47e4be,
        _0x2cb9a6 = 0x8 * _0x47e4be;
    _0x3d6356['width'] = _0x141c59, _0x3d6356['height'] = _0x226c89 + 0x14, _0x20fce6['beginPath'](), round_rect(_0x20fce6, 0x0, 0x0, _0x141c59, _0x226c89 - _0x2cb9a6, _0x2cb9a6), _0x20fce6['globalAlpha'] = 0.5, fill_path(_0x20fce6, '#1D6055'), _0x20fce6['globalAlpha'] = 0x1;
    var _0x334384 = create_text(_0x47e4be, 'Leaderboard', 0x19, '#FFF');
    return _0x20fce6['drawImage'](_0x334384, (_0x141c59 - _0x334384['width']) / 0x2, _0x47e4be * 0x5), _0x3d6356;
}

function create_pumpkin(_0x1edf91, _0x3daac, _0xeb4e10) {
    var _0x461e81 = document['createElement']('canvas'),
        _0x4f59b4 = _0x461e81['getContext']('2d');
    return _0x461e81['width'] = 0x110 * _0x1edf91, _0x461e81['height'] = 0x108 * _0x1edf91, _0x4f59b4['translate'](0x0, 0x14 * _0x1edf91), _0x4f59b4['globalAlpha'] = _0x3daac ? 0.5 : 0x1, _0x4f59b4['beginPath'](), _0x4f59b4['lineCap'] = 'round', _0x4f59b4['lineJoin'] = 'round', _0x4f59b4['moveTo'](56.999969482421875 * _0x1edf91, 84.517333984375 * _0x1edf91), _0x4f59b4['bezierCurveTo'](61.999969482421875 * _0x1edf91, 58.517333984375 * _0x1edf91, 79.99996948242188 * _0x1edf91, 50.517333984375 * _0x1edf91, 102.99996948242188 * _0x1edf91, 50.517333984375 * _0x1edf91), _0x4f59b4['bezierCurveTo'](119.99996948242188 * _0x1edf91, 26.517333984375 * _0x1edf91, 137.99996948242188 * _0x1edf91, 32.517333984375 * _0x1edf91, 156.99996948242188 * _0x1edf91, 44.517333984375 * _0x1edf91), _0x4f59b4['bezierCurveTo'](187.99996948242188 * _0x1edf91, 42.517333984375 * _0x1edf91, 195.99996948242188 * _0x1edf91, 50.517333984375 * _0x1edf91, 202.99996948242188 * _0x1edf91, 77.517333984375 * _0x1edf91), _0x4f59b4['bezierCurveTo'](229.99996948242188 * _0x1edf91, 80.517333984375 * _0x1edf91, 231.99996948242188 * _0x1edf91, 96.517333984375 * _0x1edf91, 229.99996948242188 * _0x1edf91, 118.517333984375 * _0x1edf91), _0x4f59b4['bezierCurveTo'](241.99996948242188 * _0x1edf91, 147.517333984375 * _0x1edf91, 236.99996948242188 * _0x1edf91, 148.517333984375 * _0x1edf91, 220.99996948242188 * _0x1edf91, 165.517333984375 * _0x1edf91), _0x4f59b4['bezierCurveTo'](222.99996948242188 * _0x1edf91, 192.517333984375 * _0x1edf91, 209.99996948242188 * _0x1edf91, 212.517333984375 * _0x1edf91, 177.99996948242188 * _0x1edf91, 213.517333984375 * _0x1edf91), _0x4f59b4['bezierCurveTo'](159.99996948242188 * _0x1edf91, 234.517333984375 * _0x1edf91, 141.99996948242188 * _0x1edf91, 234.517333984375 * _0x1edf91, 116.99996948242188 * _0x1edf91, 222.517333984375 * _0x1edf91), _0x4f59b4['bezierCurveTo'](72.99996948242188 * _0x1edf91, 226.517333984375 * _0x1edf91, 66.99996948242188 * _0x1edf91, 207.517333984375 * _0x1edf91, 65.99996948242188 * _0x1edf91, 190.517333984375 * _0x1edf91), _0x4f59b4['bezierCurveTo'](35.999969482421875 * _0x1edf91, 180.517333984375 * _0x1edf91, 30.999969482421875 * _0x1edf91, 162.517333984375 * _0x1edf91, 39.999969482421875 * _0x1edf91, 135.517333984375 * _0x1edf91), _0x4f59b4['bezierCurveTo'](23.999969482421875 * _0x1edf91, 110.517333984375 * _0x1edf91, 43.999969482421875 * _0x1edf91, 90.517333984375 * _0x1edf91, 55.999969482421875 * _0x1edf91, 85.517333984375 * _0x1edf91), _0x4f59b4['closePath'](), fill_path(_0x4f59b4, _0xeb4e10[0x0]), _0x4f59b4['translate'](0x0, -0x14 * _0x1edf91), _0x4f59b4['globalAlpha'] = 0x1, _0x4f59b4['beginPath'](), _0x4f59b4['lineCap'] = 'round', _0x4f59b4['lineJoin'] = 'round', _0x4f59b4['moveTo'](56.999969482421875 * _0x1edf91, 84.517333984375 * _0x1edf91), _0x4f59b4['bezierCurveTo'](61.999969482421875 * _0x1edf91, 58.517333984375 * _0x1edf91, 79.99996948242188 * _0x1edf91, 50.517333984375 * _0x1edf91, 102.99996948242188 * _0x1edf91, 50.517333984375 * _0x1edf91), _0x4f59b4['bezierCurveTo'](119.99996948242188 * _0x1edf91, 26.517333984375 * _0x1edf91, 137.99996948242188 * _0x1edf91, 32.517333984375 * _0x1edf91, 156.99996948242188 * _0x1edf91, 44.517333984375 * _0x1edf91), _0x4f59b4['bezierCurveTo'](187.99996948242188 * _0x1edf91, 42.517333984375 * _0x1edf91, 195.99996948242188 * _0x1edf91, 50.517333984375 * _0x1edf91, 202.99996948242188 * _0x1edf91, 77.517333984375 * _0x1edf91), _0x4f59b4['bezierCurveTo'](229.99996948242188 * _0x1edf91, 80.517333984375 * _0x1edf91, 231.99996948242188 * _0x1edf91, 96.517333984375 * _0x1edf91, 229.99996948242188 * _0x1edf91, 118.517333984375 * _0x1edf91), _0x4f59b4['bezierCurveTo'](241.99996948242188 * _0x1edf91, 147.517333984375 * _0x1edf91, 236.99996948242188 * _0x1edf91, 148.517333984375 * _0x1edf91, 220.99996948242188 * _0x1edf91, 165.517333984375 * _0x1edf91), _0x4f59b4['bezierCurveTo'](222.99996948242188 * _0x1edf91, 192.517333984375 * _0x1edf91, 209.99996948242188 * _0x1edf91, 212.517333984375 * _0x1edf91, 177.99996948242188 * _0x1edf91, 213.517333984375 * _0x1edf91), _0x4f59b4['bezierCurveTo'](159.99996948242188 * _0x1edf91, 234.517333984375 * _0x1edf91, 141.99996948242188 * _0x1edf91, 234.517333984375 * _0x1edf91, 116.99996948242188 * _0x1edf91, 222.517333984375 * _0x1edf91), _0x4f59b4['bezierCurveTo'](72.99996948242188 * _0x1edf91, 226.517333984375 * _0x1edf91, 66.99996948242188 * _0x1edf91, 207.517333984375 * _0x1edf91, 65.99996948242188 * _0x1edf91, 190.517333984375 * _0x1edf91), _0x4f59b4['bezierCurveTo'](35.999969482421875 * _0x1edf91, 180.517333984375 * _0x1edf91, 30.999969482421875 * _0x1edf91, 162.517333984375 * _0x1edf91, 39.999969482421875 * _0x1edf91, 135.517333984375 * _0x1edf91), _0x4f59b4['bezierCurveTo'](23.999969482421875 * _0x1edf91, 110.517333984375 * _0x1edf91, 43.999969482421875 * _0x1edf91, 90.517333984375 * _0x1edf91, 55.999969482421875 * _0x1edf91, 85.517333984375 * _0x1edf91), _0x4f59b4['closePath'](), fill_path(_0x4f59b4, _0xeb4e10[0x1], _0xeb4e10[0x2], 0x8 * _0x1edf91), _0x4f59b4['beginPath'](), _0x4f59b4['lineCap'] = 'round', _0x4f59b4['lineJoin'] = 'round', _0x4f59b4['moveTo'](123.99996948242188 * _0x1edf91, 116.18402099609375 * _0x1edf91), _0x4f59b4['bezierCurveTo'](115.99996948242188 * _0x1edf91, 99.18402099609375 * _0x1edf91, 109.99996948242188 * _0x1edf91, 74.18402099609375 * _0x1edf91, 109.99996948242188 * _0x1edf91, 63.18402099609375 * _0x1edf91), _0x4f59b4['bezierCurveTo'](115.99996948242188 * _0x1edf91, 69.18402099609375 * _0x1edf91, 125.99996948242188 * _0x1edf91, 87.18402099609375 * _0x1edf91, 137.99996948242188 * _0x1edf91, 112.18402099609375 * _0x1edf91), _0x4f59b4['bezierCurveTo'](142.99996948242188 * _0x1edf91, 84.18402099609375 * _0x1edf91, 143.99996948242188 * _0x1edf91, 76.18402099609375 * _0x1edf91, 153.99996948242188 * _0x1edf91, 62.18402099609375 * _0x1edf91), _0x4f59b4['bezierCurveTo'](155.99996948242188 * _0x1edf91, 79.18402099609375 * _0x1edf91, 149.99996948242188 * _0x1edf91, 110.18402099609375 * _0x1edf91, 151.99996948242188 * _0x1edf91, 117.18402099609375 * _0x1edf91), _0x4f59b4['bezierCurveTo'](162.99996948242188 * _0x1edf91, 104.18402099609375 * _0x1edf91, 180.99996948242188 * _0x1edf91, 91.18402099609375 * _0x1edf91, 191.99996948242188 * _0x1edf91, 91.18402099609375 * _0x1edf91), _0x4f59b4['bezierCurveTo'](185.99996948242188 * _0x1edf91, 102.18402099609375 * _0x1edf91, 180.99996948242188 * _0x1edf91, 106.18402099609375 * _0x1edf91, 160.99996948242188 * _0x1edf91, 124.18402099609375 * _0x1edf91), _0x4f59b4['bezierCurveTo'](190.99996948242188 * _0x1edf91, 121.18402099609375 * _0x1edf91, 199.99996948242188 * _0x1edf91, 120.18402099609375 * _0x1edf91, 207.99996948242188 * _0x1edf91, 123.18402099609375 * _0x1edf91), _0x4f59b4['bezierCurveTo'](199.99996948242188 * _0x1edf91, 129.18402099609375 * _0x1edf91, 181.99996948242188 * _0x1edf91, 132.18402099609375 * _0x1edf91, 160.99996948242188 * _0x1edf91, 135.18402099609375 * _0x1edf91), _0x4f59b4['bezierCurveTo'](179.99996948242188 * _0x1edf91, 142.18402099609375 * _0x1edf91, 193.99996948242188 * _0x1edf91, 151.18402099609375 * _0x1edf91, 196.99996948242188 * _0x1edf91, 156.18402099609375 * _0x1edf91), _0x4f59b4['bezierCurveTo'](185.99996948242188 * _0x1edf91, 156.18402099609375 * _0x1edf91, 163.99996948242188 * _0x1edf91, 149.18402099609375 * _0x1edf91, 152.99996948242188 * _0x1edf91, 147.18402099609375 * _0x1edf91), _0x4f59b4['bezierCurveTo'](157.99996948242188 * _0x1edf91, 155.18402099609375 * _0x1edf91, 165.99996948242188 * _0x1edf91, 176.18402099609375 * _0x1edf91, 169.99996948242188 * _0x1edf91, 195.18402099609375 * _0x1edf91), _0x4f59b4['bezierCurveTo'](162.99996948242188 * _0x1edf91, 190.18402099609375 * _0x1edf91, 147.99996948242188 * _0x1edf91, 167.18402099609375 * _0x1edf91, 139.99996948242188 * _0x1edf91, 153.18402099609375 * _0x1edf91), _0x4f59b4['bezierCurveTo'](137.99996948242188 * _0x1edf91, 167.18402099609375 * _0x1edf91, 126.99996948242188 * _0x1edf91, 194.18402099609375 * _0x1edf91, 119.99996948242188 * _0x1edf91, 204.18402099609375 * _0x1edf91), _0x4f59b4['bezierCurveTo'](117.99996948242188 * _0x1edf91, 186.18402099609375 * _0x1edf91, 123.99996948242188 * _0x1edf91, 165.18402099609375 * _0x1edf91, 126.99996948242188 * _0x1edf91, 149.18402099609375 * _0x1edf91), _0x4f59b4['bezierCurveTo'](110.99996948242188 * _0x1edf91, 163.18402099609375 * _0x1edf91, 103.99996948242188 * _0x1edf91, 170.18402099609375 * _0x1edf91, 82.99996948242188 * _0x1edf91, 177.18402099609375 * _0x1edf91), _0x4f59b4['bezierCurveTo'](90.99996948242188 * _0x1edf91, 162.18402099609375 * _0x1edf91, 99.99996948242188 * _0x1edf91, 153.18402099609375 * _0x1edf91, 117.99996948242188 * _0x1edf91, 140.18402099609375 * _0x1edf91), _0x4f59b4['bezierCurveTo'](97.99996948242188 * _0x1edf91, 140.18402099609375 * _0x1edf91, 83.99996948242188 * _0x1edf91, 139.18402099609375 * _0x1edf91, 65.99996948242188 * _0x1edf91, 132.18402099609375 * _0x1edf91), _0x4f59b4['bezierCurveTo'](77.99996948242188 * _0x1edf91, 127.18402099609375 * _0x1edf91, 95.99996948242188 * _0x1edf91, 127.18402099609375 * _0x1edf91, 115.99996948242188 * _0x1edf91, 127.18402099609375 * _0x1edf91), _0x4f59b4['bezierCurveTo'](91.99996948242188 * _0x1edf91, 113.18402099609375 * _0x1edf91, 84.99996948242188 * _0x1edf91, 107.18402099609375 * _0x1edf91, 76.99996948242188 * _0x1edf91, 96.18402099609375 * _0x1edf91), _0x4f59b4['bezierCurveTo'](94.99996948242188 * _0x1edf91, 99.18402099609375 * _0x1edf91, 109.99996948242188 * _0x1edf91, 109.18402099609375 * _0x1edf91, 123.99996948242188 * _0x1edf91, 116.18402099609375 * _0x1edf91), _0x4f59b4['closePath'](), fill_path(_0x4f59b4, _0xeb4e10[0x3]), _0x4f59b4['beginPath'](), _0x4f59b4['lineCap'] = 'round', _0x4f59b4['lineJoin'] = 'round', _0x4f59b4['moveTo'](131.99996948242188 * _0x1edf91, 119.18402099609375 * _0x1edf91), _0x4f59b4['bezierCurveTo'](141.99996948242188 * _0x1edf91, 119.18402099609375 * _0x1edf91, 145.99996948242188 * _0x1edf91, 116.18402099609375 * _0x1edf91, 147.99996948242188 * _0x1edf91, 109.18402099609375 * _0x1edf91), _0x4f59b4['bezierCurveTo'](151.99996948242188 * _0x1edf91, 107.18402099609375 * _0x1edf91, 159.99996948242188 * _0x1edf91, 107.18402099609375 * _0x1edf91, 156.99996948242188 * _0x1edf91, 123.18402099609375 * _0x1edf91), _0x4f59b4['bezierCurveTo'](155.99996948242188 * _0x1edf91, 140.18402099609375 * _0x1edf91, 142.99996948242188 * _0x1edf91, 149.18402099609375 * _0x1edf91, 132.99996948242188 * _0x1edf91, 147.18402099609375 * _0x1edf91), _0x4f59b4['bezierCurveTo'](119.99996948242188 * _0x1edf91, 144.18402099609375 * _0x1edf91, 113.99996948242188 * _0x1edf91, 122.18402099609375 * _0x1edf91, 131.99996948242188 * _0x1edf91, 119.18402099609375 * _0x1edf91), _0x4f59b4['closePath'](), fill_path(_0x4f59b4, _0xeb4e10[0x4], _0xeb4e10[0x5], 0x6 * _0x1edf91), _0x461e81;
}

function create_brambles(_0x1d3724, _0x9aa9ee, _0x2e9223) {
    var _0x287a75 = document['createElement']('canvas'),
        _0x18d11f = _0x287a75['getContext']('2d');
    return _0x287a75['width'] = 0xf7 * _0x1d3724, _0x287a75['height'] = 0xf7 * _0x1d3724, _0x18d11f['translate'](0x0, 0xa * _0x1d3724), _0x18d11f['globalAlpha'] = _0x9aa9ee ? 0.5 : 0x1, _0x18d11f['beginPath'](), _0x18d11f['lineCap'] = 'round', _0x18d11f['lineJoin'] = 'round', _0x18d11f['moveTo'](0x96 * _0x1d3724, 0x3e * _0x1d3724), _0x18d11f['bezierCurveTo'](151.5 * _0x1d3724, 71.5 * _0x1d3724, 0x95 * _0x1d3724, 0x46 * _0x1d3724, 0x99 * _0x1d3724, 0x51 * _0x1d3724), _0x18d11f['bezierCurveTo'](0x9e * _0x1d3724, 73.5 * _0x1d3724, 0x9e * _0x1d3724, 73.5 * _0x1d3724, 0xa3 * _0x1d3724, 0x42 * _0x1d3724), _0x18d11f['closePath'](), fill_path(_0x18d11f, _0x2e9223[0x0]), _0x18d11f['beginPath'](), _0x18d11f['lineCap'] = 'round', _0x18d11f['lineJoin'] = 'round', _0x18d11f['moveTo'](0xa4 * _0x1d3724, 0xab * _0x1d3724), _0x18d11f['bezierCurveTo'](0x95 * _0x1d3724, 0x9f * _0x1d3724, 156.5 * _0x1d3724, 0xa5 * _0x1d3724, 0x95 * _0x1d3724, 0x9f * _0x1d3724), _0x18d11f['bezierCurveTo'](0x95 * _0x1d3724, 0xa7 * _0x1d3724, 0x95 * _0x1d3724, 0xaa * _0x1d3724, 0x98 * _0x1d3724, 0xb2 * _0x1d3724), _0x18d11f['closePath'](), fill_path(_0x18d11f, _0x2e9223[0x0]), _0x18d11f['beginPath'](), _0x18d11f['lineCap'] = 'round', _0x18d11f['lineJoin'] = 'round', _0x18d11f['moveTo'](0x84 * _0x1d3724, 0x5f * _0x1d3724), _0x18d11f['bezierCurveTo'](0x9a * _0x1d3724, 0x66 * _0x1d3724, 0x9a * _0x1d3724, 0x7e * _0x1d3724, 0x89 * _0x1d3724, 0x8b * _0x1d3724), _0x18d11f['bezierCurveTo'](0x71 * _0x1d3724, 0x98 * _0x1d3724, 0x59 * _0x1d3724, 0x88 * _0x1d3724, 0x50 * _0x1d3724, 0x79 * _0x1d3724), _0x18d11f['bezierCurveTo'](0x39 * _0x1d3724, 0x59 * _0x1d3724, 0x45 * _0x1d3724, 0x3f * _0x1d3724, 0x4f * _0x1d3724, 0x34 * _0x1d3724), _0x18d11f['bezierCurveTo'](0x6e * _0x1d3724, 0x14 * _0x1d3724, 0x8b * _0x1d3724, 0x15 * _0x1d3724, 0x96 * _0x1d3724, 0x19 * _0x1d3724), _0x18d11f['bezierCurveTo'](0xc5 * _0x1d3724, 0x24 * _0x1d3724, 0xdd * _0x1d3724, 0x43 * _0x1d3724, 0xe2 * _0x1d3724, 0x5a * _0x1d3724), _0x18d11f['bezierCurveTo'](0xea * _0x1d3724, 0x86 * _0x1d3724, 0xd6 * _0x1d3724, 0xb1 * _0x1d3724, 0xc3 * _0x1d3724, 0xc5 * _0x1d3724), _0x18d11f['bezierCurveTo'](0x90 * _0x1d3724, 0xf2 * _0x1d3724, 0x4f * _0x1d3724, 0xd8 * _0x1d3724, 0x3a * _0x1d3724, 0xce * _0x1d3724), _0x18d11f['bezierCurveTo'](0xd * _0x1d3724, 0xae * _0x1d3724, 0x14 * _0x1d3724, 0x86 * _0x1d3724, 0x17 * _0x1d3724, 0x6b * _0x1d3724), _0x18d11f['bezierCurveTo'](0x1a * _0x1d3724, 0x4e * _0x1d3724, 0x21 * _0x1d3724, 0x3c * _0x1d3724, 0x26 * _0x1d3724, 0x2b * _0x1d3724), _0x18d11f['bezierCurveTo'](0x2a * _0x1d3724, 0x20 * _0x1d3724, 0x2f * _0x1d3724, 0x20 * _0x1d3724, 0x32 * _0x1d3724, 0x24 * _0x1d3724), _0x18d11f['bezierCurveTo'](0x36 * _0x1d3724, 0x25 * _0x1d3724, 0x32 * _0x1d3724, 0x34 * _0x1d3724, 0x2c * _0x1d3724, 0x57 * _0x1d3724), _0x18d11f['bezierCurveTo'](0x28 * _0x1d3724, 0x73 * _0x1d3724, 0x2e * _0x1d3724, 0x8e * _0x1d3724, 0x39 * _0x1d3724, 0x9e * _0x1d3724), _0x18d11f['bezierCurveTo'](0x4c * _0x1d3724, 0xbd * _0x1d3724, 0x81 * _0x1d3724, 0xb6 * _0x1d3724, 0x98 * _0x1d3724, 0xad * _0x1d3724), _0x18d11f['bezierCurveTo'](0xba * _0x1d3724, 0x9c * _0x1d3724, 0xbf * _0x1d3724, 0x6a * _0x1d3724, 0xb0 * _0x1d3724, 0x55 * _0x1d3724), _0x18d11f['bezierCurveTo'](0x9f * _0x1d3724, 0x3d * _0x1d3724, 0x84 * _0x1d3724, 0x3e * _0x1d3724, 0x7a * _0x1d3724, 0x42 * _0x1d3724), _0x18d11f['bezierCurveTo'](0x6c * _0x1d3724, 0x4a * _0x1d3724, 0x6c * _0x1d3724, 0x59 * _0x1d3724, 0x74 * _0x1d3724, 0x5a * _0x1d3724), _0x18d11f['bezierCurveTo'](0x7b * _0x1d3724, 0x5c * _0x1d3724, 0x82 * _0x1d3724, 0x5d * _0x1d3724, 0x83 * _0x1d3724, 0x5e * _0x1d3724), _0x18d11f['closePath'](), fill_path(_0x18d11f, _0x2e9223[0x0]), _0x18d11f['translate'](0x0, -0xa * _0x1d3724), _0x18d11f['globalAlpha'] = 0x1, _0x18d11f['beginPath'](), _0x18d11f['lineCap'] = 'round', _0x18d11f['lineJoin'] = 'round', _0x18d11f['moveTo'](0x96 * _0x1d3724, 0x3e * _0x1d3724), _0x18d11f['bezierCurveTo'](151.5 * _0x1d3724, 71.5 * _0x1d3724, 0x95 * _0x1d3724, 0x46 * _0x1d3724, 0x99 * _0x1d3724, 0x51 * _0x1d3724), _0x18d11f['bezierCurveTo'](0x9e * _0x1d3724, 73.5 * _0x1d3724, 0x9e * _0x1d3724, 73.5 * _0x1d3724, 0xa3 * _0x1d3724, 0x42 * _0x1d3724), _0x18d11f['closePath'](), fill_path(_0x18d11f, _0x2e9223[0x5]), _0x18d11f['beginPath'](), _0x18d11f['lineCap'] = 'round', _0x18d11f['lineJoin'] = 'round', _0x18d11f['moveTo'](0xa4 * _0x1d3724, 0xab * _0x1d3724), _0x18d11f['bezierCurveTo'](0x95 * _0x1d3724, 0x9f * _0x1d3724, 156.5 * _0x1d3724, 0xa5 * _0x1d3724, 0x95 * _0x1d3724, 0x9f * _0x1d3724), _0x18d11f['bezierCurveTo'](0x95 * _0x1d3724, 0xa7 * _0x1d3724, 0x95 * _0x1d3724, 0xaa * _0x1d3724, 0x98 * _0x1d3724, 0xb2 * _0x1d3724), _0x18d11f['closePath'](), fill_path(_0x18d11f, _0x2e9223[0x5]), _0x18d11f['beginPath'](), _0x18d11f['lineCap'] = 'round', _0x18d11f['lineJoin'] = 'round', _0x18d11f['moveTo'](0x84 * _0x1d3724, 0x5f * _0x1d3724), _0x18d11f['bezierCurveTo'](0x9a * _0x1d3724, 0x66 * _0x1d3724, 0x9a * _0x1d3724, 0x7e * _0x1d3724, 0x89 * _0x1d3724, 0x8b * _0x1d3724), _0x18d11f['bezierCurveTo'](0x71 * _0x1d3724, 0x98 * _0x1d3724, 0x59 * _0x1d3724, 0x88 * _0x1d3724, 0x50 * _0x1d3724, 0x79 * _0x1d3724), _0x18d11f['bezierCurveTo'](0x39 * _0x1d3724, 0x59 * _0x1d3724, 0x45 * _0x1d3724, 0x3f * _0x1d3724, 0x4f * _0x1d3724, 0x34 * _0x1d3724), _0x18d11f['bezierCurveTo'](0x6e * _0x1d3724, 0x14 * _0x1d3724, 0x8b * _0x1d3724, 0x15 * _0x1d3724, 0x96 * _0x1d3724, 0x19 * _0x1d3724), _0x18d11f['bezierCurveTo'](0xc5 * _0x1d3724, 0x24 * _0x1d3724, 0xdd * _0x1d3724, 0x43 * _0x1d3724, 0xe2 * _0x1d3724, 0x5a * _0x1d3724), _0x18d11f['bezierCurveTo'](0xea * _0x1d3724, 0x86 * _0x1d3724, 0xd6 * _0x1d3724, 0xb1 * _0x1d3724, 0xc3 * _0x1d3724, 0xc5 * _0x1d3724), _0x18d11f['bezierCurveTo'](0x90 * _0x1d3724, 0xf2 * _0x1d3724, 0x4f * _0x1d3724, 0xd8 * _0x1d3724, 0x3a * _0x1d3724, 0xce * _0x1d3724), _0x18d11f['bezierCurveTo'](0xd * _0x1d3724, 0xae * _0x1d3724, 0x14 * _0x1d3724, 0x86 * _0x1d3724, 0x17 * _0x1d3724, 0x6b * _0x1d3724), _0x18d11f['bezierCurveTo'](0x1a * _0x1d3724, 0x4e * _0x1d3724, 0x21 * _0x1d3724, 0x3c * _0x1d3724, 0x26 * _0x1d3724, 0x2b * _0x1d3724), _0x18d11f['bezierCurveTo'](0x2a * _0x1d3724, 0x20 * _0x1d3724, 0x2f * _0x1d3724, 0x20 * _0x1d3724, 0x32 * _0x1d3724, 0x24 * _0x1d3724), _0x18d11f['bezierCurveTo'](0x36 * _0x1d3724, 0x25 * _0x1d3724, 0x32 * _0x1d3724, 0x34 * _0x1d3724, 0x2c * _0x1d3724, 0x57 * _0x1d3724), _0x18d11f['bezierCurveTo'](0x28 * _0x1d3724, 0x73 * _0x1d3724, 0x2e * _0x1d3724, 0x8e * _0x1d3724, 0x39 * _0x1d3724, 0x9e * _0x1d3724), _0x18d11f['bezierCurveTo'](0x4c * _0x1d3724, 0xbd * _0x1d3724, 0x81 * _0x1d3724, 0xb6 * _0x1d3724, 0x98 * _0x1d3724, 0xad * _0x1d3724), _0x18d11f['bezierCurveTo'](0xba * _0x1d3724, 0x9c * _0x1d3724, 0xbf * _0x1d3724, 0x6a * _0x1d3724, 0xb0 * _0x1d3724, 0x55 * _0x1d3724), _0x18d11f['bezierCurveTo'](0x9f * _0x1d3724, 0x3d * _0x1d3724, 0x84 * _0x1d3724, 0x3e * _0x1d3724, 0x7a * _0x1d3724, 0x42 * _0x1d3724), _0x18d11f['bezierCurveTo'](0x6c * _0x1d3724, 0x4a * _0x1d3724, 0x6c * _0x1d3724, 0x59 * _0x1d3724, 0x74 * _0x1d3724, 0x5a * _0x1d3724), _0x18d11f['bezierCurveTo'](0x7b * _0x1d3724, 0x5c * _0x1d3724, 0x82 * _0x1d3724, 0x5d * _0x1d3724, 0x83 * _0x1d3724, 0x5e * _0x1d3724), _0x18d11f['closePath'](), fill_path(_0x18d11f, _0x2e9223[0x1], _0x2e9223[0x2], 0x5 * _0x1d3724), _0x18d11f['beginPath'](), _0x18d11f['lineCap'] = 'round', _0x18d11f['lineJoin'] = 'round', _0x18d11f['moveTo'](0x89 * _0x1d3724, 0x89 * _0x1d3724), _0x18d11f['bezierCurveTo'](0x91 * _0x1d3724, 0x7d * _0x1d3724, 0x8a * _0x1d3724, 0x6c * _0x1d3724, 0x7b * _0x1d3724, 0x68 * _0x1d3724), _0x18d11f['bezierCurveTo'](0x51 * _0x1d3724, 0x65 * _0x1d3724, 0x58 * _0x1d3724, 0x4d * _0x1d3724, 0x62 * _0x1d3724, 0x41 * _0x1d3724), _0x18d11f['bezierCurveTo'](0x75 * _0x1d3724, 0x26 * _0x1d3724, 0x8a * _0x1d3724, 0x27 * _0x1d3724, 0xa5 * _0x1d3724, 0x34 * _0x1d3724), _0x18d11f['bezierCurveTo'](0xc5 * _0x1d3724, 0x48 * _0x1d3724, 0xcf * _0x1d3724, 0x6f * _0x1d3724, 0xc5 * _0x1d3724, 0x8c * _0x1d3724), _0x18d11f['bezierCurveTo'](0xb6 * _0x1d3724, 0xb4 * _0x1d3724, 0xa1 * _0x1d3724, 0xc5 * _0x1d3724, 0x70 * _0x1d3724, 0xc2 * _0x1d3724), _0x18d11f['bezierCurveTo'](0x3a * _0x1d3724, 0xc2 * _0x1d3724, 0x25 * _0x1d3724, 0xaa * _0x1d3724, 0x22 * _0x1d3724, 0x8e * _0x1d3724), _0x18d11f['bezierCurveTo'](0x1d * _0x1d3724, 0x66 * _0x1d3724, 0x28 * _0x1d3724, 0x3f * _0x1d3724, 0x33 * _0x1d3724, 0x2d * _0x1d3724), _0x18d11f['bezierCurveTo'](0x2b * _0x1d3724, 0x4e * _0x1d3724, 0x29 * _0x1d3724, 0x67 * _0x1d3724, 0x2b * _0x1d3724, 0x7a * _0x1d3724), _0x18d11f['bezierCurveTo'](0x33 * _0x1d3724, 0x9e * _0x1d3724, 0x3f * _0x1d3724, 0xae * _0x1d3724, 0x5f * _0x1d3724, 0xb3 * _0x1d3724), _0x18d11f['bezierCurveTo'](0x81 * _0x1d3724, 0xba * _0x1d3724, 0xa9 * _0x1d3724, 0xac * _0x1d3724, 0xb1 * _0x1d3724, 0x90 * _0x1d3724), _0x18d11f['bezierCurveTo'](0xc5 * _0x1d3724, 0x69 * _0x1d3724, 0xac * _0x1d3724, 0x4c * _0x1d3724, 0xa0 * _0x1d3724, 0x47 * _0x1d3724), _0x18d11f['bezierCurveTo'](0x7d * _0x1d3724, 0x34 * _0x1d3724, 0x6f * _0x1d3724, 0x49 * _0x1d3724, 0x6f * _0x1d3724, 0x51 * _0x1d3724), _0x18d11f['bezierCurveTo'](0x6a * _0x1d3724, 0x5d * _0x1d3724, 0x8c * _0x1d3724, 0x5c * _0x1d3724, 0x93 * _0x1d3724, 0x6b * _0x1d3724), _0x18d11f['bezierCurveTo'](0x99 * _0x1d3724, 0x80 * _0x1d3724, 0x8c * _0x1d3724, 0x87 * _0x1d3724, 0x89 * _0x1d3724, 0x8b * _0x1d3724), _0x18d11f['closePath'](), fill_path(_0x18d11f, _0x2e9223[0x3]), _0x18d11f['beginPath'](), _0x18d11f['lineCap'] = 'round', _0x18d11f['lineJoin'] = 'round', _0x18d11f['moveTo'](0x84 * _0x1d3724, 0x5f * _0x1d3724), _0x18d11f['bezierCurveTo'](0x9a * _0x1d3724, 0x66 * _0x1d3724, 0x9a * _0x1d3724, 0x7e * _0x1d3724, 0x89 * _0x1d3724, 0x8b * _0x1d3724), _0x18d11f['bezierCurveTo'](0x71 * _0x1d3724, 0x98 * _0x1d3724, 0x59 * _0x1d3724, 0x88 * _0x1d3724, 0x50 * _0x1d3724, 0x79 * _0x1d3724), _0x18d11f['bezierCurveTo'](0x39 * _0x1d3724, 0x59 * _0x1d3724, 0x45 * _0x1d3724, 0x3f * _0x1d3724, 0x4f * _0x1d3724, 0x34 * _0x1d3724), _0x18d11f['bezierCurveTo'](0x6e * _0x1d3724, 0x14 * _0x1d3724, 0x8b * _0x1d3724, 0x15 * _0x1d3724, 0x96 * _0x1d3724, 0x19 * _0x1d3724), _0x18d11f['bezierCurveTo'](0xc5 * _0x1d3724, 0x24 * _0x1d3724, 0xdd * _0x1d3724, 0x43 * _0x1d3724, 0xe2 * _0x1d3724, 0x5a * _0x1d3724), _0x18d11f['bezierCurveTo'](0xea * _0x1d3724, 0x86 * _0x1d3724, 0xd6 * _0x1d3724, 0xb1 * _0x1d3724, 0xc3 * _0x1d3724, 0xc5 * _0x1d3724), _0x18d11f['bezierCurveTo'](0x90 * _0x1d3724, 0xf2 * _0x1d3724, 0x4f * _0x1d3724, 0xd8 * _0x1d3724, 0x3a * _0x1d3724, 0xce * _0x1d3724), _0x18d11f['bezierCurveTo'](0xd * _0x1d3724, 0xae * _0x1d3724, 0x14 * _0x1d3724, 0x86 * _0x1d3724, 0x17 * _0x1d3724, 0x6b * _0x1d3724), _0x18d11f['bezierCurveTo'](0x1a * _0x1d3724, 0x4e * _0x1d3724, 0x21 * _0x1d3724, 0x3c * _0x1d3724, 0x26 * _0x1d3724, 0x2b * _0x1d3724), _0x18d11f['bezierCurveTo'](0x2a * _0x1d3724, 0x20 * _0x1d3724, 0x2f * _0x1d3724, 0x20 * _0x1d3724, 0x32 * _0x1d3724, 0x24 * _0x1d3724), _0x18d11f['bezierCurveTo'](0x36 * _0x1d3724, 0x25 * _0x1d3724, 0x32 * _0x1d3724, 0x34 * _0x1d3724, 0x2c * _0x1d3724, 0x57 * _0x1d3724), _0x18d11f['bezierCurveTo'](0x28 * _0x1d3724, 0x73 * _0x1d3724, 0x2e * _0x1d3724, 0x8e * _0x1d3724, 0x39 * _0x1d3724, 0x9e * _0x1d3724), _0x18d11f['bezierCurveTo'](0x4c * _0x1d3724, 0xbd * _0x1d3724, 0x81 * _0x1d3724, 0xb6 * _0x1d3724, 0x98 * _0x1d3724, 0xad * _0x1d3724), _0x18d11f['bezierCurveTo'](0xba * _0x1d3724, 0x9c * _0x1d3724, 0xbf * _0x1d3724, 0x6a * _0x1d3724, 0xb0 * _0x1d3724, 0x55 * _0x1d3724), _0x18d11f['bezierCurveTo'](0x9f * _0x1d3724, 0x3d * _0x1d3724, 0x84 * _0x1d3724, 0x3e * _0x1d3724, 0x7a * _0x1d3724, 0x42 * _0x1d3724), _0x18d11f['bezierCurveTo'](0x6c * _0x1d3724, 0x4a * _0x1d3724, 0x6c * _0x1d3724, 0x59 * _0x1d3724, 0x74 * _0x1d3724, 0x5a * _0x1d3724), _0x18d11f['bezierCurveTo'](0x7b * _0x1d3724, 0x5c * _0x1d3724, 0x82 * _0x1d3724, 0x5d * _0x1d3724, 0x83 * _0x1d3724, 0x5e * _0x1d3724), _0x18d11f['closePath'](), fill_path(_0x18d11f, undefined, _0x2e9223[0x2], 0x5 * _0x1d3724), _0x18d11f['beginPath'](), _0x18d11f['lineCap'] = 'round', _0x18d11f['lineJoin'] = 'round', _0x18d11f['moveTo'](0x52 * _0x1d3724, 0x3f * _0x1d3724), _0x18d11f['bezierCurveTo'](0x5b * _0x1d3724, 0x40 * _0x1d3724, 0x60 * _0x1d3724, 0x3e * _0x1d3724, 0x62 * _0x1d3724, 0x35 * _0x1d3724), _0x18d11f['bezierCurveTo'](0x5b * _0x1d3724, 0x2d * _0x1d3724, 0x55 * _0x1d3724, 0x2a * _0x1d3724, 0x4e * _0x1d3724, 0x29 * _0x1d3724), _0x18d11f['bezierCurveTo'](0x51 * _0x1d3724, 0x33 * _0x1d3724, 0x52 * _0x1d3724, 0x39 * _0x1d3724, 0x52 * _0x1d3724, 0x3f * _0x1d3724), _0x18d11f['closePath'](), fill_path(_0x18d11f, _0x2e9223[0x4], _0x2e9223[0x5], 0x5 * _0x1d3724), _0x18d11f['beginPath'](), _0x18d11f['lineCap'] = 'round', _0x18d11f['lineJoin'] = 'round', _0x18d11f['moveTo'](0x94 * _0x1d3724, 0x28 * _0x1d3724), _0x18d11f['bezierCurveTo'](0x8c * _0x1d3724, 0x34 * _0x1d3724, 0x83 * _0x1d3724, 0x33 * _0x1d3724, 0x7b * _0x1d3724, 0x2b * _0x1d3724), _0x18d11f['bezierCurveTo'](0x7b * _0x1d3724, 0x19 * _0x1d3724, 0x81 * _0x1d3724, 0x11 * _0x1d3724, 0x86 * _0x1d3724, 0xc * _0x1d3724), _0x18d11f['bezierCurveTo'](0x8a * _0x1d3724, 0x23 * _0x1d3724, 0x8e * _0x1d3724, 0x1f * _0x1d3724, 0x94 * _0x1d3724, 0x28 * _0x1d3724), _0x18d11f['closePath'](), fill_path(_0x18d11f, _0x2e9223[0x4], _0x2e9223[0x5], 0x5 * _0x1d3724), _0x18d11f['beginPath'](), _0x18d11f['lineCap'] = 'round', _0x18d11f['lineJoin'] = 'round', _0x18d11f['moveTo'](0xbd * _0x1d3724, 0x2b * _0x1d3724), _0x18d11f['bezierCurveTo'](0xbf * _0x1d3724, 0x36 * _0x1d3724, 0xc4 * _0x1d3724, 0x3a * _0x1d3724, 0xcd * _0x1d3724, 0x3b * _0x1d3724), _0x18d11f['bezierCurveTo'](0xd3 * _0x1d3724, 0x2a * _0x1d3724, 0xd6 * _0x1d3724, 0x25 * _0x1d3724, 0xd8 * _0x1d3724, 0x1f * _0x1d3724), _0x18d11f['bezierCurveTo'](0xca * _0x1d3724, 0x22 * _0x1d3724, 0xc3 * _0x1d3724, 0x27 * _0x1d3724, 0xbe * _0x1d3724, 0x2b * _0x1d3724), _0x18d11f['closePath'](), fill_path(_0x18d11f, _0x2e9223[0x4], _0x2e9223[0x5], 0x5 * _0x1d3724), _0x18d11f['beginPath'](), _0x18d11f['lineCap'] = 'round', _0x18d11f['lineJoin'] = 'round', _0x18d11f['moveTo'](0xd8 * _0x1d3724, 0x62 * _0x1d3724), _0x18d11f['bezierCurveTo'](0xdb * _0x1d3724, 0x69 * _0x1d3724, 0xe1 * _0x1d3724, 0x6b * _0x1d3724, 0xe6 * _0x1d3724, 0x6d * _0x1d3724), _0x18d11f['bezierCurveTo'](0xe3 * _0x1d3724, 0x71 * _0x1d3724, 0xdd * _0x1d3724, 0x73 * _0x1d3724, 0xd7 * _0x1d3724, 0x73 * _0x1d3724), _0x18d11f['bezierCurveTo'](0xd0 * _0x1d3724, 0x6d * _0x1d3724, 0xd3 * _0x1d3724, 0x65 * _0x1d3724, 0xd8 * _0x1d3724, 0x62 * _0x1d3724), _0x18d11f['closePath'](), fill_path(_0x18d11f, _0x2e9223[0x4], _0x2e9223[0x5], 0x5 * _0x1d3724), _0x18d11f['beginPath'](), _0x18d11f['lineCap'] = 'round', _0x18d11f['lineJoin'] = 'round', _0x18d11f['moveTo'](0xb4 * _0x1d3724, 0x55 * _0x1d3724), _0x18d11f['bezierCurveTo'](0xc1 * _0x1d3724, 0x56 * _0x1d3724, 0xc4 * _0x1d3724, 0x62 * _0x1d3724, 0xbf * _0x1d3724, 0x6c * _0x1d3724), _0x18d11f['bezierCurveTo'](0xb3 * _0x1d3724, 0x70 * _0x1d3724, 0xa7 * _0x1d3724, 0x71 * _0x1d3724, 0x9b * _0x1d3724, 0x6f * _0x1d3724), _0x18d11f['bezierCurveTo'](0xa9 * _0x1d3724, 0x64 * _0x1d3724, 0xb0 * _0x1d3724, 0x60 * _0x1d3724, 0xb4 * _0x1d3724, 0x55 * _0x1d3724), _0x18d11f['closePath'](), fill_path(_0x18d11f, _0x2e9223[0x4], _0x2e9223[0x5], 0x5 * _0x1d3724), _0x18d11f['beginPath'](), _0x18d11f['lineCap'] = 'round', _0x18d11f['lineJoin'] = 'round', _0x18d11f['moveTo'](0x60 * _0x1d3724, 0x72 * _0x1d3724), _0x18d11f['bezierCurveTo'](0x66 * _0x1d3724, 0x6d * _0x1d3724, 0x70 * _0x1d3724, 0x6e * _0x1d3724, 0x72 * _0x1d3724, 0x76 * _0x1d3724), _0x18d11f['bezierCurveTo'](0x6f * _0x1d3724, 0x86 * _0x1d3724, 0x66 * _0x1d3724, 0x8f * _0x1d3724, 0x5f * _0x1d3724, 0x93 * _0x1d3724), _0x18d11f['bezierCurveTo'](0x62 * _0x1d3724, 0x7b * _0x1d3724, 0x61 * _0x1d3724, 0x77 * _0x1d3724, 0x60 * _0x1d3724, 0x73 * _0x1d3724), _0x18d11f['closePath'](), fill_path(_0x18d11f, _0x2e9223[0x4], _0x2e9223[0x5], 0x5 * _0x1d3724), _0x18d11f['beginPath'](), _0x18d11f['lineCap'] = 'round', _0x18d11f['lineJoin'] = 'round', _0x18d11f['moveTo'](0x4f * _0x1d3724, 0x5c * _0x1d3724), _0x18d11f['bezierCurveTo'](0x56 * _0x1d3724, 0x5f * _0x1d3724, 0x59 * _0x1d3724, 0x66 * _0x1d3724, 0x53 * _0x1d3724, 0x6f * _0x1d3724), _0x18d11f['bezierCurveTo'](0x46 * _0x1d3724, 0x6e * _0x1d3724, 0x3d * _0x1d3724, 0x6b * _0x1d3724, 0x36 * _0x1d3724, 0x64 * _0x1d3724), _0x18d11f['bezierCurveTo'](0x46 * _0x1d3724, 0x61 * _0x1d3724, 0x46 * _0x1d3724, 0x5f * _0x1d3724, 0x4e * _0x1d3724, 0x5c * _0x1d3724), _0x18d11f['closePath'](), fill_path(_0x18d11f, _0x2e9223[0x4], _0x2e9223[0x5], 0x5 * _0x1d3724), _0x18d11f['beginPath'](), _0x18d11f['lineCap'] = 'round', _0x18d11f['lineJoin'] = 'round', _0x18d11f['moveTo'](0x27 * _0x1d3724, 0x82 * _0x1d3724), _0x18d11f['bezierCurveTo'](0x25 * _0x1d3724, 0x8d * _0x1d3724, 0x29 * _0x1d3724, 0x8f * _0x1d3724, 0x30 * _0x1d3724, 0x90 * _0x1d3724), _0x18d11f['bezierCurveTo'](0x36 * _0x1d3724, 0x86 * _0x1d3724, 0x37 * _0x1d3724, 0x83 * _0x1d3724, 0x38 * _0x1d3724, 0x7b * _0x1d3724), _0x18d11f['bezierCurveTo'](0x2f * _0x1d3724, 0x81 * _0x1d3724, 0x2b * _0x1d3724, 0x81 * _0x1d3724, 0x27 * _0x1d3724, 0x81 * _0x1d3724), _0x18d11f['closePath'](), fill_path(_0x18d11f, _0x2e9223[0x4], _0x2e9223[0x5], 0x5 * _0x1d3724), _0x18d11f['beginPath'](), _0x18d11f['lineCap'] = 'round', _0x18d11f['lineJoin'] = 'round', _0x18d11f['moveTo'](0x71 * _0x1d3724, 0xbd * _0x1d3724), _0x18d11f['bezierCurveTo'](0x77 * _0x1d3724, 0xc9 * _0x1d3724, 0x7f * _0x1d3724, 0xc6 * _0x1d3724, 0x86 * _0x1d3724, 0xc0 * _0x1d3724), _0x18d11f['bezierCurveTo'](0x80 * _0x1d3724, 0xaf * _0x1d3724, 0x80 * _0x1d3724, 0xad * _0x1d3724, 0x80 * _0x1d3724, 0xa5 * _0x1d3724), _0x18d11f['bezierCurveTo'](0x75 * _0x1d3724, 0xb0 * _0x1d3724, 0x74 * _0x1d3724, 0xb6 * _0x1d3724, 0x71 * _0x1d3724, 0xbb * _0x1d3724), _0x18d11f['closePath'](), fill_path(_0x18d11f, _0x2e9223[0x4], _0x2e9223[0x5], 0x5 * _0x1d3724), _0x18d11f['beginPath'](), _0x18d11f['lineCap'] = 'round', _0x18d11f['lineJoin'] = 'round', _0x18d11f['moveTo'](0x4a * _0x1d3724, 0x9a * _0x1d3724), _0x18d11f['bezierCurveTo'](0x4c * _0x1d3724, 0xa3 * _0x1d3724, 0x4c * _0x1d3724, 0xaa * _0x1d3724, 0x4b * _0x1d3724, 0xb1 * _0x1d3724), _0x18d11f['bezierCurveTo'](0x44 * _0x1d3724, 0xb3 * _0x1d3724, 0x42 * _0x1d3724, 0xb0 * _0x1d3724, 0x3f * _0x1d3724, 0xab * _0x1d3724), _0x18d11f['bezierCurveTo'](0x45 * _0x1d3724, 0xa4 * _0x1d3724, 0x48 * _0x1d3724, 0x9f * _0x1d3724, 0x4a * _0x1d3724, 0x9a * _0x1d3724), _0x18d11f['closePath'](), fill_path(_0x18d11f, _0x2e9223[0x4], _0x2e9223[0x5], 0x5 * _0x1d3724), _0x18d11f['beginPath'](), _0x18d11f['lineCap'] = 'round', _0x18d11f['lineJoin'] = 'round', _0x18d11f['moveTo'](0xce * _0x1d3724, 0x98 * _0x1d3724), _0x18d11f['bezierCurveTo'](0xc6 * _0x1d3724, 0x9e * _0x1d3724, 0xc6 * _0x1d3724, 0xa6 * _0x1d3724, 0xc9 * _0x1d3724, 0xab * _0x1d3724), _0x18d11f['bezierCurveTo'](0xd1 * _0x1d3724, 0xaa * _0x1d3724, 0xdd * _0x1d3724, 0xaa * _0x1d3724, 0xe2 * _0x1d3724, 0xac * _0x1d3724), _0x18d11f['bezierCurveTo'](0xdb * _0x1d3724, 0x9f * _0x1d3724, 0xd2 * _0x1d3724, 0x9b * _0x1d3724, 0xcf * _0x1d3724, 0x99 * _0x1d3724), _0x18d11f['closePath'](), fill_path(_0x18d11f, _0x2e9223[0x4], _0x2e9223[0x5], 0x5 * _0x1d3724), _0x18d11f['beginPath'](), _0x18d11f['lineCap'] = 'round', _0x18d11f['lineJoin'] = 'round', _0x18d11f['moveTo'](0xb5 * _0x1d3724, 0xb8 * _0x1d3724), _0x18d11f['bezierCurveTo'](0xaa * _0x1d3724, 0xb8 * _0x1d3724, 0xa7 * _0x1d3724, 0xbb * _0x1d3724, 0xa3 * _0x1d3724, 0xc3 * _0x1d3724), _0x18d11f['bezierCurveTo'](0xab * _0x1d3724, 0xcf * _0x1d3724, 0xb7 * _0x1d3724, 0xd6 * _0x1d3724, 0xbf * _0x1d3724, 0xd9 * _0x1d3724), _0x18d11f['bezierCurveTo'](0xb7 * _0x1d3724, 0xcc * _0x1d3724, 0xb8 * _0x1d3724, 0xc4 * _0x1d3724, 0xb5 * _0x1d3724, 0xb8 * _0x1d3724), _0x18d11f['closePath'](), fill_path(_0x18d11f, _0x2e9223[0x4], _0x2e9223[0x5], 0x5 * _0x1d3724), _0x18d11f['beginPath'](), _0x18d11f['lineCap'] = 'round', _0x18d11f['lineJoin'] = 'round', _0x18d11f['moveTo'](0x42 * _0x1d3724, 0xc7 * _0x1d3724), _0x18d11f['bezierCurveTo'](0x49 * _0x1d3724, 0xc5 * _0x1d3724, 0x4e * _0x1d3724, 0xc7 * _0x1d3724, 0x4f * _0x1d3724, 0xce * _0x1d3724), _0x18d11f['bezierCurveTo'](0x47 * _0x1d3724, 0xd8 * _0x1d3724, 0x43 * _0x1d3724, 0xdd * _0x1d3724, 0x39 * _0x1d3724, 0xdf * _0x1d3724), _0x18d11f['closePath'](), fill_path(_0x18d11f, _0x2e9223[0x4], _0x2e9223[0x5], 0x5 * _0x1d3724), _0x18d11f['beginPath'](), _0x18d11f['lineCap'] = 'round', _0x18d11f['lineJoin'] = 'round', _0x18d11f['moveTo'](0xb6 * _0x1d3724, 0x8f * _0x1d3724), _0x18d11f['bezierCurveTo'](0xb7 * _0x1d3724, 0x92 * _0x1d3724, 0xb7 * _0x1d3724, 0x95 * _0x1d3724, 0xb3 * _0x1d3724, 0x98 * _0x1d3724), _0x18d11f['bezierCurveTo'](0xae * _0x1d3724, 0x92 * _0x1d3724, 0xae * _0x1d3724, 0x92 * _0x1d3724, 0xa9 * _0x1d3724, 0x8c * _0x1d3724), _0x18d11f['closePath'](), fill_path(_0x18d11f, _0x2e9223[0x4], _0x2e9223[0x5], 0x5 * _0x1d3724), _0x18d11f['beginPath'](), _0x18d11f['lineCap'] = 'round', _0x18d11f['lineJoin'] = 'round', _0x18d11f['moveTo'](0x20 * _0x1d3724, 0x9f * _0x1d3724), _0x18d11f['bezierCurveTo'](0x2d * _0x1d3724, 0xa0 * _0x1d3724, 0x30 * _0x1d3724, 0xa4 * _0x1d3724, 0x2d * _0x1d3724, 0xaf * _0x1d3724), _0x18d11f['bezierCurveTo'](0x1c * _0x1d3724, 0xb7 * _0x1d3724, 0x19 * _0x1d3724, 0xb8 * _0x1d3724, 0x13 * _0x1d3724, 0xb8 * _0x1d3724), _0x18d11f['bezierCurveTo'](0x1e * _0x1d3724, 0xaa * _0x1d3724, 0x1d * _0x1d3724, 0xa4 * _0x1d3724, 0x1f * _0x1d3724, 0xa0 * _0x1d3724), _0x18d11f['closePath'](), fill_path(_0x18d11f, _0x2e9223[0x4], _0x2e9223[0x5], 0x5 * _0x1d3724), _0x18d11f['beginPath'](), _0x18d11f['lineCap'] = 'round', _0x18d11f['lineJoin'] = 'round', _0x18d11f['moveTo'](0x6e * _0x1d3724, 0xd6 * _0x1d3724), _0x18d11f['bezierCurveTo'](0x6a * _0x1d3724, 0xd4 * _0x1d3724, 0x68 * _0x1d3724, 0xd5 * _0x1d3724, 0x66 * _0x1d3724, 0xda * _0x1d3724), _0x18d11f['bezierCurveTo'](0x68 * _0x1d3724, 0xdc * _0x1d3724, 0x6b * _0x1d3724, 0xde * _0x1d3724, 0x6e * _0x1d3724, 0xe0 * _0x1d3724), _0x18d11f['bezierCurveTo'](110.5 * _0x1d3724, 0xdb * _0x1d3724, 110.5 * _0x1d3724, 0xdb * _0x1d3724, 0x6f * _0x1d3724, 0xd6 * _0x1d3724), _0x18d11f['closePath'](), fill_path(_0x18d11f, _0x2e9223[0x4], _0x2e9223[0x5], 0x5 * _0x1d3724), _0x18d11f['beginPath'](), _0x18d11f['lineCap'] = 'round', _0x18d11f['lineJoin'] = 'round', _0x18d11f['moveTo'](0x28 * _0x1d3724, 0x34 * _0x1d3724), _0x18d11f['bezierCurveTo'](0x29 * _0x1d3724, 0x39 * _0x1d3724, 0x28 * _0x1d3724, 0x3d * _0x1d3724, 0x22 * _0x1d3724, 0x3c * _0x1d3724), _0x18d11f['bezierCurveTo'](31.5 * _0x1d3724, 0x37 * _0x1d3724, 31.5 * _0x1d3724, 0x37 * _0x1d3724, 0x1d * _0x1d3724, 0x32 * _0x1d3724), _0x18d11f['bezierCurveTo'](0x22 * _0x1d3724, 50.5 * _0x1d3724, 0x22 * _0x1d3724, 50.5 * _0x1d3724, 0x27 * _0x1d3724, 0x33 * _0x1d3724), _0x18d11f['closePath'](), fill_path(_0x18d11f, _0x2e9223[0x4], _0x2e9223[0x5], 0x5 * _0x1d3724), _0x18d11f['beginPath'](), _0x18d11f['lineCap'] = 'round', _0x18d11f['lineJoin'] = 'round', _0x18d11f['moveTo'](0x1f * _0x1d3724, 0x51 * _0x1d3724), _0x18d11f['bezierCurveTo'](0x25 * _0x1d3724, 0x54 * _0x1d3724, 0x26 * _0x1d3724, 0x5a * _0x1d3724, 0x22 * _0x1d3724, 0x63 * _0x1d3724), _0x18d11f['bezierCurveTo'](0x17 * _0x1d3724, 0x61 * _0x1d3724, 0x13 * _0x1d3724, 0x60 * _0x1d3724, 0x10 * _0x1d3724, 0x5d * _0x1d3724), _0x18d11f['bezierCurveTo'](0x18 * _0x1d3724, 0x58 * _0x1d3724, 0x1c * _0x1d3724, 0x55 * _0x1d3724, 0x1e * _0x1d3724, 0x51 * _0x1d3724), _0x18d11f['closePath'](), fill_path(_0x18d11f, _0x2e9223[0x4], _0x2e9223[0x5], 0x5 * _0x1d3724), _0x287a75;
}

function create_hood(_0x2fdd50, _0x3c9633, _0x25d609) {
    var _0x1384c3 = document['createElement']('canvas'),
        _0x5972e7 = _0x1384c3['getContext']('2d');
    return _0x1384c3['width'] = 0x1d1 * _0x2fdd50, _0x1384c3['height'] = 0x136 * _0x2fdd50, _0x5972e7['beginPath'](), _0x5972e7['lineCap'] = 'round', _0x5972e7['lineJoin'] = 'round', _0x5972e7['moveTo'](0x7e * _0x2fdd50, 0xc0 * _0x2fdd50), _0x5972e7['bezierCurveTo'](0xc6 * _0x2fdd50, 0xca * _0x2fdd50, 0xf5 * _0x2fdd50, 0xcb * _0x2fdd50, 0x14f * _0x2fdd50, 0xc2 * _0x2fdd50), _0x5972e7['bezierCurveTo'](0x150 * _0x2fdd50, 0xe8 * _0x2fdd50, 0x146 * _0x2fdd50, 0xeb * _0x2fdd50, 0xe8 * _0x2fdd50, 0xed * _0x2fdd50), _0x5972e7['bezierCurveTo'](0xa1 * _0x2fdd50, 0xeb * _0x2fdd50, 0x7a * _0x2fdd50, 0xeb * _0x2fdd50, 0x7e * _0x2fdd50, 0xc1 * _0x2fdd50), _0x5972e7['closePath'](), fill_path(_0x5972e7, _0x25d609[0x0], _0x25d609[0x1], 0x4 * _0x2fdd50), _0x5972e7['beginPath'](), _0x5972e7['lineCap'] = 'round', _0x5972e7['lineJoin'] = 'round', _0x5972e7['moveTo'](0x92 * _0x2fdd50, 0xef * _0x2fdd50), _0x5972e7['bezierCurveTo'](0xae * _0x2fdd50, 0x4a * _0x2fdd50, 0x11f * _0x2fdd50, 0x58 * _0x2fdd50, 0x140 * _0x2fdd50, 0xf0 * _0x2fdd50), _0x5972e7['bezierCurveTo'](0x149 * _0x2fdd50, 0xe7 * _0x2fdd50, 0x154 * _0x2fdd50, 0xdb * _0x2fdd50, 0x14c * _0x2fdd50, 0x73 * _0x2fdd50), _0x5972e7['bezierCurveTo'](0x14a * _0x2fdd50, 0x28 * _0x2fdd50, 0x90 * _0x2fdd50, 0x1e * _0x2fdd50, 0x81 * _0x2fdd50, 0x74 * _0x2fdd50), _0x5972e7['bezierCurveTo'](0x7c * _0x2fdd50, 0xd9 * _0x2fdd50, 0x7c * _0x2fdd50, 0xe4 * _0x2fdd50, 0x8f * _0x2fdd50, 0xed * _0x2fdd50), _0x5972e7['closePath'](), fill_path(_0x5972e7, _0x25d609[0x0], _0x25d609[0x1], 0x4 * _0x2fdd50), _0x5972e7['beginPath'](), _0x5972e7['lineCap'] = 'round', _0x5972e7['lineJoin'] = 'round', _0x5972e7['moveTo'](0x7e * _0x2fdd50, 0xc1 * _0x2fdd50), _0x5972e7['bezierCurveTo'](0xad * _0x2fdd50, 0x5e * _0x2fdd50, 0xd1 * _0x2fdd50, 0x64 * _0x2fdd50, 0xe4 * _0x2fdd50, 0x39 * _0x2fdd50), _0x5972e7['bezierCurveTo'](0xbe * _0x2fdd50, 0x70 * _0x2fdd50, 0xa5 * _0x2fdd50, 0x73 * _0x2fdd50, 0x7f * _0x2fdd50, 0xb8 * _0x2fdd50), _0x5972e7['closePath'](), fill_path(_0x5972e7, undefined, _0x25d609[0x1], 0x4 * _0x2fdd50), _0x5972e7['beginPath'](), _0x5972e7['lineCap'] = 'round', _0x5972e7['lineJoin'] = 'round', _0x5972e7['moveTo'](0xe6 * _0x2fdd50, 0x39 * _0x2fdd50), _0x5972e7['bezierCurveTo'](0x10a * _0x2fdd50, 0x75 * _0x2fdd50, 0x136 * _0x2fdd50, 0x82 * _0x2fdd50, 0x14c * _0x2fdd50, 0xb7 * _0x2fdd50), _0x5972e7['bezierCurveTo'](0x122 * _0x2fdd50, 0x70 * _0x2fdd50, 0x106 * _0x2fdd50, 0x6d * _0x2fdd50, 0xe6 * _0x2fdd50, 0x38 * _0x2fdd50), _0x5972e7['closePath'](), fill_path(_0x5972e7, undefined, _0x25d609[0x1], 0x4 * _0x2fdd50), _0x5972e7['beginPath'](), _0x5972e7['lineCap'] = 'round', _0x5972e7['lineJoin'] = 'round', _0x5972e7['moveTo'](0x9a * _0x2fdd50, 0xd4 * _0x2fdd50), _0x5972e7['bezierCurveTo'](0xd0 * _0x2fdd50, 0xe0 * _0x2fdd50, 0xfc * _0x2fdd50, 0xdb * _0x2fdd50, 0x131 * _0x2fdd50, 0xd4 * _0x2fdd50), _0x5972e7['bezierCurveTo'](0x10b * _0x2fdd50, 0xdb * _0x2fdd50, 0xcc * _0x2fdd50, 0xde * _0x2fdd50, 0x9b * _0x2fdd50, 0xd4 * _0x2fdd50), _0x5972e7['closePath'](), fill_path(_0x5972e7, undefined, _0x25d609[0x1], 0x4 * _0x2fdd50), _0x5972e7['beginPath'](), _0x5972e7['lineCap'] = 'round', _0x5972e7['lineJoin'] = 'round', _0x5972e7['moveTo'](0xef * _0x2fdd50, 0x3b * _0x2fdd50), _0x5972e7['bezierCurveTo'](0x12e * _0x2fdd50, 0x48 * _0x2fdd50, 0x145 * _0x2fdd50, 0x54 * _0x2fdd50, 0x146 * _0x2fdd50, 0x73 * _0x2fdd50), _0x5972e7['bezierCurveTo'](0x121 * _0x2fdd50, 0x50 * _0x2fdd50, 0x10e * _0x2fdd50, 0x58 * _0x2fdd50, 0xfd * _0x2fdd50, 0x4e * _0x2fdd50), _0x5972e7['closePath'](), fill_path(_0x5972e7, _0x25d609[0x2]), _0x5972e7['beginPath'](), _0x5972e7['lineCap'] = 'round', _0x5972e7['lineJoin'] = 'round', _0x5972e7['moveTo'](0xd8 * _0x2fdd50, 0x3d * _0x2fdd50), _0x5972e7['bezierCurveTo'](0xd1 * _0x2fdd50, 0x46 * _0x2fdd50, 0xd1 * _0x2fdd50, 0x46 * _0x2fdd50, 0xca * _0x2fdd50, 0x4f * _0x2fdd50), _0x5972e7['bezierCurveTo'](0xad * _0x2fdd50, 0x57 * _0x2fdd50, 0xa2 * _0x2fdd50, 0x5b * _0x2fdd50, 0x89 * _0x2fdd50, 0x6b * _0x2fdd50), _0x5972e7['bezierCurveTo'](0x99 * _0x2fdd50, 0x4e * _0x2fdd50, 0xae * _0x2fdd50, 0x43 * _0x2fdd50, 0xd4 * _0x2fdd50, 0x3e * _0x2fdd50), _0x5972e7['closePath'](), fill_path(_0x5972e7, _0x25d609[0x2]), _0x5972e7['beginPath'](), _0x5972e7['lineCap'] = 'round', _0x5972e7['lineJoin'] = 'round', _0x5972e7['moveTo'](0xaf * _0x2fdd50, 0x7d * _0x2fdd50), _0x5972e7['bezierCurveTo'](0xda * _0x2fdd50, 0x5e * _0x2fdd50, 0xee * _0x2fdd50, 0x5a * _0x2fdd50, 0x119 * _0x2fdd50, 0x7d * _0x2fdd50), _0x5972e7['bezierCurveTo'](0xf5 * _0x2fdd50, 0x59 * _0x2fdd50, 0xf0 * _0x2fdd50, 0x50 * _0x2fdd50, 0xe4 * _0x2fdd50, 0x43 * _0x2fdd50), _0x5972e7['bezierCurveTo'](0xcf * _0x2fdd50, 0x64 * _0x2fdd50, 0xc0 * _0x2fdd50, 0x68 * _0x2fdd50, 0xb1 * _0x2fdd50, 0x7b * _0x2fdd50), _0x5972e7['closePath'](), fill_path(_0x5972e7, _0x25d609[0x2]), _0x1384c3;
}

function create_winter_hood(_0x4e0d6c, _0x564dbe, _0x3e7ff9) {
    var _0x2ae86c = document['createElement']('canvas'),
        _0x5b2c20 = _0x2ae86c['getContext']('2d');
    return _0x2ae86c['width'] = 0x1d1 * _0x4e0d6c, _0x2ae86c['height'] = 0x195 * _0x4e0d6c, _0x5b2c20['globalAlpha'] = 0x1, _0x5b2c20['translate'](0x6 * _0x4e0d6c, 0x0 * _0x4e0d6c), _0x5b2c20['beginPath'](), _0x5b2c20['lineCap'] = 'round', _0x5b2c20['lineJoin'] = 'round', _0x5b2c20['moveTo'](39.000030517578125 * _0x4e0d6c, 162.03977966308594 * _0x4e0d6c), _0x5b2c20['bezierCurveTo'](125.00003051757812 * _0x4e0d6c, 84.03977966308594 * _0x4e0d6c, 108.50003051757812 * _0x4e0d6c, 115.03977966308594 * _0x4e0d6c, 178.00003051757812 * _0x4e0d6c, 68.03977966308594 * _0x4e0d6c), _0x5b2c20['bezierCurveTo'](299.0000305175781 * _0x4e0d6c, 146.53977966308594 * _0x4e0d6c, 299.0000305175781 * _0x4e0d6c, 146.53977966308594 * _0x4e0d6c, 420.0000305175781 * _0x4e0d6c, 225.03977966308594 * _0x4e0d6c), _0x5b2c20['bezierCurveTo'](400.0000305175781 * _0x4e0d6c, 288.53977966308594 * _0x4e0d6c, 400.0000305175781 * _0x4e0d6c, 288.53977966308594 * _0x4e0d6c, 380.0000305175781 * _0x4e0d6c, 352.03977966308594 * _0x4e0d6c), _0x5b2c20['bezierCurveTo'](216.50003051757812 * _0x4e0d6c, 345.53977966308594 * _0x4e0d6c, 216.50003051757812 * _0x4e0d6c, 345.53977966308594 * _0x4e0d6c, 53.000030517578125 * _0x4e0d6c, 339.03977966308594 * _0x4e0d6c), _0x5b2c20['closePath'](), fill_path(_0x5b2c20, _0x3e7ff9[0x3]), _0x5b2c20['beginPath'](), _0x5b2c20['lineCap'] = 'round', _0x5b2c20['lineJoin'] = 'round', _0x5b2c20['moveTo'](23.000030517578125 * _0x4e0d6c, 306.94886779785156 * _0x4e0d6c), _0x5b2c20['bezierCurveTo'](5.000030517578125 * _0x4e0d6c, 275.94886779785156 * _0x4e0d6c, 6.000030517578125 * _0x4e0d6c, 201.94886779785156 * _0x4e0d6c, 14.000030517578125 * _0x4e0d6c, 150.94886779785156 * _0x4e0d6c), _0x5b2c20['bezierCurveTo'](40.000030517578125 * _0x4e0d6c, 34.94886779785156 * _0x4e0d6c, 157.00003051757812 * _0x4e0d6c, 14.948867797851562 * _0x4e0d6c, 199.00003051757812 * _0x4e0d6c, 11.948867797851562 * _0x4e0d6c), _0x5b2c20['bezierCurveTo'](331.0000305175781 * _0x4e0d6c, 0.9488677978515625 * _0x4e0d6c, 409.0000305175781 * _0x4e0d6c, 61.94886779785156 * _0x4e0d6c, 428.0000305175781 * _0x4e0d6c, 133.94886779785156 * _0x4e0d6c), _0x5b2c20['bezierCurveTo'](445.0000305175781 * _0x4e0d6c, 207.94886779785156 * _0x4e0d6c, 439.0000305175781 * _0x4e0d6c, 274.94886779785156 * _0x4e0d6c, 426.0000305175781 * _0x4e0d6c, 342.94886779785156 * _0x4e0d6c), _0x5b2c20['bezierCurveTo'](355.0000305175781 * _0x4e0d6c, 207.94886779785156 * _0x4e0d6c, 345.0000305175781 * _0x4e0d6c, 208.94886779785156 * _0x4e0d6c, 333.0000305175781 * _0x4e0d6c, 202.94886779785156 * _0x4e0d6c), _0x5b2c20['bezierCurveTo'](262.0000305175781 * _0x4e0d6c, 143.94886779785156 * _0x4e0d6c, 236.00003051757812 * _0x4e0d6c, 148.94886779785156 * _0x4e0d6c, 189.00003051757812 * _0x4e0d6c, 162.94886779785156 * _0x4e0d6c), _0x5b2c20['bezierCurveTo'](82.00003051757812 * _0x4e0d6c, 190.94886779785156 * _0x4e0d6c, 78.00003051757812 * _0x4e0d6c, 235.94886779785156 * _0x4e0d6c, 62.000030517578125 * _0x4e0d6c, 279.94886779785156 * _0x4e0d6c), _0x5b2c20['closePath'](), fill_path(_0x5b2c20, _0x3e7ff9[0x0], _0x3e7ff9[0x1], 0x14 * _0x4e0d6c), _0x5b2c20['beginPath'](), _0x5b2c20['lineCap'] = 'round', _0x5b2c20['lineJoin'] = 'round', _0x5b2c20['moveTo'](17.000030517578125 * _0x4e0d6c, 149.94886779785156 * _0x4e0d6c), _0x5b2c20['bezierCurveTo'](76.00003051757812 * _0x4e0d6c, 67.94886779785156 * _0x4e0d6c, 177.00003051757812 * _0x4e0d6c, 40.94886779785156 * _0x4e0d6c, 232.00003051757812 * _0x4e0d6c, 45.94886779785156 * _0x4e0d6c), _0x5b2c20['bezierCurveTo'](316.0000305175781 * _0x4e0d6c, 46.94886779785156 * _0x4e0d6c, 359.0000305175781 * _0x4e0d6c, 74.94886779785156 * _0x4e0d6c, 428.0000305175781 * _0x4e0d6c, 145.94886779785156 * _0x4e0d6c), _0x5b2c20['bezierCurveTo'](414.0000305175781 * _0x4e0d6c, 73.94886779785156 * _0x4e0d6c, 386.0000305175781 * _0x4e0d6c, 68.94886779785156 * _0x4e0d6c, 359.0000305175781 * _0x4e0d6c, 43.94886779785156 * _0x4e0d6c), _0x5b2c20['bezierCurveTo'](295.0000305175781 * _0x4e0d6c, 5.9488677978515625 * _0x4e0d6c, 239.00003051757812 * _0x4e0d6c, 10.948867797851562 * _0x4e0d6c, 207.00003051757812 * _0x4e0d6c, 10.948867797851562 * _0x4e0d6c), _0x5b2c20['bezierCurveTo'](121.00003051757812 * _0x4e0d6c, 20.948867797851562 * _0x4e0d6c, 104.00003051757812 * _0x4e0d6c, 34.94886779785156 * _0x4e0d6c, 45.000030517578125 * _0x4e0d6c, 84.94886779785156 * _0x4e0d6c), _0x5b2c20['bezierCurveTo'](14.000030517578125 * _0x4e0d6c, 128.94886779785156 * _0x4e0d6c, 18.000030517578125 * _0x4e0d6c, 142.94886779785156 * _0x4e0d6c, 16.000030517578125 * _0x4e0d6c, 151.94886779785156 * _0x4e0d6c), _0x5b2c20['closePath'](), fill_path(_0x5b2c20, _0x3e7ff9[0x2]), _0x5b2c20['beginPath'](), _0x5b2c20['lineCap'] = 'round', _0x5b2c20['lineJoin'] = 'round', _0x5b2c20['moveTo'](23.000030517578125 * _0x4e0d6c, 306.94886779785156 * _0x4e0d6c), _0x5b2c20['bezierCurveTo'](5.000030517578125 * _0x4e0d6c, 275.94886779785156 * _0x4e0d6c, 6.000030517578125 * _0x4e0d6c, 201.94886779785156 * _0x4e0d6c, 14.000030517578125 * _0x4e0d6c, 150.94886779785156 * _0x4e0d6c), _0x5b2c20['bezierCurveTo'](40.000030517578125 * _0x4e0d6c, 34.94886779785156 * _0x4e0d6c, 157.00003051757812 * _0x4e0d6c, 14.948867797851562 * _0x4e0d6c, 199.00003051757812 * _0x4e0d6c, 11.948867797851562 * _0x4e0d6c), _0x5b2c20['bezierCurveTo'](331.0000305175781 * _0x4e0d6c, 0.9488677978515625 * _0x4e0d6c, 409.0000305175781 * _0x4e0d6c, 61.94886779785156 * _0x4e0d6c, 428.0000305175781 * _0x4e0d6c, 133.94886779785156 * _0x4e0d6c), _0x5b2c20['bezierCurveTo'](445.0000305175781 * _0x4e0d6c, 207.94886779785156 * _0x4e0d6c, 439.0000305175781 * _0x4e0d6c, 274.94886779785156 * _0x4e0d6c, 426.0000305175781 * _0x4e0d6c, 342.94886779785156 * _0x4e0d6c), _0x5b2c20['bezierCurveTo'](355.0000305175781 * _0x4e0d6c, 207.94886779785156 * _0x4e0d6c, 345.0000305175781 * _0x4e0d6c, 208.94886779785156 * _0x4e0d6c, 333.0000305175781 * _0x4e0d6c, 202.94886779785156 * _0x4e0d6c), _0x5b2c20['bezierCurveTo'](262.0000305175781 * _0x4e0d6c, 143.94886779785156 * _0x4e0d6c, 236.00003051757812 * _0x4e0d6c, 148.94886779785156 * _0x4e0d6c, 189.00003051757812 * _0x4e0d6c, 162.94886779785156 * _0x4e0d6c), _0x5b2c20['bezierCurveTo'](82.00003051757812 * _0x4e0d6c, 190.94886779785156 * _0x4e0d6c, 78.00003051757812 * _0x4e0d6c, 235.94886779785156 * _0x4e0d6c, 62.000030517578125 * _0x4e0d6c, 279.94886779785156 * _0x4e0d6c), _0x5b2c20['closePath'](), fill_path(_0x5b2c20, undefined, _0x3e7ff9[0x1], 0x10 * _0x4e0d6c), _0x5b2c20['beginPath'](), _0x5b2c20['lineCap'] = 'round', _0x5b2c20['lineJoin'] = 'round', _0x5b2c20['moveTo'](60.000030517578125 * _0x4e0d6c, 288.03977966308594 * _0x4e0d6c), _0x5b2c20['bezierCurveTo'](183.00003051757812 * _0x4e0d6c, 320.03977966308594 * _0x4e0d6c, 342.0000305175781 * _0x4e0d6c, 306.03977966308594 * _0x4e0d6c, 399.0000305175781 * _0x4e0d6c, 286.03977966308594 * _0x4e0d6c), _0x5b2c20['bezierCurveTo'](420.0000305175781 * _0x4e0d6c, 345.03977966308594 * _0x4e0d6c, 410.0000305175781 * _0x4e0d6c, 335.03977966308594 * _0x4e0d6c, 415.0000305175781 * _0x4e0d6c, 362.03977966308594 * _0x4e0d6c), _0x5b2c20['bezierCurveTo'](351.0000305175781 * _0x4e0d6c, 384.03977966308594 * _0x4e0d6c, 299.0000305175781 * _0x4e0d6c, 389.03977966308594 * _0x4e0d6c, 215.00003051757812 * _0x4e0d6c, 391.03977966308594 * _0x4e0d6c), _0x5b2c20['bezierCurveTo'](128.00003051757812 * _0x4e0d6c, 388.03977966308594 * _0x4e0d6c, 69.00003051757812 * _0x4e0d6c, 373.03977966308594 * _0x4e0d6c, 39.000030517578125 * _0x4e0d6c, 359.03977966308594 * _0x4e0d6c), _0x5b2c20['closePath'](), fill_path(_0x5b2c20, _0x3e7ff9[0x0], _0x3e7ff9[0x1], 0xd * _0x4e0d6c), _0x5b2c20['beginPath'](), _0x5b2c20['lineCap'] = 'round', _0x5b2c20['lineJoin'] = 'round', _0x5b2c20['moveTo'](47.000030517578125 * _0x4e0d6c, 327.03977966308594 * _0x4e0d6c), _0x5b2c20['bezierCurveTo'](203.00003051757812 * _0x4e0d6c, 377.03977966308594 * _0x4e0d6c, 331.0000305175781 * _0x4e0d6c, 349.03977966308594 * _0x4e0d6c, 410.0000305175781 * _0x4e0d6c, 330.03977966308594 * _0x4e0d6c), _0x5b2c20['closePath'](), fill_path(_0x5b2c20, _0x3e7ff9[0x0], _0x3e7ff9[0x1], 0x14 * _0x4e0d6c), _0x5b2c20['beginPath'](), _0x5b2c20['lineCap'] = 'round', _0x5b2c20['lineJoin'] = 'round', _0x5b2c20['moveTo'](9.000030517578125 * _0x4e0d6c, 339.1306915283203 * _0x4e0d6c), _0x5b2c20['bezierCurveTo'](2.000030517578125 * _0x4e0d6c, 280.1306915283203 * _0x4e0d6c, 30.000030517578125 * _0x4e0d6c, 219.1306915283203 * _0x4e0d6c, 85.00003051757812 * _0x4e0d6c, 167.1306915283203 * _0x4e0d6c), _0x5b2c20['bezierCurveTo'](174.00003051757812 * _0x4e0d6c, 82.13069152832031 * _0x4e0d6c, 241.00003051757812 * _0x4e0d6c, 101.13069152832031 * _0x4e0d6c, 284.0000305175781 * _0x4e0d6c, 115.13069152832031 * _0x4e0d6c), _0x5b2c20['bezierCurveTo'](333.0000305175781 * _0x4e0d6c, 134.1306915283203 * _0x4e0d6c, 376.0000305175781 * _0x4e0d6c, 177.1306915283203 * _0x4e0d6c, 410.0000305175781 * _0x4e0d6c, 247.1306915283203 * _0x4e0d6c), _0x5b2c20['bezierCurveTo'](439.0000305175781 * _0x4e0d6c, 300.1306915283203 * _0x4e0d6c, 442.0000305175781 * _0x4e0d6c, 346.1306915283203 * _0x4e0d6c, 430.0000305175781 * _0x4e0d6c, 363.1306915283203 * _0x4e0d6c), _0x5b2c20['bezierCurveTo'](418.0000305175781 * _0x4e0d6c, 366.1306915283203 * _0x4e0d6c, 395.0000305175781 * _0x4e0d6c, 295.1306915283203 * _0x4e0d6c, 355.0000305175781 * _0x4e0d6c, 223.1306915283203 * _0x4e0d6c), _0x5b2c20['bezierCurveTo'](299.0000305175781 * _0x4e0d6c, 156.1306915283203 * _0x4e0d6c, 262.0000305175781 * _0x4e0d6c, 155.1306915283203 * _0x4e0d6c, 215.00003051757812 * _0x4e0d6c, 159.1306915283203 * _0x4e0d6c), _0x5b2c20['bezierCurveTo'](133.00003051757812 * _0x4e0d6c, 171.1306915283203 * _0x4e0d6c, 120.00003051757812 * _0x4e0d6c, 193.1306915283203 * _0x4e0d6c, 96.00003051757812 * _0x4e0d6c, 221.1306915283203 * _0x4e0d6c), _0x5b2c20['bezierCurveTo'](49.000030517578125 * _0x4e0d6c, 262.1306915283203 * _0x4e0d6c, 47.000030517578125 * _0x4e0d6c, 306.1306915283203 * _0x4e0d6c, 38.000030517578125 * _0x4e0d6c, 336.1306915283203 * _0x4e0d6c), _0x5b2c20['bezierCurveTo'](30.000030517578125 * _0x4e0d6c, 349.1306915283203 * _0x4e0d6c, 30.000030517578125 * _0x4e0d6c, 349.1306915283203 * _0x4e0d6c, 22.000030517578125 * _0x4e0d6c, 362.1306915283203 * _0x4e0d6c), _0x5b2c20['closePath'](), fill_path(_0x5b2c20, _0x3e7ff9[0x2], _0x3e7ff9[0x1], 0x14 * _0x4e0d6c), _0x5b2c20['beginPath'](), _0x5b2c20['lineCap'] = 'round', _0x5b2c20['lineJoin'] = 'round', _0x5b2c20['moveTo'](228.00003051757812 * _0x4e0d6c, 128.03977966308594 * _0x4e0d6c), _0x5b2c20['bezierCurveTo'](315.0000305175781 * _0x4e0d6c, 131.03977966308594 * _0x4e0d6c, 349.0000305175781 * _0x4e0d6c, 178.03977966308594 * _0x4e0d6c, 386.0000305175781 * _0x4e0d6c, 234.03977966308594 * _0x4e0d6c), _0x5b2c20['bezierCurveTo'](444.0000305175781 * _0x4e0d6c, 329.03977966308594 * _0x4e0d6c, 446.0000305175781 * _0x4e0d6c, 354.03977966308594 * _0x4e0d6c, 427.0000305175781 * _0x4e0d6c, 373.03977966308594 * _0x4e0d6c), _0x5b2c20['bezierCurveTo'](389.0000305175781 * _0x4e0d6c, 389.03977966308594 * _0x4e0d6c, 399.0000305175781 * _0x4e0d6c, 329.03977966308594 * _0x4e0d6c, 361.0000305175781 * _0x4e0d6c, 277.03977966308594 * _0x4e0d6c), _0x5b2c20['bezierCurveTo'](306.0000305175781 * _0x4e0d6c, 191.03977966308594 * _0x4e0d6c, 266.0000305175781 * _0x4e0d6c, 183.03977966308594 * _0x4e0d6c, 220.00003051757812 * _0x4e0d6c, 181.03977966308594 * _0x4e0d6c), _0x5b2c20['bezierCurveTo'](138.00003051757812 * _0x4e0d6c, 184.03977966308594 * _0x4e0d6c, 123.00003051757812 * _0x4e0d6c, 212.03977966308594 * _0x4e0d6c, 89.00003051757812 * _0x4e0d6c, 271.03977966308594 * _0x4e0d6c), _0x5b2c20['bezierCurveTo'](52.000030517578125 * _0x4e0d6c, 349.03977966308594 * _0x4e0d6c, 68.00003051757812 * _0x4e0d6c, 364.03977966308594 * _0x4e0d6c, 33.000030517578125 * _0x4e0d6c, 369.03977966308594 * _0x4e0d6c), _0x5b2c20['bezierCurveTo'](6.000030517578125 * _0x4e0d6c, 366.03977966308594 * _0x4e0d6c, 5.000030517578125 * _0x4e0d6c, 341.03977966308594 * _0x4e0d6c, 26.000030517578125 * _0x4e0d6c, 288.03977966308594 * _0x4e0d6c), _0x5b2c20['bezierCurveTo'](60.000030517578125 * _0x4e0d6c, 207.03977966308594 * _0x4e0d6c, 100.00003051757812 * _0x4e0d6c, 180.03977966308594 * _0x4e0d6c, 113.00003051757812 * _0x4e0d6c, 170.03977966308594 * _0x4e0d6c), _0x5b2c20['bezierCurveTo'](159.00003051757812 * _0x4e0d6c, 132.03977966308594 * _0x4e0d6c, 196.00003051757812 * _0x4e0d6c, 133.03977966308594 * _0x4e0d6c, 226.00003051757812 * _0x4e0d6c, 129.03977966308594 * _0x4e0d6c), _0x5b2c20['closePath'](), fill_path(_0x5b2c20, _0x3e7ff9[0x0], _0x3e7ff9[0x1], 0x14 * _0x4e0d6c), _0x2ae86c;
}

function create_peasant(_0x2f0f82, _0x3c3053, _0x3bc4d3, _0x50523b) {
    var _0x5ab4c4 = document['createElement']('canvas'),
        _0x3b0e2b = _0x5ab4c4['getContext']('2d');
    return _0x5ab4c4['width'] = 0xc6 * _0x2f0f82, _0x5ab4c4['height'] = 0x93 * _0x2f0f82, _0x3b0e2b['globalAlpha'] = _0x3c3053 ? 0.5 : 0x1, _0x3b0e2b['translate'](0x0, 0x6 * _0x2f0f82), _0x3b0e2b['beginPath'](), _0x3b0e2b['lineCap'] = 'round', _0x3b0e2b['lineJoin'] = 'round', _0x3b0e2b['moveTo'](0x2c * _0x2f0f82, 0x4c * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0x32 * _0x2f0f82, 0x52 * _0x2f0f82, 0x32 * _0x2f0f82, 0x52 * _0x2f0f82, 0x38 * _0x2f0f82, 0x58 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0x3b * _0x2f0f82, 0x52 * _0x2f0f82, 0x3b * _0x2f0f82, 0x52 * _0x2f0f82, 0x3e * _0x2f0f82, 0x4c * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0x3b * _0x2f0f82, 0x47 * _0x2f0f82, 0x3b * _0x2f0f82, 0x47 * _0x2f0f82, 0x38 * _0x2f0f82, 0x42 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0x3b * _0x2f0f82, 0x45 * _0x2f0f82, 0x3b * _0x2f0f82, 0x45 * _0x2f0f82, 0x3e * _0x2f0f82, 0x48 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0x50 * _0x2f0f82, 0x30 * _0x2f0f82, 0x66 * _0x2f0f82, 0x32 * _0x2f0f82, 0x78 * _0x2f0f82, 0x3e * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0x7f * _0x2f0f82, 0x3a * _0x2f0f82, 0x7f * _0x2f0f82, 0x3a * _0x2f0f82, 0x86 * _0x2f0f82, 0x36 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0x81 * _0x2f0f82, 0x3c * _0x2f0f82, 0x81 * _0x2f0f82, 0x3c * _0x2f0f82, 0x7c * _0x2f0f82, 0x42 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0x81 * _0x2f0f82, 0x49 * _0x2f0f82, 0x81 * _0x2f0f82, 0x49 * _0x2f0f82, 0x86 * _0x2f0f82, 0x50 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0x8c * _0x2f0f82, 0x4a * _0x2f0f82, 0x8c * _0x2f0f82, 0x4a * _0x2f0f82, 0x92 * _0x2f0f82, 0x44 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0x8e * _0x2f0f82, 0x4c * _0x2f0f82, 0x8e * _0x2f0f82, 0x4c * _0x2f0f82, 0x8a * _0x2f0f82, 0x54 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0x90 * _0x2f0f82, 0x5a * _0x2f0f82, 0x8e * _0x2f0f82, 0x5a * _0x2f0f82, 0x90 * _0x2f0f82, 0x5a * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0x88 * _0x2f0f82, 0x61 * _0x2f0f82, 0x88 * _0x2f0f82, 0x61 * _0x2f0f82, 0x80 * _0x2f0f82, 0x68 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0x9a * _0x2f0f82, 0x6e * _0x2f0f82, 0xa4 * _0x2f0f82, 0x5a * _0x2f0f82, 0xa0 * _0x2f0f82, 0x50 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0x8a * _0x2f0f82, 0x16 * _0x2f0f82, 0x94 * _0x2f0f82, 0x33 * _0x2f0f82, 0x88 * _0x2f0f82, 0x16 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0x61 * _0x2f0f82, 0x18 * _0x2f0f82, 0x61 * _0x2f0f82, 0x18 * _0x2f0f82, 0x3a * _0x2f0f82, 0x1a * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0x2f * _0x2f0f82, 0x36 * _0x2f0f82, 0x24 * _0x2f0f82, 0x50 * _0x2f0f82, 0x24 * _0x2f0f82, 0x52 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0x28 * _0x2f0f82, 0x6c * _0x2f0f82, 0x36 * _0x2f0f82, 0x68 * _0x2f0f82, 0x3e * _0x2f0f82, 0x68 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0x2e * _0x2f0f82, 0x5c * _0x2f0f82, 0x36 * _0x2f0f82, 0x61 * _0x2f0f82, 0x2e * _0x2f0f82, 0x5a * _0x2f0f82), _0x3b0e2b['closePath'](), fill_path(_0x3b0e2b, _0x3bc4d3[0x0]), _0x3b0e2b['beginPath'](), _0x3b0e2b['lineCap'] = 'round', _0x3b0e2b['lineJoin'] = 'round', _0x3b0e2b['moveTo'](0x24 * _0x2f0f82, 0x50 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0x1e * _0x2f0f82, 0x54 * _0x2f0f82, 0x1c * _0x2f0f82, 0x5c * _0x2f0f82, 0x22 * _0x2f0f82, 0x64 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](41.5 * _0x2f0f82, 0x66 * _0x2f0f82, 41.5 * _0x2f0f82, 0x66 * _0x2f0f82, 0x31 * _0x2f0f82, 0x68 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0x2b * _0x2f0f82, 105.5 * _0x2f0f82, 0x2b * _0x2f0f82, 105.5 * _0x2f0f82, 0x25 * _0x2f0f82, 0x6b * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0x2e * _0x2f0f82, 0x6f * _0x2f0f82, 0x3c * _0x2f0f82, 0x72 * _0x2f0f82, 0x4c * _0x2f0f82, 0x72 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0x4e * _0x2f0f82, 110.5 * _0x2f0f82, 0x4e * _0x2f0f82, 110.5 * _0x2f0f82, 0x50 * _0x2f0f82, 0x6b * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0x51 * _0x2f0f82, 110.5 * _0x2f0f82, 0x51 * _0x2f0f82, 110.5 * _0x2f0f82, 0x52 * _0x2f0f82, 0x72 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](94.5 * _0x2f0f82, 113.5 * _0x2f0f82, 94.5 * _0x2f0f82, 113.5 * _0x2f0f82, 0x6b * _0x2f0f82, 0x71 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](108.5 * _0x2f0f82, 0x6e * _0x2f0f82, 108.5 * _0x2f0f82, 0x6e * _0x2f0f82, 0x6e * _0x2f0f82, 0x6b * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](111.5 * _0x2f0f82, 110.5 * _0x2f0f82, 111.5 * _0x2f0f82, 110.5 * _0x2f0f82, 0x71 * _0x2f0f82, 0x72 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0x83 * _0x2f0f82, 112.5 * _0x2f0f82, 0x83 * _0x2f0f82, 112.5 * _0x2f0f82, 0x95 * _0x2f0f82, 0x6f * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](148.5 * _0x2f0f82, 107.5 * _0x2f0f82, 148.5 * _0x2f0f82, 107.5 * _0x2f0f82, 0x94 * _0x2f0f82, 0x68 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](150.5 * _0x2f0f82, 0x6b * _0x2f0f82, 150.5 * _0x2f0f82, 0x6b * _0x2f0f82, 0x99 * _0x2f0f82, 0x6e * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](155.5 * _0x2f0f82, 108.5 * _0x2f0f82, 155.5 * _0x2f0f82, 108.5 * _0x2f0f82, 0x9e * _0x2f0f82, 0x6b * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](156.5 * _0x2f0f82, 0x68 * _0x2f0f82, 156.5 * _0x2f0f82, 0x68 * _0x2f0f82, 0x9b * _0x2f0f82, 0x65 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](158.5 * _0x2f0f82, 102.5 * _0x2f0f82, 158.5 * _0x2f0f82, 102.5 * _0x2f0f82, 0xa2 * _0x2f0f82, 0x68 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0xa8 * _0x2f0f82, 0x64 * _0x2f0f82, 0xaa * _0x2f0f82, 0x5c * _0x2f0f82, 0xa9 * _0x2f0f82, 0x55 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0xa6 * _0x2f0f82, 0x56 * _0x2f0f82, 0xa6 * _0x2f0f82, 0x56 * _0x2f0f82, 0xa3 * _0x2f0f82, 0x57 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](165.5 * _0x2f0f82, 0x53 * _0x2f0f82, 165.5 * _0x2f0f82, 0x53 * _0x2f0f82, 0xa8 * _0x2f0f82, 0x4f * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](165.5 * _0x2f0f82, 76.5 * _0x2f0f82, 165.5 * _0x2f0f82, 76.5 * _0x2f0f82, 0xa3 * _0x2f0f82, 0x4a * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0x9b * _0x2f0f82, 82.5 * _0x2f0f82, 0x9b * _0x2f0f82, 82.5 * _0x2f0f82, 0x93 * _0x2f0f82, 0x5b * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0x8b * _0x2f0f82, 95.5 * _0x2f0f82, 0x8b * _0x2f0f82, 95.5 * _0x2f0f82, 0x83 * _0x2f0f82, 0x64 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](97.5 * _0x2f0f82, 100.5 * _0x2f0f82, 97.5 * _0x2f0f82, 100.5 * _0x2f0f82, 0x40 * _0x2f0f82, 0x65 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0x31 * _0x2f0f82, 0x66 * _0x2f0f82, 0x2b * _0x2f0f82, 0x5a * _0x2f0f82, 0x24 * _0x2f0f82, 0x50 * _0x2f0f82), _0x3b0e2b['closePath'](), fill_path(_0x3b0e2b, _0x3bc4d3[0x0]), _0x3b0e2b['globalAlpha'] = 0x1, _0x3b0e2b['translate'](0x0, -0x6 * _0x2f0f82), _0x3b0e2b['beginPath'](), _0x3b0e2b['lineCap'] = 'round', _0x3b0e2b['lineJoin'] = 'round', _0x3b0e2b['moveTo'](0x24 * _0x2f0f82, 0x50 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0x1e * _0x2f0f82, 0x54 * _0x2f0f82, 0x1c * _0x2f0f82, 0x5c * _0x2f0f82, 0x22 * _0x2f0f82, 0x64 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](41.5 * _0x2f0f82, 0x66 * _0x2f0f82, 41.5 * _0x2f0f82, 0x66 * _0x2f0f82, 0x31 * _0x2f0f82, 0x68 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0x2b * _0x2f0f82, 105.5 * _0x2f0f82, 0x2b * _0x2f0f82, 105.5 * _0x2f0f82, 0x25 * _0x2f0f82, 0x6b * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0x2e * _0x2f0f82, 0x6f * _0x2f0f82, 0x3c * _0x2f0f82, 0x72 * _0x2f0f82, 0x4c * _0x2f0f82, 0x72 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0x4e * _0x2f0f82, 110.5 * _0x2f0f82, 0x4e * _0x2f0f82, 110.5 * _0x2f0f82, 0x50 * _0x2f0f82, 0x6b * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0x51 * _0x2f0f82, 110.5 * _0x2f0f82, 0x51 * _0x2f0f82, 110.5 * _0x2f0f82, 0x52 * _0x2f0f82, 0x72 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](94.5 * _0x2f0f82, 113.5 * _0x2f0f82, 94.5 * _0x2f0f82, 113.5 * _0x2f0f82, 0x6b * _0x2f0f82, 0x71 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](108.5 * _0x2f0f82, 0x6e * _0x2f0f82, 108.5 * _0x2f0f82, 0x6e * _0x2f0f82, 0x6e * _0x2f0f82, 0x6b * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](111.5 * _0x2f0f82, 110.5 * _0x2f0f82, 111.5 * _0x2f0f82, 110.5 * _0x2f0f82, 0x71 * _0x2f0f82, 0x72 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0x83 * _0x2f0f82, 112.5 * _0x2f0f82, 0x83 * _0x2f0f82, 112.5 * _0x2f0f82, 0x95 * _0x2f0f82, 0x6f * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](148.5 * _0x2f0f82, 107.5 * _0x2f0f82, 148.5 * _0x2f0f82, 107.5 * _0x2f0f82, 0x94 * _0x2f0f82, 0x68 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](150.5 * _0x2f0f82, 0x6b * _0x2f0f82, 150.5 * _0x2f0f82, 0x6b * _0x2f0f82, 0x99 * _0x2f0f82, 0x6e * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](155.5 * _0x2f0f82, 108.5 * _0x2f0f82, 155.5 * _0x2f0f82, 108.5 * _0x2f0f82, 0x9e * _0x2f0f82, 0x6b * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](156.5 * _0x2f0f82, 0x68 * _0x2f0f82, 156.5 * _0x2f0f82, 0x68 * _0x2f0f82, 0x9b * _0x2f0f82, 0x65 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](158.5 * _0x2f0f82, 102.5 * _0x2f0f82, 158.5 * _0x2f0f82, 102.5 * _0x2f0f82, 0xa2 * _0x2f0f82, 0x68 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0xa8 * _0x2f0f82, 0x64 * _0x2f0f82, 0xaa * _0x2f0f82, 0x5c * _0x2f0f82, 0xa9 * _0x2f0f82, 0x55 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0xa6 * _0x2f0f82, 0x56 * _0x2f0f82, 0xa6 * _0x2f0f82, 0x56 * _0x2f0f82, 0xa3 * _0x2f0f82, 0x57 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](165.5 * _0x2f0f82, 0x53 * _0x2f0f82, 165.5 * _0x2f0f82, 0x53 * _0x2f0f82, 0xa8 * _0x2f0f82, 0x4f * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](165.5 * _0x2f0f82, 76.5 * _0x2f0f82, 165.5 * _0x2f0f82, 76.5 * _0x2f0f82, 0xa3 * _0x2f0f82, 0x4a * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0x9b * _0x2f0f82, 82.5 * _0x2f0f82, 0x9b * _0x2f0f82, 82.5 * _0x2f0f82, 0x93 * _0x2f0f82, 0x5b * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0x8b * _0x2f0f82, 95.5 * _0x2f0f82, 0x8b * _0x2f0f82, 95.5 * _0x2f0f82, 0x83 * _0x2f0f82, 0x64 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](97.5 * _0x2f0f82, 100.5 * _0x2f0f82, 97.5 * _0x2f0f82, 100.5 * _0x2f0f82, 0x40 * _0x2f0f82, 0x65 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0x31 * _0x2f0f82, 0x66 * _0x2f0f82, 0x2b * _0x2f0f82, 0x5a * _0x2f0f82, 0x24 * _0x2f0f82, 0x50 * _0x2f0f82), _0x3b0e2b['closePath'](), fill_path(_0x3b0e2b, _0x3bc4d3[0x1], _0x3bc4d3[0x2], 0x4 * _0x2f0f82), _0x3b0e2b['beginPath'](), _0x3b0e2b['lineCap'] = 'round', _0x3b0e2b['lineJoin'] = 'round', _0x3b0e2b['moveTo'](0x31 * _0x2f0f82, 0x62 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](96.5 * _0x2f0f82, 0x62 * _0x2f0f82, 96.5 * _0x2f0f82, 0x62 * _0x2f0f82, 0x90 * _0x2f0f82, 0x62 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](136.5 * _0x2f0f82, 0x66 * _0x2f0f82, 136.5 * _0x2f0f82, 0x66 * _0x2f0f82, 0x81 * _0x2f0f82, 0x6a * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0x67 * _0x2f0f82, 105.5 * _0x2f0f82, 0x67 * _0x2f0f82, 105.5 * _0x2f0f82, 0x4d * _0x2f0f82, 0x69 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0x41 * _0x2f0f82, 0x69 * _0x2f0f82, 0x41 * _0x2f0f82, 0x69 * _0x2f0f82, 0x35 * _0x2f0f82, 0x69 * _0x2f0f82), _0x3b0e2b['closePath'](), fill_path(_0x3b0e2b, _0x3bc4d3[0x1]), _0x3b0e2b['globalAlpha'] = 0.5, _0x3b0e2b['beginPath'](), _0x3b0e2b['lineCap'] = 'round', _0x3b0e2b['lineJoin'] = 'round', _0x3b0e2b['moveTo'](0x36 * _0x2f0f82, 0x62 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0x61 * _0x2f0f82, 0x62 * _0x2f0f82, 0x61 * _0x2f0f82, 0x62 * _0x2f0f82, 0x8c * _0x2f0f82, 0x62 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0x86 * _0x2f0f82, 0x65 * _0x2f0f82, 0x86 * _0x2f0f82, 0x65 * _0x2f0f82, 0x80 * _0x2f0f82, 0x68 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0x5c * _0x2f0f82, 0x68 * _0x2f0f82, 0x5c * _0x2f0f82, 0x68 * _0x2f0f82, 0x38 * _0x2f0f82, 0x68 * _0x2f0f82), _0x3b0e2b['closePath'](), fill_path(_0x3b0e2b, _0x3bc4d3[0x0]), _0x3b0e2b['globalAlpha'] = 0x1, _0x3b0e2b['beginPath'](), _0x3b0e2b['lineCap'] = 'round', _0x3b0e2b['lineJoin'] = 'round', _0x3b0e2b['moveTo'](0x76 * _0x2f0f82, 0x2f * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](124.5 * _0x2f0f82, 43.5 * _0x2f0f82, 124.5 * _0x2f0f82, 43.5 * _0x2f0f82, 0x83 * _0x2f0f82, 0x28 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0x80 * _0x2f0f82, 0x2e * _0x2f0f82, 0x80 * _0x2f0f82, 0x2e * _0x2f0f82, 0x7d * _0x2f0f82, 0x34 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0x83 * _0x2f0f82, 0x39 * _0x2f0f82, 0x87 * _0x2f0f82, 0x40 * _0x2f0f82, 0x8b * _0x2f0f82, 0x49 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](142.5 * _0x2f0f82, 69.5 * _0x2f0f82, 142.5 * _0x2f0f82, 69.5 * _0x2f0f82, 0x92 * _0x2f0f82, 0x42 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](143.5 * _0x2f0f82, 72.5 * _0x2f0f82, 143.5 * _0x2f0f82, 72.5 * _0x2f0f82, 0x8d * _0x2f0f82, 0x4f * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0x8e * _0x2f0f82, 0x5b * _0x2f0f82, 0x8d * _0x2f0f82, 0x5e * _0x2f0f82, 0x84 * _0x2f0f82, 0x62 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0x75 * _0x2f0f82, 0x66 * _0x2f0f82, 0x7e * _0x2f0f82, 0x6c * _0x2f0f82, 0x8e * _0x2f0f82, 0x66 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0x9f * _0x2f0f82, 0x62 * _0x2f0f82, 0xa4 * _0x2f0f82, 0x50 * _0x2f0f82, 0xa2 * _0x2f0f82, 0x2f * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0xa0 * _0x2f0f82, 0x13 * _0x2f0f82, 0x96 * _0x2f0f82, 0x6 * _0x2f0f82, 0x75 * _0x2f0f82, 0x4 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0x2c * _0x2f0f82, 0x0 * _0x2f0f82, 0x23 * _0x2f0f82, 0x14 * _0x2f0f82, 0x21 * _0x2f0f82, 0x25 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0x1d * _0x2f0f82, 0x45 * _0x2f0f82, 0x21 * _0x2f0f82, 0x58 * _0x2f0f82, 0x2c * _0x2f0f82, 0x60 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0x40 * _0x2f0f82, 0x6b * _0x2f0f82, 0x46 * _0x2f0f82, 0x66 * _0x2f0f82, 0x36 * _0x2f0f82, 0x5d * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0x31 * _0x2f0f82, 0x58 * _0x2f0f82, 0x32 * _0x2f0f82, 0x52 * _0x2f0f82, 0x35 * _0x2f0f82, 0x4d * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](51.5 * _0x2f0f82, 0x47 * _0x2f0f82, 51.5 * _0x2f0f82, 0x47 * _0x2f0f82, 0x32 * _0x2f0f82, 0x41 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0x35 * _0x2f0f82, 68.5 * _0x2f0f82, 0x35 * _0x2f0f82, 68.5 * _0x2f0f82, 0x38 * _0x2f0f82, 0x48 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0x3b * _0x2f0f82, 67.5 * _0x2f0f82, 0x3b * _0x2f0f82, 67.5 * _0x2f0f82, 0x3e * _0x2f0f82, 0x3f * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](60.5 * _0x2f0f82, 59.5 * _0x2f0f82, 60.5 * _0x2f0f82, 59.5 * _0x2f0f82, 0x3b * _0x2f0f82, 0x38 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0x3e * _0x2f0f82, 0x39 * _0x2f0f82, 0x3e * _0x2f0f82, 0x39 * _0x2f0f82, 0x41 * _0x2f0f82, 0x3a * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0x4e * _0x2f0f82, 0x23 * _0x2f0f82, 0x67 * _0x2f0f82, 0x24 * _0x2f0f82, 0x75 * _0x2f0f82, 0x2f * _0x2f0f82), _0x3b0e2b['closePath'](), fill_path(_0x3b0e2b, _0x3bc4d3[0x1], _0x3bc4d3[0x2], 0x6 * _0x2f0f82), _0x3b0e2b['beginPath'](), _0x3b0e2b['lineCap'] = 'round', _0x3b0e2b['lineJoin'] = 'round', _0x3b0e2b['moveTo'](0x3e * _0x2f0f82, 0x15 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0x3f * _0x2f0f82, 0x22 * _0x2f0f82, 0x40 * _0x2f0f82, 0x25 * _0x2f0f82, 0x42 * _0x2f0f82, 0x28 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0x36 * _0x2f0f82, 0x31 * _0x2f0f82, 0x35 * _0x2f0f82, 0x33 * _0x2f0f82, 0x30 * _0x2f0f82, 0x3a * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0x2c * _0x2f0f82, 0x33 * _0x2f0f82, 0x2a * _0x2f0f82, 0x2b * _0x2f0f82, 0x28 * _0x2f0f82, 0x24 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0x2f * _0x2f0f82, 0x1c * _0x2f0f82, 0x34 * _0x2f0f82, 0x19 * _0x2f0f82, 0x3d * _0x2f0f82, 0x15 * _0x2f0f82), _0x3b0e2b['closePath'](), fill_path(_0x3b0e2b, _0x3bc4d3[0x4]), _0x3b0e2b['beginPath'](), _0x3b0e2b['lineCap'] = 'round', _0x3b0e2b['lineJoin'] = 'round', _0x3b0e2b['moveTo'](0x3c * _0x2f0f82, 0x1d * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0x3e * _0x2f0f82, 0x19 * _0x2f0f82, 0x41 * _0x2f0f82, 0x18 * _0x2f0f82, 0x46 * _0x2f0f82, 0x17 * _0x2f0f82), fill_path(_0x3b0e2b, undefined, _0x3bc4d3[0x3], 0x4 * _0x2f0f82), _0x3b0e2b['beginPath'](), _0x3b0e2b['lineCap'] = 'round', _0x3b0e2b['lineJoin'] = 'round', _0x3b0e2b['moveTo'](0x3d * _0x2f0f82, 0x25 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0x3f * _0x2f0f82, 0x20 * _0x2f0f82, 0x42 * _0x2f0f82, 0x20 * _0x2f0f82, 0x47 * _0x2f0f82, 0x20 * _0x2f0f82), fill_path(_0x3b0e2b, undefined, _0x3bc4d3[0x3], 0x4 * _0x2f0f82), _0x3b0e2b['beginPath'](), _0x3b0e2b['lineCap'] = 'round', _0x3b0e2b['lineJoin'] = 'round', _0x3b0e2b['moveTo'](0x34 * _0x2f0f82, 0x1f * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0x32 * _0x2f0f82, 0x1a * _0x2f0f82, 0x32 * _0x2f0f82, 0x19 * _0x2f0f82, 0x33 * _0x2f0f82, 0x17 * _0x2f0f82), fill_path(_0x3b0e2b, undefined, _0x3bc4d3[0x3], 0x4 * _0x2f0f82), _0x3b0e2b['beginPath'](), _0x3b0e2b['lineCap'] = 'round', _0x3b0e2b['lineJoin'] = 'round', _0x3b0e2b['moveTo'](0x2e * _0x2f0f82, 0x23 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0x2c * _0x2f0f82, 0x1f * _0x2f0f82, 0x2b * _0x2f0f82, 0x1d * _0x2f0f82, 0x2d * _0x2f0f82, 0x1a * _0x2f0f82), fill_path(_0x3b0e2b, undefined, _0x3bc4d3[0x3], 0x4 * _0x2f0f82), _0x3b0e2b['beginPath'](), _0x3b0e2b['lineCap'] = 'round', _0x3b0e2b['lineJoin'] = 'round', _0x3b0e2b['moveTo'](0x3a * _0x2f0f82, 0x2c * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0x39 * _0x2f0f82, 0x30 * _0x2f0f82, 0x39 * _0x2f0f82, 0x32 * _0x2f0f82, 0x3c * _0x2f0f82, 0x34 * _0x2f0f82), fill_path(_0x3b0e2b, undefined, _0x3bc4d3[0x3], 0x4 * _0x2f0f82), _0x3b0e2b['beginPath'](), _0x3b0e2b['lineCap'] = 'round', _0x3b0e2b['lineJoin'] = 'round', _0x3b0e2b['moveTo'](0x35 * _0x2f0f82, 0x30 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0x34 * _0x2f0f82, 0x34 * _0x2f0f82, 0x34 * _0x2f0f82, 0x36 * _0x2f0f82, 0x37 * _0x2f0f82, 0x39 * _0x2f0f82), fill_path(_0x3b0e2b, undefined, _0x3bc4d3[0x3], 0x4 * _0x2f0f82), _0x3b0e2b['beginPath'](), _0x3b0e2b['lineCap'] = 'round', _0x3b0e2b['lineJoin'] = 'round', _0x3b0e2b['moveTo'](0x2e * _0x2f0f82, 0x29 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0x29 * _0x2f0f82, 0x2a * _0x2f0f82, 0x27 * _0x2f0f82, 0x2d * _0x2f0f82, 0x26 * _0x2f0f82, 0x30 * _0x2f0f82), fill_path(_0x3b0e2b, undefined, _0x3bc4d3[0x3], 0x4 * _0x2f0f82), _0x3b0e2b['beginPath'](), _0x3b0e2b['lineCap'] = 'round', _0x3b0e2b['lineJoin'] = 'round', _0x3b0e2b['moveTo'](0x30 * _0x2f0f82, 0x30 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0x2a * _0x2f0f82, 0x33 * _0x2f0f82, 0x2a * _0x2f0f82, 0x35 * _0x2f0f82, 0x28 * _0x2f0f82, 0x37 * _0x2f0f82), fill_path(_0x3b0e2b, undefined, _0x3bc4d3[0x3], 0x4 * _0x2f0f82), _0x50523b == 0x0 ? (_0x3b0e2b['beginPath'](), _0x3b0e2b['lineCap'] = 'round', _0x3b0e2b['lineJoin'] = 'round', _0x3b0e2b['moveTo'](0x63 * _0x2f0f82, 0x65 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](118.6666259765625 * _0x2f0f82, 104.33331298828125 * _0x2f0f82, 124.6666259765625 * _0x2f0f82, 116.33331298828125 * _0x2f0f82, 112.6666259765625 * _0x2f0f82, 114.33331298828125 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](104.6666259765625 * _0x2f0f82, 112.33331298828125 * _0x2f0f82, 100.6666259765625 * _0x2f0f82, 105.33331298828125 * _0x2f0f82, 99.6666259765625 * _0x2f0f82, 101.33331298828125 * _0x2f0f82), fill_path(_0x3b0e2b, undefined, _0x3bc4d3[0x5], 0x6 * _0x2f0f82), _0x3b0e2b['beginPath'](), _0x3b0e2b['lineCap'] = 'round', _0x3b0e2b['lineJoin'] = 'round', _0x3b0e2b['moveTo'](97.6666259765625 * _0x2f0f82, 101.33331298828125 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](81.6666259765625 * _0x2f0f82, 106.33331298828125 * _0x2f0f82, 79.6666259765625 * _0x2f0f82, 114.33331298828125 * _0x2f0f82, 89.6666259765625 * _0x2f0f82, 114.33331298828125 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](95.6666259765625 * _0x2f0f82, 111.33331298828125 * _0x2f0f82, 95.6666259765625 * _0x2f0f82, 109.33331298828125 * _0x2f0f82, 98.6666259765625 * _0x2f0f82, 102.33331298828125 * _0x2f0f82), fill_path(_0x3b0e2b, undefined, _0x3bc4d3[0x5], 0x6 * _0x2f0f82)) : (_0x3b0e2b['beginPath'](), _0x3b0e2b['lineCap'] = 'round', _0x3b0e2b['lineJoin'] = 'round', _0x3b0e2b['moveTo'](0x67 * _0x2f0f82, 100.39999389648438 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0x78 * _0x2f0f82, 106.39999389648438 * _0x2f0f82, 0x76 * _0x2f0f82, 107.39999389648438 * _0x2f0f82, 0x78 * _0x2f0f82, 111.39999389648438 * _0x2f0f82), fill_path(_0x3b0e2b, undefined, _0x3bc4d3[0x5], 0x6 * _0x2f0f82), _0x3b0e2b['beginPath'](), _0x3b0e2b['lineCap'] = 'round', _0x3b0e2b['lineJoin'] = 'round', _0x3b0e2b['moveTo'](0x67 * _0x2f0f82, 100.39999389648438 * _0x2f0f82), _0x3b0e2b['bezierCurveTo'](0x5a * _0x2f0f82, 103.39999389648438 * _0x2f0f82, 0x59 * _0x2f0f82, 106.39999389648438 * _0x2f0f82, 0x57 * _0x2f0f82, 112.39999389648438 * _0x2f0f82), fill_path(_0x3b0e2b, undefined, _0x3bc4d3[0x5], 0x6 * _0x2f0f82), circle(_0x3b0e2b, 0x56 * _0x2f0f82, 114.39999389648438 * _0x2f0f82, 4.5 * _0x2f0f82), fill_path(_0x3b0e2b, _0x3bc4d3[0x1], _0x3bc4d3[0x5], 0x6 * _0x2f0f82), circle(_0x3b0e2b, 0x79 * _0x2f0f82, 114.39999389648438 * _0x2f0f82, 4.5 * _0x2f0f82), fill_path(_0x3b0e2b, _0x3bc4d3[0x1], _0x3bc4d3[0x5], 0x6 * _0x2f0f82)), _0x5ab4c4;
}

function create_treasure_chest(_0x4ba222, _0x11f677) {
    var _0x1017c7 = document['createElement']('canvas'),
        _0x40ce3d = _0x1017c7['getContext']('2d');
    return _0x1017c7['width'] = 0xfd * _0x4ba222, _0x1017c7['height'] = 0xc0 * _0x4ba222, _0x40ce3d['globalAlpha'] = 0.5, _0x40ce3d['save'](), _0x40ce3d['translate'](0x2a * _0x4ba222, 0x63 * _0x4ba222), _0x40ce3d['globalAlpha'] = 0.5, round_rect(_0x40ce3d, -0x7 * _0x4ba222, -0x14 * _0x4ba222, 0xe * _0x4ba222, 0x27 * _0x4ba222, 0x14 * _0x4ba222), _0x40ce3d['restore'](), fill_path(_0x40ce3d, _0x11f677[0x0]), _0x40ce3d['globalAlpha'] = 0x1, _0x40ce3d['save'](), _0x40ce3d['translate'](0x25 * _0x4ba222, 0x5e * _0x4ba222), round_rect(_0x40ce3d, -0x7 * _0x4ba222, -0x14 * _0x4ba222, 0xe * _0x4ba222, 0x25 * _0x4ba222, 0x14 * _0x4ba222), _0x40ce3d['restore'](), fill_path(_0x40ce3d, _0x11f677[0x2]), _0x40ce3d['globalAlpha'] = 0.5, _0x40ce3d['save'](), _0x40ce3d['translate'](0x88 * _0x4ba222, 0x63 * _0x4ba222), _0x40ce3d['globalAlpha'] = 0.5, round_rect(_0x40ce3d, -0x54 * _0x4ba222, -0x43 * _0x4ba222, 0xa8 * _0x4ba222, 0x86 * _0x4ba222, 0x14 * _0x4ba222), _0x40ce3d['restore'](), fill_path(_0x40ce3d, _0x11f677[0x0], _0x11f677[0x0], 0xd * _0x4ba222), _0x40ce3d['globalAlpha'] = 0x1, _0x40ce3d['save'](), _0x40ce3d['translate'](0x83 * _0x4ba222, 0x5e * _0x4ba222), round_rect(_0x40ce3d, -0x54 * _0x4ba222, -0x43 * _0x4ba222, 0xa8 * _0x4ba222, 0x86 * _0x4ba222, 0x14 * _0x4ba222), _0x40ce3d['restore'](), fill_path(_0x40ce3d, _0x11f677[0x2], _0x11f677[0x2], 0xd * _0x4ba222), _0x40ce3d['save'](), _0x40ce3d['translate'](0x83 * _0x4ba222, 0x5e * _0x4ba222), round_rect(_0x40ce3d, -0x4c * _0x4ba222, -0x3d * _0x4ba222, 0x98 * _0x4ba222, 0x7a * _0x4ba222, 0x14 * _0x4ba222), _0x40ce3d['restore'](), fill_path(_0x40ce3d, _0x11f677[0x3], _0x11f677[0x1], 0x8 * _0x4ba222), _0x40ce3d['save'](), _0x40ce3d['translate'](168.5 * _0x4ba222, 93.5 * _0x4ba222), round_rect(_0x40ce3d, -30.5 * _0x4ba222, -58.5 * _0x4ba222, 0x3d * _0x4ba222, 0x75 * _0x4ba222, 0x14 * _0x4ba222), _0x40ce3d['restore'](), fill_path(_0x40ce3d, _0x11f677[0x3], _0x11f677[0x4], 0x6 * _0x4ba222), _0x40ce3d['save'](), _0x40ce3d['translate'](93.5 * _0x4ba222, 95.5 * _0x4ba222), round_rect(_0x40ce3d, -0x20 * _0x4ba222, -59.5 * _0x4ba222, 0x3b * _0x4ba222, 0x77 * _0x4ba222, 0x14 * _0x4ba222), _0x40ce3d['restore'](), fill_path(_0x40ce3d, _0x11f677[0x3], _0x11f677[0x4], 0x6 * _0x4ba222), _0x40ce3d['save'](), _0x40ce3d['translate'](130.5 * _0x4ba222, 0x5e * _0x4ba222), round_rect(_0x40ce3d, -0x24 * _0x4ba222, -0x43 * _0x4ba222, 0x49 * _0x4ba222, 0x86 * _0x4ba222, 0x14 * _0x4ba222), _0x40ce3d['restore'](), fill_path(_0x40ce3d, _0x11f677[0x3], _0x11f677[0x2], 0x8 * _0x4ba222), _0x40ce3d['globalAlpha'] = 0.5, _0x40ce3d['save'](), _0x40ce3d['translate'](0x85 * _0x4ba222, 0x61 * _0x4ba222), round_rect(_0x40ce3d, -0x53 * _0x4ba222, -0xc * _0x4ba222, 0xa0 * _0x4ba222, 0x18 * _0x4ba222, 0x0 * _0x4ba222), _0x40ce3d['restore'](), fill_path(_0x40ce3d, _0x11f677[0x0]), _0x40ce3d['globalAlpha'] = 0x1, _0x40ce3d['save'](), _0x40ce3d['translate'](0x85 * _0x4ba222, 0x5c * _0x4ba222), round_rect(_0x40ce3d, -0x53 * _0x4ba222, -0xc * _0x4ba222, 0xa0 * _0x4ba222, 0x18 * _0x4ba222, 0x0 * _0x4ba222), _0x40ce3d['restore'](), fill_path(_0x40ce3d, _0x11f677[0x2]), _0x40ce3d['globalAlpha'] = 0.5, _0x40ce3d['save'](), _0x40ce3d['translate'](0xe4 * _0x4ba222, 99.5 * _0x4ba222), _0x40ce3d['globalAlpha'] = 0.5, round_rect(_0x40ce3d, -0x5 * _0x4ba222, -18.5 * _0x4ba222, 0xa * _0x4ba222, 0x25 * _0x4ba222, 0x14 * _0x4ba222), _0x40ce3d['restore'](), fill_path(_0x40ce3d, _0x11f677[0x0]), _0x40ce3d['globalAlpha'] = 0x1, _0x40ce3d['save'](), _0x40ce3d['translate'](0xdf * _0x4ba222, 94.5 * _0x4ba222), round_rect(_0x40ce3d, -0x5 * _0x4ba222, -18.5 * _0x4ba222, 0xa * _0x4ba222, 0x25 * _0x4ba222, 0x14 * _0x4ba222), _0x40ce3d['restore'](), fill_path(_0x40ce3d, _0x11f677[0x2]), _0x40ce3d['save'](), _0x40ce3d['translate'](133.5 * _0x4ba222, 175.5 * _0x4ba222), _0x40ce3d['globalAlpha'] = 0.5, round_rect(_0x40ce3d, -22.5 * _0x4ba222, -6.5 * _0x4ba222, 0x2d * _0x4ba222, 0xd * _0x4ba222, 0x14 * _0x4ba222), _0x40ce3d['restore'](), fill_path(_0x40ce3d, _0x11f677[0x0]), _0x40ce3d['globalAlpha'] = 0x1, _0x40ce3d['save'](), _0x40ce3d['translate'](128.5 * _0x4ba222, 170.5 * _0x4ba222), round_rect(_0x40ce3d, -22.5 * _0x4ba222, -6.5 * _0x4ba222, 0x2d * _0x4ba222, 0xd * _0x4ba222, 0x14 * _0x4ba222), _0x40ce3d['restore'](), fill_path(_0x40ce3d, _0x11f677[0x2]), _0x1017c7;
}

function create_hurt_treasure_chest(_0x2b9427, _0x260730) {
    var _0x128a91 = document['createElement']('canvas'),
        _0x5825e0 = _0x128a91['getContext']('2d');
    return _0x128a91['width'] = 0xfd * _0x2b9427, _0x128a91['height'] = 0xc0 * _0x2b9427, _0x5825e0['save'](), _0x5825e0['translate'](0x25 * _0x2b9427, 0x5e * _0x2b9427), round_rect(_0x5825e0, -0x7 * _0x2b9427, -0x14 * _0x2b9427, 0xe * _0x2b9427, 0x25 * _0x2b9427, 0x14 * _0x2b9427), _0x5825e0['restore'](), fill_path(_0x5825e0, _0x260730[0x0]), _0x5825e0['save'](), _0x5825e0['translate'](0x83 * _0x2b9427, 0x5e * _0x2b9427), round_rect(_0x5825e0, -0x54 * _0x2b9427, -0x43 * _0x2b9427, 0xa8 * _0x2b9427, 0x86 * _0x2b9427, 0x14 * _0x2b9427), _0x5825e0['restore'](), fill_path(_0x5825e0, _0x260730[0x0], _0x260730[0x0], 0xd * _0x2b9427), _0x5825e0['save'](), _0x5825e0['translate'](0xdf * _0x2b9427, 94.5 * _0x2b9427), round_rect(_0x5825e0, -0x5 * _0x2b9427, -18.5 * _0x2b9427, 0xa * _0x2b9427, 0x25 * _0x2b9427, 0x14 * _0x2b9427), _0x5825e0['restore'](), fill_path(_0x5825e0, _0x260730[0x0]), _0x5825e0['save'](), _0x5825e0['translate'](128.5 * _0x2b9427, 170.5 * _0x2b9427), round_rect(_0x5825e0, -22.5 * _0x2b9427, -6.5 * _0x2b9427, 0x2d * _0x2b9427, 0xd * _0x2b9427, 0x14 * _0x2b9427), _0x5825e0['restore'](), fill_path(_0x5825e0, _0x260730[0x0]), _0x128a91;
}

function create_bottle(_0x30cf85, _0x2d95fa, _0x4099d5) {
    var _0x1181e3 = document['createElement']('canvas'),
        _0x3d2fb0 = _0x1181e3['getContext']('2d');
    return _0x1181e3['width'] = 0x13c * _0x30cf85, _0x1181e3['height'] = 0x16d * _0x30cf85, _0x3d2fb0['save'](), _0x3d2fb0['translate'](156.07142639160156 * _0x30cf85, 51.81248474121094 * _0x30cf85), _0x3d2fb0['rotate'](0x0), round_rect(_0x3d2fb0, -21.5 * _0x30cf85, -0x22 * _0x30cf85, 0x2b * _0x30cf85, 0x44 * _0x30cf85, 0x8 * _0x30cf85), _0x3d2fb0['restore'](), fill_path(_0x3d2fb0, _0x4099d5[0x1], _0x4099d5[0x2], 0xf * _0x30cf85), _0x3d2fb0['beginPath'](), _0x3d2fb0['lineCap'] = 'round', _0x3d2fb0['lineJoin'] = 'round', _0x3d2fb0['moveTo'](110.57142639160156 * _0x30cf85, 197.09820556640625 * _0x30cf85), _0x3d2fb0['bezierCurveTo'](158.07142639160156 * _0x30cf85, 179.09820556640625 * _0x30cf85, 158.07142639160156 * _0x30cf85, 179.09820556640625 * _0x30cf85, 205.57142639160156 * _0x30cf85, 161.09820556640625 * _0x30cf85), _0x3d2fb0['bezierCurveTo'](205.57142639160156 * _0x30cf85, 235.45535278320312 * _0x30cf85, 205.57142639160156 * _0x30cf85, 235.45535278320312 * _0x30cf85, 205.57142639160156 * _0x30cf85, 309.8125 * _0x30cf85), _0x3d2fb0['bezierCurveTo'](205.57142639160156 * _0x30cf85, 323.8125 * _0x30cf85, 200.57142639160156 * _0x30cf85, 325.8125 * _0x30cf85, 187.57142639160156 * _0x30cf85, 326.8125 * _0x30cf85), _0x3d2fb0['bezierCurveTo'](155.57142639160156 * _0x30cf85, 326.3125 * _0x30cf85, 155.57142639160156 * _0x30cf85, 326.3125 * _0x30cf85, 123.57142639160156 * _0x30cf85, 325.8125 * _0x30cf85), _0x3d2fb0['bezierCurveTo'](111.57142639160156 * _0x30cf85, 326.8125 * _0x30cf85, 109.57142639160156 * _0x30cf85, 321.8125 * _0x30cf85, 110.57142639160156 * _0x30cf85, 312.8125 * _0x30cf85), _0x3d2fb0['closePath'](), fill_path(_0x3d2fb0, _0x4099d5[0x3], _0x4099d5[0x4], 0xf * _0x30cf85), _0x3d2fb0['beginPath'](), _0x3d2fb0['lineCap'] = 'round', _0x3d2fb0['lineJoin'] = 'round', _0x3d2fb0['moveTo'](126.57142639160156 * _0x30cf85, 67.38392639160156 * _0x30cf85), _0x3d2fb0['bezierCurveTo'](126.57142639160156 * _0x30cf85, 57.38392639160156 * _0x30cf85, 132.57142639160156 * _0x30cf85, 54.38392639160156 * _0x30cf85, 140.57142639160156 * _0x30cf85, 54.38392639160156 * _0x30cf85), _0x3d2fb0['bezierCurveTo'](177.57142639160156 * _0x30cf85, 55.38392639160156 * _0x30cf85, 158.07142639160156 * _0x30cf85, 54.38392639160156 * _0x30cf85, 175.57142639160156 * _0x30cf85, 54.38392639160156 * _0x30cf85), _0x3d2fb0['bezierCurveTo'](185.57142639160156 * _0x30cf85, 56.38392639160156 * _0x30cf85, 185.57142639160156 * _0x30cf85, 57.38392639160156 * _0x30cf85, 184.57142639160156 * _0x30cf85, 66.38392639160156 * _0x30cf85), _0x3d2fb0['bezierCurveTo'](184.57142639160156 * _0x30cf85, 78.38392639160156 * _0x30cf85, 184.57142639160156 * _0x30cf85, 89.38392639160156 * _0x30cf85, 184.57142639160156 * _0x30cf85, 90.38392639160156 * _0x30cf85), _0x3d2fb0['bezierCurveTo'](177.57142639160156 * _0x30cf85, 107.38392639160156 * _0x30cf85, 180.57142639160156 * _0x30cf85, 112.38392639160156 * _0x30cf85, 189.57142639160156 * _0x30cf85, 116.38392639160156 * _0x30cf85), _0x3d2fb0['bezierCurveTo'](212.57142639160156 * _0x30cf85, 127.38392639160156 * _0x30cf85, 212.57142639160156 * _0x30cf85, 132.38392639160156 * _0x30cf85, 211.57142639160156 * _0x30cf85, 150.38392639160156 * _0x30cf85), _0x3d2fb0['bezierCurveTo'](211.57142639160156 * _0x30cf85, 227.59821128845215 * _0x30cf85, 211.57142639160156 * _0x30cf85, 227.59821128845215 * _0x30cf85, 211.57142639160156 * _0x30cf85, 304.81249618530273 * _0x30cf85), _0x3d2fb0['bezierCurveTo'](212.57142639160156 * _0x30cf85, 328.81249618530273 * _0x30cf85, 209.57142639160156 * _0x30cf85, 330.81249618530273 * _0x30cf85, 188.57142639160156 * _0x30cf85, 333.81249618530273 * _0x30cf85), _0x3d2fb0['bezierCurveTo'](155.07142639160156 * _0x30cf85, 333.31249618530273 * _0x30cf85, 155.07142639160156 * _0x30cf85, 333.31249618530273 * _0x30cf85, 121.57142639160156 * _0x30cf85, 332.81249618530273 * _0x30cf85), _0x3d2fb0['bezierCurveTo'](104.57142639160156 * _0x30cf85, 327.81249618530273 * _0x30cf85, 105.57142639160156 * _0x30cf85, 328.81249618530273 * _0x30cf85, 104.57142639160156 * _0x30cf85, 312.81249618530273 * _0x30cf85), _0x3d2fb0['bezierCurveTo'](104.57142639160156 * _0x30cf85, 228.16963958740234 * _0x30cf85, 104.57142639160156 * _0x30cf85, 228.16963958740234 * _0x30cf85, 104.57142639160156 * _0x30cf85, 143.52678298950195 * _0x30cf85), _0x3d2fb0['bezierCurveTo'](106.57142639160156 * _0x30cf85, 124.52678298950195 * _0x30cf85, 110.57142639160156 * _0x30cf85, 123.52678298950195 * _0x30cf85, 123.57142639160156 * _0x30cf85, 116.52678298950195 * _0x30cf85), _0x3d2fb0['bezierCurveTo'](136.57142639160156 * _0x30cf85, 110.52678298950195 * _0x30cf85, 130.57142639160156 * _0x30cf85, 106.52678298950195 * _0x30cf85, 126.57142639160156 * _0x30cf85, 98.52678298950195 * _0x30cf85), _0x3d2fb0['closePath'](), fill_path(_0x3d2fb0, undefined, _0x4099d5[0x5], 0xf * _0x30cf85), _0x3d2fb0['beginPath'](), _0x3d2fb0['lineCap'] = 'round', _0x3d2fb0['lineJoin'] = 'round', _0x3d2fb0['moveTo'](125.57142639160156 * _0x30cf85, 156.66963958740234 * _0x30cf85), _0x3d2fb0['bezierCurveTo'](125.57142639160156 * _0x30cf85, 182.66963958740234 * _0x30cf85, 125.57142639160156 * _0x30cf85, 182.66963958740234 * _0x30cf85, 125.57142639160156 * _0x30cf85, 208.66963958740234 * _0x30cf85), _0x3d2fb0['closePath'](), fill_path(_0x3d2fb0, undefined, _0x4099d5[0x6], 0xf * _0x30cf85), _0x1181e3;
}

function create_bottle_full(_0x2b245c, _0x250eb3, _0x415ba6) {
    var _0x14dae4 = document['createElement']('canvas'),
        _0x4e9664 = _0x14dae4['getContext']('2d');
    return _0x14dae4['width'] = 0x13c * _0x2b245c, _0x14dae4['height'] = 0x16d * _0x2b245c, _0x4e9664['save'](), _0x4e9664['translate'](156.07142639160156 * _0x2b245c, 51.81248474121094 * _0x2b245c), _0x4e9664['rotate'](0x0), round_rect(_0x4e9664, -21.5 * _0x2b245c, -0x22 * _0x2b245c, 0x2b * _0x2b245c, 0x44 * _0x2b245c, 0x8 * _0x2b245c), _0x4e9664['restore'](), fill_path(_0x4e9664, _0x415ba6[0x1], _0x415ba6[0x2], 0xf * _0x2b245c), _0x4e9664['beginPath'](), _0x4e9664['lineCap'] = 'round', _0x4e9664['lineJoin'] = 'round', _0x4e9664['moveTo'](126.57142639160156 * _0x2b245c, 67.38392639160156 * _0x2b245c), _0x4e9664['bezierCurveTo'](126.57142639160156 * _0x2b245c, 57.38392639160156 * _0x2b245c, 132.57142639160156 * _0x2b245c, 54.38392639160156 * _0x2b245c, 140.57142639160156 * _0x2b245c, 54.38392639160156 * _0x2b245c), _0x4e9664['bezierCurveTo'](177.57142639160156 * _0x2b245c, 55.38392639160156 * _0x2b245c, 158.07142639160156 * _0x2b245c, 54.38392639160156 * _0x2b245c, 175.57142639160156 * _0x2b245c, 54.38392639160156 * _0x2b245c), _0x4e9664['bezierCurveTo'](185.57142639160156 * _0x2b245c, 56.38392639160156 * _0x2b245c, 185.57142639160156 * _0x2b245c, 57.38392639160156 * _0x2b245c, 184.57142639160156 * _0x2b245c, 66.38392639160156 * _0x2b245c), _0x4e9664['bezierCurveTo'](184.57142639160156 * _0x2b245c, 78.38392639160156 * _0x2b245c, 184.57142639160156 * _0x2b245c, 89.38392639160156 * _0x2b245c, 184.57142639160156 * _0x2b245c, 90.38392639160156 * _0x2b245c), _0x4e9664['bezierCurveTo'](177.57142639160156 * _0x2b245c, 107.38392639160156 * _0x2b245c, 180.57142639160156 * _0x2b245c, 112.38392639160156 * _0x2b245c, 189.57142639160156 * _0x2b245c, 116.38392639160156 * _0x2b245c), _0x4e9664['bezierCurveTo'](212.57142639160156 * _0x2b245c, 127.38392639160156 * _0x2b245c, 212.57142639160156 * _0x2b245c, 132.38392639160156 * _0x2b245c, 211.57142639160156 * _0x2b245c, 150.38392639160156 * _0x2b245c), _0x4e9664['bezierCurveTo'](211.57142639160156 * _0x2b245c, 227.59821128845215 * _0x2b245c, 211.57142639160156 * _0x2b245c, 227.59821128845215 * _0x2b245c, 211.57142639160156 * _0x2b245c, 304.81249618530273 * _0x2b245c), _0x4e9664['bezierCurveTo'](212.57142639160156 * _0x2b245c, 328.81249618530273 * _0x2b245c, 209.57142639160156 * _0x2b245c, 330.81249618530273 * _0x2b245c, 188.57142639160156 * _0x2b245c, 333.81249618530273 * _0x2b245c), _0x4e9664['bezierCurveTo'](155.07142639160156 * _0x2b245c, 333.31249618530273 * _0x2b245c, 155.07142639160156 * _0x2b245c, 333.31249618530273 * _0x2b245c, 121.57142639160156 * _0x2b245c, 332.81249618530273 * _0x2b245c), _0x4e9664['bezierCurveTo'](104.57142639160156 * _0x2b245c, 327.81249618530273 * _0x2b245c, 105.57142639160156 * _0x2b245c, 328.81249618530273 * _0x2b245c, 104.57142639160156 * _0x2b245c, 312.81249618530273 * _0x2b245c), _0x4e9664['bezierCurveTo'](104.57142639160156 * _0x2b245c, 228.16963958740234 * _0x2b245c, 104.57142639160156 * _0x2b245c, 228.16963958740234 * _0x2b245c, 104.57142639160156 * _0x2b245c, 143.52678298950195 * _0x2b245c), _0x4e9664['bezierCurveTo'](106.57142639160156 * _0x2b245c, 124.52678298950195 * _0x2b245c, 110.57142639160156 * _0x2b245c, 123.52678298950195 * _0x2b245c, 123.57142639160156 * _0x2b245c, 116.52678298950195 * _0x2b245c), _0x4e9664['bezierCurveTo'](136.57142639160156 * _0x2b245c, 110.52678298950195 * _0x2b245c, 130.57142639160156 * _0x2b245c, 106.52678298950195 * _0x2b245c, 126.57142639160156 * _0x2b245c, 98.52678298950195 * _0x2b245c), _0x4e9664['closePath'](), fill_path(_0x4e9664, undefined, _0x415ba6[0x5], 0xf * _0x2b245c), _0x4e9664['beginPath'](), _0x4e9664['lineCap'] = 'round', _0x4e9664['lineJoin'] = 'round', _0x4e9664['moveTo'](125.57142639160156 * _0x2b245c, 156.66963958740234 * _0x2b245c), _0x4e9664['bezierCurveTo'](125.57142639160156 * _0x2b245c, 182.66963958740234 * _0x2b245c, 125.57142639160156 * _0x2b245c, 182.66963958740234 * _0x2b245c, 125.57142639160156 * _0x2b245c, 208.66963958740234 * _0x2b245c), _0x4e9664['closePath'](), fill_path(_0x4e9664, undefined, _0x415ba6[0x6], 0xf * _0x2b245c), _0x14dae4;
}

function create_drink_delay(_0x3b57ba, _0x4dd460) {
    var _0x11bda2 = document['createElement']('canvas'),
        _0x5905bd = _0x11bda2['getContext']('2d');
    return _0x11bda2['width'] = 0x13c * _0x3b57ba, _0x11bda2['height'] = 0x16d * _0x3b57ba, _0x5905bd['save'](), _0x5905bd['translate'](156.07142639160156 * _0x3b57ba, 51.81248474121094 * _0x3b57ba), _0x5905bd['rotate'](0x0), round_rect(_0x5905bd, -21.5 * _0x3b57ba, -0x22 * _0x3b57ba, 0x2b * _0x3b57ba, 0x44 * _0x3b57ba, 0x8 * _0x3b57ba), _0x5905bd['restore'](), fill_path(_0x5905bd, _0x4dd460[0x0], _0x4dd460[0x0], 0xf * _0x3b57ba), _0x5905bd['beginPath'](), _0x5905bd['lineCap'] = 'round', _0x5905bd['lineJoin'] = 'round', _0x5905bd['moveTo'](126.57142639160156 * _0x3b57ba, 67.38392639160156 * _0x3b57ba), _0x5905bd['bezierCurveTo'](126.57142639160156 * _0x3b57ba, 57.38392639160156 * _0x3b57ba, 132.57142639160156 * _0x3b57ba, 54.38392639160156 * _0x3b57ba, 140.57142639160156 * _0x3b57ba, 54.38392639160156 * _0x3b57ba), _0x5905bd['bezierCurveTo'](177.57142639160156 * _0x3b57ba, 55.38392639160156 * _0x3b57ba, 158.07142639160156 * _0x3b57ba, 54.38392639160156 * _0x3b57ba, 175.57142639160156 * _0x3b57ba, 54.38392639160156 * _0x3b57ba), _0x5905bd['bezierCurveTo'](185.57142639160156 * _0x3b57ba, 56.38392639160156 * _0x3b57ba, 185.57142639160156 * _0x3b57ba, 57.38392639160156 * _0x3b57ba, 184.57142639160156 * _0x3b57ba, 66.38392639160156 * _0x3b57ba), _0x5905bd['bezierCurveTo'](184.57142639160156 * _0x3b57ba, 78.38392639160156 * _0x3b57ba, 184.57142639160156 * _0x3b57ba, 89.38392639160156 * _0x3b57ba, 184.57142639160156 * _0x3b57ba, 90.38392639160156 * _0x3b57ba), _0x5905bd['bezierCurveTo'](177.57142639160156 * _0x3b57ba, 107.38392639160156 * _0x3b57ba, 180.57142639160156 * _0x3b57ba, 112.38392639160156 * _0x3b57ba, 189.57142639160156 * _0x3b57ba, 116.38392639160156 * _0x3b57ba), _0x5905bd['bezierCurveTo'](212.57142639160156 * _0x3b57ba, 127.38392639160156 * _0x3b57ba, 212.57142639160156 * _0x3b57ba, 132.38392639160156 * _0x3b57ba, 211.57142639160156 * _0x3b57ba, 150.38392639160156 * _0x3b57ba), _0x5905bd['bezierCurveTo'](211.57142639160156 * _0x3b57ba, 227.59821128845215 * _0x3b57ba, 211.57142639160156 * _0x3b57ba, 227.59821128845215 * _0x3b57ba, 211.57142639160156 * _0x3b57ba, 304.81249618530273 * _0x3b57ba), _0x5905bd['bezierCurveTo'](212.57142639160156 * _0x3b57ba, 328.81249618530273 * _0x3b57ba, 209.57142639160156 * _0x3b57ba, 330.81249618530273 * _0x3b57ba, 188.57142639160156 * _0x3b57ba, 333.81249618530273 * _0x3b57ba), _0x5905bd['bezierCurveTo'](155.07142639160156 * _0x3b57ba, 333.31249618530273 * _0x3b57ba, 155.07142639160156 * _0x3b57ba, 333.31249618530273 * _0x3b57ba, 121.57142639160156 * _0x3b57ba, 332.81249618530273 * _0x3b57ba), _0x5905bd['bezierCurveTo'](104.57142639160156 * _0x3b57ba, 327.81249618530273 * _0x3b57ba, 105.57142639160156 * _0x3b57ba, 328.81249618530273 * _0x3b57ba, 104.57142639160156 * _0x3b57ba, 312.81249618530273 * _0x3b57ba), _0x5905bd['bezierCurveTo'](104.57142639160156 * _0x3b57ba, 228.16963958740234 * _0x3b57ba, 104.57142639160156 * _0x3b57ba, 228.16963958740234 * _0x3b57ba, 104.57142639160156 * _0x3b57ba, 143.52678298950195 * _0x3b57ba), _0x5905bd['bezierCurveTo'](106.57142639160156 * _0x3b57ba, 124.52678298950195 * _0x3b57ba, 110.57142639160156 * _0x3b57ba, 123.52678298950195 * _0x3b57ba, 123.57142639160156 * _0x3b57ba, 116.52678298950195 * _0x3b57ba), _0x5905bd['bezierCurveTo'](136.57142639160156 * _0x3b57ba, 110.52678298950195 * _0x3b57ba, 130.57142639160156 * _0x3b57ba, 106.52678298950195 * _0x3b57ba, 126.57142639160156 * _0x3b57ba, 98.52678298950195 * _0x3b57ba), _0x5905bd['closePath'](), fill_path(_0x5905bd, _0x4dd460[0x0], _0x4dd460[0x0], 0xf * _0x3b57ba), _0x5905bd['beginPath'](), _0x5905bd['lineCap'] = 'round', _0x5905bd['lineJoin'] = 'round', _0x5905bd['moveTo'](125.57142639160156 * _0x3b57ba, 156.66963958740234 * _0x3b57ba), _0x5905bd['bezierCurveTo'](125.57142639160156 * _0x3b57ba, 182.66963958740234 * _0x3b57ba, 125.57142639160156 * _0x3b57ba, 182.66963958740234 * _0x3b57ba, 125.57142639160156 * _0x3b57ba, 208.66963958740234 * _0x3b57ba), _0x5905bd['closePath'](), fill_path(_0x5905bd, _0x4dd460[0x0], _0x4dd460[0x0], 0xf * _0x3b57ba), _0x11bda2;
}

function create_bucket_empty(_0x4ff73e, _0x1e0e98, _0x3f8d72) {
    var _0x1bc3b6 = document['createElement']('canvas'),
        _0x298ed2 = _0x1bc3b6['getContext']('2d');
    return _0x1bc3b6['width'] = 0x190 * _0x4ff73e, _0x1bc3b6['height'] = 0x190 * _0x4ff73e, _0x298ed2['translate'](0x0, 0xf * _0x4ff73e), _0x298ed2['globalAlpha'] = _0x1e0e98 ? 0.5 : 0x1, _0x298ed2['beginPath'](), _0x298ed2['lineCap'] = 'round', _0x298ed2['lineJoin'] = 'round', _0x298ed2['moveTo'](0x66 * _0x4ff73e, 0x9a * _0x4ff73e), _0x298ed2['bezierCurveTo'](0x6c * _0x4ff73e, 216.5 * _0x4ff73e, 0x6c * _0x4ff73e, 216.5 * _0x4ff73e, 0x72 * _0x4ff73e, 0x117 * _0x4ff73e), _0x298ed2['bezierCurveTo'](0x7c * _0x4ff73e, 0x12c * _0x4ff73e, 0xed * _0x4ff73e, 0x12b * _0x4ff73e, 0xfb * _0x4ff73e, 0x117 * _0x4ff73e), _0x298ed2['bezierCurveTo'](0x101 * _0x4ff73e, 0xd9 * _0x4ff73e, 0x101 * _0x4ff73e, 0xd9 * _0x4ff73e, 0x107 * _0x4ff73e, 0x9b * _0x4ff73e), _0x298ed2['bezierCurveTo'](0xf8 * _0x4ff73e, 0xc2 * _0x4ff73e, 0x5b * _0x4ff73e, 0xb4 * _0x4ff73e, 0x67 * _0x4ff73e, 0x9c * _0x4ff73e), _0x298ed2['closePath'](), fill_path(_0x298ed2, _0x3f8d72[0x0]), _0x298ed2['beginPath'](), _0x298ed2['lineCap'] = 'round', _0x298ed2['lineJoin'] = 'round', _0x298ed2['moveTo'](0x66 * _0x4ff73e, 0x9a * _0x4ff73e), _0x298ed2['bezierCurveTo'](0x6a * _0x4ff73e, 0x35 * _0x4ff73e, 0xff * _0x4ff73e, 0x35 * _0x4ff73e, 0x107 * _0x4ff73e, 0x9a * _0x4ff73e), _0x298ed2['bezierCurveTo'](0xf8 * _0x4ff73e, 0x26 * _0x4ff73e, 0x63 * _0x4ff73e, 0x45 * _0x4ff73e, 0x67 * _0x4ff73e, 0x9a * _0x4ff73e), _0x298ed2['closePath'](), fill_path(_0x298ed2, undefined, _0x3f8d72[0x0], 0xb * _0x4ff73e), _0x298ed2['translate'](0x0, -0x5 * _0x4ff73e), _0x298ed2['globalAlpha'] = 0x1, _0x298ed2['beginPath'](), _0x298ed2['lineCap'] = 'round', _0x298ed2['lineJoin'] = 'round', _0x298ed2['moveTo'](0x67 * _0x4ff73e, 0x9a * _0x4ff73e), _0x298ed2['bezierCurveTo'](0x62 * _0x4ff73e, 0x77 * _0x4ff73e, 0x108 * _0x4ff73e, 0x77 * _0x4ff73e, 0x108 * _0x4ff73e, 0x9a * _0x4ff73e), _0x298ed2['bezierCurveTo'](0x10f * _0x4ff73e, 0xbd * _0x4ff73e, 0x5e * _0x4ff73e, 0xbc * _0x4ff73e, 0x67 * _0x4ff73e, 0x9a * _0x4ff73e), _0x298ed2['closePath'](), fill_path(_0x298ed2, _0x3f8d72[0x3], _0x3f8d72[0x2], 0xc * _0x4ff73e), _0x298ed2['beginPath'](), _0x298ed2['lineCap'] = 'round', _0x298ed2['lineJoin'] = 'round', _0x298ed2['moveTo'](0x66 * _0x4ff73e, 0x9a * _0x4ff73e), _0x298ed2['bezierCurveTo'](0x6c * _0x4ff73e, 216.5 * _0x4ff73e, 0x6c * _0x4ff73e, 216.5 * _0x4ff73e, 0x72 * _0x4ff73e, 0x117 * _0x4ff73e), _0x298ed2['bezierCurveTo'](0x7c * _0x4ff73e, 0x12c * _0x4ff73e, 0xed * _0x4ff73e, 0x12b * _0x4ff73e, 0xfb * _0x4ff73e, 0x117 * _0x4ff73e), _0x298ed2['bezierCurveTo'](0x101 * _0x4ff73e, 0xd9 * _0x4ff73e, 0x101 * _0x4ff73e, 0xd9 * _0x4ff73e, 0x107 * _0x4ff73e, 0x9b * _0x4ff73e), _0x298ed2['bezierCurveTo'](0xf8 * _0x4ff73e, 0xc2 * _0x4ff73e, 0x5b * _0x4ff73e, 0xb4 * _0x4ff73e, 0x67 * _0x4ff73e, 0x9c * _0x4ff73e), _0x298ed2['closePath'](), fill_path(_0x298ed2, _0x3f8d72[0x1], _0x3f8d72[0x2], 0xc * _0x4ff73e), _0x298ed2['beginPath'](), _0x298ed2['lineCap'] = 'round', _0x298ed2['lineJoin'] = 'round', _0x298ed2['moveTo'](0xb6 * _0x4ff73e, 0xb9 * _0x4ff73e), _0x298ed2['bezierCurveTo'](182.5 * _0x4ff73e, 237.5 * _0x4ff73e, 182.5 * _0x4ff73e, 237.5 * _0x4ff73e, 0xb7 * _0x4ff73e, 0x122 * _0x4ff73e), _0x298ed2['closePath'](), fill_path(_0x298ed2, undefined, _0x3f8d72[0x2], 0xc * _0x4ff73e), _0x298ed2['beginPath'](), _0x298ed2['lineCap'] = 'round', _0x298ed2['lineJoin'] = 'round', _0x298ed2['moveTo'](0xde * _0x4ff73e, 0x11f * _0x4ff73e), _0x298ed2['bezierCurveTo'](0xe2 * _0x4ff73e, 233.5 * _0x4ff73e, 0xe2 * _0x4ff73e, 233.5 * _0x4ff73e, 0xe6 * _0x4ff73e, 0xb4 * _0x4ff73e), _0x298ed2['closePath'](), fill_path(_0x298ed2, undefined, _0x3f8d72[0x2], 0xc * _0x4ff73e), _0x298ed2['beginPath'](), _0x298ed2['lineCap'] = 'round', _0x298ed2['lineJoin'] = 'round', _0x298ed2['moveTo'](0x91 * _0x4ff73e, 0x122 * _0x4ff73e), _0x298ed2['bezierCurveTo'](140.5 * _0x4ff73e, 0xed * _0x4ff73e, 140.5 * _0x4ff73e, 0xed * _0x4ff73e, 0x88 * _0x4ff73e, 0xb8 * _0x4ff73e), _0x298ed2['closePath'](), fill_path(_0x298ed2, _0x3f8d72[0x1], _0x3f8d72[0x2], 0xb * _0x4ff73e), _0x298ed2['beginPath'](), _0x298ed2['lineCap'] = 'round', _0x298ed2['lineJoin'] = 'round', _0x298ed2['moveTo'](0x69 * _0x4ff73e, 0xb8 * _0x4ff73e), _0x298ed2['bezierCurveTo'](0x94 * _0x4ff73e, 0xcd * _0x4ff73e, 0xe7 * _0x4ff73e, 0xca * _0x4ff73e, 0x104 * _0x4ff73e, 0xb6 * _0x4ff73e), _0x298ed2['bezierCurveTo'](0x103 * _0x4ff73e, 195.5 * _0x4ff73e, 0x103 * _0x4ff73e, 195.5 * _0x4ff73e, 0x102 * _0x4ff73e, 0xd1 * _0x4ff73e), _0x298ed2['bezierCurveTo'](0xd9 * _0x4ff73e, 0xda * _0x4ff73e, 0xa3 * _0x4ff73e, 0xe1 * _0x4ff73e, 0x6c * _0x4ff73e, 0xcf * _0x4ff73e), _0x298ed2['closePath'](), fill_path(_0x298ed2, _0x3f8d72[0x4], _0x3f8d72[0x2], 0xb * _0x4ff73e), _0x298ed2['beginPath'](), _0x298ed2['lineCap'] = 'round', _0x298ed2['lineJoin'] = 'round', _0x298ed2['moveTo'](0xfb * _0x4ff73e, 0x114 * _0x4ff73e), _0x298ed2['bezierCurveTo'](251.5 * _0x4ff73e, 267.5 * _0x4ff73e, 251.5 * _0x4ff73e, 267.5 * _0x4ff73e, 0xfc * _0x4ff73e, 0x103 * _0x4ff73e), _0x298ed2['bezierCurveTo'](0xd4 * _0x4ff73e, 0x110 * _0x4ff73e, 0x9c * _0x4ff73e, 0x113 * _0x4ff73e, 0x70 * _0x4ff73e, 0x104 * _0x4ff73e), _0x298ed2['bezierCurveTo'](112.5 * _0x4ff73e, 0x10d * _0x4ff73e, 112.5 * _0x4ff73e, 0x10d * _0x4ff73e, 0x71 * _0x4ff73e, 0x116 * _0x4ff73e), _0x298ed2['bezierCurveTo'](0x9b * _0x4ff73e, 0x132 * _0x4ff73e, 0xfd * _0x4ff73e, 0x11e * _0x4ff73e, 0xfa * _0x4ff73e, 0x114 * _0x4ff73e), _0x298ed2['closePath'](), fill_path(_0x298ed2, _0x3f8d72[0x4], _0x3f8d72[0x2], 0xb * _0x4ff73e), _0x298ed2['beginPath'](), _0x298ed2['lineCap'] = 'round', _0x298ed2['lineJoin'] = 'round', _0x298ed2['moveTo'](0x66 * _0x4ff73e, 0x9a * _0x4ff73e), _0x298ed2['bezierCurveTo'](0x6a * _0x4ff73e, 0x35 * _0x4ff73e, 0xff * _0x4ff73e, 0x35 * _0x4ff73e, 0x107 * _0x4ff73e, 0x9a * _0x4ff73e), _0x298ed2['bezierCurveTo'](0xf8 * _0x4ff73e, 0x26 * _0x4ff73e, 0x63 * _0x4ff73e, 0x45 * _0x4ff73e, 0x67 * _0x4ff73e, 0x9a * _0x4ff73e), _0x298ed2['closePath'](), fill_path(_0x298ed2, undefined, _0x3f8d72[0x2], 0xb * _0x4ff73e), _0x1bc3b6;
}

function create_bucket_full(_0x2836f1, _0x2ea803, _0x549b66) {
    var _0x3991e6 = document['createElement']('canvas'),
        _0x46d0ac = _0x3991e6['getContext']('2d');
    return _0x3991e6['width'] = 0x190 * _0x2836f1, _0x3991e6['height'] = 0x190 * _0x2836f1, _0x46d0ac['translate'](0x0, 0xf * _0x2836f1), _0x46d0ac['globalAlpha'] = _0x2ea803 ? 0.5 : 0x1, _0x46d0ac['beginPath'](), _0x46d0ac['lineCap'] = 'round', _0x46d0ac['lineJoin'] = 'round', _0x46d0ac['moveTo'](0x66 * _0x2836f1, 0x9a * _0x2836f1), _0x46d0ac['bezierCurveTo'](0x6c * _0x2836f1, 216.5 * _0x2836f1, 0x6c * _0x2836f1, 216.5 * _0x2836f1, 0x72 * _0x2836f1, 0x117 * _0x2836f1), _0x46d0ac['bezierCurveTo'](0x7c * _0x2836f1, 0x12c * _0x2836f1, 0xed * _0x2836f1, 0x12b * _0x2836f1, 0xfb * _0x2836f1, 0x117 * _0x2836f1), _0x46d0ac['bezierCurveTo'](0x101 * _0x2836f1, 0xd9 * _0x2836f1, 0x101 * _0x2836f1, 0xd9 * _0x2836f1, 0x107 * _0x2836f1, 0x9b * _0x2836f1), _0x46d0ac['bezierCurveTo'](0xf8 * _0x2836f1, 0xc2 * _0x2836f1, 0x5b * _0x2836f1, 0xb4 * _0x2836f1, 0x67 * _0x2836f1, 0x9c * _0x2836f1), _0x46d0ac['closePath'](), fill_path(_0x46d0ac, _0x549b66[0x0]), _0x46d0ac['beginPath'](), _0x46d0ac['lineCap'] = 'round', _0x46d0ac['lineJoin'] = 'round', _0x46d0ac['moveTo'](0x66 * _0x2836f1, 0x9a * _0x2836f1), _0x46d0ac['bezierCurveTo'](0x6a * _0x2836f1, 0x35 * _0x2836f1, 0xff * _0x2836f1, 0x35 * _0x2836f1, 0x107 * _0x2836f1, 0x9a * _0x2836f1), _0x46d0ac['bezierCurveTo'](0xf8 * _0x2836f1, 0x26 * _0x2836f1, 0x63 * _0x2836f1, 0x45 * _0x2836f1, 0x67 * _0x2836f1, 0x9a * _0x2836f1), _0x46d0ac['closePath'](), fill_path(_0x46d0ac, undefined, _0x549b66[0x0], 0xb * _0x2836f1), _0x46d0ac['translate'](0x0, -0x5 * _0x2836f1), _0x46d0ac['globalAlpha'] = 0x1, _0x46d0ac['beginPath'](), _0x46d0ac['lineCap'] = 'round', _0x46d0ac['lineJoin'] = 'round', _0x46d0ac['moveTo'](0x67 * _0x2836f1, 0x9a * _0x2836f1), _0x46d0ac['bezierCurveTo'](0x62 * _0x2836f1, 0x77 * _0x2836f1, 0x108 * _0x2836f1, 0x77 * _0x2836f1, 0x108 * _0x2836f1, 0x9a * _0x2836f1), _0x46d0ac['bezierCurveTo'](0x10f * _0x2836f1, 0xbd * _0x2836f1, 0x5e * _0x2836f1, 0xbc * _0x2836f1, 0x67 * _0x2836f1, 0x9a * _0x2836f1), _0x46d0ac['closePath'](), fill_path(_0x46d0ac, _0x549b66[0x3], _0x549b66[0x2], 0xc * _0x2836f1), _0x46d0ac['translate'](0x0, 0x19 * _0x2836f1), _0x46d0ac['globalAlpha'] = 0x1, _0x46d0ac['beginPath'](), _0x46d0ac['lineCap'] = 'round', _0x46d0ac['lineJoin'] = 'round', _0x46d0ac['moveTo'](0x67 * _0x2836f1, 0x9a * _0x2836f1), _0x46d0ac['bezierCurveTo'](0x62 * _0x2836f1, 0x77 * _0x2836f1, 0x108 * _0x2836f1, 0x77 * _0x2836f1, 0x108 * _0x2836f1, 0x9a * _0x2836f1), _0x46d0ac['bezierCurveTo'](0x10f * _0x2836f1, 0xbd * _0x2836f1, 0x5e * _0x2836f1, 0xbc * _0x2836f1, 0x67 * _0x2836f1, 0x9a * _0x2836f1), _0x46d0ac['closePath'](), fill_path(_0x46d0ac, _0x549b66[0x5]), _0x46d0ac['translate'](0x0, -0x19 * _0x2836f1), _0x46d0ac['beginPath'](), _0x46d0ac['lineCap'] = 'round', _0x46d0ac['lineJoin'] = 'round', _0x46d0ac['moveTo'](0x66 * _0x2836f1, 0x9a * _0x2836f1), _0x46d0ac['bezierCurveTo'](0x6c * _0x2836f1, 216.5 * _0x2836f1, 0x6c * _0x2836f1, 216.5 * _0x2836f1, 0x72 * _0x2836f1, 0x117 * _0x2836f1), _0x46d0ac['bezierCurveTo'](0x7c * _0x2836f1, 0x12c * _0x2836f1, 0xed * _0x2836f1, 0x12b * _0x2836f1, 0xfb * _0x2836f1, 0x117 * _0x2836f1), _0x46d0ac['bezierCurveTo'](0x101 * _0x2836f1, 0xd9 * _0x2836f1, 0x101 * _0x2836f1, 0xd9 * _0x2836f1, 0x107 * _0x2836f1, 0x9b * _0x2836f1), _0x46d0ac['bezierCurveTo'](0xf8 * _0x2836f1, 0xc2 * _0x2836f1, 0x5b * _0x2836f1, 0xb4 * _0x2836f1, 0x67 * _0x2836f1, 0x9c * _0x2836f1), _0x46d0ac['closePath'](), fill_path(_0x46d0ac, _0x549b66[0x1], _0x549b66[0x2], 0xc * _0x2836f1), _0x46d0ac['beginPath'](), _0x46d0ac['lineCap'] = 'round', _0x46d0ac['lineJoin'] = 'round', _0x46d0ac['moveTo'](0xb6 * _0x2836f1, 0xb9 * _0x2836f1), _0x46d0ac['bezierCurveTo'](182.5 * _0x2836f1, 237.5 * _0x2836f1, 182.5 * _0x2836f1, 237.5 * _0x2836f1, 0xb7 * _0x2836f1, 0x122 * _0x2836f1), _0x46d0ac['closePath'](), fill_path(_0x46d0ac, undefined, _0x549b66[0x2], 0xc * _0x2836f1), _0x46d0ac['beginPath'](), _0x46d0ac['lineCap'] = 'round', _0x46d0ac['lineJoin'] = 'round', _0x46d0ac['moveTo'](0xde * _0x2836f1, 0x11f * _0x2836f1), _0x46d0ac['bezierCurveTo'](0xe2 * _0x2836f1, 233.5 * _0x2836f1, 0xe2 * _0x2836f1, 233.5 * _0x2836f1, 0xe6 * _0x2836f1, 0xb4 * _0x2836f1), _0x46d0ac['closePath'](), fill_path(_0x46d0ac, undefined, _0x549b66[0x2], 0xc * _0x2836f1), _0x46d0ac['beginPath'](), _0x46d0ac['lineCap'] = 'round', _0x46d0ac['lineJoin'] = 'round', _0x46d0ac['moveTo'](0x91 * _0x2836f1, 0x122 * _0x2836f1), _0x46d0ac['bezierCurveTo'](140.5 * _0x2836f1, 0xed * _0x2836f1, 140.5 * _0x2836f1, 0xed * _0x2836f1, 0x88 * _0x2836f1, 0xb8 * _0x2836f1), _0x46d0ac['closePath'](), fill_path(_0x46d0ac, _0x549b66[0x1], _0x549b66[0x2], 0xb * _0x2836f1), _0x46d0ac['beginPath'](), _0x46d0ac['lineCap'] = 'round', _0x46d0ac['lineJoin'] = 'round', _0x46d0ac['moveTo'](0x69 * _0x2836f1, 0xb8 * _0x2836f1), _0x46d0ac['bezierCurveTo'](0x94 * _0x2836f1, 0xcd * _0x2836f1, 0xe7 * _0x2836f1, 0xca * _0x2836f1, 0x104 * _0x2836f1, 0xb6 * _0x2836f1), _0x46d0ac['bezierCurveTo'](0x103 * _0x2836f1, 195.5 * _0x2836f1, 0x103 * _0x2836f1, 195.5 * _0x2836f1, 0x102 * _0x2836f1, 0xd1 * _0x2836f1), _0x46d0ac['bezierCurveTo'](0xd9 * _0x2836f1, 0xda * _0x2836f1, 0xa3 * _0x2836f1, 0xe1 * _0x2836f1, 0x6c * _0x2836f1, 0xcf * _0x2836f1), _0x46d0ac['closePath'](), fill_path(_0x46d0ac, _0x549b66[0x4], _0x549b66[0x2], 0xb * _0x2836f1), _0x46d0ac['beginPath'](), _0x46d0ac['lineCap'] = 'round', _0x46d0ac['lineJoin'] = 'round', _0x46d0ac['moveTo'](0xfb * _0x2836f1, 0x114 * _0x2836f1), _0x46d0ac['bezierCurveTo'](251.5 * _0x2836f1, 267.5 * _0x2836f1, 251.5 * _0x2836f1, 267.5 * _0x2836f1, 0xfc * _0x2836f1, 0x103 * _0x2836f1), _0x46d0ac['bezierCurveTo'](0xd4 * _0x2836f1, 0x110 * _0x2836f1, 0x9c * _0x2836f1, 0x113 * _0x2836f1, 0x70 * _0x2836f1, 0x104 * _0x2836f1), _0x46d0ac['bezierCurveTo'](112.5 * _0x2836f1, 0x10d * _0x2836f1, 112.5 * _0x2836f1, 0x10d * _0x2836f1, 0x71 * _0x2836f1, 0x116 * _0x2836f1), _0x46d0ac['bezierCurveTo'](0x9b * _0x2836f1, 0x132 * _0x2836f1, 0xfd * _0x2836f1, 0x11e * _0x2836f1, 0xfa * _0x2836f1, 0x114 * _0x2836f1), _0x46d0ac['closePath'](), fill_path(_0x46d0ac, _0x549b66[0x4], _0x549b66[0x2], 0xb * _0x2836f1), _0x46d0ac['beginPath'](), _0x46d0ac['lineCap'] = 'round', _0x46d0ac['lineJoin'] = 'round', _0x46d0ac['moveTo'](0x66 * _0x2836f1, 0x9a * _0x2836f1), _0x46d0ac['bezierCurveTo'](0x6a * _0x2836f1, 0x35 * _0x2836f1, 0xff * _0x2836f1, 0x35 * _0x2836f1, 0x107 * _0x2836f1, 0x9a * _0x2836f1), _0x46d0ac['bezierCurveTo'](0xf8 * _0x2836f1, 0x26 * _0x2836f1, 0x63 * _0x2836f1, 0x45 * _0x2836f1, 0x67 * _0x2836f1, 0x9a * _0x2836f1), _0x46d0ac['closePath'](), fill_path(_0x46d0ac, undefined, _0x549b66[0x2], 0xb * _0x2836f1), _0x3991e6;
}

function create_shovel(_0x187bee, _0x109875, _0x2c56df) {
    var _0x4115ad = document['createElement']('canvas'),
        _0x3ee42a = _0x4115ad['getContext']('2d');
    return _0x4115ad['width'] = 0x50 * _0x187bee, _0x4115ad['height'] = 0xa0 * _0x187bee, _0x3ee42a['globalAlpha'] = _0x109875 ? 0.5 : 0x1, _0x3ee42a['translate'](0x5 * _0x187bee, 0x5 * _0x187bee), _0x3ee42a['save'](), round_rect(_0x3ee42a, 0x21 * _0x187bee, 0x35 * _0x187bee, 0xa * _0x187bee, 0x62 * _0x187bee, 0xa * _0x187bee), fill_path(_0x3ee42a, _0x2c56df[0x0]), _0x3ee42a['beginPath'](), _0x3ee42a['lineCap'] = 'round', _0x3ee42a['lineJoin'] = 'round', _0x3ee42a['translate'](-0x96 * _0x187bee, -0x64 * _0x187bee), _0x3ee42a['moveTo'](167.5 * _0x187bee, 171.0625 * _0x187bee), _0x3ee42a['bezierCurveTo'](0xbc * _0x187bee, 171.0625 * _0x187bee, 0xbc * _0x187bee, 171.0625 * _0x187bee, 208.5 * _0x187bee, 171.0625 * _0x187bee), _0x3ee42a['bezierCurveTo'](208.5 * _0x187bee, 156.0625 * _0x187bee, 208.5 * _0x187bee, 156.0625 * _0x187bee, 208.5 * _0x187bee, 141.0625 * _0x187bee), _0x3ee42a['bezierCurveTo'](203.5 * _0x187bee, 113.0625 * _0x187bee, 179.5 * _0x187bee, 96.0625 * _0x187bee, 167.5 * _0x187bee, 141.0625 * _0x187bee), _0x3ee42a['closePath'](), fill_path(_0x3ee42a, _0x2c56df[0x0]), _0x3ee42a['restore'](), _0x3ee42a['globalAlpha'] = 0x1, _0x3ee42a['translate'](-0x5 * _0x187bee, -0x5 * _0x187bee), _0x3ee42a['save'](), round_rect(_0x3ee42a, 0x21 * _0x187bee, 0x35 * _0x187bee, 0xa * _0x187bee, 0x62 * _0x187bee, 0xa * _0x187bee), fill_path(_0x3ee42a, _0x2c56df[0x1], _0x2c56df[0x2], 0x4 * _0x187bee), _0x3ee42a['beginPath'](), _0x3ee42a['lineCap'] = 'round', _0x3ee42a['lineJoin'] = 'round', _0x3ee42a['translate'](-0x96 * _0x187bee, -0x64 * _0x187bee), _0x3ee42a['moveTo'](167.5 * _0x187bee, 171.0625 * _0x187bee), _0x3ee42a['bezierCurveTo'](0xbc * _0x187bee, 171.0625 * _0x187bee, 0xbc * _0x187bee, 171.0625 * _0x187bee, 208.5 * _0x187bee, 171.0625 * _0x187bee), _0x3ee42a['bezierCurveTo'](208.5 * _0x187bee, 156.0625 * _0x187bee, 208.5 * _0x187bee, 156.0625 * _0x187bee, 208.5 * _0x187bee, 141.0625 * _0x187bee), _0x3ee42a['bezierCurveTo'](203.5 * _0x187bee, 113.0625 * _0x187bee, 179.5 * _0x187bee, 96.0625 * _0x187bee, 167.5 * _0x187bee, 141.0625 * _0x187bee), _0x3ee42a['closePath'](), fill_path(_0x3ee42a, _0x2c56df[0x3], _0x2c56df[0x4], 0x4 * _0x187bee), _0x3ee42a['beginPath'](), _0x3ee42a['lineCap'] = 'round', _0x3ee42a['lineJoin'] = 'round', _0x3ee42a['translate'](0x0 * _0x187bee, 0x1 * _0x187bee), _0x3ee42a['moveTo'](180.5 * _0x187bee, 169.0625 * _0x187bee), _0x3ee42a['bezierCurveTo'](180.5 * _0x187bee, 157.5625 * _0x187bee, 180.5 * _0x187bee, 157.5625 * _0x187bee, 180.5 * _0x187bee, 146.0625 * _0x187bee), _0x3ee42a['bezierCurveTo'](181.5 * _0x187bee, 134.0625 * _0x187bee, 193.5 * _0x187bee, 129.0625 * _0x187bee, 196.5 * _0x187bee, 146.0625 * _0x187bee), _0x3ee42a['bezierCurveTo'](196.5 * _0x187bee, 157.5625 * _0x187bee, 196.5 * _0x187bee, 157.5625 * _0x187bee, 196.5 * _0x187bee, 169.0625 * _0x187bee), _0x3ee42a['closePath'](), fill_path(_0x3ee42a, _0x2c56df[0x5]), _0x3ee42a['restore'](), _0x4115ad;
}

function create_symbol_hud(_0x4f4dd7, _0x5c3ec5, _0x3c7e2f) {
    var _0x498be0 = document['createElement']('canvas'),
        _0x5981e8 = _0x498be0['getContext']('2d');
    _0x498be0['width'] = 0x6d * _0x4f4dd7, _0x498be0['height'] = 0x6e * _0x4f4dd7, circle(_0x5981e8, 54.5 * _0x4f4dd7, 0x37 * _0x4f4dd7, 48.038209575038294 * _0x4f4dd7), fill_path(_0x5981e8, _0x5c3ec5[0x0], _0x5c3ec5[0x1], 0x8 * _0x4f4dd7);
    if (_0x3c7e2f == 0x0) _0x5981e8['beginPath'](), _0x5981e8['lineCap'] = 'round', _0x5981e8['lineJoin'] = 'round', _0x5981e8['moveTo'](54.928558349609375 * _0x4f4dd7, 43.72320556640625 * _0x4f4dd7), _0x5981e8['bezierCurveTo'](66.92855834960938 * _0x4f4dd7, 31.72320556640625 * _0x4f4dd7, 69.92855834960938 * _0x4f4dd7, 29.72320556640625 * _0x4f4dd7, 74.92855834960938 * _0x4f4dd7, 29.72320556640625 * _0x4f4dd7), _0x5981e8['bezierCurveTo'](86.92855834960938 * _0x4f4dd7, 28.72320556640625 * _0x4f4dd7, 91.92855834960938 * _0x4f4dd7, 42.72320556640625 * _0x4f4dd7, 89.92855834960938 * _0x4f4dd7, 52.72320556640625 * _0x4f4dd7), _0x5981e8['bezierCurveTo'](88.92855834960938 * _0x4f4dd7, 63.72320556640625 * _0x4f4dd7, 73.92855834960938 * _0x4f4dd7, 75.72320556640625 * _0x4f4dd7, 55.928558349609375 * _0x4f4dd7, 87.72320556640625 * _0x4f4dd7), _0x5981e8['bezierCurveTo'](37.928558349609375 * _0x4f4dd7, 78.72320556640625 * _0x4f4dd7, 26.928558349609375 * _0x4f4dd7, 65.72320556640625 * _0x4f4dd7, 19.928558349609375 * _0x4f4dd7, 54.72320556640625 * _0x4f4dd7), _0x5981e8['bezierCurveTo'](13.928558349609375 * _0x4f4dd7, 42.72320556640625 * _0x4f4dd7, 21.928558349609375 * _0x4f4dd7, 28.72320556640625 * _0x4f4dd7, 35.928558349609375 * _0x4f4dd7, 29.72320556640625 * _0x4f4dd7), _0x5981e8['bezierCurveTo'](45.928558349609375 * _0x4f4dd7, 31.72320556640625 * _0x4f4dd7, 51.928558349609375 * _0x4f4dd7, 40.72320556640625 * _0x4f4dd7, 53.928558349609375 * _0x4f4dd7, 44.72320556640625 * _0x4f4dd7), _0x5981e8['closePath'](), fill_path(_0x5981e8, _0x5c3ec5[0x2]);
    else {
        if (_0x3c7e2f == 0x1) _0x5981e8['save'](), _0x5981e8['translate'](0x37 * _0x4f4dd7, 39.48748779296875 * _0x4f4dd7), round_rect(_0x5981e8, -11.5 * _0x4f4dd7, -0x24 * _0x4f4dd7, 0x17 * _0x4f4dd7, 0x48 * _0x4f4dd7, 0xa * _0x4f4dd7), _0x5981e8['restore'](), fill_path(_0x5981e8, _0x5c3ec5[0x2], _0x5c3ec5[0x3], 0x4 * _0x4f4dd7), circle(_0x5981e8, 54.5 * _0x4f4dd7, 78.48748779296875 * _0x4f4dd7, 22.02271554554524 * _0x4f4dd7), fill_path(_0x5981e8, _0x5c3ec5[0x4], _0x5c3ec5[0x3], 0x4 * _0x4f4dd7), _0x5981e8['save'](), _0x5981e8['translate'](55.5 * _0x4f4dd7, 57.287506103515625 * _0x4f4dd7), round_rect(_0x5981e8, -0x9 * _0x4f4dd7, -0x10 * _0x4f4dd7, 0x12 * _0x4f4dd7, 0x20 * _0x4f4dd7, 0xa * _0x4f4dd7), _0x5981e8['restore'](), fill_path(_0x5981e8, _0x5c3ec5[0x4]), _0x5981e8['beginPath'](), _0x5981e8['lineCap'] = 'round', _0x5981e8['lineJoin'] = 'round', _0x5981e8['moveTo'](66.5 * _0x4f4dd7, 25.287506103515625 * _0x4f4dd7), _0x5981e8['bezierCurveTo'](60.5 * _0x4f4dd7, 25.287506103515625 * _0x4f4dd7, 63.5 * _0x4f4dd7, 25.287506103515625 * _0x4f4dd7, 54.5 * _0x4f4dd7, 25.287506103515625 * _0x4f4dd7), _0x5981e8['closePath'](), fill_path(_0x5981e8, undefined, _0x5c3ec5[0x5], 0x4 * _0x4f4dd7), _0x5981e8['beginPath'](), _0x5981e8['lineCap'] = 'round', _0x5981e8['lineJoin'] = 'round', _0x5981e8['moveTo'](66.5 * _0x4f4dd7, 37.287506103515625 * _0x4f4dd7), _0x5981e8['bezierCurveTo'](60.5 * _0x4f4dd7, 37.287506103515625 * _0x4f4dd7, 60.5 * _0x4f4dd7, 37.287506103515625 * _0x4f4dd7, 54.5 * _0x4f4dd7, 37.287506103515625 * _0x4f4dd7), _0x5981e8['closePath'](), fill_path(_0x5981e8, undefined, _0x5c3ec5[0x5], 0x4 * _0x4f4dd7), _0x5981e8['beginPath'](), _0x5981e8['lineCap'] = 'round', _0x5981e8['lineJoin'] = 'round', _0x5981e8['moveTo'](66.5 * _0x4f4dd7, 50.287506103515625 * _0x4f4dd7), _0x5981e8['bezierCurveTo'](0x3d * _0x4f4dd7, 50.287506103515625 * _0x4f4dd7, 0x3d * _0x4f4dd7, 50.287506103515625 * _0x4f4dd7, 55.5 * _0x4f4dd7, 50.287506103515625 * _0x4f4dd7), _0x5981e8['closePath'](), fill_path(_0x5981e8, undefined, _0x5c3ec5[0x5], 0x4 * _0x4f4dd7);
        else {
            if (_0x3c7e2f == 0x2) _0x5981e8['beginPath'](), _0x5981e8['lineCap'] = 'round', _0x5981e8['lineJoin'] = 'round', _0x5981e8['moveTo'](45.928558349609375 * _0x4f4dd7, 55.29463195800781 * _0x4f4dd7), _0x5981e8['bezierCurveTo'](38.928558349609375 * _0x4f4dd7, 67.29463195800781 * _0x4f4dd7, 38.928558349609375 * _0x4f4dd7, 67.29463195800781 * _0x4f4dd7, 31.928558349609375 * _0x4f4dd7, 79.29463195800781 * _0x4f4dd7), _0x5981e8['bezierCurveTo'](15.928558349609375 * _0x4f4dd7, 85.29463195800781 * _0x4f4dd7, 17.928558349609375 * _0x4f4dd7, 86.29463195800781 * _0x4f4dd7, 17.928558349609375 * _0x4f4dd7, 90.29463195800781 * _0x4f4dd7), _0x5981e8['bezierCurveTo'](19.928558349609375 * _0x4f4dd7, 94.29463195800781 * _0x4f4dd7, 21.928558349609375 * _0x4f4dd7, 94.29463195800781 * _0x4f4dd7, 27.928558349609375 * _0x4f4dd7, 92.29463195800781 * _0x4f4dd7), _0x5981e8['bezierCurveTo'](29.928558349609375 * _0x4f4dd7, 98.29463195800781 * _0x4f4dd7, 30.928558349609375 * _0x4f4dd7, 99.29463195800781 * _0x4f4dd7, 33.928558349609375 * _0x4f4dd7, 99.29463195800781 * _0x4f4dd7), _0x5981e8['bezierCurveTo'](38.928558349609375 * _0x4f4dd7, 97.29463195800781 * _0x4f4dd7, 38.928558349609375 * _0x4f4dd7, 93.29463195800781 * _0x4f4dd7, 37.928558349609375 * _0x4f4dd7, 86.29463195800781 * _0x4f4dd7), _0x5981e8['bezierCurveTo'](45.428558349609375 * _0x4f4dd7, 73.29463195800781 * _0x4f4dd7, 51.928558349609375 * _0x4f4dd7, 64.29463195800781 * _0x4f4dd7, 52.928558349609375 * _0x4f4dd7, 60.29463195800781 * _0x4f4dd7), _0x5981e8['closePath'](), fill_path(_0x5981e8, _0x5c3ec5[0x2]), _0x5981e8['beginPath'](), _0x5981e8['lineCap'] = 'round', _0x5981e8['lineJoin'] = 'round', _0x5981e8['moveTo'](55.928558349609375 * _0x4f4dd7, 8.866058349609375 * _0x4f4dd7), _0x5981e8['bezierCurveTo'](35.928558349609375 * _0x4f4dd7, 35.866058349609375 * _0x4f4dd7, 37.928558349609375 * _0x4f4dd7, 48.866058349609375 * _0x4f4dd7, 46.928558349609375 * _0x4f4dd7, 62.866058349609375 * _0x4f4dd7), _0x5981e8['bezierCurveTo'](65.92855834960938 * _0x4f4dd7, 72.86605834960938 * _0x4f4dd7, 80.92855834960938 * _0x4f4dd7, 55.866058349609375 * _0x4f4dd7, 93.92855834960938 * _0x4f4dd7, 36.866058349609375 * _0x4f4dd7), _0x5981e8['closePath'](), fill_path(_0x5981e8, _0x5c3ec5[0x3], _0x5c3ec5[0x4], 0x6 * _0x4f4dd7), _0x5981e8['beginPath'](), _0x5981e8['lineCap'] = 'round', _0x5981e8['lineJoin'] = 'round', _0x5981e8['moveTo'](93.92855834960938 * _0x4f4dd7, 36.866058349609375 * _0x4f4dd7), _0x5981e8['bezierCurveTo'](82.92855834960938 * _0x4f4dd7, 37.866058349609375 * _0x4f4dd7, 77.92855834960938 * _0x4f4dd7, 36.866058349609375 * _0x4f4dd7, 67.92855834960938 * _0x4f4dd7, 28.866058349609375 * _0x4f4dd7), _0x5981e8['bezierCurveTo'](53.928558349609375 * _0x4f4dd7, 16.866058349609375 * _0x4f4dd7, 53.928558349609375 * _0x4f4dd7, 14.866058349609375 * _0x4f4dd7, 55.928558349609375 * _0x4f4dd7, 7.866058349609375 * _0x4f4dd7), _0x5981e8['bezierCurveTo'](65.92855834960938 * _0x4f4dd7, 4.866058349609375 * _0x4f4dd7, 71.92855834960938 * _0x4f4dd7, 7.866058349609375 * _0x4f4dd7, 83.92855834960938 * _0x4f4dd7, 13.866058349609375 * _0x4f4dd7), _0x5981e8['bezierCurveTo'](96.92855834960938 * _0x4f4dd7, 21.866058349609375 * _0x4f4dd7, 95.92855834960938 * _0x4f4dd7, 31.866058349609375 * _0x4f4dd7, 92.92855834960938 * _0x4f4dd7, 36.866058349609375 * _0x4f4dd7), _0x5981e8['closePath'](), fill_path(_0x5981e8, _0x5c3ec5[0x3], _0x5c3ec5[0x4], 0x6 * _0x4f4dd7), _0x5981e8['beginPath'](), _0x5981e8['lineCap'] = 'round', _0x5981e8['lineJoin'] = 'round', _0x5981e8['moveTo'](68.92855834960938 * _0x4f4dd7, 16.866058349609375 * _0x4f4dd7), _0x5981e8['bezierCurveTo'](71.92855834960938 * _0x4f4dd7, 13.866058349609375 * _0x4f4dd7, 76.92855834960938 * _0x4f4dd7, 16.866058349609375 * _0x4f4dd7, 79.92855834960938 * _0x4f4dd7, 21.866058349609375 * _0x4f4dd7), _0x5981e8['bezierCurveTo'](82.92855834960938 * _0x4f4dd7, 24.866058349609375 * _0x4f4dd7, 81.92855834960938 * _0x4f4dd7, 27.866058349609375 * _0x4f4dd7, 73.92855834960938 * _0x4f4dd7, 24.866058349609375 * _0x4f4dd7), _0x5981e8['bezierCurveTo'](67.92855834960938 * _0x4f4dd7, 20.866058349609375 * _0x4f4dd7, 66.92855834960938 * _0x4f4dd7, 19.866058349609375 * _0x4f4dd7, 67.92855834960938 * _0x4f4dd7, 17.866058349609375 * _0x4f4dd7), _0x5981e8['closePath'](), fill_path(_0x5981e8, _0x5c3ec5[0x2]);
            else _0x3c7e2f == 0x3 && (_0x5981e8['scale'](0.9, 0.9), _0x5981e8['translate'](0x6 * _0x4f4dd7, 0x0), _0x5981e8['beginPath'](), _0x5981e8['lineCap'] = 'round', _0x5981e8['lineJoin'] = 'round', _0x5981e8['moveTo'](0x36 * _0x4f4dd7, 0.421875 * _0x4f4dd7), _0x5981e8['bezierCurveTo'](0x54 * _0x4f4dd7, 45.421875 * _0x4f4dd7, 0x59 * _0x4f4dd7, 51.421875 * _0x4f4dd7, 0x53 * _0x4f4dd7, 74.421875 * _0x4f4dd7), _0x5981e8['bezierCurveTo'](0x4a * _0x4f4dd7, 95.421875 * _0x4f4dd7, 0x2e * _0x4f4dd7, 98.421875 * _0x4f4dd7, 0x1e * _0x4f4dd7, 78.421875 * _0x4f4dd7), _0x5981e8['bezierCurveTo'](0x16 * _0x4f4dd7, 59.421875 * _0x4f4dd7, 0x1b * _0x4f4dd7, 49.421875 * _0x4f4dd7, 0x22 * _0x4f4dd7, 36.421875 * _0x4f4dd7), _0x5981e8['closePath'](), fill_path(_0x5981e8, _0x5c3ec5[0x2], _0x5c3ec5[0x3], 0x6 * _0x4f4dd7), _0x5981e8['beginPath'](), _0x5981e8['lineCap'] = 'round', _0x5981e8['lineJoin'] = 'round', _0x5981e8['moveTo'](0x4a * _0x4f4dd7, 52.421875 * _0x4f4dd7), _0x5981e8['bezierCurveTo'](0x4d * _0x4f4dd7, 73.421875 * _0x4f4dd7, 0x45 * _0x4f4dd7, 81.421875 * _0x4f4dd7, 0x3a * _0x4f4dd7, 81.421875 * _0x4f4dd7), _0x5981e8['bezierCurveTo'](0x42 * _0x4f4dd7, 71.421875 * _0x4f4dd7, 0x46 * _0x4f4dd7, 66.421875 * _0x4f4dd7, 0x4a * _0x4f4dd7, 52.421875 * _0x4f4dd7), _0x5981e8['closePath'](), fill_path(_0x5981e8, _0x5c3ec5[0x3]));
        }
    }
    return _0x498be0;
}

function create_button_background(_0x500a9a, _0x157c97) {
    var _0xb29b5a = document['createElement']('canvas'),
        _0x21e491 = _0xb29b5a['getContext']('2d'),
        _0x36ff1b = _0x500a9a['w'] + _0x500a9a['lw'],
        _0x2ba0a3 = _0x500a9a['h'] + _0x500a9a['lw'],
        _0x2b38b6 = _0x2ba0a3 * 0.1;
    _0xb29b5a['width'] = _0x36ff1b, _0xb29b5a['height'] = _0x2ba0a3 + _0x2b38b6, _0x21e491['beginPath'](), _0x21e491['translate'](_0x36ff1b / 0x2, _0x2ba0a3 / 0x2 + _0x2b38b6), _0x21e491['globalAlpha'] = 0.5, round_rect(_0x21e491, -_0x500a9a['w'] / 0x2, -_0x500a9a['h'] / 0x2, _0x500a9a['w'], _0x500a9a['h'], _0x500a9a['r']), fill_path(_0x21e491, '#000', '#000', _0x500a9a['lw']), _0x21e491['globalAlpha'] = 0x1, _0x21e491['beginPath']();
    if (!_0x157c97) _0x21e491['translate'](0x0, -_0x2b38b6);
    return round_rect(_0x21e491, -_0x500a9a['w'] / 0x2, -_0x500a9a['h'] / 0x2, _0x500a9a['w'], _0x500a9a['h'], _0x500a9a['r']), fill_path(_0x21e491, _0x500a9a['bg'], _0x500a9a['fg'], _0x500a9a['lw']), _0x21e491['beginPath'](), _0x21e491['fillStyle'] = _0x500a9a['color'], (_0x21e491['textBaseline'] = 'middle', _0x21e491['textAlign'] = 'center', _0x21e491['font'] = _0x500a9a['size'] + 'px\x20' + _0x500a9a['font']), _0x21e491['fillText'](_0x500a9a['text'], 0x0, 0x0), _0xb29b5a;
}

function create_button(_0x3696eb) {
    var _0x26c864 = [];
    for (var _0x3e72d6 = 0x0; _0x3e72d6 < _0x3696eb['length']; _0x3e72d6++) _0x26c864['push'](create_button_background(_0x3696eb[_0x3e72d6], _0x3e72d6 == 0x2 ? !![] : ![]));
    return _0x26c864;
}

function create_gauges_mobile(_0x403a05) {
    var _0x12f1e9 = document['createElement']('canvas'),
        _0x4a9524 = _0x12f1e9['getContext']('2d'),
        _0xd62c69 = 0x14f * _0x403a05,
        _0xbb8377 = 0xfa * _0x403a05,
        _0x3d8fba = 0x78 * _0x403a05,
        _0x121085 = 0x14 * _0x403a05,
        _0xd83ffd = 0x23 * _0x403a05,
        _0x7fb756 = 0x41 * _0x403a05,
        _0x356f38 = 0x2 * _0x403a05,
        _0x340ba0 = 0x4 * _0x403a05;
    return _0x12f1e9['width'] = _0xd62c69, _0x12f1e9['height'] = _0x3d8fba, _0x4a9524['beginPath'](), _0x4a9524['translate'](0x0, 0xf * _0x403a05), round_rect(_0x4a9524, _0x7fb756, 0x0, _0xbb8377, _0x121085, _0x356f38), fill_path(_0x4a9524, null, '#69A148', _0x340ba0), _0x4a9524['translate'](0x0, _0xd83ffd), round_rect(_0x4a9524, _0x7fb756, 0x0, _0xbb8377, _0x121085, _0x356f38), fill_path(_0x4a9524, null, '#AF352A', _0x340ba0), _0x4a9524['translate'](0x0, _0xd83ffd), round_rect(_0x4a9524, _0x7fb756, 0x0, _0xbb8377, _0x121085, _0x356f38), fill_path(_0x4a9524, null, '#669BB1', _0x340ba0), _0x12f1e9;
}

function create_oxygen_gauges(_0x52b78f) {
    var _0x1c947c = document['createElement']('canvas'),
        _0x2e7dc4 = _0x1c947c['getContext']('2d'),
        _0x2d9979 = 0x258 * _0x52b78f,
        _0x45b95b = 0x16 * _0x52b78f,
        _0x2a1572 = 0x4 * _0x52b78f,
        _0x665581 = 0x4 * _0x52b78f;
    return _0x1c947c['width'] = _0x2d9979, _0x1c947c['height'] = _0x45b95b, round_rect(_0x2e7dc4, 0x5 * _0x52b78f, 0x5 * _0x52b78f, _0x2d9979 - 0xa * _0x52b78f, _0x45b95b - 0xa * _0x52b78f, _0x2a1572), fill_path(_0x2e7dc4, null, '#BBE8EF', _0x665581), _0x1c947c;
}

function create_recipe_button(_0x21adf7, _0xe93026, _0x35a0ab) {
    var _0x5c64d6 = document['createElement']('canvas'),
        _0x199d83 = _0x5c64d6['getContext']('2d');
    return _0x5c64d6['width'] = 0x23d * _0x21adf7, _0x5c64d6['height'] = 0x15e * _0x21adf7, _0x35a0ab == 0x1 && (_0x199d83['beginPath'](), _0x199d83['lineCap'] = 'round', _0x199d83['lineJoin'] = 'round', _0x199d83['moveTo'](0x150 * _0x21adf7, 0x48 * _0x21adf7), _0x199d83['bezierCurveTo'](0x16e * _0x21adf7, 0xf * _0x21adf7, 0x1aa * _0x21adf7, 0x24 * _0x21adf7, 0x1f1 * _0x21adf7, 0x53 * _0x21adf7), _0x199d83['bezierCurveTo'](0x20a * _0x21adf7, 0x55 * _0x21adf7, 0x20a * _0x21adf7, 0x55 * _0x21adf7, 0x223 * _0x21adf7, 0x57 * _0x21adf7), _0x199d83['bezierCurveTo'](476.5 * _0x21adf7, 0xcd * _0x21adf7, 476.5 * _0x21adf7, 0xcd * _0x21adf7, 0x196 * _0x21adf7, 0x143 * _0x21adf7), _0x199d83['bezierCurveTo'](297.5 * _0x21adf7, 0x13f * _0x21adf7, 297.5 * _0x21adf7, 0x13f * _0x21adf7, 0xbd * _0x21adf7, 0x13b * _0x21adf7), _0x199d83['bezierCurveTo'](105.5 * _0x21adf7, 0x117 * _0x21adf7, 105.5 * _0x21adf7, 0x117 * _0x21adf7, 0x16 * _0x21adf7, 0xf3 * _0x21adf7), _0x199d83['bezierCurveTo'](0x5c * _0x21adf7, 0x8c * _0x21adf7, 0x5c * _0x21adf7, 0x8c * _0x21adf7, 0xa2 * _0x21adf7, 0x25 * _0x21adf7), _0x199d83['bezierCurveTo'](0xad * _0x21adf7, 0x27 * _0x21adf7, 0xad * _0x21adf7, 0x27 * _0x21adf7, 0xb8 * _0x21adf7, 0x29 * _0x21adf7), _0x199d83['bezierCurveTo'](0xb9 * _0x21adf7, 38.5 * _0x21adf7, 0xb9 * _0x21adf7, 38.5 * _0x21adf7, 0xba * _0x21adf7, 0x24 * _0x21adf7), _0x199d83['bezierCurveTo'](0x143 * _0x21adf7, 0xd * _0x21adf7, 0x142 * _0x21adf7, 0x19 * _0x21adf7, 0x151 * _0x21adf7, 0x4a * _0x21adf7), _0x199d83['closePath'](), fill_path(_0x199d83, _0xe93026[0x4], _0xe93026[0x4], 0x23 * _0x21adf7)), _0x199d83['beginPath'](), _0x199d83['lineCap'] = 'round', _0x199d83['lineJoin'] = 'round', _0x199d83['moveTo'](0xa8 * _0x21adf7, 0x2a * _0x21adf7), _0x199d83['bezierCurveTo'](0xff * _0x21adf7, 0x3c * _0x21adf7, 0xff * _0x21adf7, 0x3c * _0x21adf7, 0x156 * _0x21adf7, 0x4e * _0x21adf7), _0x199d83['bezierCurveTo'](0x1bb * _0x21adf7, 81.5 * _0x21adf7, 0x1bb * _0x21adf7, 81.5 * _0x21adf7, 0x220 * _0x21adf7, 0x55 * _0x21adf7), _0x199d83['bezierCurveTo'](0x1db * _0x21adf7, 204.5 * _0x21adf7, 0x1db * _0x21adf7, 204.5 * _0x21adf7, 0x196 * _0x21adf7, 0x144 * _0x21adf7), _0x199d83['bezierCurveTo'](297.5 * _0x21adf7, 0x140 * _0x21adf7, 297.5 * _0x21adf7, 0x140 * _0x21adf7, 0xbd * _0x21adf7, 0x13c * _0x21adf7), _0x199d83['bezierCurveTo'](105.5 * _0x21adf7, 0x117 * _0x21adf7, 105.5 * _0x21adf7, 0x117 * _0x21adf7, 0x16 * _0x21adf7, 0xf2 * _0x21adf7), _0x199d83['closePath'](), fill_path(_0x199d83, _0xe93026[0x0], _0xe93026[0x1], 0xc * _0x21adf7), _0x199d83['beginPath'](), _0x199d83['lineCap'] = 'round', _0x199d83['lineJoin'] = 'round', _0x199d83['moveTo'](0xbc * _0x21adf7, 0x29 * _0x21adf7), _0x199d83['bezierCurveTo'](0x134 * _0x21adf7, 0xf * _0x21adf7, 0x145 * _0x21adf7, 0x12 * _0x21adf7, 0x151 * _0x21adf7, 0x42 * _0x21adf7), _0x199d83['bezierCurveTo'](0xbf * _0x21adf7, 0x131 * _0x21adf7, 0xc4 * _0x21adf7, 0x11e * _0x21adf7, 0xb8 * _0x21adf7, 0x133 * _0x21adf7), _0x199d83['bezierCurveTo'](0xaf * _0x21adf7, 0xfa * _0x21adf7, 0x5a * _0x21adf7, 0xfe * _0x21adf7, 0x34 * _0x21adf7, 0xf1 * _0x21adf7), _0x199d83['closePath'](), fill_path(_0x199d83, _0xe93026[0x2], _0xe93026[0x3], 0xc * _0x21adf7), _0x199d83['beginPath'](), _0x199d83['lineCap'] = 'round', _0x199d83['lineJoin'] = 'round', _0x199d83['moveTo'](0x150 * _0x21adf7, 0x47 * _0x21adf7), _0x199d83['bezierCurveTo'](0x177 * _0x21adf7, 0x8 * _0x21adf7, 0x1ad * _0x21adf7, 0x32 * _0x21adf7, 0x206 * _0x21adf7, 0x5c * _0x21adf7), _0x199d83['bezierCurveTo'](0x1c7 * _0x21adf7, 199.5 * _0x21adf7, 0x1c7 * _0x21adf7, 199.5 * _0x21adf7, 0x188 * _0x21adf7, 0x133 * _0x21adf7), _0x199d83['bezierCurveTo'](0xe3 * _0x21adf7, 0x12d * _0x21adf7, 0x105 * _0x21adf7, 0xff * _0x21adf7, 0xbc * _0x21adf7, 0x134 * _0x21adf7), _0x199d83['closePath'](), fill_path(_0x199d83, _0xe93026[0x2], _0xe93026[0x3], 0xc * _0x21adf7), _0x199d83['beginPath'](), _0x199d83['lineCap'] = 'round', _0x199d83['lineJoin'] = 'round', _0x199d83['moveTo'](0x165 * _0x21adf7, 0x4c * _0x21adf7), _0x199d83['bezierCurveTo'](0x186 * _0x21adf7, 0x43 * _0x21adf7, 0x19e * _0x21adf7, 0x56 * _0x21adf7, 0x1b3 * _0x21adf7, 0x68 * _0x21adf7), _0x199d83['bezierCurveTo'](0x1a1 * _0x21adf7, 0x87 * _0x21adf7, 0x1a1 * _0x21adf7, 0x87 * _0x21adf7, 0x18f * _0x21adf7, 0xa6 * _0x21adf7), _0x199d83['bezierCurveTo'](0x160 * _0x21adf7, 0x8c * _0x21adf7, 0x159 * _0x21adf7, 0x8b * _0x21adf7, 0x13f * _0x21adf7, 0x8e * _0x21adf7), _0x199d83['closePath'](), fill_path(_0x199d83, _0xe93026[0x3], _0xe93026[0x3], 0xc * _0x21adf7), _0x199d83['beginPath'](), _0x199d83['lineCap'] = 'round', _0x199d83['lineJoin'] = 'round', _0x199d83['moveTo'](0x135 * _0x21adf7, 0xa8 * _0x21adf7), _0x199d83['bezierCurveTo'](0x159 * _0x21adf7, 0xa3 * _0x21adf7, 0x174 * _0x21adf7, 0xb4 * _0x21adf7, 0x19c * _0x21adf7, 0xcb * _0x21adf7), fill_path(_0x199d83, _0xe93026[0x2], _0xe93026[0x3], 0xc * _0x21adf7), _0x199d83['beginPath'](), _0x199d83['lineCap'] = 'round', _0x199d83['lineJoin'] = 'round', _0x199d83['moveTo'](0x107 * _0x21adf7, 0x36 * _0x21adf7), _0x199d83['bezierCurveTo'](0x131 * _0x21adf7, 0x2c * _0x21adf7, 0x133 * _0x21adf7, 0x33 * _0x21adf7, 0x137 * _0x21adf7, 0x40 * _0x21adf7), _0x199d83['bezierCurveTo'](270.5 * _0x21adf7, 129.5 * _0x21adf7, 270.5 * _0x21adf7, 129.5 * _0x21adf7, 0xe6 * _0x21adf7, 0xc3 * _0x21adf7), _0x199d83['bezierCurveTo'](0xdd * _0x21adf7, 0xaf * _0x21adf7, 0xcb * _0x21adf7, 0xab * _0x21adf7, 0xba * _0x21adf7, 0xac * _0x21adf7), _0x199d83['closePath'](), fill_path(_0x199d83, _0xe93026[0x3], _0xe93026[0x3], 0xc * _0x21adf7), _0x199d83['beginPath'](), _0x199d83['lineCap'] = 'round', _0x199d83['lineJoin'] = 'round', _0x199d83['moveTo'](0x124 * _0x21adf7, 0xc6 * _0x21adf7), _0x199d83['bezierCurveTo'](0x148 * _0x21adf7, 0xbf * _0x21adf7, 0x16c * _0x21adf7, 0xd3 * _0x21adf7, 0x191 * _0x21adf7, 0xed * _0x21adf7), fill_path(_0x199d83, _0xe93026[0x2], _0xe93026[0x3], 0xc * _0x21adf7), _0x199d83['beginPath'](), _0x199d83['lineCap'] = 'round', _0x199d83['lineJoin'] = 'round', _0x199d83['moveTo'](0xf5 * _0x21adf7, 0x44 * _0x21adf7), _0x199d83['bezierCurveTo'](0xd2 * _0x21adf7, 0x48 * _0x21adf7, 0xd2 * _0x21adf7, 0x48 * _0x21adf7, 0xbd * _0x21adf7, 0x45 * _0x21adf7), fill_path(_0x199d83, _0xe93026[0x2], _0xe93026[0x3], 0xc * _0x21adf7), _0x199d83['beginPath'](), _0x199d83['lineCap'] = 'round', _0x199d83['lineJoin'] = 'round', _0x199d83['moveTo'](0xde * _0x21adf7, 0x60 * _0x21adf7), _0x199d83['bezierCurveTo'](0xc4 * _0x21adf7, 0x61 * _0x21adf7, 0xc1 * _0x21adf7, 0x61 * _0x21adf7, 0xb1 * _0x21adf7, 0x5c * _0x21adf7), fill_path(_0x199d83, _0xe93026[0x2], _0xe93026[0x3], 0xc * _0x21adf7), _0x199d83['beginPath'](), _0x199d83['lineCap'] = 'round', _0x199d83['lineJoin'] = 'round', _0x199d83['moveTo'](0xcf * _0x21adf7, 0x7c * _0x21adf7), _0x199d83['bezierCurveTo'](0xb3 * _0x21adf7, 0x7b * _0x21adf7, 0xb1 * _0x21adf7, 0x7c * _0x21adf7, 0xa1 * _0x21adf7, 0x77 * _0x21adf7), fill_path(_0x199d83, _0xe93026[0x2], _0xe93026[0x3], 0xc * _0x21adf7), _0x199d83['beginPath'](), _0x199d83['lineCap'] = 'round', _0x199d83['lineJoin'] = 'round', _0x199d83['moveTo'](0x73 * _0x21adf7, 0xb7 * _0x21adf7), _0x199d83['bezierCurveTo'](0xb8 * _0x21adf7, 0xb9 * _0x21adf7, 0xcb * _0x21adf7, 0xc6 * _0x21adf7, 0xdb * _0x21adf7, 0xdd * _0x21adf7), fill_path(_0x199d83, _0xe93026[0x2], _0xe93026[0x3], 0xc * _0x21adf7), _0x199d83['beginPath'](), _0x199d83['lineCap'] = 'round', _0x199d83['lineJoin'] = 'round', _0x199d83['moveTo'](0x62 * _0x21adf7, 0xd5 * _0x21adf7), _0x199d83['bezierCurveTo'](0xa1 * _0x21adf7, 0xd6 * _0x21adf7, 0xc1 * _0x21adf7, 0xe3 * _0x21adf7, 0xc9 * _0x21adf7, 0xf9 * _0x21adf7), fill_path(_0x199d83, _0xe93026[0x2], _0xe93026[0x3], 0xc * _0x21adf7), _0x199d83['beginPath'](), _0x199d83['lineCap'] = 'round', _0x199d83['lineJoin'] = 'round', _0x199d83['moveTo'](0x18f * _0x21adf7, 0x101 * _0x21adf7), _0x199d83['bezierCurveTo'](0x11f * _0x21adf7, 0xd7 * _0x21adf7, 0x118 * _0x21adf7, 0xd7 * _0x21adf7, 0x107 * _0x21adf7, 0xde * _0x21adf7), _0x199d83['bezierCurveTo'](0xfd * _0x21adf7, 0xee * _0x21adf7, 0xf7 * _0x21adf7, 0xf5 * _0x21adf7, 0xf3 * _0x21adf7, 0xfe * _0x21adf7), _0x199d83['bezierCurveTo'](0x10b * _0x21adf7, 0xec * _0x21adf7, 0x124 * _0x21adf7, 0x107 * _0x21adf7, 0x179 * _0x21adf7, 0x11c * _0x21adf7), fill_path(_0x199d83, _0xe93026[0x3], _0xe93026[0x3], 0xc * _0x21adf7), _0x5c64d6;
}

function create_quest_button(_0x2e7453, _0x3d55bd, _0x35b5b0, _0x44a9b4) {
    var _0x57fc7d = document['createElement']('canvas'),
        _0x567118 = _0x57fc7d['getContext']('2d');
    return _0x57fc7d['width'] = 0xaa * _0x2e7453, _0x57fc7d['height'] = 0xc8 * _0x2e7453, _0x567118['translate'](0x5 * _0x2e7453, 0xf * _0x2e7453), _0x44a9b4 == 0x1 && (_0x567118['translate'](0x0, -0x5 * _0x2e7453), circle(_0x567118, 77.00003051757812 * _0x2e7453, 104.49432373046875 * _0x2e7453, 71.84010022264724 * _0x2e7453), fill_path(_0x567118, _0x35b5b0[0x1], _0x35b5b0[0x5], 0x14 * _0x2e7453), circle(_0x567118, 77.00003051757812 * _0x2e7453, 104.22160339355469 * _0x2e7453, 61.554853586049575 * _0x2e7453), fill_path(_0x567118, _0x35b5b0[0x1], _0x35b5b0[0x5], 0x14 * _0x2e7453), _0x567118['save'](), _0x567118['translate'](77.00003051757812 * _0x2e7453, 31.267044067382812 * _0x2e7453), round_rect(_0x567118, -0x6 * _0x2e7453, -12.5 * _0x2e7453, 0xc * _0x2e7453, 0x19 * _0x2e7453, 0xa * _0x2e7453), _0x567118['restore'](), fill_path(_0x567118, _0x35b5b0[0x1], _0x35b5b0[0x5], 0x14 * _0x2e7453), _0x567118['save'](), _0x567118['translate'](77.00003051757812 * _0x2e7453, 13.267044067382812 * _0x2e7453), round_rect(_0x567118, -0xf * _0x2e7453, -10.5 * _0x2e7453, 0x1e * _0x2e7453, 0x15 * _0x2e7453, 0xa * _0x2e7453), _0x567118['restore'](), fill_path(_0x567118, _0x35b5b0[0x1], _0x35b5b0[0x5], 0x14 * _0x2e7453)), circle(_0x567118, 77.00003051757812 * _0x2e7453, 104.49432373046875 * _0x2e7453, 71.84010022264724 * _0x2e7453), fill_path(_0x567118, _0x35b5b0[0x1], _0x35b5b0[0x2], 0x7 * _0x2e7453), circle(_0x567118, 77.00003051757812 * _0x2e7453, 104.22160339355469 * _0x2e7453, 61.554853586049575 * _0x2e7453), fill_path(_0x567118, _0x35b5b0[0x1], _0x35b5b0[0x2], 0x7 * _0x2e7453), _0x567118['beginPath'](), _0x567118['lineCap'] = 'round', _0x567118['lineJoin'] = 'round', _0x567118['moveTo'](18.000030517578125 * _0x2e7453, 105.85795593261719 * _0x2e7453), _0x567118['bezierCurveTo'](134.00003051757812 * _0x2e7453, 104.85795593261719 * _0x2e7453, 77.00003051757812 * _0x2e7453, 104.85795593261719 * _0x2e7453, 136.00003051757812 * _0x2e7453, 103.85795593261719 * _0x2e7453), _0x567118['closePath'](), fill_path(_0x567118, _0x35b5b0[0x1], _0x35b5b0[0x2], 0x8 * _0x2e7453), circle(_0x567118, 77.00003051757812 * _0x2e7453, 104.6761474609375 * _0x2e7453, 32.55764119219941 * _0x2e7453), fill_path(_0x567118, _0x35b5b0[0x1], _0x35b5b0[0x2], 0x8 * _0x2e7453), _0x567118['beginPath'](), _0x567118['lineCap'] = 'round', _0x567118['lineJoin'] = 'round', _0x567118['moveTo'](78.00003051757812 * _0x2e7453, 112.03977966308594 * _0x2e7453), _0x567118['bezierCurveTo'](78.00003051757812 * _0x2e7453, 87.03977966308594 * _0x2e7453, 78.00003051757812 * _0x2e7453, 87.03977966308594 * _0x2e7453, 78.00003051757812 * _0x2e7453, 62.03977966308594 * _0x2e7453), _0x567118['closePath'](), fill_path(_0x567118, _0x35b5b0[0x3], _0x35b5b0[0x2], 0x8 * _0x2e7453), _0x567118['beginPath'](), _0x567118['lineCap'] = 'round', _0x567118['lineJoin'] = 'round', _0x567118['moveTo'](78.00003051757812 * _0x2e7453, 48.03977966308594 * _0x2e7453), _0x567118['bezierCurveTo'](82.00003051757812 * _0x2e7453, 55.53977966308594 * _0x2e7453, 82.00003051757812 * _0x2e7453, 55.53977966308594 * _0x2e7453, 86.00003051757812 * _0x2e7453, 63.03977966308594 * _0x2e7453), _0x567118['bezierCurveTo'](78.00003051757812 * _0x2e7453, 63.03977966308594 * _0x2e7453, 78.00003051757812 * _0x2e7453, 63.03977966308594 * _0x2e7453, 70.00003051757812 * _0x2e7453, 63.03977966308594 * _0x2e7453), _0x567118['closePath'](), fill_path(_0x567118, _0x35b5b0[0x3], _0x35b5b0[0x2], 0x4 * _0x2e7453), _0x567118['beginPath'](), _0x567118['lineCap'] = 'round', _0x567118['lineJoin'] = 'round', _0x567118['moveTo'](80.00003051757812 * _0x2e7453, 111.6761474609375 * _0x2e7453), _0x567118['bezierCurveTo'](95.00003051757812 * _0x2e7453, 97.1761474609375 * _0x2e7453, 95.00003051757812 * _0x2e7453, 97.1761474609375 * _0x2e7453, 110.00003051757812 * _0x2e7453, 82.6761474609375 * _0x2e7453), _0x567118['closePath'](), fill_path(_0x567118, _0x35b5b0[0x3], _0x35b5b0[0x2], 0x8 * _0x2e7453), _0x567118['beginPath'](), _0x567118['lineCap'] = 'round', _0x567118['lineJoin'] = 'round', _0x567118['moveTo'](107.00003051757812 * _0x2e7453, 76.6761474609375 * _0x2e7453), _0x567118['bezierCurveTo'](111.50003051757812 * _0x2e7453, 82.6761474609375 * _0x2e7453, 111.50003051757812 * _0x2e7453, 82.6761474609375 * _0x2e7453, 116.00003051757812 * _0x2e7453, 88.6761474609375 * _0x2e7453), _0x567118['bezierCurveTo'](118.50003051757812 * _0x2e7453, 81.6761474609375 * _0x2e7453, 118.50003051757812 * _0x2e7453, 81.6761474609375 * _0x2e7453, 121.00003051757812 * _0x2e7453, 74.6761474609375 * _0x2e7453), _0x567118['closePath'](), fill_path(_0x567118, _0x35b5b0[0x3], _0x35b5b0[0x2], 0x4 * _0x2e7453), circle(_0x567118, 77.00003051757812 * _0x2e7453, 105.03977966308594 * _0x2e7453, 15.556349186104045 * _0x2e7453), fill_path(_0x567118, _0x35b5b0[0x3], _0x35b5b0[0x2], 0x4 * _0x2e7453), _0x567118['save'](), _0x567118['translate'](77.00003051757812 * _0x2e7453, 31.267044067382812 * _0x2e7453), _0x567118['rotate'](0x0), round_rect(_0x567118, -0x6 * _0x2e7453, -12.5 * _0x2e7453, 0xc * _0x2e7453, 0x19 * _0x2e7453, 0xa * _0x2e7453), _0x567118['restore'](), fill_path(_0x567118, _0x35b5b0[0x1], _0x35b5b0[0x2], 0x7 * _0x2e7453), _0x567118['save'](), _0x567118['translate'](77.00003051757812 * _0x2e7453, 13.267044067382812 * _0x2e7453), _0x567118['rotate'](0x0), round_rect(_0x567118, -0xf * _0x2e7453, -10.5 * _0x2e7453, 0x1e * _0x2e7453, 0x15 * _0x2e7453, 0xa * _0x2e7453), _0x567118['restore'](), fill_path(_0x567118, _0x35b5b0[0x1], _0x35b5b0[0x2], 0x7 * _0x2e7453), _0x57fc7d;
}

function create_market_button(_0x465f1f, _0x1c2b0e, _0xce6782) {
    var _0x43b655 = document['createElement']('canvas'),
        _0x5588c7 = _0x43b655['getContext']('2d');
    return _0x43b655['width'] = 0x51 * _0x465f1f, _0x43b655['height'] = 0x4d * _0x465f1f, _0x5588c7['translate'](0x0, 0xa * _0x465f1f), _0x5588c7['scale'](0.2, 0.2), _0x5588c7['translate'](0x0, -0x1e * _0x465f1f), _0xce6782 == 0x1 && (_0x5588c7['beginPath'](), _0x5588c7['lineCap'] = 'round', _0x5588c7['lineJoin'] = 'round', _0x5588c7['moveTo'](36.5 * _0x465f1f, 278.0625 * _0x465f1f), _0x5588c7['bezierCurveTo'](67.5 * _0x465f1f, 316.0625 * _0x465f1f, 134.5 * _0x465f1f, 334.0625 * _0x465f1f, 199.5 * _0x465f1f, 319.0625 * _0x465f1f), _0x5588c7['bezierCurveTo'](254.5 * _0x465f1f, 304.0625 * _0x465f1f, 346.5 * _0x465f1f, 270.0625 * _0x465f1f, 348.5 * _0x465f1f, 237.0625 * _0x465f1f), _0x5588c7['bezierCurveTo'](359.5 * _0x465f1f, 206.0625 * _0x465f1f, 318.5 * _0x465f1f, 129.0625 * _0x465f1f, 262.5 * _0x465f1f, 122.0625 * _0x465f1f), _0x5588c7['bezierCurveTo'](213.5 * _0x465f1f, 115.0625 * _0x465f1f, 166.5 * _0x465f1f, 133.0625 * _0x465f1f, 104.5 * _0x465f1f, 166.0625 * _0x465f1f), _0x5588c7['bezierCurveTo'](54.5 * _0x465f1f, 194.0625 * _0x465f1f, 23.5 * _0x465f1f, 241.0625 * _0x465f1f, 36.5 * _0x465f1f, 277.0625 * _0x465f1f), _0x5588c7['closePath'](), fill_path(_0x5588c7, _0x1c2b0e[0x0], _0x1c2b0e[0x3], 0x32 * _0x465f1f)), _0x5588c7['beginPath'](), _0x5588c7['lineCap'] = 'round', _0x5588c7['lineJoin'] = 'round', _0x5588c7['moveTo'](36.5 * _0x465f1f, 278.0625 * _0x465f1f), _0x5588c7['bezierCurveTo'](67.5 * _0x465f1f, 316.0625 * _0x465f1f, 134.5 * _0x465f1f, 334.0625 * _0x465f1f, 199.5 * _0x465f1f, 319.0625 * _0x465f1f), _0x5588c7['bezierCurveTo'](254.5 * _0x465f1f, 304.0625 * _0x465f1f, 346.5 * _0x465f1f, 270.0625 * _0x465f1f, 348.5 * _0x465f1f, 237.0625 * _0x465f1f), _0x5588c7['bezierCurveTo'](359.5 * _0x465f1f, 206.0625 * _0x465f1f, 318.5 * _0x465f1f, 129.0625 * _0x465f1f, 262.5 * _0x465f1f, 122.0625 * _0x465f1f), _0x5588c7['bezierCurveTo'](213.5 * _0x465f1f, 115.0625 * _0x465f1f, 166.5 * _0x465f1f, 133.0625 * _0x465f1f, 104.5 * _0x465f1f, 166.0625 * _0x465f1f), _0x5588c7['bezierCurveTo'](54.5 * _0x465f1f, 194.0625 * _0x465f1f, 23.5 * _0x465f1f, 241.0625 * _0x465f1f, 36.5 * _0x465f1f, 277.0625 * _0x465f1f), _0x5588c7['closePath'](), fill_path(_0x5588c7, _0x1c2b0e[0x0], _0x1c2b0e[0x1], 0x13 * _0x465f1f), _0x5588c7['beginPath'](), _0x5588c7['lineCap'] = 'round', _0x5588c7['lineJoin'] = 'round', _0x5588c7['moveTo'](214.5 * _0x465f1f, 124.0625 * _0x465f1f), _0x5588c7['bezierCurveTo'](242.5 * _0x465f1f, 125.0625 * _0x465f1f, 272.5 * _0x465f1f, 159.0625 * _0x465f1f, 283.5 * _0x465f1f, 184.0625 * _0x465f1f), _0x5588c7['bezierCurveTo'](277.5 * _0x465f1f, 161.0625 * _0x465f1f, 233.5 * _0x465f1f, 128.0625 * _0x465f1f, 219.5 * _0x465f1f, 122.0625 * _0x465f1f), _0x5588c7['closePath'](), fill_path(_0x5588c7, _0x1c2b0e[0x0], _0x1c2b0e[0x1], 0x13 * _0x465f1f), _0x5588c7['beginPath'](), _0x5588c7['lineCap'] = 'round', _0x5588c7['lineJoin'] = 'round', _0x5588c7['moveTo'](157.5 * _0x465f1f, 145.0625 * _0x465f1f), _0x5588c7['bezierCurveTo'](176.5 * _0x465f1f, 148.0625 * _0x465f1f, 205.5 * _0x465f1f, 176.0625 * _0x465f1f, 212.5 * _0x465f1f, 197.0625 * _0x465f1f), _0x5588c7['bezierCurveTo'](205.5 * _0x465f1f, 178.0625 * _0x465f1f, 177.5 * _0x465f1f, 152.0625 * _0x465f1f, 156.5 * _0x465f1f, 142.0625 * _0x465f1f), _0x5588c7['closePath'](), fill_path(_0x5588c7, _0x1c2b0e[0x0], _0x1c2b0e[0x1], 0x13 * _0x465f1f), _0x5588c7['beginPath'](), _0x5588c7['lineCap'] = 'round', _0x5588c7['lineJoin'] = 'round', _0x5588c7['moveTo'](103.5 * _0x465f1f, 169.0625 * _0x465f1f), _0x5588c7['bezierCurveTo'](160.5 * _0x465f1f, 166.0625 * _0x465f1f, 228.5 * _0x465f1f, 312.0625 * _0x465f1f, 162.5 * _0x465f1f, 323.0625 * _0x465f1f), _0x5588c7['bezierCurveTo'](128.5 * _0x465f1f, 330.0625 * _0x465f1f, 45.5 * _0x465f1f, 312.0625 * _0x465f1f, 34.5 * _0x465f1f, 268.0625 * _0x465f1f), _0x5588c7['bezierCurveTo'](30.5 * _0x465f1f, 238.0625 * _0x465f1f, 44.5 * _0x465f1f, 222.0625 * _0x465f1f, 52.5 * _0x465f1f, 211.0625 * _0x465f1f), _0x5588c7['bezierCurveTo'](82.5 * _0x465f1f, 174.0625 * _0x465f1f, 104.5 * _0x465f1f, 166.0625 * _0x465f1f, 119.5 * _0x465f1f, 172.0625 * _0x465f1f), _0x5588c7['closePath'](), fill_path(_0x5588c7, _0x1c2b0e[0x2], _0x1c2b0e[0x1], 0x13 * _0x465f1f), _0x5588c7['beginPath'](), _0x5588c7['lineCap'] = 'round', _0x5588c7['lineJoin'] = 'round', _0x5588c7['moveTo'](194.5 * _0x465f1f, 313.0625 * _0x465f1f), _0x5588c7['bezierCurveTo'](222.5 * _0x465f1f, 306.0625 * _0x465f1f, 319.5 * _0x465f1f, 271.0625 * _0x465f1f, 337.5 * _0x465f1f, 241.0625 * _0x465f1f), _0x5588c7['bezierCurveTo'](274.5 * _0x465f1f, 270.0625 * _0x465f1f, 216.5 * _0x465f1f, 288.0625 * _0x465f1f, 199.5 * _0x465f1f, 287.0625 * _0x465f1f), _0x5588c7['bezierCurveTo'](198.5 * _0x465f1f, 302.0625 * _0x465f1f, 195.5 * _0x465f1f, 311.0625 * _0x465f1f, 193.5 * _0x465f1f, 312.0625 * _0x465f1f), _0x5588c7['closePath'](), fill_path(_0x5588c7, _0x1c2b0e[0x1]), _0x5588c7['scale'](0x3, 0x3), _0x5588c7['translate'](0xf, 0xa * _0x465f1f), _0xce6782 == 0x1 && (_0x5588c7['beginPath'](), _0x5588c7['lineCap'] = 'round', _0x5588c7['lineJoin'] = 'round', _0x5588c7['moveTo'](0x4 * _0x465f1f, 0x20 * _0x465f1f), _0x5588c7['bezierCurveTo'](0x13 * _0x465f1f, 0x19 * _0x465f1f, 0x13 * _0x465f1f, 0x19 * _0x465f1f, 0x22 * _0x465f1f, 0x12 * _0x465f1f), _0x5588c7['bezierCurveTo'](41.5 * _0x465f1f, 23.5 * _0x465f1f, 41.5 * _0x465f1f, 23.5 * _0x465f1f, 0x31 * _0x465f1f, 0x1d * _0x465f1f), _0x5588c7['bezierCurveTo'](59.5 * _0x465f1f, 0x14 * _0x465f1f, 59.5 * _0x465f1f, 0x14 * _0x465f1f, 0x46 * _0x465f1f, 0xb * _0x465f1f), fill_path(_0x5588c7, undefined, _0x1c2b0e[0x3], 0x1c * _0x465f1f), _0x5588c7['beginPath'](), _0x5588c7['lineCap'] = 'round', _0x5588c7['lineJoin'] = 'round', _0x5588c7['moveTo'](0x38 * _0x465f1f, 0x6 * _0x465f1f), _0x5588c7['bezierCurveTo'](63.5 * _0x465f1f, 13.5 * _0x465f1f, 63.5 * _0x465f1f, 13.5 * _0x465f1f, 0x47 * _0x465f1f, 0x15 * _0x465f1f), _0x5588c7['bezierCurveTo'](74.5 * _0x465f1f, 11.5 * _0x465f1f, 74.5 * _0x465f1f, 11.5 * _0x465f1f, 0x4e * _0x465f1f, 0x2 * _0x465f1f), _0x5588c7['closePath'](), fill_path(_0x5588c7, _0x1c2b0e[0x3], _0x1c2b0e[0x3], 0x1c * _0x465f1f)), _0x5588c7['beginPath'](), _0x5588c7['lineCap'] = 'round', _0x5588c7['lineJoin'] = 'round', _0x5588c7['moveTo'](0x4 * _0x465f1f, 0x20 * _0x465f1f), _0x5588c7['bezierCurveTo'](0x13 * _0x465f1f, 0x19 * _0x465f1f, 0x13 * _0x465f1f, 0x19 * _0x465f1f, 0x22 * _0x465f1f, 0x12 * _0x465f1f), _0x5588c7['bezierCurveTo'](41.5 * _0x465f1f, 23.5 * _0x465f1f, 41.5 * _0x465f1f, 23.5 * _0x465f1f, 0x31 * _0x465f1f, 0x1d * _0x465f1f), _0x5588c7['bezierCurveTo'](59.5 * _0x465f1f, 0x14 * _0x465f1f, 59.5 * _0x465f1f, 0x14 * _0x465f1f, 0x46 * _0x465f1f, 0xb * _0x465f1f), fill_path(_0x5588c7, undefined, _0x1c2b0e[0x1], 0x11 * _0x465f1f), _0x5588c7['beginPath'](), _0x5588c7['lineCap'] = 'round', _0x5588c7['lineJoin'] = 'round', _0x5588c7['moveTo'](0x38 * _0x465f1f, 0x6 * _0x465f1f), _0x5588c7['bezierCurveTo'](63.5 * _0x465f1f, 13.5 * _0x465f1f, 63.5 * _0x465f1f, 13.5 * _0x465f1f, 0x47 * _0x465f1f, 0x15 * _0x465f1f), _0x5588c7['bezierCurveTo'](74.5 * _0x465f1f, 11.5 * _0x465f1f, 74.5 * _0x465f1f, 11.5 * _0x465f1f, 0x4e * _0x465f1f, 0x2 * _0x465f1f), _0x5588c7['closePath'](), fill_path(_0x5588c7, _0x1c2b0e[0x1], _0x1c2b0e[0x1], 0x11 * _0x465f1f), _0x5588c7['beginPath'](), _0x5588c7['lineCap'] = 'round', _0x5588c7['lineJoin'] = 'round', _0x5588c7['moveTo'](0x4 * _0x465f1f, 0x20 * _0x465f1f), _0x5588c7['bezierCurveTo'](0x13 * _0x465f1f, 0x19 * _0x465f1f, 0x13 * _0x465f1f, 0x19 * _0x465f1f, 0x22 * _0x465f1f, 0x12 * _0x465f1f), _0x5588c7['bezierCurveTo'](41.5 * _0x465f1f, 23.5 * _0x465f1f, 41.5 * _0x465f1f, 23.5 * _0x465f1f, 0x31 * _0x465f1f, 0x1d * _0x465f1f), _0x5588c7['bezierCurveTo'](59.5 * _0x465f1f, 0x14 * _0x465f1f, 59.5 * _0x465f1f, 0x14 * _0x465f1f, 0x46 * _0x465f1f, 0xb * _0x465f1f), fill_path(_0x5588c7, undefined, _0x1c2b0e[0x2], 0xa * _0x465f1f), _0x5588c7['beginPath'](), _0x5588c7['lineCap'] = 'round', _0x5588c7['lineJoin'] = 'round', _0x5588c7['moveTo'](0x38 * _0x465f1f, 0x6 * _0x465f1f), _0x5588c7['bezierCurveTo'](63.5 * _0x465f1f, 13.5 * _0x465f1f, 63.5 * _0x465f1f, 13.5 * _0x465f1f, 0x47 * _0x465f1f, 0x15 * _0x465f1f), _0x5588c7['bezierCurveTo'](74.5 * _0x465f1f, 11.5 * _0x465f1f, 74.5 * _0x465f1f, 11.5 * _0x465f1f, 0x4e * _0x465f1f, 0x2 * _0x465f1f), _0x5588c7['closePath'](), fill_path(_0x5588c7, _0x1c2b0e[0x2], _0x1c2b0e[0x2], 0xa * _0x465f1f), _0x43b655;
}

function create_spanner(_0x2fe731, _0x3a733e, _0xe8cd0a) {
    var _0x15069d = document['createElement']('canvas'),
        _0x9b8955 = _0x15069d['getContext']('2d');
    return _0x15069d['width'] = 0x90 * _0x2fe731, _0x15069d['height'] = 0x118 * _0x2fe731, _0x9b8955['globalAlpha'] = _0x3a733e ? 0.5 : 0x1, _0x9b8955['translate'](0x5 * _0x2fe731, 0x5 * _0x2fe731), _0x9b8955['beginPath'](), _0x9b8955['lineCap'] = 'round', _0x9b8955['lineJoin'] = 'round', _0x9b8955['moveTo'](0x3e * _0x2fe731, 103.79999542236328 * _0x2fe731), _0x9b8955['bezierCurveTo'](62.5 * _0x2fe731, 148.79999542236328 * _0x2fe731, 62.5 * _0x2fe731, 148.79999542236328 * _0x2fe731, 0x3f * _0x2fe731, 193.79999542236328 * _0x2fe731), _0x9b8955['bezierCurveTo'](0x3f * _0x2fe731, 219.79999542236328 * _0x2fe731, 0x2f * _0x2fe731, 217.79999542236328 * _0x2fe731, 0x33 * _0x2fe731, 230.79999542236328 * _0x2fe731), _0x9b8955['bezierCurveTo'](0x3e * _0x2fe731, 255.79999542236328 * _0x2fe731, 0x4a * _0x2fe731, 260.7999954223633 * _0x2fe731, 0x48 * _0x2fe731, 248.79999542236328 * _0x2fe731), _0x9b8955['bezierCurveTo'](0x41 * _0x2fe731, 226.79999542236328 * _0x2fe731, 0x47 * _0x2fe731, 229.79999542236328 * _0x2fe731, 0x4c * _0x2fe731, 225.79999542236328 * _0x2fe731), _0x9b8955['bezierCurveTo'](0x5a * _0x2fe731, 224.79999542236328 * _0x2fe731, 0x59 * _0x2fe731, 232.79999542236328 * _0x2fe731, 0x5a * _0x2fe731, 243.79999542236328 * _0x2fe731), _0x9b8955['bezierCurveTo'](0x5f * _0x2fe731, 253.79999542236328 * _0x2fe731, 0x63 * _0x2fe731, 249.79999542236328 * _0x2fe731, 0x64 * _0x2fe731, 229.79999542236328 * _0x2fe731), _0x9b8955['bezierCurveTo'](0x66 * _0x2fe731, 213.79999542236328 * _0x2fe731, 0x62 * _0x2fe731, 214.79999542236328 * _0x2fe731, 0x5a * _0x2fe731, 205.79999542236328 * _0x2fe731), _0x9b8955['bezierCurveTo'](0x52 * _0x2fe731, 201.79999542236328 * _0x2fe731, 0x52 * _0x2fe731, 185.79999542236328 * _0x2fe731, 0x52 * _0x2fe731, 114.79999542236328 * _0x2fe731), _0x9b8955['bezierCurveTo'](0x50 * _0x2fe731, 0x49 * _0x2fe731, 0x52 * _0x2fe731, 0x44 * _0x2fe731, 0x5d * _0x2fe731, 0x35 * _0x2fe731), _0x9b8955['bezierCurveTo'](0x62 * _0x2fe731, 0x25 * _0x2fe731, 0x41 * _0x2fe731, 0xe * _0x2fe731, 0x4a * _0x2fe731, 0x21 * _0x2fe731), _0x9b8955['bezierCurveTo'](0x52 * _0x2fe731, 0x38 * _0x2fe731, 0x4d * _0x2fe731, 0x34 * _0x2fe731, 0x45 * _0x2fe731, 0x36 * _0x2fe731), _0x9b8955['bezierCurveTo'](0x37 * _0x2fe731, 0x39 * _0x2fe731, 0x39 * _0x2fe731, 0x35 * _0x2fe731, 0x36 * _0x2fe731, 0x27 * _0x2fe731), _0x9b8955['bezierCurveTo'](0x2e * _0x2fe731, 0x14 * _0x2fe731, 0x25 * _0x2fe731, 0x3d * _0x2fe731, 0x32 * _0x2fe731, 0x44 * _0x2fe731), _0x9b8955['bezierCurveTo'](0x41 * _0x2fe731, 0x51 * _0x2fe731, 0x3c * _0x2fe731, 0x59 * _0x2fe731, 0x3e * _0x2fe731, 0x66 * _0x2fe731), _0x9b8955['closePath'](), fill_path(_0x9b8955, _0xe8cd0a[0x0]), _0x9b8955['globalAlpha'] = 0x1, _0x9b8955['translate'](-0x5 * _0x2fe731, -0x5 * _0x2fe731), _0x9b8955['beginPath'](), _0x9b8955['lineCap'] = 'round', _0x9b8955['lineJoin'] = 'round', _0x9b8955['moveTo'](0x3e * _0x2fe731, 103.79999542236328 * _0x2fe731), _0x9b8955['bezierCurveTo'](62.5 * _0x2fe731, 148.79999542236328 * _0x2fe731, 62.5 * _0x2fe731, 148.79999542236328 * _0x2fe731, 0x3f * _0x2fe731, 193.79999542236328 * _0x2fe731), _0x9b8955['bezierCurveTo'](0x3f * _0x2fe731, 219.79999542236328 * _0x2fe731, 0x2f * _0x2fe731, 217.79999542236328 * _0x2fe731, 0x33 * _0x2fe731, 230.79999542236328 * _0x2fe731), _0x9b8955['bezierCurveTo'](0x3e * _0x2fe731, 255.79999542236328 * _0x2fe731, 0x4a * _0x2fe731, 260.7999954223633 * _0x2fe731, 0x48 * _0x2fe731, 248.79999542236328 * _0x2fe731), _0x9b8955['bezierCurveTo'](0x41 * _0x2fe731, 226.79999542236328 * _0x2fe731, 0x47 * _0x2fe731, 229.79999542236328 * _0x2fe731, 0x4c * _0x2fe731, 225.79999542236328 * _0x2fe731), _0x9b8955['bezierCurveTo'](0x5a * _0x2fe731, 224.79999542236328 * _0x2fe731, 0x59 * _0x2fe731, 232.79999542236328 * _0x2fe731, 0x5a * _0x2fe731, 243.79999542236328 * _0x2fe731), _0x9b8955['bezierCurveTo'](0x5f * _0x2fe731, 253.79999542236328 * _0x2fe731, 0x63 * _0x2fe731, 249.79999542236328 * _0x2fe731, 0x64 * _0x2fe731, 229.79999542236328 * _0x2fe731), _0x9b8955['bezierCurveTo'](0x66 * _0x2fe731, 213.79999542236328 * _0x2fe731, 0x62 * _0x2fe731, 214.79999542236328 * _0x2fe731, 0x5a * _0x2fe731, 205.79999542236328 * _0x2fe731), _0x9b8955['bezierCurveTo'](0x52 * _0x2fe731, 201.79999542236328 * _0x2fe731, 0x52 * _0x2fe731, 185.79999542236328 * _0x2fe731, 0x52 * _0x2fe731, 114.79999542236328 * _0x2fe731), _0x9b8955['bezierCurveTo'](0x50 * _0x2fe731, 0x49 * _0x2fe731, 0x52 * _0x2fe731, 0x44 * _0x2fe731, 0x5d * _0x2fe731, 0x35 * _0x2fe731), _0x9b8955['bezierCurveTo'](0x62 * _0x2fe731, 0x25 * _0x2fe731, 0x41 * _0x2fe731, 0xe * _0x2fe731, 0x4a * _0x2fe731, 0x21 * _0x2fe731), _0x9b8955['bezierCurveTo'](0x52 * _0x2fe731, 0x38 * _0x2fe731, 0x4d * _0x2fe731, 0x34 * _0x2fe731, 0x45 * _0x2fe731, 0x36 * _0x2fe731), _0x9b8955['bezierCurveTo'](0x37 * _0x2fe731, 0x39 * _0x2fe731, 0x39 * _0x2fe731, 0x35 * _0x2fe731, 0x36 * _0x2fe731, 0x27 * _0x2fe731), _0x9b8955['bezierCurveTo'](0x2e * _0x2fe731, 0x14 * _0x2fe731, 0x25 * _0x2fe731, 0x3d * _0x2fe731, 0x32 * _0x2fe731, 0x44 * _0x2fe731), _0x9b8955['bezierCurveTo'](0x41 * _0x2fe731, 0x51 * _0x2fe731, 0x3c * _0x2fe731, 0x59 * _0x2fe731, 0x3e * _0x2fe731, 0x66 * _0x2fe731), _0x9b8955['closePath'](), fill_path(_0x9b8955, _0xe8cd0a[0x1], _0xe8cd0a[0x2], 0x6 * _0x2fe731), _0x15069d;
}

function create_present(_0x293343, _0x108df3, _0x406432) {
    var _0x1dcf02 = document['createElement']('canvas'),
        _0x20f528 = _0x1dcf02['getContext']('2d');
    return _0x1dcf02['width'] = 0xa0 * _0x293343, _0x1dcf02['height'] = 0xa1 * _0x293343, _0x20f528['globalAlpha'] = _0x108df3 ? 0.5 : 0x1, _0x20f528['translate'](0x0, 0xa * _0x293343), _0x20f528['save'](), _0x20f528['translate'](80.5 * _0x293343, 0x4e * _0x293343), round_rect(_0x20f528, -71.5 * _0x293343, -0x47 * _0x293343, 0x8f * _0x293343, 0x8f * _0x293343, 0xa * _0x293343), _0x20f528['restore'](), fill_path(_0x20f528, _0x406432[0x0]), _0x20f528['globalAlpha'] = 0x1, _0x20f528['translate'](0x0, -0xa * _0x293343), _0x20f528['save'](), _0x20f528['translate'](80.5 * _0x293343, 0x4e * _0x293343), round_rect(_0x20f528, -71.5 * _0x293343, -0x47 * _0x293343, 0x8f * _0x293343, 0x8f * _0x293343, 0xa * _0x293343), _0x20f528['restore'](), fill_path(_0x20f528, _0x406432[0x1], _0x406432[0x2], 0x6 * _0x293343), _0x20f528['save'](), _0x20f528['translate'](0x50 * _0x293343, 78.5 * _0x293343), round_rect(_0x20f528, -0x11 * _0x293343, -72.5 * _0x293343, 0x22 * _0x293343, 0x91 * _0x293343, 0xa * _0x293343), _0x20f528['restore'](), fill_path(_0x20f528, _0x406432[0x3], _0x406432[0x4], 0x6 * _0x293343), _0x20f528['globalAlpha'] = _0x108df3 ? 0.5 : 0x1, _0x20f528['translate'](0x0, 0xa * _0x293343), _0x20f528['save'](), _0x20f528['translate'](0x50 * _0x293343, 79.5 * _0x293343), round_rect(_0x20f528, -0x49 * _0x293343, -16.5 * _0x293343, 0x91 * _0x293343, 0x22 * _0x293343, 0xa * _0x293343), _0x20f528['restore'](), fill_path(_0x20f528, _0x406432[0x0]), _0x20f528['globalAlpha'] = 0x1, _0x20f528['translate'](0x0, -0xa * _0x293343), _0x20f528['save'](), _0x20f528['translate'](0x50 * _0x293343, 79.5 * _0x293343), round_rect(_0x20f528, -0x49 * _0x293343, -16.5 * _0x293343, 0x91 * _0x293343, 0x22 * _0x293343, 0xa * _0x293343), _0x20f528['restore'](), fill_path(_0x20f528, _0x406432[0x3], _0x406432[0x4], 0x6 * _0x293343), _0x20f528['globalAlpha'] = _0x108df3 ? 0.5 : 0x1, _0x20f528['translate'](0x0, 0xa * _0x293343), _0x20f528['beginPath'](), _0x20f528['lineCap'] = 'round', _0x20f528['lineJoin'] = 'round', _0x20f528['moveTo'](0x4f * _0x293343, 0x47 * _0x293343), _0x20f528['bezierCurveTo'](0x5a * _0x293343, 0x2a * _0x293343, 0x62 * _0x293343, 0x24 * _0x293343, 0x6d * _0x293343, 0x2b * _0x293343), _0x20f528['bezierCurveTo'](0x77 * _0x293343, 0x2f * _0x293343, 0x80 * _0x293343, 0x3e * _0x293343, 0x6b * _0x293343, 0x48 * _0x293343), _0x20f528['bezierCurveTo'](0x60 * _0x293343, 78.5 * _0x293343, 0x60 * _0x293343, 78.5 * _0x293343, 0x55 * _0x293343, 0x55 * _0x293343), _0x20f528['closePath'](), fill_path(_0x20f528, _0x406432[0x0]), _0x20f528['beginPath'](), _0x20f528['lineCap'] = 'round', _0x20f528['lineJoin'] = 'round', _0x20f528['moveTo'](0x54 * _0x293343, 0x4e * _0x293343), _0x20f528['bezierCurveTo'](0x71 * _0x293343, 0x52 * _0x293343, 0x7b * _0x293343, 0x61 * _0x293343, 0x73 * _0x293343, 0x6c * _0x293343), _0x20f528['bezierCurveTo'](0x6e * _0x293343, 0x77 * _0x293343, 0x62 * _0x293343, 0x7c * _0x293343, 0x57 * _0x293343, 0x6b * _0x293343), _0x20f528['bezierCurveTo'](81.5 * _0x293343, 94.5 * _0x293343, 81.5 * _0x293343, 94.5 * _0x293343, 0x4c * _0x293343, 0x52 * _0x293343), _0x20f528['closePath'](), fill_path(_0x20f528, _0x406432[0x0]), _0x20f528['beginPath'](), _0x20f528['lineCap'] = 'round', _0x20f528['lineJoin'] = 'round', _0x20f528['moveTo'](0x50 * _0x293343, 0x49 * _0x293343), _0x20f528['bezierCurveTo'](0x40 * _0x293343, 0x25 * _0x293343, 0x37 * _0x293343, 0x22 * _0x293343, 0x2d * _0x293343, 0x2a * _0x293343), _0x20f528['bezierCurveTo'](0x1e * _0x293343, 0x36 * _0x293343, 0x24 * _0x293343, 0x41 * _0x293343, 0x33 * _0x293343, 0x48 * _0x293343), _0x20f528['bezierCurveTo'](62.5 * _0x293343, 0x4d * _0x293343, 62.5 * _0x293343, 0x4d * _0x293343, 0x4a * _0x293343, 0x52 * _0x293343), _0x20f528['closePath'](), fill_path(_0x20f528, _0x406432[0x0]), _0x20f528['beginPath'](), _0x20f528['lineCap'] = 'round', _0x20f528['lineJoin'] = 'round', _0x20f528['moveTo'](0x52 * _0x293343, 0x53 * _0x293343), _0x20f528['bezierCurveTo'](0x49 * _0x293343, 0x6b * _0x293343, 0x3c * _0x293343, 0x7b * _0x293343, 0x2f * _0x293343, 0x71 * _0x293343), _0x20f528['bezierCurveTo'](0x21 * _0x293343, 0x69 * _0x293343, 0x21 * _0x293343, 0x5c * _0x293343, 0x34 * _0x293343, 0x55 * _0x293343), _0x20f528['bezierCurveTo'](0x4a * _0x293343, 0x49 * _0x293343, 0x4d * _0x293343, 0x4c * _0x293343, 0x4c * _0x293343, 0x4b * _0x293343), _0x20f528['closePath'](), fill_path(_0x20f528, _0x406432[0x0]), _0x20f528['globalAlpha'] = 0x1, _0x20f528['translate'](0x0, -0xa * _0x293343), _0x20f528['beginPath'](), _0x20f528['lineCap'] = 'round', _0x20f528['lineJoin'] = 'round', _0x20f528['moveTo'](0x4f * _0x293343, 0x47 * _0x293343), _0x20f528['bezierCurveTo'](0x5a * _0x293343, 0x2a * _0x293343, 0x62 * _0x293343, 0x24 * _0x293343, 0x6d * _0x293343, 0x2b * _0x293343), _0x20f528['bezierCurveTo'](0x77 * _0x293343, 0x2f * _0x293343, 0x80 * _0x293343, 0x3e * _0x293343, 0x6b * _0x293343, 0x48 * _0x293343), _0x20f528['bezierCurveTo'](0x60 * _0x293343, 78.5 * _0x293343, 0x60 * _0x293343, 78.5 * _0x293343, 0x55 * _0x293343, 0x55 * _0x293343), _0x20f528['closePath'](), fill_path(_0x20f528, _0x406432[0x3], _0x406432[0x4], 0x6 * _0x293343), _0x20f528['beginPath'](), _0x20f528['lineCap'] = 'round', _0x20f528['lineJoin'] = 'round', _0x20f528['moveTo'](0x54 * _0x293343, 0x4e * _0x293343), _0x20f528['bezierCurveTo'](0x71 * _0x293343, 0x52 * _0x293343, 0x7b * _0x293343, 0x61 * _0x293343, 0x73 * _0x293343, 0x6c * _0x293343), _0x20f528['bezierCurveTo'](0x6e * _0x293343, 0x77 * _0x293343, 0x62 * _0x293343, 0x7c * _0x293343, 0x57 * _0x293343, 0x6b * _0x293343), _0x20f528['bezierCurveTo'](81.5 * _0x293343, 94.5 * _0x293343, 81.5 * _0x293343, 94.5 * _0x293343, 0x4c * _0x293343, 0x52 * _0x293343), _0x20f528['closePath'](), fill_path(_0x20f528, _0x406432[0x3], _0x406432[0x4], 0x6 * _0x293343), _0x20f528['beginPath'](), _0x20f528['lineCap'] = 'round', _0x20f528['lineJoin'] = 'round', _0x20f528['moveTo'](0x50 * _0x293343, 0x49 * _0x293343), _0x20f528['bezierCurveTo'](0x40 * _0x293343, 0x25 * _0x293343, 0x37 * _0x293343, 0x22 * _0x293343, 0x2d * _0x293343, 0x2a * _0x293343), _0x20f528['bezierCurveTo'](0x1e * _0x293343, 0x36 * _0x293343, 0x24 * _0x293343, 0x41 * _0x293343, 0x33 * _0x293343, 0x48 * _0x293343), _0x20f528['bezierCurveTo'](62.5 * _0x293343, 0x4d * _0x293343, 62.5 * _0x293343, 0x4d * _0x293343, 0x4a * _0x293343, 0x52 * _0x293343), _0x20f528['closePath'](), fill_path(_0x20f528, _0x406432[0x3], _0x406432[0x4], 0x6 * _0x293343), _0x20f528['beginPath'](), _0x20f528['lineCap'] = 'round', _0x20f528['lineJoin'] = 'round', _0x20f528['moveTo'](0x52 * _0x293343, 0x53 * _0x293343), _0x20f528['bezierCurveTo'](0x49 * _0x293343, 0x6b * _0x293343, 0x3c * _0x293343, 0x7b * _0x293343, 0x2f * _0x293343, 0x71 * _0x293343), _0x20f528['bezierCurveTo'](0x21 * _0x293343, 0x69 * _0x293343, 0x21 * _0x293343, 0x5c * _0x293343, 0x34 * _0x293343, 0x55 * _0x293343), _0x20f528['bezierCurveTo'](0x4a * _0x293343, 0x49 * _0x293343, 0x4d * _0x293343, 0x4c * _0x293343, 0x4c * _0x293343, 0x4b * _0x293343), _0x20f528['closePath'](), fill_path(_0x20f528, _0x406432[0x3], _0x406432[0x4], 0x6 * _0x293343), _0x20f528['globalAlpha'] = _0x108df3 ? 0.5 : 0x1, _0x20f528['translate'](0x0, 0xa * _0x293343), _0x20f528['save'](), _0x20f528['translate'](78.5 * _0x293343, 0x4e * _0x293343), round_rect(_0x20f528, -13.5 * _0x293343, -0xe * _0x293343, 0x1b * _0x293343, 0x1b * _0x293343, 0x6 * _0x293343), _0x20f528['restore'](), fill_path(_0x20f528, _0x406432[0x0]), _0x20f528['globalAlpha'] = 0x1, _0x20f528['translate'](0x0, -0xa * _0x293343), _0x20f528['save'](), _0x20f528['translate'](78.5 * _0x293343, 0x4e * _0x293343), round_rect(_0x20f528, -13.5 * _0x293343, -0xe * _0x293343, 0x1b * _0x293343, 0x1b * _0x293343, 0x6 * _0x293343), _0x20f528['restore'](), fill_path(_0x20f528, _0x406432[0x3], _0x406432[0x4], 0x6 * _0x293343), _0x1dcf02;
}

function create_crown_life(_0x41fda5, _0x7ede8b, _0x2d0946) {
    var _0x1a78bf = document['createElement']('canvas'),
        _0x2077c0 = _0x1a78bf['getContext']('2d');
    return _0x1a78bf['width'] = 0x174 * _0x41fda5, _0x1a78bf['height'] = 0x166 * _0x41fda5, _0x2077c0['translate'](0x0 * _0x41fda5, 0xa * _0x41fda5), _0x2077c0['globalAlpha'] = _0x7ede8b ? 0.2 : 0x1, _0x2077c0['beginPath'](), _0x2077c0['lineCap'] = 'round', _0x2077c0['lineJoin'] = 'round', _0x2077c0['moveTo'](247.00003051757812 * _0x41fda5, 115.76704406738281 * _0x41fda5), _0x2077c0['bezierCurveTo'](305.0000305175781 * _0x41fda5, 124.76704406738281 * _0x41fda5, 335.0000305175781 * _0x41fda5, 112.76704406738281 * _0x41fda5, 359.0000305175781 * _0x41fda5, 93.76704406738281 * _0x41fda5), _0x2077c0['bezierCurveTo'](359.5000305175781 * _0x41fda5, 113.26704406738281 * _0x41fda5, 359.5000305175781 * _0x41fda5, 113.26704406738281 * _0x41fda5, 360.0000305175781 * _0x41fda5, 132.7670440673828 * _0x41fda5), _0x2077c0['bezierCurveTo'](339.0000305175781 * _0x41fda5, 177.7670440673828 * _0x41fda5, 281.0000305175781 * _0x41fda5, 178.7670440673828 * _0x41fda5, 243.00003051757812 * _0x41fda5, 183.7670440673828 * _0x41fda5), _0x2077c0['bezierCurveTo'](214.50003051757812 * _0x41fda5, 214.2670440673828 * _0x41fda5, 214.50003051757812 * _0x41fda5, 214.2670440673828 * _0x41fda5, 186.00003051757812 * _0x41fda5, 244.7670440673828 * _0x41fda5), _0x2077c0['bezierCurveTo'](155.00003051757812 * _0x41fda5, 214.2670440673828 * _0x41fda5, 155.00003051757812 * _0x41fda5, 214.2670440673828 * _0x41fda5, 124.00003051757812 * _0x41fda5, 183.7670440673828 * _0x41fda5), _0x2077c0['bezierCurveTo'](51.000030517578125 * _0x41fda5, 180.7670440673828 * _0x41fda5, 21.000030517578125 * _0x41fda5, 161.7670440673828 * _0x41fda5, 9.000030517578125 * _0x41fda5, 129.7670440673828 * _0x41fda5), _0x2077c0['bezierCurveTo'](8.500030517578125 * _0x41fda5, 110.76704406738281 * _0x41fda5, 8.500030517578125 * _0x41fda5, 110.76704406738281 * _0x41fda5, 8.000030517578125 * _0x41fda5, 91.76704406738281 * _0x41fda5), _0x2077c0['bezierCurveTo'](31.000030517578125 * _0x41fda5, 112.76704406738281 * _0x41fda5, 87.00003051757812 * _0x41fda5, 119.76704406738281 * _0x41fda5, 116.00003051757812 * _0x41fda5, 117.76704406738281 * _0x41fda5), _0x2077c0['bezierCurveTo'](175.00003051757812 * _0x41fda5, 18.767044067382812 * _0x41fda5, 170.00003051757812 * _0x41fda5, 23.767044067382812 * _0x41fda5, 181.00003051757812 * _0x41fda5, 14.767044067382812 * _0x41fda5), _0x2077c0['bezierCurveTo'](199.00003051757812 * _0x41fda5, 34.76704406738281 * _0x41fda5, 203.00003051757812 * _0x41fda5, 54.76704406738281 * _0x41fda5, 247.00003051757812 * _0x41fda5, 115.76704406738281 * _0x41fda5), _0x2077c0['closePath'](), fill_path(_0x2077c0, _0x2d0946[0x0], _0x2d0946[0x0], 0xa * _0x41fda5), _0x2077c0['translate'](0x0 * _0x41fda5, -0xa * _0x41fda5), _0x2077c0['globalAlpha'] = 0x1, _0x2077c0['beginPath'](), _0x2077c0['lineCap'] = 'round', _0x2077c0['lineJoin'] = 'round', _0x2077c0['moveTo'](107.00003051757812 * _0x41fda5, 54.13069152832031 * _0x41fda5), _0x2077c0['bezierCurveTo'](106.50003051757812 * _0x41fda5, 38.63069152832031 * _0x41fda5, 106.50003051757812 * _0x41fda5, 38.63069152832031 * _0x41fda5, 106.00003051757812 * _0x41fda5, 23.130691528320312 * _0x41fda5), _0x2077c0['bezierCurveTo'](121.50003051757812 * _0x41fda5, 38.13069152832031 * _0x41fda5, 121.50003051757812 * _0x41fda5, 38.13069152832031 * _0x41fda5, 137.00003051757812 * _0x41fda5, 53.13069152832031 * _0x41fda5), _0x2077c0['closePath'](), fill_path(_0x2077c0, _0x2d0946[0x2], _0x2d0946[0x3], 0xa * _0x41fda5), _0x2077c0['beginPath'](), _0x2077c0['lineCap'] = 'round', _0x2077c0['lineJoin'] = 'round', _0x2077c0['moveTo'](233.00003051757812 * _0x41fda5, 53.6761474609375 * _0x41fda5), _0x2077c0['bezierCurveTo'](247.00003051757812 * _0x41fda5, 37.1761474609375 * _0x41fda5, 247.00003051757812 * _0x41fda5, 37.1761474609375 * _0x41fda5, 261.0000305175781 * _0x41fda5, 20.6761474609375 * _0x41fda5), _0x2077c0['bezierCurveTo'](261.0000305175781 * _0x41fda5, 36.1761474609375 * _0x41fda5, 261.0000305175781 * _0x41fda5, 36.1761474609375 * _0x41fda5, 261.0000305175781 * _0x41fda5, 51.6761474609375 * _0x41fda5), _0x2077c0['closePath'](), fill_path(_0x2077c0, _0x2d0946[0x2], _0x2d0946[0x3], 0xa * _0x41fda5), _0x2077c0['beginPath'](), _0x2077c0['lineCap'] = 'round', _0x2077c0['lineJoin'] = 'round', _0x2077c0['moveTo'](293.0000305175781 * _0x41fda5, 54.403411865234375 * _0x41fda5), _0x2077c0['bezierCurveTo'](300.0000305175781 * _0x41fda5, 49.903411865234375 * _0x41fda5, 300.0000305175781 * _0x41fda5, 49.903411865234375 * _0x41fda5, 307.0000305175781 * _0x41fda5, 45.403411865234375 * _0x41fda5), _0x2077c0['bezierCurveTo'](307.0000305175781 * _0x41fda5, 49.903411865234375 * _0x41fda5, 307.0000305175781 * _0x41fda5, 49.903411865234375 * _0x41fda5, 307.0000305175781 * _0x41fda5, 54.403411865234375 * _0x41fda5), _0x2077c0['closePath'](), fill_path(_0x2077c0, _0x2d0946[0x2], _0x2d0946[0x3], 0xa * _0x41fda5), _0x2077c0['beginPath'](), _0x2077c0['lineCap'] = 'round', _0x2077c0['lineJoin'] = 'round', _0x2077c0['moveTo'](77.00003051757812 * _0x41fda5, 54.403411865234375 * _0x41fda5), _0x2077c0['bezierCurveTo'](70.00003051757812 * _0x41fda5, 50.403411865234375 * _0x41fda5, 70.00003051757812 * _0x41fda5, 50.403411865234375 * _0x41fda5, 63.000030517578125 * _0x41fda5, 46.403411865234375 * _0x41fda5), _0x2077c0['bezierCurveTo'](62.500030517578125 * _0x41fda5, 50.903411865234375 * _0x41fda5, 62.500030517578125 * _0x41fda5, 50.903411865234375 * _0x41fda5, 62.000030517578125 * _0x41fda5, 55.403411865234375 * _0x41fda5), _0x2077c0['closePath'](), fill_path(_0x2077c0, _0x2d0946[0x2], _0x2d0946[0x3], 0xa * _0x41fda5), _0x2077c0['beginPath'](), _0x2077c0['lineCap'] = 'round', _0x2077c0['lineJoin'] = 'round', _0x2077c0['moveTo'](58.000030517578125 * _0x41fda5, 122.3125 * _0x41fda5), _0x2077c0['bezierCurveTo'](59.500030517578125 * _0x41fda5, 97.3125 * _0x41fda5, 59.500030517578125 * _0x41fda5, 97.3125 * _0x41fda5, 61.000030517578125 * _0x41fda5, 72.3125 * _0x41fda5), _0x2077c0['bezierCurveTo'](91.00003051757812 * _0x41fda5, 89.3125 * _0x41fda5, 91.00003051757812 * _0x41fda5, 89.3125 * _0x41fda5, 121.00003051757812 * _0x41fda5, 106.3125 * _0x41fda5), _0x2077c0['closePath'](), fill_path(_0x2077c0, _0x2d0946[0x1], _0x2d0946[0x1], 0xa * _0x41fda5), _0x2077c0['beginPath'](), _0x2077c0['lineCap'] = 'round', _0x2077c0['lineJoin'] = 'round', _0x2077c0['moveTo'](310.0000305175781 * _0x41fda5, 127.3125 * _0x41fda5), _0x2077c0['bezierCurveTo'](308.0000305175781 * _0x41fda5, 98.3125 * _0x41fda5, 308.0000305175781 * _0x41fda5, 98.3125 * _0x41fda5, 306.0000305175781 * _0x41fda5, 69.3125 * _0x41fda5), _0x2077c0['bezierCurveTo'](274.5000305175781 * _0x41fda5, 88.8125 * _0x41fda5, 274.5000305175781 * _0x41fda5, 88.8125 * _0x41fda5, 243.00003051757812 * _0x41fda5, 108.3125 * _0x41fda5), _0x2077c0['closePath'](), fill_path(_0x2077c0, _0x2d0946[0x1], _0x2d0946[0x1], 0xa * _0x41fda5), _0x2077c0['beginPath'](), _0x2077c0['lineCap'] = 'round', _0x2077c0['lineJoin'] = 'round', _0x2077c0['moveTo'](226.00003051757812 * _0x41fda5, 87.85795593261719 * _0x41fda5), _0x2077c0['bezierCurveTo'](243.50003051757812 * _0x41fda5, 66.85795593261719 * _0x41fda5, 243.50003051757812 * _0x41fda5, 66.85795593261719 * _0x41fda5, 261.0000305175781 * _0x41fda5, 45.85795593261719 * _0x41fda5), _0x2077c0['bezierCurveTo'](265.0000305175781 * _0x41fda5, 83.85795593261719 * _0x41fda5, 265.0000305175781 * _0x41fda5, 83.85795593261719 * _0x41fda5, 269.0000305175781 * _0x41fda5, 121.85795593261719 * _0x41fda5), _0x2077c0['bezierCurveTo'](235.00003051757812 * _0x41fda5, 122.85795593261719 * _0x41fda5, 233.00003051757812 * _0x41fda5, 107.85795593261719 * _0x41fda5, 228.00003051757812 * _0x41fda5, 90.85795593261719 * _0x41fda5), _0x2077c0['closePath'](), fill_path(_0x2077c0, _0x2d0946[0x2], _0x2d0946[0x3], 0xa * _0x41fda5), _0x2077c0['beginPath'](), _0x2077c0['lineCap'] = 'round', _0x2077c0['lineJoin'] = 'round', _0x2077c0['moveTo'](105.00003051757812 * _0x41fda5, 128.8579559326172 * _0x41fda5), _0x2077c0['bezierCurveTo'](104.50003051757812 * _0x41fda5, 87.85795593261719 * _0x41fda5, 104.50003051757812 * _0x41fda5, 87.85795593261719 * _0x41fda5, 104.00003051757812 * _0x41fda5, 46.85795593261719 * _0x41fda5), _0x2077c0['bezierCurveTo'](126.50003051757812 * _0x41fda5, 69.35795593261719 * _0x41fda5, 126.50003051757812 * _0x41fda5, 69.35795593261719 * _0x41fda5, 149.00003051757812 * _0x41fda5, 91.85795593261719 * _0x41fda5), _0x2077c0['bezierCurveTo'](130.00003051757812 * _0x41fda5, 123.85795593261719 * _0x41fda5, 123.00003051757812 * _0x41fda5, 132.8579559326172 * _0x41fda5, 107.00003051757812 * _0x41fda5, 130.8579559326172 * _0x41fda5), _0x2077c0['closePath'](), fill_path(_0x2077c0, _0x2d0946[0x1], _0x2d0946[0x1], 0xa * _0x41fda5), _0x2077c0['beginPath'](), _0x2077c0['lineCap'] = 'round', _0x2077c0['lineJoin'] = 'round', _0x2077c0['moveTo'](59.000030517578125 * _0x41fda5, 121.85795593261719 * _0x41fda5), _0x2077c0['bezierCurveTo'](59.500030517578125 * _0x41fda5, 99.35795593261719 * _0x41fda5, 59.500030517578125 * _0x41fda5, 99.35795593261719 * _0x41fda5, 60.000030517578125 * _0x41fda5, 76.85795593261719 * _0x41fda5), _0x2077c0['bezierCurveTo'](84.00003051757812 * _0x41fda5, 92.35795593261719 * _0x41fda5, 84.00003051757812 * _0x41fda5, 92.35795593261719 * _0x41fda5, 108.00003051757812 * _0x41fda5, 107.85795593261719 * _0x41fda5), _0x2077c0['bezierCurveTo'](106.00003051757812 * _0x41fda5, 148.8579559326172 * _0x41fda5, 86.00003051757812 * _0x41fda5, 148.8579559326172 * _0x41fda5, 62.000030517578125 * _0x41fda5, 123.85795593261719 * _0x41fda5), _0x2077c0['closePath'](), fill_path(_0x2077c0, _0x2d0946[0x2], _0x2d0946[0x3], 0xa * _0x41fda5), _0x2077c0['beginPath'](), _0x2077c0['lineCap'] = 'round', _0x2077c0['lineJoin'] = 'round', _0x2077c0['moveTo'](105.00003051757812 * _0x41fda5, 132.8579559326172 * _0x41fda5), _0x2077c0['bezierCurveTo'](104.50003051757812 * _0x41fda5, 93.35795593261719 * _0x41fda5, 104.50003051757812 * _0x41fda5, 93.35795593261719 * _0x41fda5, 104.00003051757812 * _0x41fda5, 53.85795593261719 * _0x41fda5), _0x2077c0['bezierCurveTo'](126.50003051757812 * _0x41fda5, 75.85795593261719 * _0x41fda5, 126.50003051757812 * _0x41fda5, 75.85795593261719 * _0x41fda5, 149.00003051757812 * _0x41fda5, 97.85795593261719 * _0x41fda5), _0x2077c0['closePath'](), fill_path(_0x2077c0, _0x2d0946[0x2], _0x2d0946[0x3], 0xa * _0x41fda5), _0x2077c0['beginPath'](), _0x2077c0['lineCap'] = 'round', _0x2077c0['lineJoin'] = 'round', _0x2077c0['moveTo'](311.0000305175781 * _0x41fda5, 126.85795593261719 * _0x41fda5), _0x2077c0['bezierCurveTo'](309.0000305175781 * _0x41fda5, 101.35795593261719 * _0x41fda5, 309.0000305175781 * _0x41fda5, 101.35795593261719 * _0x41fda5, 307.0000305175781 * _0x41fda5, 75.85795593261719 * _0x41fda5), _0x2077c0['bezierCurveTo'](271.0000305175781 * _0x41fda5, 96.85795593261719 * _0x41fda5, 271.0000305175781 * _0x41fda5, 96.85795593261719 * _0x41fda5, 235.00003051757812 * _0x41fda5, 117.85795593261719 * _0x41fda5), _0x2077c0['closePath'](), fill_path(_0x2077c0, _0x2d0946[0x2], _0x2d0946[0x3], 0xa * _0x41fda5), _0x2077c0['beginPath'](), _0x2077c0['lineCap'] = 'round', _0x2077c0['lineJoin'] = 'round', _0x2077c0['moveTo'](228.00003051757812 * _0x41fda5, 96.85795593261719 * _0x41fda5), _0x2077c0['bezierCurveTo'](244.50003051757812 * _0x41fda5, 74.85795593261719 * _0x41fda5, 244.50003051757812 * _0x41fda5, 74.85795593261719 * _0x41fda5, 261.0000305175781 * _0x41fda5, 52.85795593261719 * _0x41fda5), _0x2077c0['bezierCurveTo'](265.5000305175781 * _0x41fda5, 89.85795593261719 * _0x41fda5, 265.5000305175781 * _0x41fda5, 89.85795593261719 * _0x41fda5, 270.0000305175781 * _0x41fda5, 126.85795593261719 * _0x41fda5), _0x2077c0['closePath'](), fill_path(_0x2077c0, _0x2d0946[0x2], _0x2d0946[0x3], 0xa * _0x41fda5), _0x2077c0['beginPath'](), _0x2077c0['lineCap'] = 'round', _0x2077c0['lineJoin'] = 'round', _0x2077c0['moveTo'](12.000030517578125 * _0x41fda5, 86.13069152832031 * _0x41fda5), _0x2077c0['bezierCurveTo'](36.000030517578125 * _0x41fda5, 113.13069152832031 * _0x41fda5, 84.00003051757812 * _0x41fda5, 111.13069152832031 * _0x41fda5, 116.00003051757812 * _0x41fda5, 113.13069152832031 * _0x41fda5), _0x2077c0['bezierCurveTo'](164.00003051757812 * _0x41fda5, 23.130691528320312 * _0x41fda5, 172.00003051757812 * _0x41fda5, 18.130691528320312 * _0x41fda5, 181.00003051757812 * _0x41fda5, 9.130691528320312 * _0x41fda5), _0x2077c0['bezierCurveTo'](199.00003051757812 * _0x41fda5, 29.130691528320312 * _0x41fda5, 221.00003051757812 * _0x41fda5, 78.13069152832031 * _0x41fda5, 247.00003051757812 * _0x41fda5, 112.13069152832031 * _0x41fda5), _0x2077c0['bezierCurveTo'](301.0000305175781 * _0x41fda5, 122.13069152832031 * _0x41fda5, 338.0000305175781 * _0x41fda5, 111.13069152832031 * _0x41fda5, 359.0000305175781 * _0x41fda5, 94.13069152832031 * _0x41fda5), _0x2077c0['bezierCurveTo'](359.0000305175781 * _0x41fda5, 113.13069152832031 * _0x41fda5, 358.5000305175781 * _0x41fda5, 105.13069152832031 * _0x41fda5, 358.0000305175781 * _0x41fda5, 116.13069152832031 * _0x41fda5), _0x2077c0['bezierCurveTo'](270.5000305175781 * _0x41fda5, 130.1306915283203 * _0x41fda5, 270.5000305175781 * _0x41fda5, 130.1306915283203 * _0x41fda5, 183.00003051757812 * _0x41fda5, 144.1306915283203 * _0x41fda5), _0x2077c0['bezierCurveTo'](98.00003051757812 * _0x41fda5, 128.6306915283203 * _0x41fda5, 98.00003051757812 * _0x41fda5, 128.6306915283203 * _0x41fda5, 13.000030517578125 * _0x41fda5, 113.13069152832031 * _0x41fda5), _0x2077c0['closePath'](), fill_path(_0x2077c0, _0x2d0946[0x1], _0x2d0946[0x1], 0xa * _0x41fda5), _0x2077c0['beginPath'](), _0x2077c0['lineCap'] = 'round', _0x2077c0['lineJoin'] = 'round', _0x2077c0['moveTo'](247.00003051757812 * _0x41fda5, 115.76704406738281 * _0x41fda5), _0x2077c0['bezierCurveTo'](305.0000305175781 * _0x41fda5, 124.76704406738281 * _0x41fda5, 335.0000305175781 * _0x41fda5, 112.76704406738281 * _0x41fda5, 359.0000305175781 * _0x41fda5, 93.76704406738281 * _0x41fda5), _0x2077c0['bezierCurveTo'](359.5000305175781 * _0x41fda5, 113.26704406738281 * _0x41fda5, 359.5000305175781 * _0x41fda5, 113.26704406738281 * _0x41fda5, 360.0000305175781 * _0x41fda5, 132.7670440673828 * _0x41fda5), _0x2077c0['bezierCurveTo'](339.0000305175781 * _0x41fda5, 177.7670440673828 * _0x41fda5, 281.0000305175781 * _0x41fda5, 178.7670440673828 * _0x41fda5, 243.00003051757812 * _0x41fda5, 183.7670440673828 * _0x41fda5), _0x2077c0['bezierCurveTo'](214.50003051757812 * _0x41fda5, 214.2670440673828 * _0x41fda5, 214.50003051757812 * _0x41fda5, 214.2670440673828 * _0x41fda5, 186.00003051757812 * _0x41fda5, 244.7670440673828 * _0x41fda5), _0x2077c0['bezierCurveTo'](155.00003051757812 * _0x41fda5, 214.2670440673828 * _0x41fda5, 155.00003051757812 * _0x41fda5, 214.2670440673828 * _0x41fda5, 124.00003051757812 * _0x41fda5, 183.7670440673828 * _0x41fda5), _0x2077c0['bezierCurveTo'](51.000030517578125 * _0x41fda5, 180.7670440673828 * _0x41fda5, 21.000030517578125 * _0x41fda5, 161.7670440673828 * _0x41fda5, 9.000030517578125 * _0x41fda5, 129.7670440673828 * _0x41fda5), _0x2077c0['bezierCurveTo'](8.500030517578125 * _0x41fda5, 110.76704406738281 * _0x41fda5, 8.500030517578125 * _0x41fda5, 110.76704406738281 * _0x41fda5, 8.000030517578125 * _0x41fda5, 91.76704406738281 * _0x41fda5), _0x2077c0['bezierCurveTo'](31.000030517578125 * _0x41fda5, 112.76704406738281 * _0x41fda5, 87.00003051757812 * _0x41fda5, 119.76704406738281 * _0x41fda5, 116.00003051757812 * _0x41fda5, 117.76704406738281 * _0x41fda5), _0x2077c0['bezierCurveTo'](175.00003051757812 * _0x41fda5, 18.767044067382812 * _0x41fda5, 170.00003051757812 * _0x41fda5, 23.767044067382812 * _0x41fda5, 181.00003051757812 * _0x41fda5, 14.767044067382812 * _0x41fda5), _0x2077c0['bezierCurveTo'](199.00003051757812 * _0x41fda5, 34.76704406738281 * _0x41fda5, 203.00003051757812 * _0x41fda5, 54.76704406738281 * _0x41fda5, 247.00003051757812 * _0x41fda5, 115.76704406738281 * _0x41fda5), _0x2077c0['closePath'](), fill_path(_0x2077c0, _0x2d0946[0x2], _0x2d0946[0x3], 0xa * _0x41fda5), _0x2077c0['beginPath'](), _0x2077c0['lineCap'] = 'round', _0x2077c0['lineJoin'] = 'round', _0x2077c0['moveTo'](27.000030517578125 * _0x41fda5, 94.76704406738281 * _0x41fda5), _0x2077c0['bezierCurveTo'](11.000030517578125 * _0x41fda5, 81.76704406738281 * _0x41fda5, 31.000030517578125 * _0x41fda5, 72.76704406738281 * _0x41fda5, 44.000030517578125 * _0x41fda5, 59.76704406738281 * _0x41fda5), _0x2077c0['bezierCurveTo'](9.000030517578125 * _0x41fda5, 65.76704406738281 * _0x41fda5, 4.000030517578125 * _0x41fda5, 78.76704406738281 * _0x41fda5, 9.000030517578125 * _0x41fda5, 89.76704406738281 * _0x41fda5), _0x2077c0['closePath'](), fill_path(_0x2077c0, _0x2d0946[0x2], _0x2d0946[0x3], 0xa * _0x41fda5), _0x2077c0['beginPath'](), _0x2077c0['lineCap'] = 'round', _0x2077c0['lineJoin'] = 'round', _0x2077c0['moveTo'](352.0000305175781 * _0x41fda5, 100.76705932617188 * _0x41fda5), _0x2077c0['bezierCurveTo'](362.0000305175781 * _0x41fda5, 92.76705932617188 * _0x41fda5, 352.0000305175781 * _0x41fda5, 84.76705932617188 * _0x41fda5, 340.0000305175781 * _0x41fda5, 68.76705932617188 * _0x41fda5), _0x2077c0['bezierCurveTo'](360.0000305175781 * _0x41fda5, 69.76705932617188 * _0x41fda5, 364.0000305175781 * _0x41fda5, 79.76705932617188 * _0x41fda5, 364.0000305175781 * _0x41fda5, 94.76705932617188 * _0x41fda5), _0x2077c0['closePath'](), fill_path(_0x2077c0, _0x2d0946[0x1], _0x2d0946[0x1], 0x1 * _0x41fda5), _0x2077c0['beginPath'](), _0x2077c0['lineCap'] = 'round', _0x2077c0['lineJoin'] = 'round', _0x2077c0['moveTo'](25.000030517578125 * _0x41fda5, 97.94886779785156 * _0x41fda5), _0x2077c0['bezierCurveTo'](2.000030517578125 * _0x41fda5, 76.94886779785156 * _0x41fda5, 29.000030517578125 * _0x41fda5, 62.94886779785156 * _0x41fda5, 44.000030517578125 * _0x41fda5, 59.94886779785156 * _0x41fda5), _0x2077c0['bezierCurveTo'](8.000030517578125 * _0x41fda5, 59.94886779785156 * _0x41fda5, -0.999969482421875 * _0x41fda5, 81.94886779785156 * _0x41fda5, 4.000030517578125 * _0x41fda5, 92.94886779785156 * _0x41fda5), _0x2077c0['closePath'](), fill_path(_0x2077c0, _0x2d0946[0x3]), _0x2077c0['beginPath'](), _0x2077c0['lineCap'] = 'round', _0x2077c0['lineJoin'] = 'round', _0x2077c0['moveTo'](349.0000305175781 * _0x41fda5, 100.94886779785156 * _0x41fda5), _0x2077c0['bezierCurveTo'](366.0000305175781 * _0x41fda5, 82.94886779785156 * _0x41fda5, 353.0000305175781 * _0x41fda5, 76.94886779785156 * _0x41fda5, 337.0000305175781 * _0x41fda5, 67.94886779785156 * _0x41fda5), _0x2077c0['bezierCurveTo'](366.0000305175781 * _0x41fda5, 69.94886779785156 * _0x41fda5, 366.0000305175781 * _0x41fda5, 83.94886779785156 * _0x41fda5, 363.0000305175781 * _0x41fda5, 101.94886779785156 * _0x41fda5), _0x2077c0['closePath'](), fill_path(_0x2077c0, _0x2d0946[0x2], _0x2d0946[0x3], 0xa * _0x41fda5), circle(_0x2077c0, 46.000030517578125 * _0x41fda5, 137.5852279663086 * _0x41fda5, 9.219544457292887 * _0x41fda5), fill_path(_0x2077c0, _0x2d0946[0x4], _0x2d0946[0x5], 0x1 * _0x41fda5), circle(_0x2077c0, 308.0000305175781 * _0x41fda5, 141.5852279663086 * _0x41fda5, 8.54400374531753 * _0x41fda5), fill_path(_0x2077c0, _0x2d0946[0x4], _0x2d0946[0x5], 0x1 * _0x41fda5), circle(_0x2077c0, 92.00003051757812 * _0x41fda5, 149.58523559570312 * _0x41fda5, 14.866068747318506 * _0x41fda5), fill_path(_0x2077c0, _0x2d0946[0x4], _0x2d0946[0x5], 0x1 * _0x41fda5), circle(_0x2077c0, 262.0000305175781 * _0x41fda5, 148.8579559326172 * _0x41fda5, 15.620499351813308 * _0x41fda5), fill_path(_0x2077c0, _0x2d0946[0x4], _0x2d0946[0x5], 0x1 * _0x41fda5), _0x2077c0['beginPath'](), _0x2077c0['lineCap'] = 'round', _0x2077c0['lineJoin'] = 'round', _0x2077c0['moveTo'](184.00003051757812 * _0x41fda5, 68.85795593261719 * _0x41fda5), _0x2077c0['bezierCurveTo'](203.00003051757812 * _0x41fda5, 108.85795593261719 * _0x41fda5, 203.00003051757812 * _0x41fda5, 108.85795593261719 * _0x41fda5, 222.00003051757812 * _0x41fda5, 148.8579559326172 * _0x41fda5), _0x2077c0['bezierCurveTo'](202.50003051757812 * _0x41fda5, 177.8579559326172 * _0x41fda5, 202.50003051757812 * _0x41fda5, 177.8579559326172 * _0x41fda5, 183.00003051757812 * _0x41fda5, 206.8579559326172 * _0x41fda5), _0x2077c0['bezierCurveTo'](162.00003051757812 * _0x41fda5, 178.8579559326172 * _0x41fda5, 162.00003051757812 * _0x41fda5, 178.8579559326172 * _0x41fda5, 141.00003051757812 * _0x41fda5, 150.8579559326172 * _0x41fda5), _0x2077c0['closePath'](), fill_path(_0x2077c0, _0x2d0946[0x4], _0x2d0946[0x5], 0xa * _0x41fda5), _0x2077c0['beginPath'](), _0x2077c0['lineCap'] = 'round', _0x2077c0['lineJoin'] = 'round', _0x2077c0['moveTo'](183.00003051757812 * _0x41fda5, 104.94886779785156 * _0x41fda5), _0x2077c0['bezierCurveTo'](192.50003051757812 * _0x41fda5, 125.44886779785156 * _0x41fda5, 192.50003051757812 * _0x41fda5, 125.44886779785156 * _0x41fda5, 202.00003051757812 * _0x41fda5, 145.94886779785156 * _0x41fda5), _0x2077c0['bezierCurveTo'](192.00003051757812 * _0x41fda5, 163.94886779785156 * _0x41fda5, 192.00003051757812 * _0x41fda5, 163.94886779785156 * _0x41fda5, 182.00003051757812 * _0x41fda5, 181.94886779785156 * _0x41fda5), _0x2077c0['bezierCurveTo'](172.50003051757812 * _0x41fda5, 164.44886779785156 * _0x41fda5, 172.50003051757812 * _0x41fda5, 164.44886779785156 * _0x41fda5, 163.00003051757812 * _0x41fda5, 146.94886779785156 * _0x41fda5), _0x2077c0['closePath'](), fill_path(_0x2077c0, _0x2d0946[0x6]), _0x1a78bf;
}

function create_background_market() {
    var _0x19b174 = document['createElement']('canvas'),
        _0x5d9653 = _0x19b174['getContext']('2d');
    _0x19b174['width'] = 0x1cc, _0x19b174['height'] = 0xdc, _0x5d9653['fillStyle'] = '#3a2a0d', _0x5d9653['fillRect'](0x0, 0x0, _0x19b174['width'], _0x19b174['height']), _0x5d9653['lineWidth'] = 0x4, _0x5d9653['beginPath'](), _0x5d9653['strokeStyle'] = '#513810';
    for (var _0x111743 = 0x14; _0x111743 < 0xdc; _0x111743 += 0x14) {
        _0x5d9653['moveTo'](0x0, _0x111743), _0x5d9653['lineTo'](0x1cc, _0x111743), _0x5d9653['closePath'](), _0x5d9653['stroke']();
    }
    return _0x19b174;
}

function create_gauges(_0x77f5f3) {
    var _0x5f388a = document['createElement']('canvas'),
        _0x1e0469 = _0x5f388a['getContext']('2d'),
        _0x4561d4 = 0x3b6 * _0x77f5f3,
        _0x15c95f = 0xb4 * _0x77f5f3,
        _0x230160 = 0x32 * _0x77f5f3,
        _0x70f3f1 = 0x14 * _0x77f5f3,
        _0x30af06 = 0xf0 * _0x77f5f3,
        _0x53fd47 = 0x23 * _0x77f5f3,
        _0x102b59 = 0x1 * _0x77f5f3,
        _0x4b9d77 = 0x4 * _0x77f5f3,
        _0x60b9b5 = 0x4 * _0x77f5f3;
    _0x5f388a['width'] = _0x4561d4, _0x5f388a['height'] = _0x230160, _0x1e0469['translate'](0x0, 0xf * _0x77f5f3), round_rect(_0x1e0469, _0x53fd47, _0x102b59, _0x15c95f, _0x70f3f1, _0x4b9d77), fill_path(_0x1e0469, null, '#69A148', _0x60b9b5);
    var _0x5cf1f4 = sprite[SPRITE['HEART_SYMBOL_HUD']];
    _0x1e0469['drawImage'](_0x5cf1f4, 0x11, -0x8), _0x1e0469['translate'](_0x30af06, 0x0), round_rect(_0x1e0469, _0x53fd47, _0x102b59, _0x15c95f, _0x70f3f1, _0x4b9d77), fill_path(_0x1e0469, null, '#AF352A', _0x60b9b5);
    var _0x5cf1f4 = sprite[SPRITE['FOOD_SYMBOL_HUD']];
    _0x1e0469['drawImage'](_0x5cf1f4, 0x11, -0x9), _0x1e0469['translate'](_0x30af06, 0x0), round_rect(_0x1e0469, _0x53fd47, _0x102b59, _0x15c95f, _0x70f3f1, _0x4b9d77), fill_path(_0x1e0469, null, '#669BB1', _0x60b9b5);
    var _0x5cf1f4 = sprite[SPRITE['COLD_SYMBOL_HUD']];
    _0x1e0469['drawImage'](_0x5cf1f4, 0x11, -0x8), _0x1e0469['translate'](_0x30af06, 0x0), round_rect(_0x1e0469, _0x53fd47, _0x102b59, _0x15c95f, _0x70f3f1, _0x4b9d77), fill_path(_0x1e0469, null, '#074A87', _0x60b9b5);
    var _0x5cf1f4 = sprite[SPRITE['WATER_SYMBOL_HUD']];
    return _0x1e0469['drawImage'](_0x5cf1f4, 0x11, -0x8), _0x5f388a;
}

function _load_images() {
    var _0x981d3f = new Date()['getTime']();
    render_cosmetics();

    function _0x1a03f4(_0x693e8a) {
        var _0x3600a2 = 0x0;
        for (var _0x568c44 = 0x0, _0x3551e8 = 0x0; _0x568c44 < _0x693e8a['length']; _0x568c44++) {
            var _0x2d8675 = _0x693e8a['charAt'](_0x568c44);
            if (_0x2d8675 === '_' || _0x568c44 === 0x5) continue;
            if (_0x2d8675 === '1') _0x3600a2 += Math['pow'](0x2, _0x3551e8);
            _0x3551e8++;
        }
        return _0x3600a2;
    }
    sprite[SPRITE['RIVER_WAVE']] = [IMAGES['RIVER_WAVED'], IMAGES['RIVER_WAVEN']], sprite[SPRITE['RIVER_DECO']] = [], sprite[SPRITE['RIVER_DECO']][SPRITE['DAY']] = [], sprite[SPRITE['RIVER_DECO']][SPRITE['DAY']][_0x1a03f4('000_010_000')] = [IMAGES['DAY_RIVER_COMPO21'], IMAGES['DAY_RIVER_COMPO20']], sprite[SPRITE['RIVER_DECO']][SPRITE['DAY']][_0x1a03f4('000_010_010')] = sprite[SPRITE['RIVER_DECO']][SPRITE['DAY']][_0x1a03f4('000_010_000')], sprite[SPRITE['RIVER_DECO']][SPRITE['DAY']][_0x1a03f4('000_011_000')] = sprite[SPRITE['RIVER_DECO']][SPRITE['DAY']][_0x1a03f4('000_010_000')], sprite[SPRITE['RIVER_DECO']][SPRITE['DAY']][_0x1a03f4('000_011_010')] = [IMAGES['DAY_RIVER_COMPO5'], IMAGES['DAY_RIVER_COMPO6'], IMAGES['DAY_RIVER_COMPO20'], IMAGES['DAY_RIVER_COMPO21'], IMAGES['DAY_RIVER_COMPO22'], IMAGES['DAY_RIVER_COMPO23'], IMAGES['DAY_RIVER_COMPO24']], sprite[SPRITE['RIVER_DECO']][SPRITE['DAY']][_0x1a03f4('000_011_011')] = [IMAGES['DAY_RIVER_COMPO4'], IMAGES['DAY_RIVER_COMPO5'], IMAGES['DAY_RIVER_COMPO6'], IMAGES['DAY_RIVER_COMPO20'], IMAGES['DAY_RIVER_COMPO21'], IMAGES['DAY_RIVER_COMPO22'], IMAGES['DAY_RIVER_COMPO23'], IMAGES['DAY_RIVER_COMPO24'], IMAGES['DAY_RIVER_COMPO25']], sprite[SPRITE['RIVER_DECO']][SPRITE['DAY']][_0x1a03f4('000_110_000')] = [IMAGES['DAY_RIVER_COMPO11'], IMAGES['DAY_RIVER_COMPO20']], sprite[SPRITE['RIVER_DECO']][SPRITE['DAY']][_0x1a03f4('000_110_010')] = [IMAGES['DAY_RIVER_COMPO7'], IMAGES['DAY_RIVER_COMPO11'], IMAGES['DAY_RIVER_COMPO17'], IMAGES['DAY_RIVER_COMPO20'], IMAGES['DAY_RIVER_COMPO21'], IMAGES['DAY_RIVER_COMPO25'], IMAGES['DAY_RIVER_COMPO26'], IMAGES['DAY_RIVER_COMPO27']], sprite[SPRITE['RIVER_DECO']][SPRITE['DAY']][_0x1a03f4('000_110_110')] = [IMAGES['DAY_RIVER_COMPO7'], IMAGES['DAY_RIVER_COMPO8'], IMAGES['DAY_RIVER_COMPO9'], IMAGES['DAY_RIVER_COMPO11'], IMAGES['DAY_RIVER_COMPO17'], IMAGES['DAY_RIVER_COMPO20'], IMAGES['DAY_RIVER_COMPO25'], IMAGES['DAY_RIVER_COMPO26'], IMAGES['DAY_RIVER_COMPO27']], sprite[SPRITE['RIVER_DECO']][SPRITE['DAY']][_0x1a03f4('000_111_000')] = [IMAGES['DAY_RIVER_COMPO11'], IMAGES['DAY_RIVER_COMPO17'], IMAGES['DAY_RIVER_COMPO18'], IMAGES['DAY_RIVER_COMPO19']], sprite[SPRITE['RIVER_DECO']][SPRITE['DAY']][_0x1a03f4('000_111_111')] = [IMAGES['DAY_RIVER_COMPO11'], IMAGES['DAY_RIVER_COMPO9'], IMAGES['DAY_RIVER_COMPO7'], IMAGES['DAY_RIVER_COMPO6'], IMAGES['DAY_RIVER_COMPO5'], IMAGES['DAY_RIVER_COMPO4'], IMAGES['DAY_RIVER_COMPO13']], sprite[SPRITE['RIVER_DECO']][SPRITE['DAY']][_0x1a03f4('010_010_000')] = [IMAGES['DAY_RIVER_COMPO20']], sprite[SPRITE['RIVER_DECO']][SPRITE['DAY']][_0x1a03f4('010_010_010')] = [IMAGES['DAY_RIVER_COMPO16'], IMAGES['DAY_RIVER_COMPO20'], IMAGES['DAY_RIVER_COMPO21']], sprite[SPRITE['RIVER_DECO']][SPRITE['DAY']][_0x1a03f4('010_011_000')] = [IMAGES['DAY_RIVER_COMPO3'], IMAGES['DAY_RIVER_COMPO20'], IMAGES['DAY_RIVER_COMPO21'], IMAGES['DAY_RIVER_COMPO26']], sprite[SPRITE['RIVER_DECO']][SPRITE['DAY']][_0x1a03f4('010_110_000')] = [IMAGES['DAY_RIVER_COMPO11'], IMAGES['DAY_RIVER_COMPO17'], IMAGES['DAY_RIVER_COMPO20'], IMAGES['DAY_RIVER_COMPO26'], IMAGES['DAY_RIVER_COMPO28']], sprite[SPRITE['RIVER_DECO']][SPRITE['DAY']][_0x1a03f4('010_110_110')] = [IMAGES['DAY_RIVER_COMPO2'], IMAGES['DAY_RIVER_COMPO3'], IMAGES['DAY_RIVER_COMPO5'], IMAGES['DAY_RIVER_COMPO6'], IMAGES['DAY_RIVER_COMPO7'], IMAGES['DAY_RIVER_COMPO9'], IMAGES['DAY_RIVER_COMPO11'], IMAGES['DAY_RIVER_COMPO13'], IMAGES['DAY_RIVER_COMPO15'], IMAGES['DAY_RIVER_COMPO16'], IMAGES['DAY_RIVER_COMPO17'], IMAGES['DAY_RIVER_COMPO18'], IMAGES['DAY_RIVER_COMPO19'], IMAGES['DAY_RIVER_COMPO20'], IMAGES['DAY_RIVER_COMPO21'], IMAGES['DAY_RIVER_COMPO22'], IMAGES['DAY_RIVER_COMPO23'], IMAGES['DAY_RIVER_COMPO24'], IMAGES['DAY_RIVER_COMPO25'], IMAGES['DAY_RIVER_COMPO26'], IMAGES['DAY_RIVER_COMPO28']], sprite[SPRITE['RIVER_DECO']][SPRITE['DAY']][_0x1a03f4('010_011_010')] = sprite[SPRITE['RIVER_DECO']][SPRITE['DAY']][_0x1a03f4('010_110_110')], sprite[SPRITE['RIVER_DECO']][SPRITE['DAY']][_0x1a03f4('010_011_011')] = sprite[SPRITE['RIVER_DECO']][SPRITE['DAY']][_0x1a03f4('010_110_110')], sprite[SPRITE['RIVER_DECO']][SPRITE['DAY']][_0x1a03f4('000_111_011')] = sprite[SPRITE['RIVER_DECO']][SPRITE['DAY']][_0x1a03f4('010_110_110')], sprite[SPRITE['RIVER_DECO']][SPRITE['DAY']][_0x1a03f4('010_110_010')] = sprite[SPRITE['RIVER_DECO']][SPRITE['DAY']][_0x1a03f4('010_110_110')], sprite[SPRITE['RIVER_DECO']][SPRITE['DAY']][_0x1a03f4('010_111_000')] = sprite[SPRITE['RIVER_DECO']][SPRITE['DAY']][_0x1a03f4('010_110_110')], sprite[SPRITE['RIVER_DECO']][SPRITE['DAY']][_0x1a03f4('010_111_010')] = sprite[SPRITE['RIVER_DECO']][SPRITE['DAY']][_0x1a03f4('010_110_110')], sprite[SPRITE['RIVER_DECO']][SPRITE['DAY']][_0x1a03f4('010_111_011')] = sprite[SPRITE['RIVER_DECO']][SPRITE['DAY']][_0x1a03f4('010_110_110')], sprite[SPRITE['RIVER_DECO']][SPRITE['DAY']][_0x1a03f4('010_111_110')] = sprite[SPRITE['RIVER_DECO']][SPRITE['DAY']][_0x1a03f4('010_110_110')], sprite[SPRITE['RIVER_DECO']][SPRITE['DAY']][_0x1a03f4('010_111_111')] = sprite[SPRITE['RIVER_DECO']][SPRITE['DAY']][_0x1a03f4('010_110_110')], sprite[SPRITE['RIVER_DECO']][SPRITE['DAY']][_0x1a03f4('000_111_110')] = sprite[SPRITE['RIVER_DECO']][SPRITE['DAY']][_0x1a03f4('010_110_110')], sprite[SPRITE['RIVER_DECO']][SPRITE['DAY']][_0x1a03f4('000_111_010')] = sprite[SPRITE['RIVER_DECO']][SPRITE['DAY']][_0x1a03f4('010_110_110')], sprite[SPRITE['RIVER_DECO']][SPRITE['DAY']][_0x1a03f4('011_011_000')] = [IMAGES['DAY_RIVER_COMPO1'], IMAGES['DAY_RIVER_COMPO2'], IMAGES['DAY_RIVER_COMPO3'], IMAGES['DAY_RIVER_COMPO20'], IMAGES['DAY_RIVER_COMPO21'], IMAGES['DAY_RIVER_COMPO26']], sprite[SPRITE['RIVER_DECO']][SPRITE['DAY']][_0x1a03f4('011_011_010')] = [IMAGES['DAY_RIVER_COMPO1'], IMAGES['DAY_RIVER_COMPO2'], IMAGES['DAY_RIVER_COMPO3'], IMAGES['DAY_RIVER_COMPO11'], IMAGES['DAY_RIVER_COMPO17'], IMAGES['DAY_RIVER_COMPO18'], IMAGES['DAY_RIVER_COMPO19'], IMAGES['DAY_RIVER_COMPO20'], IMAGES['DAY_RIVER_COMPO21'], IMAGES['DAY_RIVER_COMPO26'], IMAGES['DAY_RIVER_COMPO28']], sprite[SPRITE['RIVER_DECO']][SPRITE['DAY']][_0x1a03f4('011_011_011')] = [IMAGES['DAY_RIVER_COMPO6'], IMAGES['DAY_RIVER_COMPO5'], IMAGES['DAY_RIVER_COMPO4'], IMAGES['DAY_RIVER_COMPO3'], IMAGES['DAY_RIVER_COMPO2'], IMAGES['DAY_RIVER_COMPO1'], IMAGES['DAY_RIVER_COMPO15']], sprite[SPRITE['RIVER_DECO']][SPRITE['DAY']][_0x1a03f4('011_111_000')] = sprite[SPRITE['RIVER_DECO']][SPRITE['DAY']][_0x1a03f4('011_011_010')], sprite[SPRITE['RIVER_DECO']][SPRITE['DAY']][_0x1a03f4('011_111_010')] = [IMAGES['DAY_RIVER_COMPO1'], IMAGES['DAY_RIVER_COMPO2'], IMAGES['DAY_RIVER_COMPO3'], IMAGES['DAY_RIVER_COMPO5'], IMAGES['DAY_RIVER_COMPO6'], IMAGES['DAY_RIVER_COMPO7'], IMAGES['DAY_RIVER_COMPO11'], IMAGES['DAY_RIVER_COMPO13'], IMAGES['DAY_RIVER_COMPO15'], IMAGES['DAY_RIVER_COMPO16'], IMAGES['DAY_RIVER_COMPO17'], IMAGES['DAY_RIVER_COMPO18'], IMAGES['DAY_RIVER_COMPO19'], IMAGES['DAY_RIVER_COMPO20'], IMAGES['DAY_RIVER_COMPO21'], IMAGES['DAY_RIVER_COMPO22'], IMAGES['DAY_RIVER_COMPO23'], IMAGES['DAY_RIVER_COMPO24'], IMAGES['DAY_RIVER_COMPO25'], IMAGES['DAY_RIVER_COMPO26'], IMAGES['DAY_RIVER_COMPO28']], sprite[SPRITE['RIVER_DECO']][SPRITE['DAY']][_0x1a03f4('011_111_011')] = sprite[SPRITE['RIVER_DECO']][SPRITE['DAY']][_0x1a03f4('011_111_010')], sprite[SPRITE['RIVER_DECO']][SPRITE['DAY']][_0x1a03f4('011_111_110')] = sprite[SPRITE['RIVER_DECO']][SPRITE['DAY']][_0x1a03f4('011_111_010')], sprite[SPRITE['RIVER_DECO']][SPRITE['DAY']][_0x1a03f4('011_111_111')] = [IMAGES['DAY_RIVER_COMPO1'], IMAGES['DAY_RIVER_COMPO2'], IMAGES['DAY_RIVER_COMPO3'], IMAGES['DAY_RIVER_COMPO4'], IMAGES['DAY_RIVER_COMPO5'], IMAGES['DAY_RIVER_COMPO6'], IMAGES['DAY_RIVER_COMPO7'], IMAGES['DAY_RIVER_COMPO9'], IMAGES['DAY_RIVER_COMPO11'], IMAGES['DAY_RIVER_COMPO13'], IMAGES['DAY_RIVER_COMPO15'], IMAGES['DAY_RIVER_COMPO16'], IMAGES['DAY_RIVER_COMPO17'], IMAGES['DAY_RIVER_COMPO18'], IMAGES['DAY_RIVER_COMPO19'], IMAGES['DAY_RIVER_COMPO20'], IMAGES['DAY_RIVER_COMPO21'], IMAGES['DAY_RIVER_COMPO22'], IMAGES['DAY_RIVER_COMPO23'], IMAGES['DAY_RIVER_COMPO24'], IMAGES['DAY_RIVER_COMPO25'], IMAGES['DAY_RIVER_COMPO26'], IMAGES['DAY_RIVER_COMPO28']], sprite[SPRITE['RIVER_DECO']][SPRITE['DAY']][_0x1a03f4('110_110_000')] = [IMAGES['DAY_RIVER_COMPO10'], IMAGES['DAY_RIVER_COMPO11'], IMAGES['DAY_RIVER_COMPO12'], IMAGES['DAY_RIVER_COMPO17'], IMAGES['DAY_RIVER_COMPO20'], IMAGES['DAY_RIVER_COMPO28']], sprite[SPRITE['RIVER_DECO']][SPRITE['DAY']][_0x1a03f4('110_110_010')] = [IMAGES['DAY_RIVER_COMPO7'], IMAGES['DAY_RIVER_COMPO10'], IMAGES['DAY_RIVER_COMPO11'], IMAGES['DAY_RIVER_COMPO16'], IMAGES['DAY_RIVER_COMPO17'], IMAGES['DAY_RIVER_COMPO20'], IMAGES['DAY_RIVER_COMPO25'], IMAGES['DAY_RIVER_COMPO28']], sprite[SPRITE['RIVER_DECO']][SPRITE['DAY']][_0x1a03f4('110_110_110')] = [IMAGES['DAY_RIVER_COMPO7'], IMAGES['DAY_RIVER_COMPO9'], IMAGES['DAY_RIVER_COMPO10'], IMAGES['DAY_RIVER_COMPO11'], IMAGES['DAY_RIVER_COMPO16'], IMAGES['DAY_RIVER_COMPO17'], IMAGES['DAY_RIVER_COMPO20'], IMAGES['DAY_RIVER_COMPO25'], IMAGES['DAY_RIVER_COMPO28']], sprite[SPRITE['RIVER_DECO']][SPRITE['DAY']][_0x1a03f4('110_111_000')] = [IMAGES['DAY_RIVER_COMPO2'], IMAGES['DAY_RIVER_COMPO3'], IMAGES['DAY_RIVER_COMPO10'], IMAGES['DAY_RIVER_COMPO11'], IMAGES['DAY_RIVER_COMPO12'], IMAGES['DAY_RIVER_COMPO14'], IMAGES['DAY_RIVER_COMPO17'], IMAGES['DAY_RIVER_COMPO18'], IMAGES['DAY_RIVER_COMPO19'], IMAGES['DAY_RIVER_COMPO20'], IMAGES['DAY_RIVER_COMPO21'], IMAGES['DAY_RIVER_COMPO26'], IMAGES['DAY_RIVER_COMPO28']], sprite[SPRITE['RIVER_DECO']][SPRITE['DAY']][_0x1a03f4('110_111_110')] = [IMAGES['DAY_RIVER_COMPO2'], IMAGES['DAY_RIVER_COMPO3'], IMAGES['DAY_RIVER_COMPO5'], IMAGES['DAY_RIVER_COMPO6'], IMAGES['DAY_RIVER_COMPO7'], IMAGES['DAY_RIVER_COMPO9'], IMAGES['DAY_RIVER_COMPO10'], IMAGES['DAY_RIVER_COMPO11'], IMAGES['DAY_RIVER_COMPO13'], IMAGES['DAY_RIVER_COMPO14'], IMAGES['DAY_RIVER_COMPO15'], IMAGES['DAY_RIVER_COMPO16'], IMAGES['DAY_RIVER_COMPO17'], IMAGES['DAY_RIVER_COMPO18'], IMAGES['DAY_RIVER_COMPO19'], IMAGES['DAY_RIVER_COMPO20'], IMAGES['DAY_RIVER_COMPO21'], IMAGES['DAY_RIVER_COMPO22'], IMAGES['DAY_RIVER_COMPO23'], IMAGES['DAY_RIVER_COMPO24'], IMAGES['DAY_RIVER_COMPO25'], IMAGES['DAY_RIVER_COMPO26'], IMAGES['DAY_RIVER_COMPO28']], sprite[SPRITE['RIVER_DECO']][SPRITE['DAY']][_0x1a03f4('110_111_111')] = sprite[SPRITE['RIVER_DECO']][SPRITE['DAY']][_0x1a03f4('110_111_110')], sprite[SPRITE['RIVER_DECO']][SPRITE['DAY']][_0x1a03f4('110_111_011')] = sprite[SPRITE['RIVER_DECO']][SPRITE['DAY']][_0x1a03f4('110_111_110')], sprite[SPRITE['RIVER_DECO']][SPRITE['DAY']][_0x1a03f4('110_111_010')] = sprite[SPRITE['RIVER_DECO']][SPRITE['DAY']][_0x1a03f4('110_111_110')], sprite[SPRITE['RIVER_DECO']][SPRITE['DAY']][_0x1a03f4('111_111_110')] = [IMAGES['DAY_RIVER_COMPO28'], IMAGES['DAY_RIVER_COMPO26'], IMAGES['DAY_RIVER_COMPO25'], IMAGES['DAY_RIVER_COMPO24'], IMAGES['DAY_RIVER_COMPO23'], IMAGES['DAY_RIVER_COMPO22'], IMAGES['DAY_RIVER_COMPO21'], IMAGES['DAY_RIVER_COMPO20'], IMAGES['DAY_RIVER_COMPO19'], IMAGES['DAY_RIVER_COMPO18'], IMAGES['DAY_RIVER_COMPO17'], IMAGES['DAY_RIVER_COMPO16'], IMAGES['DAY_RIVER_COMPO15'], IMAGES['DAY_RIVER_COMPO14'], IMAGES['DAY_RIVER_COMPO13'], IMAGES['DAY_RIVER_COMPO11'], IMAGES['DAY_RIVER_COMPO10'], IMAGES['DAY_RIVER_COMPO7'], IMAGES['DAY_RIVER_COMPO6'], IMAGES['DAY_RIVER_COMPO5'], IMAGES['DAY_RIVER_COMPO3'], IMAGES['DAY_RIVER_COMPO2'], IMAGES['DAY_RIVER_COMPO1']], sprite[SPRITE['RIVER_DECO']][SPRITE['DAY']][_0x1a03f4('111_111_011')] = sprite[SPRITE['RIVER_DECO']][SPRITE['DAY']][_0x1a03f4('111_111_110')], sprite[SPRITE['RIVER_DECO']][SPRITE['DAY']][_0x1a03f4('111_111_000')] = [IMAGES['DAY_RIVER_COMPO12'], IMAGES['DAY_RIVER_COMPO11'], IMAGES['DAY_RIVER_COMPO10'], IMAGES['DAY_RIVER_COMPO3'], IMAGES['DAY_RIVER_COMPO2'], IMAGES['DAY_RIVER_COMPO1'], IMAGES['DAY_RIVER_COMPO14']], sprite[SPRITE['RIVER_DECO']][SPRITE['DAY']][_0x1a03f4('111_111_111')] = [IMAGES['DAY_RIVER_COMPO1'], IMAGES['DAY_RIVER_COMPO2'], IMAGES['DAY_RIVER_COMPO3'], IMAGES['DAY_RIVER_COMPO4'], IMAGES['DAY_RIVER_COMPO5'], IMAGES['DAY_RIVER_COMPO6'], IMAGES['DAY_RIVER_COMPO7'], IMAGES['DAY_RIVER_COMPO9'], IMAGES['DAY_RIVER_COMPO10'], IMAGES['DAY_RIVER_COMPO11'], IMAGES['DAY_RIVER_COMPO13'], IMAGES['DAY_RIVER_COMPO15'], IMAGES['DAY_RIVER_COMPO16'], IMAGES['DAY_RIVER_COMPO17'], IMAGES['DAY_RIVER_COMPO18'], IMAGES['DAY_RIVER_COMPO19'], IMAGES['DAY_RIVER_COMPO20'], IMAGES['DAY_RIVER_COMPO21'], IMAGES['DAY_RIVER_COMPO22'], IMAGES['DAY_RIVER_COMPO23'], IMAGES['DAY_RIVER_COMPO24'], IMAGES['DAY_RIVER_COMPO25'], IMAGES['DAY_RIVER_COMPO26'], IMAGES['DAY_RIVER_COMPO28']], sprite[SPRITE['RIVER_DECO']][SPRITE['DAY']][_0x1a03f4('111_111_010')] = sprite[SPRITE['RIVER_DECO']][SPRITE['DAY']][_0x1a03f4('111_111_110')], sprite[SPRITE['RIVER_DECO']][SPRITE['NIGHT']] = [], sprite[SPRITE['RIVER_DECO']][SPRITE['NIGHT']][_0x1a03f4('000_010_000')] = [IMAGES['NIGHT_RIVER_COMPO21'], IMAGES['NIGHT_RIVER_COMPO20']], sprite[SPRITE['RIVER_DECO']][SPRITE['NIGHT']][_0x1a03f4('000_010_010')] = sprite[SPRITE['RIVER_DECO']][SPRITE['NIGHT']][_0x1a03f4('000_010_000')], sprite[SPRITE['RIVER_DECO']][SPRITE['NIGHT']][_0x1a03f4('000_011_000')] = sprite[SPRITE['RIVER_DECO']][SPRITE['NIGHT']][_0x1a03f4('000_010_000')], sprite[SPRITE['RIVER_DECO']][SPRITE['NIGHT']][_0x1a03f4('000_011_010')] = [IMAGES['NIGHT_RIVER_COMPO5'], IMAGES['NIGHT_RIVER_COMPO6'], IMAGES['NIGHT_RIVER_COMPO20'], IMAGES['NIGHT_RIVER_COMPO21'], IMAGES['NIGHT_RIVER_COMPO22'], IMAGES['NIGHT_RIVER_COMPO23'], IMAGES['NIGHT_RIVER_COMPO24']], sprite[SPRITE['RIVER_DECO']][SPRITE['NIGHT']][_0x1a03f4('000_011_011')] = [IMAGES['NIGHT_RIVER_COMPO4'], IMAGES['NIGHT_RIVER_COMPO5'], IMAGES['NIGHT_RIVER_COMPO6'], IMAGES['NIGHT_RIVER_COMPO20'], IMAGES['NIGHT_RIVER_COMPO21'], IMAGES['NIGHT_RIVER_COMPO22'], IMAGES['NIGHT_RIVER_COMPO23'], IMAGES['NIGHT_RIVER_COMPO24'], IMAGES['NIGHT_RIVER_COMPO25']], sprite[SPRITE['RIVER_DECO']][SPRITE['NIGHT']][_0x1a03f4('000_110_000')] = [IMAGES['NIGHT_RIVER_COMPO11'], IMAGES['NIGHT_RIVER_COMPO20']], sprite[SPRITE['RIVER_DECO']][SPRITE['NIGHT']][_0x1a03f4('000_110_010')] = [IMAGES['NIGHT_RIVER_COMPO7'], IMAGES['NIGHT_RIVER_COMPO11'], IMAGES['NIGHT_RIVER_COMPO17'], IMAGES['NIGHT_RIVER_COMPO20'], IMAGES['NIGHT_RIVER_COMPO21'], IMAGES['NIGHT_RIVER_COMPO25'], IMAGES['NIGHT_RIVER_COMPO26'], IMAGES['NIGHT_RIVER_COMPO27']], sprite[SPRITE['RIVER_DECO']][SPRITE['NIGHT']][_0x1a03f4('000_110_110')] = [IMAGES['NIGHT_RIVER_COMPO7'], IMAGES['NIGHT_RIVER_COMPO8'], IMAGES['NIGHT_RIVER_COMPO9'], IMAGES['NIGHT_RIVER_COMPO11'], IMAGES['NIGHT_RIVER_COMPO17'], IMAGES['NIGHT_RIVER_COMPO20'], IMAGES['NIGHT_RIVER_COMPO25'], IMAGES['NIGHT_RIVER_COMPO26'], IMAGES['NIGHT_RIVER_COMPO27']], sprite[SPRITE['RIVER_DECO']][SPRITE['NIGHT']][_0x1a03f4('000_111_000')] = [IMAGES['NIGHT_RIVER_COMPO11'], IMAGES['NIGHT_RIVER_COMPO17'], IMAGES['NIGHT_RIVER_COMPO18'], IMAGES['NIGHT_RIVER_COMPO19']], sprite[SPRITE['RIVER_DECO']][SPRITE['NIGHT']][_0x1a03f4('000_111_111')] = [IMAGES['NIGHT_RIVER_COMPO11'], IMAGES['NIGHT_RIVER_COMPO9'], IMAGES['NIGHT_RIVER_COMPO7'], IMAGES['NIGHT_RIVER_COMPO6'], IMAGES['NIGHT_RIVER_COMPO5'], IMAGES['NIGHT_RIVER_COMPO4'], IMAGES['NIGHT_RIVER_COMPO13']], sprite[SPRITE['RIVER_DECO']][SPRITE['NIGHT']][_0x1a03f4('010_010_000')] = [IMAGES['NIGHT_RIVER_COMPO20']], sprite[SPRITE['RIVER_DECO']][SPRITE['NIGHT']][_0x1a03f4('010_010_010')] = [IMAGES['NIGHT_RIVER_COMPO16'], IMAGES['NIGHT_RIVER_COMPO20'], IMAGES['NIGHT_RIVER_COMPO21']], sprite[SPRITE['RIVER_DECO']][SPRITE['NIGHT']][_0x1a03f4('010_011_000')] = [IMAGES['NIGHT_RIVER_COMPO3'], IMAGES['NIGHT_RIVER_COMPO20'], IMAGES['NIGHT_RIVER_COMPO21'], IMAGES['NIGHT_RIVER_COMPO26']], sprite[SPRITE['RIVER_DECO']][SPRITE['NIGHT']][_0x1a03f4('010_110_000')] = [IMAGES['NIGHT_RIVER_COMPO11'], IMAGES['NIGHT_RIVER_COMPO17'], IMAGES['NIGHT_RIVER_COMPO20'], IMAGES['NIGHT_RIVER_COMPO26'], IMAGES['NIGHT_RIVER_COMPO28']], sprite[SPRITE['RIVER_DECO']][SPRITE['NIGHT']][_0x1a03f4('010_110_110')] = [IMAGES['NIGHT_RIVER_COMPO2'], IMAGES['NIGHT_RIVER_COMPO3'], IMAGES['NIGHT_RIVER_COMPO5'], IMAGES['NIGHT_RIVER_COMPO6'], IMAGES['NIGHT_RIVER_COMPO7'], IMAGES['NIGHT_RIVER_COMPO9'], IMAGES['NIGHT_RIVER_COMPO11'], IMAGES['NIGHT_RIVER_COMPO13'], IMAGES['NIGHT_RIVER_COMPO15'], IMAGES['NIGHT_RIVER_COMPO16'], IMAGES['NIGHT_RIVER_COMPO17'], IMAGES['NIGHT_RIVER_COMPO18'], IMAGES['NIGHT_RIVER_COMPO19'], IMAGES['NIGHT_RIVER_COMPO20'], IMAGES['NIGHT_RIVER_COMPO21'], IMAGES['NIGHT_RIVER_COMPO22'], IMAGES['NIGHT_RIVER_COMPO23'], IMAGES['NIGHT_RIVER_COMPO24'], IMAGES['NIGHT_RIVER_COMPO25'], IMAGES['NIGHT_RIVER_COMPO26'], IMAGES['NIGHT_RIVER_COMPO28']], sprite[SPRITE['RIVER_DECO']][SPRITE['NIGHT']][_0x1a03f4('010_011_010')] = sprite[SPRITE['RIVER_DECO']][SPRITE['NIGHT']][_0x1a03f4('010_110_110')], sprite[SPRITE['RIVER_DECO']][SPRITE['NIGHT']][_0x1a03f4('010_011_011')] = sprite[SPRITE['RIVER_DECO']][SPRITE['NIGHT']][_0x1a03f4('010_110_110')], sprite[SPRITE['RIVER_DECO']][SPRITE['NIGHT']][_0x1a03f4('000_111_011')] = sprite[SPRITE['RIVER_DECO']][SPRITE['NIGHT']][_0x1a03f4('010_110_110')], sprite[SPRITE['RIVER_DECO']][SPRITE['NIGHT']][_0x1a03f4('010_110_010')] = sprite[SPRITE['RIVER_DECO']][SPRITE['NIGHT']][_0x1a03f4('010_110_110')], sprite[SPRITE['RIVER_DECO']][SPRITE['NIGHT']][_0x1a03f4('010_111_000')] = sprite[SPRITE['RIVER_DECO']][SPRITE['NIGHT']][_0x1a03f4('010_110_110')], sprite[SPRITE['RIVER_DECO']][SPRITE['NIGHT']][_0x1a03f4('010_111_010')] = sprite[SPRITE['RIVER_DECO']][SPRITE['NIGHT']][_0x1a03f4('010_110_110')], sprite[SPRITE['RIVER_DECO']][SPRITE['NIGHT']][_0x1a03f4('010_111_011')] = sprite[SPRITE['RIVER_DECO']][SPRITE['NIGHT']][_0x1a03f4('010_110_110')], sprite[SPRITE['RIVER_DECO']][SPRITE['NIGHT']][_0x1a03f4('010_111_110')] = sprite[SPRITE['RIVER_DECO']][SPRITE['NIGHT']][_0x1a03f4('010_110_110')], sprite[SPRITE['RIVER_DECO']][SPRITE['NIGHT']][_0x1a03f4('010_111_111')] = sprite[SPRITE['RIVER_DECO']][SPRITE['NIGHT']][_0x1a03f4('010_110_110')], sprite[SPRITE['RIVER_DECO']][SPRITE['NIGHT']][_0x1a03f4('000_111_110')] = sprite[SPRITE['RIVER_DECO']][SPRITE['NIGHT']][_0x1a03f4('010_110_110')], sprite[SPRITE['RIVER_DECO']][SPRITE['NIGHT']][_0x1a03f4('000_111_010')] = sprite[SPRITE['RIVER_DECO']][SPRITE['NIGHT']][_0x1a03f4('010_110_110')], sprite[SPRITE['RIVER_DECO']][SPRITE['NIGHT']][_0x1a03f4('011_011_000')] = [IMAGES['NIGHT_RIVER_COMPO1'], IMAGES['NIGHT_RIVER_COMPO2'], IMAGES['NIGHT_RIVER_COMPO3'], IMAGES['NIGHT_RIVER_COMPO20'], IMAGES['NIGHT_RIVER_COMPO21'], IMAGES['NIGHT_RIVER_COMPO26']], sprite[SPRITE['RIVER_DECO']][SPRITE['NIGHT']][_0x1a03f4('011_011_010')] = [IMAGES['NIGHT_RIVER_COMPO1'], IMAGES['NIGHT_RIVER_COMPO2'], IMAGES['NIGHT_RIVER_COMPO3'], IMAGES['NIGHT_RIVER_COMPO11'], IMAGES['NIGHT_RIVER_COMPO17'], IMAGES['NIGHT_RIVER_COMPO18'], IMAGES['NIGHT_RIVER_COMPO19'], IMAGES['NIGHT_RIVER_COMPO20'], IMAGES['NIGHT_RIVER_COMPO21'], IMAGES['NIGHT_RIVER_COMPO26'], IMAGES['NIGHT_RIVER_COMPO28']], sprite[SPRITE['RIVER_DECO']][SPRITE['NIGHT']][_0x1a03f4('011_011_011')] = [IMAGES['NIGHT_RIVER_COMPO6'], IMAGES['NIGHT_RIVER_COMPO5'], IMAGES['NIGHT_RIVER_COMPO4'], IMAGES['NIGHT_RIVER_COMPO3'], IMAGES['NIGHT_RIVER_COMPO2'], IMAGES['NIGHT_RIVER_COMPO1'], IMAGES['NIGHT_RIVER_COMPO15']], sprite[SPRITE['RIVER_DECO']][SPRITE['NIGHT']][_0x1a03f4('011_111_000')] = sprite[SPRITE['RIVER_DECO']][SPRITE['NIGHT']][_0x1a03f4('011_011_010')], sprite[SPRITE['RIVER_DECO']][SPRITE['NIGHT']][_0x1a03f4('011_111_010')] = [IMAGES['NIGHT_RIVER_COMPO1'], IMAGES['NIGHT_RIVER_COMPO2'], IMAGES['NIGHT_RIVER_COMPO3'], IMAGES['NIGHT_RIVER_COMPO5'], IMAGES['NIGHT_RIVER_COMPO6'], IMAGES['NIGHT_RIVER_COMPO7'], IMAGES['NIGHT_RIVER_COMPO11'], IMAGES['NIGHT_RIVER_COMPO13'], IMAGES['NIGHT_RIVER_COMPO15'], IMAGES['NIGHT_RIVER_COMPO16'], IMAGES['NIGHT_RIVER_COMPO17'], IMAGES['NIGHT_RIVER_COMPO18'], IMAGES['NIGHT_RIVER_COMPO19'], IMAGES['NIGHT_RIVER_COMPO20'], IMAGES['NIGHT_RIVER_COMPO21'], IMAGES['NIGHT_RIVER_COMPO22'], IMAGES['NIGHT_RIVER_COMPO23'], IMAGES['NIGHT_RIVER_COMPO24'], IMAGES['NIGHT_RIVER_COMPO25'], IMAGES['NIGHT_RIVER_COMPO26'], IMAGES['NIGHT_RIVER_COMPO28']], sprite[SPRITE['RIVER_DECO']][SPRITE['NIGHT']][_0x1a03f4('011_111_011')] = sprite[SPRITE['RIVER_DECO']][SPRITE['NIGHT']][_0x1a03f4('011_111_010')], sprite[SPRITE['RIVER_DECO']][SPRITE['NIGHT']][_0x1a03f4('011_111_110')] = sprite[SPRITE['RIVER_DECO']][SPRITE['NIGHT']][_0x1a03f4('011_111_010')], sprite[SPRITE['RIVER_DECO']][SPRITE['NIGHT']][_0x1a03f4('011_111_111')] = [IMAGES['NIGHT_RIVER_COMPO1'], IMAGES['NIGHT_RIVER_COMPO2'], IMAGES['NIGHT_RIVER_COMPO3'], IMAGES['NIGHT_RIVER_COMPO4'], IMAGES['NIGHT_RIVER_COMPO5'], IMAGES['NIGHT_RIVER_COMPO6'], IMAGES['NIGHT_RIVER_COMPO7'], IMAGES['NIGHT_RIVER_COMPO9'], IMAGES['NIGHT_RIVER_COMPO11'], IMAGES['NIGHT_RIVER_COMPO13'], IMAGES['NIGHT_RIVER_COMPO15'], IMAGES['NIGHT_RIVER_COMPO16'], IMAGES['NIGHT_RIVER_COMPO17'], IMAGES['NIGHT_RIVER_COMPO18'], IMAGES['NIGHT_RIVER_COMPO19'], IMAGES['NIGHT_RIVER_COMPO20'], IMAGES['NIGHT_RIVER_COMPO21'], IMAGES['NIGHT_RIVER_COMPO22'], IMAGES['NIGHT_RIVER_COMPO23'], IMAGES['NIGHT_RIVER_COMPO24'], IMAGES['NIGHT_RIVER_COMPO25'], IMAGES['NIGHT_RIVER_COMPO26'], IMAGES['NIGHT_RIVER_COMPO28']], sprite[SPRITE['RIVER_DECO']][SPRITE['NIGHT']][_0x1a03f4('110_110_000')] = [IMAGES['NIGHT_RIVER_COMPO10'], IMAGES['NIGHT_RIVER_COMPO11'], IMAGES['NIGHT_RIVER_COMPO12'], IMAGES['NIGHT_RIVER_COMPO17'], IMAGES['NIGHT_RIVER_COMPO20'], IMAGES['NIGHT_RIVER_COMPO28']], sprite[SPRITE['RIVER_DECO']][SPRITE['NIGHT']][_0x1a03f4('110_110_010')] = [IMAGES['NIGHT_RIVER_COMPO7'], IMAGES['NIGHT_RIVER_COMPO10'], IMAGES['NIGHT_RIVER_COMPO11'], IMAGES['NIGHT_RIVER_COMPO16'], IMAGES['NIGHT_RIVER_COMPO17'], IMAGES['NIGHT_RIVER_COMPO20'], IMAGES['NIGHT_RIVER_COMPO25'], IMAGES['NIGHT_RIVER_COMPO28']], sprite[SPRITE['RIVER_DECO']][SPRITE['NIGHT']][_0x1a03f4('110_110_110')] = [IMAGES['NIGHT_RIVER_COMPO7'], IMAGES['NIGHT_RIVER_COMPO9'], IMAGES['NIGHT_RIVER_COMPO10'], IMAGES['NIGHT_RIVER_COMPO11'], IMAGES['NIGHT_RIVER_COMPO16'], IMAGES['NIGHT_RIVER_COMPO17'], IMAGES['NIGHT_RIVER_COMPO20'], IMAGES['NIGHT_RIVER_COMPO25'], IMAGES['NIGHT_RIVER_COMPO28']], sprite[SPRITE['RIVER_DECO']][SPRITE['NIGHT']][_0x1a03f4('110_111_000')] = [IMAGES['NIGHT_RIVER_COMPO2'], IMAGES['NIGHT_RIVER_COMPO3'], IMAGES['NIGHT_RIVER_COMPO10'], IMAGES['NIGHT_RIVER_COMPO11'], IMAGES['NIGHT_RIVER_COMPO12'], IMAGES['NIGHT_RIVER_COMPO14'], IMAGES['NIGHT_RIVER_COMPO17'], IMAGES['NIGHT_RIVER_COMPO18'], IMAGES['NIGHT_RIVER_COMPO19'], IMAGES['NIGHT_RIVER_COMPO20'], IMAGES['NIGHT_RIVER_COMPO21'], IMAGES['NIGHT_RIVER_COMPO26'], IMAGES['NIGHT_RIVER_COMPO28']], sprite[SPRITE['RIVER_DECO']][SPRITE['NIGHT']][_0x1a03f4('110_111_110')] = [IMAGES['NIGHT_RIVER_COMPO2'], IMAGES['NIGHT_RIVER_COMPO3'], IMAGES['NIGHT_RIVER_COMPO5'], IMAGES['NIGHT_RIVER_COMPO6'], IMAGES['NIGHT_RIVER_COMPO7'], IMAGES['NIGHT_RIVER_COMPO9'], IMAGES['NIGHT_RIVER_COMPO10'], IMAGES['NIGHT_RIVER_COMPO11'], IMAGES['NIGHT_RIVER_COMPO13'], IMAGES['NIGHT_RIVER_COMPO14'], IMAGES['NIGHT_RIVER_COMPO15'], IMAGES['NIGHT_RIVER_COMPO16'], IMAGES['NIGHT_RIVER_COMPO17'], IMAGES['NIGHT_RIVER_COMPO18'], IMAGES['NIGHT_RIVER_COMPO19'], IMAGES['NIGHT_RIVER_COMPO20'], IMAGES['NIGHT_RIVER_COMPO21'], IMAGES['NIGHT_RIVER_COMPO22'], IMAGES['NIGHT_RIVER_COMPO23'], IMAGES['NIGHT_RIVER_COMPO24'], IMAGES['NIGHT_RIVER_COMPO25'], IMAGES['NIGHT_RIVER_COMPO26'], IMAGES['NIGHT_RIVER_COMPO28']], sprite[SPRITE['RIVER_DECO']][SPRITE['NIGHT']][_0x1a03f4('110_111_111')] = sprite[SPRITE['RIVER_DECO']][SPRITE['NIGHT']][_0x1a03f4('110_111_110')], sprite[SPRITE['RIVER_DECO']][SPRITE['NIGHT']][_0x1a03f4('110_111_011')] = sprite[SPRITE['RIVER_DECO']][SPRITE['NIGHT']][_0x1a03f4('110_111_110')], sprite[SPRITE['RIVER_DECO']][SPRITE['NIGHT']][_0x1a03f4('110_111_010')] = sprite[SPRITE['RIVER_DECO']][SPRITE['NIGHT']][_0x1a03f4('110_111_110')], sprite[SPRITE['RIVER_DECO']][SPRITE['NIGHT']][_0x1a03f4('111_111_110')] = [IMAGES['NIGHT_RIVER_COMPO28'], IMAGES['NIGHT_RIVER_COMPO26'], IMAGES['NIGHT_RIVER_COMPO25'], IMAGES['NIGHT_RIVER_COMPO24'], IMAGES['NIGHT_RIVER_COMPO23'], IMAGES['NIGHT_RIVER_COMPO22'], IMAGES['NIGHT_RIVER_COMPO21'], IMAGES['NIGHT_RIVER_COMPO20'], IMAGES['NIGHT_RIVER_COMPO19'], IMAGES['NIGHT_RIVER_COMPO18'], IMAGES['NIGHT_RIVER_COMPO17'], IMAGES['NIGHT_RIVER_COMPO16'], IMAGES['NIGHT_RIVER_COMPO15'], IMAGES['NIGHT_RIVER_COMPO14'], IMAGES['NIGHT_RIVER_COMPO13'], IMAGES['NIGHT_RIVER_COMPO11'], IMAGES['NIGHT_RIVER_COMPO10'], IMAGES['NIGHT_RIVER_COMPO7'], IMAGES['NIGHT_RIVER_COMPO6'], IMAGES['NIGHT_RIVER_COMPO5'], IMAGES['NIGHT_RIVER_COMPO3'], IMAGES['NIGHT_RIVER_COMPO2'], IMAGES['NIGHT_RIVER_COMPO1']], sprite[SPRITE['RIVER_DECO']][SPRITE['NIGHT']][_0x1a03f4('111_111_011')] = sprite[SPRITE['RIVER_DECO']][SPRITE['NIGHT']][_0x1a03f4('111_111_110')], sprite[SPRITE['RIVER_DECO']][SPRITE['NIGHT']][_0x1a03f4('111_111_000')] = [IMAGES['NIGHT_RIVER_COMPO12'], IMAGES['NIGHT_RIVER_COMPO11'], IMAGES['NIGHT_RIVER_COMPO10'], IMAGES['NIGHT_RIVER_COMPO3'], IMAGES['NIGHT_RIVER_COMPO2'], IMAGES['NIGHT_RIVER_COMPO1'], IMAGES['NIGHT_RIVER_COMPO14']], sprite[SPRITE['RIVER_DECO']][SPRITE['NIGHT']][_0x1a03f4('111_111_111')] = [IMAGES['NIGHT_RIVER_COMPO1'], IMAGES['NIGHT_RIVER_COMPO2'], IMAGES['NIGHT_RIVER_COMPO3'], IMAGES['NIGHT_RIVER_COMPO4'], IMAGES['NIGHT_RIVER_COMPO5'], IMAGES['NIGHT_RIVER_COMPO6'], IMAGES['NIGHT_RIVER_COMPO7'], IMAGES['NIGHT_RIVER_COMPO9'], IMAGES['NIGHT_RIVER_COMPO10'], IMAGES['NIGHT_RIVER_COMPO11'], IMAGES['NIGHT_RIVER_COMPO13'], IMAGES['NIGHT_RIVER_COMPO15'], IMAGES['NIGHT_RIVER_COMPO16'], IMAGES['NIGHT_RIVER_COMPO17'], IMAGES['NIGHT_RIVER_COMPO18'], IMAGES['NIGHT_RIVER_COMPO19'], IMAGES['NIGHT_RIVER_COMPO20'], IMAGES['NIGHT_RIVER_COMPO21'], IMAGES['NIGHT_RIVER_COMPO22'], IMAGES['NIGHT_RIVER_COMPO23'], IMAGES['NIGHT_RIVER_COMPO24'], IMAGES['NIGHT_RIVER_COMPO25'], IMAGES['NIGHT_RIVER_COMPO26'], IMAGES['NIGHT_RIVER_COMPO28']], sprite[SPRITE['RIVER_DECO']][SPRITE['NIGHT']][_0x1a03f4('111_111_010')] = sprite[SPRITE['RIVER_DECO']][SPRITE['NIGHT']][_0x1a03f4('111_111_110')], sprite[SPRITE['RIVER']] = [], sprite[SPRITE['RIVER']][SPRITE['DAY']] = [], sprite[SPRITE['RIVER']][SPRITE['DAY']][_0x1a03f4('000_010_000')] = IMAGES['DAY_RIVER_000_010_000'], sprite[SPRITE['RIVER']][SPRITE['DAY']][_0x1a03f4('000_010_010')] = IMAGES['DAY_RIVER_000_010_010'], sprite[SPRITE['RIVER']][SPRITE['DAY']][_0x1a03f4('000_011_000')] = IMAGES['DAY_RIVER_000_011_000'], sprite[SPRITE['RIVER']][SPRITE['DAY']][_0x1a03f4('000_011_010')] = IMAGES['DAY_RIVER_000_011_010'], sprite[SPRITE['RIVER']][SPRITE['DAY']][_0x1a03f4('000_011_011')] = IMAGES['DAY_RIVER_000_011_011'], sprite[SPRITE['RIVER']][SPRITE['DAY']][_0x1a03f4('000_110_000')] = IMAGES['DAY_RIVER_000_110_000'], sprite[SPRITE['RIVER']][SPRITE['DAY']][_0x1a03f4('000_110_010')] = IMAGES['DAY_RIVER_000_110_010'], sprite[SPRITE['RIVER']][SPRITE['DAY']][_0x1a03f4('000_110_110')] = IMAGES['DAY_RIVER_000_110_110'], sprite[SPRITE['RIVER']][SPRITE['DAY']][_0x1a03f4('000_111_000')] = IMAGES['DAY_RIVER_000_111_000'], sprite[SPRITE['RIVER']][SPRITE['DAY']][_0x1a03f4('000_111_010')] = IMAGES['DAY_RIVER_000_111_010'], sprite[SPRITE['RIVER']][SPRITE['DAY']][_0x1a03f4('000_111_011')] = IMAGES['DAY_RIVER_000_111_011'], sprite[SPRITE['RIVER']][SPRITE['DAY']][_0x1a03f4('000_111_110')] = IMAGES['DAY_RIVER_000_111_110'], sprite[SPRITE['RIVER']][SPRITE['DAY']][_0x1a03f4('000_111_111')] = IMAGES['DAY_RIVER_000_111_111'], sprite[SPRITE['RIVER']][SPRITE['DAY']][_0x1a03f4('010_010_000')] = IMAGES['DAY_RIVER_010_010_000'], sprite[SPRITE['RIVER']][SPRITE['DAY']][_0x1a03f4('010_010_010')] = IMAGES['DAY_RIVER_010_010_010'], sprite[SPRITE['RIVER']][SPRITE['DAY']][_0x1a03f4('010_011_000')] = IMAGES['DAY_RIVER_010_011_000'], sprite[SPRITE['RIVER']][SPRITE['DAY']][_0x1a03f4('010_011_010')] = IMAGES['DAY_RIVER_010_011_010'], sprite[SPRITE['RIVER']][SPRITE['DAY']][_0x1a03f4('010_011_011')] = IMAGES['DAY_RIVER_010_011_011'], sprite[SPRITE['RIVER']][SPRITE['DAY']][_0x1a03f4('010_110_000')] = IMAGES['DAY_RIVER_010_110_000'], sprite[SPRITE['RIVER']][SPRITE['DAY']][_0x1a03f4('010_110_010')] = IMAGES['DAY_RIVER_010_110_010'], sprite[SPRITE['RIVER']][SPRITE['DAY']][_0x1a03f4('010_110_110')] = IMAGES['DAY_RIVER_010_110_110'], sprite[SPRITE['RIVER']][SPRITE['DAY']][_0x1a03f4('010_111_000')] = IMAGES['DAY_RIVER_010_111_000'], sprite[SPRITE['RIVER']][SPRITE['DAY']][_0x1a03f4('010_111_010')] = IMAGES['DAY_RIVER_010_111_010'], sprite[SPRITE['RIVER']][SPRITE['DAY']][_0x1a03f4('010_111_011')] = IMAGES['DAY_RIVER_010_111_011'], sprite[SPRITE['RIVER']][SPRITE['DAY']][_0x1a03f4('010_111_110')] = IMAGES['DAY_RIVER_010_111_110'], sprite[SPRITE['RIVER']][SPRITE['DAY']][_0x1a03f4('010_111_111')] = IMAGES['DAY_RIVER_010_111_111'], sprite[SPRITE['RIVER']][SPRITE['DAY']][_0x1a03f4('011_011_000')] = IMAGES['DAY_RIVER_011_011_000'], sprite[SPRITE['RIVER']][SPRITE['DAY']][_0x1a03f4('011_011_010')] = IMAGES['DAY_RIVER_011_011_010'], sprite[SPRITE['RIVER']][SPRITE['DAY']][_0x1a03f4('011_011_011')] = IMAGES['DAY_RIVER_011_011_011'], sprite[SPRITE['RIVER']][SPRITE['DAY']][_0x1a03f4('011_111_000')] = IMAGES['DAY_RIVER_011_111_000'], sprite[SPRITE['RIVER']][SPRITE['DAY']][_0x1a03f4('011_111_010')] = IMAGES['DAY_RIVER_011_111_010'], sprite[SPRITE['RIVER']][SPRITE['DAY']][_0x1a03f4('011_111_011')] = IMAGES['DAY_RIVER_011_111_011'], sprite[SPRITE['RIVER']][SPRITE['DAY']][_0x1a03f4('011_111_110')] = IMAGES['DAY_RIVER_011_111_110'], sprite[SPRITE['RIVER']][SPRITE['DAY']][_0x1a03f4('011_111_111')] = IMAGES['DAY_RIVER_011_111_111'], sprite[SPRITE['RIVER']][SPRITE['DAY']][_0x1a03f4('110_110_000')] = IMAGES['DAY_RIVER_110_110_000'], sprite[SPRITE['RIVER']][SPRITE['DAY']][_0x1a03f4('110_110_010')] = IMAGES['DAY_RIVER_110_110_010'], sprite[SPRITE['RIVER']][SPRITE['DAY']][_0x1a03f4('110_110_110')] = IMAGES['DAY_RIVER_110_110_110'], sprite[SPRITE['RIVER']][SPRITE['DAY']][_0x1a03f4('110_111_000')] = IMAGES['DAY_RIVER_110_111_000'], sprite[SPRITE['RIVER']][SPRITE['DAY']][_0x1a03f4('110_111_010')] = IMAGES['DAY_RIVER_110_111_010'], sprite[SPRITE['RIVER']][SPRITE['DAY']][_0x1a03f4('110_111_011')] = IMAGES['DAY_RIVER_110_111_011'], sprite[SPRITE['RIVER']][SPRITE['DAY']][_0x1a03f4('110_111_110')] = IMAGES['DAY_RIVER_110_111_110'], sprite[SPRITE['RIVER']][SPRITE['DAY']][_0x1a03f4('110_111_111')] = IMAGES['DAY_RIVER_110_111_111'], sprite[SPRITE['RIVER']][SPRITE['DAY']][_0x1a03f4('111_111_011')] = IMAGES['DAY_RIVER_111_111_011'], sprite[SPRITE['RIVER']][SPRITE['DAY']][_0x1a03f4('111_111_110')] = IMAGES['DAY_RIVER_111_111_110'], sprite[SPRITE['RIVER']][SPRITE['DAY']][_0x1a03f4('111_111_011')] = IMAGES['DAY_RIVER_111_111_011'], sprite[SPRITE['RIVER']][SPRITE['DAY']][_0x1a03f4('111_111_000')] = IMAGES['DAY_RIVER_111_111_000'], sprite[SPRITE['RIVER']][SPRITE['DAY']][_0x1a03f4('111_111_111')] = IMAGES['DAY_RIVER_111_111_111'], sprite[SPRITE['RIVER']][SPRITE['DAY']][_0x1a03f4('111_111_010')] = IMAGES['DAY_RIVER_111_111_010'], sprite[SPRITE['RIVER']][SPRITE['NIGHT']] = [], sprite[SPRITE['RIVER']][SPRITE['NIGHT']][_0x1a03f4('000_010_000')] = IMAGES['NIGHT_RIVER_000_010_000'], sprite[SPRITE['RIVER']][SPRITE['NIGHT']][_0x1a03f4('000_010_010')] = IMAGES['NIGHT_RIVER_000_010_010'], sprite[SPRITE['RIVER']][SPRITE['NIGHT']][_0x1a03f4('000_011_000')] = IMAGES['NIGHT_RIVER_000_011_000'], sprite[SPRITE['RIVER']][SPRITE['NIGHT']][_0x1a03f4('000_011_010')] = IMAGES['NIGHT_RIVER_000_011_010'], sprite[SPRITE['RIVER']][SPRITE['NIGHT']][_0x1a03f4('000_011_011')] = IMAGES['NIGHT_RIVER_000_011_011'], sprite[SPRITE['RIVER']][SPRITE['NIGHT']][_0x1a03f4('000_110_000')] = IMAGES['NIGHT_RIVER_000_110_000'], sprite[SPRITE['RIVER']][SPRITE['NIGHT']][_0x1a03f4('000_110_010')] = IMAGES['NIGHT_RIVER_000_110_010'], sprite[SPRITE['RIVER']][SPRITE['NIGHT']][_0x1a03f4('000_110_110')] = IMAGES['NIGHT_RIVER_000_110_110'], sprite[SPRITE['RIVER']][SPRITE['NIGHT']][_0x1a03f4('000_111_000')] = IMAGES['NIGHT_RIVER_000_111_000'], sprite[SPRITE['RIVER']][SPRITE['NIGHT']][_0x1a03f4('000_111_010')] = IMAGES['NIGHT_RIVER_000_111_010'], sprite[SPRITE['RIVER']][SPRITE['NIGHT']][_0x1a03f4('000_111_011')] = IMAGES['NIGHT_RIVER_000_111_011'], sprite[SPRITE['RIVER']][SPRITE['NIGHT']][_0x1a03f4('000_111_110')] = IMAGES['NIGHT_RIVER_000_111_110'], sprite[SPRITE['RIVER']][SPRITE['NIGHT']][_0x1a03f4('000_111_111')] = IMAGES['NIGHT_RIVER_000_111_111'], sprite[SPRITE['RIVER']][SPRITE['NIGHT']][_0x1a03f4('010_010_000')] = IMAGES['NIGHT_RIVER_010_010_000'], sprite[SPRITE['RIVER']][SPRITE['NIGHT']][_0x1a03f4('010_010_010')] = IMAGES['NIGHT_RIVER_010_010_010'], sprite[SPRITE['RIVER']][SPRITE['NIGHT']][_0x1a03f4('010_011_000')] = IMAGES['NIGHT_RIVER_010_011_000'], sprite[SPRITE['RIVER']][SPRITE['NIGHT']][_0x1a03f4('010_011_010')] = IMAGES['NIGHT_RIVER_010_011_010'], sprite[SPRITE['RIVER']][SPRITE['NIGHT']][_0x1a03f4('010_011_011')] = IMAGES['NIGHT_RIVER_010_011_011'], sprite[SPRITE['RIVER']][SPRITE['NIGHT']][_0x1a03f4('010_110_000')] = IMAGES['NIGHT_RIVER_010_110_000'], sprite[SPRITE['RIVER']][SPRITE['NIGHT']][_0x1a03f4('010_110_010')] = IMAGES['NIGHT_RIVER_010_110_010'], sprite[SPRITE['RIVER']][SPRITE['NIGHT']][_0x1a03f4('010_110_110')] = IMAGES['NIGHT_RIVER_010_110_110'], sprite[SPRITE['RIVER']][SPRITE['NIGHT']][_0x1a03f4('010_111_000')] = IMAGES['NIGHT_RIVER_010_111_000'], sprite[SPRITE['RIVER']][SPRITE['NIGHT']][_0x1a03f4('010_111_010')] = IMAGES['NIGHT_RIVER_010_111_010'], sprite[SPRITE['RIVER']][SPRITE['NIGHT']][_0x1a03f4('010_111_011')] = IMAGES['NIGHT_RIVER_010_111_011'], sprite[SPRITE['RIVER']][SPRITE['NIGHT']][_0x1a03f4('010_111_110')] = IMAGES['NIGHT_RIVER_010_111_110'], sprite[SPRITE['RIVER']][SPRITE['NIGHT']][_0x1a03f4('010_111_111')] = IMAGES['NIGHT_RIVER_010_111_111'], sprite[SPRITE['RIVER']][SPRITE['NIGHT']][_0x1a03f4('011_011_000')] = IMAGES['NIGHT_RIVER_011_011_000'], sprite[SPRITE['RIVER']][SPRITE['NIGHT']][_0x1a03f4('011_011_010')] = IMAGES['NIGHT_RIVER_011_011_010'], sprite[SPRITE['RIVER']][SPRITE['NIGHT']][_0x1a03f4('011_011_011')] = IMAGES['NIGHT_RIVER_011_011_011'], sprite[SPRITE['RIVER']][SPRITE['NIGHT']][_0x1a03f4('011_111_000')] = IMAGES['NIGHT_RIVER_011_111_000'], sprite[SPRITE['RIVER']][SPRITE['NIGHT']][_0x1a03f4('011_111_010')] = IMAGES['NIGHT_RIVER_011_111_010'], sprite[SPRITE['RIVER']][SPRITE['NIGHT']][_0x1a03f4('011_111_011')] = IMAGES['NIGHT_RIVER_011_111_011'], sprite[SPRITE['RIVER']][SPRITE['NIGHT']][_0x1a03f4('011_111_110')] = IMAGES['NIGHT_RIVER_011_111_110'], sprite[SPRITE['RIVER']][SPRITE['NIGHT']][_0x1a03f4('011_111_111')] = IMAGES['NIGHT_RIVER_011_111_111'], sprite[SPRITE['RIVER']][SPRITE['NIGHT']][_0x1a03f4('110_110_000')] = IMAGES['NIGHT_RIVER_110_110_000'], sprite[SPRITE['RIVER']][SPRITE['NIGHT']][_0x1a03f4('110_110_010')] = IMAGES['NIGHT_RIVER_110_110_010'], sprite[SPRITE['RIVER']][SPRITE['NIGHT']][_0x1a03f4('110_110_110')] = IMAGES['NIGHT_RIVER_110_110_110'], sprite[SPRITE['RIVER']][SPRITE['NIGHT']][_0x1a03f4('110_111_000')] = IMAGES['NIGHT_RIVER_110_111_000'], sprite[SPRITE['RIVER']][SPRITE['NIGHT']][_0x1a03f4('110_111_010')] = IMAGES['NIGHT_RIVER_110_111_010'], sprite[SPRITE['RIVER']][SPRITE['NIGHT']][_0x1a03f4('110_111_011')] = IMAGES['NIGHT_RIVER_110_111_011'], sprite[SPRITE['RIVER']][SPRITE['NIGHT']][_0x1a03f4('110_111_110')] = IMAGES['NIGHT_RIVER_110_111_110'], sprite[SPRITE['RIVER']][SPRITE['NIGHT']][_0x1a03f4('110_111_111')] = IMAGES['NIGHT_RIVER_110_111_111'], sprite[SPRITE['RIVER']][SPRITE['NIGHT']][_0x1a03f4('111_111_011')] = IMAGES['NIGHT_RIVER_111_111_011'], sprite[SPRITE['RIVER']][SPRITE['NIGHT']][_0x1a03f4('111_111_110')] = IMAGES['NIGHT_RIVER_111_111_110'], sprite[SPRITE['RIVER']][SPRITE['NIGHT']][_0x1a03f4('111_111_011')] = IMAGES['NIGHT_RIVER_111_111_011'], sprite[SPRITE['RIVER']][SPRITE['NIGHT']][_0x1a03f4('111_111_000')] = IMAGES['NIGHT_RIVER_111_111_000'], sprite[SPRITE['RIVER']][SPRITE['NIGHT']][_0x1a03f4('111_111_111')] = IMAGES['NIGHT_RIVER_111_111_111'], sprite[SPRITE['RIVER']][SPRITE['NIGHT']][_0x1a03f4('111_111_010')] = IMAGES['NIGHT_RIVER_111_111_010'], sprite[SPRITE['PICK_REIDITE']] = [], sprite[SPRITE['PICK_REIDITE']][SPRITE['DAY']] = IMAGES['PICK_REIDITED'], sprite[SPRITE['PICK_REIDITE']][SPRITE['NIGHT']] = IMAGES['PICK_REIDITEN'], sprite[SPRITE['CARROT']] = [], sprite[SPRITE['CARROT']][SPRITE['DAY']] = IMAGES['CARROTD'], sprite[SPRITE['CARROT']][SPRITE['NIGHT']] = IMAGES['CARROTN'], sprite[SPRITE['TOMATO_MINI']] = [], sprite[SPRITE['TOMATO_MINI']][SPRITE['DAY']] = IMAGES['TOMATO_MINID'], sprite[SPRITE['TOMATO_MINI']][SPRITE['NIGHT']] = IMAGES['TOMATO_MININ'], sprite[SPRITE['TOMATO']] = [], sprite[SPRITE['TOMATO']][SPRITE['DAY']] = IMAGES['TOMATOD'], sprite[SPRITE['TOMATO']][SPRITE['NIGHT']] = IMAGES['TOMATON'], sprite[SPRITE['DRIED_CARROT']] = [], sprite[SPRITE['DRIED_CARROT']][SPRITE['DAY']] = IMAGES['CARROT_DRIEDD'], sprite[SPRITE['DRIED_CARROT']][SPRITE['NIGHT']] = IMAGES['CARROT_DRIEDN'], sprite[SPRITE['DRIED_TOMATO_MINI']] = [], sprite[SPRITE['DRIED_TOMATO_MINI']][SPRITE['DAY']] = IMAGES['TOMATO_MINI_DRIEDD'], sprite[SPRITE['DRIED_TOMATO_MINI']][SPRITE['NIGHT']] = IMAGES['TOMATO_MINI_DRIEDN'], sprite[SPRITE['WATERMELON']] = [], sprite[SPRITE['WATERMELON']][SPRITE['DAY']] = IMAGES['WATERMELOND'], sprite[SPRITE['WATERMELON']][SPRITE['NIGHT']] = IMAGES['WATERMELONN'], sprite[SPRITE['DRIED_WATERMELON']] = [], sprite[SPRITE['DRIED_WATERMELON']][SPRITE['DAY']] = IMAGES['DRIED_WATERMELOND'], sprite[SPRITE['DRIED_WATERMELON']][SPRITE['NIGHT']] = IMAGES['DRIED_WATERMELONN'], sprite[SPRITE['ALOE_VERA_GROWN']] = [], sprite[SPRITE['ALOE_VERA_GROWN']][SPRITE['DAY']] = IMAGES['ALOE_VERA_GROWND'], sprite[SPRITE['ALOE_VERA_GROWN']][SPRITE['NIGHT']] = IMAGES['ALOE_VERA_GROWNN'], sprite[SPRITE['DRIED_ALOE_VERA']] = [], sprite[SPRITE['DRIED_ALOE_VERA']][SPRITE['DAY']] = IMAGES['ALOE_VERA_DRIEDD'], sprite[SPRITE['DRIED_ALOE_VERA']][SPRITE['NIGHT']] = IMAGES['ALOE_VERAN_DRIEDN'], sprite[SPRITE['CACTUS']] = [], sprite[SPRITE['CACTUS']][SPRITE['DAY']] = [IMAGES['CACTUSD']], sprite[SPRITE['CACTUS']][SPRITE['NIGHT']] = [IMAGES['CACTUSN']], (sprite[SPRITE['REIDITE_WALL']] = [], sprite[SPRITE['REIDITE_WALL']][SPRITE['DAY']] = IMAGES['REIDITE_WALLD']), sprite[SPRITE['REIDITE_WALL']][SPRITE['NIGHT']] = IMAGES['REIDITE_WALLN'], (sprite[SPRITE['REIDITE_SPIKE']] = [], sprite[SPRITE['REIDITE_SPIKE']][SPRITE['DAY']] = IMAGES['REIDITE_SPIKED']), sprite[SPRITE['REIDITE_SPIKE']][SPRITE['NIGHT']] = IMAGES['REIDITE_SPIKEN'], sprite[SPRITE['REIDITE_DOOR']] = [], sprite[SPRITE['REIDITE_DOOR']][SPRITE['DAY']] = IMAGES['REIDITE_DOORD'], sprite[SPRITE['REIDITE_DOOR']][SPRITE['NIGHT']] = IMAGES['REIDITE_DOORN'], sprite[SPRITE['WOOD_DOOR_SPIKE']] = [], sprite[SPRITE['WOOD_DOOR_SPIKE']][SPRITE['DAY']] = IMAGES['WOOD_DOOR_SPIKED'], sprite[SPRITE['WOOD_DOOR_SPIKE']][SPRITE['NIGHT']] = IMAGES['WOOD_DOOR_SPIKEN'], sprite[SPRITE['STONE_DOOR_SPIKE']] = [], sprite[SPRITE['STONE_DOOR_SPIKE']][SPRITE['DAY']] = IMAGES['STONE_DOOR_SPIKED'], sprite[SPRITE['STONE_DOOR_SPIKE']][SPRITE['NIGHT']] = IMAGES['STONE_DOOR_SPIKEN'], sprite[SPRITE['GOLD_DOOR_SPIKE']] = [], sprite[SPRITE['GOLD_DOOR_SPIKE']][SPRITE['DAY']] = IMAGES['GOLD_DOOR_SPIKED'], sprite[SPRITE['GOLD_DOOR_SPIKE']][SPRITE['NIGHT']] = IMAGES['GOLD_DOOR_SPIKEN'], sprite[SPRITE['DIAMOND_DOOR_SPIKE']] = [], sprite[SPRITE['DIAMOND_DOOR_SPIKE']][SPRITE['DAY']] = IMAGES['DIAMOND_DOOR_SPIKED'], sprite[SPRITE['DIAMOND_DOOR_SPIKE']][SPRITE['NIGHT']] = IMAGES['DIAMOND_DOOR_SPIKEN'], sprite[SPRITE['AMETHYST_DOOR_SPIKE']] = [], sprite[SPRITE['AMETHYST_DOOR_SPIKE']][SPRITE['DAY']] = IMAGES['AMETHYST_DOOR_SPIKED'], sprite[SPRITE['AMETHYST_DOOR_SPIKE']][SPRITE['NIGHT']] = IMAGES['AMETHYST_DOOR_SPIKEN'], sprite[SPRITE['REIDITE_DOOR_SPIKE']] = [], sprite[SPRITE['REIDITE_DOOR_SPIKE']][SPRITE['DAY']] = IMAGES['REIDITE_DOOR_SPIKED'], sprite[SPRITE['REIDITE_DOOR_SPIKE']][SPRITE['NIGHT']] = IMAGES['REIDITE_DOOR_SPIKEN'], sprite[SPRITE['GOLDEN_HEN']] = [], sprite[SPRITE['GOLDEN_HEN']][SPRITE['DAY']] = IMAGES['HEND'], sprite[SPRITE['GOLDEN_HEN']][SPRITE['NIGHT']] = IMAGES['HENN'], sprite[SPRITE['GOLDEN_CHICKEN']] = [], sprite[SPRITE['GOLDEN_CHICKEN']][SPRITE['DAY']] = IMAGES['CHICKEND'], sprite[SPRITE['GOLDEN_CHICKEN']][SPRITE['NIGHT']] = IMAGES['CHICKENN'], sprite[SPRITE['HAMMER_REIDITE']] = [], sprite[SPRITE['HAMMER_REIDITE']][SPRITE['DAY']] = IMAGES['HAMMER_REIDITED'], sprite[SPRITE['HAMMER_REIDITE']][SPRITE['NIGHT']] = IMAGES['HAMMER_REIDITEN'], sprite[SPRITE['HURT_GOLDEN_HEN']] = IMAGES['HURT_GOLDEN_HEN'], sprite[SPRITE['HURT_GOLDEN_CHICKEN']] = IMAGES['HURT_GOLDEN_CHICKEN'], sprite[SPRITE['FOG']] = [], sprite[SPRITE['FOG']][SPRITE['DAY']] = [], sprite[SPRITE['FOG']][SPRITE['NIGHT']] = [], sprite[SPRITE['FOG']][SPRITE['DAY']]['push'](IMAGES['FOG0D']), sprite[SPRITE['FOG']][SPRITE['DAY']]['push'](IMAGES['FOG1D']), sprite[SPRITE['FOG']][SPRITE['DAY']]['push'](IMAGES['FOG2D']), sprite[SPRITE['FOG']][SPRITE['NIGHT']]['push'](IMAGES['FOG0N']), sprite[SPRITE['FOG']][SPRITE['NIGHT']]['push'](IMAGES['FOG1N']), sprite[SPRITE['FOG']][SPRITE['NIGHT']]['push'](IMAGES['FOG2N']), sprite[SPRITE['FOD']] = [], sprite[SPRITE['FOD']][SPRITE['DAY']] = [], sprite[SPRITE['FOD']][SPRITE['NIGHT']] = [], sprite[SPRITE['FOD']][SPRITE['DAY']]['push'](IMAGES['FOD0D']), sprite[SPRITE['FOD']][SPRITE['DAY']]['push'](IMAGES['FOD1D']), sprite[SPRITE['FOD']][SPRITE['DAY']]['push'](IMAGES['FOD2D']), sprite[SPRITE['FOD']][SPRITE['NIGHT']]['push'](IMAGES['FOD0N']), sprite[SPRITE['FOD']][SPRITE['NIGHT']]['push'](IMAGES['FOD1N']), sprite[SPRITE['FOD']][SPRITE['NIGHT']]['push'](IMAGES['FOD2N']), sprite[SPRITE['MARKER']] = [], sprite[SPRITE['MARKER']][SPRITE['DAY']] = [], sprite[SPRITE['MARKER']][SPRITE['NIGHT']] = [], sprite[SPRITE['MARKER']][SPRITE['DAY']]['push'](IMAGES['MARKER0D']), sprite[SPRITE['MARKER']][SPRITE['DAY']]['push'](IMAGES['MARKER1D']), sprite[SPRITE['MARKER']][SPRITE['DAY']]['push'](IMAGES['MARKER2D']), sprite[SPRITE['MARKER']][SPRITE['DAY']]['push'](IMAGES['MARKER3D']), sprite[SPRITE['MARKER']][SPRITE['NIGHT']]['push'](IMAGES['MARKER0N']), sprite[SPRITE['MARKER']][SPRITE['NIGHT']]['push'](IMAGES['MARKER1N']), sprite[SPRITE['MARKER']][SPRITE['NIGHT']]['push'](IMAGES['MARKER2N']), sprite[SPRITE['MARKER']][SPRITE['NIGHT']]['push'](IMAGES['MARKER3N']), sprite[SPRITE['LAVA_DRAGON']] = [], sprite[SPRITE['LAVA_DRAGON']][SPRITE['DAY']] = IMAGES['LAVA_DRAGOND'], sprite[SPRITE['LAVA_DRAGON']][SPRITE['NIGHT']] = IMAGES['LAVA_DRAGONN'], sprite[SPRITE['LAVA_WING_LEFT']] = [], sprite[SPRITE['LAVA_WING_LEFT']][SPRITE['DAY']] = IMAGES['LAVA_WING_LEFTD'], sprite[SPRITE['LAVA_WING_LEFT']][SPRITE['NIGHT']] = IMAGES['LAVA_WING_LEFTN'], sprite[SPRITE['LAVA_WING_RIGHT']] = [], sprite[SPRITE['LAVA_WING_RIGHT']][SPRITE['DAY']] = IMAGES['LAVA_WING_RIGHTD'], sprite[SPRITE['LAVA_WING_RIGHT']][SPRITE['NIGHT']] = IMAGES['LAVA_WING_RIGHTN'], sprite[SPRITE['HURT_LAVA_DRAGON']] = IMAGES['HURT_LAVA_DRAGON'], sprite[SPRITE['HURT_LAVA_WING_LEFT']] = IMAGES['HURT_LAVA_WING_LEFT'], sprite[SPRITE['HURT_LAVA_WING_RIGHT']] = IMAGES['HURT_LAVA_WING_RIGHT'], sprite[SPRITE['DIAMOND_PROTECTION']] = [], sprite[SPRITE['DIAMOND_PROTECTION']][SPRITE['DAY']] = IMAGES['DIAMOND_PROTECTIOND'], sprite[SPRITE['DIAMOND_PROTECTION']][SPRITE['NIGHT']] = IMAGES['DIAMOND_PROTECTIONN'], sprite[SPRITE['GLOVES_DIAMOND_PROTECTION']] = [], sprite[SPRITE['GLOVES_DIAMOND_PROTECTION']][SPRITE['DAY']] = IMAGES['HAND_DIAMOND_PROTECTIOND'], sprite[SPRITE['GLOVES_DIAMOND_PROTECTION']][SPRITE['NIGHT']] = IMAGES['HAND_DIAMOND_PROTECTIONN'], sprite[SPRITE['AMETHYST_PROTECTION']] = [], sprite[SPRITE['AMETHYST_PROTECTION']][SPRITE['DAY']] = IMAGES['AMETHYST_PROTECTIOND'], sprite[SPRITE['AMETHYST_PROTECTION']][SPRITE['NIGHT']] = IMAGES['AMETHYST_PROTECTIONN'], sprite[SPRITE['GLOVES_AMETHYST_PROTECTION']] = [], sprite[SPRITE['GLOVES_AMETHYST_PROTECTION']][SPRITE['DAY']] = IMAGES['HAND_DIAMOND_PROTECTIOND'], sprite[SPRITE['GLOVES_AMETHYST_PROTECTION']][SPRITE['NIGHT']] = IMAGES['HAND_DIAMOND_PROTECTIONN'], sprite[SPRITE['REIDITE_HELMET']] = [], sprite[SPRITE['REIDITE_HELMET']][SPRITE['DAY']] = IMAGES['REIDITE_HELMETD'], sprite[SPRITE['REIDITE_HELMET']][SPRITE['NIGHT']] = IMAGES['REIDITE_HELMETN'], sprite[SPRITE['REIDITE_SWORD']] = [], sprite[SPRITE['REIDITE_SWORD']][SPRITE['DAY']] = IMAGES['REIDITE_SWORDD'], sprite[SPRITE['REIDITE_SWORD']][SPRITE['NIGHT']] = IMAGES['REIDITE_SWORDN'], sprite[SPRITE['REIDITE_SPEAR']] = [], sprite[SPRITE['REIDITE_SPEAR']][SPRITE['DAY']] = IMAGES['REIDITE_SPEARD'], sprite[SPRITE['REIDITE_SPEAR']][SPRITE['NIGHT']] = IMAGES['REIDITE_SPEARN'], sprite[SPRITE['LAVA_SPEAR']] = [], sprite[SPRITE['LAVA_SPEAR']][SPRITE['DAY']] = IMAGES['LAVA_SPEARD'], sprite[SPRITE['LAVA_SPEAR']][SPRITE['NIGHT']] = IMAGES['LAVA_SPEARN'], sprite[SPRITE['LAVA_SWORD']] = [], sprite[SPRITE['LAVA_SWORD']][SPRITE['DAY']] = IMAGES['LAVA_SWORDD'], sprite[SPRITE['LAVA_SWORD']][SPRITE['NIGHT']] = IMAGES['LAVA_SWORDN'], sprite[SPRITE['LAVA_HELMET']] = [], sprite[SPRITE['LAVA_HELMET']][SPRITE['DAY']] = IMAGES['LAVA_HELMETD'], sprite[SPRITE['LAVA_HELMET']][SPRITE['NIGHT']] = IMAGES['LAVA_HELMETN'], sprite[SPRITE['WITCH']] = [], sprite[SPRITE['WITCH']][SPRITE['DAY']] = IMAGES['WITCHD'], sprite[SPRITE['WITCH']][SPRITE['NIGHT']] = IMAGES['WITCHN'], sprite[SPRITE['NIMBUS']] = [], sprite[SPRITE['NIMBUS']][SPRITE['DAY']] = IMAGES['NIMBUSD'], sprite[SPRITE['NIMBUS']][SPRITE['NIGHT']] = IMAGES['NIMBUSN'], sprite[SPRITE['WOOD_SHIELD']] = [], sprite[SPRITE['WOOD_SHIELD']][SPRITE['DAY']] = IMAGES['WOOD_SHIELDD'], sprite[SPRITE['WOOD_SHIELD']][SPRITE['NIGHT']] = IMAGES['WOOD_SHIELDN'], sprite[SPRITE['STONE_SHIELD']] = [], sprite[SPRITE['STONE_SHIELD']][SPRITE['DAY']] = IMAGES['STONE_SHIELDD'], sprite[SPRITE['STONE_SHIELD']][SPRITE['NIGHT']] = IMAGES['STONE_SHIELDN'], sprite[SPRITE['GOLD_SHIELD']] = [], sprite[SPRITE['GOLD_SHIELD']][SPRITE['DAY']] = IMAGES['GOLD_SHIELDD'], sprite[SPRITE['GOLD_SHIELD']][SPRITE['NIGHT']] = IMAGES['GOLD_SHIELDN'], sprite[SPRITE['DIAMOND_SHIELD']] = [], sprite[SPRITE['DIAMOND_SHIELD']][SPRITE['DAY']] = IMAGES['DIAMOND_SHIELDD'], sprite[SPRITE['DIAMOND_SHIELD']][SPRITE['NIGHT']] = IMAGES['DIAMOND_SHIELDN'], sprite[SPRITE['AMETHYST_SHIELD']] = [], sprite[SPRITE['AMETHYST_SHIELD']][SPRITE['DAY']] = IMAGES['AMETHYST_SHIELDD'], sprite[SPRITE['AMETHYST_SHIELD']][SPRITE['NIGHT']] = IMAGES['AMETHYST_SHIELDN'], sprite[SPRITE['REIDITE_SHIELD']] = [], sprite[SPRITE['REIDITE_SHIELD']][SPRITE['DAY']] = IMAGES['REIDITE_SHIELDD'], sprite[SPRITE['REIDITE_SHIELD']][SPRITE['NIGHT']] = IMAGES['REIDITE_SHIELDN'], sprite[SPRITE['WOOD_ARROW']] = [], sprite[SPRITE['WOOD_ARROW']][SPRITE['DAY']] = IMAGES['WOOD_ARROWD'], sprite[SPRITE['WOOD_ARROW']][SPRITE['NIGHT']] = IMAGES['WOOD_ARROWN'], sprite[SPRITE['WOOD_BOW']] = [], sprite[SPRITE['WOOD_BOW']][SPRITE['DAY']] = IMAGES['WOOD_BOWD'], sprite[SPRITE['WOOD_BOW']][SPRITE['NIGHT']] = IMAGES['WOOD_BOWN'], sprite[SPRITE['STONE_ARROW']] = [], sprite[SPRITE['STONE_ARROW']][SPRITE['DAY']] = IMAGES['STONE_ARROWD'], sprite[SPRITE['STONE_ARROW']][SPRITE['NIGHT']] = IMAGES['STONE_ARROWN'], sprite[SPRITE['STONE_BOW']] = [], sprite[SPRITE['STONE_BOW']][SPRITE['DAY']] = IMAGES['STONE_BOWD'], sprite[SPRITE['STONE_BOW']][SPRITE['NIGHT']] = IMAGES['STONE_BOWN'], sprite[SPRITE['GOLD_ARROW']] = [], sprite[SPRITE['GOLD_ARROW']][SPRITE['DAY']] = IMAGES['GOLD_ARROWD'], sprite[SPRITE['GOLD_ARROW']][SPRITE['NIGHT']] = IMAGES['GOLD_ARROWN'], sprite[SPRITE['GOLD_BOW']] = [], sprite[SPRITE['GOLD_BOW']][SPRITE['DAY']] = IMAGES['GOLD_BOWD'], sprite[SPRITE['GOLD_BOW']][SPRITE['NIGHT']] = IMAGES['GOLD_BOWN'], sprite[SPRITE['DIAMOND_ARROW']] = [], sprite[SPRITE['DIAMOND_ARROW']][SPRITE['DAY']] = IMAGES['DIAMOND_ARROWD'], sprite[SPRITE['DIAMOND_ARROW']][SPRITE['NIGHT']] = IMAGES['DIAMOND_ARROWN'], sprite[SPRITE['DIAMOND_BOW']] = [], sprite[SPRITE['DIAMOND_BOW']][SPRITE['DAY']] = IMAGES['DIAMOND_BOWD'], sprite[SPRITE['DIAMOND_BOW']][SPRITE['NIGHT']] = IMAGES['DIAMOND_BOWN'], sprite[SPRITE['AMETHYST_ARROW']] = [], sprite[SPRITE['AMETHYST_ARROW']][SPRITE['DAY']] = IMAGES['AMETHYST_ARROWD'], sprite[SPRITE['AMETHYST_ARROW']][SPRITE['NIGHT']] = IMAGES['AMETHYST_ARROWN'], sprite[SPRITE['AMETHYST_BOW']] = [], sprite[SPRITE['AMETHYST_BOW']][SPRITE['DAY']] = IMAGES['AMETHYST_BOWD'], sprite[SPRITE['AMETHYST_BOW']][SPRITE['NIGHT']] = IMAGES['AMETHYST_BOWN'], sprite[SPRITE['REIDITE_ARROW']] = [], sprite[SPRITE['REIDITE_ARROW']][SPRITE['DAY']] = IMAGES['REIDITE_ARROWD'], sprite[SPRITE['REIDITE_ARROW']][SPRITE['NIGHT']] = IMAGES['REIDITE_ARROWN'], sprite[SPRITE['REIDITE_BOW']] = [], sprite[SPRITE['REIDITE_BOW']][SPRITE['DAY']] = IMAGES['REIDITE_BOWD'], sprite[SPRITE['REIDITE_BOW']][SPRITE['NIGHT']] = IMAGES['REIDITE_BOWN'], sprite[SPRITE['DRAGON_ARROW']] = [], sprite[SPRITE['DRAGON_ARROW']][SPRITE['DAY']] = IMAGES['DRAGON_ARROWD'], sprite[SPRITE['DRAGON_ARROW']][SPRITE['NIGHT']] = IMAGES['DRAGON_ARROWN'], sprite[SPRITE['DRAGON_BOW']] = [], sprite[SPRITE['DRAGON_BOW']][SPRITE['DAY']] = IMAGES['DRAGON_BOWD'], sprite[SPRITE['DRAGON_BOW']][SPRITE['NIGHT']] = IMAGES['DRAGON_BOWN'], sprite[SPRITE['TURBAN1']] = [], sprite[SPRITE['TURBAN1']][SPRITE['DAY']] = IMAGES['TURBAN1D'], sprite[SPRITE['TURBAN1']][SPRITE['NIGHT']] = IMAGES['TURBAN1N'], sprite[SPRITE['TURBAN2']] = [], sprite[SPRITE['TURBAN2']][SPRITE['DAY']] = IMAGES['TURBAN2D'], sprite[SPRITE['TURBAN2']][SPRITE['NIGHT']] = IMAGES['TURBAN2N'], sprite[SPRITE['REIDITE_PROTECTION']] = [], sprite[SPRITE['REIDITE_PROTECTION']][SPRITE['DAY']] = IMAGES['REIDITE_PROTECTIOND'], sprite[SPRITE['REIDITE_PROTECTION']][SPRITE['NIGHT']] = IMAGES['REIDITE_PROTECTIONN'], sprite[SPRITE['GLOVES_REIDITE_PROTECTION']] = [], sprite[SPRITE['GLOVES_REIDITE_PROTECTION']][SPRITE['DAY']] = IMAGES['HAND_REIDITE_PROTECTIOND'], sprite[SPRITE['GLOVES_REIDITE_PROTECTION']][SPRITE['NIGHT']] = IMAGES['HAND_REIDITE_PROTECTIONN'], sprite[SPRITE['LAVA_SHINGLE']] = [], sprite[SPRITE['LAVA_SHINGLE']][SPRITE['DAY']] = [], sprite[SPRITE['LAVA_SHINGLE']][SPRITE['NIGHT']] = [], sprite[SPRITE['LAVA_SHINGLE']][SPRITE['DAY']]['push'](IMAGES['LAVA_SHINGLES0D']), sprite[SPRITE['LAVA_SHINGLE']][SPRITE['DAY']]['push'](IMAGES['LAVA_SHINGLES1D']), sprite[SPRITE['LAVA_SHINGLE']][SPRITE['NIGHT']]['push'](IMAGES['LAVA_SHINGLES1D']), sprite[SPRITE['LAVA_SHINGLE']][SPRITE['NIGHT']]['push'](IMAGES['LAVA_SHINGLES1N']), sprite[SPRITE['LAVA_BUBBLE']] = [], sprite[SPRITE['LAVA_BUBBLE']][SPRITE['DAY']] = [], sprite[SPRITE['LAVA_BUBBLE']][SPRITE['NIGHT']] = [], sprite[SPRITE['LAVA_BUBBLE']][SPRITE['DAY']]['push'](IMAGES['LAVA_BUBLE0D']), sprite[SPRITE['LAVA_BUBBLE']][SPRITE['DAY']]['push'](IMAGES['LAVA_BUBLE1D']), sprite[SPRITE['LAVA_BUBBLE']][SPRITE['DAY']]['push'](IMAGES['LAVA_BUBLE2D']), sprite[SPRITE['LAVA_BUBBLE']][SPRITE['NIGHT']]['push'](IMAGES['LAVA_BUBLE0N']), sprite[SPRITE['LAVA_BUBBLE']][SPRITE['NIGHT']]['push'](IMAGES['LAVA_BUBLE1N']), sprite[SPRITE['LAVA_BUBBLE']][SPRITE['NIGHT']]['push'](IMAGES['LAVA_BUBLE2N']), sprite[SPRITE['PITCHFORK']] = [], sprite[SPRITE['PITCHFORK']][SPRITE['DAY']] = IMAGES['PITCHFORKD'], sprite[SPRITE['PITCHFORK']][SPRITE['NIGHT']] = IMAGES['PITCHFORKN'], sprite[SPRITE['PITCHFORK2']] = [], sprite[SPRITE['PITCHFORK2']][SPRITE['DAY']] = IMAGES['PITCHFORK2D'], sprite[SPRITE['PITCHFORK2']][SPRITE['NIGHT']] = IMAGES['PITCHFORK2N'], sprite[SPRITE['EMERALD']] = [], sprite[SPRITE['EMERALD']][SPRITE['DAY']] = [], sprite[SPRITE['EMERALD']][SPRITE['NIGHT']] = [], sprite[SPRITE['EMERALD']][SPRITE['DAY']]['push'](IMAGES['EMERALD0D']), sprite[SPRITE['EMERALD']][SPRITE['DAY']]['push'](IMAGES['EMERALD1D']), sprite[SPRITE['EMERALD']][SPRITE['DAY']]['push'](IMAGES['EMERALD2D']), sprite[SPRITE['EMERALD']][SPRITE['NIGHT']]['push'](IMAGES['EMERALD0N']), sprite[SPRITE['EMERALD']][SPRITE['NIGHT']]['push'](IMAGES['EMERALD1N']), sprite[SPRITE['EMERALD']][SPRITE['NIGHT']]['push'](IMAGES['EMERALD2N']), sprite[SPRITE['REIDITE']] = [], sprite[SPRITE['REIDITE']][SPRITE['DAY']] = [], sprite[SPRITE['REIDITE']][SPRITE['NIGHT']] = [], sprite[SPRITE['REIDITE']][SPRITE['DAY']]['push'](IMAGES['REIDITE0D']), sprite[SPRITE['REIDITE']][SPRITE['DAY']]['push'](IMAGES['REIDITE1D']), sprite[SPRITE['REIDITE']][SPRITE['DAY']]['push'](IMAGES['REIDITE2D']), sprite[SPRITE['REIDITE']][SPRITE['NIGHT']]['push'](IMAGES['REIDITE0N']), sprite[SPRITE['REIDITE']][SPRITE['NIGHT']]['push'](IMAGES['REIDITE1N']), sprite[SPRITE['REIDITE']][SPRITE['NIGHT']]['push'](IMAGES['REIDITE2N']), sprite[SPRITE['MAGMA']] = [], sprite[SPRITE['MAGMA']][SPRITE['DAY']] = [], sprite[SPRITE['MAGMA']][SPRITE['NIGHT']] = [], sprite[SPRITE['MAGMA']][SPRITE['DAY']]['push'](IMAGES['MAGMA1D']), sprite[SPRITE['MAGMA']][SPRITE['DAY']]['push'](IMAGES['MAGMA2D']), sprite[SPRITE['MAGMA']][SPRITE['DAY']]['push'](IMAGES['MAGMA3D']), sprite[SPRITE['MAGMA']][SPRITE['DAY']]['push'](IMAGES['MAGMA4D']), sprite[SPRITE['MAGMA']][SPRITE['DAY']]['push'](IMAGES['MAGMA5D']), sprite[SPRITE['MAGMA']][SPRITE['DAY']]['push'](IMAGES['MAGMA6D']), sprite[SPRITE['MAGMA']][SPRITE['NIGHT']]['push'](IMAGES['MAGMA1N']), sprite[SPRITE['MAGMA']][SPRITE['NIGHT']]['push'](IMAGES['MAGMA2N']), sprite[SPRITE['MAGMA']][SPRITE['NIGHT']]['push'](IMAGES['MAGMA3N']), sprite[SPRITE['MAGMA']][SPRITE['NIGHT']]['push'](IMAGES['MAGMA4N']), sprite[SPRITE['MAGMA']][SPRITE['NIGHT']]['push'](IMAGES['MAGMA5N']), sprite[SPRITE['MAGMA']][SPRITE['NIGHT']]['push'](IMAGES['MAGMA6N']), sprite[SPRITE['LAVA_GROUND']] = [], sprite[SPRITE['LAVA_GROUND']][SPRITE['DAY']] = [], sprite[SPRITE['LAVA_GROUND']][SPRITE['NIGHT']] = [], sprite[SPRITE['LAVA_GROUND']][SPRITE['DAY']]['push'](IMAGES['LAVA_GROUND1D']), sprite[SPRITE['LAVA_GROUND']][SPRITE['DAY']]['push'](IMAGES['LAVA_GROUND2D']), sprite[SPRITE['LAVA_GROUND']][SPRITE['DAY']]['push'](IMAGES['LAVA_GROUND3D']), sprite[SPRITE['LAVA_GROUND']][SPRITE['DAY']]['push'](IMAGES['LAVA_GROUND4D']), sprite[SPRITE['LAVA_GROUND']][SPRITE['DAY']]['push'](IMAGES['LAVA_GROUND5D']), sprite[SPRITE['LAVA_GROUND']][SPRITE['DAY']]['push'](IMAGES['LAVA_GROUND6D']), sprite[SPRITE['LAVA_GROUND']][SPRITE['NIGHT']]['push'](IMAGES['LAVA_GROUND1N']), sprite[SPRITE['LAVA_GROUND']][SPRITE['NIGHT']]['push'](IMAGES['LAVA_GROUND2N']), sprite[SPRITE['LAVA_GROUND']][SPRITE['NIGHT']]['push'](IMAGES['LAVA_GROUND3N']), sprite[SPRITE['LAVA_GROUND']][SPRITE['NIGHT']]['push'](IMAGES['LAVA_GROUND4N']), sprite[SPRITE['LAVA_GROUND']][SPRITE['NIGHT']]['push'](IMAGES['LAVA_GROUND5N']), sprite[SPRITE['LAVA_GROUND']][SPRITE['NIGHT']]['push'](IMAGES['LAVA_GROUND6N']), sprite[SPRITE['FIRE_MOB']] = [], sprite[SPRITE['FIRE_MOB']][SPRITE['DAY']] = IMAGES['FIRE_MOBD'], sprite[SPRITE['FIRE_MOB']][SPRITE['NIGHT']] = IMAGES['FIRE_MOBN'], sprite[SPRITE['HURT_FIRE_MOB']] = IMAGES['FIRE_MOB_HURT'], sprite[SPRITE['MACHETE']] = [], sprite[SPRITE['MACHETE']][SPRITE['DAY']] = IMAGES['MACHETED'], sprite[SPRITE['MACHETE']][SPRITE['NIGHT']] = IMAGES['MACHETEN'], sprite[SPRITE['BOAT']] = [], sprite[SPRITE['BOAT']][SPRITE['DAY']] = IMAGES['BOATD'], sprite[SPRITE['BOAT']][SPRITE['NIGHT']] = IMAGES['BOATN'], sprite[SPRITE['SLED']] = [], sprite[SPRITE['SLED']][SPRITE['DAY']] = IMAGES['SLEDD'], sprite[SPRITE['SLED']][SPRITE['NIGHT']] = IMAGES['SLEDN'], sprite[SPRITE['PLANE']] = [], sprite[SPRITE['PLANE']][SPRITE['DAY']] = IMAGES['PLANED'], sprite[SPRITE['PLANE']][SPRITE['NIGHT']] = IMAGES['PLANEN'], sprite[SPRITE['PENGUIN']] = [], sprite[SPRITE['PENGUIN']][SPRITE['DAY']] = IMAGES['PENGUIND'], sprite[SPRITE['PENGUIN']][SPRITE['NIGHT']] = IMAGES['PENGUINN'], sprite[SPRITE['HURT_PENGUIN']] = IMAGES['HURT_PENGUIN'], sprite[SPRITE['SAND_WORM1']] = [], sprite[SPRITE['SAND_WORM1']][SPRITE['DAY']] = IMAGES['SAND_WORM1D'], sprite[SPRITE['SAND_WORM1']][SPRITE['NIGHT']] = IMAGES['SAND_WORM1N'], sprite[SPRITE['SAND_WORM2']] = [], sprite[SPRITE['SAND_WORM2']][SPRITE['DAY']] = IMAGES['SAND_WORM2D'], sprite[SPRITE['SAND_WORM2']][SPRITE['NIGHT']] = IMAGES['SAND_WORM2N'], sprite[SPRITE['HURT_SAND_WORM0']] = IMAGES['HURT_SAND_WORM0'], sprite[SPRITE['HURT_SAND_WORM1']] = IMAGES['HURT_SAND_WORM1'], sprite[SPRITE['HURT_SAND_WORM2']] = IMAGES['HURT_SAND_WORM2'], sprite[SPRITE['SCORPION']] = [], sprite[SPRITE['SCORPION']][SPRITE['DAY']] = IMAGES['SCORPIOND'], sprite[SPRITE['SCORPION']][SPRITE['NIGHT']] = IMAGES['SCORPIONN'], sprite[SPRITE['SCORPION_HAND_LEFT']] = [], sprite[SPRITE['SCORPION_HAND_LEFT']][SPRITE['DAY']] = IMAGES['SCORPION_HAND_LEFTD'], sprite[SPRITE['SCORPION_HAND_LEFT']][SPRITE['NIGHT']] = IMAGES['SCORPION_HAND_LEFTN'], sprite[SPRITE['SCORPION_HAND_RIGHT']] = [], sprite[SPRITE['SCORPION_HAND_RIGHT']][SPRITE['DAY']] = IMAGES['SCORPION_HAND_RIGHTD'], sprite[SPRITE['SCORPION_HAND_RIGHT']][SPRITE['NIGHT']] = IMAGES['SCORPION_HAND_RIGHTN'], sprite[SPRITE['HURT_SCORPION']] = IMAGES['HURT_SCORPION'], sprite[SPRITE['HURT_SCORPION_HAND_RIGHT']] = IMAGES['HURT_SCORPION_HAND_RIGHT'], sprite[SPRITE['HURT_SCORPION_HAND_LEFT']] = IMAGES['HURT_SCORPION_HAND_LEFT'], sprite[SPRITE['CRAB_BOSS_ATTACK']] = [], sprite[SPRITE['CRAB_BOSS_ATTACK']][SPRITE['DAY']] = IMAGES['CRAB_BOSS_ATTACKD'], sprite[SPRITE['CRAB_BOSS_ATTACK']][SPRITE['NIGHT']] = IMAGES['CRAB_BOSS_ATTACKN'], sprite[SPRITE['CRAB_BOSS_TAMED']] = [], sprite[SPRITE['CRAB_BOSS_TAMED']][SPRITE['DAY']] = IMAGES['CRAB_BOSS_TAMEDD'], sprite[SPRITE['CRAB_BOSS_TAMED']][SPRITE['NIGHT']] = IMAGES['CRAB_BOSS_TAMEDN'], sprite[SPRITE['CRAB_BOSS']] = [], sprite[SPRITE['CRAB_BOSS']][SPRITE['DAY']] = IMAGES['CRAB_BOSSD'], sprite[SPRITE['CRAB_BOSS']][SPRITE['NIGHT']] = IMAGES['CRAB_BOSSN'], sprite[SPRITE['CRAB_BOSS_CLAW_LEFT']] = [], sprite[SPRITE['CRAB_BOSS_CLAW_LEFT']][SPRITE['DAY']] = IMAGES['CRAB_BOSS_CLAW_LEFTD'], sprite[SPRITE['CRAB_BOSS_CLAW_LEFT']][SPRITE['NIGHT']] = IMAGES['CRAB_BOSS_CLAW_LEFTN'], sprite[SPRITE['CRAB_BOSS_CLAW_RIGHT']] = [], sprite[SPRITE['CRAB_BOSS_CLAW_RIGHT']][SPRITE['DAY']] = IMAGES['CRAB_BOSS_CLAW_RIGHTD'], sprite[SPRITE['CRAB_BOSS_CLAW_RIGHT']][SPRITE['NIGHT']] = IMAGES['CRAB_BOSS_CLAW_RIGHTN'], sprite[SPRITE['CRAB_BOSS_CLAW_LEFT_ATTACK']] = [], sprite[SPRITE['CRAB_BOSS_CLAW_LEFT_ATTACK']][SPRITE['DAY']] = IMAGES['CRAB_BOSS_CLAW_LEFT_ATTACKD'], sprite[SPRITE['CRAB_BOSS_CLAW_LEFT_ATTACK']][SPRITE['NIGHT']] = IMAGES['CRAB_BOSS_CLAW_LEFT_ATTACKN'], sprite[SPRITE['CRAB_BOSS_CLAW_RIGHT_ATTACK']] = [], sprite[SPRITE['CRAB_BOSS_CLAW_RIGHT_ATTACK']][SPRITE['DAY']] = IMAGES['CRAB_BOSS_CLAW_RIGHT_ATTACKD'], sprite[SPRITE['CRAB_BOSS_CLAW_RIGHT_ATTACK']][SPRITE['NIGHT']] = IMAGES['CRAB_BOSS_CLAW_RIGHT_ATTACKN'], sprite[SPRITE['HURT_CRAB_BOSS']] = IMAGES['HURT_CRAB_BOSS'], sprite[SPRITE['HURT_CRAB_BOSS_CLAW_LEFT']] = IMAGES['HURT_CRAB_BOSS_CLAW_LEFT'], sprite[SPRITE['HURT_CRAB_BOSS_CLAW_RIGHT']] = IMAGES['HURT_CRAB_BOSS_CLAW_RIGHT'], sprite[SPRITE['HEAL_CRAB_BOSS']] = IMAGES['HEAL_CRAB_BOSS'], sprite[SPRITE['HEAL_CRAB_BOSS_CLAW_LEFT']] = IMAGES['HEAL_CRAB_BOSS_CLAW_LEFT'], sprite[SPRITE['HEAL_CRAB_BOSS_CLAW_RIGHT']] = IMAGES['HEAL_CRAB_BOSS_CLAW_RIGHT'], sprite[SPRITE['BABY_MAMMOTH_ATTACK']] = [], sprite[SPRITE['BABY_MAMMOTH_ATTACK']][SPRITE['DAY']] = IMAGES['BABY_MAMMOTH_ATTACKD'], sprite[SPRITE['BABY_MAMMOTH_ATTACK']][SPRITE['NIGHT']] = IMAGES['BABY_MAMMOTH_ATTACKN'], sprite[SPRITE['BABY_MAMMOTH']] = [], sprite[SPRITE['BABY_MAMMOTH']][SPRITE['DAY']] = IMAGES['BABY_MAMMOTHD'], sprite[SPRITE['BABY_MAMMOTH']][SPRITE['NIGHT']] = IMAGES['BABY_MAMMOTHN'], sprite[SPRITE['MAMMOTH']] = [], sprite[SPRITE['MAMMOTH']][SPRITE['DAY']] = IMAGES['MAMMOTHD'], sprite[SPRITE['MAMMOTH']][SPRITE['NIGHT']] = IMAGES['MAMMOTHN'], sprite[SPRITE['BABY_MAMMOTH_TAMED']] = [], sprite[SPRITE['BABY_MAMMOTH_TAMED']][SPRITE['DAY']] = IMAGES['BABY_MAMMOTH_TAMEDD'], sprite[SPRITE['BABY_MAMMOTH_TAMED']][SPRITE['NIGHT']] = IMAGES['BABY_MAMMOTH_TAMEDN'], sprite[SPRITE['HURT_BABY_MAMMOTH']] = IMAGES['HURT_BABY_MAMMOTH'], sprite[SPRITE['HURT_MAMMOTH']] = IMAGES['HURT_MAMMOTH'], sprite[SPRITE['BABY_DRAGON_ATTACK']] = [], sprite[SPRITE['BABY_DRAGON_ATTACK']][SPRITE['DAY']] = IMAGES['BABY_DRAGON_ATTACKD'], sprite[SPRITE['BABY_DRAGON_ATTACK']][SPRITE['NIGHT']] = IMAGES['BABY_DRAGON_ATTACKN'], sprite[SPRITE['BABY_DRAGON']] = [], sprite[SPRITE['BABY_DRAGON']][SPRITE['DAY']] = IMAGES['BABY_DRAGOND'], sprite[SPRITE['BABY_DRAGON']][SPRITE['NIGHT']] = IMAGES['BABY_DRAGONN'], sprite[SPRITE['BABY_DRAGON_TAMED']] = [], sprite[SPRITE['BABY_DRAGON_TAMED']][SPRITE['DAY']] = IMAGES['BABY_DRAGON_TAMEDD'], sprite[SPRITE['BABY_DRAGON_TAMED']][SPRITE['NIGHT']] = IMAGES['BABY_DRAGON_TAMEDN'], sprite[SPRITE['BABY_DRAGON_WING_LEFT']] = [], sprite[SPRITE['BABY_DRAGON_WING_LEFT']][SPRITE['DAY']] = IMAGES['BABY_DRAGON_WING_LEFTD'], sprite[SPRITE['BABY_DRAGON_WING_LEFT']][SPRITE['NIGHT']] = IMAGES['BABY_DRAGON_WING_LEFTN'], sprite[SPRITE['BABY_DRAGON_WING_RIGHT']] = [], sprite[SPRITE['BABY_DRAGON_WING_RIGHT']][SPRITE['DAY']] = IMAGES['BABY_DRAGON_WING_RIGHTD'], sprite[SPRITE['BABY_DRAGON_WING_RIGHT']][SPRITE['NIGHT']] = IMAGES['BABY_DRAGON_WING_RIGHTN'], sprite[SPRITE['BABY_DRAGON_WING_LEFT_ATTACK']] = [], sprite[SPRITE['BABY_DRAGON_WING_LEFT_ATTACK']][SPRITE['DAY']] = IMAGES['BABY_DRAGON_WING_LEFT_ATTACKD'], sprite[SPRITE['BABY_DRAGON_WING_LEFT_ATTACK']][SPRITE['NIGHT']] = IMAGES['BABY_DRAGON_WING_LEFT_ATTACKN'], sprite[SPRITE['BABY_DRAGON_WING_RIGHT_ATTACK']] = [], sprite[SPRITE['BABY_DRAGON_WING_RIGHT_ATTACK']][SPRITE['DAY']] = IMAGES['BABY_DRAGON_WING_RIGHT_ATTACKD'], sprite[SPRITE['BABY_DRAGON_WING_RIGHT_ATTACK']][SPRITE['NIGHT']] = IMAGES['BABY_DRAGON_WING_RIGHT_ATTACKN'], sprite[SPRITE['BABY_DRAGON_WING_LEFT_TAMED']] = [], sprite[SPRITE['BABY_DRAGON_WING_LEFT_TAMED']][SPRITE['DAY']] = IMAGES['BABY_DRAGON_WING_LEFT_TAMEDD'], sprite[SPRITE['BABY_DRAGON_WING_LEFT_TAMED']][SPRITE['NIGHT']] = IMAGES['BABY_DRAGON_WING_LEFT_TAMEDN'], sprite[SPRITE['BABY_DRAGON_WING_RIGHT_TAMED']] = [], sprite[SPRITE['BABY_DRAGON_WING_RIGHT_TAMED']][SPRITE['DAY']] = IMAGES['BABY_DRAGON_WING_RIGHT_TAMEDD'], sprite[SPRITE['BABY_DRAGON_WING_RIGHT_TAMED']][SPRITE['NIGHT']] = IMAGES['BABY_DRAGON_WING_RIGHT_TAMEDN'], sprite[SPRITE['HURT_BABY_DRAGON']] = IMAGES['HURT_BABY_DRAGON'], sprite[SPRITE['HURT_BABY_DRAGON_WING_LEFT']] = IMAGES['HURT_BABY_DRAGON_WING_LEFT'], sprite[SPRITE['HURT_BABY_DRAGON_WING_RIGHT']] = IMAGES['HURT_BABY_DRAGON_WING_RIGHT'], sprite[SPRITE['BABY_LAVA_ATTACK']] = [], sprite[SPRITE['BABY_LAVA_ATTACK']][SPRITE['DAY']] = IMAGES['BABY_LAVA_ATTACKD'], sprite[SPRITE['BABY_LAVA_ATTACK']][SPRITE['NIGHT']] = IMAGES['BABY_LAVA_ATTACKN'], sprite[SPRITE['BABY_LAVA']] = [], sprite[SPRITE['BABY_LAVA']][SPRITE['DAY']] = IMAGES['BABY_LAVAD'], sprite[SPRITE['BABY_LAVA']][SPRITE['NIGHT']] = IMAGES['BABY_LAVAN'], sprite[SPRITE['BABY_LAVA_TAMED']] = [], sprite[SPRITE['BABY_LAVA_TAMED']][SPRITE['DAY']] = IMAGES['BABY_LAVA_TAMEDD'], sprite[SPRITE['BABY_LAVA_TAMED']][SPRITE['NIGHT']] = IMAGES['BABY_LAVA_TAMEDN'], sprite[SPRITE['BABY_LAVA_WING_LEFT']] = [], sprite[SPRITE['BABY_LAVA_WING_LEFT']][SPRITE['DAY']] = IMAGES['BABY_LAVA_WING_LEFTD'], sprite[SPRITE['BABY_LAVA_WING_LEFT']][SPRITE['NIGHT']] = IMAGES['BABY_LAVA_WING_LEFTN'], sprite[SPRITE['BABY_LAVA_WING_RIGHT']] = [], sprite[SPRITE['BABY_LAVA_WING_RIGHT']][SPRITE['DAY']] = IMAGES['BABY_LAVA_WING_RIGHTD'], sprite[SPRITE['BABY_LAVA_WING_RIGHT']][SPRITE['NIGHT']] = IMAGES['BABY_LAVA_WING_RIGHTN'], sprite[SPRITE['BABY_LAVA_WING_LEFT_ATTACK']] = [], sprite[SPRITE['BABY_LAVA_WING_LEFT_ATTACK']][SPRITE['DAY']] = IMAGES['BABY_LAVA_WING_LEFT_ATTACKD'], sprite[SPRITE['BABY_LAVA_WING_LEFT_ATTACK']][SPRITE['NIGHT']] = IMAGES['BABY_LAVA_WING_LEFT_ATTACKN'], sprite[SPRITE['BABY_LAVA_WING_RIGHT_ATTACK']] = [], sprite[SPRITE['BABY_LAVA_WING_RIGHT_ATTACK']][SPRITE['DAY']] = IMAGES['BABY_LAVA_WING_RIGHT_ATTACKD'], sprite[SPRITE['BABY_LAVA_WING_RIGHT_ATTACK']][SPRITE['NIGHT']] = IMAGES['BABY_LAVA_WING_RIGHT_ATTACKN'], sprite[SPRITE['BABY_LAVA_WING_LEFT_TAMED']] = [], sprite[SPRITE['BABY_LAVA_WING_LEFT_TAMED']][SPRITE['DAY']] = IMAGES['BABY_LAVA_WING_LEFT_TAMEDD'], sprite[SPRITE['BABY_LAVA_WING_LEFT_TAMED']][SPRITE['NIGHT']] = IMAGES['BABY_LAVA_WING_LEFT_TAMEDN'], sprite[SPRITE['BABY_LAVA_WING_RIGHT_TAMED']] = [], sprite[SPRITE['BABY_LAVA_WING_RIGHT_TAMED']][SPRITE['DAY']] = IMAGES['BABY_LAVA_WING_RIGHT_TAMEDD'], sprite[SPRITE['BABY_LAVA_WING_RIGHT_TAMED']][SPRITE['NIGHT']] = IMAGES['BABY_LAVA_WING_RIGHT_TAMEDN'], sprite[SPRITE['HURT_BABY_LAVA']] = IMAGES['HURT_BABY_LAVA'], sprite[SPRITE['HURT_BABY_LAVA_WING_LEFT']] = IMAGES['HURT_BABY_LAVA_WING_LEFT'], sprite[SPRITE['HURT_BABY_LAVA_WING_RIGHT']] = IMAGES['HURT_BABY_LAVA_WING_RIGHT'], sprite[SPRITE['HAWK_ATTACK']] = [], sprite[SPRITE['HAWK_ATTACK']][SPRITE['DAY']] = IMAGES['HAWK_ATTACKD'], sprite[SPRITE['HAWK_ATTACK']][SPRITE['NIGHT']] = IMAGES['HAWK_ATTACKN'], sprite[SPRITE['HAWK']] = [], sprite[SPRITE['HAWK']][SPRITE['DAY']] = IMAGES['HAWKD'], sprite[SPRITE['HAWK']][SPRITE['NIGHT']] = IMAGES['HAWKN'], sprite[SPRITE['HURT_HAWK_GROUND']] = IMAGES['HURT_HAWK_GROUND'], sprite[SPRITE['HAWK_GROUND']] = [], sprite[SPRITE['HAWK_GROUND']][SPRITE['DAY']] = IMAGES['HAWK_GROUNDD'], sprite[SPRITE['HAWK_GROUND']][SPRITE['NIGHT']] = IMAGES['HAWK_GROUNDN'], sprite[SPRITE['HAWK_GROUND_ATTACK']] = [], sprite[SPRITE['HAWK_GROUND_ATTACK']][SPRITE['DAY']] = IMAGES['HAWK_GROUND_ATTACKD'], sprite[SPRITE['HAWK_GROUND_ATTACK']][SPRITE['NIGHT']] = IMAGES['HAWK_GROUND_ATTACKN'], sprite[SPRITE['HAWK_TAMED']] = [], sprite[SPRITE['HAWK_TAMED']][SPRITE['DAY']] = IMAGES['HAWK_TAMEDD'], sprite[SPRITE['HAWK_TAMED']][SPRITE['NIGHT']] = IMAGES['HAWK_TAMEDN'], sprite[SPRITE['HAWK_WING_LEFT']] = [], sprite[SPRITE['HAWK_WING_LEFT']][SPRITE['DAY']] = IMAGES['HAWK_WING_LEFTD'], sprite[SPRITE['HAWK_WING_LEFT']][SPRITE['NIGHT']] = IMAGES['HAWK_WING_LEFTN'], sprite[SPRITE['HAWK_WING_RIGHT']] = [], sprite[SPRITE['HAWK_WING_RIGHT']][SPRITE['DAY']] = IMAGES['HAWK_WING_RIGHTD'], sprite[SPRITE['HAWK_WING_RIGHT']][SPRITE['NIGHT']] = IMAGES['HAWK_WING_RIGHTN'], sprite[SPRITE['HAWK_WING_LEFT_ATTACK']] = [], sprite[SPRITE['HAWK_WING_LEFT_ATTACK']][SPRITE['DAY']] = IMAGES['HAWK_WING_LEFT_ATTACKD'], sprite[SPRITE['HAWK_WING_LEFT_ATTACK']][SPRITE['NIGHT']] = IMAGES['HAWK_WING_LEFT_ATTACKN'], sprite[SPRITE['HAWK_WING_RIGHT_ATTACK']] = [], sprite[SPRITE['HAWK_WING_RIGHT_ATTACK']][SPRITE['DAY']] = IMAGES['HAWK_WING_RIGHT_ATTACKD'], sprite[SPRITE['HAWK_WING_RIGHT_ATTACK']][SPRITE['NIGHT']] = IMAGES['HAWK_WING_RIGHT_ATTACKN'], sprite[SPRITE['HAWK_WING_LEFT_TAMED']] = [], sprite[SPRITE['HAWK_WING_LEFT_TAMED']][SPRITE['DAY']] = IMAGES['HAWK_WING_LEFT_TAMEDD'], sprite[SPRITE['HAWK_WING_LEFT_TAMED']][SPRITE['NIGHT']] = IMAGES['HAWK_WING_LEFT_TAMEDN'], sprite[SPRITE['HAWK_WING_RIGHT_TAMED']] = [], sprite[SPRITE['HAWK_WING_RIGHT_TAMED']][SPRITE['DAY']] = IMAGES['HAWK_WING_RIGHT_TAMEDD'], sprite[SPRITE['HAWK_WING_RIGHT_TAMED']][SPRITE['NIGHT']] = IMAGES['HAWK_WING_RIGHT_TAMEDN'], sprite[SPRITE['HURT_HAWK']] = IMAGES['HURT_HAWK'], sprite[SPRITE['HURT_HAWK_WING_LEFT']] = IMAGES['HURT_HAWK_WING_LEFT'], sprite[SPRITE['HURT_HAWK_WING_RIGHT']] = IMAGES['HURT_HAWK_WING_RIGHT'], sprite[SPRITE['VULTURE_ATTACK']] = [], sprite[SPRITE['VULTURE_ATTACK']][SPRITE['DAY']] = IMAGES['VULTURE_ATTACKD'], sprite[SPRITE['VULTURE_ATTACK']][SPRITE['NIGHT']] = IMAGES['VULTURE_ATTACKN'], sprite[SPRITE['VULTURE']] = [], sprite[SPRITE['VULTURE']][SPRITE['DAY']] = IMAGES['VULTURED'], sprite[SPRITE['VULTURE']][SPRITE['NIGHT']] = IMAGES['VULTUREN'], sprite[SPRITE['HURT_VULTURE_GROUND']] = IMAGES['HURT_VULTURE_GROUND'], sprite[SPRITE['VULTURE_GROUND']] = [], sprite[SPRITE['VULTURE_GROUND']][SPRITE['DAY']] = IMAGES['VULTURE_GROUNDD'], sprite[SPRITE['VULTURE_GROUND']][SPRITE['NIGHT']] = IMAGES['VULTURE_GROUNDN'], sprite[SPRITE['VULTURE_GROUND_ATTACK']] = [], sprite[SPRITE['VULTURE_GROUND_ATTACK']][SPRITE['DAY']] = IMAGES['VULTURE_GROUND_ATTACKD'], sprite[SPRITE['VULTURE_GROUND_ATTACK']][SPRITE['NIGHT']] = IMAGES['VULTURE_GROUND_ATTACKN'], sprite[SPRITE['VULTURE_TAMED']] = [], sprite[SPRITE['VULTURE_TAMED']][SPRITE['DAY']] = IMAGES['VULTURE_TAMEDD'], sprite[SPRITE['VULTURE_TAMED']][SPRITE['NIGHT']] = IMAGES['VULTURE_TAMEDN'], sprite[SPRITE['VULTURE_WING_LEFT']] = [], sprite[SPRITE['VULTURE_WING_LEFT']][SPRITE['DAY']] = IMAGES['VULTURE_WING_LEFTD'], sprite[SPRITE['VULTURE_WING_LEFT']][SPRITE['NIGHT']] = IMAGES['VULTURE_WING_LEFTN'], sprite[SPRITE['VULTURE_WING_RIGHT']] = [], sprite[SPRITE['VULTURE_WING_RIGHT']][SPRITE['DAY']] = IMAGES['VULTURE_WING_RIGHTD'], sprite[SPRITE['VULTURE_WING_RIGHT']][SPRITE['NIGHT']] = IMAGES['VULTURE_WING_RIGHTN'], sprite[SPRITE['VULTURE_WING_LEFT_ATTACK']] = [], sprite[SPRITE['VULTURE_WING_LEFT_ATTACK']][SPRITE['DAY']] = IMAGES['VULTURE_WING_LEFT_ATTACKD'], sprite[SPRITE['VULTURE_WING_LEFT_ATTACK']][SPRITE['NIGHT']] = IMAGES['VULTURE_WING_LEFT_ATTACKN'], sprite[SPRITE['VULTURE_WING_RIGHT_ATTACK']] = [], sprite[SPRITE['VULTURE_WING_RIGHT_ATTACK']][SPRITE['DAY']] = IMAGES['VULTURE_WING_RIGHT_ATTACKD'], sprite[SPRITE['VULTURE_WING_RIGHT_ATTACK']][SPRITE['NIGHT']] = IMAGES['VULTURE_WING_RIGHT_ATTACKN'], sprite[SPRITE['VULTURE_WING_LEFT_TAMED']] = [], sprite[SPRITE['VULTURE_WING_LEFT_TAMED']][SPRITE['DAY']] = IMAGES['VULTURE_WING_LEFT_TAMEDD'], sprite[SPRITE['VULTURE_WING_LEFT_TAMED']][SPRITE['NIGHT']] = IMAGES['VULTURE_WING_LEFT_TAMEDN'], sprite[SPRITE['VULTURE_WING_RIGHT_TAMED']] = [], sprite[SPRITE['VULTURE_WING_RIGHT_TAMED']][SPRITE['DAY']] = IMAGES['VULTURE_WING_RIGHT_TAMEDD'], sprite[SPRITE['VULTURE_WING_RIGHT_TAMED']][SPRITE['NIGHT']] = IMAGES['VULTURE_WING_RIGHT_TAMEDN'], sprite[SPRITE['HURT_VULTURE']] = IMAGES['HURT_VULTURE'], sprite[SPRITE['HURT_VULTURE_WING_LEFT']] = IMAGES['HURT_VULTURE_WING_LEFT'], sprite[SPRITE['HURT_VULTURE_WING_RIGHT']] = IMAGES['HURT_VULTURE_WING_RIGHT'], sprite[SPRITE['BOAR']] = [], sprite[SPRITE['BOAR']][SPRITE['DAY']] = IMAGES['BOARD'], sprite[SPRITE['BOAR']][SPRITE['NIGHT']] = IMAGES['BOARN'], sprite[SPRITE['BOAR_TAMED']] = [], sprite[SPRITE['BOAR_TAMED']][SPRITE['DAY']] = IMAGES['BOAR_TAMEDD'], sprite[SPRITE['BOAR_TAMED']][SPRITE['NIGHT']] = IMAGES['BOAR_TAMEDN'], sprite[SPRITE['BOAR_ATTACK']] = [], sprite[SPRITE['BOAR_ATTACK']][SPRITE['DAY']] = IMAGES['BOAR_ANGRYD'], sprite[SPRITE['BOAR_ATTACK']][SPRITE['NIGHT']] = IMAGES['BOAR_ANGRYN'], sprite[SPRITE['BOAR_STEP']] = [], sprite[SPRITE['BOAR_STEP']][SPRITE['DAY']] = IMAGES['BOAR_STEP'], sprite[SPRITE['BOAR_STEP']][SPRITE['NIGHT']] = IMAGES['BOAR_STEP'], sprite[SPRITE['CRAB_STEP']] = [], sprite[SPRITE['CRAB_STEP']][SPRITE['DAY']] = IMAGES['CRAB_STEP'], sprite[SPRITE['CRAB_STEP']][SPRITE['NIGHT']] = IMAGES['CRAB_STEP'], sprite[SPRITE['BABY_MAMMOTH_STEP']] = [], sprite[SPRITE['BABY_MAMMOTH_STEP']][SPRITE['DAY']] = IMAGES['BABY_MAMMOTH_STEP'], sprite[SPRITE['BABY_MAMMOTH_STEP']][SPRITE['NIGHT']] = IMAGES['BABY_MAMMOTH_STEP'], sprite[SPRITE['HURT_BOAR']] = IMAGES['HURT_BOAR'], sprite[SPRITE['SADDLE']] = [], sprite[SPRITE['SADDLE']][SPRITE['DAY']] = IMAGES['SADDLED'], sprite[SPRITE['SADDLE']][SPRITE['NIGHT']] = IMAGES['SADDLEN'], sprite[SPRITE['WAND1']] = [], sprite[SPRITE['WAND1']][SPRITE['DAY']] = IMAGES['WAND1D'], sprite[SPRITE['WAND1']][SPRITE['NIGHT']] = IMAGES['WAND1N'], sprite[SPRITE['SPELL']] = [], sprite[SPRITE['SPELL']][SPRITE['DAY']] = [IMAGES['LIGHT_WAND0D'], IMAGES['LIGHT_WAND1D'], IMAGES['WOOD_ARROWD'], IMAGES['STONE_ARROWD'], IMAGES['GOLD_ARROWD'], IMAGES['DIAMOND_ARROWD'], IMAGES['AMETHYST_ARROWD'], IMAGES['REIDITE_ARROWD'], IMAGES['DRAGON_ARROWD']], sprite[SPRITE['SPELL']][SPRITE['NIGHT']] = [IMAGES['LIGHT_WAND0N'], IMAGES['LIGHT_WAND1N'], IMAGES['WOOD_ARROWN'], IMAGES['STONE_ARROWN'], IMAGES['GOLD_ARROWN'], IMAGES['DIAMOND_ARROWN'], IMAGES['AMETHYST_ARROWN'], IMAGES['REIDITE_ARROWD'], IMAGES['DRAGON_ARROWN']], sprite[SPRITE['WAND2']] = [], sprite[SPRITE['WAND2']][SPRITE['DAY']] = IMAGES['WAND2D'], sprite[SPRITE['WAND2']][SPRITE['NIGHT']] = IMAGES['WAND2N'], sprite[SPRITE['BOAT_WAVE']] = [], sprite[SPRITE['BOAT_WAVE']][SPRITE['DAY']] = IMAGES['BOAT_WAVED'], sprite[SPRITE['BOAT_WAVE']][SPRITE['NIGHT']] = IMAGES['BOAT_WAVEN'], sprite[SPRITE['SLED_WAVE']] = [], sprite[SPRITE['SLED_WAVE']][SPRITE['DAY']] = IMAGES['SLED_WAVED'], sprite[SPRITE['SLED_WAVE']][SPRITE['NIGHT']] = IMAGES['SLED_WAVEN'], sprite[SPRITE['PIRATE_HAT']] = [], sprite[SPRITE['PIRATE_HAT']][SPRITE['DAY']] = IMAGES['PIRATE_HATD'], sprite[SPRITE['PIRATE_HAT']][SPRITE['NIGHT']] = IMAGES['PIRATE_HATN'], sprite[SPRITE['FUR_HAT']] = [], sprite[SPRITE['FUR_HAT']][SPRITE['DAY']] = IMAGES['FUR_HATD'], sprite[SPRITE['FUR_HAT']][SPRITE['NIGHT']] = IMAGES['FUR_HATN'], sprite[SPRITE['FLOWER_HAT']] = [], sprite[SPRITE['FLOWER_HAT']][SPRITE['DAY']] = IMAGES['FLOWER_HATD'], sprite[SPRITE['FLOWER_HAT']][SPRITE['NIGHT']] = IMAGES['FLOWER_HATN'], sprite[SPRITE['PILOT_HELMET']] = [], sprite[SPRITE['PILOT_HELMET']][SPRITE['DAY']] = IMAGES['PILOT_HELMETD'], sprite[SPRITE['PILOT_HELMET']][SPRITE['NIGHT']] = IMAGES['PILOT_HELMETN'], sprite[SPRITE['LAKE_EDGE']] = [], sprite[SPRITE['LAKE_EDGE']][SPRITE['DAY']] = [], sprite[SPRITE['LAKE_EDGE']][SPRITE['NIGHT']] = [], sprite[SPRITE['LAKE_EDGE']][SPRITE['DAY']]['push'](IMAGES['LAKE0D_EDGE']), sprite[SPRITE['LAKE_EDGE']][SPRITE['DAY']]['push'](IMAGES['LAKE1D_EDGE']), sprite[SPRITE['LAKE_EDGE']][SPRITE['DAY']]['push'](IMAGES['LAKE2D_EDGE']), sprite[SPRITE['LAKE_EDGE']][SPRITE['NIGHT']]['push'](IMAGES['LAKE0N_EDGE']), sprite[SPRITE['LAKE_EDGE']][SPRITE['NIGHT']]['push'](IMAGES['LAKE1N_EDGE']), sprite[SPRITE['LAKE_EDGE']][SPRITE['NIGHT']]['push'](IMAGES['LAKE2N_EDGE']), sprite[SPRITE['LAKE_DEEP']] = [], sprite[SPRITE['LAKE_DEEP']][SPRITE['DAY']] = [], sprite[SPRITE['LAKE_DEEP']][SPRITE['NIGHT']] = [], sprite[SPRITE['LAKE_DEEP']][SPRITE['DAY']]['push'](IMAGES['LAKE0D_DEEP']), sprite[SPRITE['LAKE_DEEP']][SPRITE['DAY']]['push'](IMAGES['LAKE1D_DEEP']), sprite[SPRITE['LAKE_DEEP']][SPRITE['DAY']]['push'](IMAGES['LAKE2D_DEEP']), sprite[SPRITE['LAKE_DEEP']][SPRITE['NIGHT']]['push'](IMAGES['LAKE0N_DEEP']), sprite[SPRITE['LAKE_DEEP']][SPRITE['NIGHT']]['push'](IMAGES['LAKE1N_DEEP']), sprite[SPRITE['LAKE_DEEP']][SPRITE['NIGHT']]['push'](IMAGES['LAKE2N_DEEP']), sprite[SPRITE['LAKE']] = [], sprite[SPRITE['LAKE']][SPRITE['DAY']] = [], sprite[SPRITE['LAKE']][SPRITE['NIGHT']] = [], sprite[SPRITE['LAKE']][SPRITE['DAY']]['push'](IMAGES['LAKE0D']), sprite[SPRITE['LAKE']][SPRITE['DAY']]['push'](IMAGES['LAKE1D']), sprite[SPRITE['LAKE']][SPRITE['DAY']]['push'](IMAGES['LAKE2D']), sprite[SPRITE['LAKE']][SPRITE['NIGHT']]['push'](IMAGES['LAKE0N']), sprite[SPRITE['LAKE']][SPRITE['NIGHT']]['push'](IMAGES['LAKE1N']), sprite[SPRITE['LAKE']][SPRITE['NIGHT']]['push'](IMAGES['LAKE2N']), sprite[0x2710] = [new Image()], sprite[0x2711] = [new Image()], sprite[0x2712] = [new Image()], sprite[0x2713] = [new Image()], sprite[0x2714] = [new Image()], sprite[0x2715] = [new Image()], sprite[0x2716] = [new Image()], sprite[0x2717] = [new Image()], sprite[0x2718] = [new Image()], sprite[0x2719] = [new Image()], sprite[0x271a] = [new Image()], sprite[0x271b] = [new Image()], sprite[0x271c] = [new Image()], sprite[0x271d] = [new Image()], sprite[0x271e] = [new Image()], sprite[0x271f] = [new Image()], sprite[0x2720] = [new Image()], sprite[0x2721] = [new Image()], sprite[0x2722] = [new Image()], sprite[0x2723] = [new Image()], sprite[0x2724] = [new Image()], sprite[0x2725] = [new Image()], sprite[0x2726] = [new Image()], sprite[0x2727] = [new Image()], sprite[0x2728] = [new Image()], sprite[0x2729] = [new Image()], sprite[0x272a] = [new Image()], sprite[0x272b] = [new Image()], sprite[0x272c] = [new Image()], sprite[0x272d] = [new Image()], sprite[0x272e] = [new Image()], sprite[0x272f] = [new Image()], sprite[0x2730] = [new Image()], sprite[0x2731] = [new Image()], sprite[0x2732] = [new Image()], sprite[0x2733] = [new Image()], sprite[0x2710][0x0]['src'] = 'https://github.com/XmreLoux/blackspikes/blob/main/day-reidite-spike-enemy.png.111.png?raw=true', sprite[0x2711][0x0]['src'] = 'https://cdn.discordapp.com/attachments/936607946018803835/936608248411336774/spike_reid321ite.png', sprite[0x2712][0x0]['src'] = 'https://cdn.discordapp.com/attachments/791947032415043584/1089721740067868783/amespike.png', sprite[0x2713][0x0]['src'] = 'https://cdn.discordapp.com/attachments/936607946018803835/936608248180658196/spike_reid321231232131231ite.png', sprite[0x2714][0x0]['src'] = 'https://cdn.discordapp.com/attachments/791947032415043584/1089717444702130207/dia_spike.png', sprite[0x2715][0x0]['src'] = 'https://cdn.discordapp.com/attachments/936607946018803835/936608247949979688/spike_reid321231ite.png', sprite[0x2716][0x0]['src'] = 'https://cdn.discordapp.com/attachments/791947032415043584/1089714954036318289/gold.png', sprite[0x2717][0x0]['src'] = 'https://cdn.discordapp.com/attachments/936607946018803835/936608247731879997/4123.png', sprite[0x2718][0x0]['src'] = 'https://cdn.discordapp.com/attachments/791947032415043584/1089711444645396490/stone_spike.png', sprite[0x2719][0x0]['src'] = 'https://cdn.discordapp.com/attachments/936607946018803835/936608247517954068/spike_12312312312312312.png', sprite[0x271a][0x0]['src'] = 'https://cdn.discordapp.com/attachments/791947032415043584/1089696835247013950/yenii.png', sprite[0x271b][0x0]['src'] = 'https://cdn.discordapp.com/attachments/936607946018803835/936608247299854357/2312312312312312312.png', sprite[0x271c][0x0]['src'] = 'https://cdn.discordapp.com/attachments/936612174263111681/936614994806710342/door_wo213123123123od.png', sprite[0x271d][0x0]['src'] = 'https://cdn.discordapp.com/attachments/936612174263111681/936614908697665566/door_w3123123123ood.png', sprite[0x271e][0x0]['src'] = 'https://cdn.discordapp.com/attachments/936612174263111681/936614994534092880/door_3123123123123.png', sprite[0x271f][0x0]['src'] = 'https://cdn.discordapp.com/attachments/936612174263111681/936614908374687754/23213123123123.png', sprite[0x2720][0x0]['src'] = 'https://cdn.discordapp.com/attachments/936612174263111681/936614994169184267/312312312.png', sprite[0x2721][0x0]['src'] = 'https://cdn.discordapp.com/attachments/936612174263111681/936614908131409930/door_123312312312321312.png', sprite[0x2722][0x0]['src'] = 'https://cdn.discordapp.com/attachments/936612174263111681/936614993858789486/door_diamo312312312nd.png', sprite[0x2723][0x0]['src'] = 'https://cdn.discordapp.com/attachments/936612174263111681/936614907900735539/door_dia3123123123mond.png', sprite[0x2724][0x0]['src'] = 'https://cdn.discordapp.com/attachments/936612174263111681/936614993506476052/door_amet2hyst.png', sprite[0x2725][0x0]['src'] = 'https://cdn.discordapp.com/attachments/936612174263111681/936614907661664276/door_amethy1st.png', sprite[0x2726][0x0]['src'] = 'https://cdn.discordapp.com/attachments/936612174263111681/936614993187700766/door_43423421414324.png', sprite[0x2727][0x0]['src'] = 'https://cdn.discordapp.com/attachments/936612174263111681/936614907456151572/door_12312312312321321.png', sprite[0x2728][0x0]['src'] = 'https://cdn.discordapp.com/attachments/936609104489771008/936612068155596820/spike_amethy12312312st.png', sprite[0x2729][0x0]['src'] = 'https://cdn.discordapp.com/attachments/936609104489771008/936611884927430686/spike_ameth421341234yst.png', sprite[0x272a][0x0]['src'] = 'https://cdn.discordapp.com/attachments/936609104489771008/936612067660673064/spike_am2131324ethyst.png', sprite[0x272b][0x0]['src'] = 'https://cdn.discordapp.com/attachments/936609104489771008/936611884642230312/spike_amethyst.p31231231sd.png', sprite[0x272c][0x0]['src'] = 'https://cdn.discordapp.com/attachments/936609104489771008/936612067283189770/spike_amet4134123412hyst.png', sprite[0x272d][0x0]['src'] = 'https://cdn.discordapp.com/attachments/936609104489771008/936611884390563880/spike_ameth123123123yst.png', sprite[0x272e][0x0]['src'] = 'https://cdn.discordapp.com/attachments/936609104489771008/936612066872139856/spike_3423412342314123.png', sprite[0x272f][0x0]['src'] = 'https://cdn.discordapp.com/attachments/936609104489771008/936611884180836392/spike_amethyst123123123.png', sprite[0x2730][0x0]['src'] = 'https://cdn.discordapp.com/attachments/936609104489771008/936612066524037180/312312312amethyst.png', sprite[0x2731][0x0]['src'] = 'https://cdn.discordapp.com/attachments/936609104489771008/936611883941785631/spike_amet12312312hyst.png', sprite[0x2732][0x0]['src'] = 'https://github.com/XmreLoux/blackspikes/blob/main/day-reidite-spike-door-ally%20remastered%20by%20hersgori.png?raw=true', sprite[0x2733][0x0]['src'] = 'https://cdn.discordapp.com/attachments/936609104489771008/936611883715264562/spike_amet1234hyst.png\x20', sprite[0x2710][0x1] = sprite[0x2710][0x0], sprite[0x2711][0x1] = sprite[0x2711][0x0], sprite[0x2712][0x1] = sprite[0x2712][0x0], sprite[0x2713][0x1] = sprite[0x2713][0x0], sprite[0x2714][0x1] = sprite[0x2714][0x0], sprite[0x2715][0x1] = sprite[0x2715][0x0], sprite[0x2716][0x1] = sprite[0x2716][0x0], sprite[0x2717][0x1] = sprite[0x2717][0x0], sprite[0x2718][0x1] = sprite[0x2718][0x0], sprite[0x2719][0x1] = sprite[0x2719][0x0], sprite[0x271a][0x1] = sprite[0x271a][0x0], sprite[0x271b][0x1] = sprite[0x271b][0x0], sprite[0x271c][0x1] = sprite[0x271c][0x0], sprite[0x271d][0x1] = sprite[0x271d][0x0], sprite[0x271e][0x1] = sprite[0x271e][0x0], sprite[0x271f][0x1] = sprite[0x271f][0x0], sprite[0x2720][0x1] = sprite[0x2720][0x0], sprite[0x2721][0x1] = sprite[0x2721][0x0], sprite[0x2722][0x1] = sprite[0x2722][0x0], sprite[0x2723][0x1] = sprite[0x2723][0x0], sprite[0x2724][0x1] = sprite[0x2724][0x0], sprite[0x2725][0x1] = sprite[0x2725][0x0], sprite[0x2726][0x1] = sprite[0x2726][0x0], sprite[0x2727][0x1] = sprite[0x2727][0x0], sprite[0x2728][0x1] = sprite[0x2728][0x0], sprite[0x2729][0x1] = sprite[0x2729][0x0], sprite[0x272a][0x1] = sprite[0x272a][0x0], sprite[0x272b][0x1] = sprite[0x272b][0x0], sprite[0x272c][0x1] = sprite[0x272c][0x0], sprite[0x272d][0x1] = sprite[0x272d][0x0], sprite[0x272e][0x1] = sprite[0x272e][0x0], sprite[0x272f][0x1] = sprite[0x272f][0x0], sprite[0x2730][0x1] = sprite[0x2730][0x0], sprite[0x2731][0x1] = sprite[0x2731][0x0], sprite[0x2732][0x1] = sprite[0x2732][0x0], sprite[0x2733][0x1] = sprite[0x2733][0x0], MINIMAP_Utils['g'] = [], MINIMAP_Utils['g'][0x0] = [IMAGES['MAPDAY_GOLD1'], IMAGES['MAPNIGHT_GOLD1']], MINIMAP_Utils['g'][0x1] = MINIMAP_Utils['g'][0x0], MINIMAP_Utils['g'][0x2] = [IMAGES['MAPDAY_GOLD2'], IMAGES['MAPNIGHT_GOLD2']], MINIMAP_Utils['m'] = [], MINIMAP_Utils['m'][0x0] = [IMAGES['MAPDAY_EMERALD1'], IMAGES['MAPNIGHT_EMERALD1']], MINIMAP_Utils['m'][0x1] = MINIMAP_Utils['m'][0x0], MINIMAP_Utils['m'][0x2] = [IMAGES['MAPDAY_EMERALD2'], IMAGES['MAPNIGHT_EMERALD2']], MINIMAP_Utils['la'] = [], MINIMAP_Utils['la'][0x0] = [IMAGES['MAPDAY_MAGMA'], IMAGES['MAPNIGHT_MAGMA']], MINIMAP_Utils['la'][0x1] = MINIMAP_Utils['la'][0x0], MINIMAP_Utils['la'][0x2] = MINIMAP_Utils['la'][0x0], MINIMAP_Utils['la'][0x3] = MINIMAP_Utils['la'][0x0], MINIMAP_Utils['la'][0x4] = MINIMAP_Utils['la'][0x0], MINIMAP_Utils['la'][0x5] = MINIMAP_Utils['la'][0x0], MINIMAP_Utils['s'] = [], MINIMAP_Utils['s'][0x0] = [IMAGES['MAPDAY_STONE1'], IMAGES['MAPNIGHT_STONE1']], MINIMAP_Utils['s'][0x1] = MINIMAP_Utils['s'][0x0], MINIMAP_Utils['s'][0x2] = [IMAGES['MAPDAY_STONE2'], IMAGES['MAPNIGHT_STONE2']], MINIMAP_Utils['p'] = [], MINIMAP_Utils['p'][0x0] = [IMAGES['MAPDAY_BERRY'], IMAGES['MAPDAY_BERRY']], MINIMAP_Utils['a'] = [], MINIMAP_Utils['a'][0x0] = [IMAGES['MAPDAY_AMETHYST'], IMAGES['MAPNIGHT_AMETHYST']], MINIMAP_Utils['a'][0x1] = MINIMAP_Utils['a'][0x0], MINIMAP_Utils['a'][0x2] = MINIMAP_Utils['a'][0x0], MINIMAP_Utils['d'] = [], MINIMAP_Utils['d'][0x0] = [IMAGES['MAPDAY_DIAMOND'], IMAGES['MAPNIGHT_DIAMOND']], MINIMAP_Utils['d'][0x1] = MINIMAP_Utils['d'][0x0], MINIMAP_Utils['d'][0x2] = MINIMAP_Utils['d'][0x0], MINIMAP_Utils['re'] = [], MINIMAP_Utils['re'][0x0] = [IMAGES['MAPDAY_REIDITE'], IMAGES['MAPNIGHT_REIDITE']], MINIMAP_Utils['re'][0x1] = MINIMAP_Utils['re'][0x0], MINIMAP_Utils['re'][0x2] = MINIMAP_Utils['re'][0x0], MINIMAP_Utils['f'] = [], MINIMAP_Utils['f'][0x0] = [IMAGES['MAPDAY_FIR_TREE'], IMAGES['MAPNIGHT_FIR_TREE']], MINIMAP_Utils['f'][0x1] = MINIMAP_Utils['f'][0x0], MINIMAP_Utils['f'][0x2] = MINIMAP_Utils['f'][0x0], MINIMAP_Utils['isl'] = [], MINIMAP_Utils['isl'][0x0] = [IMAGES['MAPDAY_ISLAND'], IMAGES['MAPNIGHT_ISLAND']], MINIMAP_Utils['isl'][0x1] = MINIMAP_Utils['isl'][0x0], MINIMAP_Utils['isl'][0x2] = MINIMAP_Utils['isl'][0x0], MINIMAP_Utils['c'] = [], MINIMAP_Utils['c'][0x0] = [IMAGES['MAPDAY_CACTUS'], IMAGES['MAPNIGHT_CACTUS']], MINIMAP_Utils['c'][0x1] = MINIMAP_Utils['c'][0x0], MINIMAP_Utils['c'][0x2] = MINIMAP_Utils['c'][0x0], MINIMAP_Utils['wtb'] = [], MINIMAP_Utils['wtb'][0x0] = [IMAGES['MAPDAY_RIVER'], IMAGES['MAPNIGHT_RIVER']], MINIMAP_Utils['PIRANHA'] = [IMAGES['MAPDAY_PIRANHA'], IMAGES['MAPNIGHT_PIRANHA']], MINIMAP_Utils['KRAKEN'] = [IMAGES['MAPDAY_KRAKEN'], IMAGES['MAPNIGHT_KRAKEN']], MINIMAP_Utils['FOX'] = [IMAGES['MAPDAY_FOX'], IMAGES['MAPNIGHT_FOX']], MINIMAP_Utils['WOLF'] = [IMAGES['MAPDAY_WOLF'], IMAGES['MAPNIGHT_WOLF']], MINIMAP_Utils['SPIDER'] = [IMAGES['MAPDAY_SPIDER'], IMAGES['MAPNIGHT_SPIDER']], MINIMAP_Utils['BEAR'] = [IMAGES['MAPDAY_BEAR'], IMAGES['MAPNIGHT_BEAR']], MINIMAP_Utils['CAVE'] = [IMAGES['MAPDAY_CAVE'], IMAGES['MAPNIGHT_CAVE']], MINIMAP_Utils['MAP'] = [IMAGES['BIGDAY'], IMAGES['BIGNIGHT']], MINIMAP_Utils['FOREST'] = [IMAGES['MAPDAY_FOREST'], IMAGES['MAPNIGHT_FOREST']], MINIMAP_Utils['WINTER'] = [IMAGES['MAPDAY_WINTER'], IMAGES['MAPNIGHT_WINTER']], MINIMAP_Utils['DESERT'] = [IMAGES['MAPDAY_DESERT'], IMAGES['MAPNIGHT_DESERT']], MINIMAP_Utils['LAVA'] = [IMAGES['MAPDAY_LAVA'], IMAGES['MAPNIGHT_LAVA']];
    for (var _0x2433a in MINIMAP_Utils) {
        var _0x1e1dc9 = MINIMAP_Utils[_0x2433a];
        for (var _0x1f40d8 = 0x0; _0x1f40d8 < _0x1e1dc9['length']; _0x1f40d8++) {
            var _0x33a0ed = _0x1e1dc9[_0x1f40d8];
            if (_0x33a0ed['tryLoad'] !== undefined) _0x33a0ed['tryLoad']();
            else {
                if (_0x33a0ed['length'] > 0x0)
                    for (var _0xb36de2 = 0x0; _0xb36de2 < _0x33a0ed['length']; _0xb36de2++) {
                        if (_0x33a0ed[_0xb36de2]['tryLoad'] !== undefined) _0x33a0ed[_0xb36de2]['tryLoad']();
                    }
            }
        }
    }
    console['log']('Load\x20images', Date['now']() - _0x981d3f);
};

function create_images() {
    var _0x4822ee = 0x1,
        _0x1ad046 = new Date()['getTime']();
    _load_images(), render_inventory(), sprite[SPRITE['BUBBLES']] = [], sprite[SPRITE['BUBBLES']][SPRITE['DAY']] = [], sprite[SPRITE['BUBBLES']][SPRITE['NIGHT']] = [];
    for (var _0x977e2a = 0x0; _0x977e2a < SPRITE['BUBBLES_SIZES']; _0x977e2a++) {
        sprite[SPRITE['BUBBLES']][SPRITE['DAY']]['push'](CTI(create_flake(_0x4822ee, 0x4 + _0x977e2a, '#59B8CE'))), sprite[SPRITE['BUBBLES']][SPRITE['NIGHT']]['push'](CTI(create_flake(_0x4822ee, 0x4 + _0x977e2a, '#90DDD9')));
    }
    sprite[SPRITE['FLAKES']] = [], sprite[SPRITE['FLAKES']][SPRITE['DAY']] = [], sprite[SPRITE['FLAKES']][SPRITE['NIGHT']] = [];
    for (var _0x977e2a = 0x0; _0x977e2a < SPRITE['FLAKES_SIZES']; _0x977e2a++) {
        sprite[SPRITE['FLAKES']][SPRITE['DAY']]['push'](CTI(create_flake(_0x4822ee, 0x4 + _0x977e2a, '#fff'))), sprite[SPRITE['FLAKES']][SPRITE['NIGHT']]['push'](CTI(create_flake(_0x4822ee, 0x4 + _0x977e2a, '#fff')));
    }
    sprite[SPRITE['DESERT']] = [], sprite[SPRITE['DESERT']][SPRITE['DAY']] = [], sprite[SPRITE['DESERT']][SPRITE['NIGHT']] = [];
    for (var _0x977e2a = 0x0; _0x977e2a < SPRITE['FLAKES_SIZES']; _0x977e2a++) {
        sprite[SPRITE['DESERT']][SPRITE['DAY']]['push'](CTI(create_flake(_0x4822ee, 0x6 + _0x977e2a, '#DDCD8A'))), sprite[SPRITE['DESERT']][SPRITE['NIGHT']]['push'](CTI(create_flake(_0x4822ee, 0x6 + _0x977e2a, '#155E57')));
    }
    sprite[SPRITE['ASHES']] = [], sprite[SPRITE['ASHES']][SPRITE['DAY']] = [], sprite[SPRITE['ASHES']][SPRITE['NIGHT']] = [];
    for (var _0x977e2a = 0x0; _0x977e2a < SPRITE['ASHES_SIZES']; _0x977e2a++) {
        sprite[SPRITE['ASHES']][SPRITE['DAY']]['push'](CTI(create_flake(_0x4822ee, 0x4 + _0x977e2a, '#353326'))), sprite[SPRITE['ASHES']][SPRITE['NIGHT']]['push'](CTI(create_flake(_0x4822ee, 0x4 + _0x977e2a, '#1D2526')));
    }
    sprite[SPRITE['GARLAND']] = [], sprite[SPRITE['GARLAND']][SPRITE['DAY']] = CTI(create_garland(_0x4822ee * 1.5, !![], ['#ee71a9'])), sprite[SPRITE['GARLAND']][SPRITE['NIGHT']] = CTI(create_garland(_0x4822ee * 1.5, !![], ['#ee71a9'])), sprite[SPRITE['GARLANDS']] = [sprite[SPRITE['GARLAND']]], sprite[SPRITE['GARLANDS']][0x1] = [], sprite[SPRITE['GARLANDS']][0x2] = [], sprite[SPRITE['GARLANDS']][0x3] = [], sprite[SPRITE['GARLANDS']][0x4] = [], sprite[SPRITE['GARLANDS']][0x1][SPRITE['DAY']] = CTI(create_garland(_0x4822ee * 1.5, !![], ['#e2d63b'])), sprite[SPRITE['GARLANDS']][0x1][SPRITE['NIGHT']] = CTI(create_garland(_0x4822ee * 1.5, !![], ['#e2d63b'])), sprite[SPRITE['GARLANDS']][0x2][SPRITE['DAY']] = CTI(create_garland(_0x4822ee * 1.5, !![], ['#309cbd'])), sprite[SPRITE['GARLANDS']][0x2][SPRITE['NIGHT']] = CTI(create_garland(_0x4822ee * 1.5, !![], ['#309cbd'])), sprite[SPRITE['GARLANDS']][0x3][SPRITE['DAY']] = CTI(create_garland(_0x4822ee * 1.5, !![], ['#cd232d'])), sprite[SPRITE['GARLANDS']][0x3][SPRITE['NIGHT']] = CTI(create_garland(_0x4822ee * 1.5, !![], ['#cd232d'])), sprite[SPRITE['GARLANDS']][0x4][SPRITE['DAY']] = CTI(create_garland(_0x4822ee * 1.5, !![], ['#42b672'])), sprite[SPRITE['GARLANDS']][0x4][SPRITE['NIGHT']] = CTI(create_garland(_0x4822ee * 1.5, !![], ['#42b672']));
    var _0x294948 = Utils['gup']('cti', window['location']['href']);
    if (_0x294948) document['getElementById']('version')['innerHTML'] += '[CTI]';
    else CTI = function(_0x1ed26b) {
        return _0x1ed26b['loaded'] = 0x1, _0x1ed26b;
    };
    sprite[SPRITE['MARKET_BGD']] = CTI(create_background_market()), sprite[SPRITE['STONES']] = [], sprite[SPRITE['STONES']][SPRITE['DAY']] = [], sprite[SPRITE['STONES']][SPRITE['NIGHT']] = [], sprite[SPRITE['STONES']][SPRITE['DAY']]['push'](CTI(create_stone(_0x4822ee * 1.1, ![], ['#252B28', '#58645F', '#75827D']))), sprite[SPRITE['STONES']][SPRITE['DAY']]['push'](CTI(create_stone(_0x4822ee * 0.9, ![], ['#252B28', '#58645F', '#75827D']))), sprite[SPRITE['STONES']][SPRITE['DAY']]['push'](CTI(create_stone(_0x4822ee * 0.6, ![], ['#252B28', '#58645F', '#75827D']))), sprite[SPRITE['STONES']][SPRITE['NIGHT']]['push'](CTI(create_stone(_0x4822ee * 1.1, ![], ['#030d14', '#123335', '#183f3f']))), sprite[SPRITE['STONES']][SPRITE['NIGHT']]['push'](CTI(create_stone(_0x4822ee * 0.9, ![], ['#030d14', '#123335', '#183f3f']))), sprite[SPRITE['STONES']][SPRITE['NIGHT']]['push'](CTI(create_stone(_0x4822ee * 0.6, ![], ['#030d14', '#123335', '#183f3f']))), sprite[SPRITE['GOLD']] = [], sprite[SPRITE['GOLD']][SPRITE['DAY']] = [], sprite[SPRITE['GOLD']][SPRITE['NIGHT']] = [], sprite[SPRITE['GOLD']][SPRITE['DAY']]['push'](CTI(create_gold(_0x4822ee * 1.5, ![], ['#282823', '#877c2d', '#c4bc51']))), sprite[SPRITE['GOLD']][SPRITE['DAY']]['push'](CTI(create_gold(_0x4822ee * 1.3, ![], ['#282823', '#877c2d', '#c4bc51']))), sprite[SPRITE['GOLD']][SPRITE['DAY']]['push'](CTI(create_gold(_0x4822ee * 1.1, ![], ['#282823', '#877c2d', '#c4bc51']))), sprite[SPRITE['GOLD']][SPRITE['NIGHT']]['push'](CTI(create_gold(_0x4822ee * 1.5, ![], ['#030d14', '#1b4444', '#16605a']))), sprite[SPRITE['GOLD']][SPRITE['NIGHT']]['push'](CTI(create_gold(_0x4822ee * 1.3, ![], ['#030d14', '#1b4444', '#16605a']))), sprite[SPRITE['GOLD']][SPRITE['NIGHT']]['push'](CTI(create_gold(_0x4822ee * 1.1, ![], ['#030d14', '#1b4444', '#16605a']))), sprite[SPRITE['DIAMOND']] = [], sprite[SPRITE['DIAMOND']][SPRITE['DAY']] = [], sprite[SPRITE['DIAMOND']][SPRITE['NIGHT']] = [], sprite[SPRITE['DIAMOND']][SPRITE['DAY']]['push'](CTI(create_diamond(_0x4822ee * 1.1, ![], ['#232828', '#3fc9c9', '#74ede6']))), sprite[SPRITE['DIAMOND']][SPRITE['DAY']]['push'](CTI(create_diamond(_0x4822ee * 0.9, ![], ['#232828', '#3fc9c9', '#74ede6']))), sprite[SPRITE['DIAMOND']][SPRITE['DAY']]['push'](CTI(create_diamond(_0x4822ee * 0.7, ![], ['#232828', '#3fc9c9', '#74ede6']))), sprite[SPRITE['DIAMOND']][SPRITE['NIGHT']]['push'](CTI(create_diamond(_0x4822ee * 1.1, ![], ['#030d14', '#2b9390', '#57bcb5']))), sprite[SPRITE['DIAMOND']][SPRITE['NIGHT']]['push'](CTI(create_diamond(_0x4822ee * 0.9, ![], ['#030d14', '#2b9390', '#57bcb5']))), sprite[SPRITE['DIAMOND']][SPRITE['NIGHT']]['push'](CTI(create_diamond(_0x4822ee * 0.7, ![], ['#030d14', '#2b9390', '#57bcb5']))), sprite[SPRITE['ALOE_VERA']] = [], sprite[SPRITE['ALOE_VERA']][SPRITE['DAY']] = IMAGES['ALOE_VERAD'], sprite[SPRITE['ALOE_VERA']][SPRITE['NIGHT']] = IMAGES['ALOE_VERAN'], sprite[SPRITE['HAND_SHADOW']] = [], sprite[SPRITE['HAND_SHADOW']][SPRITE['DAY']] = CTI(create_hand_shadow(_0x4822ee * 0.6, ['#0d1b1c'])), sprite[SPRITE['HAND_SHADOW']][SPRITE['NIGHT']] = CTI(create_hand_shadow(_0x4822ee * 0.6, ['#030d14'])), sprite[SPRITE['GLOVES_HOOD']] = [], sprite[SPRITE['GLOVES_HOOD']][SPRITE['DAY']] = CTI(create_hand(_0x4822ee * 0.6, ['#2a2938', '#242330'])), sprite[SPRITE['GLOVES_HOOD']][SPRITE['NIGHT']] = CTI(create_hand(_0x4822ee * 0.6, ['#1b1e30', '#161921'])), sprite[SPRITE['ZOMBIE_BODY']] = [], sprite[SPRITE['ZOMBIE_BODY']][SPRITE['DAY']] = CTI(create_zombie_boss(_0x4822ee * 0.6, !![], ['#0d1b1c', '#759e6e', '#55604b', '#7d7252', '#575043'])), sprite[SPRITE['ZOMBIE_BODY']][SPRITE['NIGHT']] = CTI(create_zombie_boss(_0x4822ee * 0.6, !![], ['#030d14', '#11635e', '#02373e', '#0b524d', '#07423f'])), sprite[SPRITE['ZOMBIE_HEAD']] = [], sprite[SPRITE['ZOMBIE_HEAD']][SPRITE['DAY']] = CTI(create_zombie_head(_0x4822ee * 0.6, !![], ['#0d1b1c', '#759e6e', '#55604b', '#f9ccd4', '#891a1e', '#da232e', '#a52026', '#a02d28', '#721819', '#FFFFFF'])), sprite[SPRITE['ZOMBIE_HEAD']][SPRITE['NIGHT']] = CTI(create_zombie_head(_0x4822ee * 0.6, !![], ['#030d14', '#11635e', '#02373e', '#167771', '#0c5752', '#401d49', '#2e1336', '#261336', '#23163c', '#FFFFFF'])), sprite[SPRITE['ZOMBIE_HAND']] = [], sprite[SPRITE['ZOMBIE_HAND']][SPRITE['DAY']] = CTI(create_zombie_hand(_0x4822ee * 0.4, ['#0d1b1c', '#759e6e', '#55604b'])), sprite[SPRITE['ZOMBIE_HAND']][SPRITE['NIGHT']] = CTI(create_zombie_hand(_0x4822ee * 0.4, ['#030d14', '#11635e', '#02373e'])), sprite[SPRITE['ZOMBIE_HURT']] = CTI(create_zombie_hurt(_0x4822ee * 0.6, ['#BB0000'])), sprite[SPRITE['ZOMBIE_HUNGER']] = CTI(create_zombie_hurt(_0x4822ee * 0.6, ['#DBE71C'])), sprite[SPRITE['ZOMBIE_HEAL']] = CTI(create_zombie_hurt(_0x4822ee * 0.6, ['#00BB00'])), sprite[SPRITE['TREE']] = [], sprite[SPRITE['TREE']][SPRITE['DAY']] = [], sprite[SPRITE['TREE']][SPRITE['NIGHT']] = [], sprite[SPRITE['TREE']][SPRITE['DAY']]['push'](create_apricot_tree(_0x4822ee * 1.1, ['#13402d', '#0f9862', '#0b8750', '#26ab6e'], ![], 0x0)), sprite[SPRITE['TREE']][SPRITE['DAY']]['push'](create_apricot_tree(_0x4822ee * 1.1, ['#0e3022', '#0f9862', '#0b8750', '#26ab6e'], !![], 0x0)), sprite[SPRITE['TREE']][SPRITE['DAY']]['push'](create_apricot_tree(_0x4822ee * 0.9, ['#0e3022', '#0e7d4c', '#258a4d', '#248c4d'], ![], 0x0)), sprite[SPRITE['TREE']][SPRITE['DAY']]['push'](create_apricot_tree(_0x4822ee * 0.9, ['#0e3022', '#096d41', '#1f7b43', '#1f7b43'], !![], 0x0)), sprite[SPRITE['TREE']][SPRITE['DAY']]['push'](create_apricot_tree(_0x4822ee * 0.7, ['#0e3022', '#124c34', '#0E3D26', '#155136'], ![], 0x0)), sprite[SPRITE['TREE']][SPRITE['DAY']]['push'](create_apricot_tree(_0x4822ee * 0.7, ['#0e3022', '#124c34', '#0E3D26', '#155136'], !![], 0x0)), sprite[SPRITE['TREE']][SPRITE['NIGHT']]['push'](create_apricot_tree(_0x4822ee * 1.1, ['#030d14', '#0b3534', '#144443', '#174240'], ![], 0x0)), sprite[SPRITE['TREE']][SPRITE['NIGHT']]['push'](create_apricot_tree(_0x4822ee * 1.1, ['#030d14', '#124949', '#0e3838', '#15514f'], !![], 0x0)), sprite[SPRITE['TREE']][SPRITE['NIGHT']]['push'](create_apricot_tree(_0x4822ee * 0.9, ['#030d14', '#0b3534', '#144443', '#174240'], ![], 0x0)), sprite[SPRITE['TREE']][SPRITE['NIGHT']]['push'](create_apricot_tree(_0x4822ee * 0.9, ['#030d14', '#0b3534', '#144443', '#174240'], !![], 0x0)), sprite[SPRITE['TREE']][SPRITE['NIGHT']]['push'](create_apricot_tree(_0x4822ee * 0.7, ['#030d14', '#082b29', '#073332', '#073332'], ![], 0x0)), sprite[SPRITE['TREE']][SPRITE['NIGHT']]['push'](create_apricot_tree(_0x4822ee * 0.7, ['#030d14', '#082b29', '#073332', '#073332'], !![], 0x0)), sprite[SPRITE['TREE_BRANCH']] = [], sprite[SPRITE['TREE_BRANCH']][SPRITE['DAY']] = [], sprite[SPRITE['TREE_BRANCH']][SPRITE['NIGHT']] = [], sprite[SPRITE['TREE_BRANCH']][SPRITE['DAY']]['push'](CTI(create_apricot_forest(create_tree_branch(_0x4822ee * 1.1, ['#0e3022', '#4d2d14', '#432516', '#096d41', '#08562e', '#107746'], ![]), sprite[SPRITE['TREE']][SPRITE['DAY']][0x0]))), sprite[SPRITE['TREE_BRANCH']][SPRITE['DAY']]['push'](CTI(create_apricot_forest(create_tree_branch(_0x4822ee * 1.1, ['#0e3022', '#4d2d14', '#432516', '#096d41', '#08562e', '#107746'], !![]), sprite[SPRITE['TREE']][SPRITE['DAY']][0x1]))), sprite[SPRITE['TREE_BRANCH']][SPRITE['NIGHT']]['push'](CTI(create_apricot_forest(create_tree_branch(_0x4822ee * 1.1, ['#030d14', '#031619', '#041c21', '#0a3333', '#113f3c', '#113f3c'], ![]), sprite[SPRITE['TREE']][SPRITE['NIGHT']][0x0]))), sprite[SPRITE['TREE_BRANCH']][SPRITE['NIGHT']]['push'](CTI(create_apricot_forest(create_tree_branch(_0x4822ee * 1.1, ['#030d14', '#031619', '#041c21', '#0a3333', '#113f3c', '#113f3c'], !![]), sprite[SPRITE['TREE']][SPRITE['NIGHT']][0x1]))), sprite[SPRITE['TREE_BRANCH']][SPRITE['DAY']]['push'](CTI(create_apricot_forest(create_tree_branch(_0x4822ee * 0.9, ['#0e3022', '#4d2d14', '#432516', '#096d41', '#107746', '#107746'], ![]), sprite[SPRITE['TREE']][SPRITE['DAY']][0x2]))), sprite[SPRITE['TREE_BRANCH']][SPRITE['DAY']]['push'](CTI(create_apricot_forest(create_tree_branch(_0x4822ee * 0.9, ['#0e3022', '#4d2d14', '#432516', '#096d41', '#107746', '#107746'], !![]), sprite[SPRITE['TREE']][SPRITE['DAY']][0x2]))), sprite[SPRITE['TREE_BRANCH']][SPRITE['NIGHT']]['push'](CTI(create_apricot_forest(create_tree_branch(_0x4822ee * 0.9, ['#030d14', '#031619', '#041c21', '#082b29', '#083b3a', '#083b3a'], ![]), sprite[SPRITE['TREE']][SPRITE['NIGHT']][0x2]))), sprite[SPRITE['TREE_BRANCH']][SPRITE['NIGHT']]['push'](CTI(create_apricot_forest(create_tree_branch(_0x4822ee * 0.9, ['#030d14', '#031619', '#041c21', '#082b29', '#083b3a', '#083b3a'], !![]), sprite[SPRITE['TREE']][SPRITE['NIGHT']][0x3]))), sprite[SPRITE['TREE']][SPRITE['DAY']][0x5] = CTI(sprite[SPRITE['TREE']][SPRITE['DAY']][0x5]), sprite[SPRITE['TREE']][SPRITE['DAY']][0x4] = CTI(sprite[SPRITE['TREE']][SPRITE['DAY']][0x4]), sprite[SPRITE['TREE']][SPRITE['DAY']][0x3] = CTI(sprite[SPRITE['TREE']][SPRITE['DAY']][0x3]), sprite[SPRITE['TREE']][SPRITE['DAY']][0x2] = CTI(sprite[SPRITE['TREE']][SPRITE['DAY']][0x2]), sprite[SPRITE['TREE']][SPRITE['DAY']][0x1] = CTI(sprite[SPRITE['TREE']][SPRITE['DAY']][0x1]), sprite[SPRITE['TREE']][SPRITE['DAY']][0x0] = CTI(sprite[SPRITE['TREE']][SPRITE['DAY']][0x0]), sprite[SPRITE['TREE']][SPRITE['NIGHT']][0x5] = CTI(sprite[SPRITE['TREE']][SPRITE['NIGHT']][0x5]), sprite[SPRITE['TREE']][SPRITE['NIGHT']][0x4] = CTI(sprite[SPRITE['TREE']][SPRITE['NIGHT']][0x4]), sprite[SPRITE['TREE']][SPRITE['NIGHT']][0x3] = CTI(sprite[SPRITE['TREE']][SPRITE['NIGHT']][0x3]), sprite[SPRITE['TREE']][SPRITE['NIGHT']][0x2] = CTI(sprite[SPRITE['TREE']][SPRITE['NIGHT']][0x2]), sprite[SPRITE['TREE']][SPRITE['NIGHT']][0x1] = CTI(sprite[SPRITE['TREE']][SPRITE['NIGHT']][0x1]), sprite[SPRITE['TREE']][SPRITE['NIGHT']][0x0] = CTI(sprite[SPRITE['TREE']][SPRITE['NIGHT']][0x0]), sprite[SPRITE['PICK_WOOD']] = [], sprite[SPRITE['PICK_WOOD']][SPRITE['DAY']] = CTI(create_rotated_img(0x4, create_pickaxe(_0x4822ee * 0.75, !![], ['#0d1b1c', '#000000', '#0d1b1c', '#4d2d14', '#432516', '#4d2d14', '#432516']))), sprite[SPRITE['PICK_WOOD']][SPRITE['NIGHT']] = CTI(create_rotated_img(0x4, create_pickaxe(_0x4822ee * 0.75, !![], ['#030d14', '#000000', '#030d14', '#0d2e33', '#0b2326', '#0d2e33', '#0b2326']))), sprite[SPRITE['PICK']] = [], sprite[SPRITE['PICK']][SPRITE['DAY']] = CTI(create_rotated_img(0x4, create_pickaxe(_0x4822ee * 0.75, !![], ['#0d1b1c', '#000000', '#0d1b1c', '#4d2d14', '#432516', '#939393', '#5f6061']))), sprite[SPRITE['PICK']][SPRITE['NIGHT']] = CTI(create_rotated_img(0x4, create_pickaxe(_0x4822ee * 0.75, !![], ['#030d14', '#000000', '#030d14', '#0d2e33', '#0b2326', '#485e66', '#1f343f']))), sprite[SPRITE['PICK_GOLD']] = [], sprite[SPRITE['PICK_GOLD']][SPRITE['DAY']] = CTI(create_rotated_img(0x4, create_pickaxe(_0x4822ee * 0.75, !![], ['#0d1b1c', '#000000', '#0d1b1c', '#493e26', '#382e19', '#c4bc51', '#b29c32']))), sprite[SPRITE['PICK_GOLD']][SPRITE['NIGHT']] = CTI(create_rotated_img(0x4, create_pickaxe(_0x4822ee * 0.75, !![], ['#030d14', '#000000', '#030d14', '#263947', '#263947', '#43aa82', '#29997c']))), sprite[SPRITE['PICK_DIAMOND']] = [], sprite[SPRITE['PICK_DIAMOND']][SPRITE['DAY']] = CTI(create_rotated_img(0x4, create_pickaxe(_0x4822ee * 0.75, !![], ['#0d1b1c', '#000000', '#0d1b1c', '#262114', '#211108', '#63c9d6', '#29aaa1']))), sprite[SPRITE['PICK_DIAMOND']][SPRITE['NIGHT']] = CTI(create_rotated_img(0x4, create_pickaxe(_0x4822ee * 0.75, !![], ['#030d14', '#000000', '#030d14', '#111316', '#0a0b0c', '#73dde5', '#3dc4c0']))), sprite[SPRITE['PICK_AMETHYST']] = [], sprite[SPRITE['PICK_AMETHYST']][SPRITE['DAY']] = CTI(create_rotated_img(0x4, create_pickaxe(_0x4822ee * 0.75, !![], ['#0d1b1c', '#000000', '#0d1b1c', '#262114', '#211108', '#b864d6', '#8c29aa']))), sprite[SPRITE['PICK_AMETHYST']][SPRITE['NIGHT']] = CTI(create_rotated_img(0x4, create_pickaxe(_0x4822ee * 0.75, !![], ['#030d14', '#000000', '#030d14', '#111316', '#0a0b0c', '#8359d3', '#764eb5']))), sprite[SPRITE['PIRATE_SWORD']] = [], sprite[SPRITE['PIRATE_SWORD']][SPRITE['DAY']] = CTI(create_rotated_img(0x3, create_pirate_sword(_0x4822ee * 0.17, !![], ['#0d1b1c', '#4a3a22', '#362818', '#c7c7c7', '#909090', '#eceaea', '#bbbbbb', '#d6d1d1']))), sprite[SPRITE['PIRATE_SWORD']][SPRITE['NIGHT']] = CTI(create_rotated_img(0x3, create_pirate_sword(_0x4822ee * 0.17, !![], ['#0d1b1c', '#0d2e33', '#0b2326', '#59737d', '#364f59', '#618395', '#4d768c', '#54859f']))), sprite[SPRITE['SUGAR_CAN']] = [], sprite[SPRITE['SUGAR_CAN']][SPRITE['DAY']] = CTI(create_rotated_img(0x3, create_sugar_can(_0x4822ee * 0.32, !![], ['#0d1b1c', '#ffffff', '#5f6061', '#eb2933', '#57b74e', '#42a54d', '#ac222a', '#e6636a']))), sprite[SPRITE['SUGAR_CAN']][SPRITE['NIGHT']] = CTI(create_rotated_img(0x3, create_sugar_can(_0x4822ee * 0.42, !![], ['#0d1b1c', '#485e66', '#1f343f', '#0d2e33', '#0b2326']))), sprite[SPRITE['SWORD_WOOD']] = [], sprite[SPRITE['SWORD_WOOD']][SPRITE['DAY']] = CTI(create_rotated_img(0x3, create_sword_wood(_0x4822ee * 0.4, !![], ['#0d1b1c', '#73583e', '#493425', '#7d6144', '#5e4530', '#473221', '#745840']))), sprite[SPRITE['SWORD_WOOD']][SPRITE['NIGHT']] = CTI(create_rotated_img(0x3, create_sword_wood(_0x4822ee * 0.4, !![], ['#0d1b1c', '#0b3d3a', '#092b2a', '#144642', '#082927', '#092b29']))), sprite[SPRITE['SWORD']] = [], sprite[SPRITE['SWORD']][SPRITE['DAY']] = CTI(create_rotated_img(0x3, create_stonesword(_0x4822ee * 0.4, !![], ['#0d1b1c', '#939393', '#5f6061', '#b1afaf', '#493d36', '#332b28']))), sprite[SPRITE['SWORD']][SPRITE['NIGHT']] = CTI(create_rotated_img(0x3, create_stonesword(_0x4822ee * 0.4, !![], ['#0d1b1c', '#485e66', '#1f343f', '#5d757e', '#0d2e33', '#0b2326']))), sprite[SPRITE['SWORD_GOLD']] = [], sprite[SPRITE['SWORD_GOLD']][SPRITE['DAY']] = CTI(create_rotated_img(0x3, create_goldsword(_0x4822ee * 0.4, !![], ['#0d1b1c', '#c4bc51', '#b29c32', '#c4bc51', '#493e26', '#382e19']))), sprite[SPRITE['SWORD_GOLD']][SPRITE['NIGHT']] = CTI(create_rotated_img(0x3, create_goldsword(_0x4822ee * 0.4, !![], ['#0d1b1c', '#43aa82', '#29997c', '#54bf96', '#263947', '#182935']))), sprite[SPRITE['SWORD_DIAMOND']] = [], sprite[SPRITE['SWORD_DIAMOND']][SPRITE['DAY']] = CTI(create_rotated_img(0x3, create_diamondsword(_0x4822ee * 0.4, !![], ['#0d1b1c', '#6ad9e8', '#29aaa1', '#95e9f5', '#022320', '#011e19', '#FFFFFF']))), sprite[SPRITE['SWORD_DIAMOND']][SPRITE['NIGHT']] = CTI(create_rotated_img(0x3, create_diamondsword(_0x4822ee * 0.4, !![], ['#0d1b1c', '#73dde5', '#3dc4c0', '#93eaf1', '#111316', '#0a0b0c']))), sprite[SPRITE['SWORD_AMETHYST']] = [], sprite[SPRITE['SWORD_AMETHYST']][SPRITE['DAY']] = CTI(create_rotated_img(0x3, create_amesword(_0x4822ee * 0.4, !![], ['#0d1b1c', '#b864d6', '#8c29aa', '#cc81e7', '#262114', '#211108', '#FFFFFF']))), sprite[SPRITE['SWORD_AMETHYST']][SPRITE['NIGHT']] = CTI(create_rotated_img(0x3, create_amesword(_0x4822ee * 0.4, !![], ['#0d1b1c', '#8359d3', '#764eb5', '#966de6', '#111316', '#0a0b0c']))), sprite[SPRITE['HERB']] = [], sprite[SPRITE['HERB']][SPRITE['DAY']] = [], sprite[SPRITE['HERB']][SPRITE['NIGHT']] = [], sprite[SPRITE['HERB']][SPRITE['DAY']]['push'](CTI(create_herb(_0x4822ee * 0.9, ![], ['#1b4936'], 0x0))), sprite[SPRITE['HERB']][SPRITE['DAY']]['push'](CTI(create_herb(_0x4822ee * 0.9, ![], ['#1b4936'], 0x1))), sprite[SPRITE['HERB']][SPRITE['DAY']]['push'](CTI(create_herb(_0x4822ee * 0.9, ![], ['#1b4936'], 0x2))), sprite[SPRITE['HERB']][SPRITE['NIGHT']]['push'](CTI(create_herb(_0x4822ee * 0.9, ![], ['#083033'], 0x0))), sprite[SPRITE['HERB']][SPRITE['NIGHT']]['push'](CTI(create_herb(_0x4822ee * 0.9, ![], ['#083033'], 0x1))), sprite[SPRITE['HERB']][SPRITE['NIGHT']]['push'](CTI(create_herb(_0x4822ee * 0.9, ![], ['#083033'], 0x2))), sprite[SPRITE['HERB']][SPRITE['DAY']]['push'](CTI(create_leaf(_0x4822ee * 0.8, ['#241301', '#ba6b0e', '#6d3f04']))), sprite[SPRITE['HERB']][SPRITE['DAY']]['push'](CTI(create_leaf(_0x4822ee * 0.8, ['#292002', '#ba930e', '#6d5704']))), sprite[SPRITE['HERB']][SPRITE['NIGHT']]['push'](CTI(create_leaf(_0x4822ee * 0.9, ['#052919', '#0a4738', '#06321f']))), sprite[SPRITE['HERB']][SPRITE['NIGHT']]['push'](CTI(create_leaf(_0x4822ee * 0.8, ['#052918', '#08491c', '#063417']))), sprite[SPRITE['SIGN']] = [], sprite[SPRITE['SIGN']][SPRITE['DAY']] = CTI(create_rotated_img(Math['PI'] / 0x2, create_sign(_0x4822ee * 0.25, !![], ['#0d1b1c', '#44301b', '#57442a', '#523e26']))), sprite[SPRITE['SIGN']][SPRITE['NIGHT']] = CTI(create_rotated_img(Math['PI'] / 0x2, create_sign(_0x4822ee * 0.25, !![], ['#030d14', '#082b22', '#0a2f2b', '#072824']))), sprite[SPRITE['SIGN_BUTTON']] = [], sprite[SPRITE['SIGN_BUTTON']]['push'](CTI(create_sign_button(_0x4822ee * 0.25, ['#44301b', '#57442a', '#523e26'], 0x0))), sprite[SPRITE['SIGN_BUTTON']]['push'](CTI(create_sign_button(_0x4822ee * 0.25, ['#4f371e', '#624d30', '#5e472c', '#eda80d'], 0x1))), sprite[SPRITE['SIGN_BUTTON']]['push'](CTI(create_sign_button(_0x4822ee * 0.25, ['#382715', '#4e3c25', '#473620', '#d7990c'], 0x2))), sprite[SPRITE['SYMBOLS']] = [], sprite[SPRITE['SYMBOLS']][SPRITE['DAY']] = [], sprite[SPRITE['SYMBOLS']][SPRITE['NIGHT']] = [], sprite[SPRITE['SYMBOLS']][SPRITE['DAY']]['push'](CTI(create_rotated_img(Math['PI'] / 0x2, create_symbols(_0x4822ee * 0.25, ![], ['#0d1b1c', '#44301b', '#57442a', '#523e26', '#9b2b25'], 0x1)))), sprite[SPRITE['SYMBOLS']][SPRITE['NIGHT']]['push'](CTI(create_rotated_img(Math['PI'] / 0x2, create_symbols(_0x4822ee * 0.25, ![], ['#030d14', '#082b22', '#0a2f2b', '#072824', '#9b2b25'], 0x1)))), sprite[SPRITE['SYMBOLS']][SPRITE['DAY']]['push'](CTI(create_rotated_img(Math['PI'] / 0x2, create_symbols(_0x4822ee * 0.25, ![], ['#0d1b1c', '#44301b', '#57442a', '#523e26', '#4f9246'], 0x2)))), sprite[SPRITE['SYMBOLS']][SPRITE['NIGHT']]['push'](CTI(create_rotated_img(Math['PI'] / 0x2, create_symbols(_0x4822ee * 0.25, ![], ['#030d14', '#082b22', '#0a2f2b', '#072824', '#4f9246'], 0x2)))), sprite[SPRITE['SYMBOLS']][SPRITE['DAY']]['push'](CTI(create_rotated_img(Math['PI'] / 0x2, create_symbols(_0x4822ee * 0.25, ![], ['#0d1b1c', '#44301b', '#57442a', '#523e26', '#9b2b25', '#ffffff'], 0x3)))), sprite[SPRITE['SYMBOLS']][SPRITE['NIGHT']]['push'](CTI(create_rotated_img(Math['PI'] / 0x2, create_symbols(_0x4822ee * 0.25, ![], ['#030d14', '#082b22', '#0a2f2b', '#072824', '#9b2b25', '#ffffff'], 0x3)))), sprite[SPRITE['SYMBOLS']][SPRITE['DAY']]['push'](CTI(create_rotated_img(Math['PI'] / 0x2, create_symbols(_0x4822ee * 0.25, ![], ['#0d1b1c', '#44301b', '#57442a', '#523e26', '#9b2b25', '#362513'], 0x4)))), sprite[SPRITE['SYMBOLS']][SPRITE['NIGHT']]['push'](CTI(create_rotated_img(Math['PI'] / 0x2, create_symbols(_0x4822ee * 0.25, ![], ['#030d14', '#082b22', '#0a2f2b', '#072824', '#9b2b25', '#664d2e'], 0x4)))), sprite[SPRITE['PLANT']] = [], sprite[SPRITE['PLANT']][SPRITE['DAY']] = [CTI(create_plant(_0x4822ee * 1.2, !![], ['#0e3022', '#0b8052', '#077b49']))], sprite[SPRITE['PLANT']][SPRITE['NIGHT']] = [CTI(create_plant(_0x4822ee * 1.2, !![], ['#030d14', '#084442', '#0a4049']))], sprite[SPRITE['DRIED_PLANT']] = [], sprite[SPRITE['DRIED_PLANT']][SPRITE['DAY']] = CTI(create_plant(_0x4822ee * 0.8, !![], ['#0e3022', '#68622D', '#665329'])), sprite[SPRITE['DRIED_PLANT']][SPRITE['NIGHT']] = CTI(create_plant(_0x4822ee * 0.8, !![], ['#030d14', '#0F3A24', '#083326'])), sprite[SPRITE['PUMPKIN']] = [], sprite[SPRITE['PUMPKIN']][SPRITE['DAY']] = CTI(create_pumpkin(_0x4822ee * 0.5, !![], ['#1b170c', '#c67933', '#a6692f', '#bd7533', '#86683e', '#6e502d'])), sprite[SPRITE['PUMPKIN']][SPRITE['NIGHT']] = CTI(create_pumpkin(_0x4822ee * 0.5, !![], ['#030d14', '#0a3429', '#0a2f2b', '#082f25', '#082925', '#0a3630'])), sprite[SPRITE['GARLIC']] = [], sprite[SPRITE['GARLIC']][SPRITE['DAY']] = CTI(create_garlic(_0x4822ee * 0.5, !![], ['#1b170c', '#e8e8e8', '#d2cfcf', '#e0e1e0', '#c4c4c4'])), sprite[SPRITE['GARLIC']][SPRITE['NIGHT']] = CTI(create_garlic(_0x4822ee * 0.5, !![], ['#030d14', '#2b5254', '#264a46', '#396260', '#244743'])), sprite[SPRITE['THORNBUSH']] = [], sprite[SPRITE['THORNBUSH']][SPRITE['DAY']] = CTI(create_brambles(_0x4822ee * 0.5, !![], ['#1b170c', '#349970', '#245c45', '#348361', '#e8e8e8', '#bbbbbb'])), sprite[SPRITE['THORNBUSH']][SPRITE['NIGHT']] = CTI(create_brambles(_0x4822ee * 0.5, !![], ['#030d14', '#0d5551', '#074440', '#0f5c58', '#4e8784', '#3f7572'])), sprite[SPRITE['PLANT_MINI']] = [], sprite[SPRITE['PLANT_MINI']][SPRITE['DAY']] = CTI(create_plant(_0x4822ee * 0.8, !![], ['#0e3022', '#0b8052', '#077b49'])), sprite[SPRITE['PLANT_MINI']][SPRITE['NIGHT']] = CTI(create_plant(_0x4822ee * 0.8, !![], ['#030d14', '#084442', '#0a4049'])), sprite[SPRITE['DRIED_PUMPKIN']] = [], sprite[SPRITE['DRIED_PUMPKIN']][SPRITE['DAY']] = CTI(create_pumpkin(_0x4822ee * 0.5, !![], ['#1b170c', '#68622D', '#665329', '#5e5823', '#86683e', '#6e502d'])), sprite[SPRITE['DRIED_PUMPKIN']][SPRITE['NIGHT']] = CTI(create_pumpkin(_0x4822ee * 0.5, !![], ['#030d14', '#0F3A24', '#083326', '#0c301e', '#062a1f', '#083b2b'])), sprite[SPRITE['DRIED_GARLIC']] = [], sprite[SPRITE['DRIED_GARLIC']][SPRITE['DAY']] = CTI(create_garlic(_0x4822ee * 0.5, !![], ['#1b170c', '#adbe9e', '#7e9178', '#84aa84', '#527556'])), sprite[SPRITE['DRIED_GARLIC']][SPRITE['NIGHT']] = CTI(create_garlic(_0x4822ee * 0.5, !![], ['#030d14', '#164a44', '#124244', '#13373b', '#133e3e'])), sprite[SPRITE['DRIED_THORNBUSH']] = [], sprite[SPRITE['DRIED_THORNBUSH']][SPRITE['DAY']] = CTI(create_brambles(_0x4822ee * 0.5, !![], ['#1b170c', '#7a9160', '#4a5e3c', '#637e5a', '#c5cfc0', '#8a9685'])), sprite[SPRITE['DRIED_THORNBUSH']][SPRITE['NIGHT']] = CTI(create_brambles(_0x4822ee * 0.5, !![], ['#030d14', '#3e5d5b', '#2f4442', '#354e4c', '#637d7c', '#556b6a'])), sprite[SPRITE['GIFT']] = [], sprite[SPRITE['GIFT']][SPRITE['DAY']] = CTI(create_present(_0x4822ee * 0.45, !![], ['#0e3022', '#ac222a', '#98171e', '#22a84f', '#1f924a'])), sprite[SPRITE['GIFT']][SPRITE['NIGHT']] = CTI(create_present(_0x4822ee * 0.45, !![], ['#0e3022', '#19386e', '#0b2752', '#124252', '#0d3441'])), sprite[SPRITE['HURT_GIFT']] = CTI(create_present(_0x4822ee * 0.65, !![], ['rgba(14,\x2048,\x2034,\x200)', '#BB0000', '#BB0000', '#BB0000', '#BB0000'])), sprite[SPRITE['FRUIT']] = [], sprite[SPRITE['FRUIT']][SPRITE['DAY']] = CTI(create_fruit(_0x4822ee * 1.4, ![], ['#ac222a', '#e6636a'])), sprite[SPRITE['FRUIT']][SPRITE['NIGHT']] = CTI(create_fruit(_0x4822ee * 1.4, ![], ['#46195e', '#744188'])), sprite[SPRITE['FIRE']] = [], sprite[SPRITE['FIRE']][SPRITE['DAY']] = CTI(create_fire(_0x4822ee * 0.9, ![], ['#efd435', '#ec8d35', '#e96132'])), sprite[SPRITE['FIRE']][SPRITE['NIGHT']] = CTI(create_fire(_0x4822ee * 0.9, ![], ['#efdb7b', '#efe854', '#e8ef62'])), sprite[SPRITE['BIG_FIRE_WOOD']] = [], sprite[SPRITE['BIG_FIRE_WOOD']][SPRITE['DAY']] = CTI(create_big_fire_wood(_0x4822ee * 0.9, ![], ['#4d2d14', '#432516'])), sprite[SPRITE['BIG_FIRE_WOOD']][SPRITE['NIGHT']] = CTI(create_big_fire_wood(_0x4822ee * 0.9, ![], ['#282404', '#0a0a01'])), sprite[SPRITE['WOOD_FIRE']] = [], sprite[SPRITE['WOOD_FIRE']][SPRITE['DAY']] = CTI(create_wood_fire(_0x4822ee * 0.9, ![], ['#4d2d14', '#432516'])), sprite[SPRITE['WOOD_FIRE']][SPRITE['NIGHT']] = CTI(create_wood_fire(_0x4822ee * 0.9, ![], ['#282404', '#0a0a01'])), sprite[SPRITE['HALO_FIRE']] = [], sprite[SPRITE['HALO_FIRE']][SPRITE['DAY']] = CTI(create_halo_fire(_0x4822ee * 0.9, ![], ['#efd435'])), sprite[SPRITE['HALO_FIRE']][SPRITE['NIGHT']] = CTI(create_halo_fire(_0x4822ee * 0.9, ![], ['#fffabb'])), sprite[SPRITE['GROUND_FIRE']] = [], sprite[SPRITE['GROUND_FIRE']][SPRITE['DAY']] = CTI(create_ground_fire(_0x4822ee * 0.9, ![], ['#efd435'])), sprite[SPRITE['GROUND_FIRE']][SPRITE['NIGHT']] = CTI(create_ground_fire(_0x4822ee * 0.9, ![], ['#fffabb'])), sprite[SPRITE['HALO_FIRE_PUMPKIN']] = [], sprite[SPRITE['HALO_FIRE_PUMPKIN']][SPRITE['DAY']] = CTI(create_halo_fire(_0x4822ee * 0.9, ![], ['#efd435'])), sprite[SPRITE['HALO_FIRE_PUMPKIN']][SPRITE['NIGHT']] = CTI(create_halo_fire(_0x4822ee * 0.9, ![], ['rgba(255,\x2084,\x200,\x201)'])), sprite[SPRITE['GROUND_FIRE_PUMPKIN']] = [], sprite[SPRITE['GROUND_FIRE_PUMPKIN']][SPRITE['DAY']] = CTI(create_ground_fire(_0x4822ee * 0.9, ![], ['#efd435'])), sprite[SPRITE['GROUND_FIRE_PUMPKIN']][SPRITE['NIGHT']] = CTI(create_ground_fire(_0x4822ee * 0.9, ![], ['#ff5704'])), sprite[SPRITE['GEAR']] = CTI(create_gear(_0x4822ee, '#ffffff', 0x1)), sprite[SPRITE['GEAR2']] = CTI(create_gear(_0x4822ee * 1.5, '#ffffff', 0x1)), sprite[SPRITE['YOUR_SCORE']] = CTI(create_text(_0x4822ee, 'Your\x20score:', 0xf * _0x4822ee, '#FFF')), sprite[SPRITE['WINDMILL_CASES']] = CTI(create_windmill_chest(_0x4822ee * 0.9, ['#596560', '#394841', '#543B1C', '#694D28', '#4D3C1A', '#694D28', '#DEE2E0', '#CDCCCC', '#7B5A31', '#7E8A85'])), sprite[SPRITE['EXTRACTOR_CASES']] = IMAGES['EXTRACTOR_CASES'], sprite[SPRITE['WINDMILL']] = [], sprite[SPRITE['WINDMILL']][SPRITE['DAY']] = CTI(create_windmill(_0x4822ee * 1.5, !![], ['#0d1b1c', '#596560', '#394841', '#67766F', '#46554D', '#4C3B19', '#674C2A', '#7C5A29', '#596560', '#394841'])), sprite[SPRITE['WINDMILL']][SPRITE['NIGHT']] = CTI(create_windmill(_0x4822ee * 1.5, !![], ['#030d14', '#163A3A', '#214C4B', '#1a4545', '#225755', '#07393D', '#07454a', '#0c484d', '#163A3A', '#214C4B'])), sprite[SPRITE['WINDMILL_WINGS']] = [], sprite[SPRITE['WINDMILL_WINGS']][SPRITE['DAY']] = CTI(create_windmill_wing(_0x4822ee * 0x2, !![], ['#0d1b1c', '#596560', '#394841', '#67766F', '#46554D', '#4C3B19', '#674C2A', '#7C5A29', '#596560', '#394841'])), sprite[SPRITE['WINDMILL_WINGS']][SPRITE['NIGHT']] = CTI(create_windmill_wing(_0x4822ee * 0x2, !![], ['#030d14', '#163A3A', '#214C4B', '#1a4545', '#225755', '#07393D', '#07454a', '#0c484d', '#163A3A', '#214C4B'])), sprite[SPRITE['WINDMILL_HEAD']] = [], sprite[SPRITE['WINDMILL_HEAD']][SPRITE['DAY']] = CTI(create_windmill_head(_0x4822ee * 1.5, !![], ['#0d1b1c', '#596560', '#394841', '#67766F', '#46554D', '#4C3B19', '#674C2A', '#7C5A29', '#596560', '#394841'])), sprite[SPRITE['WINDMILL_HEAD']][SPRITE['NIGHT']] = CTI(create_windmill_head(_0x4822ee * 1.5, !![], ['#030d14', '#163A3A', '#214C4B', '#1a4545', '#225755', '#07393D', '#07454a', '#0c484d', '#163A3A', '#214C4B'])), sprite[SPRITE['WILD_WHEAT']] = [], sprite[SPRITE['WILD_WHEAT']][SPRITE['DAY']] = CTI(create_wheat(_0x4822ee * 2.2, !![], ['#A89F67', '#9E8456'])), sprite[SPRITE['WILD_WHEAT']][SPRITE['NIGHT']] = CTI(create_wheat(_0x4822ee * 2.2, !![], ['#0B4049', '#08383D'])), sprite[SPRITE['DRIED_WHEAT']] = [], sprite[SPRITE['DRIED_WHEAT']][SPRITE['DAY']] = CTI(create_wheat(_0x4822ee * 2.2, !![], ['#68622D', '#665329'])), sprite[SPRITE['DRIED_WHEAT']][SPRITE['NIGHT']] = CTI(create_wheat(_0x4822ee * 2.2, !![], ['#0F3A24', '#083326'])), sprite[SPRITE['WHEAT_MOB']] = [], sprite[SPRITE['WHEAT_MOB']][SPRITE['DAY']] = CTI(create_seed(_0x4822ee * 0.8, !![], ['#A89F67', '#9E8456'])), sprite[SPRITE['WHEAT_MOB']][SPRITE['NIGHT']] = CTI(create_seed(_0x4822ee * 0.8, !![], ['#15514F', '#0F3F3D'])), sprite[SPRITE['PUMPKIN_SEED_MOB']] = [], sprite[SPRITE['PUMPKIN_SEED_MOB']][SPRITE['DAY']] = CTI(create_seed(_0x4822ee * 0.8, !![], ['#c67933', '#b17238'])), sprite[SPRITE['PUMPKIN_SEED_MOB']][SPRITE['NIGHT']] = CTI(create_seed(_0x4822ee * 0.8, !![], ['#043c37', '#032b23'])), sprite[SPRITE['ALOE_VERA_SEED_MOB']] = [], sprite[SPRITE['ALOE_VERA_SEED_MOB']][SPRITE['DAY']] = CTI(create_seed(_0x4822ee * 0.8, !![], ['#3a8214', '#4a9c1e'])), sprite[SPRITE['ALOE_VERA_SEED_MOB']][SPRITE['NIGHT']] = CTI(create_seed(_0x4822ee * 0.8, !![], ['#032d29', '#044640'])), sprite[SPRITE['GARLIC_SEED_MOB']] = [], sprite[SPRITE['GARLIC_SEED_MOB']][SPRITE['DAY']] = CTI(create_seed(_0x4822ee * 0.8, !![], ['#e8e8e8', '#bbbbbb'])), sprite[SPRITE['GARLIC_SEED_MOB']][SPRITE['NIGHT']] = CTI(create_seed(_0x4822ee * 0.8, !![], ['#1c6161', '#07413f'])), sprite[SPRITE['THORNBUSH_SEED_MOB']] = [], sprite[SPRITE['THORNBUSH_SEED_MOB']][SPRITE['DAY']] = CTI(create_seed(_0x4822ee * 0.8, !![], ['#328a56', '#449573'])), sprite[SPRITE['THORNBUSH_SEED_MOB']][SPRITE['NIGHT']] = CTI(create_seed(_0x4822ee * 0.8, !![], ['#043c37', '#032b23'])), sprite[SPRITE['CARROT_SEED_MOB']] = [], sprite[SPRITE['CARROT_SEED_MOB']][SPRITE['DAY']] = CTI(create_seed(_0x4822ee * 0.8, !![], ['#c98e2f', '#a36b11'])), sprite[SPRITE['CARROT_SEED_MOB']][SPRITE['NIGHT']] = CTI(create_seed(_0x4822ee * 0.8, !![], ['#043c37', '#032b23'])), sprite[SPRITE['TOMATO_SEED_MOB']] = [], sprite[SPRITE['TOMATO_SEED_MOB']][SPRITE['DAY']] = CTI(create_seed(_0x4822ee * 0.8, !![], ['#b22419', '#99110e'])), sprite[SPRITE['TOMATO_SEED_MOB']][SPRITE['NIGHT']] = CTI(create_seed(_0x4822ee * 0.8, !![], ['#04323c', '#03222b'])), sprite[SPRITE['WATERMELON_SEED_MOB']] = [], sprite[SPRITE['WATERMELON_SEED_MOB']][SPRITE['DAY']] = CTI(create_seed(_0x4822ee * 0.8, !![], ['#13a56d', '#098a58'])), sprite[SPRITE['WATERMELON_SEED_MOB']][SPRITE['NIGHT']] = CTI(create_seed(_0x4822ee * 0.8, !![], ['#043c37', '#032b23'])), sprite[SPRITE['WINDMILL_WHEAT_SEED']] = create_craft_button(0x1, [{
        'f': create_wheat,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#A89F67', '#9E8456']
    }], 1.2, ['#d2c77b', '#e7dc8f', '#bfb360'], 0.7), sprite[SPRITE['BREAD_OVEN_WOOD']] = create_craft_button(0x1, [{
        'f': create_wood_fire,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': -Math['PI'] / 0x5,
        'c': ['#4d2d14', '#432516']
    }], 0.3, ['#d2c77b', '#e7dc8f', '#bfb360'], 0.7), sprite[SPRITE['BREAD_OVEN_BREAD']] = create_craft_button(0x1, [{
        'f': create_bread,
        'x': 0x0,
        'y': -0x5,
        'a': 0x1,
        'r': 0x0,
        'c': ['#1d051e', '#bf8d51', '#7d5133', '#e8d6bf', '#e0c8a9', '#ab7a3f']
    }], 0.15, ['#d2c77b', '#e7dc8f', '#bfb360'], 0.7), sprite[SPRITE['EMPTY_SLOT']] = create_craft_button(0.9, [], 0.3, ['#2b5c48', '#2b5c48', '#2b5c48'], 0.5), sprite[SPRITE['PLANT_SEED']] = [], sprite[SPRITE['PLANT_SEED']][SPRITE['DAY']] = CTI(create_plant_seed(_0x4822ee * 0.9, ![], ['#7d613e', '#9e7e5a'])), sprite[SPRITE['PLANT_SEED']][SPRITE['NIGHT']] = CTI(create_plant_seed(_0x4822ee * 0.9, ![], ['#084442', '#125e5a'])), sprite[SPRITE['WHEAT_SEED']] = [], sprite[SPRITE['WHEAT_SEED']][SPRITE['DAY']] = CTI(create_plant_seed(_0x4822ee * 0.9, ![], ['#9E8456', '#A89F67'])), sprite[SPRITE['WHEAT_SEED']][SPRITE['NIGHT']] = CTI(create_plant_seed(_0x4822ee * 0.9, ![], ['#1b6f6a', '#0d4e4c'])), sprite[SPRITE['WHEAT_SEED_DRIED']] = [], sprite[SPRITE['WHEAT_SEED_DRIED']][SPRITE['DAY']] = CTI(create_plant_seed(_0x4822ee * 0.9, ![], ['#665329', '#68622D'])), sprite[SPRITE['WHEAT_SEED_DRIED']][SPRITE['NIGHT']] = CTI(create_plant_seed(_0x4822ee * 0.9, ![], ['#083326', '#0F3A24'])), sprite[SPRITE['PLANT_PUMPKIN']] = [], sprite[SPRITE['PLANT_PUMPKIN']][SPRITE['DAY']] = CTI(create_plant_seed(_0x4822ee * 0.9, ![], ['#c67933', '#ec952d'])), sprite[SPRITE['PLANT_PUMPKIN']][SPRITE['NIGHT']] = CTI(create_plant_seed(_0x4822ee * 0.9, ![], ['#0e6553', '#094437'])), sprite[SPRITE['PLANT_ALOE_VERA']] = [], sprite[SPRITE['PLANT_ALOE_VERA']][SPRITE['DAY']] = CTI(create_plant_seed(_0x4822ee * 0.9, ![], ['#375809', '#4b770e'])), sprite[SPRITE['PLANT_ALOE_VERA']][SPRITE['NIGHT']] = CTI(create_plant_seed(_0x4822ee * 0.9, ![], ['#09542d', '#0d5d2f'])), sprite[SPRITE['PLANT_ALOE_VERA_DRIED']] = [], sprite[SPRITE['PLANT_ALOE_VERA_DRIED']][SPRITE['DAY']] = CTI(create_plant_seed(_0x4822ee * 0.9, ![], ['#585809', '#72770e'])), sprite[SPRITE['PLANT_ALOE_VERA_DRIED']][SPRITE['NIGHT']] = CTI(create_plant_seed(_0x4822ee * 0.9, ![], ['#295209', '#305d0d'])), sprite[SPRITE['PLANT_GARLIC']] = [], sprite[SPRITE['PLANT_GARLIC']][SPRITE['DAY']] = CTI(create_plant_seed(_0x4822ee * 0.9, ![], ['#b9b094', '#e2d2c0'])), sprite[SPRITE['PLANT_GARLIC']][SPRITE['NIGHT']] = CTI(create_plant_seed(_0x4822ee * 0.9, ![], ['#126366', '#0d484b'])), sprite[SPRITE['PLANT_THORNBUSH']] = [], sprite[SPRITE['PLANT_THORNBUSH']][SPRITE['DAY']] = CTI(create_plant_seed(_0x4822ee * 0.9, ![], ['#3f8662', '#30915d'])), sprite[SPRITE['PLANT_THORNBUSH']][SPRITE['NIGHT']] = CTI(create_plant_seed(_0x4822ee * 0.9, ![], ['#0e6553', '#094437'])), sprite[SPRITE['PLANT_PUMPKIN_DRIED']] = [], sprite[SPRITE['PLANT_PUMPKIN_DRIED']][SPRITE['DAY']] = CTI(create_plant_seed(_0x4822ee * 0.9, ![], ['#c79153', '#dfa868'])), sprite[SPRITE['PLANT_PUMPKIN_DRIED']][SPRITE['NIGHT']] = CTI(create_plant_seed(_0x4822ee * 0.9, ![], ['#073927', '#075040'])), sprite[SPRITE['PLANT_GARLIC_DRIED']] = [], sprite[SPRITE['PLANT_GARLIC_DRIED']][SPRITE['DAY']] = CTI(create_plant_seed(_0x4822ee * 0.9, ![], ['#768b5b', '#819984'])), sprite[SPRITE['PLANT_GARLIC_DRIED']][SPRITE['NIGHT']] = CTI(create_plant_seed(_0x4822ee * 0.9, ![], ['#0c4540', '#0e5153'])), sprite[SPRITE['PLANT_THORNBUSH_DRIED']] = [], sprite[SPRITE['PLANT_THORNBUSH_DRIED']][SPRITE['DAY']] = CTI(create_plant_seed(_0x4822ee * 0.9, ![], ['#567465', '#627c6e'])), sprite[SPRITE['PLANT_THORNBUSH_DRIED']][SPRITE['NIGHT']] = CTI(create_plant_seed(_0x4822ee * 0.9, ![], ['#073927', '#075040'])), sprite[SPRITE['PLANT_CARROT']] = [], sprite[SPRITE['PLANT_CARROT']][SPRITE['DAY']] = CTI(create_plant_seed(_0x4822ee * 0.9, ![], ['#996b3a', '#bf956b'])), sprite[SPRITE['PLANT_CARROT']][SPRITE['NIGHT']] = CTI(create_plant_seed(_0x4822ee * 0.9, ![], ['#0e6553', '#094437'])), sprite[SPRITE['PLANT_CARROT_DRIED']] = [], sprite[SPRITE['PLANT_CARROT_DRIED']][SPRITE['DAY']] = CTI(create_plant_seed(_0x4822ee * 0.9, ![], ['#7a634a', '#a68f77'])), sprite[SPRITE['PLANT_CARROT_DRIED']][SPRITE['NIGHT']] = CTI(create_plant_seed(_0x4822ee * 0.9, ![], ['#1e4d43', '#113c32'])), sprite[SPRITE['PLANT_TOMATO']] = [], sprite[SPRITE['PLANT_TOMATO']][SPRITE['DAY']] = CTI(create_plant_seed(_0x4822ee * 0.9, ![], ['#99403c', '#bc796c'])), sprite[SPRITE['PLANT_TOMATO']][SPRITE['NIGHT']] = CTI(create_plant_seed(_0x4822ee * 0.9, ![], ['#1e434d', '#11303c'])), sprite[SPRITE['PLANT_TOMATO_DRIED']] = [], sprite[SPRITE['PLANT_TOMATO_DRIED']][SPRITE['DAY']] = CTI(create_plant_seed(_0x4822ee * 0.9, ![], ['#88504e', '#b3857c'])), sprite[SPRITE['PLANT_TOMATO_DRIED']][SPRITE['NIGHT']] = CTI(create_plant_seed(_0x4822ee * 0.9, ![], ['#253b41', '#162930'])), sprite[SPRITE['PLANT_WATERMELON']] = [], sprite[SPRITE['PLANT_WATERMELON']][SPRITE['DAY']] = CTI(create_plant_seed(_0x4822ee * 0.9, ![], ['#0f8870', '#23af93'])), sprite[SPRITE['PLANT_WATERMELON']][SPRITE['NIGHT']] = CTI(create_plant_seed(_0x4822ee * 0.9, ![], ['#032829', '#083233'])), sprite[SPRITE['PLANT_WATERMELON_DRIED']] = [], sprite[SPRITE['PLANT_WATERMELON_DRIED']][SPRITE['DAY']] = CTI(create_plant_seed(_0x4822ee * 0.9, ![], ['#618a20', '#84a74e'])), sprite[SPRITE['PLANT_WATERMELON_DRIED']][SPRITE['NIGHT']] = CTI(create_plant_seed(_0x4822ee * 0.9, ![], ['#1f4632', '#335d47'])), sprite[SPRITE['WORKBENCH']] = [], sprite[SPRITE['WORKBENCH']][SPRITE['DAY']] = CTI(create_workbench(_0x4822ee * 1.2, !![], ['#0d1b1c', '#4d2d14', '#432516', '#756e52', '#663f22', '#9e9577'])), sprite[SPRITE['WORKBENCH']][SPRITE['NIGHT']] = CTI(create_workbench(_0x4822ee * 1.2, !![], ['#030d14', '#0d2e33', '#072322', '#3e706b', '#123d3f', '#4e827c'])), (sprite[SPRITE['WALL']] = [], sprite[SPRITE['WALL']][SPRITE['DAY']] = CTI(create_wall(_0x4822ee * 0x1, !![], ['#0d1b1c', '#4c3a15', '#634828', '#564021', '#634828', '#4c3a15']))), sprite[SPRITE['WALL']][SPRITE['NIGHT']] = CTI(create_wall(_0x4822ee * 0x1, !![], ['#030d14', '#0d2e33', '#184747', '#123b3f', '#0d2e33', '#174444'])), (sprite[SPRITE['DIAMOND_WALL']] = [], sprite[SPRITE['DIAMOND_WALL']][SPRITE['DAY']] = CTI(create_wall_diamond(_0x4822ee * 0x1, !![], ['#0d1b1c', '#5cc5ce', '#89d1d4', '#86d0d1', '#95d5d8', '#e0f2f6', '#b3e0e3']))), sprite[SPRITE['DIAMOND_WALL']][SPRITE['NIGHT']] = CTI(create_wall_diamond(_0x4822ee * 0x1, !![], ['#030d14', '#2b9390', '#43b5af', '#43b5af', '#4bbcb4', '#83ddd4', '#59c9c0'])), (sprite[SPRITE['AMETHYST_WALL']] = [], sprite[SPRITE['AMETHYST_WALL']][SPRITE['DAY']] = CTI(create_wall_stone(_0x4822ee * 0x1, !![], ['#0d1b1c', '#b15ecf', '#8c29aa', '#c26de0', '#af59cd', '#d588f1']))), sprite[SPRITE['AMETHYST_WALL']][SPRITE['NIGHT']] = CTI(create_wall_stone(_0x4822ee * 0x1, !![], ['#030d14', '#8359d3', '#764eb5', '#8f65de', '#7f55cc', '#9d77e6'])), (sprite[SPRITE['STONE_WALL']] = [], sprite[SPRITE['STONE_WALL']][SPRITE['DAY']] = CTI(create_wall_stone(_0x4822ee * 0x1, !![], ['#0d1b1c', '#6a7570', '#939995', '#9baaa3', '#adbcb5', '#8a938e']))), sprite[SPRITE['STONE_WALL']][SPRITE['NIGHT']] = CTI(create_wall_stone(_0x4822ee * 0x1, !![], ['#030d14', '#163a3a', '#214c4b', '#1f4948', '#295957', '#1f5955'])), (sprite[SPRITE['GOLD_WALL']] = [], sprite[SPRITE['GOLD_WALL']][SPRITE['DAY']] = CTI(create_wall_gold(_0x4822ee * 0x1, !![], ['#0d1b1c', '#877d36', '#a08f47', '#a7983c', '#b29e4d', '#c1b06b']))), sprite[SPRITE['GOLD_WALL']][SPRITE['NIGHT']] = CTI(create_wall_gold(_0x4822ee * 0x1, !![], ['#030d14', '#1f4948', '#215e55', '#1f6058', '#2a7773', '#2c7a70'])), (sprite[SPRITE['SPIKE']] = [], sprite[SPRITE['SPIKE']][SPRITE['DAY']] = CTI(create_spike(_0x4822ee * 0.8, !![], ['#0d1b1c', '#5f6061', '#939393', '#4c3a15', '#634828', '#564021', '#634828', '#4c3a15']))), sprite[SPRITE['SPIKE']][SPRITE['NIGHT']] = CTI(create_spike(_0x4822ee * 0.8, !![], ['#030d14', '#1f343f', '#485e66', '#0d2e33', '#184747', '#123b3f', '#0d2e33', '#174444'])), (sprite[SPRITE['GOLD_SPIKE']] = [], sprite[SPRITE['GOLD_SPIKE']][SPRITE['DAY']] = CTI(create_spike_gold(_0x4822ee * 0.8, !![], ['#0d1b1c', '#69685a', '#9c9683', '#877d36', '#a08f47', '#a7983c', '#b29e4d', '#c1b06b']))), sprite[SPRITE['GOLD_SPIKE']][SPRITE['NIGHT']] = CTI(create_spike_gold(_0x4822ee * 0.8, !![], ['#030d14', '#1a3732', '#1e544c', '#1f4948', '#215e55', '#1f6058', '#2a7773', '#2c7a70'])), (sprite[SPRITE['DIAMOND_SPIKE']] = [], sprite[SPRITE['DIAMOND_SPIKE']][SPRITE['DAY']] = CTI(create_spike_diamond(_0x4822ee * 0.8, !![], ['#0d1b1c', '#7d8b90', '#9facaa', '#5cc5ce', '#89d1d4', '#86d0d1', '#95d5d8', '#e0f2f6', '#b3e0e3']))), sprite[SPRITE['DIAMOND_SPIKE']][SPRITE['NIGHT']] = CTI(create_spike_diamond(_0x4822ee * 0.8, !![], ['#030d14', '#2c4b55', '#546d77', '#2b9390', '#43b5af', '#43b5af', '#4bbcb4', '#83ddd4', '#59c9c0'])), (sprite[SPRITE['STONE_SPIKE']] = [], sprite[SPRITE['STONE_SPIKE']][SPRITE['DAY']] = CTI(create_spike_stone(_0x4822ee * 0.8, !![], ['#0d1b1c', '#6a7570', '#939393', '#6a7570', '#939995', '#9baaa3', '#adbcb5', '#8a938e']))), sprite[SPRITE['STONE_SPIKE']][SPRITE['NIGHT']] = CTI(create_spike_stone(_0x4822ee * 0.8, !![], ['#030d14', '#1f343f', '#485e66', '#163a3a', '#214c4b', '#1f4948', '#295957', '#1f5955'])), (sprite[SPRITE['AMETHYST_SPIKE']] = [], sprite[SPRITE['AMETHYST_SPIKE']][SPRITE['DAY']] = CTI(create_spike_stone(_0x4822ee * 0.8, !![], ['#0d1b1c', '#6a7570', '#939393', '#b15ecf', '#8c29aa', '#c26de0', '#af59cd', '#d588f1']))), sprite[SPRITE['AMETHYST_SPIKE']][SPRITE['NIGHT']] = CTI(create_spike_stone(_0x4822ee * 0.8, !![], ['#030d14', '#1f343f', '#485e66', '#8359d3', '#764eb5', '#8f65de', '#7f55cc', '#9d77e6'])), sprite[SPRITE['DOOR_WOOD_CLOSE']] = [], sprite[SPRITE['DOOR_WOOD_CLOSE']][SPRITE['DAY']] = CTI(create_door_wood(_0x4822ee * 1.5, !![], ['#0d1b1c', '#4c3b19', '#574122', '#644928', '#574122', '#735534', '#23a54e', '#1f934a', '#208e48', '#b12c2a', '#9c2625', '#ebd6a4', '#cca73f'])), sprite[SPRITE['DOOR_WOOD_CLOSE']][SPRITE['NIGHT']] = CTI(create_door_wood(_0x4822ee * 1.5, !![], ['#030d14', '#0d2e33', '#184747', '#123b3f', '#0d2e33', '#174444'])), sprite[SPRITE['DOOR_WOOD_OPEN']] = [], sprite[SPRITE['DOOR_WOOD_OPEN']][SPRITE['DAY']] = CTI(create_door_wood(_0x4822ee * 0x1, ![], ['#133a2b', '#133a2b', '#1a4935', '#1a4935', '#133a2b', '#1a4935'])), sprite[SPRITE['DOOR_WOOD_OPEN']][SPRITE['NIGHT']] = CTI(create_door_wood(_0x4822ee * 0x1, ![], ['#042b30', '#042b30', '#0b342b', '#0b342b', '#042b30', '#0b342b'])), sprite[SPRITE['DOOR_STONE_CLOSE']] = [], sprite[SPRITE['DOOR_STONE_CLOSE']][SPRITE['DAY']] = CTI(create_door_stone(_0x4822ee * 1.5, !![], ['#0d1b1c', '#6a7570', '#939995', '#9baaa3', '#8a938e', '#adbcb5'])), sprite[SPRITE['DOOR_STONE_CLOSE']][SPRITE['NIGHT']] = CTI(create_door_stone(_0x4822ee * 1.5, !![], ['#030d14', '#163a3a', '#214c4b', '#1f4948', '#164542', '#295957'])), sprite[SPRITE['DOOR_STONE_OPEN']] = [], sprite[SPRITE['DOOR_STONE_OPEN']][SPRITE['DAY']] = CTI(create_door_stone(_0x4822ee * 0x1, ![], ['#133a2b', '#133a2b', '#1a4935', '#1a4935', '#133a2b', '#1a4935'])), sprite[SPRITE['DOOR_STONE_OPEN']][SPRITE['NIGHT']] = CTI(create_door_stone(_0x4822ee * 0x1, ![], ['#032428', '#032428', '#07393d', '#07393d', '#032428', '#07393d'])), sprite[SPRITE['DOOR_AMETHYST_CLOSE']] = [], sprite[SPRITE['DOOR_AMETHYST_CLOSE']][SPRITE['DAY']] = CTI(create_door_stone(_0x4822ee * 1.5, !![], ['#0d1b1c', '#b15ecf', '#8c29aa', '#c26de0', '#af59cd', '#d588f1'])), sprite[SPRITE['DOOR_AMETHYST_CLOSE']][SPRITE['NIGHT']] = CTI(create_door_stone(_0x4822ee * 1.5, !![], ['#030d14', '#8359d3', '#764eb5', '#8f65de', '#7f55cc', '#9d77e6'])), sprite[SPRITE['DOOR_AMETHYST_OPEN']] = [], sprite[SPRITE['DOOR_AMETHYST_OPEN']][SPRITE['DAY']] = CTI(create_door_stone(_0x4822ee * 0x1, ![], ['#133a2b', '#133a2b', '#1a4935', '#1a4935', '#133a2b', '#1a4935'])), sprite[SPRITE['DOOR_AMETHYST_OPEN']][SPRITE['NIGHT']] = CTI(create_door_stone(_0x4822ee * 0x1, ![], ['#032428', '#032428', '#07393d', '#07393d', '#032428', '#07393d'])), sprite[SPRITE['DOOR_GOLD_CLOSE']] = [], sprite[SPRITE['DOOR_GOLD_CLOSE']][SPRITE['DAY']] = CTI(create_door_gold(_0x4822ee * 1.5, !![], ['#0d1b1c', '#877d36', '#a08f47', '#a7983c', '#9a8636', '#c1b06b'])), sprite[SPRITE['DOOR_GOLD_CLOSE']][SPRITE['NIGHT']] = CTI(create_door_gold(_0x4822ee * 1.5, !![], ['#030d14', '#1f4948', '#215e55', '#1f6058', '#1f605c', '#2c7a70'])), sprite[SPRITE['DOOR_GOLD_OPEN']] = [], sprite[SPRITE['DOOR_GOLD_OPEN']][SPRITE['DAY']] = CTI(create_door_gold(_0x4822ee * 0x1, ![], ['#133a2b', '#133a2b', '#1a4935', '#1a4935', '#133a2b', '#1a4935'])), sprite[SPRITE['DOOR_GOLD_OPEN']][SPRITE['NIGHT']] = CTI(create_door_gold(_0x4822ee * 0x1, ![], ['#032428', '#032428', '#07393d', '#07393d', '#032428', '#07393d'])), sprite[SPRITE['DOOR_DIAMOND_CLOSE']] = [], sprite[SPRITE['DOOR_DIAMOND_CLOSE']][SPRITE['DAY']] = CTI(create_door_diamond(_0x4822ee * 1.5, !![], ['#0d1b1c', '#5cc5ce', '#89d1d4', '#86d0d1', '#95d5d8', '#e0f2f6', '#b3e0e3'])), sprite[SPRITE['DOOR_DIAMOND_CLOSE']][SPRITE['NIGHT']] = CTI(create_door_diamond(_0x4822ee * 1.5, !![], ['#030d14', '#2b9390', '#43b5af', '#43b5af', '#4bbcb4', '#83ddd4', '#59c9c0'])), sprite[SPRITE['DOOR_DIAMOND_OPEN']] = [], sprite[SPRITE['DOOR_DIAMOND_OPEN']][SPRITE['DAY']] = CTI(create_door_diamond(_0x4822ee * 0x1, ![], ['#133a2b', '#133a2b', '#1a4935', '#1a4935', '#133a2b', '#1a4935'])), sprite[SPRITE['DOOR_DIAMOND_OPEN']][SPRITE['NIGHT']] = CTI(create_door_diamond(_0x4822ee * 0x1, ![], ['#032428', '#032428', '#07393d', '#07393d', '#032428', '#07393d'])), sprite[SPRITE['CHEST']] = [], sprite[SPRITE['CHEST']][0x2] = CTI(create_chest(_0x4822ee * 0.5, !![], '#4d0000\x20#4d0000\x20#4d0000\x20#4d0000\x20#4d0000\x20#614627\x20#614627\x20#c4a23a\x20#c4a23a\x20#c4a23a' ['split']('\x20'))), sprite[SPRITE['CHEST']][SPRITE['DAY']] = CTI(create_chest(_0x4822ee * 0.5, !![], ['#133a2b', '#9e8838', '#c4a23a', '#4c3b19', '#614627', '#614627', '#614627', '#c4a23a', '#c4a23a', '#c4a23a'])), sprite[SPRITE['CHEST']][SPRITE['NIGHT']] = CTI(create_chest(_0x4822ee * 0.5, !![], ['#032428', '#266161', '#2b6664', '#123335', '#1f5453', '#1f5453', '#1f5453', '#2b6664', '#2b6664', '#2b6664'])), sprite[SPRITE['TREASURE_CHEST']] = [], sprite[SPRITE['TREASURE_CHEST']][SPRITE['DAY']] = CTI(create_treasure_chest(_0x4822ee * 0.5, ['#133a2b', '#9e8838', '#c4a23a', '#4c3b19', '#614627'])), sprite[SPRITE['TREASURE_CHEST']][SPRITE['NIGHT']] = CTI(create_treasure_chest(_0x4822ee * 0.5, ['#032428', '#266161', '#2b6664', '#123335', '#1f5453'])), sprite[SPRITE['RABBIT']] = [], sprite[SPRITE['RABBIT']][SPRITE['DAY']] = CTI(create_rabbit(_0x4822ee * 0.9, ['#0e3022', '#ee97bf', '#FFFFFF', '#000000', '#ffffff'])), sprite[SPRITE['RABBIT']][SPRITE['NIGHT']] = CTI(create_rabbit(_0x4822ee * 0.9, ['#030d14', '#4d1b59', '#5d3f77', '#220e26', '#ffffff'])), sprite[SPRITE['SPIDER']] = [], sprite[SPRITE['SPIDER']][SPRITE['DAY']] = CTI(create_rotated_img(Math['PI'], create_spider(_0x4822ee * 0.9, ['#000000', '#b7252c', '#b7252c', '#b7252c', '#FFFFFF', '#000000']))), sprite[SPRITE['SPIDER']][SPRITE['NIGHT']] = CTI(create_rotated_img(Math['PI'], create_spider(_0x4822ee * 0.9, ['#030d14', '#401d49', '#b7252c', '#401d49', '#FFFFFF', '#000000']))), sprite[SPRITE['WEB']] = CTI(create_web(_0x4822ee * 0.6, ['#FFFFFF'])), sprite[SPRITE['WOLF']] = [], sprite[SPRITE['WOLF']][SPRITE['DAY']] = CTI(create_wolf(_0x4822ee * 1.1, ['#0e3022', '#231f20', '#b7252c', '#7d7679', '#ffffff'])), sprite[SPRITE['WOLF']][SPRITE['NIGHT']] = CTI(create_wolf(_0x4822ee * 1.1, ['#030d14', '#1e181c', '#462966', '#3e3e4a', '#ffffff'])), sprite[SPRITE['EARMUFFS']] = [], sprite[SPRITE['EARMUFFS']][SPRITE['DAY']] = CTI(create_earmuff(_0x4822ee * 0.6, !![], ['#f9efeb', '#dfd1cb', '#3e3c25', '#4d4a2e'])), sprite[SPRITE['EARMUFFS']][SPRITE['NIGHT']] = CTI(create_earmuff(_0x4822ee * 0.6, !![], ['#478e8b', '#327e73', '#073030', '#08403f'])), sprite[SPRITE['COAT']] = [], sprite[SPRITE['COAT']][SPRITE['DAY']] = CTI(create_coat(_0x4822ee * 0.6, !![], ['#3e3c25', '#4d4a2e', '#f9efeb', '#dfd1cb'])), sprite[SPRITE['COAT']][SPRITE['NIGHT']] = CTI(create_coat(_0x4822ee * 0.6, !![], ['#073030', '#08403f', '#478e8b', '#327e73'])), sprite[SPRITE['CAP_SCARF']] = [], sprite[SPRITE['CAP_SCARF']][SPRITE['DAY']] = CTI(create_cap_scarf(_0x4822ee * 0.63, !![], ['#171a19', '#dee7e7', '#b8cccb', '#ffffff', '#e3e8e8'])), sprite[SPRITE['CAP_SCARF']][SPRITE['NIGHT']] = CTI(create_cap_scarf(_0x4822ee * 0.63, !![], ['#073030', '#368981', '#1c635e', '#7bbab4', '#469e95'])), sprite[SPRITE['CHRISTMAS_HAT']] = [], sprite[SPRITE['CHRISTMAS_HAT']][SPRITE['DAY']] = CTI(create_christmas_hat(_0x4822ee * 0.6, !![], ['#171a19', '#c5232c', '#84191d', '#a72027', '#fef4f4', '#e9dad9'])), sprite[SPRITE['CHRISTMAS_HAT']][SPRITE['NIGHT']] = CTI(create_christmas_hat(_0x4822ee * 0.6, !![], ['#073030', '#392966', '#2a194f', '#433379', '#66aaa3', '#469e95'])), sprite[SPRITE['ELF_HAT']] = [], sprite[SPRITE['ELF_HAT']][SPRITE['DAY']] = CTI(create_elf_hat(_0x4822ee * 0.6, !![], ['#171a19', '#0f964c', '#106e3b', '#138344', '#fef4f4', '#e9dad9', '#C5232C', '#A92D2D'])), sprite[SPRITE['ELF_HAT']][SPRITE['NIGHT']] = CTI(create_elf_hat(_0x4822ee * 0.6, !![], ['#073030', '#124949', '#0e3838', '#15514f', '#66aaa3', '#469e95', '#292f66', '#202559'])), sprite[SPRITE['BREAD_OVEN_ON']] = [], sprite[SPRITE['BREAD_OVEN_ON']][SPRITE['DAY']] = CTI(create_bread_oven(_0x4822ee * 0.42, !![], ['#0d1b1c', '#515C57', '#3A4942', '#68736F', '#C1C0C0', '#be8d50', '#7d5234', '#222825', '#4D5752', '#e48727', '#d4a872', '#343d39'])), sprite[SPRITE['BREAD_OVEN_ON']][SPRITE['NIGHT']] = CTI(create_bread_oven(_0x4822ee * 0.42, !![], ['#0d1b1c', '#485E66', '#1F343F', '#60757D', '#C1C0C0', '#be8d50', '#7d5234', '#1F343F', '#344B51', '#D8E57F', '#dfa64e', '#192225'])), sprite[SPRITE['BREAD_LIGHT_UP']] = [], sprite[SPRITE['BREAD_LIGHT_UP']][SPRITE['DAY']] = CTI(create_bread_light_up(_0x4822ee * 0.9, ['#e4c027'])), sprite[SPRITE['BREAD_LIGHT_UP']][SPRITE['NIGHT']] = CTI(create_bread_light_up(_0x4822ee * 0.9, ['#D8E57F'])), sprite[SPRITE['BREAD_OVEN_OFF']] = [], sprite[SPRITE['BREAD_OVEN_OFF']][SPRITE['DAY']] = CTI(create_bread_oven_off(_0x4822ee * 0.42, !![], ['#0d1b1c', '#515C57', '#3A4942', '#68736F', '#C1C0C0', '#be8d50', '#7d5234', '#222825', '#4D5752', '#e48727', '#d4a872', '#232a27'])), sprite[SPRITE['BREAD_OVEN_OFF']][SPRITE['NIGHT']] = CTI(create_bread_oven_off(_0x4822ee * 0.42, !![], ['#0d1b1c', '#485E66', '#1F343F', '#60757D', '#C1C0C0', '#be8d50', '#7d5234', '#1F343F', '#344B51', '#D8E57F', '#dfa64e', '#1b2529'])), sprite[SPRITE['BREAD_OVEN_UI']] = CTI(create_bread_oven_ui(_0x4822ee * 0x1, ['#596560', '#394841', '#543B1C', '#694D28', '#7E8A85', '#384740', '#525956'])), sprite[SPRITE['FURNACE_ON']] = [], sprite[SPRITE['FURNACE_ON']][SPRITE['DAY']] = CTI(create_furnace_on(_0x4822ee * 0.5, !![], ['#0d1b1c', '#939393', '#5f6061', '#c0c0c0', '#ffad22', '#fffdd5', '#fee764'])), sprite[SPRITE['FURNACE_ON']][SPRITE['NIGHT']] = CTI(create_furnace_on(_0x4822ee * 0.5, !![], ['#0d1b1c', '#485e66', '#1f343f', '#60757d', '#ffdc73', '#fffce2', '#fef259'])), sprite[SPRITE['FURNACE_OFF']] = [], sprite[SPRITE['FURNACE_OFF']][SPRITE['DAY']] = CTI(create_furnace_off(_0x4822ee * 0.5, !![], ['#0d1b1c', '#939393', '#5f6061', '#c0c0c0', '#4f4f4f', '#6c6c6c', '#454545'])), sprite[SPRITE['FURNACE_OFF']][SPRITE['NIGHT']] = CTI(create_furnace_off(_0x4822ee * 0.5, !![], ['#0d1b1c', '#485e66', '#1f343f', '#60757d', '#152229', '#0c1113', '#0c1113'])), sprite[SPRITE['FURNACE_SLOT']] = CTI(create_furnace_slot(_0x4822ee * 0.8, !![], ['#5f6061', '#939393'])), sprite[SPRITE['FURNACE_BUTTON']] = create_craft_button(0x1, [{
        'f': create_wood_fire,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': Math['PI'] / 2.5,
        'c': ['#4d2d14', '#432516']
    }], 0.3, ['#494949', '#5b5858', '#3d3b3b'], 0x1), sprite[SPRITE['BED']] = [], sprite[SPRITE['BED']][SPRITE['DAY']] = CTI(create_bed(_0x4822ee * 0x1, !![], ['#0d1b1c', '#554139', '#3f332a', '#261912', '#eee6c5', '#d1c599', '#554139', '#3f332a', '#86509b', '#703a99'])), sprite[SPRITE['BED']][SPRITE['NIGHT']] = CTI(create_bed(_0x4822ee * 0x1, !![], ['#0d1b1c', '#0b3432', '#092b29', '#052120', '#104d5b', '#0b424f', '#0b3432', '#092b29', '#2b0b4a', '#23073e'])), sprite[SPRITE['BED_TOP']] = [], sprite[SPRITE['BED_TOP']][SPRITE['DAY']] = CTI(create_bed_top(_0x4822ee * 0x1, !![], ['#0d1b1c', '#554139', '#3f332a', '#261912', '#eee6c5', '#d1c599', '#554139', '#3f332a', '#86509b', '#703a99'])), sprite[SPRITE['BED_TOP']][SPRITE['NIGHT']] = CTI(create_bed_top(_0x4822ee * 0x1, !![], ['#0d1b1c', '#0b3432', '#092b29', '#052120', '#104d5b', '#083b37', '#0b3432', '#092b29', '#2b0b4a', '#23073e'])), sprite[SPRITE['CRAB_SPEAR']] = [], sprite[SPRITE['CRAB_SPEAR']][SPRITE['DAY']] = CTI(create_rotated_img(0x3, create_crab_spear(_0x4822ee * 0.7, !![], ['#0d1b1c', '#58452b', '#47341d', '#ee593d', '#c04933', '#c04933', '#a33e2b', '#c3be9a', '#7f6d52']))), sprite[SPRITE['CRAB_SPEAR']][SPRITE['NIGHT']] = CTI(create_rotated_img(0x3, create_crab_spear(_0x4822ee * 0.7, !![], ['#0d1b1c', '#0b3432', '#092b29', '#34255d', '#281b4e', '#2f2157', '#281b4e', '#104d5b', '#083b37']))), sprite[SPRITE['WOOD_SPEAR']] = [], sprite[SPRITE['WOOD_SPEAR']][SPRITE['DAY']] = CTI(create_rotated_img(0x3, create_wood_spear(_0x4822ee * 0.7, !![], ['#0d1b1c', '#58452b', '#47341d', '#765d42', '#c3be9a', '#7f6d52']))), sprite[SPRITE['WOOD_SPEAR']][SPRITE['NIGHT']] = CTI(create_rotated_img(0x3, create_wood_spear(_0x4822ee * 0.7, !![], ['#0d1b1c', '#0b3432', '#092b29', '#0e4d49', '#1a6c67', '#07322f']))), sprite[SPRITE['SPEAR']] = [], sprite[SPRITE['SPEAR']][SPRITE['DAY']] = CTI(create_rotated_img(0x3, create_stonespear(_0x4822ee * 0.65, !![], ['#0d1b1c', '#4d2d14', '#432516', '#c3be9a', '#7f6d52', '#7a7575', '#454749', '#8c8787', '#939393', '#5f6061', '#aaa6a6']))), sprite[SPRITE['SPEAR']][SPRITE['NIGHT']] = CTI(create_rotated_img(0x3, create_stonespear(_0x4822ee * 0.65, !![], ['#0d1b1c', '#0d2e33', '#0b2326', '#1a6c67', '#07322f', '#374950', '#101f26', '#2c3c42', '#485e66', '#1f343f', '#546e78']))), sprite[SPRITE['GOLD_SPEAR']] = [], sprite[SPRITE['GOLD_SPEAR']][SPRITE['DAY']] = CTI(create_rotated_img(0x3, create_goldspear(_0x4822ee * 0.67, !![], ['#0d1b1c', '#493e26', '#382e19', '#a69e39', '#9c8828', '#bab143', '#c4bc51', '#b29c32', '#d2ca59']))), sprite[SPRITE['GOLD_SPEAR']][SPRITE['NIGHT']] = CTI(create_rotated_img(0x3, create_goldspear(_0x4822ee * 0.67, !![], ['#030d14', '#263947', '#182935', '#33916d', '#197c62', '#3eab81', '#43aa82', '#29997c', '#52be94']))), sprite[SPRITE['DIAMOND_SPEAR']] = [], sprite[SPRITE['DIAMOND_SPEAR']][SPRITE['DAY']] = CTI(create_rotated_img(0x3, create_diamondspear(_0x4822ee * 0.67, !![], ['#0d1b1c', '#262114', '#211108', '#4ba8b4', '#198a82', '#6ccad7', '#63c9d6', '#29aaa1', '#7bd9e6']))), sprite[SPRITE['DIAMOND_SPEAR']][SPRITE['NIGHT']] = CTI(create_rotated_img(0x3, create_diamondspear(_0x4822ee * 0.67, !![], ['#0d1b1c', '#111316', '#0a0b0c', '#4bbbc3', '#23a19d', '#54c5cd', '#4ad2ce', '#3dc4c0', '#73dde5']))), sprite[SPRITE['AMETHYST_SPEAR']] = [], sprite[SPRITE['AMETHYST_SPEAR']][SPRITE['DAY']] = CTI(create_rotated_img(0x3, create_amespear(_0x4822ee * 0.67, !![], ['#0d1b1c', '#262114', '#211108', '#9443b1', '#6f1988', '#a752c6', '#9e35be', '#8c29aa', '#b864d6']))), sprite[SPRITE['AMETHYST_SPEAR']][SPRITE['NIGHT']] = CTI(create_rotated_img(0x3, create_amespear(_0x4822ee * 0.67, !![], ['#0d1b1c', '#111316', '#0a0b0c', '#6e43bf', '#673fa4', '#784bcc', '#845bc6', '#764eb5', '#966be7']))), sprite[SPRITE['DRAGON_SPEAR']] = [], sprite[SPRITE['DRAGON_SPEAR']][SPRITE['DAY']] = CTI(create_rotated_img(0x3, create_dragon_spear(_0x4822ee * 0x1, !![], ['#0d1b1c', '#1e2b34', '#151c24', '#99d7dd', '#7dcbd1', '#c6e8eb', '#aadee8', '#b7e2e5']))), sprite[SPRITE['DRAGON_SPEAR']][SPRITE['NIGHT']] = CTI(create_rotated_img(0x3, create_dragon_spear(_0x4822ee * 0x1, !![], ['#0d1b1c', '#1c2026', '#0a0b0c', '#7dc6d9', '#6cbacf', '#87d2e6', '#49b2cf', '#87d2e6']))), sprite[SPRITE['HAMMER']] = [], sprite[SPRITE['HAMMER']][SPRITE['DAY']] = CTI(create_rotated_img(0x3, create_hammer(_0x4822ee * 0x1, !![], ['#0d1b1c', '#4d2d14', '#432516', '#939393', '#5f6061']))), sprite[SPRITE['HAMMER']][SPRITE['NIGHT']] = CTI(create_rotated_img(0x3, create_hammer(_0x4822ee * 0x1, !![], ['#030d14', '#263947', '#182935', '#485e66', '#1f343f']))), sprite[SPRITE['SPANNER']] = [], sprite[SPRITE['SPANNER']][SPRITE['DAY']] = CTI(create_rotated_img(0x3, create_spanner(_0x4822ee * 0.5, !![], ['#0d1b1c', '#939393', '#5f6061']))), sprite[SPRITE['SPANNER']][SPRITE['NIGHT']] = CTI(create_rotated_img(0x3, create_spanner(_0x4822ee * 0.5, !![], ['#030d14', '#485e66', '#1f343f']))), sprite[SPRITE['SUPER_HAMMER']] = [], sprite[SPRITE['SUPER_HAMMER']][SPRITE['DAY']] = CTI(create_rotated_img(0x3, create_superhammer(_0x4822ee * 0x1, !![], ['#0d1b1c', '#9b5927', '#7a3610', '#1e0302', '#0d825b', '#6bd16e', '#17915d', '#89e5aa', '#16935d', '#a0efc4', '#28b26d', '#cdf4cb']))), sprite[SPRITE['SUPER_HAMMER']][SPRITE['NIGHT']] = CTI(create_rotated_img(0x3, create_superhammer(_0x4822ee * 0x1, !![], ['#0d1b1c', '#2a4f4a', '#1e423d', '#1e0302', '#096b3f', '#3db76f', '#118254', '#40c696', '#0c7a50', '#59d8a4', '#249376', '#80d8c7']))), sprite[SPRITE['HAMMER_GOLD']] = [], sprite[SPRITE['HAMMER_GOLD']][SPRITE['DAY']] = CTI(create_rotated_img(0x3, create_hammer(_0x4822ee * 0x1, !![], ['#0d1b1c', '#493e26', '#382e19', '#c4bc51', '#b29c32']))), sprite[SPRITE['HAMMER_GOLD']][SPRITE['NIGHT']] = CTI(create_rotated_img(0x3, create_hammer(_0x4822ee * 0x1, !![], ['#0d1b1c', '#0d2e33', '#0b2326', '#43aa82', '#29997c']))), sprite[SPRITE['HAMMER_DIAMOND']] = [], sprite[SPRITE['HAMMER_DIAMOND']][SPRITE['DAY']] = CTI(create_rotated_img(0x3, create_hammer(_0x4822ee * 0x1, !![], ['#0d1b1c', '#262114', '#211108', '#63c9d6', '#29aaa1']))), sprite[SPRITE['HAMMER_DIAMOND']][SPRITE['NIGHT']] = CTI(create_rotated_img(0x3, create_hammer(_0x4822ee * 0x1, !![], ['#0d1b1c', '#111316', '#0a0b0c', '#73dde5', '#3dc4c0']))), sprite[SPRITE['HAMMER_AMETHYST']] = [], sprite[SPRITE['HAMMER_AMETHYST']][SPRITE['DAY']] = CTI(create_rotated_img(0x3, create_hammer(_0x4822ee * 0x1, !![], ['#0d1b1c', '#262114', '#211108', '#b864d6', '#8c29aa']))), sprite[SPRITE['HAMMER_AMETHYST']][SPRITE['NIGHT']] = CTI(create_rotated_img(0x3, create_hammer(_0x4822ee * 0x1, !![], ['#0d1b1c', '#111316', '#0a0b0c', '#8359d3', '#764eb5']))), sprite[SPRITE['LOCK']] = [], sprite[SPRITE['LOCK']][SPRITE['DAY']] = CTI(create_lock(_0x4822ee * 0.55, ![], ['#141414', '#816511', '#c4a23a', '#3a3a3a'])), sprite[SPRITE['LOCK']][SPRITE['NIGHT']] = CTI(create_lock(_0x4822ee * 0.55, ![], ['#080707', '#133d3c', '#2b6664', '#1b2529'])), sprite[SPRITE['PADLOCK']] = [], sprite[SPRITE['PADLOCK']]['push'](CTI(create_lock(_0x4822ee * 0.8, ![], ['#141414', '#816511', '#c4a23a', '#3a3a3a']))), sprite[SPRITE['PADLOCK']]['push'](CTI(create_lock(_0x4822ee * 0.8, ![], ['#141414', '#9f7d17', '#dab33c', '#474545']))), sprite[SPRITE['PADLOCK']]['push'](CTI(create_lock(_0x4822ee * 0.8, ![], ['#141414', '#73590d', '#a88a2c', '#2a2828']))), sprite[SPRITE['LOCKED']] = [], sprite[SPRITE['LOCKED']]['push'](sprite[SPRITE['PADLOCK']][0x0]), sprite[SPRITE['LOCKED']]['push'](sprite[SPRITE['PADLOCK']][0x0]), sprite[SPRITE['LOCKED']]['push'](sprite[SPRITE['PADLOCK']][0x0]), sprite[SPRITE['LOCKPICK']] = [], sprite[SPRITE['LOCKPICK']][SPRITE['DAY']] = CTI(create_lockpick(_0x4822ee * 0.06, ![], ['#141414', '#c4a23a', '#816511'])), sprite[SPRITE['LOCKPICK']][SPRITE['NIGHT']] = CTI(create_lockpick(_0x4822ee * 0.06, ![], ['#030d14', '#2b6664', '#133d3c'])), sprite[SPRITE['KEY']] = [], sprite[SPRITE['KEY']]['push'](CTI(create_lockpick(_0x4822ee * 0.08, ![], ['#141414', '#c4a23a', '#816511']))), sprite[SPRITE['KEY']]['push'](CTI(create_lockpick(_0x4822ee * 0.08, ![], ['#141414', '#e2bd4e', '#a38018']))), sprite[SPRITE['KEY']]['push'](CTI(create_lockpick(_0x4822ee * 0.08, ![], ['#141414', '#b0902e', '#634d09']))), sprite[SPRITE['DRAGON_HEART']] = create_craft_button(1.5, [{
        'f': create_dragon_heart,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#141414', '#178a99', '#0a6372', '#03282e']
    }], 0.45, ['#5bbcc9', '#73d2df', '#4daab6'], 0.9), sprite[SPRITE['RESURRECTION_GROUND']] = [], sprite[SPRITE['RESURRECTION_GROUND']][SPRITE['DAY']] = CTI(create_resurrection_ground(_0x4822ee * 0.8, !![], ['#347f93', '#54a4ba'])), sprite[SPRITE['RESURRECTION_GROUND']][SPRITE['NIGHT']] = CTI(create_resurrection_ground(_0x4822ee * 0.8, !![], ['#98ede3', '#94f2e7'])), sprite[SPRITE['RESURRECTION_HOLE']] = [], sprite[SPRITE['RESURRECTION_HOLE']][SPRITE['DAY']] = CTI(create_resurrection_hole(_0x4822ee * 0.8, !![], ['#a9e4ed', '#86d4e0', '#418ba5', '#59b8ce'])), sprite[SPRITE['RESURRECTION_HOLE']][SPRITE['NIGHT']] = CTI(create_resurrection_hole(_0x4822ee * 0.8, !![], ['#59c9c0', '#83ddd4', '#3fa097', '#90ddd9'])), sprite[SPRITE['RESURRECTION_ROTATE']] = [], sprite[SPRITE['RESURRECTION_ROTATE']][SPRITE['DAY']] = CTI(create_resurrection_rotate(_0x4822ee * 0.8, !![], ['#a9e4ed', '#86d4e0'])), sprite[SPRITE['RESURRECTION_ROTATE']][SPRITE['NIGHT']] = CTI(create_resurrection_rotate(_0x4822ee * 0.8, !![], ['#83ddd4', '#485e66'])), sprite[SPRITE['RESURRECTION']] = [], sprite[SPRITE['RESURRECTION']][SPRITE['DAY']] = CTI(create_resurrection(_0x4822ee * 0.8, !![], ['#347f93', '#54a4ba', '#1c2528', '#a9e4ed', '#86d4e0', '#959da0', '#697072', '#929da0', '#afb9bc'])), sprite[SPRITE['RESURRECTION']][SPRITE['NIGHT']] = CTI(create_resurrection(_0x4822ee * 0.8, !![], ['#98ede3', '#94f2e7', '#1f343f', '#59c9c0', '#83ddd4', '#485e66', '#2d484f', '#546d6d', '#597b84'])), sprite[SPRITE['EMERALD_MACHINE_GROUND']] = [], sprite[SPRITE['EMERALD_MACHINE_GROUND']][SPRITE['DAY']] = IMAGES['EMERALD_MACHINE_GROUNDD'], sprite[SPRITE['EMERALD_MACHINE_GROUND']][SPRITE['NIGHT']] = IMAGES['EMERALD_MACHINE_GROUNDN'], sprite[SPRITE['EMERALD_MACHINE_HOLE']] = [], sprite[SPRITE['EMERALD_MACHINE_HOLE']][SPRITE['DAY']] = IMAGES['EMERALD_MACHINE_HOLED'], sprite[SPRITE['EMERALD_MACHINE_HOLE']][SPRITE['NIGHT']] = IMAGES['EMERALD_MACHINE_HOLEN'], sprite[SPRITE['EMERALD_MACHINE_ROTATE']] = [], sprite[SPRITE['EMERALD_MACHINE_ROTATE']][SPRITE['DAY']] = IMAGES['EMERALD_MACHINE_ROTATED'], sprite[SPRITE['EMERALD_MACHINE_ROTATE']][SPRITE['NIGHT']] = IMAGES['EMERALD_MACHINE_ROTATEN'], sprite[SPRITE['EMERALD_MACHINE']] = [], sprite[SPRITE['EMERALD_MACHINE']][SPRITE['DAY']] = IMAGES['EMERALD_MACHINED'], sprite[SPRITE['EMERALD_MACHINE']][SPRITE['NIGHT']] = IMAGES['EMERALD_MACHINEN'], sprite[SPRITE['EXTRACTOR_MACHINE0_STONE']] = [], sprite[SPRITE['EXTRACTOR_MACHINE0_STONE']][SPRITE['DAY']] = IMAGES['EXTRACTOR_MACHINE0_STONED'], sprite[SPRITE['EXTRACTOR_MACHINE0_STONE']][SPRITE['NIGHT']] = IMAGES['EXTRACTOR_MACHINE0_STONEN'], sprite[SPRITE['EXTRACTOR_MACHINE_STONE']] = [], sprite[SPRITE['EXTRACTOR_MACHINE_STONE']][SPRITE['DAY']] = IMAGES['EXTRACTOR_MACHINE_STONED'], sprite[SPRITE['EXTRACTOR_MACHINE_STONE']][SPRITE['NIGHT']] = IMAGES['EXTRACTOR_MACHINE_STONEN'], sprite[SPRITE['EXTRACTOR_MACHINE0_GOLD']] = [], sprite[SPRITE['EXTRACTOR_MACHINE0_GOLD']][SPRITE['DAY']] = IMAGES['EXTRACTOR_MACHINE0_GOLDD'], sprite[SPRITE['EXTRACTOR_MACHINE0_GOLD']][SPRITE['NIGHT']] = IMAGES['EXTRACTOR_MACHINE0_GOLDN'], sprite[SPRITE['EXTRACTOR_MACHINE_GOLD']] = [], sprite[SPRITE['EXTRACTOR_MACHINE_GOLD']][SPRITE['DAY']] = IMAGES['EXTRACTOR_MACHINE_GOLDD'], sprite[SPRITE['EXTRACTOR_MACHINE_GOLD']][SPRITE['NIGHT']] = IMAGES['EXTRACTOR_MACHINE_GOLDN'], sprite[SPRITE['EXTRACTOR_MACHINE0_DIAMOND']] = [], sprite[SPRITE['EXTRACTOR_MACHINE0_DIAMOND']][SPRITE['DAY']] = IMAGES['EXTRACTOR_MACHINE0_DIAMONDD'], sprite[SPRITE['EXTRACTOR_MACHINE0_DIAMOND']][SPRITE['NIGHT']] = IMAGES['EXTRACTOR_MACHINE0_DIAMONDN'], sprite[SPRITE['EXTRACTOR_MACHINE_DIAMOND']] = [], sprite[SPRITE['EXTRACTOR_MACHINE_DIAMOND']][SPRITE['DAY']] = IMAGES['EXTRACTOR_MACHINE_DIAMONDD'], sprite[SPRITE['EXTRACTOR_MACHINE_DIAMOND']][SPRITE['NIGHT']] = IMAGES['EXTRACTOR_MACHINE_DIAMONDN'], sprite[SPRITE['EXTRACTOR_MACHINE0_AMETHYST']] = [], sprite[SPRITE['EXTRACTOR_MACHINE0_AMETHYST']][SPRITE['DAY']] = IMAGES['EXTRACTOR_MACHINE0_AMETHYSTD'], sprite[SPRITE['EXTRACTOR_MACHINE0_AMETHYST']][SPRITE['NIGHT']] = IMAGES['EXTRACTOR_MACHINE0_AMETHYSTN'], sprite[SPRITE['EXTRACTOR_MACHINE_AMETHYST']] = [], sprite[SPRITE['EXTRACTOR_MACHINE_AMETHYST']][SPRITE['DAY']] = IMAGES['EXTRACTOR_MACHINE_AMETHYSTD'], sprite[SPRITE['EXTRACTOR_MACHINE_AMETHYST']][SPRITE['NIGHT']] = IMAGES['EXTRACTOR_MACHINE_AMETHYSTN'], sprite[SPRITE['EXTRACTOR_MACHINE0_REIDITE']] = [], sprite[SPRITE['EXTRACTOR_MACHINE0_REIDITE']][SPRITE['DAY']] = IMAGES['EXTRACTOR_MACHINE0_REIDITED'], sprite[SPRITE['EXTRACTOR_MACHINE0_REIDITE']][SPRITE['NIGHT']] = IMAGES['EXTRACTOR_MACHINE0_REIDITEN'], sprite[SPRITE['EXTRACTOR_MACHINE_REIDITE']] = [], sprite[SPRITE['EXTRACTOR_MACHINE_REIDITE']][SPRITE['DAY']] = IMAGES['EXTRACTOR_MACHINE_REIDITED'], sprite[SPRITE['EXTRACTOR_MACHINE_REIDITE']][SPRITE['NIGHT']] = IMAGES['EXTRACTOR_MACHINE_REIDITEN'], sprite[SPRITE['FIREFLY']] = [], sprite[SPRITE['FIREFLY']][SPRITE['DAY']] = IMAGES['FIREFLYD'], sprite[SPRITE['FIREFLY']][SPRITE['NIGHT']] = IMAGES['FIREFLYN'], sprite[SPRITE['HURT_FIREFLY']] = IMAGES['HURT_FIREFLY'], (sprite[SPRITE['TOTEM']] = [], sprite[SPRITE['TOTEM']][SPRITE['DAY']] = CTI(create_totem(_0x4822ee * 0.75, !![], ['#0d1b1c', '#4c3a15', '#634828', '#564021']))), sprite[SPRITE['TOTEM']][SPRITE['NIGHT']] = CTI(create_totem(_0x4822ee * 0.75, !![], ['#030d14', '#0d2e33', '#184747', '#123b3f'])), sprite[SPRITE['ICON_MEMBER']] = CTI(create_icon_team(_0x4822ee * 0.3, ['#092813', '#1f773d'], 0x0)), sprite[SPRITE['ICON_LEADER']] = CTI(create_icon_team(_0x4822ee * 0.3, ['#092813', '#1f773d'], 0x1)), sprite[SPRITE['VERIFIED']] = CTI(create_verified(_0x4822ee * 0.6, ['#092813', '#1f773d'])), sprite[SPRITE['TEAM_BUTTON']] = [], sprite[SPRITE['TEAM_BUTTON']]['push'](CTI(create_team_button(_0x4822ee * 0.7, ['#092813', '#1f773d', '#165b2b', '#4c3a15', '#1f773d'], 0x0))), sprite[SPRITE['TEAM_BUTTON']]['push'](CTI(create_team_button(_0x4822ee * 0.7, ['#0b3719', '#228745', '#1a7034', '#614a1a', '#238845'], 0x0))), sprite[SPRITE['TEAM_BUTTON']]['push'](CTI(create_team_button(_0x4822ee * 0.7, ['#092a14', '#186733', '#124a23', '#4c3a15', '#1b6735'], 0x0))), sprite[SPRITE['FULL_TEAM_BUTTON']] = [];
    var _0x474ce2 = CTI(create_team_button(_0x4822ee * 0.7, ['#280e09', '#77371f', '#280e09', '#2e2410', '#77371f'], 0x0));
    sprite[SPRITE['FULL_TEAM_BUTTON']]['push'](_0x474ce2), sprite[SPRITE['FULL_TEAM_BUTTON']]['push'](_0x474ce2), sprite[SPRITE['FULL_TEAM_BUTTON']]['push'](_0x474ce2), sprite[SPRITE['MANAGE_TEAM_BUTTON']] = [], sprite[SPRITE['MANAGE_TEAM_BUTTON']]['push'](CTI(create_team_button(_0x4822ee * 0.7, ['#092813', '#1f773d', '#165b2b', '#4c3a15', '#1f773d'], 0x1))), sprite[SPRITE['MANAGE_TEAM_BUTTON']]['push'](CTI(create_team_button(_0x4822ee * 0.7, ['#0b3719', '#228745', '#1a7034', '#614a1a', '#238845'], 0x1))), sprite[SPRITE['MANAGE_TEAM_BUTTON']]['push'](CTI(create_team_button(_0x4822ee * 0.7, ['#092a14', '#186733', '#124a23', '#4c3a15', '#1b6735'], 0x1))), sprite[SPRITE['DELAY_SPIKE']] = CTI(create_spiketimer(_0x4822ee * 0.3, ['#FFFFFF'])), sprite[SPRITE['DELAY_WALL']] = CTI(create_delay_wall(_0x4822ee * 0.3, ['#FFFFFF'])), sprite[SPRITE['DELAY_TEAM']] = CTI(create_icon_team(_0x4822ee * 0.4, ['rgba(255,\x20255,\x20255,\x200)', '#FFFFFF'], 0x0)), sprite[SPRITE['DELAY_DRINK']] = CTI(create_rotated_img(Math['PI'] / 0x5, create_drink_delay(_0x4822ee * 0.2, ['#FFFFFF']))), (sprite[SPRITE['AMETHYST_HELMET']] = [], sprite[SPRITE['AMETHYST_HELMET']][SPRITE['DAY']] = CTI(create_amethyst_helmet(_0x4822ee * 0.85, !![], ['#0d1b1c', '#8c55b7', '#652d8e', '#79359e', '#5eccd1', '#4badad', '#9e6ac6']))), sprite[SPRITE['AMETHYST_HELMET']][SPRITE['NIGHT']] = CTI(create_amethyst_helmet(_0x4822ee * 0.85, !![], ['#0d1b1c', '#4e4e93', '#393977', '#444187', '#2b9390', '#277a74', '#7da8db'])), sprite[SPRITE['SHOW_TEAM_BUTTON']] = [], sprite[SPRITE['SHOW_TEAM_BUTTON']]['push'](CTI(create_team_button(_0x4822ee * 0.7, ['#280e09', '#77371f', '#280e09', '#2e2410', '#77371f'], 0x1))), sprite[SPRITE['SHOW_TEAM_BUTTON']]['push'](CTI(create_team_button(_0x4822ee * 0.7, ['#38130C', '#853D22', '#391402', '#3D3016', '#873E22'], 0x1))), sprite[SPRITE['SHOW_TEAM_BUTTON']]['push'](CTI(create_team_button(_0x4822ee * 0.7, ['#1C0A06', '#6B3019', '#1D0A06', '#251D0C', '#6A301A'], 0x1))), (sprite[SPRITE['HOOD']] = [], sprite[SPRITE['HOOD']][SPRITE['DAY']] = CTI(create_hood(_0x4822ee * 0.37, !![], ['#2a2938', '#242330', '#313041']))), sprite[SPRITE['HOOD']][SPRITE['NIGHT']] = CTI(create_hood(_0x4822ee * 0.37, !![], ['#1b1e30', '#161921', '#252f3e'])), (sprite[SPRITE['WINTER_HOOD']] = [], sprite[SPRITE['WINTER_HOOD']][SPRITE['DAY']] = CTI(create_winter_hood(_0x4822ee * 0.17, !![], ['#2a2938', '#242330', '#313041', '#1b1a25', '#d62c0e']))), sprite[SPRITE['WINTER_HOOD']][SPRITE['NIGHT']] = CTI(create_winter_hood(_0x4822ee * 0.17, !![], ['#1b1e30', '#161921', '#252f3e', '#0a0c11', '#d62c0e'])), (sprite[SPRITE['WINTER_PEASANT']] = [], sprite[SPRITE['WINTER_PEASANT']][SPRITE['DAY']] = CTI(create_peasant(_0x4822ee * 0.55, !![], ['#1d1d22', '#e2e1e1', '#d2cbcb', '#cfcbc8', '#beb5b5', '#ada0a0'], 0x1))), sprite[SPRITE['WINTER_PEASANT']][SPRITE['NIGHT']] = CTI(create_peasant(_0x4822ee * 0.55, !![], ['#1d1d22', '#216661', '#134945', '#2b8079', '#17504c'], 0x1)), (sprite[SPRITE['PEASANT']] = [], sprite[SPRITE['PEASANT']][SPRITE['DAY']] = CTI(create_peasant(_0x4822ee * 0.55, !![], ['#1d1d22', '#8c7654', '#785f4c', '#a88e6c', '#785f4c', '#705845'], 0x0))), sprite[SPRITE['PEASANT']][SPRITE['NIGHT']] = CTI(create_peasant(_0x4822ee * 0.55, !![], ['#1d1d22', '#1b5752', '#0e3b37', '#23706a', '#11413e', '#0b322f'], 0x0)), (sprite[SPRITE['CROWN_GREEN']] = [], sprite[SPRITE['CROWN_GREEN']][SPRITE['DAY']] = CTI(create_crown_life(_0x4822ee * 0.2, !![], ['#0d1b1c', '#A5A244', '#D8DC74', '#C0BF55', '#49B669', '#19994C', '#71C187']))), sprite[SPRITE['CROWN_GREEN']][SPRITE['NIGHT']] = CTI(create_crown_life(_0x4822ee * 0.2, !![], ['#2b7c57', '#114933', '#1b6656', '#1a7961', '#3db76f', '#118254', '#40c696'])), (sprite[SPRITE['CROWN_ORANGE']] = [], sprite[SPRITE['CROWN_ORANGE']][SPRITE['DAY']] = CTI(create_crown_life(_0x4822ee * 0.2, !![], ['#0d1b1c', '#A5A244', '#D8DC74', '#C0BF55', '#C45727', '#994617', '#DB9358']))), sprite[SPRITE['CROWN_ORANGE']][SPRITE['NIGHT']] = CTI(create_crown_life(_0x4822ee * 0.2, !![], ['#2b7c57', '#114933', '#1b6656', '#1a7961', '#69b681', '#509a75', '#7ec387'])), (sprite[SPRITE['CROWN_BLUE']] = [], sprite[SPRITE['CROWN_BLUE']][SPRITE['DAY']] = CTI(create_crown_life(_0x4822ee * 0.2, !![], ['#0d1b1c', '#A5A244', '#D8DC74', '#C0BF55', '#2792C1', '#196599', '#59C0D8']))), sprite[SPRITE['CROWN_BLUE']][SPRITE['NIGHT']] = CTI(create_crown_life(_0x4822ee * 0.2, !![], ['#2b7c57', '#114933', '#1b6656', '#1a7961', '#19899e', '#16688b', '#4ea3c7'])), (sprite[SPRITE['CROWN_CRAB']] = [], sprite[SPRITE['CROWN_CRAB']][SPRITE['DAY']] = CTI(create_crab_crown(_0x4822ee * 0.24, !![], ['#000000', '#b03431', '#94312d', '#bd3c33', '#e45936']))), sprite[SPRITE['CROWN_CRAB']][SPRITE['NIGHT']] = CTI(create_crab_crown(_0x4822ee * 0.24, !![], ['#000000', '#1b103e', '#190f3b', '#261a4e', '#34255d'])), (sprite[SPRITE['DRAGON_HELMET']] = [], sprite[SPRITE['DRAGON_HELMET']][SPRITE['DAY']] = CTI(create_dragon_helmet(_0x4822ee * 0.32, !![], ['#0d1b1c', '#cae9eb', '#75bcae', '#ffffff', '#51736d', '#2b4d48', '#1b3a3a', '#80ccca', '#59ada7']))), sprite[SPRITE['DRAGON_HELMET']][SPRITE['NIGHT']] = CTI(create_dragon_helmet(_0x4822ee * 0.32, !![], ['#0d1b1c', '#70c1d6', '#49b2cf', '#87cad9', '#367c93', '#113743', '#0c2c36', '#51a2b8', '#3a8ea4'])), sprite[SPRITE['DRAGON_SWORD']] = [], sprite[SPRITE['DRAGON_SWORD']][SPRITE['DAY']] = CTI(create_rotated_img(0x3, create_dragon_sword(_0x4822ee * 0.9, !![], ['#0d1b1c', '#284c4a', '#193533', '#c8efef', '#7eccbb']))), sprite[SPRITE['DRAGON_SWORD']][SPRITE['NIGHT']] = CTI(create_rotated_img(0x3, create_dragon_sword(_0x4822ee * 0.9, !![], ['#0d1b1c', '#18332e', '#112320', '#87d2e6', '#49b2cf']))), sprite[SPRITE['DRAGON_SWORD_HALO']] = [], sprite[SPRITE['DRAGON_SWORD_HALO']][SPRITE['DAY']] = CTI(create_rotated_img(0x3, create_dragon_sword(_0x4822ee * 0x1, !![], [undefined, undefined, undefined, '#c8efef', '#c8efef']))), sprite[SPRITE['DRAGON_SWORD_HALO']][SPRITE['NIGHT']] = CTI(create_rotated_img(0x3, create_dragon_sword(_0x4822ee * 0x1, !![], [undefined, undefined, undefined, '#87d2e6', '#87d2e6']))), sprite[SPRITE['QUEST_BUTTON']] = [], sprite[SPRITE['QUEST_BUTTON']]['push'](CTI(create_quest_button(_0x4822ee * 0.3, !![], ['#0d1b1c', '#392C16', '#5E3E1A', '#704821', '#654320', '#eda80d'], 0x0))), sprite[SPRITE['QUEST_BUTTON']]['push'](CTI(create_quest_button(_0x4822ee * 0.3, !![], ['#0d1b1c', '#392C16', '#5E3E1A', '#704821', '#654320', '#eda80d'], 0x1))), sprite[SPRITE['QUEST_BUTTON']]['push'](CTI(create_quest_button(_0x4822ee * 0.3, !![], ['#0d1b1c', '#392C16', '#5E3E1A', '#704821', '#654320', '#d7990c'], 0x1))), sprite[SPRITE['MARKET_BUTTON']] = [], sprite[SPRITE['MARKET_BUTTON']]['push'](CTI(create_market_button(_0x4822ee * 0.7, ['#392C16', '#5E3E1A', '#85592c', '#eda80d'], 0x0))), sprite[SPRITE['MARKET_BUTTON']]['push'](CTI(create_market_button(_0x4822ee * 0.7, ['#392C16', '#5E3E1A', '#85592c', '#eda80d'], 0x1))), sprite[SPRITE['MARKET_BUTTON']]['push'](CTI(create_market_button(_0x4822ee * 0.7, ['#392C16', '#5E3E1A', '#85592c', '#eda80d'], 0x1))), sprite[SPRITE['SOUND_BUTTON_ON']] = [], sprite[SPRITE['SOUND_BUTTON_ON']]['push'](CTI(create_music_button(_0x4822ee * 0.4, ['#0d1b1c', '#392C16', '#5E3E1A', '#eda80d'], 0x0, 0x1))), sprite[SPRITE['SOUND_BUTTON_ON']]['push'](CTI(create_music_button(_0x4822ee * 0.4, ['#0d1b1c', '#392C16', '#5E3E1A', '#eda80d'], 0x1, 0x1))), sprite[SPRITE['SOUND_BUTTON_ON']]['push'](CTI(create_music_button(_0x4822ee * 0.4, ['#0d1b1c', '#392C16', '#5E3E1A', '#d7990c'], 0x1, 0x1))), sprite[SPRITE['SOUND_BUTTON_OFF']] = [], sprite[SPRITE['SOUND_BUTTON_OFF']]['push'](CTI(create_music_button(_0x4822ee * 0.4, ['#0d1b1c', '#392C16', '#5E3E1A', '#eda80d'], 0x0, 0x0))), sprite[SPRITE['SOUND_BUTTON_OFF']]['push'](CTI(create_music_button(_0x4822ee * 0.4, ['#0d1b1c', '#392C16', '#5E3E1A', '#eda80d'], 0x1, 0x0))), sprite[SPRITE['SOUND_BUTTON_OFF']]['push'](CTI(create_music_button(_0x4822ee * 0.4, ['#0d1b1c', '#392C16', '#5E3E1A', '#d7990c'], 0x1, 0x0))), sprite[SPRITE['SHOVEL']] = [], sprite[SPRITE['SHOVEL']][SPRITE['DAY']] = CTI(create_rotated_img(0x3, create_shovel(_0x4822ee * 0.7, !![], ['#0d1b1c', '#6d5041', '#4f3d35', '#939393', '#5f6061', '#757575']))), sprite[SPRITE['SHOVEL']][SPRITE['NIGHT']] = CTI(create_rotated_img(0x3, create_shovel(_0x4822ee * 0.7, !![], ['#0d1b1c', '#0d2e33', '#0b2326', '#485e66', '#1f343f', '#274352']))), sprite[SPRITE['SHOVEL_GOLD']] = [], sprite[SPRITE['SHOVEL_GOLD']][SPRITE['DAY']] = CTI(create_rotated_img(0x3, create_shovel(_0x4822ee * 0.7, !![], ['#0d1b1c', '#493e26', '#382e19', '#c4bc51', '#b29c32', '#ada437']))), sprite[SPRITE['SHOVEL_GOLD']][SPRITE['NIGHT']] = CTI(create_rotated_img(0x3, create_shovel(_0x4822ee * 0.7, !![], ['#0d1b1c', '#263947', '#182935', '#43aa82', '#29997c', '#32916c']))), sprite[SPRITE['SHOVEL_DIAMOND']] = [], sprite[SPRITE['SHOVEL_DIAMOND']][SPRITE['DAY']] = CTI(create_rotated_img(0x3, create_shovel(_0x4822ee * 0.7, !![], ['#0d1b1c', '#262114', '#211108', '#63c9d6', '#29aaa1', '#42aab8']))), sprite[SPRITE['SHOVEL_DIAMOND']][SPRITE['NIGHT']] = CTI(create_rotated_img(0x3, create_shovel(_0x4822ee * 0.7, !![], ['#0d1b1c', '#111316', '#0a0b0c', '#73dde5', '#3dc4c0', '#49bdc6']))), sprite[SPRITE['SHOVEL_AMETHYST']] = [], sprite[SPRITE['SHOVEL_AMETHYST']][SPRITE['DAY']] = CTI(create_rotated_img(0x3, create_shovel(_0x4822ee * 0.7, !![], ['#0d1b1c', '#262114', '#211108', '#b864d6', '#8c29aa', '#9641b5']))), sprite[SPRITE['SHOVEL_AMETHYST']][SPRITE['NIGHT']] = CTI(create_rotated_img(0x3, create_shovel(_0x4822ee * 0.7, !![], ['#0d1b1c', '#111316', '#0a0b0c', '#8359d3', '#764eb5', '#6f45c2']))), sprite[SPRITE['SHOP']] = [], sprite[SPRITE['SHOP']]['push'](CTI(create_shop(_0x4822ee * 0.7, ['#3b330d', '#b5a118', '#c8ac16'], 0x0))), sprite[SPRITE['SHOP']]['push'](CTI(create_shop(_0x4822ee * 0.7, ['#524712', '#c7b11c', '#d9ba18'], 0x0))), sprite[SPRITE['SHOP']]['push'](CTI(create_shop(_0x4822ee * 0.7, ['#2a2409', '#9f8e14', '#ad9511'], 0x0))), sprite[SPRITE['HURT_WOLF']] = CTI(create_hurt_wolf(_0x4822ee * 1.1, ['#BB0000'])), sprite[SPRITE['HURT_SPIDER']] = CTI(create_rotated_img(Math['PI'], create_hurt_spider(_0x4822ee * 0.9, '#BB0000'))), sprite[SPRITE['EXPLORER_HAT']] = [], sprite[SPRITE['EXPLORER_HAT']][SPRITE['DAY']] = CTI(create_explorer_hat(_0x4822ee * 0.55, !![], ['#c9a65f', '#ae863f', '#655530', '#4a391c', '#ebdd79', '#4a421c'])), sprite[SPRITE['EXPLORER_HAT']][SPRITE['NIGHT']] = CTI(create_explorer_hat(_0x4822ee * 0.55, !![], ['#15514f', '#0f3f3d', '#123335', '#0d2d2b', '#2b6664', '#070d16'])), sprite[SPRITE['WOOD_HELMET']] = [], sprite[SPRITE['WOOD_HELMET']][SPRITE['DAY']] = CTI(create_wooden_helmet(_0x4822ee * 0.55, !![], ['#252525', '#73583e', '#573f29', '#7d6144'])), sprite[SPRITE['WOOD_HELMET']][SPRITE['NIGHT']] = CTI(create_wooden_helmet(_0x4822ee * 0.55, !![], ['#0d3b39', '#144642', '#0b3230', '#154f4b'])), sprite[SPRITE['STONE_HELMET']] = [], sprite[SPRITE['STONE_HELMET']][SPRITE['DAY']] = CTI(create_viking_hat(_0x4822ee * 0.6, !![], ['#252525', '#808080', '#4a4a4a', '#9e9c8b', '#615c53', '#686969', '#8a8776', '#555555', '#747474', '#969696', '#454545'])), sprite[SPRITE['STONE_HELMET']][SPRITE['NIGHT']] = CTI(create_viking_hat(_0x4822ee * 0.6, !![], ['#030d14', '#1c4a4a', '#102d2d', '#255756', '#163d3c', '#194544', '#1f5252', '#184141', '#1c4a4a', '#255756', '#163a3a'])), sprite[SPRITE['GOLD_HELMET']] = [], sprite[SPRITE['GOLD_HELMET']][SPRITE['DAY']] = CTI(create_gold_helmet(_0x4822ee * 0.58, !![], ['#dbce71', '#b29c32', '#c4bc51'])), sprite[SPRITE['GOLD_HELMET']][SPRITE['NIGHT']] = CTI(create_gold_helmet(_0x4822ee * 0.58, !![], ['#2b7c57', '#15543c', '#1a7961'])), sprite[SPRITE['DIAMOND_HELMET']] = [], sprite[SPRITE['DIAMOND_HELMET']][SPRITE['DAY']] = CTI(create_diamond_helmet(_0x4822ee * 0.69, !![], ['#717171', '#485252', '#555555', '#65c7cd', '#4aadad', '#358d8b', '#c1e6ea', '#a6dce4'])), sprite[SPRITE['DIAMOND_HELMET']][SPRITE['NIGHT']] = CTI(create_diamond_helmet(_0x4822ee * 0.69, !![], ['#183f3f', '#092121', '#123335', '#2b9390', '#277a74', '#1f665f', '#83ddd4', '#59c9c0'])), sprite[SPRITE['FIR']] = [], sprite[SPRITE['FIR']][SPRITE['DAY']] = [], sprite[SPRITE['FIR']][SPRITE['NIGHT']] = [], sprite[SPRITE['FIR']][SPRITE['DAY']]['push'](CTI(create_fir_three(_0x4822ee * 1.3, ['#0a2d18', '#124c34', '#227248', '#ccedd9', '#2d7a55', '#3c9660', '#afddc1', '#bbefd0', '#0a2d18', '#e4efe8']))), sprite[SPRITE['FIR']][SPRITE['DAY']]['push'](CTI(create_fir_two(_0x4822ee * 1.5, ['#191919', '#134d35', '#247349', '#afddc1', '#bbefd0', '#e4efe8']))), sprite[SPRITE['FIR']][SPRITE['DAY']]['push'](CTI(create_fir_one(_0x4822ee * 1.5, ['#191919', '#134d35', '#247349', '#cde7d6', '#122d1c', '#e3eee7']))), sprite[SPRITE['FIR']][SPRITE['NIGHT']]['push'](CTI(create_fir_three(_0x4822ee * 1.3, ['#000000', '#0e3638', '#174a51', '#328587', '#174a51', '#1d5559', '#328587', '#48a8aa', '#0a2728', '#56afac']))), sprite[SPRITE['FIR']][SPRITE['NIGHT']]['push'](CTI(create_fir_two(_0x4822ee * 1.5, ['#000000', '#0e3638', '#174a51', '#328587', '#48a8aa', '#56afac']))), sprite[SPRITE['FIR']][SPRITE['NIGHT']]['push'](CTI(create_fir_one(_0x4822ee * 1.5, ['#000000', '#0e3638', '#174a51', '#328587', '#0a2728', '#56afac']))), sprite[SPRITE['DRAGON']] = [], sprite[SPRITE['DRAGON']][SPRITE['DAY']] = CTI(create_dragon(_0x4822ee * 0x1, ['#292b2b', '#57aba6', '#80ccca', '#c42333', '#a4dad9', '#3e8294', '#ffffff', '#57aba6', '#ffffff'])), sprite[SPRITE['DRAGON']][SPRITE['NIGHT']] = CTI(create_dragon(_0x4822ee * 0x1, ['#050505', '#1d3a38', '#0b514a', '#200333', '#327570', '#1d3a38', '#ffffff', '#0b514a', '#63afa9'])), sprite[SPRITE['WING_LEFT']] = [], sprite[SPRITE['WING_LEFT']][SPRITE['DAY']] = CTI(create_wingleft(_0x4822ee * 0x1, ['#292b2b', '#a4dad9', '#1f3f3f', '#c1233b'])), sprite[SPRITE['WING_LEFT']][SPRITE['NIGHT']] = CTI(create_wingleft(_0x4822ee * 0x1, ['#050505', '#327570', '#021724', '#200333'])), sprite[SPRITE['WING_RIGHT']] = [], sprite[SPRITE['WING_RIGHT']][SPRITE['DAY']] = CTI(create_wingright(_0x4822ee * 0x1, ['#292b2b', '#a4dad9', '#1f3f3f', '#c1233b'])), sprite[SPRITE['WING_RIGHT']][SPRITE['NIGHT']] = CTI(create_wingright(_0x4822ee * 0x1, ['#050505', '#327570', '#021724', '#200333'])), sprite[SPRITE['DECORATION']] = [], sprite[SPRITE['DECORATION']][SPRITE['DAY']] = [], sprite[SPRITE['DECORATION']][SPRITE['NIGHT']] = [], sprite[SPRITE['DECORATION']][SPRITE['DAY']] = [IMAGES['DECORATION_0D'], IMAGES['DECORATION_1D'], IMAGES['DECORATION_2D'], IMAGES['DECORATION_3D'], IMAGES['DECORATION_4D'], IMAGES['DECORATION_5D'], IMAGES['DECORATION_6D'], IMAGES['DECORATION_7D'], IMAGES['DECORATION_8D'], IMAGES['DECORATION_9D'], IMAGES['DECORATION_10D'], IMAGES['DECORATION_11D'], IMAGES['DECORATION_12D'], IMAGES['DECORATION_13D'], IMAGES['DECORATION_14D'], IMAGES['DECORATION_15D'], IMAGES['DECORATION_16D'], IMAGES['DECORATION_17D'], IMAGES['DECORATION_18D'], IMAGES['DECORATION_19D'], IMAGES['DECORATION_20D'], IMAGES['DECORATION_21D'], IMAGES['DECORATION_22D'], IMAGES['DECORATION_23D'], IMAGES['DECORATION_24D'], IMAGES['DECORATION_25D'], IMAGES['DECORATION_26D'], IMAGES['DECORATION_27D'], IMAGES['DECORATION_28D'], IMAGES['DECORATION_29D'], IMAGES['DECORATION_30D'], IMAGES['DECORATION_31D'], IMAGES['DECORATION_32D'], IMAGES['DECORATION_33D'], IMAGES['DECORATION_34D'], IMAGES['DECORATION_35D'], IMAGES['DECORATION_36D'], IMAGES['DECORATION_37D'], IMAGES['DECORATION_38D'], IMAGES['DECORATION_39D'], IMAGES['DECORATION_40D'], IMAGES['DECORATION_41D'], IMAGES['DECORATION_42D'], IMAGES['DECORATION_43D'], IMAGES['DECORATION_44D'], IMAGES['DECORATION_45D'], IMAGES['DECORATION_46D'], IMAGES['DECORATION_47D'], IMAGES['DECORATION_48D'], IMAGES['DECORATION_49D'], IMAGES['DECORATION_50D'], IMAGES['DECORATION_51D'], IMAGES['DECORATION_52D'], IMAGES['DECORATION_53D'], IMAGES['DECORATION_54D'], IMAGES['DECORATION_55D']], sprite[SPRITE['DECORATION']][SPRITE['NIGHT']] = [IMAGES['DECORATION_0N'], IMAGES['DECORATION_1N'], IMAGES['DECORATION_2N'], IMAGES['DECORATION_3N'], IMAGES['DECORATION_4N'], IMAGES['DECORATION_5N'], IMAGES['DECORATION_6N'], IMAGES['DECORATION_7N'], IMAGES['DECORATION_8N'], IMAGES['DECORATION_9N'], IMAGES['DECORATION_10N'], IMAGES['DECORATION_11N'], IMAGES['DECORATION_12N'], IMAGES['DECORATION_13N'], IMAGES['DECORATION_14N'], IMAGES['DECORATION_15N'], IMAGES['DECORATION_16N'], IMAGES['DECORATION_17N'], IMAGES['DECORATION_18N'], IMAGES['DECORATION_19N'], IMAGES['DECORATION_20N'], IMAGES['DECORATION_21N'], IMAGES['DECORATION_22N'], IMAGES['DECORATION_23N'], IMAGES['DECORATION_24N'], IMAGES['DECORATION_25N'], IMAGES['DECORATION_26N'], IMAGES['DECORATION_27N'], IMAGES['DECORATION_28N'], IMAGES['DECORATION_29N'], IMAGES['DECORATION_30N'], IMAGES['DECORATION_31N'], IMAGES['DECORATION_32N'], IMAGES['DECORATION_33N'], IMAGES['DECORATION_34N'], IMAGES['DECORATION_35N'], IMAGES['DECORATION_36N'], IMAGES['DECORATION_37N'], IMAGES['DECORATION_38N'], IMAGES['DECORATION_39N'], IMAGES['DECORATION_40N'], IMAGES['DECORATION_41N'], IMAGES['DECORATION_42N'], IMAGES['DECORATION_43N'], IMAGES['DECORATION_44N'], IMAGES['DECORATION_45N'], IMAGES['DECORATION_46N'], IMAGES['DECORATION_47N'], IMAGES['DECORATION_48N'], IMAGES['DECORATION_49N'], IMAGES['DECORATION_50N'], IMAGES['DECORATION_51N'], IMAGES['DECORATION_52N'], IMAGES['DECORATION_53N'], IMAGES['DECORATION_54N'], IMAGES['DECORATION_55N']], sprite[SPRITE['CAVE_STONES']] = [], sprite[SPRITE['CAVE_STONES']][SPRITE['DAY']] = [], sprite[SPRITE['CAVE_STONES']][SPRITE['NIGHT']] = [], sprite[SPRITE['CAVE_STONES']][SPRITE['DAY']]['push'](CTI(create_cave_stone(_0x4822ee * 1.1, ![], ['#252B28', '#747471', '#83827e'], 0x0))), sprite[SPRITE['CAVE_STONES']][SPRITE['DAY']]['push'](CTI(create_cave_stone(_0x4822ee * 0.9, ![], ['#252B28', '#747471', '#83827e'], 0x1))), sprite[SPRITE['CAVE_STONES']][SPRITE['DAY']]['push'](CTI(create_cave_stone(_0x4822ee * 0x1, ![], ['#252B28', '#747471', '#83827e'], 0x2))), sprite[SPRITE['CAVE_STONES']][SPRITE['DAY']]['push'](CTI(create_cave_stone(_0x4822ee * 0.9, ![], ['#252B28', '#747471', '#83827e'], 0x2))), sprite[SPRITE['CAVE_STONES']][SPRITE['NIGHT']]['push'](CTI(create_cave_stone(_0x4822ee * 1.1, ![], ['#030d14', '#123335', '#183f3f'], 0x0))), sprite[SPRITE['CAVE_STONES']][SPRITE['NIGHT']]['push'](CTI(create_cave_stone(_0x4822ee * 0.9, ![], ['#030d14', '#123335', '#183f3f'], 0x1))), sprite[SPRITE['CAVE_STONES']][SPRITE['NIGHT']]['push'](CTI(create_cave_stone(_0x4822ee * 0x1, ![], ['#030d14', '#123335', '#183f3f'], 0x2))), sprite[SPRITE['CAVE_STONES']][SPRITE['NIGHT']]['push'](CTI(create_cave_stone(_0x4822ee * 0.9, ![], ['#030d14', '#123335', '#183f3f'], 0x2))), sprite[SPRITE['SHADOW_CAVE_STONES']] = [], sprite[SPRITE['SHADOW_CAVE_STONES']][SPRITE['DAY']] = [], sprite[SPRITE['SHADOW_CAVE_STONES']][SPRITE['NIGHT']] = [], sprite[SPRITE['SHADOW_CAVE_STONES']][SPRITE['DAY']]['push'](CTI(create_cave_stone(_0x4822ee * 1.1, !![], ['#252B28', '#58645F', '#75827D'], 0x2))), sprite[SPRITE['SHADOW_CAVE_STONES']][SPRITE['DAY']]['push'](CTI(create_cave_stone(_0x4822ee * 0.9, !![], ['#252B28', '#58645F', '#75827D'], 0x2))), sprite[SPRITE['SHADOW_CAVE_STONES']][SPRITE['DAY']]['push'](CTI(create_cave_stone(_0x4822ee * 0x1, !![], ['#252B28', '#58645F', '#75827D'], 0x2))), sprite[SPRITE['SHADOW_CAVE_STONES']][SPRITE['DAY']]['push'](CTI(create_cave_stone(_0x4822ee * 0.9, !![], ['#252B28', '#58645F', '#75827D'], 0x2))), sprite[SPRITE['SHADOW_CAVE_STONES']][SPRITE['NIGHT']]['push'](CTI(create_cave_stone(_0x4822ee * 1.1, !![], ['#030d14', '#123335', '#183f3f'], 0x2))), sprite[SPRITE['SHADOW_CAVE_STONES']][SPRITE['NIGHT']]['push'](CTI(create_cave_stone(_0x4822ee * 0.9, !![], ['#030d14', '#123335', '#183f3f'], 0x2))), sprite[SPRITE['SHADOW_CAVE_STONES']][SPRITE['NIGHT']]['push'](CTI(create_cave_stone(_0x4822ee * 0x1, !![], ['#030d14', '#123335', '#183f3f'], 0x2))), sprite[SPRITE['SHADOW_CAVE_STONES']][SPRITE['NIGHT']]['push'](CTI(create_cave_stone(_0x4822ee * 0.9, !![], ['#030d14', '#123335', '#183f3f'], 0x2))), sprite[SPRITE['GOLD_WINTER']] = [], sprite[SPRITE['GOLD_WINTER']][SPRITE['DAY']] = [], sprite[SPRITE['GOLD_WINTER']][SPRITE['NIGHT']] = [], sprite[SPRITE['GOLD_WINTER']][SPRITE['DAY']]['push'](CTI(create_gold(_0x4822ee * 1.5, ![], ['#2b280a', '#ddcf8a', '#f4efc6']))), sprite[SPRITE['GOLD_WINTER']][SPRITE['DAY']]['push'](CTI(create_gold(_0x4822ee * 1.3, ![], ['#2b280a', '#ddcf8a', '#f4efc6']))), sprite[SPRITE['GOLD_WINTER']][SPRITE['DAY']]['push'](CTI(create_gold(_0x4822ee * 1.1, ![], ['#2b280a', '#ddcf8a', '#f4efc6']))), sprite[SPRITE['GOLD_WINTER']][SPRITE['NIGHT']]['push'](CTI(create_gold(_0x4822ee * 1.5, ![], ['#0a2728', '#3e8989', '#50a09c']))), sprite[SPRITE['GOLD_WINTER']][SPRITE['NIGHT']]['push'](CTI(create_gold(_0x4822ee * 1.3, ![], ['#0a2728', '#3e8989', '#50a09c']))), sprite[SPRITE['GOLD_WINTER']][SPRITE['NIGHT']]['push'](CTI(create_gold(_0x4822ee * 1.1, ![], ['#0a2728', '#3e8989', '#50a09c']))), sprite[SPRITE['DIAMOND_WINTER']] = [], sprite[SPRITE['DIAMOND_WINTER']][SPRITE['DAY']] = [], sprite[SPRITE['DIAMOND_WINTER']][SPRITE['NIGHT']] = [], sprite[SPRITE['DIAMOND_WINTER']][SPRITE['DAY']]['push'](CTI(create_diamond(_0x4822ee * 1.1, ![], ['#123d38', '#70e0dd', '#95efea']))), sprite[SPRITE['DIAMOND_WINTER']][SPRITE['DAY']]['push'](CTI(create_diamond(_0x4822ee * 0.9, ![], ['#123d38', '#70e0dd', '#95efea']))), sprite[SPRITE['DIAMOND_WINTER']][SPRITE['DAY']]['push'](CTI(create_diamond(_0x4822ee * 0.7, ![], ['#123d38', '#70e0dd', '#95efea']))), sprite[SPRITE['DIAMOND_WINTER']][SPRITE['NIGHT']]['push'](CTI(create_diamond(_0x4822ee * 1.1, ![], ['#123d38', '#47b2ac', '#5cccc4']))), sprite[SPRITE['DIAMOND_WINTER']][SPRITE['NIGHT']]['push'](CTI(create_diamond(_0x4822ee * 0.9, ![], ['#123d38', '#47b2ac', '#5cccc4']))), sprite[SPRITE['DIAMOND_WINTER']][SPRITE['NIGHT']]['push'](CTI(create_diamond(_0x4822ee * 0.7, ![], ['#123d38', '#47b2ac', '#5cccc4']))), sprite[SPRITE['AMETHYST']] = [], sprite[SPRITE['AMETHYST']][SPRITE['DAY']] = [], sprite[SPRITE['AMETHYST']][SPRITE['NIGHT']] = [], sprite[SPRITE['AMETHYST']][SPRITE['DAY']]['push'](CTI(create_amethyst(_0x4822ee * 1.7, !![], ['#1d051e', '#c27add', '#cd98e5']))), sprite[SPRITE['AMETHYST']][SPRITE['DAY']]['push'](CTI(create_amethyst(_0x4822ee * 1.5, !![], ['#1d051e', '#c27add', '#cd98e5']))), sprite[SPRITE['AMETHYST']][SPRITE['DAY']]['push'](CTI(create_amethyst(_0x4822ee * 1.3, !![], ['#1d051e', '#c27add', '#cd98e5']))), sprite[SPRITE['AMETHYST']][SPRITE['NIGHT']]['push'](CTI(create_amethyst(_0x4822ee * 1.7, !![], ['#1d051e', '#41aaa0', '#5cccc4']))), sprite[SPRITE['AMETHYST']][SPRITE['NIGHT']]['push'](CTI(create_amethyst(_0x4822ee * 1.5, !![], ['#1d051e', '#41aaa0', '#5cccc4']))), sprite[SPRITE['AMETHYST']][SPRITE['NIGHT']]['push'](CTI(create_amethyst(_0x4822ee * 1.3, !![], ['#1d051e', '#41aaa0', '#5cccc4']))), sprite[SPRITE['WATERBLOCK']] = [], sprite[SPRITE['WATERBLOCK']][SPRITE['DAY']] = [], sprite[SPRITE['WATERBLOCK']][SPRITE['NIGHT']] = [], sprite[SPRITE['WATERBLOCK']][SPRITE['DAY']]['push'](CTI(create_dragon_ground(_0x4822ee, ['#2d53c4']))), sprite[SPRITE['WATERBLOCK']][SPRITE['NIGHT']]['push'](CTI(create_dragon_ground(_0x4822ee, ['#2d53c4']))), sprite[SPRITE['ISLAND_BLOCK']] = [], sprite[SPRITE['ISLAND_BLOCK']][SPRITE['DAY']] = [], sprite[SPRITE['ISLAND_BLOCK']][SPRITE['NIGHT']] = [], sprite[SPRITE['ISLAND_BLOCK']][SPRITE['DAY']]['push'](CTI(create_dragon_ground(_0x4822ee, ['#c4912d']))), sprite[SPRITE['ISLAND_BLOCK']][SPRITE['NIGHT']]['push'](CTI(create_dragon_ground(_0x4822ee, ['#c4912d']))), sprite[SPRITE['CAVE_STEP']] = [], sprite[SPRITE['CAVE_STEP']][SPRITE['DAY']] = CTI(create_snow_step(_0x4822ee, ['#414040'])), sprite[SPRITE['CAVE_STEP']][SPRITE['NIGHT']] = CTI(create_snow_step(_0x4822ee, ['#153635'])), sprite[SPRITE['DOOR_WOOD_OPEN_WINTER']] = [], sprite[SPRITE['DOOR_WOOD_OPEN_WINTER']][SPRITE['DAY']] = CTI(create_door_wood(_0x4822ee * 0x1, ![], ['#EBF2F0', '#EBF2F0', '#b2d4d1', '#b2d4d1', '#EBF2F0', '#b2d4d1'])), sprite[SPRITE['DOOR_WOOD_OPEN_WINTER']][SPRITE['NIGHT']] = CTI(create_door_wood(_0x4822ee * 0x1, ![], ['#136167', '#136167', '#24878f', '#24878f', '#136167', '#24878f'])), sprite[SPRITE['DOOR_STONE_OPEN_WINTER']] = [], sprite[SPRITE['DOOR_STONE_OPEN_WINTER']][SPRITE['DAY']] = CTI(create_door_stone(_0x4822ee * 0x1, ![], ['#EBF2F0', '#EBF2F0', '#b2d4d1', '#b2d4d1', '#EBF2F0', '#b2d4d1'])), sprite[SPRITE['DOOR_STONE_OPEN_WINTER']][SPRITE['NIGHT']] = CTI(create_door_stone(_0x4822ee * 0x1, ![], ['#136167', '#136167', '#24878f', '#24878f', '#136167', '#24878f'])), sprite[SPRITE['DOOR_AMETHYST_OPEN_WINTER']] = [], sprite[SPRITE['DOOR_AMETHYST_OPEN_WINTER']][SPRITE['DAY']] = CTI(create_door_stone(_0x4822ee * 0x1, ![], ['#EBF2F0', '#EBF2F0', '#b2d4d1', '#b2d4d1', '#EBF2F0', '#b2d4d1'])), sprite[SPRITE['DOOR_AMETHYST_OPEN_WINTER']][SPRITE['NIGHT']] = CTI(create_door_stone(_0x4822ee * 0x1, ![], ['#136167', '#136167', '#24878f', '#24878f', '#136167', '#24878f'])), sprite[SPRITE['DOOR_DIAMOND_OPEN_WINTER']] = [], sprite[SPRITE['DOOR_DIAMOND_OPEN_WINTER']][SPRITE['DAY']] = CTI(create_door_diamond(_0x4822ee * 0x1, ![], ['#EBF2F0', '#EBF2F0', '#b2d4d1', '#b2d4d1', '#EBF2F0', '#b2d4d1'])), sprite[SPRITE['DOOR_DIAMOND_OPEN_WINTER']][SPRITE['NIGHT']] = CTI(create_door_diamond(_0x4822ee * 0x1, ![], ['#136167', '#136167', '#24878f', '#24878f', '#136167', '#24878f'])), sprite[SPRITE['DOOR_GOLD_OPEN_WINTER']] = [], sprite[SPRITE['DOOR_GOLD_OPEN_WINTER']][SPRITE['DAY']] = CTI(create_door_gold(_0x4822ee * 0x1, ![], ['#EBF2F0', '#EBF2F0', '#b2d4d1', '#b2d4d1', '#EBF2F0', '#b2d4d1'])), sprite[SPRITE['DOOR_GOLD_OPEN_WINTER']][SPRITE['NIGHT']] = CTI(create_door_gold(_0x4822ee * 0x1, ![], ['#136167', '#136167', '#24878f', '#24878f', '#136167', '#24878f'])), sprite[SPRITE['FOX']] = [], sprite[SPRITE['FOX']][SPRITE['DAY']] = CTI(create_winter_fox(_0x4822ee * 0.9, ['#1d051e', '#ffffff', '#c41c50', '#2c2e2d', '#c63450', '#f7e7f0'])), sprite[SPRITE['FOX']][SPRITE['NIGHT']] = CTI(create_winter_fox(_0x4822ee * 0.9, ['#123d38', '#1a847f', '#200333', '#131919', '#01333a', '#b6f2db'])), sprite[SPRITE['BEAR']] = [], sprite[SPRITE['BEAR']][SPRITE['DAY']] = CTI(create_polar_bear(_0x4822ee * 0.9, ['#1d051e', '#ffffff', '#c41c50', '#c63450', '#ffffff', '#f7e7f0', '#2b2d2d'])), sprite[SPRITE['BEAR']][SPRITE['NIGHT']] = CTI(create_polar_bear(_0x4822ee * 0.9, ['#123d38', '#1a847f', '#200333', '#01333a', '#ffffff', '#b6f2db', '#2b2d2d'])), sprite[SPRITE['MINIMAP']] = [], sprite[SPRITE['MINIMAP_CTX']] = [], sprite[SPRITE['BIGMAP']] = [], sprite[SPRITE['BIGMAP_CTX']] = [];
    for (var _0x977e2a = 0x0; _0x977e2a < 0x2; _0x977e2a++) {
        sprite[SPRITE['MINIMAP']][_0x977e2a] = document['createElement']('canvas'), sprite[SPRITE['MINIMAP']][_0x977e2a]['width'] = 0xc1, sprite[SPRITE['MINIMAP']][_0x977e2a]['height'] = 0xc1, sprite[SPRITE['MINIMAP_CTX']][_0x977e2a] = sprite[SPRITE['MINIMAP']][_0x977e2a]['getContext']('2d'), sprite[SPRITE['BIGMAP']][_0x977e2a] = document['createElement']('canvas'), sprite[SPRITE['BIGMAP']][_0x977e2a]['width'] = 0x258, sprite[SPRITE['BIGMAP']][_0x977e2a]['height'] = 0x258, sprite[SPRITE['BIGMAP_CTX']][_0x977e2a] = sprite[SPRITE['BIGMAP']][_0x977e2a]['getContext']('2d');
    }
    sprite[SPRITE['SNOW_STEP']] = [], sprite[SPRITE['SNOW_STEP']][SPRITE['DAY']] = CTI(create_snow_step(_0x4822ee, ['#c8e0de'])), sprite[SPRITE['SNOW_STEP']][SPRITE['NIGHT']] = CTI(create_snow_step(_0x4822ee, ['#147071'])), sprite[SPRITE['LAVA_STEP']] = [], sprite[SPRITE['LAVA_STEP']][SPRITE['DAY']] = CTI(create_snow_step(_0x4822ee, ['#231912'])), sprite[SPRITE['LAVA_STEP']][SPRITE['NIGHT']] = CTI(create_snow_step(_0x4822ee, ['#021719'])), sprite[SPRITE['HURT_TREASURE_CHEST']] = CTI(create_hurt_treasure_chest(_0x4822ee * 0.5, ['#BB0000'])), sprite[SPRITE['HURT_FOX']] = CTI(create_hurt_fox_winter(_0x4822ee * 0.9, '#BB0000')), sprite[SPRITE['HURT_BEAR']] = CTI(create_hurt_polar_bear(_0x4822ee * 0.9, '#BB0000')), sprite[SPRITE['HURT_DRAGON']] = CTI(create_hurt_dragon(_0x4822ee * 0x1, ['#BB0000'])), sprite[SPRITE['HURT_WING_LEFT']] = CTI(create_hurt_wingleft(_0x4822ee * 0.8, '#BB0000')), sprite[SPRITE['HURT_WING_RIGHT']] = CTI(create_hurt_wingright(_0x4822ee * 0.8, '#BB0000')), sprite[SPRITE['HURT_RABBIT']] = CTI(create_hurt_rabbit(_0x4822ee * 0.9, '#BB0000')), sprite[SPRITE['HURT']] = CTI(create_hurt_player(_0x4822ee * 0.6, '#BB0000')), sprite[SPRITE['COLD']] = CTI(create_hurt_player(_0x4822ee * 0.6, '#1CE7E0')), sprite[SPRITE['HUNGER']] = CTI(create_hurt_player(_0x4822ee * 0.6, '#DBE71C')), sprite[SPRITE['HEAL']] = CTI(create_hurt_player(_0x4822ee * 0.6, '#00BB00')), sprite[SPRITE['SAND_STEP']] = [], sprite[SPRITE['SAND_STEP']][SPRITE['DAY']] = CTI(create_snow_step(_0x4822ee, ['#dac291'])), sprite[SPRITE['SAND_STEP']][SPRITE['NIGHT']] = CTI(create_snow_step(_0x4822ee, ['#0D423D'])), sprite[SPRITE['ISLAND_STEP']] = [], sprite[SPRITE['ISLAND_STEP']][SPRITE['DAY']] = CTI(create_snow_step(_0x4822ee, ['#dac291'])), sprite[SPRITE['ISLAND_STEP']][SPRITE['NIGHT']] = CTI(create_snow_step(_0x4822ee, ['#0D423D'])), sprite[SPRITE['WELL_FULL']] = [], sprite[SPRITE['WELL_FULL']][SPRITE['DAY']] = CTI(create_well(_0x4822ee * 0.3, !![], ['#1e2021', '#717273', '#606162', '#a09f9f', '#878787', '#1a6470'])), sprite[SPRITE['WELL_FULL']][SPRITE['NIGHT']] = CTI(create_well(_0x4822ee * 0.3, !![], ['#1e2021', '#1a4545', '#163a3a', '#245d5d', '#1f5454', '#09373F'])), sprite[SPRITE['WELL_EMPTY']] = [], sprite[SPRITE['WELL_EMPTY']][SPRITE['DAY']] = CTI(create_well(_0x4822ee * 0.3, !![], ['#1e2021', '#717273', '#606162', '#a09f9f', '#878787', '#454545'])), sprite[SPRITE['WELL_EMPTY']][SPRITE['NIGHT']] = CTI(create_well(_0x4822ee * 0.3, !![], ['#1e2021', '#1a4545', '#163a3a', '#245d5d', '#1f5454', '#0b2121'])), sprite[SPRITE['BOTTLE_FULL']] = [CTI(create_bottle(_0x4822ee, !![], ['#C6AF81', '#C98435', '#B26F31', '#53A4D5', '#388AC7', '#C1C0C0', '#EAEAEA']))], sprite[SPRITE['BOTTLE_EMPTY']] = [CTI(create_bottle(_0x4822ee, !![], ['#C6AF81', '#C98435', '#B26F31', '#53A4D5', '#388AC7', '#C1C0C0', '#EAEAEA']))], sprite[SPRITE['OCEAN']] = [], sprite[SPRITE['OCEAN']][SPRITE['DAY']] = [], sprite[SPRITE['OCEAN']][SPRITE['NIGHT']] = [], sprite[SPRITE['OCEAN']][SPRITE['DAY']]['push'](CTI(create_snow_one(_0x4822ee * 0x1, ['#0B6A84']))), sprite[SPRITE['OCEAN']][SPRITE['DAY']]['push'](CTI(create_snow_two(_0x4822ee * 0x1, ['#0B6A84']))), sprite[SPRITE['OCEAN']][SPRITE['DAY']]['push'](CTI(create_snow_three(_0x4822ee * 0x1, ['#0B6A84']))), sprite[SPRITE['OCEAN']][SPRITE['DAY']]['push'](CTI(create_snow_four(_0x4822ee * 0x1, ['#0B6A84']))), sprite[SPRITE['OCEAN']][SPRITE['DAY']]['push'](CTI(create_snow_five(_0x4822ee * 0x1, ['#0B6A84']))), sprite[SPRITE['OCEAN']][SPRITE['DAY']]['push'](CTI(create_snow_six(_0x4822ee * 0x1, ['#0B6A84']))), sprite[SPRITE['OCEAN']][SPRITE['DAY']]['push'](CTI(create_snow_sept(_0x4822ee * 0x1, ['#0B6A84']))), sprite[SPRITE['OCEAN']][SPRITE['NIGHT']]['push'](CTI(create_snow_one(_0x4822ee * 0x1, ['#09373F']))), sprite[SPRITE['OCEAN']][SPRITE['NIGHT']]['push'](CTI(create_snow_two(_0x4822ee * 0x1, ['#09373F']))), sprite[SPRITE['OCEAN']][SPRITE['NIGHT']]['push'](CTI(create_snow_three(_0x4822ee * 0x1, ['#09373F']))), sprite[SPRITE['OCEAN']][SPRITE['NIGHT']]['push'](CTI(create_snow_four(_0x4822ee * 0x1, ['#09373F']))), sprite[SPRITE['OCEAN']][SPRITE['NIGHT']]['push'](CTI(create_snow_five(_0x4822ee * 0x1, ['#09373F']))), sprite[SPRITE['OCEAN']][SPRITE['NIGHT']]['push'](CTI(create_snow_six(_0x4822ee * 0x1, ['#09373F']))), sprite[SPRITE['OCEAN']][SPRITE['NIGHT']]['push'](CTI(create_snow_sept(_0x4822ee * 0x1, ['#09373F']))), sprite[SPRITE['ISLAND']] = [], sprite[SPRITE['ISLAND']][SPRITE['DAY']] = [], sprite[SPRITE['ISLAND']][SPRITE['NIGHT']] = [], sprite[SPRITE['ISLAND']][SPRITE['DAY']]['push'](CTI(create_island(_0x4822ee * 1.7, ['#FBEFBC'], 0x0))), sprite[SPRITE['ISLAND']][SPRITE['DAY']]['push'](CTI(create_island(_0x4822ee * 1.9, ['#FBEFBC'], 0x1))), sprite[SPRITE['ISLAND']][SPRITE['DAY']]['push'](CTI(create_island(_0x4822ee * 1.7, ['#FBEFBC'], 0x2))), sprite[SPRITE['ISLAND']][SPRITE['NIGHT']]['push'](CTI(create_island(_0x4822ee * 1.7, ['#0F4C48'], 0x0))), sprite[SPRITE['ISLAND']][SPRITE['NIGHT']]['push'](CTI(create_island(_0x4822ee * 1.9, ['#0F4C48'], 0x1))), sprite[SPRITE['ISLAND']][SPRITE['NIGHT']]['push'](CTI(create_island(_0x4822ee * 1.7, ['#0F4C48'], 0x2))), sprite[SPRITE['WAVE_ONE']] = [], sprite[SPRITE['WAVE_ONE']][SPRITE['DAY']] = [], sprite[SPRITE['WAVE_ONE']][SPRITE['NIGHT']] = [], sprite[SPRITE['WAVE_ONE']][SPRITE['DAY']]['push'](CTI(create_island(_0x4822ee * 1.8, ['#A9D6D3'], 0x0))), sprite[SPRITE['WAVE_ONE']][SPRITE['DAY']]['push'](CTI(create_island(_0x4822ee * 0x2, ['#A9D6D3'], 0x1))), sprite[SPRITE['WAVE_ONE']][SPRITE['DAY']]['push'](CTI(create_island(_0x4822ee * 1.8, ['#A9D6D3'], 0x2))), sprite[SPRITE['WAVE_ONE']][SPRITE['NIGHT']]['push'](CTI(create_island(_0x4822ee * 1.8, ['#115E60'], 0x0))), sprite[SPRITE['WAVE_ONE']][SPRITE['NIGHT']]['push'](CTI(create_island(_0x4822ee * 0x2, ['#115E60'], 0x1))), sprite[SPRITE['WAVE_ONE']][SPRITE['NIGHT']]['push'](CTI(create_island(_0x4822ee * 1.8, ['#115E60'], 0x2))), sprite[SPRITE['WAVE_TWO']] = [], sprite[SPRITE['WAVE_TWO']][SPRITE['DAY']] = [], sprite[SPRITE['WAVE_TWO']][SPRITE['NIGHT']] = [], sprite[SPRITE['WAVE_TWO']][SPRITE['DAY']]['push'](CTI(create_island(_0x4822ee * 1.9, ['#2A8B9B'], 0x0))), sprite[SPRITE['WAVE_TWO']][SPRITE['DAY']]['push'](CTI(create_island(_0x4822ee * 2.1, ['#2A8B9B'], 0x1))), sprite[SPRITE['WAVE_TWO']][SPRITE['DAY']]['push'](CTI(create_island(_0x4822ee * 1.9, ['#2A8B9B'], 0x2))), sprite[SPRITE['WAVE_TWO']][SPRITE['NIGHT']]['push'](CTI(create_island(_0x4822ee * 1.9, ['#0F464C'], 0x0))), sprite[SPRITE['WAVE_TWO']][SPRITE['NIGHT']]['push'](CTI(create_island(_0x4822ee * 2.1, ['#0F464C'], 0x1))), sprite[SPRITE['WAVE_TWO']][SPRITE['NIGHT']]['push'](CTI(create_island(_0x4822ee * 1.9, ['#0F464C'], 0x2))), sprite[SPRITE['PALM']] = [], sprite[SPRITE['PALM']][SPRITE['DAY']] = [], sprite[SPRITE['PALM']][SPRITE['NIGHT']] = [], sprite[SPRITE['PALM']][SPRITE['DAY']]['push'](CTI(create_palm(_0x4822ee * 0.8, ['#231F20', '#0c8e5b', '#037542', '#077b49']))), sprite[SPRITE['PALM']][SPRITE['DAY']]['push'](CTI(create_palm(_0x4822ee * 0x1, ['#231F20', '#0c8e5b', '#037542', '#077b49']))), sprite[SPRITE['PALM']][SPRITE['DAY']]['push'](CTI(create_palm(_0x4822ee * 1.2, ['#231F20', '#0c8e5b', '#037542', '#077b49']))), sprite[SPRITE['PALM']][SPRITE['NIGHT']]['push'](CTI(create_palm(_0x4822ee * 0.8, ['#041e22', '#124949', '#0e3838', '#0a4049']))), sprite[SPRITE['PALM']][SPRITE['NIGHT']]['push'](CTI(create_palm(_0x4822ee * 0x1, ['#041e22', '#124949', '#0e3838', '#0a4049']))), sprite[SPRITE['PALM']][SPRITE['NIGHT']]['push'](CTI(create_palm(_0x4822ee * 1.2, ['#041e22', '#124949', '#0e3838', '#0a4049']))), sprite[SPRITE['KRAKEN']] = [], sprite[SPRITE['KRAKEN']][SPRITE['DAY']] = CTI(create_kraken(_0x4822ee * 0.8, ['#1e2021', '#B6222A', '#201851', '#342C7C', '#F4F4F4', '#D3D3D3', '#6765CE', '#593CC6', '#433BAD', '#342C7C', '#052830', '#EAEAEA', '#B6222A', '#FFFFFF'])), sprite[SPRITE['KRAKEN']][SPRITE['NIGHT']] = CTI(create_kraken(_0x4822ee * 0.8, ['#0c0c0d', '#462966', '#081B2D', '#342C7C', '#9AAAAD', '#72898C', '#133556', '#296D9B', '#25557C', '#133556', '#0D2A42', '#EAEAEA', '#462966', '#72898C'])), sprite[SPRITE['HURT_KRAKEN']] = CTI(create_hurt_kraken(_0x4822ee * 0.8, ['#B6222A'])), sprite[SPRITE['PIRANHA']] = [], sprite[SPRITE['PIRANHA']][SPRITE['DAY']] = CTI(create_pirahna(_0x4822ee * 0.8, !![], ['#1e2021', '#961B1B', '#702727', '#C43B3B', '#d15151', '#B71C1C', '#E8E8E8', '#752E2E', '#891818'])), sprite[SPRITE['PIRANHA']][SPRITE['NIGHT']] = CTI(create_pirahna(_0x4822ee * 0.8, !![], ['#0c0c0d', '#21112D', '#281A49', '#462966', '#321C56', '#1C073D', '#FFFFFF', '#1C0833', '#1B1238'])), sprite[SPRITE['HURT_PIRANHA']] = CTI(create_hurt_pirahna(_0x4822ee * 0.8, ['#B6222A'])), sprite[SPRITE['FISH1']] = [], sprite[SPRITE['FISH1']][SPRITE['DAY']] = CTI(create_fish1(_0x4822ee * 0.4, !![], ['#1e2021', '#db6f26', '#ffffff', '#000000', '#833813'], 0x0)), sprite[SPRITE['FISH1']][SPRITE['NIGHT']] = CTI(create_fish1(_0x4822ee * 0.4, !![], ['#0c0c0d', '#21112D', '#281A49', '#462966'], 0x0)), sprite[SPRITE['FISH2']] = [], sprite[SPRITE['FISH2']][SPRITE['DAY']] = CTI(create_fish1(_0x4822ee * 0.4, !![], ['#1e2021', '#d35e35', '#ffffff', '#000000', '#000000'], 0x1)), sprite[SPRITE['FISH2']][SPRITE['NIGHT']] = CTI(create_fish1(_0x4822ee * 0.4, !![], ['#0c0c0d', '#21112D', '#281A49', '#462966'], 0x1)), sprite[SPRITE['FISH3']] = [], sprite[SPRITE['FISH3']][SPRITE['DAY']] = CTI(create_fish1(_0x4822ee * 0.4, !![], ['#1e2021', '#2973a5', '#ffffff', '#ffff00', '#000000', '#03243f', '#f2ec30', '#162f6d'], 0x0)), sprite[SPRITE['FISH3']][SPRITE['NIGHT']] = CTI(create_fish1(_0x4822ee * 0.4, !![], ['#0c0c0d', '#21112D', '#281A49', '#462966'], 0x0)), sprite[SPRITE['HURT_FISH1']] = CTI(create_hurt_fish1(_0x4822ee * 0.4, ['#B6222A'])), sprite[SPRITE['HURT_FISH2']] = CTI(create_hurt_fish1(_0x4822ee * 0.4, ['#B6222A'])), sprite[SPRITE['HURT_FISH3']] = CTI(create_hurt_fish1(_0x4822ee * 0.4, ['#B6222A'])), sprite[SPRITE['CRAB_LOOT']] = CTI(create_crab_loot(_0x4822ee * 0.35, !![], ['#0d1b1c', '#c04933', '#a33e2b', '#ee593d', '#c04933'], 0x1)), sprite[SPRITE['CRAB_STICK']] = CTI(create_crab_stick(_0x4822ee * 0.35, !![], ['#1e2021', '#ed5f4f', '#ce4545', '#ffffff', '#e2dad7'], 0x1)), sprite[SPRITE['CRAB_ATTACK']] = [], sprite[SPRITE['CRAB_ATTACK']][SPRITE['DAY']] = CTI(create_crab(_0x4822ee * 0.35, !![], ['#1e2021', '#e45936', '#B6222A', '#B6222A', '#FFFFFF'], 0x1)), sprite[SPRITE['CRAB_ATTACK']][SPRITE['NIGHT']] = CTI(create_crab(_0x4822ee * 0.35, !![], ['#0c0c0d', '#613577', '#462966', '#1C073D', '#FFFFFF'], 0x1)), sprite[SPRITE['CRAB']] = [], sprite[SPRITE['CRAB']][SPRITE['DAY']] = CTI(create_crab(_0x4822ee * 0.35, !![], ['#1e2021', '#e45936', '#ffffff', '#181414', '#FFFFFF'], 0x0)), sprite[SPRITE['CRAB']][SPRITE['NIGHT']] = CTI(create_crab(_0x4822ee * 0.35, !![], ['#0c0c0d', '#34255d', '#563f83', '#180f21', '#FFFFFF'], 0x0)), sprite[SPRITE['CRAB_CLAW_LEFT']] = [], sprite[SPRITE['CRAB_CLAW_LEFT']][SPRITE['DAY']] = CTI(create_crab_claw_left(_0x4822ee * 0.35, !![], ['#1e2021', '#e45936', '#ffffff'])), sprite[SPRITE['CRAB_CLAW_LEFT']][SPRITE['NIGHT']] = CTI(create_crab_claw_left(_0x4822ee * 0.35, !![], ['#0c0c0d', '#34255d', '#563f83'])), sprite[SPRITE['CRAB_CLAW_RIGHT']] = [], sprite[SPRITE['CRAB_CLAW_RIGHT']][SPRITE['DAY']] = CTI(create_crab_claw_right(_0x4822ee * 0.42, !![], ['#1e2021', '#e45936', '#ffffff'])), sprite[SPRITE['CRAB_CLAW_RIGHT']][SPRITE['NIGHT']] = CTI(create_crab_claw_right(_0x4822ee * 0.42, !![], ['#0c0c0d', '#34255d', '#563f83'])), sprite[SPRITE['CRAB_CLAW_LEFT_ATTACK']] = [], sprite[SPRITE['CRAB_CLAW_LEFT_ATTACK']][SPRITE['DAY']] = CTI(create_crab_claw_left(_0x4822ee * 0.35, !![], ['#1e2021', '#e45936', '#B6222A'])), sprite[SPRITE['CRAB_CLAW_LEFT_ATTACK']][SPRITE['NIGHT']] = CTI(create_crab_claw_left(_0x4822ee * 0.35, !![], ['#0c0c0d', '#613577', '#462966'])), sprite[SPRITE['CRAB_CLAW_RIGHT_ATTACK']] = [], sprite[SPRITE['CRAB_CLAW_RIGHT_ATTACK']][SPRITE['DAY']] = CTI(create_crab_claw_right(_0x4822ee * 0.42, !![], ['#1e2021', '#e45936', '#B6222A'])), sprite[SPRITE['CRAB_CLAW_RIGHT_ATTACK']][SPRITE['NIGHT']] = CTI(create_crab_claw_right(_0x4822ee * 0.42, !![], ['#0c0c0d', '#613577', '#462966'])), sprite[SPRITE['HURT_CRAB']] = CTI(create_hurt_crab(_0x4822ee * 0.35, ['#B6222A'])), sprite[SPRITE['HURT_CRAB_CLAW_LEFT']] = CTI(create_crab_claw_left(_0x4822ee * 0.35, !![], [undefined, '#B6222A'])), sprite[SPRITE['HURT_CRAB_CLAW_RIGHT']] = CTI(create_crab_claw_right(_0x4822ee * 0.35, !![], [undefined, '#B6222A'])), sprite[SPRITE['HEAL_CRAB']] = CTI(create_hurt_crab(_0x4822ee * 0.35, ['#22E066'])), sprite[SPRITE['HEAL_CRAB_CLAW_LEFT']] = CTI(create_crab_claw_left(_0x4822ee * 0.35, !![], [undefined, '#22E066'])), sprite[SPRITE['HEAL_CRAB_CLAW_RIGHT']] = CTI(create_crab_claw_right(_0x4822ee * 0.35, !![], [undefined, '#22E066'])), sprite[SPRITE['DIVING_MASK']] = [], sprite[SPRITE['DIVING_MASK']][SPRITE['DAY']] = CTI(create_divingmask(_0x4822ee * 0.3, !![], ['#1e2021', '#65A8B7', '#2E85A0', '#14275B', '#081826', '#1A3163', '#0C1944', '#89C4CE', '#2E85A0'])), sprite[SPRITE['DIVING_MASK']][SPRITE['NIGHT']] = CTI(create_divingmask(_0x4822ee * 0.3, !![], ['#0c0c0d', '#89C9C7', '#469E95', '#092C38', '#072021', '#0E343D', '#071F2D', '#9FD3D3', '#135367'])), sprite[SPRITE['SUPER_DIVING_SUIT']] = [], sprite[SPRITE['SUPER_DIVING_SUIT']][SPRITE['DAY']] = CTI(create_superdivingsuit(_0x4822ee * 0.45, !![], ['#C4BC51', '#B29C32', '#201851', '#652D8E', '#1e2021', '#2E85A0'])), sprite[SPRITE['SUPER_DIVING_SUIT']][SPRITE['NIGHT']] = CTI(create_superdivingsuit(_0x4822ee * 0.45, !![], ['#235050', '#357472', '#081B2D', '#342C7C', '#0c0c0d', '#135367'])), sprite[SPRITE['PLOT']] = [], sprite[SPRITE['PLOT']][SPRITE['DAY']] = CTI(create_plot(_0x4822ee * 0.63, !![], ['#1e2021', '#352E1E', '#4C3B19', '#574122'])), sprite[SPRITE['PLOT']][SPRITE['NIGHT']] = CTI(create_plot(_0x4822ee * 0.63, !![], ['#0c0c0d', '#071f22', '#0d2e33', '#184747'])), sprite[SPRITE['BRIDGE']] = [], sprite[SPRITE['BRIDGE']][SPRITE['DAY']] = CTI(create_bridge(_0x4822ee, !![], ['#1e2021', '#332715', '#4C3B19', '#574122'])), sprite[SPRITE['BRIDGE']][SPRITE['NIGHT']] = CTI(create_bridge(_0x4822ee, !![], ['#0c0c0d', '#071f22', '#0d2e33', '#184747'])), sprite[SPRITE['WOOD_TOWER']] = [], sprite[SPRITE['WOOD_TOWER']][SPRITE['DAY']] = IMAGES['WOOD_TOWERD'], sprite[SPRITE['WOOD_TOWER']][SPRITE['NIGHT']] = IMAGES['WOOD_TOWERN'], sprite[SPRITE['ROOF']] = [], sprite[SPRITE['ROOF']][SPRITE['DAY']] = CTI(create_roof(_0x4822ee * 0.59, !![], ['#0d1b1c', '#44301b', '#57442a', '#523e26'])), sprite[SPRITE['ROOF']][SPRITE['NIGHT']] = CTI(create_roof(_0x4822ee * 0.59, !![], ['#0c0c0d', '#062124', '#10373d', '#0f3333'])), sprite[SPRITE['ROOFS']] = [sprite[SPRITE['ROOF']]], sprite[SPRITE['ROOFS']][0x1] = [], sprite[SPRITE['ROOFS']][0x2] = [], sprite[SPRITE['ROOFS']][0x1][SPRITE['DAY']] = CTI(create_roof1(_0x4822ee * 0.59, !![], ['#0d1b1c', '#44301b', '#57442a', '#523e26'])), sprite[SPRITE['ROOFS']][0x1][SPRITE['NIGHT']] = CTI(create_roof1(_0x4822ee * 0.59, !![], ['#0c0c0d', '#062124', '#10373d', '#0f3333'])), sprite[SPRITE['ROOFS']][0x2][SPRITE['DAY']] = CTI(create_roof2(_0x4822ee * 0.59, !![], ['#0d1b1c', '#44301b', '#57442a', '#523e26'])), sprite[SPRITE['ROOFS']][0x2][SPRITE['NIGHT']] = CTI(create_roof2(_0x4822ee * 0.59, !![], ['#0c0c0d', '#062124', '#10373d', '#0f3333'])), sprite[SPRITE['WATERING_CAN_FULL']] = [], sprite[SPRITE['WATERING_CAN_FULL']][SPRITE['DAY']] = CTI(create_rotated_img(0x3 - Math['PI'] / 0x2, create_watering_can(_0x4822ee * 0.6, !![], ['#1e2021', '#674C2A', '#4C3B19', '#594225', '#1678a2']))), sprite[SPRITE['WATERING_CAN_FULL']][SPRITE['NIGHT']] = CTI(create_rotated_img(0x3 - Math['PI'] / 0x2, create_watering_can(_0x4822ee * 0.6, !![], ['#0c0c0d', '#07383c', '#0c4e53', '#042b2e', '#0c5975', '#11546c']))), sprite[SPRITE['DEAD_BOX']] = [], sprite[SPRITE['DEAD_BOX']][SPRITE['DAY']] = CTI(create_dead_box(_0x4822ee * 0.3, ['#ad8850', '#714f24', '#9f7d4a', '#b38e59', '#8b1008'], 0x0)), sprite[SPRITE['DEAD_BOX']][SPRITE['NIGHT']] = CTI(create_dead_box(_0x4822ee * 0.3, ['#1F5453', '#123335', '#1D4947', '#1F5453', '#0c2629'], 0x0)), sprite[SPRITE['DEAD_BOX_UI']] = CTI(create_dead_box_ui(_0x4822ee * 0.3, ['#ad8850', '#714f24', '#9f7d4a', '#b38e59', '#413624'])), sprite[SPRITE['HURT_DEAD_BOX']] = CTI(create_hurt_dead_box(_0x4822ee * 0.3, ['#BB0000'])), sprite[SPRITE['WINDMILL_FLOUR']] = create_craft_button(0x1, [{
        'f': create_flour,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#B3AA8E', '#817961', '#EBEAE2', '#E0DFD8']
    }], 0.25, ['#d2c77b', '#e7dc8f', '#bfb360'], 0.7), sprite[SPRITE['LAVA_HEART']] = create_craft_button(1.5, [{
        'f': create_dragon_heart,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#120202', '#750a0a', '#991616', '#120202']
    }], 0.45, ['#5bbcc9', '#73d2df', '#4daab6'], 0.9), sprite[SPRITE['HEART_SYMBOL_HUD']] = create_symbol_hud(_0x4822ee * 0.35, ['#072428', '#67A242', '#67A242'], 0x0), sprite[SPRITE['COLD_SYMBOL_HUD']] = create_symbol_hud(_0x4822ee * 0.35, ['#172130', '#649BB2', '#FFFFFF', '#FFFFFF', '#90C2D3', '#649BB2', '#84BDD1', '#2F5866'], 0x1), sprite[SPRITE['FOOD_SYMBOL_HUD']] = create_symbol_hud(_0x4822ee * 0.35, ['#3F0B11', '#B13424', '#FFFFFF', '#B13424', '#7e180b'], 0x2), sprite[SPRITE['WATER_SYMBOL_HUD']] = create_symbol_hud(_0x4822ee * 0.35, ['#1B2F4C', '#29488E', '#76c3e8', '#ffffff'], 0x3);
    if (!mobile) sprite[SPRITE['LEADERBOARD']] = CTI(create_leaderboard(_0x4822ee));
    else sprite[SPRITE['LEADERBOARD']] = CTI(create_leaderboard_mobile(_0x4822ee));
    if (!mobile) sprite[SPRITE['GAUGES']] = CTI(create_gauges(_0x4822ee));
    else sprite[SPRITE['GAUGES']] = CTI(create_gauges_mobile(0.75));
    if (!mobile) sprite[SPRITE['OXYGEN']] = CTI(create_oxygen_gauges(_0x4822ee));
    else sprite[SPRITE['OXYGEN']] = CTI(create_oxygen_gauges(0.75));
    sprite[SPRITE['DELAY_HELMET']] = CTI(create_viking_hat(_0x4822ee * 0.16, !![], ['rgba(0,\x200,\x200,\x200)', '#FFFFFF', '#FFFFFF', '#FFFFFF', '#FFFFFF'])), sprite[SPRITE['DELAY_WEAPON']] = CTI(create_rotated_img(5.8, create_sword(_0x4822ee * 0.15, !![], ['rgba(0,\x200,\x200,\x200)', '#FFFFFF', '#FFFFFF', '#FFFFFF', '#FFFFFF']))), sprite[SPRITE['COUNTER']] = [], sprite[SPRITE['SLOT_NUMBER']] = [];
    for (var _0x977e2a = 0x0; _0x977e2a < WORLD['WITH_BAG'] + 0x2; _0x977e2a++) sprite[SPRITE['SLOT_NUMBER']][_0x977e2a] = create_text(_0x4822ee, '' + (_0x977e2a + 0x1), 0xc, '#FFF');
    sprite[SPRITE['RECIPE_BUTTON']] = [], sprite[SPRITE['RECIPE_BUTTON']]['push'](CTI(create_recipe_button(_0x4822ee * 0.12, ['#442F19', '#2C2112', '#C09D6F', '#A37943', '#eda80d']))), sprite[SPRITE['RECIPE_BUTTON']]['push'](CTI(create_recipe_button(_0x4822ee * 0.12, ['#553b20', '#3e2f1a', '#d1ad7d', '#b3864c', '#eda80d'], 0x1))), sprite[SPRITE['RECIPE_BUTTON']]['push'](CTI(create_recipe_button(_0x4822ee * 0.12, ['#30200f', '#20180c', '#a78559', '#855f2f', '#b37d08'], 0x1))), sprite[SPRITE['CLOCK']] = [], sprite[SPRITE['CLOCK']]['push'](CTI(create_clock_day(_0x4822ee * 0.22))), sprite[SPRITE['CLOCK']]['push'](CTI(create_clock_night(_0x4822ee * 0.22))), sprite[SPRITE['ARROW_CLOCK']] = CTI(create_arrow_clock(_0x4822ee * 0.22)), sprite[SPRITE['OPTION_BUTTON']] = [], sprite[SPRITE['OPTION_BUTTON']]['push'](CTI(create_gear_option(_0x4822ee * 1.5, ['#795026', '#654320', '#eda80d'], 0x0))), sprite[SPRITE['OPTION_BUTTON']]['push'](CTI(create_gear_option(_0x4822ee * 1.5, ['#8f5e2c', '#7a5126', '#eda80d'], 0x1))), sprite[SPRITE['OPTION_BUTTON']]['push'](CTI(create_gear_option(_0x4822ee * 1.5, ['#67441f', '#573819', '#9c6e08'], 0x1))), sprite[SPRITE['AUTO_FEED']] = IMAGES['AUTO_FEED'], sprite[SPRITE['BANDAGE_ACTIVATED']] = IMAGES['BANDAGE_ACTIVATED'], sprite[SPRITE['STOP_REGENERATION']] = IMAGES['STOP_REGENERATION'], sprite[SPRITE['STOP_REGENERATION_BLIZZARD']] = IMAGES['STOP_REGENERATION_BLIZZARD'], sprite[SPRITE['SHOW_SPECTATORS']] = create_text(_0x4822ee, 'Show\x20spectators', 0x19, '#FFF', undefined, undefined, '#000', 0x5, 0xdc), sprite[SPRITE['RECONNECT']] = create_text(_0x4822ee, 'Reconnecting...', 0x1e, '#FFF'), console['log']('Load\x20canvas', Date['now']() - _0x1ad046);
}

function init_fake_world() {
    document['getElementById']('game_body')['style']['backgroundColor'] = SPRITE['GROUND'][fake_world['time']], fake_world['items']['push'](new Item(ITEMS['FIRE'], 0x0, 0x0, 0x0, 0x0, Math['random']() * Math['PI'] * 0x2, 0x2, 0x1)), fake_world['items']['push'](new Item(ITEMS['FRUIT'], 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x5)), fake_world['items']['push'](new Item(ITEMS['WORKBENCH'], 0x0, 0x0, 0x0, 0x0, Math['PI'] / 0x4, 0x0, 0x0)), fake_world['items']['push'](new Item(ITEMS['FRUIT'], 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x5));
}

function draw_fake_world() {
    var _0x3c994b = 0x1,
        _0x39d0e5 = fake_world['time'];
    sprite[SPRITE['HERB']] && (ctx['drawImage'](sprite[SPRITE['HERB']][_0x39d0e5][0x1], canw2 + 0x1e0, canh2 + 0xbe), ctx['drawImage'](sprite[SPRITE['HERB']][_0x39d0e5][0x2], canw2 + 0xb4, canh2 - 0x1ae), ctx['drawImage'](sprite[SPRITE['HERB']][_0x39d0e5][0x1], canw2 - 0x357, canh2 + 0x64), ctx['drawImage'](sprite[SPRITE['HERB']][_0x39d0e5][0x0], canw2 - 0x226, canh2 - 0x12c), ctx['drawImage'](sprite[SPRITE['HERB']][_0x39d0e5][0x0], canw2 - 0x3fc, canh2 - 0x208));
    sprite[SPRITE['STONES']] && (ctx['drawImage'](sprite[SPRITE['STONES']][_0x39d0e5][0x1], canw2 - 0x50, canh2 - 0x280), ctx['drawImage'](sprite[SPRITE['STONES']][_0x39d0e5][0x1], canw2 + 0x50, canh2 + 0x1ea), ctx['drawImage'](sprite[SPRITE['STONES']][_0x39d0e5][0x2], canw2 - 0xb4, canh2 - 0x2bc), ctx['drawImage'](sprite[SPRITE['STONES']][_0x39d0e5][0x0], canw2 + 0x226, canh2 + 0x64), ctx['drawImage'](sprite[SPRITE['STONES']][_0x39d0e5][0x1], canw2 + 0x1c2, canh2 + 0x12c), ctx['drawImage'](sprite[SPRITE['STONES']][_0x39d0e5][0x1], canw2 + 0x30c, canh2 + 0x12c), ctx['drawImage'](sprite[SPRITE['STONES']][_0x39d0e5][0x2], canw2 + 0x3d4, canh2 + 0xc8), ctx['drawImage'](sprite[SPRITE['STONES']][_0x39d0e5][0x2], canw2 + 0x2a8, canh2 + 0x258), ctx['drawImage'](sprite[SPRITE['STONES']][_0x39d0e5][0x2], canw2 - 0x17c, canh2 + 0x64), ctx['drawImage'](sprite[SPRITE['STONES']][_0x39d0e5][0x2], canw2 + 0x118, canh2 + 0xfa));
    sprite[SPRITE['PLANT']] && (ctx['drawImage'](sprite[SPRITE['PLANT']][_0x39d0e5][0x0], canw2 - 0x24e, canh2), ctx['drawImage'](sprite[SPRITE['PLANT']][_0x39d0e5][0x0], canw2 + 0x78, canh2 - 0x186), ctx['drawImage'](sprite[SPRITE['PLANT']][_0x39d0e5][0x0], canw2 - 0x10e, canh2 + 0x154));
    sprite[SPRITE['TREE']] && (ctx['drawImage'](sprite[SPRITE['TREE']][_0x39d0e5][0x4], canw2 - 0x2bc, canh2 - 0x258), ctx['drawImage'](sprite[SPRITE['TREE']][_0x39d0e5][0x2], canw2 - 0x3ca, canh2 - 0xfa), ctx['drawImage'](sprite[SPRITE['TREE']][_0x39d0e5][0x5], canw2 - 0x2d0, canh2 - 0xc8), ctx['drawImage'](sprite[SPRITE['TREE']][_0x39d0e5][0x2], canw2 - 0x3fc, canh2 + 0x154), ctx['drawImage'](sprite[SPRITE['TREE']][_0x39d0e5][0x0], canw2 - 0x460, canh2 - 0x0), ctx['drawImage'](sprite[SPRITE['TREE']][_0x39d0e5][0x1], canw2 - 0x28a, canh2 - 0x14a), ctx['drawImage'](sprite[SPRITE['TREE']][_0x39d0e5][0x4], canw2 - 0x1ef, canh2 - 0x5a), ctx['drawImage'](sprite[SPRITE['TREE']][_0x39d0e5][0x3], canw2 - 0x208, canh2 + 0x154), ctx['drawImage'](sprite[SPRITE['TREE']][_0x39d0e5][0x2], canw2 + 0x33e, canh2 - 0x208));
    if (sprite[SPRITE['FIR']]) {}
    if (user && world) {
        var _0x52abb8 = user['cam']['x'],
            _0x276000 = user['cam']['y'];
        user['cam']['x'] = canw2, user['cam']['y'] = canh2;
        var _0x2419bf = world['time'];
        world['time'] = fake_world['time'];
        var _0xd07834 = fake_world['items'];
        _0xd07834[0x2]['x'] = 0x190, _0xd07834[0x2]['y'] = 0x64, _0xd07834[0x2]['draw'](SPRITE['WORKBENCH']);
        var _0x7d318d = _0xd07834[0x1];
        _0x7d318d['x'] = -0x1f4, _0x7d318d['y'] = 0x64, _0x7d318d['fruits'][0x0]['x'] = _0x7d318d['x'] - 20.5, _0x7d318d['fruits'][0x0]['y'] = _0x7d318d['y'] - 22.5, _0x7d318d['fruits'][0x1]['x'] = _0x7d318d['x'] - 35.5, _0x7d318d['fruits'][0x1]['y'] = _0x7d318d['y'] + 7.5, _0x7d318d['fruits'][0x2]['x'] = _0x7d318d['x'] + 7.5, _0x7d318d['fruits'][0x2]['y'] = _0x7d318d['y'] - 0x1e, _0x7d318d['fruits'][0x3]['x'] = _0x7d318d['x'] + 22.5, _0x7d318d['fruits'][0x3]['y'] = _0x7d318d['y'], _0x7d318d['fruits'][0x4]['x'] = _0x7d318d['x'] - 7.5, _0x7d318d['fruits'][0x4]['y'] = _0x7d318d['y'] + 14.5;
        for (var _0xeef31f = 0x0; _0xeef31f < _0x7d318d['info']; _0xeef31f++) {
            _0x7d318d['fruits'][_0xeef31f]['draw'](SPRITE['FRUIT']);
        }
        var _0x7d318d = _0xd07834[0x3];
        _0x7d318d['x'] = 0xd2, _0x7d318d['y'] = -0x122, _0x7d318d['fruits'][0x0]['x'] = _0x7d318d['x'] - 20.5, _0x7d318d['fruits'][0x0]['y'] = _0x7d318d['y'] - 22.5, _0x7d318d['fruits'][0x1]['x'] = _0x7d318d['x'] - 35.5, _0x7d318d['fruits'][0x1]['y'] = _0x7d318d['y'] + 7.5, _0x7d318d['fruits'][0x2]['x'] = _0x7d318d['x'] + 7.5, _0x7d318d['fruits'][0x2]['y'] = _0x7d318d['y'] - 0x1e, _0x7d318d['fruits'][0x3]['x'] = _0x7d318d['x'] + 22.5, _0x7d318d['fruits'][0x3]['y'] = _0x7d318d['y'], _0x7d318d['fruits'][0x4]['x'] = _0x7d318d['x'] - 7.5, _0x7d318d['fruits'][0x4]['y'] = _0x7d318d['y'] + 14.5;
        for (var _0xeef31f = 0x0; _0xeef31f < _0x7d318d['info']; _0xeef31f++) {
            _0x7d318d['fruits'][_0xeef31f]['draw'](SPRITE['FRUIT']);
        }
        _0xd07834[0x0]['x'] = 0x1c2, _0xd07834[0x0]['y'] = -0x64, _0xd07834[0x0]['draw_bg'](SPRITE['WOOD_FIRE']), _0xd07834[0x0]['draw_fg'](), user['cam']['x'] = _0x52abb8, user['cam']['y'] = _0x276000, world['time'] = _0x2419bf;
    }
}

function render_inventory() {
    sprite[SPRITE['INV_PUMPKIN']] = create_craft_button(0x1, [{
        'f': create_pumpkin,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#352b10', '#c06937', '#cd733b', '#b25e34', '#244e2b', '#214224', '#6f4424', '#3c3009']
    }], 0.2, ['#3ba578', '#4eb687', '#3da34d'], 0.5), sprite[SPRITE['CHEST_PUMPKIN']] = sprite[SPRITE['INV_PUMPKIN']], sprite[SPRITE['INV_CARROT']] = [], sprite[SPRITE['INV_CARROT']][0x0] = IMAGES['INV_CARROT_OUT'], sprite[SPRITE['INV_CARROT']][0x1] = IMAGES['INV_CARROT_IN'], sprite[SPRITE['INV_CARROT']][0x2] = IMAGES['INV_CARROT_CLICK'], sprite[SPRITE['CHEST_CARROT']] = sprite[SPRITE['INV_CARROT']], sprite[SPRITE['INV_WATERMELON']] = [], sprite[SPRITE['INV_WATERMELON']][0x0] = IMAGES['INV_WATERMELON_OUT'], sprite[SPRITE['INV_WATERMELON']][0x1] = IMAGES['INV_WATERMELON_IN'], sprite[SPRITE['INV_WATERMELON']][0x2] = IMAGES['INV_WATERMELON_CLICK'], sprite[SPRITE['CHEST_WATERMELON']] = sprite[SPRITE['INV_WATERMELON']], sprite[SPRITE['INV_ALOE_VERA']] = [], sprite[SPRITE['INV_ALOE_VERA']][0x0] = IMAGES['INV_ALOE_VERA_OUT'], sprite[SPRITE['INV_ALOE_VERA']][0x1] = IMAGES['INV_ALOE_VERA_IN'], sprite[SPRITE['INV_ALOE_VERA']][0x2] = IMAGES['INV_ALOE_VERA_CLICK'], sprite[SPRITE['CHEST_ALOE_VERA']] = sprite[SPRITE['INV_ALOE_VERA']], sprite[SPRITE['INV_CACTUS']] = [], sprite[SPRITE['INV_CACTUS']][0x0] = IMAGES['INV_CACTUS_OUT'], sprite[SPRITE['INV_CACTUS']][0x1] = IMAGES['INV_CACTUS_IN'], sprite[SPRITE['INV_CACTUS']][0x2] = IMAGES['INV_CACTUS_CLICK'], sprite[SPRITE['CHEST_CACTUS']] = sprite[SPRITE['INV_CACTUS']], sprite[SPRITE['INV_TOMATO']] = [], sprite[SPRITE['INV_TOMATO']][0x0] = IMAGES['INV_TOMATO_OUT'], sprite[SPRITE['INV_TOMATO']][0x1] = IMAGES['INV_TOMATO_IN'], sprite[SPRITE['INV_TOMATO']][0x2] = IMAGES['INV_TOMATO_CLICK'], sprite[SPRITE['CHEST_TOMATO']] = sprite[SPRITE['INV_TOMATO']], sprite[SPRITE['INV_BOAT']] = [], sprite[SPRITE['INV_BOAT']][0x0] = IMAGES['INV_BOAT_OUT'], sprite[SPRITE['INV_BOAT']][0x1] = IMAGES['INV_BOAT_IN'], sprite[SPRITE['INV_BOAT']][0x2] = IMAGES['INV_BOAT_CLICK'], sprite[SPRITE['CHEST_BOAT']] = sprite[SPRITE['INV_BOAT']], sprite[SPRITE['CRAFT_BOAT']] = sprite[SPRITE['INV_BOAT']], sprite[SPRITE['INV_MACHETE']] = [], sprite[SPRITE['INV_MACHETE']][0x0] = IMAGES['INV_MACHETE_OUT'], sprite[SPRITE['INV_MACHETE']][0x1] = IMAGES['INV_MACHETE_IN'], sprite[SPRITE['INV_MACHETE']][0x2] = IMAGES['INV_MACHETE_CLICK'], sprite[SPRITE['CHEST_MACHETE']] = sprite[SPRITE['INV_MACHETE']], sprite[SPRITE['CRAFT_MACHETE']] = sprite[SPRITE['INV_MACHETE']], sprite[SPRITE['INV_SLED']] = [], sprite[SPRITE['INV_SLED']][0x0] = IMAGES['INV_SLED_OUT'], sprite[SPRITE['INV_SLED']][0x1] = IMAGES['INV_SLED_IN'], sprite[SPRITE['INV_SLED']][0x2] = IMAGES['INV_SLED_CLICK'], sprite[SPRITE['CHEST_SLED']] = sprite[SPRITE['INV_SLED']], sprite[SPRITE['CRAFT_SLED']] = sprite[SPRITE['INV_SLED']], sprite[SPRITE['INV_PIRATE_HAT']] = [], sprite[SPRITE['INV_PIRATE_HAT']][0x0] = IMAGES['INV_PIRATE_HAT_OUT'], sprite[SPRITE['INV_PIRATE_HAT']][0x1] = IMAGES['INV_PIRATE_HAT_IN'], sprite[SPRITE['INV_PIRATE_HAT']][0x2] = IMAGES['INV_PIRATE_HAT_CLICK'], sprite[SPRITE['CHEST_PIRATE_HAT']] = sprite[SPRITE['INV_PIRATE_HAT']], sprite[SPRITE['CRAFT_PIRATE_HAT']] = sprite[SPRITE['INV_PIRATE_HAT']], sprite[SPRITE['INV_FUR_MAMMOTH']] = [], sprite[SPRITE['INV_FUR_MAMMOTH']][0x0] = IMAGES['INV_FUR_MAMMOTH_OUT'], sprite[SPRITE['INV_FUR_MAMMOTH']][0x1] = IMAGES['INV_FUR_MAMMOTH_IN'], sprite[SPRITE['INV_FUR_MAMMOTH']][0x2] = IMAGES['INV_FUR_MAMMOTH_CLICK'], sprite[SPRITE['CHEST_FUR_MAMMOTH']] = sprite[SPRITE['INV_FUR_MAMMOTH']], sprite[SPRITE['INV_FUR_HAT']] = [], sprite[SPRITE['INV_FUR_HAT']][0x0] = IMAGES['INV_FUR_HAT_OUT'], sprite[SPRITE['INV_FUR_HAT']][0x1] = IMAGES['INV_FUR_HAT_IN'], sprite[SPRITE['INV_FUR_HAT']][0x2] = IMAGES['INV_FUR_HAT_CLICK'], sprite[SPRITE['CHEST_FUR_HAT']] = sprite[SPRITE['INV_FUR_HAT']], sprite[SPRITE['CRAFT_FUR_HAT']] = sprite[SPRITE['INV_FUR_HAT']], sprite[SPRITE['INV_WOOD_BOW']] = [], sprite[SPRITE['INV_WOOD_BOW']][0x0] = IMAGES['INV_WOOD_BOW_OUT'], sprite[SPRITE['INV_WOOD_BOW']][0x1] = IMAGES['INV_WOOD_BOW_IN'], sprite[SPRITE['INV_WOOD_BOW']][0x2] = IMAGES['INV_WOOD_BOW_CLICK'], sprite[SPRITE['CHEST_WOOD_BOW']] = sprite[SPRITE['INV_WOOD_BOW']], sprite[SPRITE['CRAFT_WOOD_BOW']] = sprite[SPRITE['INV_WOOD_BOW']], sprite[SPRITE['INV_WOOD_ARROW']] = [], sprite[SPRITE['INV_WOOD_ARROW']][0x0] = IMAGES['INV_WOOD_ARROW_OUT'], sprite[SPRITE['INV_WOOD_ARROW']][0x1] = IMAGES['INV_WOOD_ARROW_IN'], sprite[SPRITE['INV_WOOD_ARROW']][0x2] = IMAGES['INV_WOOD_ARROW_CLICK'], sprite[SPRITE['CHEST_WOOD_ARROW']] = sprite[SPRITE['INV_WOOD_ARROW']], sprite[SPRITE['CRAFT_WOOD_ARROW']] = sprite[SPRITE['INV_WOOD_ARROW']], sprite[SPRITE['INV_STONE_BOW']] = [], sprite[SPRITE['INV_STONE_BOW']][0x0] = IMAGES['INV_STONE_BOW_OUT'], sprite[SPRITE['INV_STONE_BOW']][0x1] = IMAGES['INV_STONE_BOW_IN'], sprite[SPRITE['INV_STONE_BOW']][0x2] = IMAGES['INV_STONE_BOW_CLICK'], sprite[SPRITE['CHEST_STONE_BOW']] = sprite[SPRITE['INV_STONE_BOW']], sprite[SPRITE['CRAFT_STONE_BOW']] = sprite[SPRITE['INV_STONE_BOW']], sprite[SPRITE['INV_STONE_ARROW']] = [], sprite[SPRITE['INV_STONE_ARROW']][0x0] = IMAGES['INV_STONE_ARROW_OUT'], sprite[SPRITE['INV_STONE_ARROW']][0x1] = IMAGES['INV_STONE_ARROW_IN'], sprite[SPRITE['INV_STONE_ARROW']][0x2] = IMAGES['INV_STONE_ARROW_CLICK'], sprite[SPRITE['CHEST_STONE_ARROW']] = sprite[SPRITE['INV_STONE_ARROW']], sprite[SPRITE['CRAFT_STONE_ARROW']] = sprite[SPRITE['INV_STONE_ARROW']], sprite[SPRITE['INV_GOLD_BOW']] = [], sprite[SPRITE['INV_GOLD_BOW']][0x0] = IMAGES['INV_GOLD_BOW_OUT'], sprite[SPRITE['INV_GOLD_BOW']][0x1] = IMAGES['INV_GOLD_BOW_IN'], sprite[SPRITE['INV_GOLD_BOW']][0x2] = IMAGES['INV_GOLD_BOW_CLICK'], sprite[SPRITE['CHEST_GOLD_BOW']] = sprite[SPRITE['INV_GOLD_BOW']], sprite[SPRITE['CRAFT_GOLD_BOW']] = sprite[SPRITE['INV_GOLD_BOW']], sprite[SPRITE['INV_GOLD_ARROW']] = [], sprite[SPRITE['INV_GOLD_ARROW']][0x0] = IMAGES['INV_GOLD_ARROW_OUT'], sprite[SPRITE['INV_GOLD_ARROW']][0x1] = IMAGES['INV_GOLD_ARROW_IN'], sprite[SPRITE['INV_GOLD_ARROW']][0x2] = IMAGES['INV_GOLD_ARROW_CLICK'], sprite[SPRITE['CHEST_GOLD_ARROW']] = sprite[SPRITE['INV_GOLD_ARROW']], sprite[SPRITE['CRAFT_GOLD_ARROW']] = sprite[SPRITE['INV_GOLD_ARROW']], sprite[SPRITE['INV_DIAMOND_BOW']] = [], sprite[SPRITE['INV_DIAMOND_BOW']][0x0] = IMAGES['INV_DIAMOND_BOW_OUT'], sprite[SPRITE['INV_DIAMOND_BOW']][0x1] = IMAGES['INV_DIAMOND_BOW_IN'], sprite[SPRITE['INV_DIAMOND_BOW']][0x2] = IMAGES['INV_DIAMOND_BOW_CLICK'], sprite[SPRITE['CHEST_DIAMOND_BOW']] = sprite[SPRITE['INV_DIAMOND_BOW']], sprite[SPRITE['CRAFT_DIAMOND_BOW']] = sprite[SPRITE['INV_DIAMOND_BOW']], sprite[SPRITE['INV_DIAMOND_ARROW']] = [], sprite[SPRITE['INV_DIAMOND_ARROW']][0x0] = IMAGES['INV_DIAMOND_ARROW_OUT'], sprite[SPRITE['INV_DIAMOND_ARROW']][0x1] = IMAGES['INV_DIAMOND_ARROW_IN'], sprite[SPRITE['INV_DIAMOND_ARROW']][0x2] = IMAGES['INV_DIAMOND_ARROW_CLICK'], sprite[SPRITE['CHEST_DIAMOND_ARROW']] = sprite[SPRITE['INV_DIAMOND_ARROW']], sprite[SPRITE['CRAFT_DIAMOND_ARROW']] = sprite[SPRITE['INV_DIAMOND_ARROW']], sprite[SPRITE['INV_AMETHYST_BOW']] = [], sprite[SPRITE['INV_AMETHYST_BOW']][0x0] = IMAGES['INV_AMETHYST_BOW_OUT'], sprite[SPRITE['INV_AMETHYST_BOW']][0x1] = IMAGES['INV_AMETHYST_BOW_IN'], sprite[SPRITE['INV_AMETHYST_BOW']][0x2] = IMAGES['INV_AMETHYST_BOW_CLICK'], sprite[SPRITE['CHEST_AMETHYST_BOW']] = sprite[SPRITE['INV_AMETHYST_BOW']], sprite[SPRITE['CRAFT_AMETHYST_BOW']] = sprite[SPRITE['INV_AMETHYST_BOW']], sprite[SPRITE['INV_AMETHYST_ARROW']] = [], sprite[SPRITE['INV_AMETHYST_ARROW']][0x0] = IMAGES['INV_AMETHYST_ARROW_OUT'], sprite[SPRITE['INV_AMETHYST_ARROW']][0x1] = IMAGES['INV_AMETHYST_ARROW_IN'], sprite[SPRITE['INV_AMETHYST_ARROW']][0x2] = IMAGES['INV_AMETHYST_ARROW_CLICK'], sprite[SPRITE['CHEST_AMETHYST_ARROW']] = sprite[SPRITE['INV_AMETHYST_ARROW']], sprite[SPRITE['CRAFT_AMETHYST_ARROW']] = sprite[SPRITE['INV_AMETHYST_ARROW']], sprite[SPRITE['INV_REIDITE_BOW']] = [], sprite[SPRITE['INV_REIDITE_BOW']][0x0] = IMAGES['INV_REIDITE_BOW_OUT'], sprite[SPRITE['INV_REIDITE_BOW']][0x1] = IMAGES['INV_REIDITE_BOW_IN'], sprite[SPRITE['INV_REIDITE_BOW']][0x2] = IMAGES['INV_REIDITE_BOW_CLICK'], sprite[SPRITE['CHEST_REIDITE_BOW']] = sprite[SPRITE['INV_REIDITE_BOW']], sprite[SPRITE['CRAFT_REIDITE_BOW']] = sprite[SPRITE['INV_REIDITE_BOW']], sprite[SPRITE['INV_REIDITE_ARROW']] = [], sprite[SPRITE['INV_REIDITE_ARROW']][0x0] = IMAGES['INV_REIDITE_ARROW_OUT'], sprite[SPRITE['INV_REIDITE_ARROW']][0x1] = IMAGES['INV_REIDITE_ARROW_IN'], sprite[SPRITE['INV_REIDITE_ARROW']][0x2] = IMAGES['INV_REIDITE_ARROW_CLICK'], sprite[SPRITE['CHEST_REIDITE_ARROW']] = sprite[SPRITE['INV_REIDITE_ARROW']], sprite[SPRITE['CRAFT_REIDITE_ARROW']] = sprite[SPRITE['INV_REIDITE_ARROW']], sprite[SPRITE['INV_DRAGON_BOW']] = [], sprite[SPRITE['INV_DRAGON_BOW']][0x0] = IMAGES['INV_DRAGON_BOW_OUT'], sprite[SPRITE['INV_DRAGON_BOW']][0x1] = IMAGES['INV_DRAGON_BOW_IN'], sprite[SPRITE['INV_DRAGON_BOW']][0x2] = IMAGES['INV_DRAGON_BOW_CLICK'], sprite[SPRITE['CHEST_DRAGON_BOW']] = sprite[SPRITE['INV_DRAGON_BOW']], sprite[SPRITE['CRAFT_DRAGON_BOW']] = sprite[SPRITE['INV_DRAGON_BOW']], sprite[SPRITE['INV_DRAGON_ARROW']] = [], sprite[SPRITE['INV_DRAGON_ARROW']][0x0] = IMAGES['INV_DRAGON_ARROW_OUT'], sprite[SPRITE['INV_DRAGON_ARROW']][0x1] = IMAGES['INV_DRAGON_ARROW_IN'], sprite[SPRITE['INV_DRAGON_ARROW']][0x2] = IMAGES['INV_DRAGON_ARROW_CLICK'], sprite[SPRITE['CHEST_DRAGON_ARROW']] = sprite[SPRITE['INV_DRAGON_ARROW']], sprite[SPRITE['CRAFT_DRAGON_ARROW']] = sprite[SPRITE['INV_DRAGON_ARROW']], sprite[SPRITE['INV_WOOD_SHIELD']] = [], sprite[SPRITE['INV_WOOD_SHIELD']][0x0] = IMAGES['INV_WOOD_SHIELD_OUT'], sprite[SPRITE['INV_WOOD_SHIELD']][0x1] = IMAGES['INV_WOOD_SHIELD_IN'], sprite[SPRITE['INV_WOOD_SHIELD']][0x2] = IMAGES['INV_WOOD_SHIELD_CLICK'], sprite[SPRITE['CHEST_WOOD_SHIELD']] = sprite[SPRITE['INV_WOOD_SHIELD']], sprite[SPRITE['CRAFT_WOOD_SHIELD']] = sprite[SPRITE['INV_WOOD_SHIELD']], sprite[SPRITE['INV_STONE_SHIELD']] = [], sprite[SPRITE['INV_STONE_SHIELD']][0x0] = IMAGES['INV_STONE_SHIELD_OUT'], sprite[SPRITE['INV_STONE_SHIELD']][0x1] = IMAGES['INV_STONE_SHIELD_IN'], sprite[SPRITE['INV_STONE_SHIELD']][0x2] = IMAGES['INV_STONE_SHIELD_CLICK'], sprite[SPRITE['CHEST_STONE_SHIELD']] = sprite[SPRITE['INV_STONE_SHIELD']], sprite[SPRITE['CRAFT_STONE_SHIELD']] = sprite[SPRITE['INV_STONE_SHIELD']], sprite[SPRITE['INV_GOLD_SHIELD']] = [], sprite[SPRITE['INV_GOLD_SHIELD']][0x0] = IMAGES['INV_GOLD_SHIELD_OUT'], sprite[SPRITE['INV_GOLD_SHIELD']][0x1] = IMAGES['INV_GOLD_SHIELD_IN'], sprite[SPRITE['INV_GOLD_SHIELD']][0x2] = IMAGES['INV_GOLD_SHIELD_CLICK'], sprite[SPRITE['CHEST_GOLD_SHIELD']] = sprite[SPRITE['INV_GOLD_SHIELD']], sprite[SPRITE['CRAFT_GOLD_SHIELD']] = sprite[SPRITE['INV_GOLD_SHIELD']], sprite[SPRITE['INV_DIAMOND_SHIELD']] = [], sprite[SPRITE['INV_DIAMOND_SHIELD']][0x0] = IMAGES['INV_DIAMOND_SHIELD_OUT'], sprite[SPRITE['INV_DIAMOND_SHIELD']][0x1] = IMAGES['INV_DIAMOND_SHIELD_IN'], sprite[SPRITE['INV_DIAMOND_SHIELD']][0x2] = IMAGES['INV_DIAMOND_SHIELD_CLICK'], sprite[SPRITE['CHEST_DIAMOND_SHIELD']] = sprite[SPRITE['INV_DIAMOND_SHIELD']], sprite[SPRITE['CRAFT_DIAMOND_SHIELD']] = sprite[SPRITE['INV_DIAMOND_SHIELD']], sprite[SPRITE['INV_AMETHYST_SHIELD']] = [], sprite[SPRITE['INV_AMETHYST_SHIELD']][0x0] = IMAGES['INV_AMETHYST_SHIELD_OUT'], sprite[SPRITE['INV_AMETHYST_SHIELD']][0x1] = IMAGES['INV_AMETHYST_SHIELD_IN'], sprite[SPRITE['INV_AMETHYST_SHIELD']][0x2] = IMAGES['INV_AMETHYST_SHIELD_CLICK'], sprite[SPRITE['CHEST_AMETHYST_SHIELD']] = sprite[SPRITE['INV_AMETHYST_SHIELD']], sprite[SPRITE['CRAFT_AMETHYST_SHIELD']] = sprite[SPRITE['INV_AMETHYST_SHIELD']], sprite[SPRITE['INV_REIDITE_SHIELD']] = [], sprite[SPRITE['INV_REIDITE_SHIELD']][0x0] = IMAGES['INV_REIDITE_SHIELD_OUT'], sprite[SPRITE['INV_REIDITE_SHIELD']][0x1] = IMAGES['INV_REIDITE_SHIELD_IN'], sprite[SPRITE['INV_REIDITE_SHIELD']][0x2] = IMAGES['INV_REIDITE_SHIELD_CLICK'], sprite[SPRITE['CHEST_REIDITE_SHIELD']] = sprite[SPRITE['INV_REIDITE_SHIELD']], sprite[SPRITE['CRAFT_REIDITE_SHIELD']] = sprite[SPRITE['INV_REIDITE_SHIELD']], sprite[SPRITE['INV_FLOWER_HAT']] = [], sprite[SPRITE['INV_FLOWER_HAT']][0x0] = IMAGES['INV_FLOWER_HAT_OUT'], sprite[SPRITE['INV_FLOWER_HAT']][0x1] = IMAGES['INV_FLOWER_HAT_IN'], sprite[SPRITE['INV_FLOWER_HAT']][0x2] = IMAGES['INV_FLOWER_HAT_CLICK'], sprite[SPRITE['CHEST_FLOWER_HAT']] = sprite[SPRITE['INV_FLOWER_HAT']], sprite[SPRITE['CRAFT_FLOWER_HAT']] = sprite[SPRITE['INV_FLOWER_HAT']], sprite[SPRITE['INV_SANDWORM_JUICE']] = [], sprite[SPRITE['INV_SANDWORM_JUICE']][0x0] = IMAGES['INV_SANDWORM_JUICE_OUT'], sprite[SPRITE['INV_SANDWORM_JUICE']][0x1] = IMAGES['INV_SANDWORM_JUICE_IN'], sprite[SPRITE['INV_SANDWORM_JUICE']][0x2] = IMAGES['INV_SANDWORM_JUICE_CLICK'], sprite[SPRITE['CHEST_SANDWORM_JUICE']] = sprite[SPRITE['INV_SANDWORM_JUICE']], sprite[SPRITE['CRAFT_SANDWORM_JUICE']] = sprite[SPRITE['INV_SANDWORM_JUICE']], sprite[SPRITE['INV_GARLIC']] = create_craft_button(0x1, [{
        'f': create_garlic,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#352b10', '#e8e8e8', '#bbbbbb', '#e0e1e0', '#c4c4c4']
    }], 0.22, ['#3ba578', '#4eb687', '#3da34d'], 0.5), sprite[SPRITE['CHEST_GARLIC']] = sprite[SPRITE['INV_GARLIC']], sprite[SPRITE['INV_THORNBUSH']] = create_craft_button(0x1, [{
        'f': create_brambles,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#352b10', '#349970', '#245c45', '#348361', '#e8e8e8', '#bbbbbb']
    }], 0.2, ['#3ba578', '#4eb687', '#3da34d'], 0.5), sprite[SPRITE['CHEST_THORNBUSH']] = sprite[SPRITE['INV_THORNBUSH']], sprite[SPRITE['INV_WINDMILL']] = create_craft_button(0x1, [{
        'f': create_windmill,
        'x': -0x1,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#0d1b1c', '#596560', '#394841', '#67766F', '#46554D', '#4C3B19', '#674C2A', '#7C5A29', '#596560', '#394841']
    }, {
        'f': create_windmill_wing,
        'x': -0x1,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#0d1b1c', '#596560', '#394841', '#67766F', '#46554D', '#4C3B19', '#674C2A', '#7C5A29', '#596560', '#394841']
    }, {
        'f': create_windmill_head,
        'x': -0x1,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#0d1b1c', '#596560', '#394841', '#67766F', '#46554D', '#4C3B19', '#674C2A', '#7C5A29', '#596560', '#394841']
    }], 0.4, ['#3ba578', '#4eb687', '#3da34d'], 0.5), sprite[SPRITE['CRAFT_WINDMILL']] = sprite[SPRITE['INV_WINDMILL']], sprite[SPRITE['INV_WILD_WHEAT']] = create_craft_button(0x1, [{
        'f': create_wheat,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#A89F67', '#9E8456']
    }], 1.2, ['#3ba578', '#4eb687', '#3da34d'], 0.5), sprite[SPRITE['INV_SIGN']] = create_craft_button(0x1, [{
        'f': create_sign,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#0d1b1c', '#44301b', '#57442a', '#523e26']
    }], 0.14, ['#3ba578', '#4eb687', '#3da34d'], 0.5), sprite[SPRITE['CRAFT_SIGN']] = sprite[SPRITE['INV_SIGN']], sprite[SPRITE['INV_WHEAT_SEED']] = create_craft_button(0x1, [{
        'f': create_seed,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#A89F67', '#9E8456']
    }], 0.6, ['#3ba578', '#4eb687', '#3da34d'], 0.5), sprite[SPRITE['CRAFT_WHEAT_SEED']] = sprite[SPRITE['INV_WHEAT_SEED']], sprite[SPRITE['INV_SEED']] = create_craft_button(0x1, [{
        'f': create_seed,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#493d36', '#332b28']
    }], 0.7, ['#3ba578', '#4eb687', '#3da34d'], 0.5), sprite[SPRITE['CRAFT_SEED']] = sprite[SPRITE['INV_SEED']], sprite[SPRITE['INV_PUMPKIN_SEED']] = create_craft_button(0x1, [{
        'f': create_seed,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#c67933', '#b17238']
    }], 0.6, ['#3ba578', '#4eb687', '#3da34d'], 0.5), sprite[SPRITE['CRAFT_PUMPKIN_SEED']] = sprite[SPRITE['INV_PUMPKIN_SEED']], sprite[SPRITE['INV_GARLIC_SEED']] = create_craft_button(0x1, [{
        'f': create_seed,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#e8e8e8', '#bbbbbb']
    }], 0.6, ['#3ba578', '#4eb687', '#3da34d'], 0.5), sprite[SPRITE['CRAFT_GARLIC_SEED']] = sprite[SPRITE['INV_GARLIC_SEED']], sprite[SPRITE['INV_THORNBUSH_SEED']] = create_craft_button(0x1, [{
        'f': create_seed,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#328a56', '#449573']
    }], 0.6, ['#3ba578', '#4eb687', '#3da34d'], 0.5), sprite[SPRITE['CRAFT_THORNBUSH_SEED']] = sprite[SPRITE['INV_THORNBUSH_SEED']], sprite[SPRITE['INV_CARROT_SEED']] = create_craft_button(0x1, [{
        'f': create_seed,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#c98e2f', '#a36b11']
    }], 0.6, ['#3ba578', '#4eb687', '#3da34d'], 0.5), sprite[SPRITE['CRAFT_CARROT_SEED']] = sprite[SPRITE['INV_CARROT_SEED']], sprite[SPRITE['CHEST_CARROT_SEED']] = sprite[SPRITE['INV_CARROT_SEED']], sprite[SPRITE['INV_WATERMELON_SEED']] = create_craft_button(0x1, [{
        'f': create_seed,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#13a56d', '#098a58']
    }], 0.6, ['#3ba578', '#4eb687', '#3da34d'], 0.5), sprite[SPRITE['CRAFT_WATERMELON_SEED']] = sprite[SPRITE['INV_WATERMELON_SEED']], sprite[SPRITE['CHEST_WATERMELON_SEED']] = sprite[SPRITE['INV_WATERMELON_SEED']], sprite[SPRITE['INV_ALOE_VERA_SEED']] = create_craft_button(0x1, [{
        'f': create_seed,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#3a8214', '#4a9c1e']
    }], 0.6, ['#3ba578', '#4eb687', '#3da34d'], 0.5), sprite[SPRITE['CRAFT_ALOE_VERA_SEED']] = sprite[SPRITE['INV_ALOE_VERA_SEED']], sprite[SPRITE['CHEST_ALOE_VERA_SEED']] = sprite[SPRITE['INV_ALOE_VERA_SEED']], sprite[SPRITE['INV_TOMATO_SEED']] = create_craft_button(0x1, [{
        'f': create_seed,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#b22419', '#99110e']
    }], 0.6, ['#3ba578', '#4eb687', '#3da34d'], 0.5), sprite[SPRITE['CRAFT_TOMATO_SEED']] = sprite[SPRITE['INV_TOMATO_SEED']], sprite[SPRITE['CHEST_TOMATO_SEED']] = sprite[SPRITE['INV_TOMATO_SEED']], sprite[SPRITE['INV_FIRE']] = create_craft_button(0x1, [{
        'f': create_wood_fire,
        'x': -0x2,
        'y': -0x2,
        'a': 0x1,
        'r': -Math['PI'] / 0x7,
        'c': ['#4d2d14', '#432516']
    }, {
        'f': create_fire,
        'x': -0x2,
        'y': -0x2,
        'a': 0x1,
        'r': -Math['PI'] / 0x7,
        'c': ['#efd435', '#ec8d35', '#e96132']
    }], 0.3, ['#3ba578', '#4eb687', '#3da34d'], 0.5), sprite[SPRITE['CRAFT_FIRE']] = sprite[SPRITE['INV_FIRE']], sprite[SPRITE['INV_BIG_FIRE']] = create_craft_button(0x1, [{
        'f': create_big_fire_wood,
        'x': -0x2,
        'y': -0x1,
        'a': 0x1,
        'r': -Math['PI'] / 0x7,
        'c': ['#4d2d14', '#432516', '#58645F', '#75827D', '#0c2c2e']
    }, {
        'f': create_fire,
        'x': -0x2,
        'y': -0x1,
        'a': 0x1,
        'r': -Math['PI'] / 0x7,
        'c': ['#efd435', '#ec8d35', '#e96132']
    }], 0.3, ['#3ba578', '#4eb687', '#3da34d'], 0.5), sprite[SPRITE['CRAFT_BIG_FIRE']] = sprite[SPRITE['INV_BIG_FIRE']], sprite[SPRITE['INV_PIRATE_SWORD']] = create_craft_button(0x1, [{
        'f': create_pirate_sword,
        'x': 0x2,
        'y': 0x0,
        'a': 0x1,
        'r': Math['PI'] / 0x5,
        'c': ['#0d1b1c', '#4a3a22', '#362818', '#c7c7c7', '#909090', '#eceaea', '#bbbbbb', '#d6d1d1']
    }], 0.1, ['#35b1b5', '#46c2c9', '#33b4e4'], 0.5), sprite[SPRITE['INV_SUGAR_CAN']] = create_craft_button(0x1, [{
        'f': create_sugar_can,
        'x': 0x2,
        'y': 0x0,
        'a': 0x1,
        'r': Math['PI'] / 0x5,
        'c': ['#0d1b1c', '#ffffff', '#5f6061', '#eb2933', '#57b74e', '#42a54d', '#ac222a', '#e6636a']
    }], 0.3, ['#35b1b5', '#46c2c9', '#33b4e4'], 0.5), sprite[SPRITE['INV_SWORD_WOOD']] = create_craft_button(0x1, [{
        'f': create_sword_wood,
        'x': 0x2,
        'y': 0x0,
        'a': 0x1,
        'r': Math['PI'] / 0x5,
        'c': ['#252525', '#73583e', '#493425', '#7d6144', '#5e4530', '#563e2b']
    }], 0.15, ['#35b1b5', '#46c2c9', '#33b4e4'], 0.5), sprite[SPRITE['INV_SWORD']] = create_craft_button(0x1, [{
        'f': create_stonesword,
        'x': 0x2,
        'y': 0x0,
        'a': 0x1,
        'r': Math['PI'] / 0x5,
        'c': ['#0d1b1c', '#939393', '#5f6061', '#b1afaf', '#493d36', '#332b28']
    }], 0.15, ['#35b1b5', '#46c2c9', '#33b4e4'], 0.5), sprite[SPRITE['INV_SWORD_GOLD']] = create_craft_button(0x1, [{
        'f': create_goldsword,
        'x': 0x2,
        'y': 0x0,
        'a': 0x1,
        'r': Math['PI'] / 0x5,
        'c': ['#0d1b1c', '#c4bc51', '#b29c32', '#c4bc51', '#493e26', '#382e19']
    }], 0.15, ['#35b1b5', '#46c2c9', '#33b4e4'], 0.5), sprite[SPRITE['INV_SWORD_DIAMOND']] = create_craft_button(0x1, [{
        'f': create_diamondsword,
        'x': 0x2,
        'y': 0x0,
        'a': 0x1,
        'r': Math['PI'] / 0x5,
        'c': ['#0d1b1c', '#6ad9e8', '#29aaa1', '#95e9f5', '#022320', '#011e19', '#FFFFFF']
    }], 0.15, ['#35b1b5', '#46c2c9', '#33b4e4'], 0.5), sprite[SPRITE['INV_SWORD_AMETHYST']] = create_craft_button(0x1, [{
        'f': create_amesword,
        'x': 0x2,
        'y': 0x0,
        'a': 0x1,
        'r': Math['PI'] / 0x5,
        'c': ['#0d1b1c', '#b864d6', '#8c29aa', '#cc81e7', '#262114', '#211108', '#FFFFFF']
    }], 0.15, ['#35b1b5', '#46c2c9', '#33b4e4'], 0.5), sprite[SPRITE['INV_PICK_WOOD']] = create_craft_button(0x1, [{
        'f': create_pickaxe,
        'x': -0x2,
        'y': 0x5,
        'a': 0x1,
        'r': -Math['PI'] / 0x5,
        'c': ['#0d1b1c', '#000000', '#0d1b1c', '#4d2d14', '#432516', '#4d2d14', '#432516']
    }], 0.45, ['#35b1b5', '#46c2c9', '#33b4e4'], 0.5), sprite[SPRITE['INV_PICK']] = create_craft_button(0x1, [{
        'f': create_pickaxe,
        'x': -0x2,
        'y': 0x5,
        'a': 0x1,
        'r': -Math['PI'] / 0x5,
        'c': ['#0d1b1c', '#000000', '#0d1b1c', '#4d2d14', '#432516', '#939393', '#5f6061']
    }], 0.45, ['#35b1b5', '#46c2c9', '#33b4e4'], 0.5), sprite[SPRITE['INV_PICK_GOLD']] = create_craft_button(0x1, [{
        'f': create_pickaxe,
        'x': -0x2,
        'y': 0x5,
        'a': 0x1,
        'r': -Math['PI'] / 0x5,
        'c': ['#0d1b1c', '#000000', '#0d1b1c', '#493e26', '#382e19', '#c4bc51', '#b29c32']
    }], 0.45, ['#35b1b5', '#46c2c9', '#33b4e4'], 0.5), sprite[SPRITE['INV_PICK_DIAMOND']] = create_craft_button(0x1, [{
        'f': create_pickaxe,
        'x': -0x2,
        'y': 0x5,
        'a': 0x1,
        'r': -Math['PI'] / 0x5,
        'c': ['#0d1b1c', '#000000', '#0d1b1c', '#262114', '#211108', '#63c9d6', '#29aaa1']
    }], 0.45, ['#35b1b5', '#46c2c9', '#33b4e4'], 0.5), sprite[SPRITE['INV_PICK_AMETHYST']] = create_craft_button(0x1, [{
        'f': create_pickaxe,
        'x': -0x2,
        'y': 0x5,
        'a': 0x1,
        'r': -Math['PI'] / 0x5,
        'c': ['#0d1b1c', '#000000', '#0d1b1c', '#262114', '#211108', '#b864d6', '#8c29aa']
    }], 0.45, ['#35b1b5', '#46c2c9', '#33b4e4'], 0.5), sprite[SPRITE['INV_PICK_REIDITE']] = [], sprite[SPRITE['INV_PICK_REIDITE']][0x0] = IMAGES['INV_PICK_REIDITE_OUT'], sprite[SPRITE['INV_PICK_REIDITE']][0x1] = IMAGES['INV_PICK_REIDITE_IN'], sprite[SPRITE['INV_PICK_REIDITE']][0x2] = IMAGES['INV_PICK_REIDITE_CLICK'], sprite[SPRITE['CRAFT_PICK_REIDITE']] = sprite[SPRITE['INV_PICK_REIDITE']], sprite[SPRITE['CHEST_PICK_REIDITE']] = sprite[SPRITE['INV_PICK_REIDITE']], sprite[SPRITE['INV_STONE']] = create_craft_button(0x1, [{
        'f': create_stone,
        'x': -0x5,
        'y': -0x5,
        'a': 0x1,
        'r': 0x0,
        'c': ['#252B28', '#58645F', '#75827D']
    }], 0.23, ['#2b5c48', '#2b5c48', '#2b5c48'], 0.5), sprite[SPRITE['INV_GOLD']] = create_craft_button(0x1, [{
        'f': create_gold,
        'x': -0x5,
        'y': -0x5,
        'a': 0x1,
        'r': 0x0,
        'c': ['#282823', '#877c2d', '#c4bc51']
    }], 0.43, ['#2b5c48', '#2b5c48', '#2b5c48'], 0.5), sprite[SPRITE['INV_DIAMOND']] = create_craft_button(0x1, [{
        'f': create_diamond,
        'x': -0x5,
        'y': -0x5,
        'a': 0x1,
        'r': 0x0,
        'c': ['#232828', '#3fc9c9', '#74ede6']
    }], 0.33, ['#2b5c48', '#2b5c48', '#2b5c48'], 0.5), sprite[SPRITE['INV_WOOD']] = create_craft_button(0x1, [{
        'f': create_wood_fire,
        'x': 0x0,
        'y': -0x5,
        'a': 0x1,
        'r': Math['PI'] / 2.5,
        'c': ['#4d2d14', '#432516']
    }], 0.3, ['#2b5c48', '#2b5c48', '#2b5c48'], 0.5), sprite[SPRITE['CRAFT_SWORD_WOOD']] = sprite[SPRITE['INV_SWORD_WOOD']], sprite[SPRITE['CRAFT_SWORD']] = sprite[SPRITE['INV_SWORD']], sprite[SPRITE['CRAFT_SWORD_GOLD']] = sprite[SPRITE['INV_SWORD_GOLD']], sprite[SPRITE['CRAFT_SWORD_DIAMOND']] = sprite[SPRITE['INV_SWORD_DIAMOND']], sprite[SPRITE['CRAFT_SWORD_AMETHYST']] = sprite[SPRITE['INV_SWORD_AMETHYST']], sprite[SPRITE['CRAFT_PICK_WOOD']] = sprite[SPRITE['INV_PICK_WOOD']], sprite[SPRITE['CRAFT_PICK']] = sprite[SPRITE['INV_PICK']], sprite[SPRITE['CRAFT_PICK_GOLD']] = sprite[SPRITE['INV_PICK_GOLD']], sprite[SPRITE['CRAFT_PICK_DIAMOND']] = sprite[SPRITE['INV_PICK_DIAMOND']], sprite[SPRITE['CRAFT_PICK_AMETHYST']] = sprite[SPRITE['INV_PICK_AMETHYST']], sprite[SPRITE['INV_PLANT']] = create_craft_button(0x1, [{
        'f': create_food_plant,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0
    }], 0.4, ['#3ba578', '#4eb687', '#3da34d'], 0.5), sprite[SPRITE['INV_WORK']] = create_craft_button(0x1, [{
        'f': create_workbench,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#0d1b1c', '#4d2d14', '#432516', '#756e52', '#663f22', '#9e9577']
    }], 0.45, ['#3ba578', '#4eb687', '#3da34d'], 0.5), sprite[SPRITE['CRAFT_WORK']] = sprite[SPRITE['INV_WORK']], sprite[SPRITE['INV_STONE_WALL']] = create_craft_button(0x1, [{
        'f': create_wall_stone,
        'x': -0x2,
        'y': -0x2,
        'a': 0x1,
        'r': 0x0,
        'c': ['#0d1b1c', '#6a7570', '#939995', '#9baaa3', '#adbcb5', '#8a938e']
    }], 0.4, ['#3ba578', '#4eb687', '#3da34d'], 0.5), sprite[SPRITE['CRAFT_STONE_WALL']] = sprite[SPRITE['INV_STONE_WALL']], sprite[SPRITE['INV_DIAMOND_WALL']] = create_craft_button(0x1, [{
        'f': create_wall_diamond,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#0d1b1c', '#5cc5ce', '#89d1d4', '#86d0d1', '#95d5d8', '#e0f2f6', '#b3e0e3']
    }], 0.4, ['#3ba578', '#4eb687', '#3da34d'], 0.5), sprite[SPRITE['CRAFT_DIAMOND_WALL']] = sprite[SPRITE['INV_DIAMOND_WALL']], sprite[SPRITE['INV_AMETHYST_WALL']] = create_craft_button(0x1, [{
        'f': create_wall_stone,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#0d1b1c', '#b15ecf', '#8c29aa', '#c26de0', '#af59cd', '#d588f1']
    }], 0.4, ['#3ba578', '#4eb687', '#3da34d'], 0.5), sprite[SPRITE['CRAFT_AMETHYST_WALL']] = sprite[SPRITE['INV_AMETHYST_WALL']], sprite[SPRITE['INV_GOLD_WALL']] = create_craft_button(0x1, [{
        'f': create_wall_gold,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#0d1b1c', '#877d36', '#a08f47', '#a7983c', '#b29e4d', '#c1b06b']
    }], 0.4, ['#3ba578', '#4eb687', '#3da34d'], 0.5), sprite[SPRITE['CRAFT_GOLD_WALL']] = sprite[SPRITE['INV_GOLD_WALL']], sprite[SPRITE['INV_WALL']] = create_craft_button(0x1, [{
        'f': create_wall,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#0d1b1c', '#4c3a15', '#634828', '#564021', '#634828', '#4c3a15']
    }], 0.45, ['#3ba578', '#4eb687', '#3da34d'], 0.5), sprite[SPRITE['CRAFT_WALL']] = sprite[SPRITE['INV_WALL']], sprite[SPRITE['INV_SPIKE']] = create_craft_button(0x1, [{
        'f': create_spike,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#0d1b1c', '#5f6061', '#939393', '#4c3a15', '#634828', '#564021', '#634828', '#4c3a15']
    }], 0.35, ['#3ba578', '#4eb687', '#3da34d'], 0.5), sprite[SPRITE['CRAFT_SPIKE']] = sprite[SPRITE['INV_SPIKE']], sprite[SPRITE['INV_GOLD_SPIKE']] = create_craft_button(0x1, [{
        'f': create_spike_gold,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#0d1b1c', '#5f6061', '#939393', '#877d36', '#a08f47', '#a7983c', '#b29e4d', '#c1b06b']
    }], 0.35, ['#3ba578', '#4eb687', '#3da34d'], 0.5), sprite[SPRITE['CRAFT_GOLD_SPIKE']] = sprite[SPRITE['INV_GOLD_SPIKE']], sprite[SPRITE['INV_DIAMOND_SPIKE']] = create_craft_button(0x1, [{
        'f': create_spike_gold,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#0d1b1c', '#7d8b90', '#9facaa', '#5cc5ce', '#89d1d4', '#86d0d1', '#95d5d8', '#e0f2f6', '#b3e0e3']
    }], 0.35, ['#3ba578', '#4eb687', '#3da34d'], 0.5), sprite[SPRITE['CRAFT_DIAMOND_SPIKE']] = sprite[SPRITE['INV_DIAMOND_SPIKE']], sprite[SPRITE['INV_STONE_SPIKE']] = create_craft_button(0x1, [{
        'f': create_spike_stone,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#0d1b1c', '#5f6061', '#939393', '#6a7570', '#939995', '#9baaa3', '#adbcb5', '#8a938e']
    }], 0.35, ['#3ba578', '#4eb687', '#3da34d'], 0.5), sprite[SPRITE['CRAFT_STONE_SPIKE']] = sprite[SPRITE['INV_STONE_SPIKE']], sprite[SPRITE['INV_AMETHYST_SPIKE']] = create_craft_button(0x1, [{
        'f': create_spike_stone,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#0d1b1c', '#5f6061', '#939393', '#b15ecf', '#8c29aa', '#c26de0', '#af59cd', '#d588f1']
    }], 0.35, ['#3ba578', '#4eb687', '#3da34d'], 0.5), sprite[SPRITE['CRAFT_AMETHYST_SPIKE']] = sprite[SPRITE['INV_AMETHYST_SPIKE']], sprite[SPRITE['INV_DOOR_WOOD_CLOSE']] = create_craft_button(0x1, [{
        'f': create_door_wood,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#0d1b1c', '#4c3b19', '#574122', '#644928', '#574122', '#735534']
    }], 0.6, ['#3ba578', '#4eb687', '#3da34d'], 0.5), sprite[SPRITE['CRAFT_DOOR_WOOD_CLOSE']] = sprite[SPRITE['INV_DOOR_WOOD_CLOSE']], sprite[SPRITE['INV_DOOR_STONE_CLOSE']] = create_craft_button(0x1, [{
        'f': create_door_stone,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#0d1b1c', '#6a7570', '#939995', '#9baaa3', '#8a938e', '#adbcb5']
    }], 0.6, ['#3ba578', '#4eb687', '#3da34d'], 0.5), sprite[SPRITE['CRAFT_DOOR_STONE_CLOSE']] = sprite[SPRITE['INV_DOOR_STONE_CLOSE']], sprite[SPRITE['INV_DOOR_AMETHYST_CLOSE']] = create_craft_button(0x1, [{
        'f': create_door_stone,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#0d1b1c', '#b15ecf', '#8c29aa', '#c26de0', '#af59cd', '#d588f1']
    }], 0.6, ['#3ba578', '#4eb687', '#3da34d'], 0.5), sprite[SPRITE['CRAFT_DOOR_AMETHYST_CLOSE']] = sprite[SPRITE['INV_DOOR_AMETHYST_CLOSE']], sprite[SPRITE['INV_DOOR_GOLD_CLOSE']] = create_craft_button(0x1, [{
        'f': create_door_gold,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#0d1b1c', '#877d36', '#a08f47', '#a7983c', '#9a8636', '#c1b06b']
    }], 0.6, ['#3ba578', '#4eb687', '#3da34d'], 0.5), sprite[SPRITE['CRAFT_DOOR_GOLD_CLOSE']] = sprite[SPRITE['INV_DOOR_GOLD_CLOSE']], sprite[SPRITE['INV_DOOR_DIAMOND_CLOSE']] = create_craft_button(0x1, [{
        'f': create_door_diamond,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#0d1b1c', '#5cc5ce', '#89d1d4', '#86d0d1', '#95d5d8', '#e0f2f6', '#b3e0e3']
    }], 0.6, ['#3ba578', '#4eb687', '#3da34d'], 0.5), sprite[SPRITE['CRAFT_DOOR_DIAMOND_CLOSE']] = sprite[SPRITE['INV_DOOR_DIAMOND_CLOSE']], sprite[SPRITE['INV_CHEST']] = create_craft_button(0x1, [{
        'f': create_chest,
        'x': 0x0,
        'y': 0x2,
        'a': 0x1,
        'r': 0x0,
        'c': ['#133a2b', '#9e8838', '#c4a23a', '#4c3b19', '#614627', '#614627', '#614627', '#c4a23a', '#c4a23a', '#c4a23a']
    }], 0.35, ['#3ba578', '#4eb687', '#3da34d'], 0.5), sprite[SPRITE['CRAFT_CHEST']] = sprite[SPRITE['INV_CHEST']], sprite[SPRITE['INV_MEAT']] = create_craft_button(0x1, [{
        'f': create_meat,
        'x': 0x0,
        'y': -0x3,
        'a': 0x1,
        'r': 0x0,
        'c': ['#dd5d57', '#ffffff', '#5e5d5e', '#ffffff']
    }], 1.4, ['#3ba578', '#4eb687', '#3da34d'], 0.5), sprite[SPRITE['INV_COOKED_MEAT']] = create_craft_button(0x1, [{
        'f': create_meat,
        'x': 0x0,
        'y': -0x3,
        'a': 0x1,
        'r': 0x0,
        'c': ['#602920', '#844f49', '#5e5d5e', '#d3ccc7']
    }], 1.4, ['#3ba578', '#4eb687', '#3da34d'], 0.5), sprite[SPRITE['CRAFT_COOKED_MEAT']] = sprite[SPRITE['INV_COOKED_MEAT']], sprite[SPRITE['INV_CORD']] = create_craft_button(0x1, [{
        'f': create_cord,
        'x': -0x3,
        'y': -0x3,
        'a': 0x1,
        'r': 0x0,
        'c': ['#cec0c4', '#ffffff', '#6d6768']
    }], 0.9, ['#3ba578', '#4eb687', '#3da34d'], 0.5), sprite[SPRITE['INV_BLUE_CORD']] = create_craft_button(0x1, [{
        'f': create_cord,
        'x': -0x3,
        'y': -0x3,
        'a': 0x1,
        'r': 0x0,
        'c': ['#d4e9ec', '#37b1d7', '#506c71']
    }], 0.9, ['#3ba578', '#4eb687', '#3da34d'], 0.5), sprite[SPRITE['CRAFT_BLUE_CORD']] = sprite[SPRITE['INV_BLUE_CORD']], sprite[SPRITE['INV_FUR']] = create_craft_button(0x1, [{
        'f': create_fur,
        'x': -0x3,
        'y': -0x3,
        'a': 0x1,
        'r': 0x0,
        'c': ['#ef96be', '#ffffff']
    }], 0.5, ['#2b5c48', '#2b5c48', '#2b5c48'], 0.5), sprite[SPRITE['INV_FUR_BOAR']] = create_craft_button(0x1, [{
        'f': create_fur,
        'x': -0x3,
        'y': -0x3,
        'a': 0x1,
        'r': 0x0,
        'c': ['#55423e', '#ffffff']
    }], 0.5, ['#2b5c48', '#2b5c48', '#2b5c48'], 0.5), sprite[SPRITE['INV_SPECIAL_FUR']] = create_craft_button(0x1, [{
        'f': create_special_fur,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#ffffff', '#e7e2e2', '#b35c46', '#a34d37']
    }], 0.25, ['#2b5c48', '#2b5c48', '#2b5c48'], 0.5), sprite[SPRITE['INV_SPECIAL_FUR_2']] = create_craft_button(0x1, [{
        'f': create_special_fur,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#14151b', '#000000', '#b35c46', '#a34d37']
    }], 0.25, ['#2b5c48', '#2b5c48', '#2b5c48'], 0.5), sprite[SPRITE['INV_KRAKEN_SKIN']] = create_craft_button(0x1, [{
        'f': create_fur,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#201851', '#b6222a']
    }], 0.5, ['#2b5c48', '#2b5c48', '#2b5c48'], 0.5), sprite[SPRITE['INV_FUR_WOLF']] = create_craft_button(0x1, [{
        'f': create_fur,
        'x': -0x3,
        'y': -0x3,
        'a': 0x1,
        'r': 0x0,
        'c': ['#231f20', '#b6222a']
    }], 0.5, ['#2b5c48', '#2b5c48', '#2b5c48'], 0.5), sprite[SPRITE['INV_FUR_WINTER']] = create_craft_button(0x1, [{
        'f': create_fur,
        'x': -0x3,
        'y': -0x3,
        'a': 0x1,
        'r': 0x0,
        'c': ['#ffffff', '#b6222a']
    }], 0.5, ['#2b5c48', '#2b5c48', '#2b5c48'], 0.5), sprite[SPRITE['INV_EARMUFFS']] = create_craft_button(0x1, [{
        'f': create_earmuff,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#f9efeb', '#dfd1cb', '#3e3c25', '#4d4a2e']
    }], 0.4, ['#35b1b5', '#46c2c9', '#33b4e4'], 0.5), sprite[SPRITE['CRAFT_EARMUFFS']] = sprite[SPRITE['INV_EARMUFFS']], sprite[SPRITE['INV_COAT']] = create_craft_button(0x1, [{
        'f': create_coat,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#3e3c25', '#4d4a2e', '#f9efeb', '#dfd1cb']
    }], 0.4, ['#35b1b5', '#46c2c9', '#33b4e4'], 0.5), sprite[SPRITE['CRAFT_COAT']] = sprite[SPRITE['INV_COAT']], sprite[SPRITE['INV_CAP_SCARF']] = create_craft_button(0x1, [{
        'f': create_cap_scarf,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#171a19', '#dee7e7', '#b8cccb', '#ffffff', '#e3e8e8']
    }], 0.4, ['#35b1b5', '#46c2c9', '#33b4e4'], 0.5), sprite[SPRITE['CRAFT_CAP_SCARF']] = sprite[SPRITE['INV_CAP_SCARF']], sprite[SPRITE['INV_CHRISTMAS_HAT']] = create_craft_button(0x1, [{
        'f': create_christmas_hat,
        'x': 0x0,
        'y': 0x5,
        'a': 0x1,
        'r': 0x0,
        'c': ['#171a19', '#c5232c', '#84191d', '#a72027', '#fef4f4', '#e9dad9']
    }], 0.35, ['#35b1b5', '#46c2c9', '#33b4e4'], 0.5), sprite[SPRITE['CHEST_CHRISTMAS_HAT']] = sprite[SPRITE['INV_CHRISTMAS_HAT']], sprite[SPRITE['INV_ELF_HAT']] = create_craft_button(0x1, [{
        'f': create_elf_hat,
        'x': 0x0,
        'y': 0x5,
        'a': 0x1,
        'r': 0x0,
        'c': ['#171a19', '#0f964c', '#106e3b', '#138344', '#fef4f4', '#e9dad9', '#C5232C', '#A92D2D']
    }], 0.35, ['#35b1b5', '#46c2c9', '#33b4e4'], 0.5), sprite[SPRITE['CHEST_ELF_HAT']] = sprite[SPRITE['INV_ELF_HAT']], sprite[SPRITE['INV_BANDAGE']] = create_craft_button(0x1, [{
        'f': create_bandage,
        'x': -0x2,
        'y': -0x2,
        'a': 0x1,
        'r': 0x0,
        'c': ['#ffffff', '#cec0c4']
    }], 0.35, ['#3ba578', '#4eb687', '#3da34d'], 0.5), sprite[SPRITE['CRAFT_BANDAGE']] = sprite[SPRITE['INV_BANDAGE']], sprite[SPRITE['INV_BAG']] = [], sprite[SPRITE['INV_BAG']][0x0] = IMAGES['INV_BAG_OUT'], sprite[SPRITE['INV_BAG']][0x1] = IMAGES['INV_BAG_IN'], sprite[SPRITE['INV_BAG']][0x2] = IMAGES['INV_BAG_CLICK'], sprite[SPRITE['CRAFT_BAG']] = sprite[SPRITE['INV_BAG']], sprite[SPRITE['INV_PITCHFORK']] = [], sprite[SPRITE['INV_PITCHFORK']][0x0] = IMAGES['INV_PITCHFORK_OUT'], sprite[SPRITE['INV_PITCHFORK']][0x1] = IMAGES['INV_PITCHFORK_IN'], sprite[SPRITE['INV_PITCHFORK']][0x2] = IMAGES['INV_PITCHFORK_CLICK'], sprite[SPRITE['CRAFT_PITCHFORK']] = sprite[SPRITE['INV_PITCHFORK']], sprite[SPRITE['CHEST_PITCHFORK']] = sprite[SPRITE['INV_PITCHFORK']], sprite[SPRITE['INV_PITCHFORK2']] = [], sprite[SPRITE['INV_PITCHFORK2']][0x0] = IMAGES['INV_PITCHFORK2_OUT'], sprite[SPRITE['INV_PITCHFORK2']][0x1] = IMAGES['INV_PITCHFORK2_IN'], sprite[SPRITE['INV_PITCHFORK2']][0x2] = IMAGES['INV_PITCHFORK2_CLICK'], sprite[SPRITE['CRAFT_PITCHFORK2']] = sprite[SPRITE['INV_PITCHFORK2']], sprite[SPRITE['CHEST_PITCHFORK2']] = sprite[SPRITE['INV_PITCHFORK2']], sprite[SPRITE['INV_PITCHFORK_PART']] = [], sprite[SPRITE['INV_PITCHFORK_PART']][0x0] = IMAGES['INV_PITCHFORK_PART_CLICK'], sprite[SPRITE['INV_PITCHFORK_PART']][0x1] = IMAGES['INV_PITCHFORK_PART_CLICK'], sprite[SPRITE['INV_PITCHFORK_PART']][0x2] = IMAGES['INV_PITCHFORK_PART_CLICK'], sprite[SPRITE['CHEST_PITCHFORK_PART']] = sprite[SPRITE['INV_PITCHFORK_PART']], sprite[SPRITE['INV_PILOT_HELMET']] = [], sprite[SPRITE['INV_PILOT_HELMET']][0x0] = IMAGES['INV_PILOT_HELMET_OUT'], sprite[SPRITE['INV_PILOT_HELMET']][0x1] = IMAGES['INV_PILOT_HELMET_IN'], sprite[SPRITE['INV_PILOT_HELMET']][0x2] = IMAGES['INV_PILOT_HELMET_CLICK'], sprite[SPRITE['CRAFT_PILOT_HELMET']] = sprite[SPRITE['INV_PILOT_HELMET']], sprite[SPRITE['CHEST_PILOT_HELMET']] = sprite[SPRITE['INV_PILOT_HELMET']], sprite[SPRITE['INV_PILOT_GLASSES']] = [], sprite[SPRITE['INV_PILOT_GLASSES']][0x0] = IMAGES['INV_PILOT_GLASSES_CLICK'], sprite[SPRITE['INV_PILOT_GLASSES']][0x1] = IMAGES['INV_PILOT_GLASSES_CLICK'], sprite[SPRITE['INV_PILOT_GLASSES']][0x2] = IMAGES['INV_PILOT_GLASSES_CLICK'], sprite[SPRITE['CHEST_PILOT_GLASSES']] = sprite[SPRITE['INV_PILOT_GLASSES']], sprite[SPRITE['INV_WOOD_TOWER']] = [], sprite[SPRITE['INV_WOOD_TOWER']][0x0] = IMAGES['INV_WOOD_TOWER_OUT'], sprite[SPRITE['INV_WOOD_TOWER']][0x1] = IMAGES['INV_WOOD_TOWER_IN'], sprite[SPRITE['INV_WOOD_TOWER']][0x2] = IMAGES['INV_WOOD_TOWER_CLICK'], sprite[SPRITE['CRAFT_WOOD_TOWER']] = sprite[SPRITE['INV_WOOD_TOWER']], sprite[SPRITE['CHEST_WOOD_TOWER']] = sprite[SPRITE['INV_WOOD_TOWER']], sprite[SPRITE['INV_WOOD_DOOR_SPIKE']] = [], sprite[SPRITE['INV_WOOD_DOOR_SPIKE']][0x0] = IMAGES['INV_WOOD_DOOR_SPIKE_OUT'], sprite[SPRITE['INV_WOOD_DOOR_SPIKE']][0x1] = IMAGES['INV_WOOD_DOOR_SPIKE_IN'], sprite[SPRITE['INV_WOOD_DOOR_SPIKE']][0x2] = IMAGES['INV_WOOD_DOOR_SPIKE_CLICK'], sprite[SPRITE['CRAFT_WOOD_DOOR_SPIKE']] = sprite[SPRITE['INV_WOOD_DOOR_SPIKE']], sprite[SPRITE['CHEST_WOOD_DOOR_SPIKE']] = sprite[SPRITE['INV_WOOD_DOOR_SPIKE']], sprite[SPRITE['INV_STONE_DOOR_SPIKE']] = [], sprite[SPRITE['INV_STONE_DOOR_SPIKE']][0x0] = IMAGES['INV_STONE_DOOR_SPIKE_OUT'], sprite[SPRITE['INV_STONE_DOOR_SPIKE']][0x1] = IMAGES['INV_STONE_DOOR_SPIKE_IN'], sprite[SPRITE['INV_STONE_DOOR_SPIKE']][0x2] = IMAGES['INV_STONE_DOOR_SPIKE_CLICK'], sprite[SPRITE['CRAFT_STONE_DOOR_SPIKE']] = sprite[SPRITE['INV_STONE_DOOR_SPIKE']], sprite[SPRITE['CHEST_STONE_DOOR_SPIKE']] = sprite[SPRITE['INV_STONE_DOOR_SPIKE']], sprite[SPRITE['INV_GOLD_DOOR_SPIKE']] = [], sprite[SPRITE['INV_GOLD_DOOR_SPIKE']][0x0] = IMAGES['INV_GOLD_DOOR_SPIKE_OUT'], sprite[SPRITE['INV_GOLD_DOOR_SPIKE']][0x1] = IMAGES['INV_GOLD_DOOR_SPIKE_IN'], sprite[SPRITE['INV_GOLD_DOOR_SPIKE']][0x2] = IMAGES['INV_GOLD_DOOR_SPIKE_CLICK'], sprite[SPRITE['CRAFT_GOLD_DOOR_SPIKE']] = sprite[SPRITE['INV_GOLD_DOOR_SPIKE']], sprite[SPRITE['CHEST_GOLD_DOOR_SPIKE']] = sprite[SPRITE['INV_GOLD_DOOR_SPIKE']], sprite[SPRITE['INV_DIAMOND_DOOR_SPIKE']] = [], sprite[SPRITE['INV_DIAMOND_DOOR_SPIKE']][0x0] = IMAGES['INV_DIAMOND_DOOR_SPIKE_OUT'], sprite[SPRITE['INV_DIAMOND_DOOR_SPIKE']][0x1] = IMAGES['INV_DIAMOND_DOOR_SPIKE_IN'], sprite[SPRITE['INV_DIAMOND_DOOR_SPIKE']][0x2] = IMAGES['INV_DIAMOND_DOOR_SPIKE_CLICK'], sprite[SPRITE['CRAFT_DIAMOND_DOOR_SPIKE']] = sprite[SPRITE['INV_DIAMOND_DOOR_SPIKE']], sprite[SPRITE['CHEST_DIAMOND_DOOR_SPIKE']] = sprite[SPRITE['INV_DIAMOND_DOOR_SPIKE']], sprite[SPRITE['INV_AMETHYST_DOOR_SPIKE']] = [], sprite[SPRITE['INV_AMETHYST_DOOR_SPIKE']][0x0] = IMAGES['INV_AMETHYST_DOOR_SPIKE_OUT'], sprite[SPRITE['INV_AMETHYST_DOOR_SPIKE']][0x1] = IMAGES['INV_AMETHYST_DOOR_SPIKE_IN'], sprite[SPRITE['INV_AMETHYST_DOOR_SPIKE']][0x2] = IMAGES['INV_AMETHYST_DOOR_SPIKE_CLICK'], sprite[SPRITE['CRAFT_AMETHYST_DOOR_SPIKE']] = sprite[SPRITE['INV_AMETHYST_DOOR_SPIKE']], sprite[SPRITE['CHEST_AMETHYST_DOOR_SPIKE']] = sprite[SPRITE['INV_AMETHYST_DOOR_SPIKE']], sprite[SPRITE['INV_REIDITE_DOOR_SPIKE']] = [], sprite[SPRITE['INV_REIDITE_DOOR_SPIKE']][0x0] = IMAGES['INV_REIDITE_DOOR_SPIKE_OUT'], sprite[SPRITE['INV_REIDITE_DOOR_SPIKE']][0x1] = IMAGES['INV_REIDITE_DOOR_SPIKE_IN'], sprite[SPRITE['INV_REIDITE_DOOR_SPIKE']][0x2] = IMAGES['INV_REIDITE_DOOR_SPIKE_CLICK'], sprite[SPRITE['CRAFT_REIDITE_DOOR_SPIKE']] = sprite[SPRITE['INV_REIDITE_DOOR_SPIKE']], sprite[SPRITE['CHEST_REIDITE_DOOR_SPIKE']] = sprite[SPRITE['INV_REIDITE_DOOR_SPIKE']], sprite[SPRITE['INV_REIDITE_DOOR']] = [], sprite[SPRITE['INV_REIDITE_DOOR']][0x0] = IMAGES['INV_REIDITE_DOOR_OUT'], sprite[SPRITE['INV_REIDITE_DOOR']][0x1] = IMAGES['INV_REIDITE_DOOR_IN'], sprite[SPRITE['INV_REIDITE_DOOR']][0x2] = IMAGES['INV_REIDITE_DOOR_CLICK'], sprite[SPRITE['CRAFT_REIDITE_DOOR']] = sprite[SPRITE['INV_REIDITE_DOOR']], sprite[SPRITE['CHEST_REIDITE_DOOR']] = sprite[SPRITE['INV_REIDITE_DOOR']], sprite[SPRITE['INV_REIDITE_SPIKE']] = [], sprite[SPRITE['INV_REIDITE_SPIKE']][0x0] = IMAGES['INV_REIDITE_SPIKE_OUT'], sprite[SPRITE['INV_REIDITE_SPIKE']][0x1] = IMAGES['INV_REIDITE_SPIKE_IN'], sprite[SPRITE['INV_REIDITE_SPIKE']][0x2] = IMAGES['INV_REIDITE_SPIKE_CLICK'], sprite[SPRITE['CRAFT_REIDITE_SPIKE']] = sprite[SPRITE['INV_REIDITE_SPIKE']], sprite[SPRITE['CHEST_REIDITE_SPIKE']] = sprite[SPRITE['INV_REIDITE_SPIKE']], sprite[SPRITE['INV_REIDITE_WALL']] = [], sprite[SPRITE['INV_REIDITE_WALL']][0x0] = IMAGES['INV_REIDITE_WALL_OUT'], sprite[SPRITE['INV_REIDITE_WALL']][0x1] = IMAGES['INV_REIDITE_WALL_IN'], sprite[SPRITE['INV_REIDITE_WALL']][0x2] = IMAGES['INV_REIDITE_WALL_CLICK'], sprite[SPRITE['CRAFT_REIDITE_WALL']] = sprite[SPRITE['INV_REIDITE_WALL']], sprite[SPRITE['CHEST_REIDITE_WALL']] = sprite[SPRITE['INV_REIDITE_WALL']], sprite[SPRITE['INV_PENGUIN_FEATHER']] = [], sprite[SPRITE['INV_PENGUIN_FEATHER']][0x0] = IMAGES['INV_PENGUIN_FEATHER'], sprite[SPRITE['INV_PENGUIN_FEATHER']][0x1] = IMAGES['INV_PENGUIN_FEATHER'], sprite[SPRITE['INV_PENGUIN_FEATHER']][0x2] = IMAGES['INV_PENGUIN_FEATHER'], sprite[SPRITE['CRAFT_PENGUIN_FEATHER']] = sprite[SPRITE['INV_PENGUIN_FEATHER']], sprite[SPRITE['CHEST_PENGUIN_FEATHER']] = sprite[SPRITE['INV_PENGUIN_FEATHER']], sprite[SPRITE['INV_HAWK_FEATHER']] = [], sprite[SPRITE['INV_HAWK_FEATHER']][0x0] = IMAGES['INV_HAWK_FEATHER'], sprite[SPRITE['INV_HAWK_FEATHER']][0x1] = IMAGES['INV_HAWK_FEATHER'], sprite[SPRITE['INV_HAWK_FEATHER']][0x2] = IMAGES['INV_HAWK_FEATHER'], sprite[SPRITE['CRAFT_HAWK_FEATHER']] = sprite[SPRITE['INV_HAWK_FEATHER']], sprite[SPRITE['CHEST_HAWK_FEATHER']] = sprite[SPRITE['INV_HAWK_FEATHER']], sprite[SPRITE['INV_VULTURE_FEATHER']] = [], sprite[SPRITE['INV_VULTURE_FEATHER']][0x0] = IMAGES['INV_VULTURE_FEATHER'], sprite[SPRITE['INV_VULTURE_FEATHER']][0x1] = IMAGES['INV_VULTURE_FEATHER'], sprite[SPRITE['INV_VULTURE_FEATHER']][0x2] = IMAGES['INV_VULTURE_FEATHER'], sprite[SPRITE['CRAFT_VULTURE_FEATHER']] = sprite[SPRITE['INV_VULTURE_FEATHER']], sprite[SPRITE['CHEST_VULTURE_FEATHER']] = sprite[SPRITE['INV_VULTURE_FEATHER']], sprite[SPRITE['INV_EMERALD']] = [], sprite[SPRITE['INV_EMERALD']][0x0] = IMAGES['INV_EMERALD'], sprite[SPRITE['INV_EMERALD']][0x1] = IMAGES['INV_EMERALD'], sprite[SPRITE['INV_EMERALD']][0x2] = IMAGES['INV_EMERALD'], sprite[SPRITE['CHEST_EMERALD']] = sprite[SPRITE['INV_EMERALD']], sprite[SPRITE['INV_SADDLE']] = [], sprite[SPRITE['INV_SADDLE']][0x0] = IMAGES['INV_SADDLE_OUT'], sprite[SPRITE['INV_SADDLE']][0x1] = IMAGES['INV_SADDLE_IN'], sprite[SPRITE['INV_SADDLE']][0x2] = IMAGES['INV_SADDLE_CLICK'], sprite[SPRITE['CRAFT_SADDLE']] = sprite[SPRITE['INV_SADDLE']], sprite[SPRITE['CHEST_SADDLE']] = sprite[SPRITE['INV_SADDLE']], sprite[SPRITE['INV_WAND1']] = [], sprite[SPRITE['INV_WAND1']][0x0] = IMAGES['INV_WAND1_OUT'], sprite[SPRITE['INV_WAND1']][0x1] = IMAGES['INV_WAND1_IN'], sprite[SPRITE['INV_WAND1']][0x2] = IMAGES['INV_WAND1_CLICK'], sprite[SPRITE['CRAFT_WAND1']] = sprite[SPRITE['INV_WAND1']], sprite[SPRITE['CHEST_WAND1']] = sprite[SPRITE['INV_WAND1']], sprite[SPRITE['INV_WAND2']] = [], sprite[SPRITE['INV_WAND2']][0x0] = IMAGES['INV_WAND2_OUT'], sprite[SPRITE['INV_WAND2']][0x1] = IMAGES['INV_WAND2_IN'], sprite[SPRITE['INV_WAND2']][0x2] = IMAGES['INV_WAND2_CLICK'], sprite[SPRITE['CRAFT_WAND2']] = sprite[SPRITE['INV_WAND2']], sprite[SPRITE['CHEST_WAND2']] = sprite[SPRITE['INV_WAND2']], sprite[SPRITE['INV_MOUNT_BOAR']] = [], sprite[SPRITE['INV_MOUNT_BOAR']][0x0] = IMAGES['INV_MOUNT_BOAR_OUT'], sprite[SPRITE['INV_MOUNT_BOAR']][0x1] = IMAGES['INV_MOUNT_BOAR_IN'], sprite[SPRITE['INV_MOUNT_BOAR']][0x2] = IMAGES['INV_MOUNT_BOAR_CLICK'], sprite[SPRITE['CRAFT_MOUNT_BOAR']] = sprite[SPRITE['INV_MOUNT_BOAR']], sprite[SPRITE['CHEST_MOUNT_BOAR']] = sprite[SPRITE['INV_MOUNT_BOAR']], sprite[SPRITE['INV_CRAB_BOSS']] = [], sprite[SPRITE['INV_CRAB_BOSS']][0x0] = IMAGES['INV_CRAB_BOSS_OUT'], sprite[SPRITE['INV_CRAB_BOSS']][0x1] = IMAGES['INV_CRAB_BOSS_IN'], sprite[SPRITE['INV_CRAB_BOSS']][0x2] = IMAGES['INV_CRAB_BOSS_CLICK'], sprite[SPRITE['CRAFT_CRAB_BOSS']] = sprite[SPRITE['INV_CRAB_BOSS']], sprite[SPRITE['CHEST_CRAB_BOSS']] = sprite[SPRITE['INV_CRAB_BOSS']], sprite[SPRITE['INV_HAWK']] = [], sprite[SPRITE['INV_HAWK']][0x0] = IMAGES['INV_HAWK_OUT'], sprite[SPRITE['INV_HAWK']][0x1] = IMAGES['INV_HAWK_IN'], sprite[SPRITE['INV_HAWK']][0x2] = IMAGES['INV_HAWK_CLICK'], sprite[SPRITE['CRAFT_HAWK']] = sprite[SPRITE['INV_HAWK']], sprite[SPRITE['CHEST_HAWK']] = sprite[SPRITE['INV_HAWK']], sprite[SPRITE['INV_VULTURE']] = [], sprite[SPRITE['INV_VULTURE']][0x0] = IMAGES['INV_VULTURE_OUT'], sprite[SPRITE['INV_VULTURE']][0x1] = IMAGES['INV_VULTURE_IN'], sprite[SPRITE['INV_VULTURE']][0x2] = IMAGES['INV_VULTURE_CLICK'], sprite[SPRITE['CRAFT_VULTURE']] = sprite[SPRITE['INV_VULTURE']], sprite[SPRITE['CHEST_VULTURE']] = sprite[SPRITE['INV_VULTURE']], sprite[SPRITE['INV_TURBAN1']] = [], sprite[SPRITE['INV_TURBAN1']][0x0] = IMAGES['INV_TURBAN1_OUT'], sprite[SPRITE['INV_TURBAN1']][0x1] = IMAGES['INV_TURBAN1_IN'], sprite[SPRITE['INV_TURBAN1']][0x2] = IMAGES['INV_TURBAN1_CLICK'], sprite[SPRITE['CRAFT_TURBAN1']] = sprite[SPRITE['INV_TURBAN1']], sprite[SPRITE['CHEST_TURBAN1']] = sprite[SPRITE['INV_TURBAN1']], sprite[SPRITE['INV_TURBAN2']] = [], sprite[SPRITE['INV_TURBAN2']][0x0] = IMAGES['INV_TURBAN2_OUT'], sprite[SPRITE['INV_TURBAN2']][0x1] = IMAGES['INV_TURBAN2_IN'], sprite[SPRITE['INV_TURBAN2']][0x2] = IMAGES['INV_TURBAN2_CLICK'], sprite[SPRITE['CRAFT_TURBAN2']] = sprite[SPRITE['INV_TURBAN2']], sprite[SPRITE['CHEST_TURBAN2']] = sprite[SPRITE['INV_TURBAN2']], sprite[SPRITE['INV_PLANE']] = [], sprite[SPRITE['INV_PLANE']][0x0] = IMAGES['INV_PLANE_OUT'], sprite[SPRITE['INV_PLANE']][0x1] = IMAGES['INV_PLANE_IN'], sprite[SPRITE['INV_PLANE']][0x2] = IMAGES['INV_PLANE_CLICK'], sprite[SPRITE['CRAFT_PLANE']] = sprite[SPRITE['INV_PLANE']], sprite[SPRITE['CHEST_PLANE']] = sprite[SPRITE['INV_PLANE']], sprite[SPRITE['INV_BABY_DRAGON']] = [], sprite[SPRITE['INV_BABY_DRAGON']][0x0] = IMAGES['INV_BABY_DRAGON_OUT'], sprite[SPRITE['INV_BABY_DRAGON']][0x1] = IMAGES['INV_BABY_DRAGON_IN'], sprite[SPRITE['INV_BABY_DRAGON']][0x2] = IMAGES['INV_BABY_DRAGON_CLICK'], sprite[SPRITE['CRAFT_BABY_DRAGON']] = sprite[SPRITE['INV_BABY_DRAGON']], sprite[SPRITE['CHEST_BABY_DRAGON']] = sprite[SPRITE['INV_BABY_DRAGON']], sprite[SPRITE['INV_BABY_MAMMOTH']] = [], sprite[SPRITE['INV_BABY_MAMMOTH']][0x0] = IMAGES['INV_BABY_MAMMOTH_OUT'], sprite[SPRITE['INV_BABY_MAMMOTH']][0x1] = IMAGES['INV_BABY_MAMMOTH_IN'], sprite[SPRITE['INV_BABY_MAMMOTH']][0x2] = IMAGES['INV_BABY_MAMMOTH_CLICK'], sprite[SPRITE['CRAFT_BABY_MAMMOTH']] = sprite[SPRITE['INV_BABY_MAMMOTH']], sprite[SPRITE['CHEST_BABY_MAMMOTH']] = sprite[SPRITE['INV_BABY_MAMMOTH']], sprite[SPRITE['INV_BABY_LAVA']] = [], sprite[SPRITE['INV_BABY_LAVA']][0x0] = IMAGES['INV_BABY_LAVA_OUT'], sprite[SPRITE['INV_BABY_LAVA']][0x1] = IMAGES['INV_BABY_LAVA_IN'], sprite[SPRITE['INV_BABY_LAVA']][0x2] = IMAGES['INV_BABY_LAVA_CLICK'], sprite[SPRITE['CRAFT_BABY_LAVA']] = sprite[SPRITE['INV_BABY_LAVA']], sprite[SPRITE['CHEST_BABY_LAVA']] = sprite[SPRITE['INV_BABY_LAVA']], sprite[SPRITE['INV_BREAD_OVEN']] = create_craft_button(0x1, [{
        'f': create_bread_oven,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#0d1b1c', '#515C57', '#3A4942', '#68736F', '#C1C0C0', '#be8d50', '#7d5234', '#222825', '#4D5752', '#e48727', '#d4a872', '#232a27']
    }, {
        'f': create_bread_light_up,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#e4c027']
    }], 0.14, ['#3ba578', '#4eb687', '#3da34d'], 0.5), sprite[SPRITE['CRAFT_BREAD_OVEN']] = sprite[SPRITE['INV_BREAD_OVEN']], sprite[SPRITE['INV_FURNACE']] = create_craft_button(0x1, [{
        'f': create_furnace_on,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#0d1b1c', '#939393', '#5f6061', '#c0c0c0', '#ffad22', '#fffdd5', '#fee764']
    }], 0.18, ['#3ba578', '#4eb687', '#3da34d'], 0.5), sprite[SPRITE['CRAFT_FURNACE']] = sprite[SPRITE['INV_FURNACE']], sprite[SPRITE['INV_BED']] = create_craft_button(0x1, [{
        'f': create_bed,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#0d1b1c', '#554139', '#3f332a', '#261912', '#eee6c5', '#d1c599', '#554139', '#3f332a', '#86509b', '#703a99', '#ded4b4', '#d6ceab', '#c796c2', '#bc83b7', '#ffffff', '#87519c', '#703e94', '#3eb67f', '#218f65', '#efe7c5', '#d093c4']
    }], 0.32, ['#3ba578', '#4eb687', '#3da34d'], 0.5), sprite[SPRITE['CRAFT_BED']] = sprite[SPRITE['INV_BED']], sprite[SPRITE['CHEST_BED']] = sprite[SPRITE['INV_BED']], sprite[SPRITE['INV_CRAB_LOOT']] = create_craft_button(0x1, [{
        'f': create_crab_loot,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#0d1b1c', '#c04933', '#a33e2b', '#ee593d', '#c04933']
    }], 0.17, ['#3ba578', '#4eb687', '#3da34d'], 0.5), sprite[SPRITE['CHEST_CRAB_LOOT']] = sprite[SPRITE['INV_CRAB_LOOT']], sprite[SPRITE['INV_CRAB_SPEAR']] = create_craft_button(0x1, [{
        'f': create_crab_spear,
        'x': 0x2,
        'y': 0x0,
        'a': 0x1,
        'r': Math['PI'] / 0x5,
        'c': ['#0d1b1c', '#58452b', '#47341d', '#ee593d', '#c04933', '#c04933', '#a33e2b', '#c3be9a', '#7f6d52']
    }], 0.12, ['#35b1b5', '#46c2c9', '#33b4e4'], 0.5), sprite[SPRITE['CRAFT_CRAB_SPEAR']] = sprite[SPRITE['INV_CRAB_SPEAR']], sprite[SPRITE['CHEST_CRAB_SPEAR']] = sprite[SPRITE['INV_CRAB_SPEAR']], sprite[SPRITE['INV_WOOD_SPEAR']] = create_craft_button(0x1, [{
        'f': create_wood_spear,
        'x': 0x2,
        'y': 0x0,
        'a': 0x1,
        'r': Math['PI'] / 0x5,
        'c': ['#0d1b1c', '#58452b', '#47341d', '#765d42', '#c3be9a', '#7f6d52']
    }], 0.12, ['#35b1b5', '#46c2c9', '#33b4e4'], 0.5), sprite[SPRITE['CRAFT_WOOD_SPEAR']] = sprite[SPRITE['INV_WOOD_SPEAR']], sprite[SPRITE['INV_SPEAR']] = create_craft_button(0x1, [{
        'f': create_stonespear,
        'x': 0x2,
        'y': 0x0,
        'a': 0x1,
        'r': Math['PI'] / 0x5,
        'c': ['#0d1b1c', '#4d2d14', '#432516', '#c3be9a', '#7f6d52', '#7a7575', '#454749', '#8c8787', '#939393', '#5f6061', '#aaa6a6']
    }], 0.12, ['#35b1b5', '#46c2c9', '#33b4e4'], 0.5), sprite[SPRITE['CRAFT_SPEAR']] = sprite[SPRITE['INV_SPEAR']], sprite[SPRITE['INV_GOLD_SPEAR']] = create_craft_button(0x1, [{
        'f': create_goldspear,
        'x': 0x2,
        'y': 0x0,
        'a': 0x1,
        'r': Math['PI'] / 0x5,
        'c': ['#0d1b1c', '#493e26', '#382e19', '#a69e39', '#9c8828', '#bab143', '#c4bc51', '#b29c32', '#d2ca59']
    }], 0.12, ['#35b1b5', '#46c2c9', '#33b4e4'], 0.5), sprite[SPRITE['CRAFT_GOLD_SPEAR']] = sprite[SPRITE['INV_GOLD_SPEAR']], sprite[SPRITE['INV_DIAMOND_SPEAR']] = create_craft_button(0x1, [{
        'f': create_diamondspear,
        'x': 0x2,
        'y': 0x0,
        'a': 0x1,
        'r': Math['PI'] / 0x5,
        'c': ['#0d1b1c', '#262114', '#211108', '#4ba8b4', '#198a82', '#6ccad7', '#63c9d6', '#29aaa1', '#7bd9e6']
    }], 0.12, ['#35b1b5', '#46c2c9', '#33b4e4'], 0.5), sprite[SPRITE['CRAFT_DIAMOND_SPEAR']] = sprite[SPRITE['INV_DIAMOND_SPEAR']], sprite[SPRITE['INV_AMETHYST_SPEAR']] = create_craft_button(0x1, [{
        'f': create_amespear,
        'x': 0x2,
        'y': 0x0,
        'a': 0x1,
        'r': Math['PI'] / 0x5,
        'c': ['#0d1b1c', '#262114', '#211108', '#9443b1', '#6f1988', '#a752c6', '#9e35be', '#8c29aa', '#b864d6']
    }], 0.12, ['#35b1b5', '#46c2c9', '#33b4e4'], 0.5), sprite[SPRITE['CRAFT_AMETHYST_SPEAR']] = sprite[SPRITE['INV_AMETHYST_SPEAR']], sprite[SPRITE['INV_DRAGON_SPEAR']] = create_craft_button(0x1, [{
        'f': create_dragon_spear,
        'x': 0x2,
        'y': 0x0,
        'a': 0x1,
        'r': Math['PI'] / 0x5,
        'c': ['#0d1b1c', '#1e2b34', '#151c24', '#99d7dd', '#7dcbd1', '#c6e8eb', '#aadee8', '#b7e2e5']
    }], 0.38, ['#35b1b5', '#46c2c9', '#33b4e4'], 0.5), sprite[SPRITE['CRAFT_DRAGON_SPEAR']] = sprite[SPRITE['INV_DRAGON_SPEAR']], sprite[SPRITE['CHEST_DRAGON_SPEAR']] = sprite[SPRITE['INV_DRAGON_SPEAR']], sprite[SPRITE['INV_HAMMER']] = create_craft_button(0x1, [{
        'f': create_hammer,
        'x': 0x2,
        'y': 0x0,
        'a': 0x1,
        'r': Math['PI'] / 0x5,
        'c': ['#0d1b1c', '#4d2d14', '#432516', '#939393', '#5f6061']
    }], 0.52, ['#35b1b5', '#46c2c9', '#33b4e4'], 0.5), sprite[SPRITE['CRAFT_HAMMER']] = sprite[SPRITE['INV_HAMMER']], sprite[SPRITE['INV_SPANNER']] = create_craft_button(0x1, [{
        'f': create_spanner,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': Math['PI'] / 0x5,
        'c': ['#0d1b1c', '#939393', '#5f6061']
    }], 0.3, ['#35b1b5', '#46c2c9', '#33b4e4'], 0.5), sprite[SPRITE['CRAFT_SPANNER']] = sprite[SPRITE['INV_SPANNER']], sprite[SPRITE['INV_SUPER_HAMMER']] = create_craft_button(0x1, [{
        'f': create_superhammer,
        'x': 0x2,
        'y': 0x0,
        'a': 0x1,
        'r': Math['PI'] / 0x5,
        'c': ['#0d1b1c', '#9b5927', '#7a3610', '#1e0302', '#0d825b', '#6bd16e', '#17915d', '#89e5aa', '#16935d', '#a0efc4', '#28b26d', '#cdf4cb', '#42cc90']
    }], 0.52, ['#35b1b5', '#46c2c9', '#33b4e4'], 0.5), sprite[SPRITE['CRAFT_SUPER_HAMMER']] = sprite[SPRITE['INV_SUPER_HAMMER']], sprite[SPRITE['INV_HAMMER_GOLD']] = create_craft_button(0x1, [{
        'f': create_hammer,
        'x': 0x2,
        'y': 0x0,
        'a': 0x1,
        'r': Math['PI'] / 0x5,
        'c': ['#0d1b1c', '#493e26', '#382e19', '#c4bc51', '#b29c32']
    }], 0.52, ['#35b1b5', '#46c2c9', '#33b4e4'], 0.5), sprite[SPRITE['CRAFT_HAMMER_GOLD']] = sprite[SPRITE['INV_HAMMER_GOLD']], sprite[SPRITE['INV_HAMMER_DIAMOND']] = create_craft_button(0x1, [{
        'f': create_hammer,
        'x': 0x2,
        'y': 0x0,
        'a': 0x1,
        'r': Math['PI'] / 0x5,
        'c': ['#0d1b1c', '#262114', '#211108', '#63c9d6', '#29aaa1']
    }], 0.52, ['#35b1b5', '#46c2c9', '#33b4e4'], 0.5), sprite[SPRITE['CRAFT_HAMMER_DIAMOND']] = sprite[SPRITE['INV_HAMMER_DIAMOND']], sprite[SPRITE['INV_HAMMER_AMETHYST']] = create_craft_button(0x1, [{
        'f': create_hammer,
        'x': 0x2,
        'y': 0x0,
        'a': 0x1,
        'r': Math['PI'] / 0x5,
        'c': ['#0d1b1c', '#262114', '#211108', '#b864d6', '#8c29aa']
    }], 0.52, ['#35b1b5', '#46c2c9', '#33b4e4'], 0.5), sprite[SPRITE['CRAFT_HAMMER_AMETHYST']] = sprite[SPRITE['INV_HAMMER_AMETHYST']], sprite[SPRITE['INV_HAMMER_REIDITE']] = [], sprite[SPRITE['INV_HAMMER_REIDITE']][0x0] = IMAGES['INV_HAMMER_REIDITE_OUT'], sprite[SPRITE['INV_HAMMER_REIDITE']][0x1] = IMAGES['INV_HAMMER_REIDITE_IN'], sprite[SPRITE['INV_HAMMER_REIDITE']][0x2] = IMAGES['INV_HAMMER_REIDITE_CLICK'], sprite[SPRITE['CHEST_HAMMER_REIDITE']] = sprite[SPRITE['INV_HAMMER_REIDITE']], sprite[SPRITE['CRAFT_HAMMER_REIDITE']] = sprite[SPRITE['INV_HAMMER_REIDITE']], sprite[SPRITE['INV_EMERALD_MACHINE']] = [], sprite[SPRITE['INV_EMERALD_MACHINE']][0x0] = IMAGES['INV_EMERALD_MACHINE_OUT'], sprite[SPRITE['INV_EMERALD_MACHINE']][0x1] = IMAGES['INV_EMERALD_MACHINE_IN'], sprite[SPRITE['INV_EMERALD_MACHINE']][0x2] = IMAGES['INV_EMERALD_MACHINE_CLICK'], sprite[SPRITE['CHEST_EMERALD_MACHINE']] = sprite[SPRITE['INV_EMERALD_MACHINE']], sprite[SPRITE['CRAFT_EMERALD_MACHINE']] = sprite[SPRITE['INV_EMERALD_MACHINE']], sprite[SPRITE['INV_EXTRACTOR_MACHINE_STONE']] = [], sprite[SPRITE['INV_EXTRACTOR_MACHINE_STONE']][0x0] = IMAGES['INV_EXTRACTOR_MACHINE_STONE_OUT'], sprite[SPRITE['INV_EXTRACTOR_MACHINE_STONE']][0x1] = IMAGES['INV_EXTRACTOR_MACHINE_STONE_IN'], sprite[SPRITE['INV_EXTRACTOR_MACHINE_STONE']][0x2] = IMAGES['INV_EXTRACTOR_MACHINE_STONE_CLICK'], sprite[SPRITE['CHEST_EXTRACTOR_MACHINE_STONE']] = sprite[SPRITE['INV_EXTRACTOR_MACHINE_STONE']], sprite[SPRITE['CRAFT_EXTRACTOR_MACHINE_STONE']] = sprite[SPRITE['INV_EXTRACTOR_MACHINE_STONE']], sprite[SPRITE['INV_EXTRACTOR_MACHINE_GOLD']] = [], sprite[SPRITE['INV_EXTRACTOR_MACHINE_GOLD']][0x0] = IMAGES['INV_EXTRACTOR_MACHINE_GOLD_OUT'], sprite[SPRITE['INV_EXTRACTOR_MACHINE_GOLD']][0x1] = IMAGES['INV_EXTRACTOR_MACHINE_GOLD_IN'], sprite[SPRITE['INV_EXTRACTOR_MACHINE_GOLD']][0x2] = IMAGES['INV_EXTRACTOR_MACHINE_GOLD_CLICK'], sprite[SPRITE['CHEST_EXTRACTOR_MACHINE_GOLD']] = sprite[SPRITE['INV_EXTRACTOR_MACHINE_GOLD']], sprite[SPRITE['CRAFT_EXTRACTOR_MACHINE_GOLD']] = sprite[SPRITE['INV_EXTRACTOR_MACHINE_GOLD']], sprite[SPRITE['INV_EXTRACTOR_MACHINE_DIAMOND']] = [], sprite[SPRITE['INV_EXTRACTOR_MACHINE_DIAMOND']][0x0] = IMAGES['INV_EXTRACTOR_MACHINE_DIAMOND_OUT'], sprite[SPRITE['INV_EXTRACTOR_MACHINE_DIAMOND']][0x1] = IMAGES['INV_EXTRACTOR_MACHINE_DIAMOND_IN'], sprite[SPRITE['INV_EXTRACTOR_MACHINE_DIAMOND']][0x2] = IMAGES['INV_EXTRACTOR_MACHINE_DIAMOND_CLICK'], sprite[SPRITE['CHEST_EXTRACTOR_MACHINE_DIAMOND']] = sprite[SPRITE['INV_EXTRACTOR_MACHINE_DIAMOND']], sprite[SPRITE['CRAFT_EXTRACTOR_MACHINE_DIAMOND']] = sprite[SPRITE['INV_EXTRACTOR_MACHINE_DIAMOND']], sprite[SPRITE['INV_EXTRACTOR_MACHINE_AMETHYST']] = [], sprite[SPRITE['INV_EXTRACTOR_MACHINE_AMETHYST']][0x0] = IMAGES['INV_EXTRACTOR_MACHINE_AMETHYST_OUT'], sprite[SPRITE['INV_EXTRACTOR_MACHINE_AMETHYST']][0x1] = IMAGES['INV_EXTRACTOR_MACHINE_AMETHYST_IN'], sprite[SPRITE['INV_EXTRACTOR_MACHINE_AMETHYST']][0x2] = IMAGES['INV_EXTRACTOR_MACHINE_AMETHYST_CLICK'], sprite[SPRITE['CHEST_EXTRACTOR_MACHINE_AMETHYST']] = sprite[SPRITE['INV_EXTRACTOR_MACHINE_AMETHYST']], sprite[SPRITE['CRAFT_EXTRACTOR_MACHINE_AMETHYST']] = sprite[SPRITE['INV_EXTRACTOR_MACHINE_AMETHYST']], sprite[SPRITE['INV_EXTRACTOR_MACHINE_REIDITE']] = [], sprite[SPRITE['INV_EXTRACTOR_MACHINE_REIDITE']][0x0] = IMAGES['INV_EXTRACTOR_MACHINE_REIDITE_OUT'], sprite[SPRITE['INV_EXTRACTOR_MACHINE_REIDITE']][0x1] = IMAGES['INV_EXTRACTOR_MACHINE_REIDITE_IN'], sprite[SPRITE['INV_EXTRACTOR_MACHINE_REIDITE']][0x2] = IMAGES['INV_EXTRACTOR_MACHINE_REIDITE_CLICK'], sprite[SPRITE['CHEST_EXTRACTOR_MACHINE_REIDITE']] = sprite[SPRITE['INV_EXTRACTOR_MACHINE_REIDITE']], sprite[SPRITE['CRAFT_EXTRACTOR_MACHINE_REIDITE']] = sprite[SPRITE['INV_EXTRACTOR_MACHINE_REIDITE']], sprite[SPRITE['INV_LOCK']] = create_craft_button(0x1, [{
        'f': create_lock,
        'x': -0x2,
        'y': -0x2,
        'a': 0x1,
        'r': 0x0,
        'c': ['#141414', '#816511', '#c4a23a', '#3a3a3a']
    }], 0.8, ['#2b5c48', '#2b5c48', '#2b5c48'], 0.5), sprite[SPRITE['CRAFT_LOCK']] = sprite[SPRITE['INV_LOCK']], sprite[SPRITE['INV_LOCKPICK']] = create_craft_button(0x1, [{
        'f': create_lockpick,
        'x': -0x2,
        'y': -0x2,
        'a': 0x1,
        'r': -Math['PI'] / 0x5,
        'c': ['#141414', '#c4a23a', '#816511']
    }], 0.08, ['#2b5c48', '#2b5c48', '#2b5c48'], 0.5), sprite[SPRITE['CRAFT_LOCKPICK']] = sprite[SPRITE['INV_LOCKPICK']], sprite[SPRITE['INV_DRAGON_HEART']] = create_craft_button(0x1, [{
        'f': create_dragon_heart,
        'x': -0x2,
        'y': -0x2,
        'a': 0x1,
        'r': 0x0,
        'c': ['#141414', '#178a99', '#0a6372', '#03282e']
    }], 0.3, ['#2b5c48', '#2b5c48', '#2b5c48'], 0.7), sprite[SPRITE['INV_LAVA_HEART']] = create_craft_button(0x1, [{
        'f': create_dragon_heart,
        'x': -0x2,
        'y': -0x2,
        'a': 0x1,
        'r': 0x0,
        'c': ['#120202', '#991616', '#750a0a', '#120202']
    }], 0.3, ['#2b5c48', '#2b5c48', '#2b5c48'], 0.7), sprite[SPRITE['INV_RESURRECTION']] = create_craft_button(0x1, [{
        'f': create_resurrection_ground,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#347f93', '#54a4ba']
    }, {
        'f': create_resurrection,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#347f93', '#54a4ba', '#1c2528', '#a9e4ed', '#86d4e0', '#959da0', '#697072', '#929da0', '#afb9bc', '#418ba5', '#59b8ce']
    }, {
        'f': create_resurrection_rotate,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#a9e4ed', '#86d4e0']
    }, {
        'f': create_resurrection_hole,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#a9e4ed', '#86d4e0', '#418ba5', '#59b8ce']
    }], 0.3, ['#3ba578', '#4eb687', '#3da34d'], 0.5), sprite[SPRITE['CRAFT_RESURRECTION']] = sprite[SPRITE['INV_RESURRECTION']], sprite[SPRITE['INV_TOTEM']] = create_craft_button(0x1, [{
        'f': create_headtotem,
        'x': 0x2d,
        'y': 0x46,
        'a': 0x1,
        'r': 0x0,
        'c': ['#0d1b1c', '#4c3a15', '#634828', '#564021']
    }], 0.6, ['#3ba578', '#4eb687', '#3da34d'], 0.5), sprite[SPRITE['CRAFT_TOTEM']] = sprite[SPRITE['INV_TOTEM']], sprite[SPRITE['INV_AMETHYST_HELMET']] = create_craft_button(0x1, [{
        'f': create_amethyst_helmet,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#0d1b1c', '#8c55b7', '#652d8e', '#79359e', '#5eccd1', '#4badad', '#9e6ac6']
    }], 0.52, ['#35b1b5', '#46c2c9', '#33b4e4'], 0.5), sprite[SPRITE['CRAFT_AMETHYST_HELMET']] = sprite[SPRITE['INV_AMETHYST_HELMET']], sprite[SPRITE['INV_WINTER_HOOD']] = create_craft_button(0x1, [{
        'f': create_winter_hood,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#2a2938', '#242330', '#313041', '#1b1a25']
    }], 0.12, ['#35b1b5', '#46c2c9', '#33b4e4'], 0.5), sprite[SPRITE['CRAFT_WINTER_HOOD']] = sprite[SPRITE['INV_WINTER_HOOD']], sprite[SPRITE['INV_HOOD']] = create_craft_button(0x1, [{
        'f': create_hood,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#2a2938', '#242330', '#313041']
    }], 0.25, ['#35b1b5', '#46c2c9', '#33b4e4'], 0.5), sprite[SPRITE['CRAFT_HOOD']] = sprite[SPRITE['INV_HOOD']], sprite[SPRITE['INV_WINTER_PEASANT']] = create_craft_button(0x1, [{
        'f': create_peasant,
        'x': 0x0,
        'y': 0x3,
        'a': 0x1,
        'r': 0x0,
        'c': ['#1d1d22', '#e2e1e1', '#d2cbcb', '#cfcbc8', '#beb5b5', '#ada0a0']
    }], 0.39, ['#35b1b5', '#46c2c9', '#33b4e4'], 0.5), sprite[SPRITE['CRAFT_WINTER_PEASANT']] = sprite[SPRITE['INV_WINTER_PEASANT']], sprite[SPRITE['INV_PEASANT']] = create_craft_button(0x1, [{
        'f': create_peasant,
        'x': 0x0,
        'y': 0x3,
        'a': 0x1,
        'r': 0x0,
        'c': ['#1d1d22', '#8c7654', '#785f4c', '#a88e6c', '#785f4c', '#705845']
    }], 0.39, ['#35b1b5', '#46c2c9', '#33b4e4'], 0.5), sprite[SPRITE['CRAFT_PEASANT']] = sprite[SPRITE['INV_PEASANT']], sprite[SPRITE['INV_CROWN_GREEN']] = create_craft_button(0x1, [{
        'f': create_crown_life,
        'x': 0x0,
        'y': 0xa,
        'a': 0x1,
        'r': 0x0,
        'c': ['#0d1b1c', '#A5A244', '#D8DC74', '#C0BF55', '#49B669', '#19994C', '#71C187']
    }], 0.15, ['#35b1b5', '#46c2c9', '#33b4e4'], 0.5), sprite[SPRITE['CRAFT_CROWN_GREEN']] = sprite[SPRITE['INV_CROWN_GREEN']], sprite[SPRITE['INV_CROWN_ORANGE']] = create_craft_button(0x1, [{
        'f': create_crown_life,
        'x': 0x0,
        'y': 0xa,
        'a': 0x1,
        'r': 0x0,
        'c': ['#0d1b1c', '#A5A244', '#D8DC74', '#C0BF55', '#C45727', '#994617', '#DB9358']
    }], 0.15, ['#35b1b5', '#46c2c9', '#33b4e4'], 0.5), sprite[SPRITE['CRAFT_CROWN_ORANGE']] = sprite[SPRITE['INV_CROWN_ORANGE']], sprite[SPRITE['INV_CROWN_BLUE']] = create_craft_button(0x1, [{
        'f': create_crown_life,
        'x': 0x0,
        'y': 0xa,
        'a': 0x1,
        'r': 0x0,
        'c': ['#0d1b1c', '#A5A244', '#D8DC74', '#C0BF55', '#2792C1', '#196599', '#59C0D8']
    }], 0.15, ['#35b1b5', '#46c2c9', '#33b4e4'], 0.5), sprite[SPRITE['CRAFT_CROWN_BLUE']] = sprite[SPRITE['INV_CROWN_BLUE']], sprite[SPRITE['INV_CROWN_CRAB']] = create_craft_button(0x1, [{
        'f': create_crab_crown,
        'x': -0x1,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#000000', '#b03431', '#94312d', '#bd3c33', '#de5445']
    }], 0.15, ['#35b1b5', '#46c2c9', '#33b4e4'], 0.5), sprite[SPRITE['CRAFT_CROWN_CRAB']] = sprite[SPRITE['INV_CROWN_CRAB']], sprite[SPRITE['CHEST_CROWN_CRAB']] = sprite[SPRITE['INV_CROWN_CRAB']], sprite[SPRITE['INV_DRAGON_HELMET']] = create_craft_button(0x1, [{
        'f': create_dragon_helmet,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#0d1b1c', '#cae9eb', '#75bcae', '#ffffff', '#51736d', '#2b4d48', '#1b3a3a', '#80ccca', '#59ada7']
    }], 0.2, ['#35b1b5', '#46c2c9', '#33b4e4'], 0.5), sprite[SPRITE['CRAFT_DRAGON_HELMET']] = sprite[SPRITE['INV_DRAGON_HELMET']], sprite[SPRITE['INV_DRAGON_SWORD']] = create_craft_button(0x1, [{
        'f': create_dragon_sword,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': Math['PI'] / 0x5,
        'c': ['#0d1b1c', '#284c4a', '#193533', '#c7efef', '#7fccca']
    }], 0.75, ['#35b1b5', '#46c2c9', '#33b4e4'], 0.5), sprite[SPRITE['CRAFT_DRAGON_SWORD']] = sprite[SPRITE['INV_DRAGON_SWORD']], sprite[SPRITE['INV_DRAGON_CUBE']] = create_craft_button(0x1, [{
        'f': create_dragon_cube,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#44bae0', '#9fdae9', '#7dd1ea', '#c6e8ef']
    }], 0.55, ['#2b5c48', '#2b5c48', '#2b5c48'], 0.5), sprite[SPRITE['INV_DRAGON_ORB']] = create_craft_button(0x1, [{
        'f': create_blue_orb,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#44bae0', '#9fdae9', '#7dd1ea', '#c6e8ef']
    }], 0.55, ['#2b5c48', '#2b5c48', '#2b5c48'], 0.5), sprite[SPRITE['INV_LAVA_CUBE']] = create_craft_button(0x1, [{
        'f': create_dragon_cube,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#e04444', '#e99f9f', '#eb7e7e', '#eec6c6']
    }], 0.55, ['#2b5c48', '#2b5c48', '#2b5c48'], 0.5), sprite[SPRITE['INV_LAVA_ORB']] = create_craft_button(0x1, [{
        'f': create_blue_orb,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#e04444', '#e99f9f', '#eb7e7e', '#eec6c6']
    }], 0.55, ['#2b5c48', '#2b5c48', '#2b5c48'], 0.5), sprite[SPRITE['INV_GEMME_GREEN']] = create_craft_button(0x1, [{
        'f': create_gemme_green,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#59ba72', '#94d966', '#5aa628', '#0d1b1c', '#38874d']
    }], 0.35, ['#2b5c48', '#2b5c48', '#2b5c48'], 0.5), sprite[SPRITE['INV_GEMME_ORANGE']] = create_craft_button(0x1, [{
        'f': create_gemme_green,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#C45727', '#de7d46', '#DB9358', '#0d1b1c', '#994617']
    }], 0.35, ['#2b5c48', '#2b5c48', '#2b5c48'], 0.5), sprite[SPRITE['INV_GEMME_BLUE']] = create_craft_button(0x1, [{
        'f': create_gemme_green,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#3a9dbd', '#59C0D8', '#48abcb', '#0d1b1c', '#196599']
    }], 0.35, ['#2b5c48', '#2b5c48', '#2b5c48'], 0.5), sprite[SPRITE['INV_SHOVEL']] = create_craft_button(0x1, [{
        'f': create_shovel,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': Math['PI'] / 0x5,
        'c': ['#0d1b1c', '#6d5041', '#4f3d35', '#939393', '#5f6061', '#757575']
    }], 0.45, ['#35b1b5', '#46c2c9', '#33b4e4'], 0.5), sprite[SPRITE['CRAFT_SHOVEL']] = sprite[SPRITE['INV_SHOVEL']], sprite[SPRITE['INV_SHOVEL_GOLD']] = create_craft_button(0x1, [{
        'f': create_shovel,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': Math['PI'] / 0x5,
        'c': ['#0d1b1c', '#493e26', '#382e19', '#c4bc51', '#b29c32', '#b4ac45']
    }], 0.45, ['#35b1b5', '#46c2c9', '#33b4e4'], 0.5), sprite[SPRITE['CRAFT_SHOVEL_GOLD']] = sprite[SPRITE['INV_SHOVEL_GOLD']], sprite[SPRITE['INV_SHOVEL_DIAMOND']] = create_craft_button(0x1, [{
        'f': create_shovel,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': Math['PI'] / 0x5,
        'c': ['#0d1b1c', '#262114', '#211108', '#63c9d6', '#29aaa1', '#42aab8']
    }], 0.45, ['#35b1b5', '#46c2c9', '#33b4e4'], 0.5), sprite[SPRITE['CRAFT_SHOVEL_DIAMOND']] = sprite[SPRITE['INV_SHOVEL_DIAMOND']], sprite[SPRITE['INV_SHOVEL_AMETHYST']] = create_craft_button(0x1, [{
        'f': create_shovel,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': Math['PI'] / 0x5,
        'c': ['#0d1b1c', '#262114', '#211108', '#b864d6', '#8c29aa', '#a853c7']
    }], 0.45, ['#35b1b5', '#46c2c9', '#33b4e4'], 0.5), sprite[SPRITE['CRAFT_SHOVEL_AMETHYST']] = sprite[SPRITE['INV_SHOVEL_AMETHYST']], sprite[SPRITE['INV_EXPLORER_HAT']] = create_craft_button(0x1, [{
        'f': create_explorer_hat,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#c9a65f', '#ae863f', '#655530', '#4a391c', '#ebdd79', '#4a421c']
    }], 0.35, ['#35b1b5', '#46c2c9', '#33b4e4'], 0.5), sprite[SPRITE['CRAFT_EXPLORER_HAT']] = sprite[SPRITE['INV_EXPLORER_HAT']], sprite[SPRITE['INV_WOOD_HELMET']] = create_craft_button(0x1, [{
        'f': create_wooden_helmet,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#252525', '#73583e', '#493425', '#7d6144']
    }], 0.35, ['#35b1b5', '#46c2c9', '#33b4e4'], 0.5), sprite[SPRITE['CRAFT_WOOD_HELMET']] = sprite[SPRITE['INV_WOOD_HELMET']], sprite[SPRITE['INV_STONE_HELMET']] = create_craft_button(0x1, [{
        'f': create_viking_hat,
        'x': 0x0,
        'y': -0x2,
        'a': 0x1,
        'r': 0x0,
        'c': ['#252525', '#808080', '#4a4a4a', '#9e9c8b', '#615c53', '#686969', '#8a8776', '#555555', '#747474', '#969696', '#454545']
    }], 0.4, ['#35b1b5', '#46c2c9', '#33b4e4'], 0.5), sprite[SPRITE['CRAFT_STONE_HELMET']] = sprite[SPRITE['INV_STONE_HELMET']], sprite[SPRITE['INV_GOLD_HELMET']] = create_craft_button(0x1, [{
        'f': create_gold_helmet,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#dbce71', '#b29c32', '#c4bc51']
    }], 0.35, ['#35b1b5', '#46c2c9', '#33b4e4'], 0.5), sprite[SPRITE['CRAFT_GOLD_HELMET']] = sprite[SPRITE['INV_GOLD_HELMET']], sprite[SPRITE['INV_DIAMOND_HELMET']] = create_craft_button(0x1, [{
        'f': create_diamond_helmet,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#717171', '#485252', '#555555', '#65c7cd', '#4aadad', '#358d8b', '#c1e6ea', '#a6dce4']
    }], 0.45, ['#35b1b5', '#46c2c9', '#33b4e4'], 0.5), sprite[SPRITE['CRAFT_DIAMOND_HELMET']] = sprite[SPRITE['INV_DIAMOND_HELMET']], sprite[SPRITE['INV_BOOK']] = create_craft_button(0x1, [{
        'f': create_book,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#511f00', '#2f1300', '#ffffff', '#d4d4d4', '#5b2400', '#984e21']
    }], 0.15, ['#35b1b5', '#46c2c9', '#33b4e4'], 0.5), sprite[SPRITE['CRAFT_BOOK']] = sprite[SPRITE['INV_BOOK']], sprite[SPRITE['INV_PAPER']] = create_craft_button(0x1, [{
        'f': create_paper,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#221e1b', '#ffffff', '#f6f0e7']
    }], 0.3, ['#2b5c48', '#2b5c48', '#2b5c48'], 0.5), sprite[SPRITE['CRAFT_PAPER']] = sprite[SPRITE['INV_PAPER']], sprite[SPRITE['INV_AMETHYST']] = create_craft_button(0x1, [{
        'f': create_amethyst,
        'x': -0x5,
        'y': -0x5,
        'a': 0x1,
        'r': 0x0,
        'c': ['#1d051e', '#c27add', '#cd98e5']
    }], 0.31, ['#2b5c48', '#2b5c48', '#2b5c48'], 0.5), sprite[SPRITE['INV_SAND']] = create_craft_button(0x1, [{
        'f': create_sand,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#D7C393', '#a48c6c']
    }], 0.22, ['#2b5c48', '#2b5c48', '#2b5c48'], 0.5), sprite[SPRITE['INV_ICE']] = create_craft_button(0x1, [{
        'f': create_ice,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#93CBCE', '#E9F6F6']
    }], 0.3, ['#35b1b5', '#46c2c9', '#33b4e4'], 0.5), sprite[SPRITE['INV_GROUND']] = create_craft_button(0x1, [{
        'f': create_sand,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#866432', '#6b4f25']
    }], 0.22, ['#2b5c48', '#2b5c48', '#2b5c48'], 0.5), sprite[SPRITE['INV_BUCKET_FULL']] = create_craft_button(0x1, [{
        'f': create_bucket_full,
        'x': 0x3,
        'y': 0x2,
        'a': 0x1,
        'r': 0x0,
        'c': ['#1e2021', '#674C2A', '#4C3B19', '#2f2211', '#785931', '#1678a2']
    }], 0.22, ['#2b5c48', '#2b5c48', '#2b5c48'], 0.5), sprite[SPRITE['INV_BUCKET_EMPTY']] = create_craft_button(0x1, [{
        'f': create_bucket_empty,
        'x': 0x3,
        'y': 0x2,
        'a': 0x1,
        'r': 0x0,
        'c': ['#1e2021', '#674C2A', '#4C3B19', '#2f2211', '#785931', '#1678a2']
    }], 0.22, ['#2b5c48', '#2b5c48', '#2b5c48'], 0.5), sprite[SPRITE['CRAFT_BUCKET_FULL']] = sprite[SPRITE['INV_BUCKET_FULL']], sprite[SPRITE['CRAFT_BUCKET_EMPTY']] = sprite[SPRITE['INV_BUCKET_EMPTY']], sprite[SPRITE['INV_WELL']] = create_craft_button(0x1, [{
        'f': create_well,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#1e2021', '#717273', '#606162', '#a09f9f', '#878787', '#454545']
    }], 0.1, ['#3ba578', '#4eb687', '#3da34d'], 0.5), sprite[SPRITE['CRAFT_WELL']] = sprite[SPRITE['INV_WELL']], sprite[SPRITE['INV_BOTTLE_FULL']] = create_craft_button(0x1, [{
        'f': create_bottle,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': Math['PI'] / 0x5,
        'c': ['#C6AF81', '#C98435', '#B26F31', '#53A4D5', '#388AC7', '#C1C0C0', '#EAEAEA']
    }], 0.18, ['#3ba578', '#4eb687', '#3da34d'], 0.5), sprite[SPRITE['INV_BOTTLE_EMPTY']] = create_craft_button(0x1, [{
        'f': create_bottle_full,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': Math['PI'] / 0x5,
        'c': ['#C6AF81', '#C98435', '#B26F31', '#53A4D5', '#388AC7', '#C1C0C0', '#EAEAEA']
    }], 0.18, ['#2b5c48', '#2b5c48', '#2b5c48'], 0.5), sprite[SPRITE['CRAFT_BOTTLE_FULL']] = sprite[SPRITE['INV_BOTTLE_FULL']], sprite[SPRITE['CRAFT_BOTTLE_EMPTY']] = sprite[SPRITE['INV_BOTTLE_EMPTY']], sprite[SPRITE['INV_COOKIE']] = create_craft_button(0x1, [{
        'f': create_cookie,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#eedacc', '#dfbda7', '#dab094', '#63391a', '#523124']
    }], 0.3, ['#3ba578', '#4eb687', '#3da34d'], 0.5), sprite[SPRITE['CRAFT_COOKIE']] = sprite[SPRITE['INV_COOKIE']], sprite[SPRITE['INV_CANDY']] = create_craft_button(0x1, [{
        'f': create_candy,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#1a1011', '#e29c2b', '#b76413', '#d6c418', '#e0bf32', '#b78a1a', '#aa1a17', '#cc9f2f', '#cc741d', '#b51524', '#bc1522', '#991922', '#a01ed5', '#d51e81']
    }], 0.3, ['#3ba578', '#4eb687', '#3da34d'], 0.5), sprite[SPRITE['INV_FERRERO']] = create_craft_button(0x1, [{
        'f': create_ferrero_rocher,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#1a1011', '#693c2a', '#54311f', '#9f7a3d', '#492d1d', '#dbb175', '#54311f', '#9f7a3d', '#604720']
    }], 0.6, ['#3ba578', '#4eb687', '#3da34d'], 0.5), sprite[SPRITE['INV_BREAD']] = create_craft_button(0x1, [{
        'f': create_bread,
        'x': 0x0,
        'y': -0x2,
        'a': 0x1,
        'r': 0x0,
        'c': ['#1d051e', '#bf8d51', '#7d5133', '#e8d6bf', '#e0c8a9', '#ab7a3f']
    }], 0.17, ['#3ba578', '#4eb687', '#3da34d'], 0.5), sprite[SPRITE['CRAFT_BREAD']] = sprite[SPRITE['INV_BREAD']], sprite[SPRITE['INV_FOODFISH']] = create_craft_button(0x1, [{
        'f': create_fishfood,
        'x': -0x3,
        'y': -0x5,
        'a': 0x1,
        'r': 0x0,
        'c': ['#1d051e', '#63767c', '#424f51', '#6c8288', '#536468', '#202020', '#ffffff', '#806f60', '#514942', '#756557']
    }], 0.23, ['#3ba578', '#4eb687', '#3da34d'], 0.5), sprite[SPRITE['INV_FOODFISH_COOKED']] = create_craft_button(0x1, [{
        'f': create_fishfood_cooked,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#1d051e', '#42261A', '#281818']
    }], 0.23, ['#3ba578', '#4eb687', '#3da34d'], 0.5), sprite[SPRITE['CRAFT_FOODFISH_COOKED']] = sprite[SPRITE['INV_FOODFISH_COOKED']], sprite[SPRITE['INV_DIVING_MASK']] = create_craft_button(0x1, [{
        'f': create_divingmask,
        'x': -0x3,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#1e2021', '#65A8B7', '#2E85A0', '#14275B', '#081826', '#1A3163', '#0C1944', '#89C4CE', '#2E85A0']
    }], 0.2, ['#35b1b5', '#46c2c9', '#33b4e4'], 0.5), sprite[SPRITE['CRAFT_DIVING_MASK']] = sprite[SPRITE['INV_DIVING_MASK']], sprite[SPRITE['INV_SCALES']] = create_craft_button(0x1, [{
        'f': create_scales,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#1e2021', '#961B1B', '#702727', '#C43B3B']
    }], 0.15, ['#2b5c48', '#2b5c48', '#2b5c48'], 0.5), sprite[SPRITE['INV_SUPER_DIVING_SUIT']] = create_craft_button(0x1, [{
        'f': create_superdivingsuit,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#F0D200', '#B09A00', '#79359E', '#652D8E', '#1e2021']
    }], 0.3, ['#35b1b5', '#46c2c9', '#33b4e4'], 0.5), sprite[SPRITE['CRAFT_SUPER_DIVING_SUIT']] = sprite[SPRITE['INV_SUPER_DIVING_SUIT']], sprite[SPRITE['INV_PLOT']] = create_craft_button(0x1, [{
        'f': create_plot,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#1e2021', '#352E1E', '#4C3B19', '#574122']
    }], 0.3, ['#3ba578', '#4eb687', '#3da34d'], 0.5), sprite[SPRITE['CRAFT_PLOT']] = sprite[SPRITE['INV_PLOT']], sprite[SPRITE['INV_GARLAND']] = create_craft_button(0x1, [{
        'f': create_garland_inv,
        'x': -0x5,
        'y': -0x5,
        'a': 0x1,
        'r': 0x0,
        'c': ['#e2d63b', '#ee71a9', '#42b672']
    }], 0x1, ['#3ba578', '#4eb687', '#3da34d'], 0.5), sprite[SPRITE['CHEST_GARLAND']] = sprite[SPRITE['INV_GARLAND']], sprite[SPRITE['INV_BRIDGE']] = create_craft_button(0x1, [{
        'f': create_bridge,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#1e2021', '#332715', '#4C3B19', '#574122']
    }], 0.5, ['#3ba578', '#4eb687', '#3da34d'], 0.5), sprite[SPRITE['CRAFT_BRIDGE']] = sprite[SPRITE['INV_BRIDGE']], sprite[SPRITE['INV_ROOF']] = create_craft_button(0x1, [{
        'f': create_roof,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#1e2021', '#352618', '#402b18', '#4c3b19', '#574122', '#52391e']
    }], 0.3, ['#3ba578', '#4eb687', '#3da34d'], 0.5), sprite[SPRITE['CRAFT_ROOF']] = sprite[SPRITE['INV_ROOF']], sprite[SPRITE['INV_WATERING_CAN_FULL']] = create_craft_button(0x1, [{
        'f': create_watering_can,
        'x': -0x1,
        'y': 0x0,
        'a': 0x1,
        'r': -Math['PI'] / 0x5,
        'c': ['#1e2021', '#674C2A', '#4C3B19', '#594225', '#1678a2']
    }], 0.4, ['#35b1b5', '#46c2c9', '#33b4e4'], 0.7), sprite[SPRITE['CRAFT_WATERING_CAN_FULL']] = sprite[SPRITE['INV_WATERING_CAN_FULL']], sprite[SPRITE['INV_WATERING_CAN']] = create_craft_button(0x1, [{
        'f': create_watering_can,
        'x': -0x1,
        'y': 0x0,
        'a': 0x1,
        'r': -Math['PI'] / 0x5,
        'c': ['#1e2021', '#674C2A', '#4C3B19', '#594225', '#3F2D18', '#2D2112']
    }], 0.4, ['#2b5c48', '#2b5c48', '#2b5c48'], 0.5), sprite[SPRITE['CRAFT_WATERING_CAN']] = sprite[SPRITE['INV_WATERING_CAN']], sprite[SPRITE['INV_FLOUR']] = create_craft_button(0x1, [{
        'f': create_flour,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#B3AA8E', '#817961', '#EBEAE2', '#E0DFD8']
    }], 0.25, ['#2b5c48', '#2b5c48', '#2b5c48'], 0.5), sprite[SPRITE['INV_CRAB_STICK']] = create_craft_button(0x1, [{
        'f': create_crab_stick,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#1e2021', '#ed5f4f', '#ce4545', '#ffffff', '#e2dad7']
    }], 0.2, ['#3ba578', '#4eb687', '#3da34d'], 0.5), sprite[SPRITE['CHEST_CRAB_STICK']] = sprite[SPRITE['INV_CRAB_STICK']], sprite[SPRITE['INV_CAKE']] = create_craft_button(0x1, [{
        'f': create_cake,
        'x': 0x0,
        'y': 0x0,
        'a': 0x1,
        'r': 0x0,
        'c': ['#1e2021', '#63391a', '#523124', '#d2c4b9', '#c1aca2', '#d8cbc2', '#c8b5ac', '#ac222a', '#e6636a']
    }], 0.25, ['#3ba578', '#4eb687', '#3da34d'], 0.5), sprite[SPRITE['CRAFT_CAKE']] = sprite[SPRITE['INV_CAKE']], sprite[SPRITE['INV_SANDWICH']] = create_craft_button(0x1, [{
        'f': create_SANDWICH,
        'x': -0x2,
        'y': -0x8,
        'a': 0x1,
        'r': 0x0,
        'c': ['#dfd6bc', '#7b5139', '#bf8d50', '#834e49', '#602820', '#d7ccaa']
    }], 0.25, ['#3ba578', '#4eb687', '#3da34d'], 0.5), sprite[SPRITE['CRAFT_SANDWICH']] = sprite[SPRITE['INV_SANDWICH']], sprite[SPRITE['INV_LAVA_SWORD']] = [], sprite[SPRITE['INV_LAVA_SWORD']][0x0] = IMAGES['INV_LAVA_SWORD_OUT'], sprite[SPRITE['INV_LAVA_SWORD']][0x1] = IMAGES['INV_LAVA_SWORD_IN'], sprite[SPRITE['INV_LAVA_SWORD']][0x2] = IMAGES['INV_LAVA_SWORD_CLICK'], sprite[SPRITE['CRAFT_LAVA_SWORD']] = sprite[SPRITE['INV_LAVA_SWORD']], sprite[SPRITE['CHEST_LAVA_SWORD']] = sprite[SPRITE['INV_LAVA_SWORD']], sprite[SPRITE['INV_LAVA_SPEAR']] = [], sprite[SPRITE['INV_LAVA_SPEAR']][0x0] = IMAGES['INV_LAVA_SPEAR_OUT'], sprite[SPRITE['INV_LAVA_SPEAR']][0x1] = IMAGES['INV_LAVA_SPEAR_IN'], sprite[SPRITE['INV_LAVA_SPEAR']][0x2] = IMAGES['INV_LAVA_SPEAR_CLICK'], sprite[SPRITE['CRAFT_LAVA_SPEAR']] = sprite[SPRITE['INV_LAVA_SPEAR']], sprite[SPRITE['CHEST_LAVA_SPEAR']] = sprite[SPRITE['INV_LAVA_SPEAR']], sprite[SPRITE['CRAFT_REIDITE_SWORD']] = sprite[SPRITE['INV_REIDITE_SWORD']], sprite[SPRITE['CHEST_REIDITE_SWORD']] = sprite[SPRITE['INV_REIDITE_SWORD']], sprite[SPRITE['INV_REIDITE_SWORD']] = [], sprite[SPRITE['INV_REIDITE_SWORD']][0x0] = IMAGES['INV_REIDITE_SWORD_OUT'], sprite[SPRITE['INV_REIDITE_SWORD']][0x1] = IMAGES['INV_REIDITE_SWORD_IN'], sprite[SPRITE['INV_REIDITE_SWORD']][0x2] = IMAGES['INV_REIDITE_SWORD_CLICK'], sprite[SPRITE['CRAFT_REIDITE_SWORD']] = sprite[SPRITE['INV_REIDITE_SWORD']], sprite[SPRITE['CHEST_REIDITE_SWORD']] = sprite[SPRITE['INV_REIDITE_SWORD']], sprite[SPRITE['INV_REIDITE_SPEAR']] = [], sprite[SPRITE['INV_REIDITE_SPEAR']][0x0] = IMAGES['INV_REIDITE_SPEAR_OUT'], sprite[SPRITE['INV_REIDITE_SPEAR']][0x1] = IMAGES['INV_REIDITE_SPEAR_IN'], sprite[SPRITE['INV_REIDITE_SPEAR']][0x2] = IMAGES['INV_REIDITE_SPEAR_CLICK'], sprite[SPRITE['CRAFT_REIDITE_SPEAR']] = sprite[SPRITE['INV_REIDITE_SPEAR']], sprite[SPRITE['CHEST_REIDITE_SPEAR']] = sprite[SPRITE['INV_REIDITE_SPEAR']], sprite[SPRITE['INV_DIAMOND_PROTECTION']] = [], sprite[SPRITE['INV_DIAMOND_PROTECTION']][0x0] = IMAGES['INV_DIAMOND_PROTECTION_OUT'], sprite[SPRITE['INV_DIAMOND_PROTECTION']][0x1] = IMAGES['INV_DIAMOND_PROTECTION_IN'], sprite[SPRITE['INV_DIAMOND_PROTECTION']][0x2] = IMAGES['INV_DIAMOND_PROTECTION_CLICK'], sprite[SPRITE['CRAFT_DIAMOND_PROTECTION']] = sprite[SPRITE['INV_DIAMOND_PROTECTION']], sprite[SPRITE['CHEST_DIAMOND_PROTECTION']] = sprite[SPRITE['INV_DIAMOND_PROTECTION']], sprite[SPRITE['INV_AMETHYST_PROTECTION']] = [], sprite[SPRITE['INV_AMETHYST_PROTECTION']][0x0] = IMAGES['INV_AMETHYST_PROTECTION_OUT'], sprite[SPRITE['INV_AMETHYST_PROTECTION']][0x1] = IMAGES['INV_AMETHYST_PROTECTION_IN'], sprite[SPRITE['INV_AMETHYST_PROTECTION']][0x2] = IMAGES['INV_AMETHYST_PROTECTION_CLICK'], sprite[SPRITE['CRAFT_AMETHYST_PROTECTION']] = sprite[SPRITE['INV_AMETHYST_PROTECTION']], sprite[SPRITE['CHEST_AMETHYST_PROTECTION']] = sprite[SPRITE['INV_AMETHYST_PROTECTION']], sprite[SPRITE['INV_REIDITE_PROTECTION']] = [], sprite[SPRITE['INV_REIDITE_PROTECTION']][0x0] = IMAGES['INV_REIDITE_PROTECTION_OUT'], sprite[SPRITE['INV_REIDITE_PROTECTION']][0x1] = IMAGES['INV_REIDITE_PROTECTION_IN'], sprite[SPRITE['INV_REIDITE_PROTECTION']][0x2] = IMAGES['INV_REIDITE_PROTECTION_CLICK'], sprite[SPRITE['CRAFT_REIDITE_PROTECTION']] = sprite[SPRITE['INV_REIDITE_PROTECTION']], sprite[SPRITE['CHEST_REIDITE_PROTECTION']] = sprite[SPRITE['INV_REIDITE_PROTECTION']], sprite[SPRITE['INV_REIDITE_HELMET']] = [], sprite[SPRITE['INV_REIDITE_HELMET']][0x0] = IMAGES['INV_REIDITE_HELMET_OUT'], sprite[SPRITE['INV_REIDITE_HELMET']][0x1] = IMAGES['INV_REIDITE_HELMET_IN'], sprite[SPRITE['INV_REIDITE_HELMET']][0x2] = IMAGES['INV_REIDITE_HELMET_CLICK'], sprite[SPRITE['CRAFT_REIDITE_HELMET']] = sprite[SPRITE['INV_REIDITE_HELMET']], sprite[SPRITE['CHEST_REIDITE_HELMET']] = sprite[SPRITE['INV_REIDITE_HELMET']], sprite[SPRITE['INV_LAVA_HELMET']] = [], sprite[SPRITE['INV_LAVA_HELMET']][0x0] = IMAGES['INV_LAVA_HELMET_OUT'], sprite[SPRITE['INV_LAVA_HELMET']][0x1] = IMAGES['INV_LAVA_HELMET_IN'], sprite[SPRITE['INV_LAVA_HELMET']][0x2] = IMAGES['INV_LAVA_HELMET_CLICK'], sprite[SPRITE['CRAFT_LAVA_HELMET']] = sprite[SPRITE['INV_LAVA_HELMET']], sprite[SPRITE['CHEST_LAVA_HELMET']] = sprite[SPRITE['INV_LAVA_HELMET']], sprite[SPRITE['INV_FIREFLY']] = [], sprite[SPRITE['INV_FIREFLY']][0x0] = IMAGES['INV_FIREFLY_OUT'], sprite[SPRITE['INV_FIREFLY']][0x1] = IMAGES['INV_FIREFLY_IN'], sprite[SPRITE['INV_FIREFLY']][0x2] = IMAGES['INV_FIREFLY_CLICK'], sprite[SPRITE['CRAFT_FIREFLY']] = sprite[SPRITE['INV_FIREFLY']], sprite[SPRITE['CHEST_FIREFLY']] = sprite[SPRITE['INV_FIREFLY']], sprite[SPRITE['INV_WITCH']] = [], sprite[SPRITE['INV_WITCH']][0x0] = IMAGES['INV_WITCH_OUT'], sprite[SPRITE['INV_WITCH']][0x1] = IMAGES['INV_WITCH_IN'], sprite[SPRITE['INV_WITCH']][0x2] = IMAGES['INV_WITCH_CLICK'], sprite[SPRITE['CRAFT_WITCH']] = sprite[SPRITE['INV_WITCH']], sprite[SPRITE['CHEST_WITCH']] = sprite[SPRITE['INV_WITCH']], sprite[SPRITE['INV_NIMBUS']] = [], sprite[SPRITE['INV_NIMBUS']][0x0] = IMAGES['INV_NIMBUS_OUT'], sprite[SPRITE['INV_NIMBUS']][0x1] = IMAGES['INV_NIMBUS_IN'], sprite[SPRITE['INV_NIMBUS']][0x2] = IMAGES['INV_NIMBUS_CLICK'], sprite[SPRITE['CRAFT_NIMBUS']] = sprite[SPRITE['INV_NIMBUS']], sprite[SPRITE['CHEST_NIMBUS']] = sprite[SPRITE['INV_NIMBUS']], sprite[SPRITE['INV_REIDITE']] = [], sprite[SPRITE['INV_REIDITE']][0x0] = IMAGES['INV_REIDITE_OUT'], sprite[SPRITE['INV_REIDITE']][0x1] = IMAGES['INV_REIDITE_IN'], sprite[SPRITE['INV_REIDITE']][0x2] = IMAGES['INV_REIDITE_CLICK'], sprite[SPRITE['CHEST_REIDITE']] = sprite[SPRITE['INV_REIDITE']], sprite[SPRITE['INV_FLAME']] = [], sprite[SPRITE['INV_FLAME']][0x0] = IMAGES['INV_FLAME_OUT'], sprite[SPRITE['INV_FLAME']][0x1] = IMAGES['INV_FLAME_IN'], sprite[SPRITE['INV_FLAME']][0x2] = IMAGES['INV_FLAME_CLICK'], sprite[SPRITE['CHEST_FLAME']] = sprite[SPRITE['INV_FLAME']], sprite[SPRITE['CHEST_SHOVEL']] = sprite[SPRITE['INV_SHOVEL']], sprite[SPRITE['CHEST_SHOVEL_GOLD']] = sprite[SPRITE['INV_SHOVEL_GOLD']], sprite[SPRITE['CHEST_SHOVEL_DIAMOND']] = sprite[SPRITE['INV_SHOVEL_DIAMOND']], sprite[SPRITE['CHEST_SHOVEL_AMETHYST']] = sprite[SPRITE['INV_SHOVEL_AMETHYST']], sprite[SPRITE['CHEST_SEED']] = sprite[SPRITE['INV_SEED']], sprite[SPRITE['CHEST_WHEAT_SEED']] = sprite[SPRITE['INV_WHEAT_SEED']], sprite[SPRITE['CHEST_WINDMILL']] = sprite[SPRITE['INV_WINDMILL']], sprite[SPRITE['CHEST_WILD_WHEAT']] = sprite[SPRITE['INV_WILD_WHEAT']], sprite[SPRITE['CHEST_FIRE']] = sprite[SPRITE['INV_FIRE']], sprite[SPRITE['CHEST_DRAGON_ORB']] = sprite[SPRITE['INV_DRAGON_ORB']], sprite[SPRITE['CHEST_DRAGON_CUBE']] = sprite[SPRITE['INV_DRAGON_CUBE']], sprite[SPRITE['CHEST_LAVA_ORB']] = sprite[SPRITE['INV_LAVA_ORB']], sprite[SPRITE['CHEST_LAVA_CUBE']] = sprite[SPRITE['INV_LAVA_CUBE']], sprite[SPRITE['CHEST_BIG_FIRE']] = sprite[SPRITE['INV_BIG_FIRE']], sprite[SPRITE['CHEST_SUGAR_CAN']] = sprite[SPRITE['INV_SUGAR_CAN']], sprite[SPRITE['CHEST_PIRATE_SWORD']] = sprite[SPRITE['INV_PIRATE_SWORD']], sprite[SPRITE['CHEST_SWORD_WOOD']] = sprite[SPRITE['INV_SWORD_WOOD']], sprite[SPRITE['CHEST_SWORD']] = sprite[SPRITE['INV_SWORD']], sprite[SPRITE['CHEST_CURSED_SWORD']] = sprite[SPRITE['INV_CURSED_SWORD']], sprite[SPRITE['CHEST_SWORD_GOLD']] = sprite[SPRITE['INV_SWORD_GOLD']], sprite[SPRITE['CHEST_SWORD_DIAMOND']] = sprite[SPRITE['INV_SWORD_DIAMOND']], sprite[SPRITE['CHEST_SWORD_AMETHYST']] = sprite[SPRITE['INV_SWORD_AMETHYST']], sprite[SPRITE['CHEST_PICK_WOOD']] = sprite[SPRITE['INV_PICK_WOOD']], sprite[SPRITE['CHEST_PICK']] = sprite[SPRITE['INV_PICK']], sprite[SPRITE['CHEST_PICK_GOLD']] = sprite[SPRITE['INV_PICK_GOLD']], sprite[SPRITE['CHEST_PICK_DIAMOND']] = sprite[SPRITE['INV_PICK_DIAMOND']], sprite[SPRITE['CHEST_PICK_AMETHYST']] = sprite[SPRITE['INV_PICK_AMETHYST']], sprite[SPRITE['CHEST_STONE']] = sprite[SPRITE['INV_STONE']], sprite[SPRITE['CHEST_GOLD']] = sprite[SPRITE['INV_GOLD']], sprite[SPRITE['CHEST_DIAMOND']] = sprite[SPRITE['INV_DIAMOND']], sprite[SPRITE['CHEST_WOOD']] = sprite[SPRITE['INV_WOOD']], sprite[SPRITE['CHEST_PLANT']] = sprite[SPRITE['INV_PLANT']], sprite[SPRITE['CHEST_WORKBENCH']] = sprite[SPRITE['INV_WORK']], sprite[SPRITE['CHEST_STONE_WALL']] = sprite[SPRITE['INV_STONE_WALL']], sprite[SPRITE['CHEST_DIAMOND_WALL']] = sprite[SPRITE['INV_DIAMOND_WALL']], sprite[SPRITE['CHEST_GOLD_WALL']] = sprite[SPRITE['INV_GOLD_WALL']], sprite[SPRITE['CHEST_AMETHYST_WALL']] = sprite[SPRITE['INV_AMETHYST_WALL']], sprite[SPRITE['CHEST_WALL']] = sprite[SPRITE['INV_WALL']], sprite[SPRITE['CHEST_SPIKE']] = sprite[SPRITE['INV_SPIKE']], sprite[SPRITE['CHEST_MEAT']] = sprite[SPRITE['INV_MEAT']], sprite[SPRITE['CHEST_COOKED_MEAT']] = sprite[SPRITE['INV_COOKED_MEAT']], sprite[SPRITE['CHEST_CORD']] = sprite[SPRITE['INV_CORD']], sprite[SPRITE['CHEST_BLUE_CORD']] = sprite[SPRITE['INV_BLUE_CORD']], sprite[SPRITE['CHEST_BANDAGE']] = sprite[SPRITE['INV_BANDAGE']], sprite[SPRITE['CHEST_LOCK']] = sprite[SPRITE['INV_LOCK']], sprite[SPRITE['CHEST_LOCKPICK']] = sprite[SPRITE['INV_LOCKPICK']], sprite[SPRITE['CHEST_RESURRECTION']] = sprite[SPRITE['INV_RESURRECTION']], sprite[SPRITE['CHEST_DRAGON_HEART']] = sprite[SPRITE['INV_DRAGON_HEART']], sprite[SPRITE['CHEST_LAVA_HEART']] = sprite[SPRITE['INV_LAVA_HEART']], sprite[SPRITE['CHEST_DRAGON_SWORD']] = sprite[SPRITE['INV_DRAGON_SWORD']], sprite[SPRITE['CHEST_TOTEM']] = sprite[SPRITE['INV_TOTEM']], sprite[SPRITE['CHEST_DOOR_WOOD_CLOSE']] = sprite[SPRITE['INV_DOOR_WOOD_CLOSE']], sprite[SPRITE['CHEST_CHEST']] = sprite[SPRITE['INV_CHEST']], sprite[SPRITE['CHEST_SLOT']] = CTI(create_chest_slot(0.8, !![], ['#4c3b19', '#c4a23a', '#c4a23a', '#c4a23a'])), sprite[SPRITE['CHEST_PLUS']] = create_craft_button(0.5, [{
        'f': create_plus_chest,
        'x': 0x0,
        'y': 0x2,
        'a': 0x1,
        'r': 0x0,
        'c': ['#ffffff']
    }], 0.16, ['#c4a23a', '#d0ad41', '#b89733'], 0.9), sprite[SPRITE['CHEST_STONE_SPIKE']] = sprite[SPRITE['INV_STONE_SPIKE']], sprite[SPRITE['CHEST_GOLD_SPIKE']] = sprite[SPRITE['INV_GOLD_SPIKE']], sprite[SPRITE['CHEST_DIAMOND_SPIKE']] = sprite[SPRITE['INV_DIAMOND_SPIKE']], sprite[SPRITE['CHEST_AMETHYST_SPIKE']] = sprite[SPRITE['INV_AMETHYST_SPIKE']], sprite[SPRITE['CHEST_BAG']] = sprite[SPRITE['INV_BAG']], sprite[SPRITE['CHEST_SPECIAL_FUR']] = sprite[SPRITE['INV_SPECIAL_FUR']], sprite[SPRITE['CHEST_SPECIAL_FUR_2']] = sprite[SPRITE['INV_SPECIAL_FUR_2']], sprite[SPRITE['CHEST_FUR']] = sprite[SPRITE['INV_FUR']], sprite[SPRITE['CHEST_KRAKEN_SKIN']] = sprite[SPRITE['INV_KRAKEN_SKIN']], sprite[SPRITE['CHEST_FUR_WOLF']] = sprite[SPRITE['INV_FUR_WOLF']], sprite[SPRITE['CHEST_FUR_BOAR']] = sprite[SPRITE['INV_FUR_BOAR']], sprite[SPRITE['CHEST_FUR_WINTER']] = sprite[SPRITE['INV_FUR_WINTER']], sprite[SPRITE['CHEST_EARMUFFS']] = sprite[SPRITE['INV_EARMUFFS']], sprite[SPRITE['CHEST_CAP_SCARF']] = sprite[SPRITE['INV_CAP_SCARF']], sprite[SPRITE['CHEST_DOOR_STONE_CLOSE']] = sprite[SPRITE['INV_DOOR_STONE_CLOSE']], sprite[SPRITE['CHEST_DOOR_GOLD_CLOSE']] = sprite[SPRITE['INV_DOOR_GOLD_CLOSE']], sprite[SPRITE['CHEST_DOOR_DIAMOND_CLOSE']] = sprite[SPRITE['INV_DOOR_DIAMOND_CLOSE']], sprite[SPRITE['CHEST_DOOR_AMETHYST_CLOSE']] = sprite[SPRITE['INV_DOOR_AMETHYST_CLOSE']], sprite[SPRITE['CHEST_COAT']] = sprite[SPRITE['INV_COAT']], sprite[SPRITE['CHEST_WOOD_SPEAR']] = sprite[SPRITE['INV_WOOD_SPEAR']], sprite[SPRITE['CHEST_SPEAR']] = sprite[SPRITE['INV_SPEAR']], sprite[SPRITE['CHEST_GOLD_SPEAR']] = sprite[SPRITE['INV_GOLD_SPEAR']], sprite[SPRITE['CHEST_DIAMOND_SPEAR']] = sprite[SPRITE['INV_DIAMOND_SPEAR']], sprite[SPRITE['CHEST_AMETHYST_SPEAR']] = sprite[SPRITE['INV_AMETHYST_SPEAR']], sprite[SPRITE['CHEST_DRAGON_SPEAR']] = sprite[SPRITE['INV_DRAGON_SPEAR']], sprite[SPRITE['CHEST_SUPER_HAMMER']] = sprite[SPRITE['INV_SUPER_HAMMER']], sprite[SPRITE['CHEST_SPANNER']] = sprite[SPRITE['INV_SPANNER']], sprite[SPRITE['CHEST_HAMMER']] = sprite[SPRITE['INV_HAMMER']], sprite[SPRITE['CHEST_HAMMER_GOLD']] = sprite[SPRITE['INV_HAMMER_GOLD']], sprite[SPRITE['CHEST_HAMMER_DIAMOND']] = sprite[SPRITE['INV_HAMMER_DIAMOND']], sprite[SPRITE['CHEST_HAMMER_AMETHYST']] = sprite[SPRITE['INV_HAMMER_AMETHYST']], sprite[SPRITE['CHEST_FURNACE']] = sprite[SPRITE['INV_FURNACE']], sprite[SPRITE['CHEST_BREAD_OVEN']] = sprite[SPRITE['INV_BREAD_OVEN']], sprite[SPRITE['CHEST_EXPLORER_HAT']] = sprite[SPRITE['INV_EXPLORER_HAT']], sprite[SPRITE['CHEST_STONE_HELMET']] = sprite[SPRITE['INV_STONE_HELMET']], sprite[SPRITE['CHEST_GOLD_HELMET']] = sprite[SPRITE['INV_GOLD_HELMET']], sprite[SPRITE['CHEST_DIAMOND_HELMET']] = sprite[SPRITE['INV_DIAMOND_HELMET']], sprite[SPRITE['CHEST_AMETHYST_HELMET']] = sprite[SPRITE['INV_AMETHYST_HELMET']], sprite[SPRITE['CHEST_DRAGON_HELMET']] = sprite[SPRITE['INV_DRAGON_HELMET']], sprite[SPRITE['CHEST_BOOK']] = sprite[SPRITE['INV_BOOK']], sprite[SPRITE['CHEST_PAPER']] = sprite[SPRITE['INV_PAPER']], sprite[SPRITE['CHEST_AMETHYST']] = sprite[SPRITE['INV_AMETHYST']], sprite[SPRITE['CHEST_BRIDGE']] = sprite[SPRITE['INV_BRIDGE']], sprite[SPRITE['CHEST_ROOF']] = sprite[SPRITE['INV_ROOF']], sprite[SPRITE['CHEST_PLOT']] = sprite[SPRITE['INV_PLOT']], sprite[SPRITE['CHEST_SAND']] = sprite[SPRITE['INV_SAND']], sprite[SPRITE['CHEST_BREAD']] = sprite[SPRITE['INV_BREAD']], sprite[SPRITE['CHEST_ICE']] = sprite[SPRITE['INV_ICE']], sprite[SPRITE['CHEST_GROUND']] = sprite[SPRITE['INV_GROUND']], sprite[SPRITE['CHEST_BOTTLE_FULL']] = sprite[SPRITE['INV_BOTTLE_FULL']], sprite[SPRITE['CHEST_BOTTLE_EMPTY']] = sprite[SPRITE['INV_BOTTLE_EMPTY']], sprite[SPRITE['CHEST_WATERING_CAN']] = sprite[SPRITE['INV_WATERING_CAN']], sprite[SPRITE['CHEST_FLOUR']] = sprite[SPRITE['INV_FLOUR']], sprite[SPRITE['CHEST_COOKIE']] = sprite[SPRITE['INV_COOKIE']], sprite[SPRITE['CHEST_CANDY']] = sprite[SPRITE['INV_CANDY']], sprite[SPRITE['CHEST_FERRERO']] = sprite[SPRITE['INV_FERRERO']], sprite[SPRITE['CHEST_SUPER_DIVING_SUIT']] = sprite[SPRITE['INV_SUPER_DIVING_SUIT']], sprite[SPRITE['CHEST_DIVING_MASK']] = sprite[SPRITE['INV_DIVING_MASK']], sprite[SPRITE['CHEST_WATERING_CAN_FULL']] = sprite[SPRITE['INV_WATERING_CAN_FULL']], sprite[SPRITE['CHEST_CAKE']] = sprite[SPRITE['INV_CAKE']], sprite[SPRITE['CHEST_CRAB_STICK']] = sprite[SPRITE['INV_CRAB_STICK']], sprite[SPRITE['CHEST_FOODFISH']] = sprite[SPRITE['INV_FOODFISH']], sprite[SPRITE['CHEST_FOODFISH_COOKED']] = sprite[SPRITE['INV_FOODFISH_COOKED']], sprite[SPRITE['CHEST_SCALES']] = sprite[SPRITE['INV_SCALES']], sprite[SPRITE['CHEST_SANDWICH']] = sprite[SPRITE['INV_SANDWICH']], sprite[SPRITE['CHEST_CROWN_GREEN']] = sprite[SPRITE['INV_CROWN_GREEN']], sprite[SPRITE['CHEST_GEMME_GREEN']] = sprite[SPRITE['INV_GEMME_GREEN']], sprite[SPRITE['CHEST_CROWN_ORANGE']] = sprite[SPRITE['INV_CROWN_ORANGE']], sprite[SPRITE['CHEST_GEMME_ORANGE']] = sprite[SPRITE['INV_GEMME_ORANGE']], sprite[SPRITE['CHEST_CROWN_BLUE']] = sprite[SPRITE['INV_CROWN_BLUE']], sprite[SPRITE['CHEST_GEMME_BLUE']] = sprite[SPRITE['INV_GEMME_BLUE']], sprite[SPRITE['CHEST_HOOD']] = sprite[SPRITE['INV_HOOD']], sprite[SPRITE['CHEST_PEASANT']] = sprite[SPRITE['INV_PEASANT']], sprite[SPRITE['CHEST_WINTER_PEASANT']] = sprite[SPRITE['INV_WINTER_PEASANT']], sprite[SPRITE['CHEST_WINTER_HOOD']] = sprite[SPRITE['INV_WINTER_HOOD']], sprite[SPRITE['CHEST_BUCKET_EMPTY']] = sprite[SPRITE['INV_BUCKET_EMPTY']], sprite[SPRITE['CHEST_BUCKET_FULL']] = sprite[SPRITE['INV_BUCKET_FULL']], sprite[SPRITE['CHEST_WELL']] = sprite[SPRITE['INV_WELL']], sprite[SPRITE['CHEST_SIGN']] = sprite[SPRITE['INV_SIGN']], sprite[SPRITE['CHEST_PUMPKIN_SEED']] = sprite[SPRITE['INV_PUMPKIN_SEED']], sprite[SPRITE['CHEST_GARLIC_SEED']] = sprite[SPRITE['INV_GARLIC_SEED']], sprite[SPRITE['CHEST_THORNBUSH_SEED']] = sprite[SPRITE['INV_THORNBUSH_SEED']], sprite[SPRITE['CHEST_WOOD_HELMET']] = sprite[SPRITE['INV_WOOD_HELMET']];
}
INFO_BOX = [], PLAYER_LEVEL = [];

function ctxDrawImage(_0x52a303, _0x467b0e, _0x28190a, _0x50503c, _0x515cf4, _0x196b3a, _0x17d6db, _0x1fedba, _0x4b7c5a, _0x13cc2e) {
    Settings['Xray']['e'] && (_0x52a303['globalAlpha'] = Settings['Xray']['o']);;
    if (_0x467b0e['tryLoad'] === undefined || _0x467b0e['tryLoad']() === 0x1) {
        if (_0x13cc2e !== undefined) _0x52a303['drawImage'](_0x467b0e, _0x28190a, _0x50503c, Math['max'](0x1, _0x515cf4), Math['max'](0x1, _0x196b3a), _0x17d6db, _0x1fedba, _0x4b7c5a, _0x13cc2e);
        else {
            if (_0x196b3a !== undefined) _0x52a303['drawImage'](_0x467b0e, _0x28190a, _0x50503c, _0x515cf4, _0x196b3a);
            else _0x52a303['drawImage'](_0x467b0e, _0x28190a, _0x50503c);
        }
    }
}

function draw_info_box() {
    var _0x5ae202 = game['info_box'],
        _0x82dc21 = _0x5ae202['id'];
    if (_0x5ae202['activated'] === 0x1 && _0x5ae202['display'] === 0x1) {
        if (INFO_BOX[_0x82dc21] === undefined) INFO_BOX[_0x82dc21] = create_info_box(_0x82dc21);
        if (_0x5ae202['craft'] === 0x1) ctxDrawImage(ctx, INFO_BOX[_0x82dc21], _0x5ae202['x'], _0x5ae202['y']);
        else {
            if (_0x5ae202['x'] - 0x50 + INFO_BOX[_0x82dc21]['width'] > canw) ctxDrawImage(ctx, INFO_BOX[_0x82dc21], canw - INFO_BOX[_0x82dc21]['width'] - 0xa, _0x5ae202['y'] - INFO_BOX[_0x82dc21]['height'] - 0xa);
            else ctxDrawImage(ctx, INFO_BOX[_0x82dc21], _0x5ae202['x'] - 0x50, _0x5ae202['y'] - INFO_BOX[_0x82dc21]['height'] - 0xa);
        }
    }
}

function draw_slot_number(_0x4a20dd, _0x4e622c, _0x1a9f57) {
    var _0x7eabd0 = sprite[SPRITE['SLOT_NUMBER']][_0x4a20dd],
        _0x3b81b5 = _0x4e622c['info']['translate']['x'] + 0x5 * scale,
        _0x2e2e58 = _0x4e622c['info']['translate']['y'] + 0x5 * scale;
    if (_0x4e622c['info']['state'] == BUTTON_CLICK || _0x1a9f57) _0x2e2e58 += scale * 0x5;
    ctxDrawImage(ctx, _0x7eabd0, _0x3b81b5, _0x2e2e58);
}

function draw_amount(_0xd4bf2d, _0x395638) {
    if (!sprite[SPRITE['COUNTER']][_0xd4bf2d]) sprite[SPRITE['COUNTER']][_0xd4bf2d] = create_text(scale, 'x' + _0xd4bf2d, 0x11, '#FFF');
    var _0x5de552 = sprite[SPRITE['COUNTER']][_0xd4bf2d],
        _0x14bcd3 = _0x395638['info']['translate']['x'] + _0x395638['info']['img'][0x0]['width'] - _0x5de552['width'] - 0xe * scale,
        _0x2df47d = _0x395638['info']['translate']['y'] + _0x395638['info']['img'][0x0]['height'] - _0x5de552['height'] - 0x13 * scale;
    if (_0x395638['info']['state'] == BUTTON_CLICK) _0x2df47d += scale * 0x5;
    ctxDrawImage(ctx, _0x5de552, _0x14bcd3, _0x2df47d);
}

function draw_well_inventory() {
    if (user['chest']['open'] || user['furnace']['open'] || user['windmill']['open'] || user['bread_oven']['open'] || user['extractor']['open']) return;
    user['well']['open'] = ![];
    var _0x51431b = world['fast_units'][user['uid']],
        _0xb6c1ff = WORLD['DIST_WELL'];
    if (!_0x51431b) return;
    for (var _0x32ea69 = 0x0; _0x32ea69 < world['units'][ITEMS['WELL']]['length']; _0x32ea69++) {
        var _0x276e26 = world['units'][ITEMS['WELL']][_0x32ea69],
            _0x52634d = Utils['dist'](_0x276e26, _0x51431b);
        _0x52634d < _0xb6c1ff && (_0xb6c1ff = _0x52634d, user['well']['open'] = !![], user['well']['pid'] = _0x276e26['pid'], user['well']['iid'] = _0x276e26['id']);
    }
}

function draw_sign_button() {
    if (user['chest']['open'] || user['furnace']['open'] || user['windmill']['open'] || user['bread_oven']['open'] || user['extractor']['open']) return;
    user['sign']['open'] = ![];
    var _0x1917fe = world['fast_units'][user['uid']],
        _0x14ad81 = WORLD['DIST_SIGN'];
    if (!_0x1917fe) return;
    for (var _0x4f887b = 0x0; _0x4f887b < world['units'][ITEMS['SIGN']]['length']; _0x4f887b++) {
        var _0xf15afa = world['units'][ITEMS['SIGN']][_0x4f887b],
            _0x2df50e = Utils['dist'](_0xf15afa, _0x1917fe);
        _0x2df50e < _0x14ad81 && _0xf15afa['info'] === 0x0 && _0xf15afa['pid'] === user['id'] && (user['sign']['open'] = !![], _0x14ad81 = _0x2df50e, user['sign']['iid'] = _0xf15afa['id']);
    }
    if (_0x14ad81 < WORLD['DIST_SIGN']) {
        var _0x18100c = game['sign']['button'];
        _0x18100c['draw'](ctx);
    }
};

function draw_bread_oven_inventory() {
    if (user['chest']['open'] || user['furnace']['open'] || user['windmill']['open'] || user['extractor']['open']) return;
    user['bread_oven']['open'] = ![];
    var _0x48376b = world['fast_units'][user['uid']],
        _0x69ab0a = WORLD['DIST_BREAD_OVEN'];
    if (!_0x48376b) return;
    for (var _0x572b82 = 0x0; _0x572b82 < world['units'][ITEMS['BREAD_OVEN']]['length']; _0x572b82++) {
        var _0x35b8b7 = world['units'][ITEMS['BREAD_OVEN']][_0x572b82],
            _0x263b53 = Utils['dist'](_0x35b8b7, _0x48376b);
        _0x263b53 < _0x69ab0a && (_0x69ab0a = _0x263b53, user['bread_oven']['open'] = !![], user['bread_oven']['amount_wood'] = _0x35b8b7['info'] & 0x1f, user['bread_oven']['amount_flour'] = (_0x35b8b7['info'] & 0x3e0) >> 0x5, user['bread_oven']['amount_bread'] = (_0x35b8b7['info'] & 0x7c00) >> 0xa, user['bread_oven']['pid'] = _0x35b8b7['pid'], user['bread_oven']['iid'] = _0x35b8b7['id']);
    }
    if (_0x69ab0a < WORLD['DIST_BREAD_OVEN']) {
        var _0x4e26e7 = sprite[SPRITE['BREAD_OVEN_UI']],
            _0x97fcde = game['bread_oven_wood_button'],
            _0x2c162f = _0x97fcde['info']['translate']['x'] - 0x20;
        ctxDrawImage(ctx, _0x4e26e7, _0x2c162f, 0x0);
        if (user['bread_oven']['amount_wood'] > 0x0) {
            _0x97fcde['draw'](ctx);
            var _0x3747ba = user['bread_oven']['amount_wood'];
            if (_0x3747ba > 0x1) draw_amount(_0x3747ba, _0x97fcde);
        }
        var _0x97fcde = game['bread_oven_bread_button'];
        if (user['bread_oven']['amount_bread'] > 0x0) {
            _0x97fcde['draw'](ctx);
            var _0x3747ba = user['bread_oven']['amount_bread'];
            if (_0x3747ba > 0x1) draw_amount(_0x3747ba, _0x97fcde);
        }
        var _0x97fcde = game['bread_oven_flour_button'];
        if (user['bread_oven']['amount_flour'] > 0x0) {
            _0x97fcde['draw'](ctx);
            var _0x3747ba = user['bread_oven']['amount_flour'];
            if (_0x3747ba > 0x1) draw_amount(_0x3747ba, _0x97fcde);
        }
    }
}

function draw_extractor_inventory() {
    if (user['chest']['open'] || user['furnace']['open']) return;
    user['extractor']['open'] = ![];
    var _0x190053 = world['fast_units'][user['uid']],
        _0xf525b = WORLD['DIST_EXTRACTOR_MACHINE'];
    if (!_0x190053) return;
    for (var _0x14e3a5 = 0x0; _0x14e3a5 < EXTRACTORS['length']; _0x14e3a5++) {
        var _0x129cad = EXTRACTORS[_0x14e3a5][0x0],
            _0x36f497 = EXTRACTORS[_0x14e3a5][0x1];
        for (var _0x1ec98c = 0x0; _0x1ec98c < world['units'][_0x129cad]['length']; _0x1ec98c++) {
            var _0x2fb409 = world['units'][_0x129cad][_0x1ec98c],
                _0x5e5b9f = Utils['dist'](_0x2fb409, _0x190053);
            _0x5e5b9f < _0xf525b && (_0xf525b = _0x5e5b9f, user['extractor']['mineral'] = _0x36f497, user['extractor']['type'] = _0x129cad, user['extractor']['open'] = !![], user['extractor']['amount_wood'] = _0x2fb409['info'] & 0xff, user['extractor']['amount_mineral'] = (_0x2fb409['info'] & 0xff00) >> 0x8, user['extractor']['pid'] = _0x2fb409['pid'], user['extractor']['iid'] = _0x2fb409['id']);
        }
    }
    if (_0xf525b < WORLD['DIST_EXTRACTOR_MACHINE']) {
        var _0x1b9ed3 = sprite[SPRITE['EXTRACTOR_CASES']],
            _0x53241b = game['extractor_wood_button'],
            _0x44f123 = _0x53241b['info']['translate']['x'] - 0x21;
        ctxDrawImage(ctx, _0x1b9ed3, _0x44f123, 0x0);
        if (user['extractor']['amount_wood'] > 0x0) {
            _0x53241b['draw'](ctx);
            var _0x31c327 = user['extractor']['amount_wood'];
            if (_0x31c327 > 0x1) draw_amount(_0x31c327, _0x53241b);
        }
        switch (user['extractor']['mineral']) {
            case INV['STONE']:
                var _0x53241b = game['extractor_stone_button'];
                break;
            case INV['GOLD']:
                var _0x53241b = game['extractor_gold_button'];
                break;
            case INV['DIAMOND']:
                var _0x53241b = game['extractor_diamond_button'];
                break;
            case INV['AMETHYST']:
                var _0x53241b = game['extractor_amethyst_button'];
                break;
            case INV['REIDITE']:
                var _0x53241b = game['extractor_reidite_button'];
                break;
        }
        if (user['extractor']['amount_mineral'] > 0x0) {
            _0x53241b['draw'](ctx);
            var _0x31c327 = user['extractor']['amount_mineral'];
            if (_0x31c327 > 0x1) draw_amount(_0x31c327, _0x53241b);
        }
    }
}

function draw_windmill_inventory() {
    if (user['chest']['open'] || user['furnace']['open']) return;
    user['windmill']['open'] = ![];
    var _0x26089a = world['fast_units'][user['uid']],
        _0x292265 = WORLD['DIST_WINDMILL'];
    if (!_0x26089a) return;
    for (var _0x44f09a = 0x0; _0x44f09a < world['units'][ITEMS['WINDMILL']]['length']; _0x44f09a++) {
        var _0x4a9148 = world['units'][ITEMS['WINDMILL']][_0x44f09a],
            _0x5d2f6c = Utils['dist'](_0x4a9148, _0x26089a);
        _0x5d2f6c < _0x292265 && (_0x292265 = _0x5d2f6c, user['windmill']['open'] = !![], user['windmill']['amount_wheat'] = _0x4a9148['info'] & 0xff, user['windmill']['amount_flour'] = (_0x4a9148['info'] & 0xff00) >> 0x8, user['windmill']['pid'] = _0x4a9148['pid'], user['windmill']['iid'] = _0x4a9148['id']);
    }
    if (_0x292265 < WORLD['DIST_WINDMILL']) {
        var _0xecde28 = sprite[SPRITE['WINDMILL_CASES']],
            _0x339acc = game['windmill_wheat_button'],
            _0x57d4d8 = _0x339acc['info']['translate']['x'] - 0x21;
        ctxDrawImage(ctx, _0xecde28, _0x57d4d8, 0x0);
        if (user['windmill']['amount_wheat'] > 0x0) {
            _0x339acc['draw'](ctx);
            var _0x1e8bae = user['windmill']['amount_wheat'];
            if (_0x1e8bae > 0x1) draw_amount(_0x1e8bae, _0x339acc);
        }
        var _0x339acc = game['windmill_flour_button'];
        if (user['windmill']['amount_flour'] > 0x0) {
            _0x339acc['draw'](ctx);
            var _0x1e8bae = user['windmill']['amount_flour'];
            if (_0x1e8bae > 0x1) draw_amount(_0x1e8bae, _0x339acc);
        }
    }
}

function draw_furnace_inventory() {
    if (user['chest']['open']) return;
    user['furnace']['amount'] = 0x0, user['furnace']['open'] = ![];
    var _0xc2bf64 = world['fast_units'][user['uid']],
        _0x1cc49f = WORLD['DIST_FURNACE'];
    if (!_0xc2bf64) return;
    for (var _0x81b21a = 0x0; _0x81b21a < world['units'][ITEMS['FURNACE']]['length']; _0x81b21a++) {
        var _0x55ea28 = world['units'][ITEMS['FURNACE']][_0x81b21a],
            _0x1ff399 = Utils['dist'](_0x55ea28, _0xc2bf64);
        _0x1ff399 < _0x1cc49f && (_0x1cc49f = _0x1ff399, user['furnace']['open'] = !![], user['furnace']['amount'] = _0x55ea28['info'], user['furnace']['pid'] = _0x55ea28['pid'], user['furnace']['iid'] = _0x55ea28['id']);
    }
    if (_0x1cc49f < WORLD['DIST_FURNACE']) {
        var _0x2556a2 = sprite[SPRITE['FURNACE_SLOT']],
            _0x7f5be9 = game['furnace_button'],
            _0x4a1093 = Math['floor'](_0x7f5be9['info']['translate']['x'] + (_0x7f5be9['info']['img'][0x0]['width'] - _0x2556a2['width']) / 0x2),
            _0x11d0b = Math['floor'](_0x7f5be9['info']['translate']['y'] + (_0x7f5be9['info']['img'][0x0]['height'] - _0x2556a2['height']) / 0x2) + 0x3;
        ctxDrawImage(ctx, _0x2556a2, _0x4a1093, _0x11d0b);
        if (user['furnace']['amount'] > 0x0) {
            _0x7f5be9['draw'](ctx);
            var _0x5e0abb = user['furnace']['amount'];
            if (_0x5e0abb > 0x1) draw_amount(_0x5e0abb, _0x7f5be9);
        }
    }
}

function draw_resurrection_inventory() {
    user['resurrection']['open'] = ![];
    var _0x13ed16 = world['fast_units'][user['uid']],
        _0x1629ef = WORLD['DIST_RESURRECTION'];
    if (!_0x13ed16) return;
    for (var _0x3ec779 = 0x0; _0x3ec779 < world['units'][ITEMS['RESURRECTION']]['length']; _0x3ec779++) {
        var _0x4deea3 = world['units'][ITEMS['RESURRECTION']][_0x3ec779],
            _0x25f7c4 = Utils['dist'](_0x4deea3, _0x13ed16);
        _0x25f7c4 < _0x1629ef && (_0x1629ef = _0x25f7c4, user['resurrection']['open'] = !![], user['resurrection']['pid'] = _0x4deea3['pid'], user['resurrection']['iid'] = _0x4deea3['id']);
    }
    if (_0x1629ef < WORLD['DIST_RESURRECTION']) game['resurrection']['draw'](ctx);
}

function draw_team_buttons() {
    user['totem']['id'] = -0x1, user['totem']['pid'] = -0x1;
    if (user['spectator'] || user['totem']['wait'] || user['zombie']) return;
    var _0x14821a = world['fast_units'][user['uid']],
        _0xbda439 = WORLD['DIST_TOTEM'];
    if (_0x14821a)
        for (var _0x42f75e = 0x0; _0x42f75e < world['units'][ITEMS['TOTEM']]['length']; _0x42f75e++) {
            var _0x5cd8fb = world['units'][ITEMS['TOTEM']][_0x42f75e],
                _0x465d58 = Utils['dist'](_0x5cd8fb, _0x14821a);
            _0x465d58 < _0xbda439 && (_0xbda439 = _0x465d58, user['totem']['id'] = _0x5cd8fb['id'], user['totem']['pid'] = _0x5cd8fb['pid'], user['totem']['info'] = _0x5cd8fb['info'], user['totem']['lock'] = (_0x5cd8fb['info'] & 0x10) >> 0x4);
        }
    var _0x3fdfbf = game['team_buttons_id'];
    game['team_buttons_id'] = -0x1;
    if (user['totem']['pid'] != -0x1 && (user['team']['length'] == 0x0 || user['id'] == user['totem']['pid'])) {
        if (user['team']['length'] == 0x0 && user['totem']['info'] >= 0x8) game['team_buttons_id'] = CLIENT['TEAM_FULL'];
        else {
            if (user['team']['length'] == 0x0) game['team_buttons_id'] = CLIENT['TEAM_JOIN'];
            else game['team_buttons_id'] = CLIENT['TEAM_MANAGE'];
        }
    } else {
        if (user['team']['length'] != 0x0 && user['team'][0x0] != user['id']) game['team_buttons_id'] = CLIENT['TEAM_LEAVE'];
        else {
            if (user['team']['length'] != 0x0 && user['team'][0x0] == user['id']) game['team_buttons_id'] = CLIENT['TEAM_SHOW'];
            else {
                if (user['team']['length'] != 0x0) game['team_buttons_id'] = CLIENT['TEAM_JOIN'];
            }
        }
    }
    if (game['team_buttons_id'] != -0x1) game['team_buttons'][game['team_buttons_id']]['button']['draw'](ctx);
    var _0x2c1512 = document['getElementById']('team_box')['style'];
    if (game['team_buttons_id'] != -0x1 && game['team_buttons_id'] != _0x3fdfbf && _0x2c1512['display'] == 'inline-block') game['team_buttons'][game['team_buttons_id']]['action']();
}

function draw_chest_inventory() {
    user['chest']['id'] = -0x1, user['chest']['lock'] = ![], user['chest']['locked'] = ![], user['chest']['lockpick'] = ![], user['chest']['padlock'] = ![], user['chest']['open'] = ![];
    var _0x53de80 = world['fast_units'][user['uid']],
        _0x1cdc66 = WORLD['DIST_CHEST'];
    if (!_0x53de80) return;
    for (var _0x58e2b0 = 0x0; _0x58e2b0 < world['units'][ITEMS['CHEST']]['length']; _0x58e2b0++) {
        var _0x35ba0c = world['units'][ITEMS['CHEST']][_0x58e2b0],
            _0x4b9474 = Utils['dist'](_0x35ba0c, _0x53de80);
        if (_0x4b9474 < _0x1cdc66) {
            _0x1cdc66 = _0x4b9474, user['chest']['open'] = !![], user['chest']['id'] = _0x35ba0c['action'] < 0x2 ? -0x1 : Math['floor']((_0x35ba0c['action'] - 0x1) / 0x2), user['chest']['amount'] = _0x35ba0c['info'], user['chest']['pid'] = _0x35ba0c['pid'], user['chest']['iid'] = _0x35ba0c['id'], user['chest']['locked'] = _0x35ba0c['lock'], user['chest']['lock'] = _0x35ba0c['lock'] && user['id'] != _0x35ba0c['pid'] && !user['in_team'](_0x35ba0c['pid']) ? !![] : ![], user['chest']['padlock'] = _0x35ba0c['pid'] === user['id'] && !user['chest']['locked'] && user['inv']['find_item'](INV['LOCK']) != -0x1 ? !![] : ![];
            if (user['chest']['locked'] && user['inv']['find_item'](INV['LOCKPICK']) != -0x1) user['chest']['lockpick'] = !![];
        }
    }
    if (_0x1cdc66 < WORLD['DIST_CHEST']) {
        var _0x2ce58b = sprite[SPRITE['CHEST_SLOT']],
            _0x1d030a = game['chest_buttons'][0x0],
            _0x277fae = Math['floor'](_0x1d030a['info']['translate']['x'] + (_0x1d030a['info']['img'][0x0]['width'] - _0x2ce58b['width']) / 0x2),
            _0x5c1865 = Math['floor'](_0x1d030a['info']['translate']['y'] + (_0x1d030a['info']['img'][0x0]['height'] - _0x2ce58b['height']) / 0x2) + 0x3;
        ctxDrawImage(ctx, _0x2ce58b, _0x277fae, _0x5c1865);
        if (!user['chest']['lock'] || user['chest']['pid'] === user['id']) {
            if (user['chest']['id'] >= 0x0) {
                var _0x1d030a = game['chest_buttons'][user['chest']['id']];
                _0x1d030a['draw'](ctx);
                var _0x5d4f40 = user['chest']['amount'];
                if (_0x5d4f40 > 0x1) draw_amount(_0x5d4f40, _0x1d030a);
            }
        }
        if (!user['chest']['lock']) {
            if (user['chest']['padlock']) game['chest_padlock']['draw'](ctx);
        } else game['chest_locked']['draw'](ctx);
        if (user['chest']['lockpick']) game['chest_lockpick']['draw'](ctx);
    }
}

function draw_bigmap() {
    if (!user['bigmap']) return;
    ctx['globalAlpha'] = 0.5, ctx['fillStyle'] = '#000', ctx['fillRect'](0x0, 0x0, canw, canh), ctx['globalAlpha'] = 0.8;
    var _0x5b3164 = sprite[SPRITE['BIGMAP']][world['time']],
        _0x2b9249 = canw2 - _0x5b3164['width'] / 0x2,
        _0x40a67f = canh2 - _0x5b3164['height'] / 0x2;
    ctxDrawImage(ctx, _0x5b3164, _0x2b9249, _0x40a67f), ctx['globalAlpha'] = 0x1;
    game['minimap']['marker']['x'] > -0x1 && (ctx['fillStyle'] = '#660000', circle(ctx, _0x2b9249 + game['minimap']['marker']['x'] * 0x3 * scale, _0x40a67f + game['minimap']['marker']['y'] * 0x3 * scale, scale * 0xe), ctx['fill']());
    var _0x50efc8 = game['minimap']['players'];
    for (var _0x38f08f = 0x0; _0x38f08f < _0x50efc8['length']; _0x38f08f++) {
        var _0x371e78 = _0x50efc8[_0x38f08f];
        ctx['fillStyle'] = !world['time'] ? '#ff0000' : '#ff0000', circle(ctx, _0x2b9249 + 0x258 * (_0x371e78['x'] / (world['nw'] * 0x64)) * scale, _0x40a67f + 0x258 * (_0x371e78['y'] / (world['nh'] * 0x64)) * scale, scale * 0x6), ctx['fill']();
    }
    var _0x1af9b0 = world['fast_units'][user['uid']];
    _0x1af9b0 && (ctx['fillStyle'] = !world['time'] ? '#e39716' : '#fff', circle(ctx, _0x2b9249 + 0x258 * (_0x1af9b0['x'] / (world['nw'] * 0x64)) * scale, _0x40a67f + 0x258 * (_0x1af9b0['y'] / (world['nh'] * 0x64)) * scale, scale * 0xc), ctx['fill']());
}

function draw_reconnect() {
    if (user['reconnect']['enabled']) {
        ctx['globalAlpha'] = 0.9, ctx['fillStyle'] = '#000', round_rect(ctx, canw2 - 0x96, canh2 - 0x5a, 0x12c, 0xb4, 0xf), ctx['fill'](), ctx['globalAlpha'] = 0x1;
        var _0x26949f = sprite[SPRITE['GEAR2']];
        ctx['save'](), user['reconnect']['rotate'] = (user['reconnect']['rotate'] + delta * 0x2) % (Math['PI'] * 0x2), ctx['translate'](canw / 0x2, canh / 0x2 - 0x19), ctx['rotate'](user['reconnect']['rotate']), ctxDrawImage(ctx, _0x26949f, -_0x26949f['width'] / 0x2, -_0x26949f['height'] / 0x2), ctx['restore']();
        var _0x26949f = sprite[SPRITE['RECONNECT']];
        ctxDrawImage(ctx, _0x26949f, (canw - _0x26949f['width']) / 0x2, (canh - _0x26949f['height']) / 0x2 + 0x19);
    }
}

function draw_minimap() {
    if (user['inv']['can_select']['length'] > 0x0) var _0x4429c2 = {
        'x': game['minimap']['translate']['x'],
        'y': game['minimap']['translate']['y'] - 0x78 * scale
    };
    else var _0x4429c2 = {
        'x': game['minimap']['translate']['x'],
        'y': game['minimap']['translate']['y'] - 0x32 * scale
    };
    ctx['globalAlpha'] = 0.8;
    var _0x3d6122 = sprite[SPRITE['MINIMAP']][world['time']];
    ctxDrawImage(ctx, _0x3d6122, _0x4429c2['x'], _0x4429c2['y']), ctx['globalAlpha'] = 0x1;
    game['minimap']['marker']['x'] > -0x1 && (ctx['fillStyle'] = '#660000', circle(ctx, _0x4429c2['x'] + game['minimap']['marker']['x'] * scale, _0x4429c2['y'] + game['minimap']['marker']['y'] * scale, scale * 0x5), ctx['fill']());
    var _0x5efb38 = scale,
        _0x19bbe9 = game['minimap']['players'];
    for (var _0x256e8e = 0x0; _0x256e8e < _0x19bbe9['length']; _0x256e8e++) {
        var _0x33c614 = _0x19bbe9[_0x256e8e];
        ctx['fillStyle'] = !world['time'] ? '#ff0000' : '#ff0000', circle(ctx, _0x4429c2['x'] + 0xc1 * (_0x33c614['x'] / (world['nw'] * 0x64)) * scale, _0x4429c2['y'] + 0xc1 * (_0x33c614['y'] / (world['nh'] * 0x64)) * scale, scale * 0x2), ctx['fill']();
    }
    var _0x2b3089 = world['fast_units'][user['uid']];
    _0x2b3089 && (ctx['fillStyle'] = !world['time'] ? '#e39716' : '#fff', circle(ctx, _0x4429c2['x'] + 0xc1 * (_0x2b3089['x'] / (world['nw'] * 0x64)) * scale, _0x4429c2['y'] + 0xc1 * (_0x2b3089['y'] / (world['nh'] * 0x64)) * scale, scale * 0x4), ctx['fill']()), scale = _0x5efb38;
}
var __BANDAGE__ = [];

function draw_status() {
    var _0x1d372a = -0x8;
    if (user['auto_feed']['enabled']) {
        var _0x587592 = sprite[SPRITE['AUTO_FEED']];
        ctxDrawImage(ctx, _0x587592, user['auto_feed']['translate']['x'], user['auto_feed']['translate']['y'] + _0x1d372a), _0x1d372a += 0x46;
    }
    if (user['blizzard'] === 0x1) {
        var _0x587592 = sprite[SPRITE['STOP_REGENERATION_BLIZZARD']];
        ctxDrawImage(ctx, _0x587592, user['auto_feed']['translate']['x'], user['auto_feed']['translate']['y'] + _0x1d372a), _0x1d372a += 0x46;
    } else {
        if (user['gauges']['cold']['x'] < 0.25 || user['gauges']['hunger']['x'] < 0.25 || user['gauges']['thirst']['x'] < 0.25 || user['gauges']['oxygen']['x'] < 0.25 || user['gauges']['warm']['x'] < 0.25) {
            var _0x587592 = sprite[SPRITE['STOP_REGENERATION']];
            ctxDrawImage(ctx, _0x587592, user['auto_feed']['translate']['x'], user['auto_feed']['translate']['y'] + _0x1d372a), _0x1d372a += 0x46;
        }
    }
    if (user['bandage'] > 0x0) {
        var _0x587592 = sprite[SPRITE['BANDAGE_ACTIVATED']];
        ctxDrawImage(ctx, _0x587592, user['auto_feed']['translate']['x'], user['auto_feed']['translate']['y'] + _0x1d372a);
        var _0x270f0f = __BANDAGE__[user['bandage']];
        _0x270f0f === undefined && (_0x270f0f = create_text(scale, user['bandage'] + '', 0x1e, '#FDFDFD', null, null, null, null, null, '#C8BBBF', 0x6), __BANDAGE__[user['bandage']] = _0x270f0f);
        if (user['bandage'] < 0x9) ctxDrawImage(ctx, _0x270f0f, user['auto_feed']['translate']['x'] - 0x27, user['auto_feed']['translate']['y'] + _0x1d372a + 0x14);
        else ctxDrawImage(ctx, _0x270f0f, user['auto_feed']['translate']['x'] - 0x2e, user['auto_feed']['translate']['y'] + _0x1d372a + 0x14);
    }
    ctx['save']();
    user['winter']['tempest'] && (ctx['drawImage'](BlizzardImage, user['auto_feed']['translate']['x'], user['auto_feed']['translate']['y'] + _0x1d372a), _0x1d372a += 0x41);;
    user['desert']['tempest'] && (ctx['drawImage'](SandStormImage, user['auto_feed']['translate']['x'], user['auto_feed']['translate']['y'] + _0x1d372a), _0x1d372a += 0x41);;
    if (Limit['I']['canvas']) ctx['drawImage'](Limit['I']['canvas'], user['auto_feed']['translate']['x'] - 0xc, user['auto_feed']['translate']['y'] + _0x1d372a - 0x10);
    _0x1d372a += 0x1e;
    let _0x3bec28 = world['units'][ITEMS['BED']];
    if (_0x3bec28['length']) {
        let _0x17054a = world['fast_units'][user['uid']];
        if (_0x17054a) {
            for (let _0x4e985c = 0x0; _0x4e985c < _0x3bec28['length']; _0x4e985c++) {
                Math['abs'](_0x17054a['x'] - _0x3bec28[_0x4e985c]['x']) < 0x22 && Math['abs'](_0x17054a['y'] - _0x3bec28[_0x4e985c]['y']) < 0x22 && (ctx['font'] = '30px\x20Baloo\x20Paaji', ctx['strokeStyle'] = 'black', ctx['lineWidth'] = 0x7, ctx['strokeText']('B', user['auto_feed']['translate']['x'] - 0x4, user['auto_feed']['translate']['y'] + _0x1d372a + 0x14), ctx['fillStyle'] = '#5f57ff', ctx['fillText']('B', user['auto_feed']['translate']['x'] - 0x4, user['auto_feed']['translate']['y'] + _0x1d372a + 0x14), _0x1d372a += 0x1e);;
            };
        };
    };
    ctx['restore']();
    let _0xa29fc4 = Date['now']();
    ctx['save'](), ctx['font'] = '30px\x20Baloo\x20Paaji', ctx['strokeStyle'] = 'black', ctx['lineWidth'] = 0x7, ctx['strokeText'](window['fpsdata'] + '\x20FPS', user['auto_feed']['translate']['x'] + -0x78, user['auto_feed']['translate']['y'] + -0x32), ctx['fillStyle'] = 'white', ctx['fillText'](window['fpsdata'] + '\x20FPS', user['auto_feed']['translate']['x'] + -0x78, user['auto_feed']['translate']['y'] + -0x32), ctx['restore']();
}

function draw_leaderboard() {
    var _0x10244d = user['ldb'],
        _0x39bd1d = game['leaderboard'];
    if (_0x10244d['update']) {
        _0x10244d['update'] = ![];
        var _0x589e81 = _0x10244d['ids'],
            _0xad87c8 = _0x39bd1d['can']['width'],
            _0x551155 = _0x39bd1d['can']['height'],
            _0x3a55bb = _0x39bd1d['ctx'],
            _0x517f0f = world['players'],
            _0x534c3d = ![];
        _0x3a55bb['clearRect'](0x0, 0x0, _0xad87c8, _0x551155), _0x3a55bb['drawImage'](_0x39bd1d['img'], 0x0, 0x0);
        for (var _0x25d0fe = 0x0; _0x25d0fe < _0x589e81['length']; _0x25d0fe++) {
            var _0x53ca87 = _0x517f0f[_0x589e81[_0x25d0fe]];
            if (world['mode'] === WORLD['MODE_HUNGER_GAMES'] && _0x53ca87['nickname'] === 'spectator') continue;
            if (world['mode'] === WORLD['MODE_ZOMBIES'] && _0x53ca87['skin'] === WORLD['ZOMBIE_SKIN']) continue;
            if (_0x589e81[_0x25d0fe] == user['id']) {
                _0x534c3d = !![];
                if (world['mode'] === WORLD['MODE_VAMPIRES'] && _0x53ca87['skin'] === WORLD['VAMPIRE_SKIN']) color = '#FF0000';
                else color = '#FFF';
            } else {
                if (world['mode'] === WORLD['MODE_VAMPIRES'] && _0x53ca87['skin'] === WORLD['VAMPIRE_SKIN']) color = '#990000';
                else color = '#A1BDCD';
            }
            _0x3a55bb['drawImage'](create_text(scale, '' + (_0x25d0fe + 0x1), 0xf * scale, color), 0x14 * scale, (0x28 + _0x25d0fe * 0x16) * scale);
            if (!_0x53ca87['ldb_label']) _0x53ca87['ldb_label'] = create_text(scale, _0x53ca87['nickname'], 0xf * scale, color, undefined, undefined, undefined, undefined, 0x6e * scale);
            _0x3a55bb['drawImage'](_0x53ca87['ldb_label'], 0x27 * scale, (0x28 + _0x25d0fe * 0x16) * scale), _0x3a55bb['drawImage'](create_text(scale, Utils['simplify_number'](_0x53ca87['score']), 0xf * scale, color), 0x9c * scale, (0x28 + _0x25d0fe * 0x16) * scale);
        }!_0x534c3d && ((world['mode'] === WORLD['MODE_PVP'] || world['mode'] === WORLD['MODE_VAMPIRES'] || world['mode'] === WORLD['MODE_LEGACY'] || world['mode'] === WORLD['MODE_BR'] || world['mode'] === WORLD['MODE_EXPERIMENTAL'] || world['mode'] === WORLD['MODE_HUNGER_GAMES'] && !user['spectator'] || world['mode'] === WORLD['MODE_ZOMBIES'] && !user['zombie']) && (_0x3a55bb['drawImage'](sprite[SPRITE['YOUR_SCORE']], 0xf * scale, (0x2e + _0x25d0fe * 0x16) * scale), _0x3a55bb['drawImage'](create_text(scale, Utils['simplify_number'](world['players'][user['id']]['score']), 0xf * scale, '#FFF'), 0x64 * scale, (0x2e + _0x25d0fe * 0x16) * scale)));
    }
    ctxDrawImage(ctx, _0x39bd1d['can'], _0x39bd1d['translate']['x'], _0x39bd1d['translate']['y']);
}

function draw_totem_delay() {
    var _0x413237 = user['totem'];
    if (_0x413237['wait']) {
        var _0x361f05 = _0x413237['timeout']['update']();
        ctx['save']();
        var _0x6d620e = sprite[SPRITE['DELAY_TEAM']],
            _0x265327 = sprite[SPRITE['DELAY_WEAPON']]['height'] + 0x19 * scale;
        ctx['translate'](_0x6d620e['width'], game['gauges']['translate']['y'] - 0xbc * scale - _0x265327);
        var _0x24b989 = -_0x6d620e['width'] / 0x2 - 0x2,
            _0x48cd29 = -_0x6d620e['height'] / 0x2 - 0x4;
        ctxDrawImage(ctx, _0x6d620e, _0x24b989 + 0x2, _0x48cd29), ctx['beginPath'](), ctx['lineWidth'] = 0x5 * scale, ctx['strokeStyle'] = SPRITE['WEAPON_LOADING'][world['time']], ctx['lineCap'] = 'round', ctx['arc'](0x0, _0x48cd29 + _0x6d620e['height'] / 0x2, 0x19 * scale, 0x0, Math['PI'] * 0x2 * _0x413237['timeout']['v']), ctx['stroke'](), ctx['restore'](), _0x361f05 && (_0x413237['wait'] = ![], _0x413237['timeout']['v'] = 0x0, _0x413237['timeout']['o'] = ![]);
    }
}

function draw_clock() {
    var _0x2f0a5e = world['clock'],
        _0x27fe26 = sprite[SPRITE['CLOCK']][world['time']];
    ctxDrawImage(ctx, _0x27fe26, _0x2f0a5e['translate']['x'], _0x2f0a5e['translate']['y']), ctx['save'](), ctx['translate'](_0x2f0a5e['translate']['x'] + _0x27fe26['width'] / 0x2, _0x2f0a5e['translate']['y'] + _0x27fe26['height'] / 0x2), world['clock']['now'] = (new Date()['getTime']() - _0x2f0a5e['init'] + _0x2f0a5e['hour']) % WORLD['DAY'];
    var _0x884bb4 = Math['PI'] * 0x2 * world['clock']['now'] / WORLD['DAY'] - Math['PI'] / 0x2;
    ctx['rotate'](_0x884bb4), ctxDrawImage(ctx, sprite[SPRITE['ARROW_CLOCK']], -_0x27fe26['width'] / 0x2, -_0x27fe26['height'] / 0x2), ctx['restore']();
}

function draw_build_delay() {
    var _0x42a191 = user['build'];
    if (_0x42a191['wait']) {
        var _0x5f1fbb = _0x42a191['timeout']['update']();
        ctx['save']();
        var _0x7bc982 = sprite[SPRITE['DELAY_WALL']];
        ctx['translate'](_0x7bc982['width'] - 0xc * scale, game['gauges']['translate']['y'] - 0xbe * scale);
        var _0x185381 = -_0x7bc982['width'] / 0x2 + 0x9,
            _0x7c8120 = -_0x7bc982['height'] / 0x2 - 0x4;
        ctxDrawImage(ctx, _0x7bc982, _0x185381, _0x7c8120), ctx['beginPath'](), ctx['lineWidth'] = 0x5 * scale, ctx['strokeStyle'] = SPRITE['HELMET_LOADING'][world['time']], ctx['lineCap'] = 'round', ctx['arc'](0x9, _0x7c8120 + _0x7bc982['height'] / 0x2, 0x19 * scale, 0x0, Math['PI'] * 0x2 * _0x42a191['timeout']['v']), ctx['stroke'](), ctx['restore'](), _0x5f1fbb && (_0x42a191['wait'] = ![], _0x42a191['timeout']['v'] = 0x0, _0x42a191['timeout']['o'] = ![]);
    }
}

function draw_helmet_switch_delay() {
    var _0x2992d0 = user['helmet'];
    if (_0x2992d0['wait']) {
        var _0x3bf1fc = _0x2992d0['timeout']['update']();
        ctx['save']();
        var _0x10833e = sprite[SPRITE['DELAY_HELMET']];
        ctx['translate'](_0x10833e['width'] - 0x2 * scale, game['gauges']['translate']['y'] - 0x7d * scale);
        var _0x38fa1d = -_0x10833e['width'] / 0x2 + 0xa,
            _0xbe0b70 = -_0x10833e['height'] / 0x2 - 0x4;
        ctxDrawImage(ctx, _0x10833e, _0x38fa1d, _0xbe0b70), ctx['beginPath'](), ctx['lineWidth'] = 0x5 * scale, ctx['strokeStyle'] = SPRITE['HELMET_LOADING'][world['time']], ctx['lineCap'] = 'round', ctx['arc'](0x9, _0xbe0b70 + _0x10833e['height'] / 0x2, 0x19 * scale, 0x0, Math['PI'] * 0x2 * _0x2992d0['timeout']['v']), ctx['stroke'](), ctx['restore'](), _0x3bf1fc && (_0x2992d0['wait'] = ![], _0x2992d0['timeout']['v'] = 0x0, _0x2992d0['timeout']['o'] = ![]);
    }
}

function draw_weapon_switch_delay() {
    var _0x2cf023 = user['weapon'];
    if (_0x2cf023['wait']) {
        var _0x340dc0 = _0x2cf023['timeout']['update']();
        ctx['save']();
        var _0x5e3753 = sprite[SPRITE['DELAY_WEAPON']];
        ctx['translate'](_0x5e3753['width'] - 0x2 * scale, game['gauges']['translate']['y'] - 0x3c * scale);
        var _0x1c3b82 = -_0x5e3753['width'] / 0x2 - 0x2,
            _0x13cfa2 = -_0x5e3753['height'] / 0x2 - 0x4;
        ctxDrawImage(ctx, _0x5e3753, _0x1c3b82, _0x13cfa2), ctx['beginPath'](), ctx['lineWidth'] = 0x5 * scale, ctx['strokeStyle'] = SPRITE['WEAPON_LOADING'][world['time']], ctx['lineCap'] = 'round', ctx['arc'](0x0, _0x13cfa2 + _0x5e3753['height'] / 0x2, 0x19 * scale, 0x0, Math['PI'] * 0x2 * _0x2cf023['timeout']['v']), ctx['stroke'](), ctx['restore'](), _0x340dc0 && (_0x2cf023['wait'] = ![], _0x2cf023['timeout']['v'] = 0x0, _0x2cf023['timeout']['o'] = ![]);
    }
}

function draw_ui_gear() {
    var _0x1ba6d0 = user['craft'];
    if (_0x1ba6d0['crafting']) {
        var _0x53a9f5 = world['fast_units'][user['uid']];
        ctx['save'](), ctx['translate'](user['cam']['x'] + _0x53a9f5['x'], user['cam']['y'] + _0x53a9f5['y']);
        var _0x2f3c38 = sprite[SPRITE['GEAR']],
            _0x3efa58 = -_0x2f3c38['width'] / 0x2,
            _0x481b7d = -_0x2f3c38['height'] / 0x2 - 0x7d * scale;
        ctxDrawImage(ctx, _0x2f3c38, _0x3efa58, _0x481b7d), ctx['beginPath'](), ctx['lineWidth'] = 0x5 * scale, ctx['strokeStyle'] = SPRITE['CRAFT_LOADING'][world['time']], ctx['lineCap'] = 'round', ctx['arc'](0x0, _0x481b7d + _0x2f3c38['height'] / 0x2, 0x19 * scale, 0x0, Math['PI'] * 0x2 * _0x1ba6d0['timeout']['v']), ctx['stroke'](), ctx['restore']();
    }
}

function draw_ui_crafting() {
    var _0x109a35 = user['craft'];
    if (!_0x109a35['crafting'] && _0x109a35['preview'] > 0x0) {
        var _0x21d397 = world['fast_units'][user['uid']];
        if (!_0x21d397) return;
        ctx['save']();
        if (INV_INFOS[_0x109a35['preview']]['grid'] === 0x0 && _0x109a35['mode'] === 0x0) ctx['translate'](user['cam']['x'] + _0x21d397['x'], user['cam']['y'] + _0x21d397['y']), ctx['rotate'](_0x21d397['angle']), ctx['translate'](0x78, 0x0);
        else {
            var _0x2b46df = Math['floor'](_0x21d397['x'] + Math['cos'](_0x21d397['angle']) * 0x78),
                _0x5e76b7 = Math['floor'](_0x21d397['y'] + Math['sin'](_0x21d397['angle']) * 0x78);
            _0x2b46df = user['cam']['x'] + (_0x2b46df - _0x2b46df % 0x64 + 0x32), _0x5e76b7 = user['cam']['y'] + (_0x5e76b7 - _0x5e76b7 % 0x64 + 0x32), ctx['translate'](_0x2b46df, _0x5e76b7);
        }
        var _0x496488 = sprite[_0x109a35['preview']][world['time']];
        ctx['globalAlpha'] = 0.5, ctxDrawImage(ctx, _0x496488, -_0x496488['width'] / 0x2, -_0x496488['height'] / 0x2), ctx['globalAlpha'] = 0x1, ctx['restore']();
        if (INV_INFOS[_0x109a35['preview']]['grid'] === 0x0) {
            if (!_0x109a35['label'][_0x109a35['mode']]) {
                if (_0x109a35['mode'] === 0x0) _0x109a35['label'][0x0] = create_text(scale, LANG[TEXT['MODE_FREE']], 0x14, '#e2c340');
                else _0x109a35['label'][0x1] = create_text(scale, LANG[TEXT['MODE_GRID']], 0x14, '#e2c340');
            }
            var _0x496488 = _0x109a35['label'][_0x109a35['mode']];
            ctxDrawImage(ctx, _0x496488, canw2 + -_0x496488['width'] / 0x2, game['gauges']['y'] - 0x1a);
        }
    }
    if (_0x109a35['crafting']) {
        var _0x37b682 = _0x109a35['timeout']['update']();
        for (var _0x390117 = 0x0; _0x390117 < _0x109a35['can_craft']['length']; _0x390117++) {
            var _0x53aa87 = _0x109a35['can_craft'][_0x390117];
            if (_0x109a35['id'] == _0x53aa87['id']) {
                var _0x2263d5 = scale * 0x2a,
                    _0x52406 = scale * 0x11;
                round_rect(ctx, _0x53aa87['info']['translate']['x'], _0x53aa87['info']['translate']['y'] + _0x2263d5 * (0x1 - _0x109a35['timeout']['v']), _0x53aa87['info']['width'], _0x2263d5 * _0x109a35['timeout']['v'] + _0x52406, scale * 0xa), ctx['fillStyle'] = '#55B973', ctx['fill'](), ctx['globalAlpha'] = 0.8, _0x53aa87['draw'](ctx);
            } else ctx['globalAlpha'] = 0.5, _0x53aa87['draw'](ctx);
            ctx['globalAlpha'] = 0x1;
        }
        return _0x37b682 && (_0x109a35['crafting'] = ![], _0x109a35['timeout']['v'] = 0x0, _0x109a35['timeout']['o'] = ![]), !![];
    } else {
        for (var _0x390117 = 0x0; _0x390117 < _0x109a35['can_craft']['length']; _0x390117++) _0x109a35['can_craft'][_0x390117]['draw'](ctx);
    }
    return ![];
}

function draw_ui_chat() {
    var _0x110da5 = world['units'][ITEMS['PLAYERS']];
    if (world['mode'] === WORLD['MODE_PVP'] || world['mode'] === WORLD['MODE_EXPERIMENTAL'] || world['mode'] === WORLD['MODE_ZOMBIES'] || world['mode'] === WORLD['MODE_LEGACY'] || world['mode'] === WORLD['MODE_BR'] || world['mode'] === WORLD['MODE_VAMPIRES'])
        for (var _0x47681d = 0x0; _0x47681d < _0x110da5['length']; _0x47681d++) {
            _0x110da5[_0x47681d]['draw_text']();
        } else {
            if (world['mode'] === WORLD['MODE_HUNGER_GAMES'])
                for (var _0x47681d = 0x0; _0x47681d < _0x110da5['length']; _0x47681d++) {
                    if (user['spectator'] || user['show_spectators']['enabled']) _0x110da5[_0x47681d]['draw_text']();
                    else {
                        if (_0x110da5[_0x47681d]['player']['nickname'] !== 'spectator') _0x110da5[_0x47681d]['draw_text']();
                    }
                }
        }
}

function draw_ui_inventory() {
    var _0x2cb9cc = user['inv'],
        _0x32b22c = world['fast_units'][user['uid']];
    for (var _0x290d81 = 0x0; _0x290d81 < _0x2cb9cc['can_select']['length']; _0x290d81++) {
        var _0x5e6664 = _0x2cb9cc['can_select'][_0x290d81],
            _0x1b4b49 = ![],
            _0x32b22c = world['fast_units'][user['uid']];
        if (_0x32b22c && (_0x32b22c['right'] == _0x5e6664['id'] || _0x32b22c['clothe'] == _0x5e6664['id'] && _0x32b22c['clothe'] > 0x0)) _0x1b4b49 = !![], ctxDrawImage(ctx, _0x5e6664['info']['img'][0x2], _0x5e6664['info']['translate']['x'], _0x5e6664['info']['translate']['y'], _0x5e6664['info']['width'], _0x5e6664['info']['height']);
        else _0x5e6664['draw'](ctx);
        var _0x5a72c7 = user['inv']['n'][_0x5e6664['id']];
        if (_0x5a72c7 > 0x1) draw_amount(_0x5a72c7, _0x5e6664);
        if (_0x5a72c7 > 0x0) draw_slot_number(_0x290d81, _0x5e6664, _0x1b4b49);
        var _0x35edf0 = user['chest'];
        if (_0x35edf0['open'] && (_0x35edf0['id'] < 0x0 || _0x35edf0['id'] == _0x5e6664['id']) && (!_0x35edf0['lock'] || _0x35edf0['pid'] == user['id'])) game['plus_buttons'][_0x5e6664['id']]['draw'](ctx);
        var _0x1ef5b5 = user['furnace'];
        if (_0x1ef5b5['open'] && INV['WOOD'] == _0x5e6664['id']) game['plus_buttons'][_0x5e6664['id']]['draw'](ctx);
        var _0x366a32 = user['well'];
        if (_0x366a32['open'] && INV['BUCKET_FULL'] == _0x5e6664['id']) game['plus_buttons'][_0x5e6664['id']]['draw'](ctx);
        var _0x24098d = user['windmill'];
        if (_0x24098d['open'] && INV['WILD_WHEAT'] == _0x5e6664['id']) game['plus_buttons'][_0x5e6664['id']]['draw'](ctx);
        var _0x3d762c = user['extractor'];
        if (_0x3d762c['open'] && INV['WOOD'] == _0x5e6664['id']) game['plus_buttons'][_0x5e6664['id']]['draw'](ctx);
        var _0x4f626b = user['bread_oven'];
        if (_0x4f626b['open'] && (INV['WOOD'] == _0x5e6664['id'] || INV['FLOUR'] == _0x5e6664['id'])) game['plus_buttons'][_0x5e6664['id']]['draw'](ctx);
    }
    if (_0x5e6664 && _0x290d81 < _0x2cb9cc['max']) {
        var _0x5eaa2c = sprite[SPRITE['EMPTY_SLOT']][0x2];
        x = _0x5e6664['info']['translate']['x'], y = _0x5e6664['info']['translate']['y'];
        for (j = 0x1; _0x290d81 < _0x2cb9cc['max']; _0x290d81++, j++) ctxDrawImage(ctx, _0x5eaa2c, x + j * (_0x5eaa2c['width'] + 0x5), y);
    }
}

function draw_gauges() {
    ctx['save']();
    var _0x32484b = scale;
    if (user['gauges']['life']['x'] < 0.25) ctx['globalAlpha'] = user['gauges']['warn_life']['v'];
    var _0x3deeae = user['inv']['can_select']['length'] > 0x0 ? -0x46 : 0x0;
    if (user['chest']['open'] || user['furnace']['open'] && -0x1 != user['inv']['find_item'](INV['WOOD']) || user['windmill']['open'] && -0x1 != user['inv']['find_item'](INV['WILD_WHEAT']) || user['extractor']['open'] && -0x1 != user['inv']['find_item'](INV['WOOD']) || user['well']['open'] && -0x1 != user['inv']['find_item'](INV['BUCKET_FULL']) || user['bread_oven']['open'] && (-0x1 != user['inv']['find_item'](INV['WOOD']) || -0x1 != user['inv']['find_item'](INV['FLOUR']))) _0x3deeae -= 0x32 * scale;
    ctx['translate']((canw - 0x3b6 * scale) / 0x2, _0x3deeae), ctx['fillStyle'] = '#69A148', ctx['fillRect'](this['translate']['x'] + 0x25 * scale, this['translate']['y'] + 0x11 * scale, user['gauges']['life']['x'] * 0xb2 * scale, 0x12 * scale), ctx['globalAlpha'] = 0x1;
    user['gauges']['hunger']['x'] < 0.35 && (ctx['fillStyle'] = '#8F050A', ctx['globalAlpha'] = user['gauges']['warn_hunger']['v'], ctx['fillRect'](this['translate']['x'] + 0x115 * scale, this['translate']['y'] + 0x11 * scale, 0xb2 * scale, 0x12 * scale), ctx['globalAlpha'] = 0x1);
    ctx['fillStyle'] = '#AF352A', ctx['fillRect'](this['translate']['x'] + 0x115 * scale, this['translate']['y'] + 0x11 * scale, user['gauges']['hunger']['x'] * 0xb2 * scale, 0x12 * scale);
    user['gauges']['cold']['x'] < 0.35 && (ctx['fillStyle'] = '#366B91', ctx['globalAlpha'] = user['gauges']['warn_cold']['v'], ctx['fillRect'](this['translate']['x'] + 0x205 * scale, this['translate']['y'] + 0x11 * scale, 0xb2 * scale, 0x12 * scale), ctx['globalAlpha'] = 0x1);
    ctx['fillStyle'] = '#669BB1', ctx['fillRect'](this['translate']['x'] + 0x205 * scale, this['translate']['y'] + 0x11 * scale, user['gauges']['cold']['x'] * 0xb2 * scale, 0x12 * scale);
    Settings['Timer'] && (ctx['save'](), ctx['font'] = '34px\x20Baloo\x20Paaji', ctx['strokeStyle'] = 'black', ctx['lineWidth'] = 0x7, ctx['strokeText'](Math['floor'](0x64 * user['gauges']['thirst']['x']) + '%', this['translate']['x'] + 0x320 * scale, this['translate']['y'] + 0x0 * scale), ctx['strokeText'](0x1 === user['gauges']['cold']['x'] ? 0xc8 - Math['floor'](0x64 * user['gauges']['warm']['x']) + '%' : Math['floor'](0x64 * user['gauges']['cold']['x']) + '%', this['translate']['x'] + 0x258 * scale, this['translate']['y'] + 0x0 * scale), ctx['strokeText'](Math['floor'](0x64 * user['gauges']['hunger']['x']) + '%', this['translate']['x'] + 0x15e * scale, this['translate']['y'] + 0x0 * scale), ctx['strokeText'](Math['floor'](user['gauges']['life']['x'] * 0xc8) + 'hp', this['translate']['x'] - 0x50 * scale, this['translate']['y'] + 0x23 * scale), ctx['strokeText'](Math['floor'](0xb - (Date['now']() - TimerTools['HPTimer']) / 0x3e8) + 's', this['translate']['x'] + 0xd8 * scale, this['translate']['y'] + 0x23 * scale), ctx['strokeText'](Math['floor'](0x6 - (Date['now']() - TimerTools['GaugeTimer']) / 0x3e8) + 's', this['translate']['x'] + 0x1cc * scale, this['translate']['y'] + 0x23 * scale), (ctx['fillStyle'] = 'red', ctx['fillText'](Math['floor'](0x64 * user['gauges']['thirst']['x']) + '%', this['translate']['x'] + 0x320 * scale, this['translate']['y'] + 0x0 * scale)), ctx['fillText'](0x1 === user['gauges']['cold']['x'] ? 0xc8 - Math['floor'](0x64 * user['gauges']['warm']['x']) + '%' : Math['floor'](0x64 * user['gauges']['cold']['x']) + '%', this['translate']['x'] + 0x258 * scale, this['translate']['y'] + 0x0 * scale), ctx['fillText'](Math['floor'](0x64 * user['gauges']['hunger']['x']) + '%', this['translate']['x'] + 0x15e * scale, this['translate']['y'] + 0x0 * scale), ctx['fillText'](Math['floor'](user['gauges']['life']['x'] * 0xc8) + 'hp', this['translate']['x'] - 0x50 * scale, this['translate']['y'] + 0x23 * scale), ctx['fillText'](Math['floor'](0xb - (Date['now']() - TimerTools['HPTimer']) / 0x3e8) + 's', this['translate']['x'] + 0xd8 * scale, this['translate']['y'] + 0x23 * scale), ctx['fillText'](Math['floor'](0x6 - (Date['now']() - TimerTools['GaugeTimer']) / 0x3e8) + 's', this['translate']['x'] + 0x1cc * scale, this['translate']['y'] + 0x23 * scale), ctx['restore']());
    user['gauges']['cold']['x'] > 0.99 && (user['gauges']['warm']['x'] < 0.35 && (ctx['fillStyle'] = '#6C4036', ctx['globalAlpha'] = user['gauges']['warn_warm']['v'], ctx['fillRect'](this['translate']['x'] + 0x205 * scale, this['translate']['y'] + 0x11 * scale, 0xb2 * scale, 0x12 * scale), ctx['globalAlpha'] = 0x1), ctx['fillStyle'] = '#9C4036', ctx['fillRect'](this['translate']['x'] + 0x205 * scale, this['translate']['y'] + 0x11 * scale, (0x1 - user['gauges']['warm']['x']) * 0xb2 * scale, 0x12 * scale));
    user['gauges']['thirst']['x'] < 0.35 && (ctx['fillStyle'] = '#001A57', ctx['globalAlpha'] = user['gauges']['warn_thirst']['v'], ctx['fillRect'](this['translate']['x'] + 0x2f5 * scale, this['translate']['y'] + 0x11 * scale, 0xb2 * scale, 0x12 * scale), ctx['globalAlpha'] = 0x1);
    ctx['fillStyle'] = '#074A87', ctx['fillRect'](this['translate']['x'] + 0x2f5 * scale, this['translate']['y'] + 0x11 * scale, user['gauges']['thirst']['x'] * 0xb2 * scale, 0x12 * scale), scale = _0x32484b, ctxDrawImage(ctx, this['img'], this['translate']['x'], this['translate']['y']), this['y'] = this['translate']['y'] + _0x3deeae, ctx['restore']();
    if (user['gauges']['oxygen']['x'] < 0.99) {
        var _0x34ae70 = Math['floor'](canw2 - sprite[SPRITE['OXYGEN']]['width'] / 0x2);
        _0x3deeae += this['translate']['y'] - sprite[SPRITE['OXYGEN']]['height'] - 0x5 * scale, ctx['fillStyle'] = '#BBE8EF', ctx['fillRect'](_0x34ae70 + 0x5, _0x3deeae + 0x5 * scale, 0x24c * scale * user['gauges']['oxygen']['x'], 0xa * scale), user['gauges']['oxygen']['x'] < 0.35 && (ctx['fillStyle'] = '#9BA8AF', ctx['globalAlpha'] = user['gauges']['warn_oxygen']['v'], ctx['fillRect'](_0x34ae70 + 0x5, _0x3deeae + 0x5, 0x24c * scale, 0xa * scale), ctx['globalAlpha'] = 0x1), ctxDrawImage(ctx, sprite[SPRITE['OXYGEN']], _0x34ae70, _0x3deeae), this['y'] = _0x3deeae;
    }
}

function draw_door(_0xca2f93) {
    ctx['save'](), ctx['translate'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']), ctx['rotate'](this['angle']);
    if (this['hit']['update']) {
        if (this['hit']['anim']['update']() && this['hit']['anim']['o'] == ![]) this['hit']['update'] = ![];
        var _0xddc986 = (0x1 - this['hit']['anim']['v']) * delta * 0x258 * scale,
            _0x1fe610 = Math['cos'](this['hit']['angle'] - this['angle']) * _0xddc986,
            _0x1bf449 = Math['sin'](this['hit']['angle'] - this['angle']) * _0xddc986;
    } else var _0x1fe610 = 0x0,
        _0x1bf449 = 0x0;;
    var _0x360cc2 = sprite[_0xca2f93][world['time']];
    w = -_0x360cc2['width'], h = -_0x360cc2['height'], ctxDrawImage(ctx, _0x360cc2, -w / 0x2 + _0x1fe610, -h / 0x2 + _0x1bf449, w, h), ctx['restore']();
}

function draw_chest() {
    ctx['save'](), ctx['translate'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']), ctx['rotate'](this['angle']);
    if (this['hit']['update']) {
        if (this['hit']['anim']['update']() && this['hit']['anim']['o'] == ![]) this['hit']['update'] = ![];
        var _0x2357f5 = (0x1 - this['hit']['anim']['v']) * delta * 0x258 * scale,
            _0x1c6555 = Math['cos'](this['hit']['angle'] - this['angle']) * _0x2357f5,
            _0x2eb7d4 = Math['sin'](this['hit']['angle'] - this['angle']) * _0x2357f5;
    } else var _0x1c6555 = 0x0,
        _0x2eb7d4 = 0x0;;
    img = this['lock'] ? sprite[SPRITE['CHEST']][0x2] : sprite[SPRITE['CHEST']][world['time']], w = -img['width'], h = -img['height'], ctxDrawImage(ctx, img, -w / 0x2 + _0x1c6555, -h / 0x2 + _0x2eb7d4, w, h), ctx['restore']();
    this['action'] && (ctx['save'](), ctx['globalAlpha'] = 0.9, ctxDrawImage(ctx, game['chest_buttons'][this['action'] / 0x2 - 0x1]['info']['img'][0x0], user['cam']['x'] + this['x'] + 0x19, user['cam']['y'] + this['y'] + 0xf, w + 0x19, h + 0x19), ctx['globalAlpha'] = 0x1, ctx['font'] = '20px\x20Baloo\x20Paaji', ctx['strokeStyle'] = 'black', ctx['lineWidth'] = 0x7, ctx['strokeText'](this['action'] / 0x2 - 0x1, user['cam']['x'] + this['x'] - 0x20, user['cam']['y'] + this['y'] - 0xc), ctx['strokeText']('x' + this['info'], user['cam']['x'] + this['x'] - 0x20, user['cam']['y'] + this['y'] + 0x14), ctx['fillStyle'] = 'white', ctx['fillText'](this['action'] / 0x2 - 0x1, user['cam']['x'] + this['x'] - 0x20, user['cam']['y'] + this['y'] - 0xc), ctx['fillText']('x' + this['info'], user['cam']['x'] + this['x'] - 0x20, user['cam']['y'] + this['y'] + 0x14), ctx['restore']());;
    this['steal'] && (ctx['save'](), ctx['fillStyle'] = 'white', ctx['beginPath'](), ctx['arc'](this['x'] + user['cam']['x'], this['y'] + user['cam']['y'], 0x7, 0x0, 0x2 * Math['PI']), ctx['fill'](), ctx['restore']());;
}

function draw_thornbush_seed() {
    ctx['save'](), ctx['translate'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']), ctx['rotate'](this['angle']), img = sprite[SPRITE['THORNBUSH_SEED_MOB']][world['time']], w = -img['width'], h = -img['height'], ctxDrawImage(ctx, img, -w / 0x2, -h / 0x2, w, h), ctx['restore']();
}

function draw_garlic_seed() {
    ctx['save'](), ctx['translate'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']), ctx['rotate'](this['angle']), img = sprite[SPRITE['GARLIC_SEED_MOB']][world['time']], w = -img['width'], h = -img['height'], ctxDrawImage(ctx, img, -w / 0x2, -h / 0x2, w, h), ctx['restore']();
}

function draw_pumpkin_seed() {
    ctx['save'](), ctx['translate'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']), ctx['rotate'](this['angle']), img = sprite[SPRITE['PUMPKIN_SEED_MOB']][world['time']], w = -img['width'], h = -img['height'], ctxDrawImage(ctx, img, -w / 0x2, -h / 0x2, w, h), ctx['restore']();
}

function draw_aloe_vera_mob() {
    ctx['save'](), ctx['translate'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']), ctx['rotate'](this['angle']), img = sprite[SPRITE['ALOE_VERA']][world['time']], w = -img['width'], h = -img['height'], ctxDrawImage(ctx, img, -w / 0x2, -h / 0x2, w, h), ctx['restore']();
}

function draw_wheat_seed() {
    ctx['save'](), ctx['translate'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']), ctx['rotate'](this['angle']), img = sprite[SPRITE['WHEAT_MOB']][world['time']], w = -img['width'], h = -img['height'], ctxDrawImage(ctx, img, -w / 0x2, -h / 0x2, w, h), ctx['restore']();
}

function draw_life_small(_0x4cb2cc) {
    var _0x4cb2cc = _0x4cb2cc / 0x64;
    if (_0x4cb2cc > 0.8) return;
    ctx['save'](), ctx['translate'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']), ctx['rotate'](this['angle']);
    if (this['hit']['update']) {
        if (this['hit']['anim']['update']() && this['hit']['anim']['o'] == ![]) this['hit']['update'] = ![];
        var _0x7b2196 = (0x1 - this['hit']['anim']['v']) * delta * 0x258 * scale,
            _0xc55c = Math['cos'](this['hit']['angle'] - this['angle']) * _0x7b2196,
            _0x97b99b = Math['sin'](this['hit']['angle'] - this['angle']) * _0x7b2196;
    } else var _0xc55c = 0x0,
        _0x97b99b = 0x0;;
    ctx['globalAlpha'] = 0.5, circle_angle(ctx, _0xc55c, _0x97b99b, 0x12 * scale, _0x4cb2cc), fill_path(ctx, null, '#000000', 0x12 * scale), ctx['globalAlpha'] = 0x1, circle_angle(ctx, _0xc55c, _0x97b99b, 0x12 * scale, _0x4cb2cc), fill_path(ctx, null, SPRITE['BROWN_LIFE'][world['time']], 0x6 * scale), ctx['restore']();
}

function draw_life(_0x391523) {
    var _0x391523 = _0x391523 / 0x64;
    if (_0x391523 > 0.95) return;
    ctx['save'](), ctx['translate'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']), ctx['rotate'](this['angle']);
    if (this['hit']['update']) {
        if (this['hit']['anim']['update']() && this['hit']['anim']['o'] == ![]) this['hit']['update'] = ![];
        var _0x336f95 = (0x1 - this['hit']['anim']['v']) * delta * 0x258 * scale,
            _0x5119ce = Math['cos'](this['hit']['angle'] - this['angle']) * _0x336f95,
            _0x51dfc0 = Math['sin'](this['hit']['angle'] - this['angle']) * _0x336f95;
    } else var _0x5119ce = 0x0,
        _0x51dfc0 = 0x0;;
    ctx['globalAlpha'] = 0.5, circle_angle(ctx, _0x5119ce, _0x51dfc0, 0x1c * scale, _0x391523), fill_path(ctx, null, '#000000', 0x12 * scale), ctx['globalAlpha'] = 0x1, circle_angle(ctx, _0x5119ce, _0x51dfc0, 0x1c * scale, _0x391523), fill_path(ctx, null, SPRITE['CRAFT_LOADING'][world['time']], 0x6 * scale), ctx['restore']();
}

function draw_roof(_0x26630b) {
    ctx['save'](), ctx['translate'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']), ctx['rotate'](this['angle']);
    if (this['hit']['update']) {
        if (this['hit']['anim']['update']() && this['hit']['anim']['o'] == ![]) this['hit']['update'] = ![];
        var _0x1f9869 = (0x1 - this['hit']['anim']['v']) * delta * 0x258 * scale,
            _0x5e4074 = Math['cos'](this['hit']['angle'] - this['angle']) * _0x1f9869,
            _0xa889d7 = Math['sin'](this['hit']['angle'] - this['angle']) * _0x1f9869;
    } else var _0x5e4074 = 0x0,
        _0xa889d7 = 0x0;;
    var _0x4b7a9e = sprite[SPRITE['ROOFS']]['length'];
    img = sprite[SPRITE['ROOFS']][(this['j'] + this['i'] % 0x2) % _0x4b7a9e][world['time']], w = -img['width'], h = -img['height'];
    var _0x6debe = world['fast_units'][user['uid']];
    ctx['globalAlpha'] = 0.3, ctxDrawImage(ctx, img, -w / 0x2 + _0x5e4074, -h / 0x2 + _0xa889d7, w, h), ctx['globalAlpha'] = 0x1, ctx['restore']();
}

function draw_garland(_0x1c3ff4) {
    ctx['save'](), ctx['translate'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']), ctx['rotate'](this['angle']);
    if (this['hit']['update']) {
        if (this['hit']['anim']['update']() && this['hit']['anim']['o'] == ![]) this['hit']['update'] = ![];
        var _0x3c9360 = (0x1 - this['hit']['anim']['v']) * delta * 0x258 * scale,
            _0x4cb66d = Math['cos'](this['hit']['angle'] - this['angle']) * _0x3c9360,
            _0x5379b4 = Math['sin'](this['hit']['angle'] - this['angle']) * _0x3c9360;
    } else var _0x4cb66d = 0x0,
        _0x5379b4 = 0x0;;
    if (this['halo']['update']()) this['color'] += 0.2 + Math['random']() * 0.3;
    img = sprite[SPRITE['GARLANDS']][Math['floor'](this['id'] + this['color']) % 0x5][world['time']], w = -img['width'] * this['halo']['v'], h = -img['height'] * this['halo']['v'], ctxDrawImage(ctx, img, -w / 0x2 + _0x4cb66d, -h / 0x2 + _0x5379b4, w, h), ctx['restore']();
}

function draw_bed(_0x1fff46) {
    ctx['save'](), ctx['translate'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']), ctx['rotate'](this['angle']);
    if (this['hit']['update']) {
        if (this['hit']['anim']['update']() && this['hit']['anim']['o'] == ![]) this['hit']['update'] = ![];
        var _0x2bde90 = (0x1 - this['hit']['anim']['v']) * delta * 0x258 * scale,
            _0x5c5923 = Math['cos'](this['hit']['angle'] - this['angle']) * _0x2bde90,
            _0x257961 = Math['sin'](this['hit']['angle'] - this['angle']) * _0x2bde90;
    } else var _0x5c5923 = 0x0,
        _0x257961 = 0x0;;
    if (_0x1fff46 === SPRITE['BED_TOP'] && !world['transition']) {
        var _0x35a9a0 = 0x0,
            _0x12a46e = world['units'][ITEMS['PLAYERS']];
        for (var _0xeb946 = 0x0; _0xeb946 < _0x12a46e['length']; _0xeb946++) {
            var _0x47677b = Utils['dist'](_0x12a46e[_0xeb946], this);
            if (_0x47677b < 0x8c && _0x47677b > 0x23) {
                _0x35a9a0 = 0x0;
                break;
            } else {
                if (_0x47677b <= 0x23) _0x35a9a0 = 0x1;
            }
        }
        if (_0x35a9a0 === 0x0) this['opacity'] = Math['max'](0.5, this['opacity'] - delta / 1.5);
        else this['opacity'] = Math['min'](0x1, this['opacity'] + delta / 1.5);
        ctx['globalAlpha'] = this['opacity'];
    }
    img = sprite[_0x1fff46][world['time']], w = -img['width'], h = -img['height'], ctxDrawImage(ctx, img, -w / 0x2 + _0x5c5923, -h / 0x2 + _0x257961, w, h), ctx['globalAlpha'] = 0x1, ctx['restore']();
}

function draw_simple_item(_0x19ecf7) {
    ctx['save'](), ctx['translate'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']), ctx['rotate'](this['angle']);
    if (this['hit']['update']) {
        if (this['hit']['anim']['update']() && this['hit']['anim']['o'] == ![]) this['hit']['update'] = ![];
        var _0x32e610 = (0x1 - this['hit']['anim']['v']) * delta * 0x258 * scale,
            _0x14f02e = Math['cos'](this['hit']['angle'] - this['angle']) * _0x32e610,
            _0x3460a9 = Math['sin'](this['hit']['angle'] - this['angle']) * _0x32e610;
    } else var _0x14f02e = 0x0,
        _0x3460a9 = 0x0;;
    img = sprite[_0x19ecf7][world['time']], w = -img['width'], h = -img['height'], ctxDrawImage(ctx, img, -w / 0x2 + _0x14f02e, -h / 0x2 + _0x3460a9, w, h), ctx['restore']();
}
var __wave = 0x0;

function draw_river_tile(_0x2fa594, _0x42c917, _0x3ad9c6, _0xbc8cfe, _0x401567, _0x46109d, _0x29b311, _0x146a28, _0x9226d9) {
    if (_0x146a28 === undefined) _0x146a28 = 0x0;
    for (var _0x37af94 = _0x2fa594; _0x37af94 <= _0x42c917; _0x37af94++) {
        for (var _0x2d28ad = _0x3ad9c6; _0x2d28ad <= _0xbc8cfe; _0x2d28ad++) {
            var _0x4ba0bc = MAP['tiles'][_0x37af94][_0x2d28ad];
            if (_0x4ba0bc === undefined || _0x4ba0bc[_0x46109d] === undefined) continue;
            var _0x5473c4 = _0x4ba0bc[_0x46109d],
                _0x21554c = sprite[_0x401567][world['time']][_0x5473c4['river']];
            ctxDrawImage(ctx, _0x21554c, user['cam']['x'] + _0x5473c4['x'] - _0x21554c['width'] / (0x4 * _scale_object), user['cam']['y'] + _0x5473c4['y'] - _0x21554c['height'] / (0x4 * _scale_object), _0x21554c['width'] / (0x2 * _scale_object), _0x21554c['height'] / (0x2 * _scale_object));
            if (ui['quality']) {
                var _0x3ea052 = 0x80000000,
                    _0x305ed6 = 0x41c64e6d,
                    _0x2c8e1b = 0x3039,
                    _0x4d341b = (_0x305ed6 * (_0x37af94 * 0x3e8 + _0x2d28ad) + _0x2c8e1b) % _0x3ea052 / _0x3ea052;
                if (_0x4d341b < 0.2) {
                    _0x4d341b = Math['floor'](sprite[SPRITE['RIVER_DECO']][world['time']][_0x5473c4['river']]['length'] * (_0x4d341b * 0x5));
                    var _0x21554c = sprite[SPRITE['RIVER_DECO']][world['time']][_0x5473c4['river']][_0x4d341b];
                    ctxDrawImage(ctx, _0x21554c, user['cam']['x'] + _0x5473c4['x'] - _0x21554c['width'] / (0x4 * _scale_object), user['cam']['y'] + _0x5473c4['y'] - _0x21554c['height'] / (0x4 * _scale_object), _0x21554c['width'] / (0x2 * _scale_object), _0x21554c['height'] / (0x2 * _scale_object));
                } else {
                    if (_0x5473c4['current'] !== 0x0) {
                        var _0x21554c = sprite[SPRITE['RIVER_WAVE']][world['time']],
                            _0x1e6730 = (__wave + _0x37af94 % 0x2 * 0x1e) % 0x3c;
                        ctx['globalAlpha'] = _0x1e6730 < 0x1e ? _0x1e6730 / 0x1e : 0x1 - (_0x1e6730 - 0x1e) / 0x1e, ctxDrawImage(ctx, _0x21554c, user['cam']['x'] + _0x5473c4['x'] - _0x21554c['width'] / (0x4 * _scale_object), user['cam']['y'] + _0x5473c4['y'] - _0x21554c['height'] / (0x4 * _scale_object) - 0x1e + _0x1e6730, _0x21554c['width'] / (0x2 * _scale_object), _0x21554c['height'] / (0x2 * _scale_object)), ctx['globalAlpha'] = 0x1;
                    }
                }
            }
        }
    }
};

function draw_sand_worm_ground() {
    if ((this['info'] & 0x1) === 0x1) this['dig'] = Math['min'](this['dig'] + delta, 2.2);
    else {
        this['dig'] = Math['max'](this['dig'] - delta, 0x0), this['groundTimer'] += delta;
        if (this['groundTimer'] > 0.1) {
            this['groundTimer'] = 0x0;
            var _0x5df2d8 = {
                'x': this['x'] + Math['random']() * 0x3c - 0x1e,
                'y': this['y'] + Math['random']() * 0x3c - 0x1e,
                'a': 0x0,
                'r': Math['random']() * 0x1e + 0x1e
            };
            this['ground']['push'](_0x5df2d8);
        }
    }
    for (var _0x3b4e1d = 0x0; _0x3b4e1d < this['ground']['length']; _0x3b4e1d++) {
        var _0x5df2d8 = this['ground'][_0x3b4e1d];
        ctx['save'](), ctx['translate'](user['cam']['x'] + _0x5df2d8['x'], user['cam']['y'] + _0x5df2d8['y']), _0x5df2d8['a'] = Math['min'](0x1, _0x5df2d8['a'] + delta / 0x2);
        var _0x1e747b = _0x5df2d8['a'];
        if (_0x1e747b < 0.2) _0x1e747b *= 0x5;
        else {
            if (_0x1e747b > 0.8) _0x1e747b = (0x1 - _0x1e747b) * 0x5;
            else _0x1e747b = 0x1;
        }
        ctx['globalAlpha'] = _0x1e747b * 0.8, circle(ctx, 0x0, 0x0, _0x5df2d8['r']), fill_path(ctx, SPRITE['SAND_WORM_GROUND'][world['time']]), ctx['restore'](), _0x5df2d8['a'] === 0x1 && (this['ground']['splice'](_0x3b4e1d, 0x1), _0x3b4e1d--);
    };
};

function draw_sand_worm() {
    var _0x1f05d7 = undefined,
        _0x74a3ce = undefined;
    ctx['save'](), ctx['translate'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']), ctx['rotate'](this['angle']), this['breath']['update'](), this['rotate']['update']();
    if (this['dig'] >= 0.1 && this['dig'] <= 1.1) {
        var _0x3e1256 = Math['max'](0x0, Math['min'](0x1, this['dig'] - 0.1));
        if (_0x3e1256 < 0.2) _0x3e1256 *= 0x5;
        else {
            if (_0x3e1256 > 0.8) _0x3e1256 = (0x1 - _0x3e1256) * 0x5;
            else _0x3e1256 = 0x1;
        }
        var _0x1f05d7 = sprite[SPRITE['SAND_WORM1']][world['time']];
        w = -_0x1f05d7['width'] * this['breath']['v'], h = -_0x1f05d7['height'] * this['breath']['v'], ctx['globalAlpha'] = _0x3e1256, ctxDrawImage(ctx, _0x1f05d7, -w / 0x4, -h / 0x4, w / 0x2, h / 0x2);
        var _0x74a3ce = sprite[SPRITE['HURT_SAND_WORM1']];
    }
    if (this['dig'] >= 0.9) {
        var _0x3e1256 = Math['max'](0x0, Math['min'](0x1, this['dig'] - 0.9));
        if (_0x3e1256 < 0.2) _0x3e1256 *= 0x5;
        else _0x3e1256 = 0x1;
        var _0x1f05d7 = sprite[SPRITE['SAND_WORM2']][world['time']];
        w = -_0x1f05d7['width'] * this['breath']['v'], h = -_0x1f05d7['height'] * this['breath']['v'], ctx['globalAlpha'] = _0x3e1256, ctxDrawImage(ctx, _0x1f05d7, -w / 0x4, -h / 0x4, w / 0x2, h / 0x2);
        var _0x74a3ce = sprite[SPRITE['HURT_SAND_WORM2']];
    }
    if (this['action'] & STATE['HURT'] && _0x74a3ce !== undefined) {
        if (this['hit']['update']() && this['hit']['o'] == ![]) this['action'] -= STATE['HURT'];
        ctx['globalAlpha'] = (0.6 - this['hit']['v']) * _0x3e1256, w = -_0x74a3ce['width'] * this['breath']['v'], h = -_0x74a3ce['height'] * this['breath']['v'], ctxDrawImage(ctx, _0x74a3ce, -w / 0x4, -h / 0x4, w / 0x2, h / 0x2);
    }
    ctx['globalAlpha'] = 0x1, ctx['restore']();
    if (Settings['Moves']) {
        (this['x'] != this['r']['x'] || this['y'] != this['r']['y']) && (ctx['beginPath'](), ctx['lineWidth'] = 3.5, ctx['moveTo'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']), ctx['lineTo'](user['cam']['x'] + this['r']['x'], user['cam']['y'] + this['r']['y']), ctx['strokeStyle'] = 'red', ctx['stroke']());;
    }
};

function draw_vulture() {
    ctx['save'](), ctx['translate'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']), ctx['rotate'](this['angle']);
    var _0x592315 = Utils['dist'](this, this['r']);
    if (_0x592315 > 0x15e) this['scale'] = Math['min'](this['scale'] + delta / 0x2, 1.8);
    else this['scale'] = Math['max'](this['scale'] - delta, 0x1);
    this['breath']['update'](), this['rotate']['update']();
    if (_0x592315 < 0x15e) this['_alpha'] = Math['max'](0x0, this['_alpha'] - delta * 2.2);
    else this['_alpha'] = Math['min'](0x1, this['_alpha'] + delta * 2.2);
    _0x57c2c8 = sprite[SPRITE['VULTURE_GROUND_ATTACK']][world['time']], w = -_0x57c2c8['width'] * this['breath']['v'] * this['scale'], h = -_0x57c2c8['height'] * this['breath']['v'] * this['scale'], ctx['globalAlpha'] = 0x1 - this['_alpha'], ctxDrawImage(ctx, _0x57c2c8, -w / 0x4, -h / 0x4, w / 0x2, h / 0x2), _0x57c2c8 = sprite[SPRITE['VULTURE_ATTACK']][world['time']], w = -_0x57c2c8['width'] * this['breath']['v'] * this['scale'], h = -_0x57c2c8['height'] * this['breath']['v'] * this['scale'], ctx['globalAlpha'] = this['_alpha'], ctxDrawImage(ctx, _0x57c2c8, -w / 0x4, -h / 0x4, w / 0x2, h / 0x2);
    if (this['action'] & STATE['HURT']) {
        if (this['hit']['update']() && this['hit']['o'] == ![]) this['action'] -= STATE['HURT'];
        ctx['globalAlpha'] = (0.6 - this['hit']['v']) * (0x1 - this['_alpha']);
        var _0x57c2c8 = sprite[SPRITE['HURT_VULTURE_GROUND']];
        w = -_0x57c2c8['width'] * this['breath']['v'] * this['scale'], h = -_0x57c2c8['height'] * this['breath']['v'] * this['scale'], ctxDrawImage(ctx, _0x57c2c8, -w / 0x4, -h / 0x4, w / 0x2, h / 0x2), ctx['globalAlpha'] = (0.6 - this['hit']['v']) * this['_alpha'];
        var _0x57c2c8 = sprite[SPRITE['HURT_VULTURE']];
        w = -_0x57c2c8['width'] * this['breath']['v'] * this['scale'], h = -_0x57c2c8['height'] * this['breath']['v'] * this['scale'], ctxDrawImage(ctx, _0x57c2c8, -w / 0x4, -h / 0x4, w / 0x2, h / 0x2), ctx['globalAlpha'] = 0x1;
    }
    _0x57c2c8 = sprite[SPRITE['VULTURE_WING_LEFT_ATTACK']][world['time']], w = -_0x57c2c8['width'] * this['breath']['v'] * this['scale'], h = -_0x57c2c8['height'] * this['breath']['v'] * this['scale'], ctx['save'](), ctx['translate'](-0x28 * scale, 0x50 * scale), ctx['rotate'](this['rotate']['v']), ctx['globalAlpha'] = this['_alpha'], ctxDrawImage(ctx, _0x57c2c8, -w * scale / 0x4, -h * scale / 0x4, w / 0x2, h / 0x2);
    if (this['action'] & STATE['HURT']) {
        ctx['globalAlpha'] = (0.6 - this['hit']['v']) * this['_alpha'];
        var _0x57c2c8 = sprite[SPRITE['HURT_VULTURE_WING_LEFT']];
        ctxDrawImage(ctx, _0x57c2c8, -w * scale / 0x4, -h * scale / 0x4, w / 0x2, h / 0x2), ctx['globalAlpha'] = 0x1;
    }
    ctx['restore'](), _0x57c2c8 = sprite[SPRITE['VULTURE_WING_RIGHT_ATTACK']][world['time']], ctx['save'](), ctx['translate'](0x28 * scale, 0x50 * scale), ctx['rotate'](-this['rotate']['v']), ctx['globalAlpha'] = this['_alpha'], ctxDrawImage(ctx, _0x57c2c8, -w * scale / 0x4, -h * scale / 0x4, w / 0x2, h / 0x2);
    if (this['action'] & STATE['HURT']) {
        ctx['globalAlpha'] = (0.6 - this['hit']['v']) * this['_alpha'];
        var _0x57c2c8 = sprite[SPRITE['HURT_VULTURE_WING_RIGHT']];
        ctxDrawImage(ctx, _0x57c2c8, -w * scale / 0x4, -h * scale / 0x4, w / 0x2, h / 0x2), ctx['globalAlpha'] = 0x1;
    }
    ctx['globalAlpha'] = 0x1, ctx['restore'](), ctx['restore']();
    if (Settings['Moves']) {
        (this['x'] != this['r']['x'] || this['y'] != this['r']['y']) && (ctx['beginPath'](), ctx['lineWidth'] = 3.5, ctx['moveTo'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']), ctx['lineTo'](user['cam']['x'] + this['r']['x'], user['cam']['y'] + this['r']['y']), ctx['strokeStyle'] = 'red', ctx['stroke']());;
    }
}

function draw_hawk() {
    ctx['save'](), ctx['translate'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']), ctx['rotate'](this['angle']);
    var _0x1bda7c = Utils['dist'](this, this['r']);
    if (_0x1bda7c > 0x15e) this['scale'] = Math['min'](this['scale'] + delta / 0x2, 1.8);
    else this['scale'] = Math['max'](this['scale'] - delta, 0x1);
    this['breath']['update'](), this['rotate']['update']();
    if (_0x1bda7c < 0x15e) this['_alpha'] = Math['max'](0x0, this['_alpha'] - delta * 2.2);
    else this['_alpha'] = Math['min'](0x1, this['_alpha'] + delta * 2.2);
    if ((this['info'] & 0x1) === 0x0) _0xe44ebb = sprite[SPRITE['HAWK_GROUND']][world['time']];
    else _0xe44ebb = sprite[SPRITE['HAWK_GROUND_ATTACK']][world['time']];
    w = -_0xe44ebb['width'] * this['breath']['v'] * this['scale'], h = -_0xe44ebb['height'] * this['breath']['v'] * this['scale'], ctx['globalAlpha'] = 0x1 - this['_alpha'], ctxDrawImage(ctx, _0xe44ebb, -w / 0x4, -h / 0x4, w / 0x2, h / 0x2);
    if ((this['info'] & 0x1) === 0x0) _0xe44ebb = sprite[SPRITE['HAWK']][world['time']];
    else _0xe44ebb = sprite[SPRITE['HAWK_ATTACK']][world['time']];
    w = -_0xe44ebb['width'] * this['breath']['v'] * this['scale'], h = -_0xe44ebb['height'] * this['breath']['v'] * this['scale'], ctx['globalAlpha'] = this['_alpha'], ctxDrawImage(ctx, _0xe44ebb, -w / 0x4, -h / 0x4, w / 0x2, h / 0x2);
    if (this['action'] & STATE['HURT']) {
        if (this['hit']['update']() && this['hit']['o'] == ![]) this['action'] -= STATE['HURT'];
        ctx['globalAlpha'] = (0.6 - this['hit']['v']) * (0x1 - this['_alpha']);
        var _0xe44ebb = sprite[SPRITE['HURT_HAWK_GROUND']];
        w = -_0xe44ebb['width'] * this['breath']['v'] * this['scale'], h = -_0xe44ebb['height'] * this['breath']['v'] * this['scale'], ctxDrawImage(ctx, _0xe44ebb, -w / 0x4, -h / 0x4, w / 0x2, h / 0x2), ctx['globalAlpha'] = (0.6 - this['hit']['v']) * this['_alpha'];
        var _0xe44ebb = sprite[SPRITE['HURT_HAWK']];
        w = -_0xe44ebb['width'] * this['breath']['v'] * this['scale'], h = -_0xe44ebb['height'] * this['breath']['v'] * this['scale'], ctxDrawImage(ctx, _0xe44ebb, -w / 0x4, -h / 0x4, w / 0x2, h / 0x2), ctx['globalAlpha'] = 0x1;
    }
    if ((this['info'] & 0x1) === 0x0) _0xe44ebb = sprite[SPRITE['HAWK_WING_LEFT']][world['time']];
    else _0xe44ebb = sprite[SPRITE['HAWK_WING_LEFT_ATTACK']][world['time']];
    w = -_0xe44ebb['width'] * this['breath']['v'] * this['scale'], h = -_0xe44ebb['height'] * this['breath']['v'] * this['scale'], ctx['save'](), ctx['translate'](-0x14 * scale, 0x0 * scale), ctx['rotate'](this['rotate']['v']), ctx['globalAlpha'] = this['_alpha'], ctxDrawImage(ctx, _0xe44ebb, -w * scale / 0x4, -h * scale / 0x4, w / 0x2, h / 0x2);
    if (this['action'] & STATE['HURT']) {
        ctx['globalAlpha'] = (0.6 - this['hit']['v']) * this['_alpha'];
        var _0xe44ebb = sprite[SPRITE['HURT_HAWK_WING_LEFT']];
        ctxDrawImage(ctx, _0xe44ebb, -w * scale / 0x4, -h * scale / 0x4, w / 0x2, h / 0x2), ctx['globalAlpha'] = 0x1;
    }
    ctx['restore']();
    if ((this['info'] & 0x1) === 0x0) _0xe44ebb = sprite[SPRITE['HAWK_WING_RIGHT']][world['time']];
    else _0xe44ebb = sprite[SPRITE['HAWK_WING_RIGHT_ATTACK']][world['time']];
    ctx['save'](), ctx['translate'](0x14 * scale, 0x0 * scale), ctx['rotate'](-this['rotate']['v']), ctx['globalAlpha'] = this['_alpha'], ctxDrawImage(ctx, _0xe44ebb, -w * scale / 0x4, -h * scale / 0x4, w / 0x2, h / 0x2);
    if (this['action'] & STATE['HURT']) {
        ctx['globalAlpha'] = (0.6 - this['hit']['v']) * this['_alpha'];
        var _0xe44ebb = sprite[SPRITE['HURT_HAWK_WING_RIGHT']];
        ctxDrawImage(ctx, _0xe44ebb, -w * scale / 0x4, -h * scale / 0x4, w / 0x2, h / 0x2), ctx['globalAlpha'] = 0x1;
    }
    ctx['globalAlpha'] = 0x1, ctx['restore'](), ctx['restore']();
    if (Settings['Moves']) {
        (this['x'] != this['r']['x'] || this['y'] != this['r']['y']) && (ctx['beginPath'](), ctx['lineWidth'] = 3.5, ctx['moveTo'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']), ctx['lineTo'](user['cam']['x'] + this['r']['x'], user['cam']['y'] + this['r']['y']), ctx['strokeStyle'] = 'red', ctx['stroke']());;
    }
}

function draw_baby_lava() {
    ctx['save'](), ctx['translate'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']), ctx['rotate'](this['angle']);
    if (Utils['dist'](this, this['r']) > 0x12c) this['scale'] = Math['min'](this['scale'] + delta / 0x2, 1.8);
    else this['scale'] = Math['max'](this['scale'] - delta, 0x1);
    this['breath']['update'](), this['rotate']['update']();
    if (this['info'] === 0x0) _0x4543f9 = sprite[SPRITE['BABY_LAVA']][world['time']];
    else _0x4543f9 = sprite[SPRITE['BABY_LAVA_ATTACK']][world['time']];
    w = -_0x4543f9['width'] * this['breath']['v'] * this['scale'], h = -_0x4543f9['height'] * this['breath']['v'] * this['scale'], ctxDrawImage(ctx, _0x4543f9, -w / 0x4, -h / 0x4, w / 0x2, h / 0x2);
    if (this['action'] & STATE['HURT']) {
        if (this['hit']['update']() && this['hit']['o'] == ![]) this['action'] -= STATE['HURT'];
        ctx['globalAlpha'] = 0.6 - this['hit']['v'];
        var _0x4543f9 = sprite[SPRITE['HURT_BABY_LAVA']];
        ctxDrawImage(ctx, _0x4543f9, -w / 0x4, -h / 0x4, w / 0x2, h / 0x2), ctx['globalAlpha'] = 0x1;
    }
    if (this['info'] === 0x0) _0x4543f9 = sprite[SPRITE['BABY_LAVA_WING_LEFT']][world['time']];
    else _0x4543f9 = sprite[SPRITE['BABY_LAVA_WING_LEFT_ATTACK']][world['time']];
    w = -_0x4543f9['width'] * this['breath']['v'] * this['scale'], h = -_0x4543f9['height'] * this['breath']['v'] * this['scale'], ctx['save'](), ctx['translate'](-0x28 * scale, 0xa * scale), ctx['rotate'](this['rotate']['v']), ctxDrawImage(ctx, _0x4543f9, -w * scale / 0x4, -h * scale / 0x4, w / 0x2, h / 0x2);
    if (this['action'] & STATE['HURT']) {
        ctx['globalAlpha'] = 0.6 - this['hit']['v'];
        var _0x4543f9 = sprite[SPRITE['HURT_BABY_LAVA_WING_LEFT']];
        ctxDrawImage(ctx, _0x4543f9, -w * scale / 0x4, -h * scale / 0x4, w / 0x2, h / 0x2), ctx['globalAlpha'] = 0x1;
    }
    ctx['restore']();
    if (this['info'] === 0x0) _0x4543f9 = sprite[SPRITE['BABY_LAVA_WING_RIGHT']][world['time']];
    else _0x4543f9 = sprite[SPRITE['BABY_LAVA_WING_RIGHT_ATTACK']][world['time']];
    ctx['save'](), ctx['translate'](0x28 * scale, 0xa * scale), ctx['rotate'](-this['rotate']['v']), ctxDrawImage(ctx, _0x4543f9, -w * scale / 0x4, -h * scale / 0x4, w / 0x2, h / 0x2);
    if (this['action'] & STATE['HURT']) {
        ctx['globalAlpha'] = 0.6 - this['hit']['v'];
        var _0x4543f9 = sprite[SPRITE['HURT_BABY_LAVA_WING_RIGHT']];
        ctxDrawImage(ctx, _0x4543f9, -w * scale / 0x4, -h * scale / 0x4, w / 0x2, h / 0x2), ctx['globalAlpha'] = 0x1;
    }
    ctx['restore'](), ctx['restore']();
    if (Settings['Moves']) {
        (this['x'] != this['r']['x'] || this['y'] != this['r']['y']) && (ctx['beginPath'](), ctx['lineWidth'] = 3.5, ctx['moveTo'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']), ctx['lineTo'](user['cam']['x'] + this['r']['x'], user['cam']['y'] + this['r']['y']), ctx['strokeStyle'] = 'red', ctx['stroke']());;
    }
}

function draw_baby_dragon() {
    ctx['save'](), ctx['translate'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']), ctx['rotate'](this['angle']);
    if (Utils['dist'](this, this['r']) > 0x12c) this['scale'] = Math['min'](this['scale'] + delta / 0x2, 1.8);
    else this['scale'] = Math['max'](this['scale'] - delta, 0x1);
    this['breath']['update'](), this['rotate']['update']();
    if (this['info'] === 0x0) _0x20e65f = sprite[SPRITE['BABY_DRAGON']][world['time']];
    else _0x20e65f = sprite[SPRITE['BABY_DRAGON_ATTACK']][world['time']];
    w = -_0x20e65f['width'] * this['breath']['v'] * this['scale'], h = -_0x20e65f['height'] * this['breath']['v'] * this['scale'], ctxDrawImage(ctx, _0x20e65f, -w / 0x4, -h / 0x4, w / 0x2, h / 0x2);
    if (this['action'] & STATE['HURT']) {
        if (this['hit']['update']() && this['hit']['o'] == ![]) this['action'] -= STATE['HURT'];
        ctx['globalAlpha'] = 0.6 - this['hit']['v'];
        var _0x20e65f = sprite[SPRITE['HURT_BABY_DRAGON']];
        ctxDrawImage(ctx, _0x20e65f, -w / 0x4, -h / 0x4, w / 0x2, h / 0x2), ctx['globalAlpha'] = 0x1;
    }
    if (this['info'] === 0x0) _0x20e65f = sprite[SPRITE['BABY_DRAGON_WING_LEFT']][world['time']];
    else _0x20e65f = sprite[SPRITE['BABY_DRAGON_WING_LEFT_ATTACK']][world['time']];
    w = -_0x20e65f['width'] * this['breath']['v'] * this['scale'], h = -_0x20e65f['height'] * this['breath']['v'] * this['scale'], ctx['save'](), ctx['translate'](-0x28 * scale, 0xa * scale), ctx['rotate'](this['rotate']['v']), ctxDrawImage(ctx, _0x20e65f, -w * scale / 0x4, -h * scale / 0x4, w / 0x2, h / 0x2);
    if (this['action'] & STATE['HURT']) {
        ctx['globalAlpha'] = 0.6 - this['hit']['v'];
        var _0x20e65f = sprite[SPRITE['HURT_BABY_DRAGON_WING_LEFT']];
        ctxDrawImage(ctx, _0x20e65f, -w * scale / 0x4, -h * scale / 0x4, w / 0x2, h / 0x2), ctx['globalAlpha'] = 0x1;
    }
    ctx['restore']();
    if (this['info'] === 0x0) _0x20e65f = sprite[SPRITE['BABY_DRAGON_WING_RIGHT']][world['time']];
    else _0x20e65f = sprite[SPRITE['BABY_DRAGON_WING_RIGHT_ATTACK']][world['time']];
    ctx['save'](), ctx['translate'](0x28 * scale, 0xa * scale), ctx['rotate'](-this['rotate']['v']), ctxDrawImage(ctx, _0x20e65f, -w * scale / 0x4, -h * scale / 0x4, w / 0x2, h / 0x2);
    if (this['action'] & STATE['HURT']) {
        ctx['globalAlpha'] = 0.6 - this['hit']['v'];
        var _0x20e65f = sprite[SPRITE['HURT_BABY_DRAGON_WING_RIGHT']];
        ctxDrawImage(ctx, _0x20e65f, -w * scale / 0x4, -h * scale / 0x4, w / 0x2, h / 0x2), ctx['globalAlpha'] = 0x1;
    }
    ctx['restore'](), ctx['restore']();
    if (Settings['Moves']) {
        (this['x'] != this['r']['x'] || this['y'] != this['r']['y']) && (ctx['beginPath'](), ctx['lineWidth'] = 3.5, ctx['moveTo'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']), ctx['lineTo'](user['cam']['x'] + this['r']['x'], user['cam']['y'] + this['r']['y']), ctx['strokeStyle'] = 'red', ctx['stroke']());;
    }
}

function draw_lava_dragon() {
    ctx['save'](), ctx['translate'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']), ctx['rotate'](this['angle']);
    if (Utils['dist'](this, this['r']) > 0x12c) this['scale'] = Math['min'](this['scale'] + delta / 0x2, 1.8);
    else this['scale'] = Math['max'](this['scale'] - delta, 0x1);
    this['breath']['update'](), this['rotate']['update'](), _0x235ebf = sprite[SPRITE['LAVA_DRAGON']][world['time']], w = -_0x235ebf['width'] * this['breath']['v'] * this['scale'], h = -_0x235ebf['height'] * this['breath']['v'] * this['scale'], ctxDrawImage(ctx, _0x235ebf, -w / 0x4, -h / 0x4, w / 0x2, h / 0x2);
    if (this['action'] & STATE['HURT']) {
        if (this['hit']['update']() && this['hit']['o'] == ![]) this['action'] -= STATE['HURT'];
        ctx['globalAlpha'] = 0.6 - this['hit']['v'];
        var _0x235ebf = sprite[SPRITE['HURT_LAVA_DRAGON']];
        ctxDrawImage(ctx, _0x235ebf, -w / 0x4, -h / 0x4, w / 0x2, h / 0x2), ctx['globalAlpha'] = 0x1;
    }
    _0x235ebf = sprite[SPRITE['LAVA_WING_LEFT']][world['time']], w = -_0x235ebf['width'] * this['breath']['v'] * this['scale'], h = -_0x235ebf['height'] * this['breath']['v'] * this['scale'], ctx['save'](), ctx['translate'](-0x3c * scale, 0x14 * scale), ctx['rotate'](this['rotate']['v']), ctxDrawImage(ctx, _0x235ebf, -w * scale / 0x4, -h * scale / 0x4, w / 0x2, h / 0x2);
    if (this['action'] & STATE['HURT']) {
        ctx['globalAlpha'] = 0.6 - this['hit']['v'];
        var _0x235ebf = sprite[SPRITE['HURT_LAVA_WING_LEFT']];
        ctxDrawImage(ctx, _0x235ebf, -w * scale / 0x4, -h * scale / 0x4, w / 0x2, h / 0x2), ctx['globalAlpha'] = 0x1;
    }
    ctx['restore'](), _0x235ebf = sprite[SPRITE['LAVA_WING_RIGHT']][world['time']], ctx['save'](), ctx['translate'](0x3c * scale, 0x14 * scale), ctx['rotate'](-this['rotate']['v']), ctxDrawImage(ctx, _0x235ebf, -w * scale / 0x4, -h * scale / 0x4, w / 0x2, h / 0x2);
    if (this['action'] & STATE['HURT']) {
        ctx['globalAlpha'] = 0.6 - this['hit']['v'];
        var _0x235ebf = sprite[SPRITE['HURT_LAVA_WING_RIGHT']];
        ctxDrawImage(ctx, _0x235ebf, -w * scale / 0x4, -h * scale / 0x4, w / 0x2, h / 0x2), ctx['globalAlpha'] = 0x1;
    }
    ctx['restore'](), ctx['restore']();
    if (Settings['Moves']) {
        (this['x'] != this['r']['x'] || this['y'] != this['r']['y']) && (ctx['beginPath'](), ctx['lineWidth'] = 3.5, ctx['moveTo'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']), ctx['lineTo'](user['cam']['x'] + this['r']['x'], user['cam']['y'] + this['r']['y']), ctx['strokeStyle'] = 'red', ctx['stroke']());;
    }
}

function draw_dragon() {
    ctx['save'](), ctx['translate'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']), ctx['rotate'](this['angle']);
    if (Utils['dist'](this, this['r']) > 0x12c) this['scale'] = Math['min'](this['scale'] + delta / 0x2, 1.8);
    else this['scale'] = Math['max'](this['scale'] - delta, 0x1);
    this['breath']['update'](), this['rotate']['update'](), _0x102f3c = sprite[SPRITE['DRAGON']][world['time']], w = -_0x102f3c['width'] * this['breath']['v'] * this['scale'], h = -_0x102f3c['height'] * this['breath']['v'] * this['scale'], ctxDrawImage(ctx, _0x102f3c, -w / 0x2, -h / 0x2, w, h);
    if (this['action'] & STATE['HURT']) {
        if (this['hit']['update']() && this['hit']['o'] == ![]) this['action'] -= STATE['HURT'];
        ctx['globalAlpha'] = 0.6 - this['hit']['v'];
        var _0x102f3c = sprite[SPRITE['HURT_DRAGON']];
        ctxDrawImage(ctx, _0x102f3c, -w / 0x2, -h / 0x2, w, h), ctx['globalAlpha'] = 0x1;
    }
    _0x102f3c = sprite[SPRITE['WING_LEFT']][world['time']], w = -_0x102f3c['width'] * this['breath']['v'] * this['scale'], h = -_0x102f3c['height'] * this['breath']['v'] * this['scale'], ctx['save'](), ctx['translate'](-0x1e * scale, 0x46 * scale), ctx['rotate'](this['rotate']['v']), ctxDrawImage(ctx, _0x102f3c, -0xa * scale, -0x28 * scale, w, h);
    if (this['action'] & STATE['HURT']) {
        ctx['globalAlpha'] = 0.6 - this['hit']['v'];
        var _0x102f3c = sprite[SPRITE['HURT_WING_LEFT']];
        ctxDrawImage(ctx, _0x102f3c, -0xa * scale, -0x28 * scale, w, h), ctx['globalAlpha'] = 0x1;
    }
    ctx['restore'](), _0x102f3c = sprite[SPRITE['WING_RIGHT']][world['time']], ctx['save'](), ctx['translate'](0x1e * scale, 0x46 * scale), ctx['rotate'](-this['rotate']['v']), ctxDrawImage(ctx, _0x102f3c, 0xa * scale - w, -0x28 * scale, w, h);
    if (this['action'] & STATE['HURT']) {
        ctx['globalAlpha'] = 0.6 - this['hit']['v'];
        var _0x102f3c = sprite[SPRITE['HURT_WING_RIGHT']];
        ctxDrawImage(ctx, _0x102f3c, 0xa * scale - w, -0x28 * scale, w, h), ctx['globalAlpha'] = 0x1;
    }
    ctx['restore'](), ctx['restore']();
    if (Settings['Moves']) {
        (this['x'] != this['r']['x'] || this['y'] != this['r']['y']) && (ctx['beginPath'](), ctx['lineWidth'] = 3.5, ctx['moveTo'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']), ctx['lineTo'](user['cam']['x'] + this['r']['x'], user['cam']['y'] + this['r']['y']), ctx['strokeStyle'] = 'red', ctx['stroke']());;
    }
}

function draw_crate(_0x216763, _0x6628ea) {
    ctx['save'](), ctx['translate'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']), ctx['rotate'](this['angle']);
    _0x216763 === SPRITE['GIFT'] && (_0x216763 = SPRITE['CRATE'], this['info'] = 0x24);
    img = sprite[_0x216763][this['info']][world['time']], w = -img['width'] / 0x2, h = -img['height'] / 0x2, ctxDrawImage(ctx, img, -w / 0x2, -h / 0x2, w, h);
    if (this['action'] & STATE['HURT']) {
        if (this['hit']['update']() && this['hit']['o'] == ![]) this['action'] -= STATE['HURT'];
        ctx['globalAlpha'] = 0.6 - this['hit']['v'];
        var _0x564a5f = get_image_effect(this['info'], img, __EFFECT_BOX__);
        ctxDrawImage(ctx, _0x564a5f, -w / 0x2, -h / 0x2, w, h), ctx['globalAlpha'] = 0x1;
    }
    ctx['restore'](), ctx['save'](), ctx['font'] = '18px\x20Baloo\x20Paaji', ctx['strokeStyle'] = 'black', ctx['lineWidth'] = 0x7, ctx['strokeText'](this['hited'], user['cam']['x'] + this['x'] - 0xa, user['cam']['y'] + this['y'] + 0x14), ctx['strokeText'](this['type'] === 0x56 ? 'Drop' : 'Dead', user['cam']['x'] + this['x'] - 0x19, user['cam']['y'] + this['y']), ctx['strokeText'](Math['floor']((this['type'] === 0x56 ? 0x11 : 0x12c) - (Date['now']() - this['spawnTime']) / 0x3e8) + 's', user['cam']['x'] + this['x'] - 12.5, user['cam']['y'] + this['y'] + 0x28), ctx['fillStyle'] = 'white', ctx['fillText'](this['hited'], user['cam']['x'] + this['x'] - 0xa, user['cam']['y'] + this['y'] + 0x14), ctx['fillText'](this['type'] === 0x56 ? 'Drop' : 'Dead', user['cam']['x'] + this['x'] - 0x19, user['cam']['y'] + this['y']), ctx['fillText'](Math['floor']((this['type'] === 0x56 ? 0x11 : 0x12c) - (Date['now']() - this['spawnTime']) / 0x3e8) + 's', user['cam']['x'] + this['x'] - 12.5, user['cam']['y'] + this['y'] + 0x28), ctx['restore']();
}

function draw_simple_mobs_2(_0x4c79e0, _0x23cea9) {
    ctx['save'](), ctx['translate'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']), ctx['rotate'](this['angle']), _0x4be101 = sprite[_0x4c79e0][world['time']], w = -_0x4be101['width'], h = -_0x4be101['height'], ctxDrawImage(ctx, _0x4be101, -w / 0x2, -h / 0x2, w, h);
    if (this['action'] & STATE['HURT']) {
        if (this['hit']['update']() && this['hit']['o'] == ![]) this['action'] -= STATE['HURT'];
        ctx['globalAlpha'] = 0.6 - this['hit']['v'];
        var _0x4be101 = sprite[_0x23cea9];
        ctxDrawImage(ctx, _0x4be101, -w / 0x2, -h / 0x2, w, h), ctx['globalAlpha'] = 0x1;
    }
    ctx['restore']();
    if (Settings['Moves']) {
        (this['x'] != this['r']['x'] || this['y'] != this['r']['y']) && (ctx['beginPath'](), ctx['lineWidth'] = 3.5, ctx['moveTo'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']), ctx['lineTo'](user['cam']['x'] + this['r']['x'], user['cam']['y'] + this['r']['y']), ctx['strokeStyle'] = 'red', ctx['stroke']());;
    }
}

function draw_baby_mammoth() {
    this['breath']['update'](), ctx['save'](), ctx['translate'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']), ctx['rotate'](this['angle']);
    if (this['info'] === 0x0) _0x28182c = sprite[SPRITE['BABY_MAMMOTH']][world['time']];
    else _0x28182c = sprite[SPRITE['BABY_MAMMOTH_ATTACK']][world['time']];
    w = -_0x28182c['width'] * this['breath']['v'], h = -_0x28182c['height'] * this['breath']['v'], ctxDrawImage(ctx, _0x28182c, -w / 0x2, -h / 0x2, w, h);
    if (this['action'] & STATE['HURT']) {
        if (this['hit']['update']() && this['hit']['o'] == ![]) this['action'] -= STATE['HURT'];
        ctx['globalAlpha'] = 0.6 - this['hit']['v'];
        var _0x28182c = sprite[SPRITE['HURT_BABY_MAMMOTH']];
        ctxDrawImage(ctx, _0x28182c, -w / 0x2, -h / 0x2, w, h), ctx['globalAlpha'] = 0x1;
    }
    ctx['restore']();
    if (Settings['Moves']) {
        (this['x'] != this['r']['x'] || this['y'] != this['r']['y']) && (ctx['beginPath'](), ctx['lineWidth'] = 3.5, ctx['moveTo'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']), ctx['lineTo'](user['cam']['x'] + this['r']['x'], user['cam']['y'] + this['r']['y']), ctx['strokeStyle'] = 'red', ctx['stroke']());;
    }
}

function draw_boar() {
    this['breath']['update'](), ctx['save'](), ctx['translate'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']), ctx['rotate'](this['angle']);
    if (this['info'] === 0x0) _0x797dfc = sprite[SPRITE['BOAR']][world['time']];
    else _0x797dfc = sprite[SPRITE['BOAR_ATTACK']][world['time']];
    w = -_0x797dfc['width'] * this['breath']['v'], h = -_0x797dfc['height'] * this['breath']['v'], ctxDrawImage(ctx, _0x797dfc, -w / 0x2, -h / 0x2, w, h);
    if (this['action'] & STATE['HURT']) {
        if (this['hit']['update']() && this['hit']['o'] == ![]) this['action'] -= STATE['HURT'];
        ctx['globalAlpha'] = 0.6 - this['hit']['v'];
        var _0x797dfc = sprite[SPRITE['HURT_BOAR']];
        ctxDrawImage(ctx, _0x797dfc, -w / 0x2, -h / 0x2, w, h), ctx['globalAlpha'] = 0x1;
    }
    ctx['restore']();
    if (Settings['Moves']) {
        (this['x'] != this['r']['x'] || this['y'] != this['r']['y']) && (ctx['beginPath'](), ctx['lineWidth'] = 3.5, ctx['moveTo'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']), ctx['lineTo'](user['cam']['x'] + this['r']['x'], user['cam']['y'] + this['r']['y']), ctx['strokeStyle'] = 'red', ctx['stroke']());;
    }
}

function draw_crab_boss() {
    var _0x109b74 = Math['PI'] / 0x2,
        _0x57ab9d = Math['PI'] / 0x4;
    this['breath']['update'](), this['breathl']['update'](), this['breathr']['update'](), ctx['save'](), ctx['translate'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']), ctx['rotate'](this['angle']);
    if (this['info'] === 0x0) _0x44bead = sprite[SPRITE['CRAB_BOSS']][world['time']];
    else _0x44bead = sprite[SPRITE['CRAB_BOSS_ATTACK']][world['time']];
    w = -_0x44bead['width'] * this['breath']['v'], h = -_0x44bead['height'] * this['breath']['v'], ctxDrawImage(ctx, _0x44bead, -w / 0x2, -h / 0x2, w, h);
    if (this['action'] & STATE['HURT']) {
        if (this['hit']['update']() && this['hit']['o'] == ![]) this['action'] -= STATE['HURT'];
        ctx['globalAlpha'] = 0.6 - this['hit']['v'];
        var _0x44bead = sprite[SPRITE['HURT_CRAB_BOSS']];
        ctxDrawImage(ctx, _0x44bead, -w / 0x2, -h / 0x2, w, h), ctx['globalAlpha'] = 0x1;
    }
    if (this['action'] & STATE['COLD']) {
        if (this['heal']['update']() && this['heal']['o'] == ![]) this['action'] -= STATE['COLD'];
        ctx['globalAlpha'] = 0.6 - this['heal']['v'];
        var _0x44bead = sprite[SPRITE['HEAL_CRAB_BOSS']];
        ctxDrawImage(ctx, _0x44bead, -w / 0x2, -h / 0x2, w, h), ctx['globalAlpha'] = 0x1;
    }
    ctx['restore'](), ctx['save'](), ctx['translate'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']), ctx['rotate'](this['angle'] + _0x57ab9d), ctx['translate'](0x64, 0x0), ctx['rotate'](_0x109b74);
    if (this['info'] === 0x0) _0x44bead = sprite[SPRITE['CRAB_BOSS_CLAW_LEFT']][world['time']];
    else _0x44bead = sprite[SPRITE['CRAB_BOSS_CLAW_LEFT_ATTACK']][world['time']];
    w = -_0x44bead['width'] * this['breathl']['v'], h = -_0x44bead['height'] * this['breathl']['v'], ctxDrawImage(ctx, _0x44bead, -w / 0x2, -h / 0x2, w, h);
    if (this['action'] & STATE['HURT']) {
        ctx['globalAlpha'] = 0.6 - this['hit']['v'];
        var _0x44bead = sprite[SPRITE['HURT_CRAB_BOSS_CLAW_LEFT']];
        ctxDrawImage(ctx, _0x44bead, -w / 0x2, -h / 0x2, w, h), ctx['globalAlpha'] = 0x1;
    }
    if (this['action'] & STATE['COLD']) {
        ctx['globalAlpha'] = 0.6 - this['heal']['v'];
        var _0x44bead = sprite[SPRITE['HEAL_CRAB_BOSS_CLAW_LEFT']];
        ctxDrawImage(ctx, _0x44bead, -w / 0x2, -h / 0x2, w, h), ctx['globalAlpha'] = 0x1;
    }
    ctx['restore'](), ctx['save'](), ctx['translate'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']), ctx['rotate'](this['angle'] + _0x109b74 + _0x57ab9d), ctx['translate'](0x64, 0x0), ctx['rotate'](_0x109b74);
    if (this['info'] === 0x0) _0x44bead = sprite[SPRITE['CRAB_BOSS_CLAW_RIGHT']][world['time']];
    else _0x44bead = sprite[SPRITE['CRAB_BOSS_CLAW_RIGHT_ATTACK']][world['time']];
    w = -_0x44bead['width'] * this['breathr']['v'], h = -_0x44bead['height'] * this['breathr']['v'], ctxDrawImage(ctx, _0x44bead, -w / 0x2, -h / 0x2, w, h);
    if (this['action'] & STATE['HURT']) {
        ctx['globalAlpha'] = 0.6 - this['hit']['v'];
        var _0x44bead = sprite[SPRITE['HURT_CRAB_BOSS_CLAW_RIGHT']];
        ctxDrawImage(ctx, _0x44bead, -w / 0x2, -h / 0x2, w, h), ctx['globalAlpha'] = 0x1;
    }
    if (this['action'] & STATE['COLD']) {
        ctx['globalAlpha'] = 0.6 - this['heal']['v'];
        var _0x44bead = sprite[SPRITE['HEAL_CRAB_BOSS_CLAW_RIGHT']];
        ctxDrawImage(ctx, _0x44bead, -w / 0x2, -h / 0x2, w, h), ctx['globalAlpha'] = 0x1;
    }
    ctx['restore']();
    if (Settings['Moves']) {
        (this['x'] != this['r']['x'] || this['y'] != this['r']['y']) && (ctx['beginPath'](), ctx['lineWidth'] = 3.5, ctx['moveTo'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']), ctx['lineTo'](user['cam']['x'] + this['r']['x'], user['cam']['y'] + this['r']['y']), ctx['strokeStyle'] = 'red', ctx['stroke']());;
    }
}

function draw_crab() {
    var _0x315dae = Math['PI'] / 0x2,
        _0x373e73 = Math['PI'] / 0x4;
    this['breath']['update'](), this['breathl']['update'](), this['breathr']['update'](), ctx['save'](), ctx['translate'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']), ctx['rotate'](this['angle']);
    if (this['info'] === 0x0) _0x623d50 = sprite[SPRITE['CRAB']][world['time']];
    else _0x623d50 = sprite[SPRITE['CRAB_ATTACK']][world['time']];
    w = -_0x623d50['width'] * this['breath']['v'], h = -_0x623d50['height'] * this['breath']['v'], ctxDrawImage(ctx, _0x623d50, -w / 0x2, -h / 0x2, w, h);
    if (this['action'] & STATE['HURT']) {
        if (this['hit']['update']() && this['hit']['o'] == ![]) this['action'] -= STATE['HURT'];
        ctx['globalAlpha'] = 0.6 - this['hit']['v'];
        var _0x623d50 = sprite[SPRITE['HURT_CRAB']];
        ctxDrawImage(ctx, _0x623d50, -w / 0x2, -h / 0x2, w, h), ctx['globalAlpha'] = 0x1;
    }
    if (this['action'] & STATE['COLD']) {
        if (this['heal']['update']() && this['heal']['o'] == ![]) this['action'] -= STATE['COLD'];
        ctx['globalAlpha'] = 0.6 - this['heal']['v'];
        var _0x623d50 = sprite[SPRITE['HEAL_CRAB']];
        ctxDrawImage(ctx, _0x623d50, -w / 0x2, -h / 0x2, w, h), ctx['globalAlpha'] = 0x1;
    }
    ctx['restore'](), ctx['save'](), ctx['translate'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']), ctx['rotate'](this['angle'] + _0x373e73), ctx['translate'](0x37, 0x0), ctx['rotate'](_0x315dae);
    if (this['info'] === 0x0) _0x623d50 = sprite[SPRITE['CRAB_CLAW_LEFT']][world['time']];
    else _0x623d50 = sprite[SPRITE['CRAB_CLAW_LEFT_ATTACK']][world['time']];
    w = -_0x623d50['width'] * this['breathl']['v'], h = -_0x623d50['height'] * this['breathl']['v'], ctxDrawImage(ctx, _0x623d50, -w / 0x2, -h / 0x2, w, h);
    if (this['action'] & STATE['HURT']) {
        ctx['globalAlpha'] = 0.6 - this['hit']['v'];
        var _0x623d50 = sprite[SPRITE['HURT_CRAB_CLAW_LEFT']];
        ctxDrawImage(ctx, _0x623d50, -w / 0x2, -h / 0x2, w, h), ctx['globalAlpha'] = 0x1;
    }
    if (this['action'] & STATE['COLD']) {
        ctx['globalAlpha'] = 0.6 - this['heal']['v'];
        var _0x623d50 = sprite[SPRITE['HEAL_CRAB_CLAW_LEFT']];
        ctxDrawImage(ctx, _0x623d50, -w / 0x2, -h / 0x2, w, h), ctx['globalAlpha'] = 0x1;
    }
    ctx['restore'](), ctx['save'](), ctx['translate'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']), ctx['rotate'](this['angle'] + _0x315dae + _0x373e73), ctx['translate'](0x37, 0x0), ctx['rotate'](_0x315dae);
    if (this['info'] === 0x0) _0x623d50 = sprite[SPRITE['CRAB_CLAW_RIGHT']][world['time']];
    else _0x623d50 = sprite[SPRITE['CRAB_CLAW_RIGHT_ATTACK']][world['time']];
    w = -_0x623d50['width'] * this['breathr']['v'], h = -_0x623d50['height'] * this['breathr']['v'], ctxDrawImage(ctx, _0x623d50, -w / 0x2, -h / 0x2, w, h);
    if (this['action'] & STATE['HURT']) {
        ctx['globalAlpha'] = 0.6 - this['hit']['v'];
        var _0x623d50 = sprite[SPRITE['HURT_CRAB_CLAW_RIGHT']];
        ctxDrawImage(ctx, _0x623d50, -w / 0x2, -h / 0x2, w, h), ctx['globalAlpha'] = 0x1;
    }
    if (this['action'] & STATE['COLD']) {
        ctx['globalAlpha'] = 0.6 - this['heal']['v'];
        var _0x623d50 = sprite[SPRITE['HEAL_CRAB_CLAW_RIGHT']];
        ctxDrawImage(ctx, _0x623d50, -w / 0x2, -h / 0x2, w, h), ctx['globalAlpha'] = 0x1;
    }
    ctx['restore']();
    if (Settings['Moves']) {
        (this['x'] != this['r']['x'] || this['y'] != this['r']['y']) && (ctx['beginPath'](), ctx['lineWidth'] = 3.5, ctx['moveTo'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']), ctx['lineTo'](user['cam']['x'] + this['r']['x'], user['cam']['y'] + this['r']['y']), ctx['strokeStyle'] = 'red', ctx['stroke']());;
    }
}

function draw_spell() {
    ctx['save'](), ctx['translate'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']), ctx['rotate'](this['angle']), this['born'] = Math['min'](0x1, this['born'] + delta * 0x2), ctx['globalAlpha'] = Math['min'](0x1, Math['max'](0x0, Utils['dist'](this, this['r']) / 0x50)) * this['born'], this['breath']['update'](), img = sprite[SPRITE['SPELL']][world['time']][this['spell']], this['spell'] < 0x2 ? (w = -img['width'] * this['breath']['v'], h = -img['height'] * this['breath']['v']) : this['fly'] === 0x0 ? (w = -img['width'], h = -img['height']) : (w = -img['width'] * 1.35, h = -img['height'] * 1.35), ctxDrawImage(ctx, img, -w / 0x2, -h / 0x2, w, h), ctx['globalAlpha'] = 0x1, ctx['restore']();
}

function draw_simple_mobs(_0x34697f, _0x227963) {
    ctx['save'](), ctx['translate'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']), ctx['rotate'](this['angle']), this['breath']['update'](), _0x455ffb = sprite[_0x34697f][world['time']], w = -_0x455ffb['width'] * this['breath']['v'], h = -_0x455ffb['height'] * this['breath']['v'], ctxDrawImage(ctx, _0x455ffb, -w / 0x2, -h / 0x2, w, h);
    if (this['action'] & STATE['HURT']) {
        if (this['hit']['update']() && this['hit']['o'] == ![]) this['action'] -= STATE['HURT'];
        ctx['globalAlpha'] = 0.6 - this['hit']['v'];
        var _0x455ffb = sprite[_0x227963];
        ctxDrawImage(ctx, _0x455ffb, -w / 0x2, -h / 0x2, w, h), ctx['globalAlpha'] = 0x1;
    }
    ctx['restore']();
    if (Settings['Moves']) {
        (this['x'] != this['r']['x'] || this['y'] != this['r']['y']) && (ctx['beginPath'](), ctx['lineWidth'] = 3.5, ctx['moveTo'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']), ctx['lineTo'](user['cam']['x'] + this['r']['x'], user['cam']['y'] + this['r']['y']), ctx['strokeStyle'] = 'red', ctx['stroke']());;
    }
}

function draw_simple_mobs_hd(_0x418d79, _0x1786e9) {
    ctx['save'](), ctx['translate'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']), ctx['rotate'](this['angle']), this['breath']['update'](), _0x133b77 = sprite[_0x418d79][world['time']], w = -_0x133b77['width'] * this['breath']['v'], h = -_0x133b77['height'] * this['breath']['v'], ctxDrawImage(ctx, _0x133b77, -w / 0x4, -h / 0x4, w / 0x2, h / 0x2);
    if (this['action'] & STATE['HURT']) {
        if (this['hit']['update']() && this['hit']['o'] == ![]) this['action'] -= STATE['HURT'];
        ctx['globalAlpha'] = 0.6 - this['hit']['v'];
        var _0x133b77 = sprite[_0x1786e9];
        ctxDrawImage(ctx, _0x133b77, -w / 0x4, -h / 0x4, w / 0x2, h / 0x2), ctx['globalAlpha'] = 0x1;
    }
    ctx['restore']();
}

function draw_breath_2(_0x1424bc, _0x35c432, _0x1c57f3) {
    ctx['save'](), ctx['translate'](user['cam']['x'] + _0x35c432, user['cam']['y'] + _0x1c57f3), ctx['rotate'](this['angle']), ctx['translate'](this['x'] - _0x35c432, this['y'] - _0x1c57f3), this['breath']['update'](), img = sprite[_0x1424bc][world['time']], w = -img['width'] * this['breath']['v'], h = -img['height'] * this['breath']['v'], ctxDrawImage(ctx, img, -w / 0x2, -h / 0x2, w, h), ctx['restore']();
}

function draw_breath(_0x41eae7) {
    ctx['save'](), ctx['translate'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']), ctx['rotate'](this['angle']), this['breath']['update'](), img = sprite[_0x41eae7][world['time']], w = -img['width'] * this['breath']['v'], h = -img['height'] * this['breath']['v'], ctxDrawImage(ctx, img, -w / 0x2, -h / 0x2, w, h), ctx['restore']();
}

function draw_thornbush() {
    ctx['save'](), ctx['translate'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']);
    if (this['hit']['update']) {
        if (this['hit']['anim']['update']() && this['hit']['anim']['o'] == ![]) this['hit']['update'] = ![];
        var _0x44ece4 = (0x1 - this['hit']['anim']['v']) * delta * 0x258 * scale,
            _0x5f9c3a = Math['cos'](this['hit']['angle'] - this['angle']) * _0x44ece4,
            _0x2c61a0 = Math['sin'](this['hit']['angle'] - this['angle']) * _0x44ece4;
    } else var _0x5f9c3a = 0x0,
        _0x2c61a0 = 0x0;;
    var _0x268593 = this['info'] & 0xf;
    if (this['info'] === 0xa || _0x268593 === 0x0) {
        ctx['rotate'](this['angle']), this['ground']['update']();
        if (this['info'] & 0x10) var _0xadb9e7 = sprite[SPRITE['PLANT_THORNBUSH_DRIED']][world['time']];
        else var _0xadb9e7 = sprite[SPRITE['PLANT_THORNBUSH']][world['time']];
        var _0x31845d = -_0xadb9e7['width'] * this['ground']['v'],
            _0x6069cc = -_0xadb9e7['height'] * this['ground']['v'];
        ctxDrawImage(ctx, _0xadb9e7, -_0x31845d / 0x2 + _0x5f9c3a, -_0x6069cc / 0x2 + _0x2c61a0, _0x31845d, _0x6069cc);
    } else {
        if (this['info'] & 0x10) var _0xadb9e7 = sprite[SPRITE['DRIED_THORNBUSH']][world['time']];
        else var _0xadb9e7 = sprite[SPRITE['THORNBUSH']][world['time']];
        ctx['translate'](0x0, _0xadb9e7['height'] / 0x2), ctxDrawImage(ctx, _0xadb9e7, _0x5f9c3a - _0xadb9e7['width'] / 0x2, -_0xadb9e7['height'] + _0x2c61a0);
    }
    ctx['restore']();
}

function draw_garlic() {
    ctx['save'](), ctx['translate'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']);
    if (this['hit']['update']) {
        if (this['hit']['anim']['update']() && this['hit']['anim']['o'] == ![]) this['hit']['update'] = ![];
        var _0x18fa41 = (0x1 - this['hit']['anim']['v']) * delta * 0x258 * scale,
            _0x5d8f78 = Math['cos'](this['hit']['angle'] - this['angle']) * _0x18fa41,
            _0x4c86dd = Math['sin'](this['hit']['angle'] - this['angle']) * _0x18fa41;
    } else var _0x5d8f78 = 0x0,
        _0x4c86dd = 0x0;;
    var _0x39dcc5 = this['info'] & 0xf;
    if (this['info'] === 0xa || _0x39dcc5 === 0x0) {
        ctx['rotate'](this['angle']), this['ground']['update']();
        if (this['info'] & 0x10) var _0x223954 = sprite[SPRITE['PLANT_GARLIC_DRIED']][world['time']];
        else var _0x223954 = sprite[SPRITE['PLANT_GARLIC']][world['time']];
        var _0x4ce8bd = -_0x223954['width'] * this['ground']['v'],
            _0x4fcb31 = -_0x223954['height'] * this['ground']['v'];
        ctxDrawImage(ctx, _0x223954, -_0x4ce8bd / 0x2 + _0x5d8f78, -_0x4fcb31 / 0x2 + _0x4c86dd, _0x4ce8bd, _0x4fcb31);
    } else {
        if (this['info'] & 0x10) var _0x223954 = sprite[SPRITE['DRIED_GARLIC']][world['time']];
        else var _0x223954 = sprite[SPRITE['GARLIC']][world['time']];
        ctx['translate'](0x0, _0x223954['height'] / 0x2), ctxDrawImage(ctx, _0x223954, _0x5d8f78 - _0x223954['width'] / 0x2, -_0x223954['height'] + _0x4c86dd);
    }
    ctx['restore']();
}

function draw_aloe_vera() {
    ctx['save'](), ctx['translate'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']);
    if (this['hit']['update']) {
        if (this['hit']['anim']['update']() && this['hit']['anim']['o'] == ![]) this['hit']['update'] = ![];
        var _0x255caf = (0x1 - this['hit']['anim']['v']) * delta * 0x258 * scale,
            _0x3b2ae0 = Math['cos'](this['hit']['angle'] - this['angle']) * _0x255caf,
            _0x1f66e9 = Math['sin'](this['hit']['angle'] - this['angle']) * _0x255caf;
    } else var _0x3b2ae0 = 0x0,
        _0x1f66e9 = 0x0;;
    var _0x5529b4 = this['info'] & 0xf;
    if (this['info'] === 0xa || _0x5529b4 === 0x0) {
        ctx['rotate'](this['angle']), this['ground']['update']();
        if (this['info'] & 0x10) var _0x308bf4 = sprite[SPRITE['PLANT_ALOE_VERA_DRIED']][world['time']];
        else var _0x308bf4 = sprite[SPRITE['PLANT_ALOE_VERA']][world['time']];
        var _0x501821 = -_0x308bf4['width'] * this['ground']['v'],
            _0x5645e1 = -_0x308bf4['height'] * this['ground']['v'];
        ctxDrawImage(ctx, _0x308bf4, -_0x501821 / 0x2 + _0x3b2ae0, -_0x5645e1 / 0x2 + _0x1f66e9, _0x501821, _0x5645e1);
    } else {
        if (this['info'] & 0x10) var _0x308bf4 = sprite[SPRITE['DRIED_ALOE_VERA']][world['time']];
        else var _0x308bf4 = sprite[SPRITE['ALOE_VERA_GROWN']][world['time']];
        ctx['translate'](0x0, _0x308bf4['height'] / 0x2), ctxDrawImage(ctx, _0x308bf4, _0x3b2ae0 - _0x308bf4['width'] / 0x2, -_0x308bf4['height'] + _0x1f66e9);
    }
    ctx['restore']();
}

function draw_watermelon() {
    ctx['save'](), ctx['translate'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']);
    if (this['hit']['update']) {
        if (this['hit']['anim']['update']() && this['hit']['anim']['o'] == ![]) this['hit']['update'] = ![];
        var _0x428b88 = (0x1 - this['hit']['anim']['v']) * delta * 0x258 * scale,
            _0x273735 = Math['cos'](this['hit']['angle'] - this['angle']) * _0x428b88,
            _0x245fd7 = Math['sin'](this['hit']['angle'] - this['angle']) * _0x428b88;
    } else var _0x273735 = 0x0,
        _0x245fd7 = 0x0;;
    var _0x4fccfc = this['info'] & 0xf;
    if (this['info'] === 0xa || _0x4fccfc === 0x0) {
        ctx['rotate'](this['angle']), this['ground']['update']();
        if (this['info'] & 0x10) var _0x28ef8d = sprite[SPRITE['PLANT_WATERMELON_DRIED']][world['time']];
        else var _0x28ef8d = sprite[SPRITE['PLANT_WATERMELON']][world['time']];
        var _0x21d2b9 = -_0x28ef8d['width'] * this['ground']['v'],
            _0x454545 = -_0x28ef8d['height'] * this['ground']['v'];
        ctxDrawImage(ctx, _0x28ef8d, -_0x21d2b9 / 0x2 + _0x273735, -_0x454545 / 0x2 + _0x245fd7, _0x21d2b9, _0x454545);
    } else {
        if (this['info'] & 0x10) var _0x28ef8d = sprite[SPRITE['DRIED_WATERMELON']][world['time']];
        else var _0x28ef8d = sprite[SPRITE['WATERMELON']][world['time']];
        ctx['translate'](0x0, _0x28ef8d['height'] / 0x2), ctxDrawImage(ctx, _0x28ef8d, _0x273735 - _0x28ef8d['width'] / 0x2, -_0x28ef8d['height'] + _0x245fd7);
    }
    ctx['restore']();
}

function draw_carrot() {
    ctx['save'](), ctx['translate'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']);
    if (this['hit']['update']) {
        if (this['hit']['anim']['update']() && this['hit']['anim']['o'] == ![]) this['hit']['update'] = ![];
        var _0x5cef43 = (0x1 - this['hit']['anim']['v']) * delta * 0x258 * scale,
            _0xc41fdd = Math['cos'](this['hit']['angle'] - this['angle']) * _0x5cef43,
            _0x1e38d4 = Math['sin'](this['hit']['angle'] - this['angle']) * _0x5cef43;
    } else var _0xc41fdd = 0x0,
        _0x1e38d4 = 0x0;;
    var _0x14b759 = this['info'] & 0xf;
    if (this['info'] === 0xa || _0x14b759 === 0x0) {
        ctx['rotate'](this['angle']), this['ground']['update']();
        if (this['info'] & 0x10) var _0x2755e2 = sprite[SPRITE['PLANT_CARROT_DRIED']][world['time']];
        else var _0x2755e2 = sprite[SPRITE['PLANT_CARROT']][world['time']];
        var _0x18c2bf = -_0x2755e2['width'] * this['ground']['v'],
            _0x4a4742 = -_0x2755e2['height'] * this['ground']['v'];
        ctxDrawImage(ctx, _0x2755e2, -_0x18c2bf / 0x2 + _0xc41fdd, -_0x4a4742 / 0x2 + _0x1e38d4, _0x18c2bf, _0x4a4742);
    } else {
        if (this['info'] & 0x10) var _0x2755e2 = sprite[SPRITE['DRIED_CARROT']][world['time']];
        else var _0x2755e2 = sprite[SPRITE['CARROT']][world['time']];
        ctx['translate'](0x0, _0x2755e2['height'] / 0x2), ctxDrawImage(ctx, _0x2755e2, _0xc41fdd - _0x2755e2['width'] / 0x2, -_0x2755e2['height'] + _0x1e38d4);
    }
    ctx['restore']();
}

function draw_pumpkin() {
    ctx['save'](), ctx['translate'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']);
    if (this['hit']['update']) {
        if (this['hit']['anim']['update']() && this['hit']['anim']['o'] == ![]) this['hit']['update'] = ![];
        var _0x1b3cb6 = (0x1 - this['hit']['anim']['v']) * delta * 0x258 * scale,
            _0x1621d2 = Math['cos'](this['hit']['angle'] - this['angle']) * _0x1b3cb6,
            _0x3624a9 = Math['sin'](this['hit']['angle'] - this['angle']) * _0x1b3cb6;
    } else var _0x1621d2 = 0x0,
        _0x3624a9 = 0x0;;
    var _0x3c3273 = this['info'] & 0xf;
    if (this['info'] === 0xa || _0x3c3273 === 0x0) {
        ctx['rotate'](this['angle']), this['ground']['update']();
        if (this['info'] & 0x10) var _0x35cf5f = sprite[SPRITE['PLANT_PUMPKIN_DRIED']][world['time']];
        else var _0x35cf5f = sprite[SPRITE['PLANT_PUMPKIN']][world['time']];
        var _0x473cf9 = -_0x35cf5f['width'] * this['ground']['v'],
            _0xa5bea7 = -_0x35cf5f['height'] * this['ground']['v'];
        ctxDrawImage(ctx, _0x35cf5f, -_0x473cf9 / 0x2 + _0x1621d2, -_0xa5bea7 / 0x2 + _0x3624a9, _0x473cf9, _0xa5bea7);
    } else {
        if (this['info'] & 0x10) var _0x35cf5f = sprite[SPRITE['DRIED_PUMPKIN']][world['time']];
        else var _0x35cf5f = sprite[SPRITE['PUMPKIN']][world['time']];
        ctx['translate'](0x0, _0x35cf5f['height'] / 0x2), ctxDrawImage(ctx, _0x35cf5f, _0x1621d2 - _0x35cf5f['width'] / 0x2, -_0x35cf5f['height'] + _0x3624a9);
    }
    ctx['restore']();
}

function draw_wheat() {
    ctx['save'](), ctx['translate'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']);
    if (this['hit']['update']) {
        if (this['hit']['anim']['update']() && this['hit']['anim']['o'] == ![]) this['hit']['update'] = ![];
        var _0x480985 = (0x1 - this['hit']['anim']['v']) * delta * 0x258 * scale,
            _0x5ca0e7 = Math['cos'](this['hit']['angle'] - this['angle']) * _0x480985,
            _0x211fad = Math['sin'](this['hit']['angle'] - this['angle']) * _0x480985;
    } else var _0x5ca0e7 = 0x0,
        _0x211fad = 0x0;;
    var _0x386907 = this['info'] & 0xf;
    if (this['info'] === 0xa || _0x386907 === 0x0) {
        ctx['rotate'](this['angle']), this['ground']['update']();
        if (this['info'] & 0x10) var _0x4ea993 = sprite[SPRITE['WHEAT_SEED_DRIED']][world['time']];
        else var _0x4ea993 = sprite[SPRITE['WHEAT_SEED']][world['time']];
        var _0x54eb98 = -_0x4ea993['width'] * this['ground']['v'],
            _0x2ae021 = -_0x4ea993['height'] * this['ground']['v'];
        ctxDrawImage(ctx, _0x4ea993, -_0x54eb98 / 0x2 + _0x5ca0e7, -_0x2ae021 / 0x2 + _0x211fad, _0x54eb98, _0x2ae021);
    } else {
        this['wind']['update']();
        if (this['info'] & 0x10) var _0x4ea993 = sprite[SPRITE['DRIED_WHEAT']][world['time']];
        else var _0x4ea993 = sprite[SPRITE['WILD_WHEAT']][world['time']];
        ctx['translate'](0x0, _0x4ea993['height'] / 0x2), ctx['rotate'](this['wind']['v']), ctxDrawImage(ctx, _0x4ea993, _0x5ca0e7 - _0x4ea993['width'] / 0x2, -_0x4ea993['height'] + _0x211fad);
    }
    ctx['restore']();
}

function draw_seed() {
    if (this['info'] < 0xa) return;
    ctx['save'](), ctx['translate'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']), ctx['rotate'](this['angle']);
    if (this['hit']['update']) {
        if (this['hit']['anim']['update']() && this['hit']['anim']['o'] == ![]) this['hit']['update'] = ![];
        var _0x277c64 = (0x1 - this['hit']['anim']['v']) * delta * 0x258 * scale,
            _0x186580 = Math['cos'](this['hit']['angle'] - this['angle']) * _0x277c64,
            _0x41a581 = Math['sin'](this['hit']['angle'] - this['angle']) * _0x277c64;
    } else var _0x186580 = 0x0,
        _0x41a581 = 0x0;;
    this['ground']['update']();
    var _0x537dc7 = sprite[SPRITE['PLANT_SEED']][world['time']],
        _0x4067ff = -_0x537dc7['width'] * this['ground']['v'],
        _0x5d6311 = -_0x537dc7['height'] * this['ground']['v'];
    ctxDrawImage(ctx, _0x537dc7, -_0x4067ff / 0x2 + _0x186580, -_0x5d6311 / 0x2 + _0x41a581, _0x4067ff, _0x5d6311), ctx['restore']();
}

function draw_plant() {
    if (this['info'] === 0xa) return;
    ctx['save'](), ctx['translate'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']), ctx['rotate'](this['angle']);
    if (this['hit']['update']) {
        if (this['hit']['anim']['update']() && this['hit']['anim']['o'] == ![]) this['hit']['update'] = ![];
        var _0x46739c = (0x1 - this['hit']['anim']['v']) * delta * 0x258 * scale,
            _0x2b8640 = Math['cos'](this['hit']['angle'] - this['angle']) * _0x46739c,
            _0xe0505d = Math['sin'](this['hit']['angle'] - this['angle']) * _0x46739c;
    } else var _0x2b8640 = 0x0,
        _0xe0505d = 0x0;;
    if (this['info'] & 0x10) var _0x193379 = sprite[SPRITE['DRIED_PLANT']][world['time']];
    else var _0x193379 = sprite[SPRITE['PLANT_MINI']][world['time']];
    ctxDrawImage(ctx, _0x193379, -_0x193379['width'] / 0x2 + _0x2b8640, -_0x193379['width'] / 0x2 + _0xe0505d), ctx['restore']();
    var _0x264ffa = this['info'] & 0xf;
    for (var _0x57475e = 0x0; _0x57475e < _0x264ffa; _0x57475e++) this['fruits'][_0x57475e]['draw'](SPRITE['FRUIT']);
}

function draw_tomato() {
    if (this['info'] < 0xa) return;
    ctx['save'](), ctx['translate'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']), ctx['rotate'](this['angle']);
    if (this['hit']['update']) {
        if (this['hit']['anim']['update']() && this['hit']['anim']['o'] == ![]) this['hit']['update'] = ![];
        var _0x345852 = (0x1 - this['hit']['anim']['v']) * delta * 0x258 * scale,
            _0x49ad5b = Math['cos'](this['hit']['angle'] - this['angle']) * _0x345852,
            _0x1439be = Math['sin'](this['hit']['angle'] - this['angle']) * _0x345852;
    } else var _0x49ad5b = 0x0,
        _0x1439be = 0x0;;
    this['ground']['update']();
    var _0xf66bd6 = sprite[SPRITE['PLANT_TOMATO']][world['time']],
        _0x1c0aa1 = -_0xf66bd6['width'] * this['ground']['v'],
        _0x20cac2 = -_0xf66bd6['height'] * this['ground']['v'];
    ctxDrawImage(ctx, _0xf66bd6, -_0x1c0aa1 / 0x2 + _0x49ad5b, -_0x20cac2 / 0x2 + _0x1439be, _0x1c0aa1, _0x20cac2), ctx['restore']();
}

function draw_tomato_fruit() {
    if (this['info'] === 0xa) return;
    var _0x5143d6 = this['info'] & 0xf;
    for (var _0x1437f5 = 0x0; _0x1437f5 < _0x5143d6; _0x1437f5++) this['fruits'][_0x1437f5]['draw'](SPRITE['TOMATO'], this['x'], this['y']);
    ctx['save'](), ctx['translate'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']), ctx['rotate'](this['angle']);
    if (this['hit']['update']) {
        if (this['hit']['anim']['update']() && this['hit']['anim']['o'] == ![]) this['hit']['update'] = ![];
        var _0xbe35fa = (0x1 - this['hit']['anim']['v']) * delta * 0x258 * scale,
            _0xfbcdb8 = Math['cos'](this['hit']['angle'] - this['angle']) * _0xbe35fa,
            _0x50c6a5 = Math['sin'](this['hit']['angle'] - this['angle']) * _0xbe35fa;
    } else var _0xfbcdb8 = 0x0,
        _0x50c6a5 = 0x0;;
    if (this['info'] & 0x10) var _0x1f434e = sprite[SPRITE['DRIED_TOMATO_MINI']][world['time']];
    else var _0x1f434e = sprite[SPRITE['TOMATO_MINI']][world['time']];
    ctxDrawImage(ctx, _0x1f434e, -_0x1f434e['width'] / 0x2 + _0xfbcdb8, -_0x1f434e['width'] / 0x2 + _0x50c6a5), ctx['restore']();
}

function draw_furnace() {
    ctx['save'](), ctx['translate'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']), ctx['rotate'](this['angle']);
    if (this['hit']['update']) {
        if (this['hit']['anim']['update']() && this['hit']['anim']['o'] == ![]) this['hit']['update'] = ![];
        var _0x12ec95 = (0x1 - this['hit']['anim']['v']) * delta * 0x258 * scale,
            _0x32d844 = Math['cos'](this['hit']['angle'] - this['angle']) * _0x12ec95,
            _0x5079fb = Math['sin'](this['hit']['angle'] - this['angle']) * _0x12ec95;
    } else var _0x32d844 = 0x0,
        _0x5079fb = 0x0;;
    if (this['action'] == 0x2) img = sprite[SPRITE['FURNACE_ON']][world['time']];
    else img = sprite[SPRITE['FURNACE_OFF']][world['time']];
    ctxDrawImage(ctx, img, -img['width'] / 0x2 + _0x32d844, -img['height'] / 0x2 + _0x5079fb), ctx['restore'](), this['info'] && (ctx['save'](), ctx['font'] = '20px\x20Baloo\x20Paaji', ctx['strokeStyle'] = 'black', ctx['lineWidth'] = 0x7, ctx['strokeText'](this['info'] + '個:' + this['info'] * 0x5 + '秒', user['cam']['x'] + this['x'] - 0xf, user['cam']['y'] + this['y']), ctx['fillStyle'] = 'white', ctx['fillText'](this['info'] + '個:' + this['info'] * 0x5 + '秒', user['cam']['x'] + this['x'] - 0xf, user['cam']['y'] + this['y']), ctx['restore']());
}

function draw_furnace_ground() {
    ctx['save'](), ctx['translate'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']), ctx['rotate'](this['angle']), this['ground']['update'](), ctx['globalAlpha'] = 0.3;
    var _0x25d14b = sprite[SPRITE['GROUND_FIRE']][world['time']],
        _0x15ea70 = -_0x25d14b['width'] * this['ground']['v'],
        _0x25251a = -_0x25d14b['height'] * this['ground']['v'];
    ctxDrawImage(ctx, _0x25d14b, -_0x15ea70 / 0x2, -_0x25251a / 0x2, _0x15ea70, _0x25251a), ctx['globalAlpha'] = 0x1, ctx['restore']();
}

function draw_bread_oven_smog() {
    ctx['save'](), ctx['translate'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']), ctx['rotate'](this['angle']);
    if (this['info'] & 0x1f && this['info'] & 0x3e0 && (this['info'] & 0x7c00) != 0x7c00 && (this['smog']['length'] == 0x0 || this['smog'][this['smog']['length'] - 0x1] <= SPRITE['SMOG_PUSH'])) this['smog']['push'](SPRITE['SMOG']);
    for (var _0x4d39cd = 0x0; _0x4d39cd < this['smog']['length']; _0x4d39cd++) {
        this['smog'][_0x4d39cd] = Math['max'](0x0, this['smog'][_0x4d39cd] - delta * SPRITE['SMOG_SPEED']), ctx['globalAlpha'] = this['smog'][_0x4d39cd] / 1.3;
        var _0x526868 = (0x1 - this['smog'][_0x4d39cd]) * 0x28,
            _0x4045a3 = (0x1 - this['smog'][_0x4d39cd]) * 0x23 + 0xa;
        circle(ctx, -0x44 * scale + Math['cos'](-this['angle'] - Math['PI'] / 0x2) * _0x526868, -0x14 * scale + Math['sin'](-this['angle'] - Math['PI'] / 0x2) * _0x526868, _0x4045a3), fill_path(ctx, '#333333');
    }
    ctx['globalAlpha'] = 0x1;
    if (this['smog']['length'] > 0x0 && this['smog'][0x0] === 0x0) this['smog']['shift']();
    ctx['restore']();
    if (Settings['AutoBreadTake']['e'] || Settings['AutoBreadPut']['e'] || Settings['AutoSteal']['e']) {
        let _0x5385e1 = world['fast_units'][user['uid']];
        if (_0x5385e1) {
            if (dist2dSQRT(_0x5385e1, this) < 0x12c) {
                Settings['AutoBreadPut']['e'] && (client['socket']['send'](JSON['stringify']([0x19, 0x1f, this['pid'], this['id']])), client['socket']['send'](JSON['stringify']([0x18, 0x1f, this['pid'], this['id']])));;
                if (Settings['AutoBreadTake']['e'] || Settings['AutoSteal']['e']) client['socket']['send'](JSON['stringify']([0x1a, this['pid'], this['id']]));
            };
        };
    };
}

function draw_fire_ground(_0x200994) {
    ctx['save'](), ctx['translate'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']), ctx['rotate'](this['angle']), this['ground']['update'](), ctx['globalAlpha'] = 0.3;
    var _0x4ffae4 = sprite[SPRITE['GROUND_FIRE']][world['time']],
        _0x32e8da = -_0x4ffae4['width'] * this['ground']['v'],
        _0x29f6a0 = -_0x4ffae4['height'] * this['ground']['v'];
    ctxDrawImage(ctx, _0x4ffae4, -_0x32e8da / 0x2, -_0x29f6a0 / 0x2, _0x32e8da, _0x29f6a0), ctx['globalAlpha'] = 0x1;
    if (this['hit']['update']) {
        if (this['hit']['anim']['update']() && this['hit']['anim']['o'] == ![]) this['hit']['update'] = ![];
        var _0xa5720c = (0x1 - this['hit']['anim']['v']) * delta * 0x258 * scale,
            _0x2a64dc = Math['cos'](this['hit']['angle'] - this['angle']) * _0xa5720c,
            _0x2107bd = Math['sin'](this['hit']['angle'] - this['angle']) * _0xa5720c;
    } else var _0x2a64dc = 0x0,
        _0x2107bd = 0x0;;
    _0x4ffae4 = sprite[_0x200994][world['time']], ctxDrawImage(ctx, _0x4ffae4, -_0x4ffae4['width'] / 0x2 + _0x2a64dc, -_0x4ffae4['height'] / 0x2 + _0x2107bd), ctx['restore']();
}

function draw_sign() {
    ctx['save'](), ctx['translate'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']), ctx['rotate'](this['angle']);
    if (this['hit']['update']) {
        if (this['hit']['anim']['update']() && this['hit']['anim']['o'] == ![]) this['hit']['update'] = ![];
        var _0x4e14ed = (0x1 - this['hit']['anim']['v']) * delta * 0x258 * scale,
            _0x50cda2 = Math['cos'](this['hit']['angle'] - this['angle']) * _0x4e14ed,
            _0x4deeda = Math['sin'](this['hit']['angle'] - this['angle']) * _0x4e14ed;
    } else var _0x50cda2 = 0x0,
        _0x4deeda = 0x0;;
    if (this['info'] === 0x0) img = sprite[SPRITE['SIGN']][world['time']];
    else img = sprite[SPRITE['SYMBOLS']][world['time']][this['info'] - 0x1];
    ctxDrawImage(ctx, img, -img['width'] / 0x2 + _0x50cda2, -img['height'] / 0x2 + _0x4deeda), ctx['restore']();
};

function draw_bread_oven() {
    ctx['save'](), ctx['translate'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']), ctx['rotate'](this['angle']);
    if (this['hit']['update']) {
        if (this['hit']['anim']['update']() && this['hit']['anim']['o'] == ![]) this['hit']['update'] = ![];
        var _0x406d14 = (0x1 - this['hit']['anim']['v']) * delta * 0x258 * scale,
            _0x5a791f = Math['cos'](this['hit']['angle'] - this['angle']) * _0x406d14,
            _0x4c0162 = Math['sin'](this['hit']['angle'] - this['angle']) * _0x406d14;
    } else var _0x5a791f = 0x0,
        _0x4c0162 = 0x0;;
    if (this['info'] & 0x1f && this['info'] & 0x3e0 && (this['info'] & 0x7c00) != 0x7c00) {
        _0x4caef7 = sprite[SPRITE['BREAD_OVEN_ON']][world['time']], ctxDrawImage(ctx, _0x4caef7, -_0x4caef7['width'] / 0x2 + _0x5a791f, -_0x4caef7['height'] / 0x2 + _0x4c0162), this['up']['update']();
        var _0x4caef7 = sprite[SPRITE['BREAD_LIGHT_UP']][world['time']],
            _0x593702 = -_0x4caef7['width'] * this['up']['v'],
            _0x5da36c = -_0x4caef7['height'] * this['up']['v'];
        ctxDrawImage(ctx, _0x4caef7, -_0x593702 / 0x2 + 0x1 * scale, -_0x5da36c / 0x2 + 0x3 * scale, _0x593702, _0x5da36c);
    } else _0x4caef7 = sprite[SPRITE['BREAD_OVEN_OFF']][world['time']], ctxDrawImage(ctx, _0x4caef7, -_0x4caef7['width'] / 0x2 + _0x5a791f, -_0x4caef7['height'] / 0x2 + _0x4c0162);
    ctx['restore']();
    this['info'] && ctx['drawImage'](this['img']['canvas'], user['cam']['x'] + this['x'] - 0x21, user['cam']['y'] + this['y'] - 0x2f);;
}

function draw_windmill_wings() {
    if (this['hit']['update']) var _0x18c45c = (0x1 - this['hit']['anim']['v']) * delta * 0x258 * scale,
        _0x6a1cc = Math['cos'](this['hit']['angle'] - this['angle']) * _0x18c45c,
        _0x3e68a8 = Math['sin'](this['hit']['angle'] - this['angle']) * _0x18c45c;
    else var _0x6a1cc = 0x0,
        _0x3e68a8 = 0x0;;
    if (this['info'] & 0xff && (this['info'] & 0xff00) != 0xff00) this['rotate'] = (this['rotate'] + delta * 0.5) % (Math['PI'] * 0x2);
    ctx['save'](), ctx['translate'](user['cam']['x'] + this['x'] + _0x6a1cc, user['cam']['y'] + this['y'] + _0x3e68a8), ctx['save'](), ctx['rotate'](this['rotate']), img = sprite[SPRITE['WINDMILL_WINGS']][world['time']], ctxDrawImage(ctx, img, -img['width'] / 0x2, -img['height'] / 0x2), ctx['restore'](), ctx['save'](), ctx['rotate'](this['angl']), img = sprite[SPRITE['WINDMILL_HEAD']][world['time']], ctxDrawImage(ctx, img, -img['width'] / 0x2, -img['height'] / 0x2), ctx['restore'](), ctx['restore']();
    this['info'] && ctx['drawImage'](this['img']['canvas'], user['cam']['x'] + this['x'] - 0x1e, user['cam']['y'] + this['y'] - 0x28);;
    if (Settings['AutoBreadTake']['e'] || Settings['AutoBreadPut']['e'] || Settings['AutoSteal']['e']) {
        let _0x3404a0 = world['fast_units'][user['uid']];
        if (_0x3404a0) {
            if (dist2dSQRT(_0x3404a0, this) < 0x12c) {
                Settings['AutoBreadPut']['e'] && client['socket']['send'](JSON['stringify']([0x16, 0xff, this['pid'], this['id']]));;
                if (Settings['AutoBreadTake']['e'] || Settings['AutoSteal']['e']) client['socket']['send'](JSON['stringify']([0x17, this['pid'], this['id']]));
            };
        };
    };
}

function draw_extractor_stone() {
    if (this['hit']['update']) {
        if (this['hit']['anim']['update']() && this['hit']['anim']['o'] == ![]) this['hit']['update'] = ![];
        var _0x1043b5 = (0x1 - this['hit']['anim']['v']) * delta * 0x258 * scale,
            _0x5b8445 = Math['cos'](this['hit']['angle'] - this['angle']) * _0x1043b5,
            _0x3b2245 = Math['sin'](this['hit']['angle'] - this['angle']) * _0x1043b5;
    } else var _0x5b8445 = 0x0,
        _0x3b2245 = 0x0;;
    ctx['save']();
    this['info'] & 0xff && (this['info'] & 0xff00) != 0xff00 && (_0x5b8445 += Math['random']() * 0x2 - 0x1, _0x3b2245 += Math['random']() * 0x2 - 0x1);
    ctx['translate'](user['cam']['x'] + this['x'] + _0x5b8445, user['cam']['y'] + this['y'] + _0x3b2245), ctx['rotate'](this['angle']), img = sprite[SPRITE['EXTRACTOR_MACHINE_STONE']][world['time']], ctxDrawImage(ctx, img, -img['width'] / 0x2, -img['height'] / 0x2);
    if (this['info'] & 0xff && (this['info'] & 0xff00) != 0xff00) this['rotate'] = (this['rotate'] + delta * 0x3) % (Math['PI'] * 0x2);
    ctx['rotate'](this['rotate']), img = sprite[SPRITE['EXTRACTOR_MACHINE0_STONE']][world['time']], ctxDrawImage(ctx, img, -img['width'] / 0x2, -img['height'] / 0x2), ctx['restore']();
    this['info'] && ctx['drawImage'](this['img']['canvas'], user['cam']['x'] + this['x'] - 0x1e, user['cam']['y'] + this['y'] - 0x28);;
}

function draw_extractor_gold() {
    if (this['hit']['update']) {
        if (this['hit']['anim']['update']() && this['hit']['anim']['o'] == ![]) this['hit']['update'] = ![];
        var _0x3aebe6 = (0x1 - this['hit']['anim']['v']) * delta * 0x258 * scale,
            _0x10744e = Math['cos'](this['hit']['angle'] - this['angle']) * _0x3aebe6,
            _0x583df1 = Math['sin'](this['hit']['angle'] - this['angle']) * _0x3aebe6;
    } else var _0x10744e = 0x0,
        _0x583df1 = 0x0;;
    ctx['save']();
    this['info'] & 0xff && (this['info'] & 0xff00) != 0xff00 && (_0x10744e += Math['random']() * 0x2 - 0x1, _0x583df1 += Math['random']() * 0x2 - 0x1);
    ctx['translate'](user['cam']['x'] + this['x'] + _0x10744e, user['cam']['y'] + this['y'] + _0x583df1), ctx['rotate'](this['angle']), img = sprite[SPRITE['EXTRACTOR_MACHINE_GOLD']][world['time']], ctxDrawImage(ctx, img, -img['width'] / 0x2, -img['height'] / 0x2);
    if (this['info'] & 0xff && (this['info'] & 0xff00) != 0xff00) this['rotate'] = (this['rotate'] + delta * 0x3) % (Math['PI'] * 0x2);
    ctx['rotate'](this['rotate']), img = sprite[SPRITE['EXTRACTOR_MACHINE0_GOLD']][world['time']], ctxDrawImage(ctx, img, -img['width'] / 0x2, -img['height'] / 0x2), ctx['restore']();
    this['info'] && ctx['drawImage'](this['img']['canvas'], user['cam']['x'] + this['x'] - 0x1e, user['cam']['y'] + this['y'] - 0x28);;
}

function draw_extractor_diamond() {
    if (this['hit']['update']) {
        if (this['hit']['anim']['update']() && this['hit']['anim']['o'] == ![]) this['hit']['update'] = ![];
        var _0x32d7d6 = (0x1 - this['hit']['anim']['v']) * delta * 0x258 * scale,
            _0x9ff7ee = Math['cos'](this['hit']['angle'] - this['angle']) * _0x32d7d6,
            _0x334e71 = Math['sin'](this['hit']['angle'] - this['angle']) * _0x32d7d6;
    } else var _0x9ff7ee = 0x0,
        _0x334e71 = 0x0;;
    ctx['save']();
    this['info'] & 0xff && (this['info'] & 0xff00) != 0xff00 && (_0x9ff7ee += Math['random']() * 0x2 - 0x1, _0x334e71 += Math['random']() * 0x2 - 0x1);
    ctx['translate'](user['cam']['x'] + this['x'] + _0x9ff7ee, user['cam']['y'] + this['y'] + _0x334e71), ctx['rotate'](this['angle']), img = sprite[SPRITE['EXTRACTOR_MACHINE_DIAMOND']][world['time']], ctxDrawImage(ctx, img, -img['width'] / 0x2, -img['height'] / 0x2);
    if (this['info'] & 0xff && (this['info'] & 0xff00) != 0xff00) this['rotate'] = (this['rotate'] + delta * 0x3) % (Math['PI'] * 0x2);
    ctx['rotate'](this['rotate']), img = sprite[SPRITE['EXTRACTOR_MACHINE0_DIAMOND']][world['time']], ctxDrawImage(ctx, img, -img['width'] / 0x2, -img['height'] / 0x2), ctx['restore']();
    this['info'] && ctx['drawImage'](this['img']['canvas'], user['cam']['x'] + this['x'] - 0x1e, user['cam']['y'] + this['y'] - 0x28);;
    if (Settings['AutoExtTake']['e'] || Settings['AutoExtPut']['e'] || Settings['AutoSteal']['e']) {
        let _0x195135 = world['fast_units'][user['uid']];
        if (_0x195135) {
            if (dist2dSQRT(_0x195135, this) < 0x12c) {
                Settings['AutoExtPut']['e'] && client['socket']['send'](JSON['stringify']([0x26, 0xff, this['pid'], this['id'], 0x1a]));;
                if (Settings['AutoExtTake']['e'] || Settings['AutoSteal']['e']) client['socket']['send'](JSON['stringify']([0x25, this['pid'], this['id'], 0x1a]));
            };
        };
    };
}

function draw_extractor_amethyst() {
    if (this['hit']['update']) {
        if (this['hit']['anim']['update']() && this['hit']['anim']['o'] == ![]) this['hit']['update'] = ![];
        var _0x16efde = (0x1 - this['hit']['anim']['v']) * delta * 0x258 * scale,
            _0x5a4376 = Math['cos'](this['hit']['angle'] - this['angle']) * _0x16efde,
            _0x24fe35 = Math['sin'](this['hit']['angle'] - this['angle']) * _0x16efde;
    } else var _0x5a4376 = 0x0,
        _0x24fe35 = 0x0;;
    ctx['save']();
    this['info'] & 0xff && (this['info'] & 0xff00) != 0xff00 && (_0x5a4376 += Math['random']() * 0x2 - 0x1, _0x24fe35 += Math['random']() * 0x2 - 0x1);
    ctx['translate'](user['cam']['x'] + this['x'] + _0x5a4376, user['cam']['y'] + this['y'] + _0x24fe35), ctx['rotate'](this['angle']), img = sprite[SPRITE['EXTRACTOR_MACHINE_AMETHYST']][world['time']], ctxDrawImage(ctx, img, -img['width'] / 0x2, -img['height'] / 0x2);
    if (this['info'] & 0xff && (this['info'] & 0xff00) != 0xff00) this['rotate'] = (this['rotate'] + delta * 0x3) % (Math['PI'] * 0x2);
    ctx['rotate'](this['rotate']), img = sprite[SPRITE['EXTRACTOR_MACHINE0_AMETHYST']][world['time']], ctxDrawImage(ctx, img, -img['width'] / 0x2, -img['height'] / 0x2), ctx['restore']();
    this['info'] && ctx['drawImage'](this['img']['canvas'], user['cam']['x'] + this['x'] - 0x1e, user['cam']['y'] + this['y'] - 0x28);;
    if (Settings['AutoExtTake']['e'] || Settings['AutoExtPut']['e'] || Settings['AutoSteal']['e']) {
        let _0x270bfc = world['fast_units'][user['uid']];
        if (_0x270bfc) {
            if (dist2dSQRT(_0x270bfc, this) < 0x12c) {
                Settings['AutoExtPut']['e'] && client['socket']['send'](JSON['stringify']([0x26, 0xff, this['pid'], this['id'], 0x1b]));;
                if (Settings['AutoExtTake']['e'] || Settings['AutoSteal']['e']) client['socket']['send'](JSON['stringify']([0x25, this['pid'], this['id'], 0x1b]));
            };
        };
    };
}

function draw_extractor_reidite() {
    if (this['hit']['update']) {
        if (this['hit']['anim']['update']() && this['hit']['anim']['o'] == ![]) this['hit']['update'] = ![];
        var _0x24669b = (0x1 - this['hit']['anim']['v']) * delta * 0x258 * scale,
            _0x1f6766 = Math['cos'](this['hit']['angle'] - this['angle']) * _0x24669b,
            _0x3ddc22 = Math['sin'](this['hit']['angle'] - this['angle']) * _0x24669b;
    } else var _0x1f6766 = 0x0,
        _0x3ddc22 = 0x0;;
    ctx['save']();
    this['info'] & 0xff && (this['info'] & 0xff00) != 0xff00 && (_0x1f6766 += Math['random']() * 0x2 - 0x1, _0x3ddc22 += Math['random']() * 0x2 - 0x1);
    ctx['translate'](user['cam']['x'] + this['x'] + _0x1f6766, user['cam']['y'] + this['y'] + _0x3ddc22), ctx['rotate'](this['angle']), img = sprite[SPRITE['EXTRACTOR_MACHINE_REIDITE']][world['time']], ctxDrawImage(ctx, img, -img['width'] / 0x2, -img['height'] / 0x2);
    if (this['info'] & 0xff && (this['info'] & 0xff00) != 0xff00) this['rotate'] = (this['rotate'] + delta * 0x3) % (Math['PI'] * 0x2);
    ctx['rotate'](this['rotate']), img = sprite[SPRITE['EXTRACTOR_MACHINE0_REIDITE']][world['time']], ctxDrawImage(ctx, img, -img['width'] / 0x2, -img['height'] / 0x2), ctx['restore']();
    this['info'] && ctx['drawImage'](this['img']['canvas'], user['cam']['x'] + this['x'] - 0x1e, user['cam']['y'] + this['y'] - 0x28);;
    if (Settings['AutoExtTake']['e'] || Settings['AutoExtPut']['e'] || Settings['AutoSteal']['e']) {
        let _0x10a0d1 = world['fast_units'][user['uid']];
        if (_0x10a0d1) {
            if (dist2dSQRT(_0x10a0d1, this) < 0x12c) {
                Settings['AutoExtPut']['e'] && client['socket']['send'](JSON['stringify']([0x26, 0xff, this['pid'], this['id'], 0x1c]));;
                if (Settings['AutoExtTake']['e'] || Settings['AutoSteal']['e']) client['socket']['send'](JSON['stringify']([0x25, this['pid'], this['id'], 0x1c]));
            };
        };
    };
}

function draw_windmill_head() {
    if (this['hit']['update']) {
        if (this['hit']['anim']['update']() && this['hit']['anim']['o'] == ![]) this['hit']['update'] = ![];
        var _0x10922d = (0x1 - this['hit']['anim']['v']) * delta * 0x258 * scale,
            _0x234b34 = Math['cos'](this['hit']['angle'] - this['angle']) * _0x10922d,
            _0x4257f6 = Math['sin'](this['hit']['angle'] - this['angle']) * _0x10922d;
    } else var _0x234b34 = 0x0,
        _0x4257f6 = 0x0;;
    ctx['save'](), ctx['translate'](user['cam']['x'] + this['x'] + _0x234b34, user['cam']['y'] + this['y'] + _0x4257f6), ctx['rotate'](this['angle']), img = sprite[SPRITE['WINDMILL']][world['time']], ctxDrawImage(ctx, img, -img['width'] / 0x2, -img['height'] / 0x2), ctx['restore']();
}

function draw_emerald_machine() {
    if (this['hit']['update']) {
        if (this['hit']['anim']['update']() && this['hit']['anim']['o'] == ![]) this['hit']['update'] = ![];
        var _0x25e6b3 = (0x1 - this['hit']['anim']['v']) * delta * 0x258 * scale,
            _0x4138f1 = Math['cos'](this['hit']['angle'] - this['angle']) * _0x25e6b3,
            _0x45415e = Math['sin'](this['hit']['angle'] - this['angle']) * _0x25e6b3;
    } else var _0x4138f1 = 0x0,
        _0x45415e = 0x0;;
    this['rotate1'] = (this['rotate1'] + delta * 0x3) % (Math['PI'] * 0x2), this['rotate2'] = (this['rotate2'] - delta * 0x3) % (Math['PI'] * 0x2), ctx['save'](), ctx['translate'](user['cam']['x'] + this['x'] + _0x4138f1, user['cam']['y'] + this['y'] + _0x45415e), ctx['save'](), ctx['rotate'](this['angle']), img = sprite[SPRITE['EMERALD_MACHINE']][world['time']], ctxDrawImage(ctx, img, -img['width'] / 0x2, -img['height'] / 0x2), ctx['restore'](), ctx['save'](), ctx['rotate'](this['rotate1']), img = sprite[SPRITE['EMERALD_MACHINE_ROTATE']][world['time']], ctxDrawImage(ctx, img, -img['width'] / 0x2, -img['height'] / 0x2), ctx['restore'](), ctx['save'](), ctx['rotate'](this['rotate2']), img = sprite[SPRITE['EMERALD_MACHINE_HOLE']][world['time']], ctxDrawImage(ctx, img, -img['width'] / 0x2, -img['height'] / 0x2), ctx['restore'](), ctx['restore']();
}

function draw_resurrection() {
    if (this['hit']['update']) {
        if (this['hit']['anim']['update']() && this['hit']['anim']['o'] == ![]) this['hit']['update'] = ![];
        var _0x4ef119 = (0x1 - this['hit']['anim']['v']) * delta * 0x258 * scale,
            _0x5be18a = Math['cos'](this['hit']['angle'] - this['angle']) * _0x4ef119,
            _0x10d43b = Math['sin'](this['hit']['angle'] - this['angle']) * _0x4ef119;
    } else var _0x5be18a = 0x0,
        _0x10d43b = 0x0;;
    this['rotate1'] = (this['rotate1'] + delta * 0x3) % (Math['PI'] * 0x2), this['rotate2'] = (this['rotate2'] - delta * 0x3) % (Math['PI'] * 0x2), ctx['save'](), ctx['translate'](user['cam']['x'] + this['x'] + _0x5be18a, user['cam']['y'] + this['y'] + _0x10d43b), ctx['save'](), ctx['rotate'](this['angle']), img = sprite[SPRITE['RESURRECTION']][world['time']], ctxDrawImage(ctx, img, -img['width'] / 0x2, -img['height'] / 0x2), ctx['restore'](), ctx['save'](), ctx['rotate'](this['rotate1']), img = sprite[SPRITE['RESURRECTION_ROTATE']][world['time']], ctxDrawImage(ctx, img, -img['width'] / 0x2, -img['height'] / 0x2), ctx['restore'](), ctx['save'](), ctx['rotate'](this['rotate2']), img = sprite[SPRITE['RESURRECTION_HOLE']][world['time']], ctxDrawImage(ctx, img, -img['width'] / 0x2, -img['height'] / 0x2), ctx['restore'](), ctx['restore']();
}

function draw_emerald_machine_halo() {
    ctx['save'](), ctx['translate'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']), ctx['rotate'](this['angle']), this['halo']['update'](), img = sprite[SPRITE['EMERALD_MACHINE_GROUND']][world['time']], w = -img['width'] * this['halo']['v'], h = -img['height'] * this['halo']['v'], ctxDrawImage(ctx, img, -w / 0x2, -h / 0x2, w, h), ctx['restore']();
}

function draw_resurrection_halo() {
    ctx['save'](), ctx['translate'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']), ctx['rotate'](this['angle']), this['halo']['update'](), img = sprite[SPRITE['RESURRECTION_GROUND']][world['time']], w = -img['width'] * this['halo']['v'], h = -img['height'] * this['halo']['v'], ctxDrawImage(ctx, img, -w / 0x2, -h / 0x2, w, h), ctx['restore']();
}

function draw_furnace_halo() {
    ctx['save'](), ctx['translate'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']), ctx['rotate'](this['angle']), this['halo']['update'](), img = sprite[SPRITE['HALO_FIRE']][world['time']], w = -img['width'] * this['halo']['v'], h = -img['height'] * this['halo']['v'], ctxDrawImage(ctx, img, -w / 0x2, -h / 0x2, w, h), ctx['restore']();
}

function draw_fire_halo() {
    ctx['save'](), ctx['translate'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']), ctx['rotate'](this['angle']), this['fire']['update'](), img = sprite[SPRITE['FIRE']][world['time']], w = -img['width'] * this['fire']['v'], h = -img['height'] * this['fire']['v'], ctxDrawImage(ctx, img, -w / 0x2, -h / 0x2, w, h), this['halo']['update'](), img = sprite[SPRITE['HALO_FIRE']][world['time']], w = -img['width'] * this['halo']['v'], h = -img['height'] * this['halo']['v'], ctxDrawImage(ctx, img, -w / 0x2, -h / 0x2, w, h), ctx['restore']();
}

function draw_player_effect(_0x3eaf71) {
    if (_0x3eaf71['right'] >= 0x0) switch (_0x3eaf71['right']) {
        case SPRITE['WATERING_CAN_FULL']:
            ctx['save']();
            var _0x56bb14 = -0x3 * _0x3eaf71['attack']['v'] / Math['PI'];
            if (_0x3eaf71['attack']['o']) var _0x530039 = -Math['PI'] / 0x3 - (Math['PI'] / 0x3 + _0x3eaf71['attack']['v']) / 0x3;
            else var _0x530039 = _0x3eaf71['attack']['v'];
            ctx['rotate'](_0x3eaf71['angle'] - Math['PI'] / 0x2 + _0x530039), ctx['globalAlpha'] = _0x56bb14 / 1.2, circle(ctx, -0x28 * scale, 0x5a * scale, 0x5 * scale), fill_path(ctx, '#0B6A84'), ctx['globalAlpha'] = _0x56bb14 / 1.2, circle(ctx, -0x34 * scale, 0x64 * scale, 0x8 * scale), fill_path(ctx, '#0B6A84'), ctx['globalAlpha'] = _0x56bb14 / 1.2, circle(ctx, -0x1e * scale, 0x5f * scale, 0x4 * scale), fill_path(ctx, '#0B6A84'), ctx['globalAlpha'] = 0x1, ctx['restore']();
            break;
        case SPRITE['SHOVEL']:
        case SPRITE['SHOVEL_GOLD']:
        case SPRITE['SHOVEL_DIAMOND']:
        case SPRITE['SHOVEL_AMETHYST']:
            if (_0x3eaf71['fly'] === 0x1) break;
            if (_0x3eaf71['dist_winter'] > 0x0) var _0x29a347 = SPRITE['ICE_SHOVEL_CO'][world['time']];
            else {
                if (_0x3eaf71['dist_sand'] > 0x0 || _0x3eaf71['dist_desert'] > 0x0) var _0x29a347 = SPRITE['SAND_SHOVEL_CO'][world['time']];
                else var _0x29a347 = SPRITE['GRD_SHOVEL_CO'][world['time']];
            }
            var _0x56bb14 = -0x3 * _0x3eaf71['attack']['v'] / Math['PI'];
            if (_0x3eaf71['attack']['o']) var _0x530039 = Math['max'](0.5 - _0x56bb14 / 0x2 + 0.5, 0x0);
            else var _0x530039 = Math['max'](_0x56bb14 / 0x2, 0x0);
            if (_0x530039 === 0x0) _0x3eaf71['angle_init'] = _0x3eaf71['angle'];
            ctx['save'](), ctx['rotate'](_0x3eaf71['angle_init'] - Math['PI'] / 0x2), ctx['globalAlpha'] = _0x56bb14;
            var _0x4ebaef = 0x19 * scale + _0x530039 * 0x19;
            circle(ctx, _0x4ebaef, 0x50 * scale, 0xf * scale), fill_path(ctx, _0x29a347), circle(ctx, -_0x4ebaef, 0x50 * scale, 0xf * scale), fill_path(ctx, _0x29a347), ctx['globalAlpha'] = 0x1, ctx['restore']();
            break;
    }
}

function draw_player_right_stuff_after(_0x2171ff, _0x3733a1, _0x5c635c) {
    if (_0x2171ff >= 0x0) {
        img = sprite[_0x2171ff][world['time']];
        switch (_0x2171ff) {
            case SPRITE['WOOD_SHIELD']:
            case SPRITE['STONE_SHIELD']:
            case SPRITE['GOLD_SHIELD']:
                draw_image_transition_hd(_0x2171ff, img, -img['width'] / 0x4 - scale * (0x0 + _0x3733a1), -img['height'] / 0x4 + scale * (_0x5c635c + 0x23));
                break;
            case SPRITE['DIAMOND_SHIELD']:
                draw_image_transition_hd(_0x2171ff, img, -img['width'] / 0x4 - scale * (0x1 + _0x3733a1), -img['height'] / 0x4 + scale * (_0x5c635c + 0x2d));
                break;
            case SPRITE['AMETHYST_SHIELD']:
            case SPRITE['REIDITE_SHIELD']:
                draw_image_transition_hd(_0x2171ff, img, -img['width'] / 0x4 - scale * (0x1 + _0x3733a1), -img['height'] / 0x4 + scale * (_0x5c635c + 0x28));
                break;
        }
    }
};

function draw_player_right_stuff(_0x4f3950, _0x36d155, _0x1d2ec5) {
    if (_0x4f3950 >= 0x0) {
        img = sprite[_0x4f3950][world['time']];
        switch (_0x4f3950) {
            case SPRITE['PICK']:
            case SPRITE['PICK_GOLD']:
            case SPRITE['PICK_DIAMOND']:
            case SPRITE['PICK_WOOD']:
            case SPRITE['PICK_AMETHYST']:
            case SPRITE['PICK_REIDITE']:
                draw_image_transition(_0x4f3950, img, -img['width'] / 0x2 - scale * (0x2d + _0x36d155), -img['height'] / 0x2 + scale * (_0x1d2ec5 + 0x16));
                break;
            case SPRITE['SWORD_WOOD']:
            case SPRITE['SWORD']:
            case SPRITE['SWORD_GOLD']:
            case SPRITE['SWORD_DIAMOND']:
                draw_image_transition_hd(_0x4f3950, img, -img['width'] / 0x4 - scale * (0x2f + _0x36d155), -img['height'] / 0x4 + scale * (_0x1d2ec5 + 0x2d));
                break;
            case SPRITE['SWORD_AMETHYST']:
                draw_image_transition_hd(_0x4f3950, img, -img['width'] / 0x4 - scale * (0x34 + _0x36d155), -img['height'] / 0x4 + scale * (_0x1d2ec5 + 0x2d));
                break;
            case SPRITE['REIDITE_SWORD']:
                draw_image_transition_hd(_0x4f3950, img, -img['width'] / 0x4 - scale * (0x2f + _0x36d155), -img['height'] / 0x4 + scale * (_0x1d2ec5 + 0x2c));
                break;
            case SPRITE['PIRATE_SWORD']:
                draw_image_transition(_0x4f3950, img, -img['width'] / 0x2 - scale * (0x2f + _0x36d155), -img['height'] / 0x2 + scale * (_0x1d2ec5 + 0x2c));
                break;
            case SPRITE['DRAGON_SWORD']:
                draw_image_transition(_0x4f3950, img, -img['width'] / 0x2 - scale * (0x28 + _0x36d155), -img['height'] / 0x2 + scale * (_0x1d2ec5 + 0x41));
                break;
            case SPRITE['WOOD_SPEAR']:
                draw_image_transition_hd(_0x4f3950, img, -img['width'] / 0x4 - scale * (0x25 + _0x36d155), -img['height'] / 0x4 + scale * (_0x1d2ec5 + 0x55));
                break;
            case SPRITE['REIDITE_SPEAR']:
                draw_image_transition_hd(_0x4f3950, img, -img['width'] / 0x4 - scale * (0x25 + _0x36d155), -img['height'] / 0x4 + scale * (_0x1d2ec5 + 0x55));
                break;
            case SPRITE['PITCHFORK2']:
            case SPRITE['PITCHFORK']:
                draw_image_transition_hd(_0x4f3950, img, -img['width'] / 0x4 - scale * (0x1a + _0x36d155), -img['height'] / 0x4 + scale * (_0x1d2ec5 + 0x4d));
                break;
            case SPRITE['LAVA_SPEAR']:
                draw_image_transition_hd(_0x4f3950, img, -img['width'] / 0x4 - scale * (0x25 + _0x36d155), -img['height'] / 0x4 + scale * (_0x1d2ec5 + 0x55));
                break;
            case SPRITE['LAVA_SWORD']:
                draw_image_transition_hd(_0x4f3950, img, -img['width'] / 0x4 - scale * (0x2f + _0x36d155), -img['height'] / 0x4 + scale * (_0x1d2ec5 + 0x2c));
                break;
            case SPRITE['WOOD_BOW']:
            case SPRITE['STONE_BOW']:
            case SPRITE['GOLD_BOW']:
            case SPRITE['DIAMOND_BOW']:
            case SPRITE['AMETHYST_BOW']:
            case SPRITE['REIDITE_BOW']:
            case SPRITE['DRAGON_BOW']:
                draw_image_transition_hd(_0x4f3950, img, -img['width'] / 0x4 - scale * (0x25 + _0x36d155), -img['height'] / 0x4 + scale * (_0x1d2ec5 + 0x1e));
                break;
            case SPRITE['MACHETE']:
                draw_image_transition_hd(_0x4f3950, img, -img['width'] / 0x4 - scale * (0x2f + _0x36d155), -img['height'] / 0x4 + scale * (_0x1d2ec5 + 0x23));
                break;
            case SPRITE['WAND1']:
            case SPRITE['WAND2']:
                draw_image_transition_hd(_0x4f3950, img, -img['width'] / 0x4 - scale * (0x2f + _0x36d155), -img['height'] / 0x4 + scale * (_0x1d2ec5 + 0x28));
                break;
            case SPRITE['SADDLE']:
                draw_image_transition_hd(_0x4f3950, img, -img['width'] / 0x4 - scale * (0x2f + _0x36d155), -img['height'] / 0x4 + scale * (_0x1d2ec5 + 0x22));
                break;
            case SPRITE['SPEAR']:
            case SPRITE['GOLD_SPEAR']:
            case SPRITE['DIAMOND_SPEAR']:
            case SPRITE['AMETHYST_SPEAR']:
                draw_image_transition_hd(_0x4f3950, img, -img['width'] / 0x4 - scale * (0x25 + _0x36d155), -img['height'] / 0x4 + scale * (_0x1d2ec5 + 0x5a));
                break;
            case SPRITE['CRAB_SPEAR']:
                draw_image_transition_hd(_0x4f3950, img, -img['width'] / 0x4 - scale * (0x28 + _0x36d155), -img['height'] / 0x4 + scale * (_0x1d2ec5 + 0x55));
                break;
            case SPRITE['DRAGON_SPEAR']:
                draw_image_transition(_0x4f3950, img, -img['width'] / 0x2 - scale * (0x27 + _0x36d155), -img['height'] / 0x2 + scale * (_0x1d2ec5 + 0x5a));
                break;
            case SPRITE['HAMMER']:
            case SPRITE['HAMMER_GOLD']:
            case SPRITE['HAMMER_DIAMOND']:
            case SPRITE['HAMMER_AMETHYST']:
            case SPRITE['HAMMER_REIDITE']:
            case SPRITE['SUPER_HAMMER']:
                draw_image_transition(_0x4f3950, img, -img['width'] / 0x2 - scale * (0x2e + _0x36d155), -img['height'] / 0x2 + scale * (_0x1d2ec5 + 0x23));
                break;
            case SPRITE['WATERING_CAN_FULL']:
                draw_image_transition(_0x4f3950, img, -img['width'] / 0x2 - scale * (0x2f + _0x36d155), -img['height'] / 0x2 + scale * (_0x1d2ec5 + 0x36));
                break;
            case SPRITE['SHOVEL']:
            case SPRITE['SHOVEL_GOLD']:
            case SPRITE['SHOVEL_DIAMOND']:
            case SPRITE['SHOVEL_AMETHYST']:
                draw_image_transition(_0x4f3950, img, -img['width'] / 0x2 - scale * (0x2e + _0x36d155), -img['height'] / 0x2 + scale * (_0x1d2ec5 + 0x23));
                break;
            case SPRITE['SPANNER']:
                draw_image_transition(_0x4f3950, img, -img['width'] / 0x2 - scale * (0x2f + _0x36d155), -img['height'] / 0x2 + scale * (_0x1d2ec5 + 0x14));
                break;
        }
    }
}
var draw_player_clothe = function(_0x1aa427) {
    if (_0x1aa427 > 0x0) {
        var _0xd71232 = sprite[_0x1aa427][world['time']];
        switch (_0x1aa427) {
            case SPRITE['WOOD_HELMET']:
                draw_image_transition(_0x1aa427, _0xd71232, -_0xd71232['width'] / 0x2 + 0x2 * scale, -_0xd71232['height'] / 0x2 - scale * 0x5);
                break;
            case SPRITE['EARMUFFS']:
                draw_image_transition(_0x1aa427, _0xd71232, -_0xd71232['width'] / 0x2, -_0xd71232['height'] / 0x2 - scale * 0x12);
                break;
            case SPRITE['COAT']:
                draw_image_transition(_0x1aa427, _0xd71232, -_0xd71232['width'] / 0x2, -_0xd71232['height'] / 0x2 - scale * 0xa);
                break;
            case SPRITE['EXPLORER_HAT']:
                draw_image_transition(_0x1aa427, _0xd71232, -_0xd71232['width'] / 0x2, -_0xd71232['height'] / 0x2 - scale * 0x13);
                break;
            case SPRITE['PIRATE_HAT']:
                draw_image_transition_hd(_0x1aa427, _0xd71232, -_0xd71232['width'] / 0x4, -_0xd71232['height'] / 0x4 - 0x14 * scale);
                break;
            case SPRITE['STONE_HELMET']:
                draw_image_transition(_0x1aa427, _0xd71232, -_0xd71232['width'] / 0x2 - 0x1 * scale, -_0xd71232['height'] / 0x2 - scale * 0x17);
                break;
            case SPRITE['GOLD_HELMET']:
                draw_image_transition(_0x1aa427, _0xd71232, -_0xd71232['width'] / 0x2, -_0xd71232['height'] / 0x2 - scale * 0x5);
                break;
            case SPRITE['DIAMOND_HELMET']:
                draw_image_transition(_0x1aa427, _0xd71232, -_0xd71232['width'] / 0x2, -_0xd71232['height'] / 0x2 - scale * 0x2);
                break;
            case SPRITE['AMETHYST_HELMET']:
                draw_image_transition(_0x1aa427, _0xd71232, -_0xd71232['width'] / 0x2 + 1.5 * scale, -_0xd71232['height'] / 0x2 - 0x1 * scale);
                break;
            case SPRITE['REIDITE_HELMET']:
            case SPRITE['DIAMOND_PROTECTION']:
            case SPRITE['AMETHYST_PROTECTION']:
            case SPRITE['REIDITE_PROTECTION']:
            case SPRITE['TURBAN1']:
            case SPRITE['TURBAN2']:
            case SPRITE['PILOT_HELMET']:
            case SPRITE['LAVA_HELMET']:
            case SPRITE['WITCH']:
            case SPRITE['FUR_HAT']:
            case SPRITE['FLOWER_HAT']:
                draw_image_transition_hd(_0x1aa427, _0xd71232, -_0xd71232['width'] / 0x4, -_0xd71232['height'] / 0x4 + 0x2 * scale);
                break;
            case SPRITE['CHRISTMAS_HAT']:
            case SPRITE['ELF_HAT']:
                draw_image_transition(_0x1aa427, _0xd71232, -_0xd71232['width'] / 0x2 - 0x5 * scale, -_0xd71232['height'] / 0x2 - scale * 0x2);
                break;
            case SPRITE['CAP_SCARF']:
                draw_image_transition(_0x1aa427, _0xd71232, -_0xd71232['width'] / 0x2, -_0xd71232['height'] / 0x2 - scale * 0x2);
                break;
            case SPRITE['WINTER_HOOD']:
                draw_image_transition(_0x1aa427, _0xd71232, -_0xd71232['width'] / 0x2, -_0xd71232['height'] / 0x2 - scale * 0x2);
                break;
            case SPRITE['DIVING_MASK']:
                draw_image_transition(_0x1aa427, _0xd71232, -_0xd71232['width'] / 0x2, -_0xd71232['height'] / 0x2 - scale * 0x2);
                break;
            case SPRITE['SUPER_DIVING_SUIT']:
                draw_image_transition(_0x1aa427, _0xd71232, -_0xd71232['width'] / 0x2 + 0x2 * scale, -_0xd71232['height'] / 0x2);
                break;
            case SPRITE['DRAGON_HELMET']:
                draw_image_transition(_0x1aa427, _0xd71232, -_0xd71232['width'] / 0x2, -_0xd71232['height'] / 0x2 - 0x5 * scale);
                break;
            case SPRITE['CROWN_GREEN']:
            case SPRITE['CROWN_ORANGE']:
            case SPRITE['CROWN_BLUE']:
                draw_image_transition(_0x1aa427, _0xd71232, -_0xd71232['width'] / 0x2 - 0x1 * scale, -_0xd71232['height'] / 0x2);
                break;
            case SPRITE['HOOD']:
                draw_image_transition(_0x1aa427, _0xd71232, -_0xd71232['width'] / 0x2, -_0xd71232['height'] / 0x2 + 0x2 * scale);
                break;
            case SPRITE['PEASANT']:
            case SPRITE['WINTER_PEASANT']:
                draw_image_transition(_0x1aa427, _0xd71232, -_0xd71232['width'] / 0x2, -_0xd71232['height'] / 0x2 + 0x8 * scale);
                break;
            case SPRITE['CROWN_CRAB']:
                draw_image_transition(_0x1aa427, _0xd71232, -_0xd71232['width'] / 0x2, -_0xd71232['height'] / 0x2 - 0x4 * scale);
                break;
        }
    }
};

function draw_vehicle() {
    if (this['ghost'] || this['vehicle'] === 0x0) return;
    if (this['x'] != this['r']['x'] || this['y'] != this['r']['y']) {
        var _0x1bc0f7 = (Utils['get_angle_2'](this['x'], this['y'], this['r']['x'], this['r']['y']) + Math['PI'] / 0x2) % (Math['PI'] * 0x2);
        this['vehicle_fx2'] = Utils['reduceAngle'](_0x1bc0f7, this['vehicle_fx2']), this['vehicle_fx2'] = Utils['lerp'](this['vehicle_fx2'], _0x1bc0f7, 0.018);
    }
    ctx['save'](), ctx['translate'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']), ctx['rotate'](this['vehicle_fx2']), ctx['globalAlpha'] = 0.4;
    if (this['vehicle'] === INV['BOAT']) {
        if (this['speed'] > 0x32 || this['vehicle_fx1'] > 0x0) {
            if (this['speed'] > 0x32) this['vehicle_fx1'] = Math['min'](0x1, this['vehicle_fx1'] + delta);
            else this['vehicle_fx1'] = Math['max'](0x0, this['vehicle_fx1'] - delta);
            ctx['globalAlpha'] = this['vehicle_fx1'];
            var _0x37adb6 = sprite[SPRITE['BOAT_WAVE']][world['time']];
            draw_image_transition_hd(SPRITE['BOAT_WAVE'], _0x37adb6, -_0x37adb6['width'] / 0x4, -_0x37adb6['height'] / 0x4), ctx['globalAlpha'] = 0.4;
        }
        var _0x37adb6 = sprite[SPRITE['BOAT']][world['time']];
        draw_image_transition_hd(SPRITE['BOAT'], _0x37adb6, -_0x37adb6['width'] / 0x4, -_0x37adb6['height'] / 0x4);
    } else {
        if (this['vehicle'] === INV['HAWK']) {
            this['vehicle_fx5'] = Utils['lerp'](this['vehicle_fx5'], this['speed'], 0.018), this['vehicle_fx4']['update']();
            if (this['speed'] > 0x55) this['vehicle_fx1'] = Math['min'](0x1, this['vehicle_fx1'] + delta / 0x4);
            else this['vehicle_fx1'] = Math['max'](0.1, this['vehicle_fx1'] - delta);
            var _0x37adb6 = sprite[SPRITE['HAWK_TAMED']][world['time']];
            draw_image_transition_hd(SPRITE['HAWK_TAMED'], _0x37adb6, -_0x37adb6['width'] / 0x4, -_0x37adb6['height'] / 0x4), _0x37adb6 = sprite[SPRITE['HAWK_WING_LEFT_TAMED']][world['time']], w = -_0x37adb6['width'], h = -_0x37adb6['height'], ctx['save'](), ctx['translate'](-0x14 * scale, -0x14 * scale), ctx['rotate'](this['vehicle_fx4']['v'] * this['vehicle_fx1']), ctxDrawImage(ctx, _0x37adb6, -w / 0x4, -h / 0x4, w / 0x2, h / 0x2), ctx['restore'](), _0x37adb6 = sprite[SPRITE['HAWK_WING_RIGHT_TAMED']][world['time']], ctx['save'](), ctx['translate'](0x14 * scale, -0x14 * scale), ctx['rotate'](-this['vehicle_fx4']['v'] * this['vehicle_fx1']), ctxDrawImage(ctx, _0x37adb6, -w / 0x4, -h / 0x4, w / 0x2, h / 0x2), ctx['restore']();
        } else {
            if (this['vehicle'] === INV['BABY_LAVA']) {
                this['vehicle_fx5'] = Utils['lerp'](this['vehicle_fx5'], this['speed'], 0.018), this['vehicle_fx4']['update']();
                if (this['speed'] > 0x55) this['vehicle_fx1'] = Math['min'](0x1, this['vehicle_fx1'] + delta / 0x4);
                else this['vehicle_fx1'] = Math['max'](0.1, this['vehicle_fx1'] - delta);
                var _0x37adb6 = sprite[SPRITE['BABY_LAVA_TAMED']][world['time']];
                draw_image_transition_hd(SPRITE['BABY_LAVA_TAMED'], _0x37adb6, -_0x37adb6['width'] / 0x4, -_0x37adb6['height'] / 0x4), _0x37adb6 = sprite[SPRITE['BABY_LAVA_WING_LEFT_TAMED']][world['time']], w = -_0x37adb6['width'], h = -_0x37adb6['height'], ctx['save'](), ctx['translate'](-0x28 * scale, -0x2d * scale), ctx['rotate'](this['vehicle_fx4']['v'] * this['vehicle_fx1']), ctxDrawImage(ctx, _0x37adb6, -w / 0x4, -h / 0x4, w / 0x2, h / 0x2), ctx['restore'](), _0x37adb6 = sprite[SPRITE['BABY_LAVA_WING_RIGHT_TAMED']][world['time']], ctx['save'](), ctx['translate'](0x28 * scale, -0x2d * scale), ctx['rotate'](-this['vehicle_fx4']['v'] * this['vehicle_fx1']), ctxDrawImage(ctx, _0x37adb6, -w / 0x4, -h / 0x4, w / 0x2, h / 0x2), ctx['restore']();
            } else {
                if (this['vehicle'] === INV['BABY_DRAGON']) {
                    this['vehicle_fx5'] = Utils['lerp'](this['vehicle_fx5'], this['speed'], 0.018), this['vehicle_fx4']['update']();
                    if (this['speed'] > 0x55) this['vehicle_fx1'] = Math['min'](0x1, this['vehicle_fx1'] + delta / 0x4);
                    else this['vehicle_fx1'] = Math['max'](0.1, this['vehicle_fx1'] - delta);
                    var _0x37adb6 = sprite[SPRITE['BABY_DRAGON_TAMED']][world['time']];
                    draw_image_transition_hd(SPRITE['BABY_DRAGON_TAMED'], _0x37adb6, -_0x37adb6['width'] / 0x4, -_0x37adb6['height'] / 0x4), _0x37adb6 = sprite[SPRITE['BABY_DRAGON_WING_LEFT_TAMED']][world['time']], w = -_0x37adb6['width'], h = -_0x37adb6['height'], ctx['save'](), ctx['translate'](-0x28 * scale, -0x2d * scale), ctx['rotate'](this['vehicle_fx4']['v'] * this['vehicle_fx1']), ctxDrawImage(ctx, _0x37adb6, -w / 0x4, -h / 0x4, w / 0x2, h / 0x2), ctx['restore'](), _0x37adb6 = sprite[SPRITE['BABY_DRAGON_WING_RIGHT_TAMED']][world['time']], ctx['save'](), ctx['translate'](0x28 * scale, -0x2d * scale), ctx['rotate'](-this['vehicle_fx4']['v'] * this['vehicle_fx1']), ctxDrawImage(ctx, _0x37adb6, -w / 0x4, -h / 0x4, w / 0x2, h / 0x2), ctx['restore']();
                } else {
                    if (this['vehicle'] === INV['NIMBUS']) {
                        this['vehicle_fx5'] = Utils['lerp'](this['vehicle_fx5'], this['speed'], 0.018);
                        var _0x37adb6 = sprite[SPRITE['NIMBUS']][world['time']];
                        draw_image_transition_hd(SPRITE['NIMBUS'], _0x37adb6, -_0x37adb6['width'] / 0x4, -_0x37adb6['height'] / 0x4);
                    } else {
                        if (this['vehicle'] === INV['PLANE']) {
                            this['vehicle_fx5'] = Utils['lerp'](this['vehicle_fx5'], this['speed'], 0.018);
                            var _0x37adb6 = sprite[SPRITE['PLANE']][world['time']];
                            draw_image_transition_hd(SPRITE['PLANE'], _0x37adb6, -_0x37adb6['width'] / 0x4, -_0x37adb6['height'] / 0x4);
                        } else {
                            if (this['vehicle'] === INV['SLED']) {
                                var _0x37adb6 = sprite[SPRITE['SLED']][world['time']];
                                draw_image_transition_hd(SPRITE['SLED'], _0x37adb6, -_0x37adb6['width'] / 0x4, -_0x37adb6['height'] / 0x4);
                            } else {
                                if (this['vehicle'] === INV['BABY_MAMMOTH']) {
                                    var _0x37adb6 = sprite[SPRITE['BABY_MAMMOTH_TAMED']][world['time']];
                                    if (this['speed'] > 0x55) this['vehicle_fx1'] = Math['min'](0x1, this['vehicle_fx1'] + delta / 0x4);
                                    else this['vehicle_fx1'] = Math['max'](0x0, this['vehicle_fx1'] - delta);
                                    this['vehicle_fx3'] += delta * 0x3c;
                                    if (this['vehicle_fx3'] > 0x3c) this['vehicle_fx3'] -= 0x3c;
                                    var _0x413304 = this['vehicle_fx1'] * (-0x6 + 0xc * (this['vehicle_fx3'] < 0x1e ? this['vehicle_fx3'] / 0x1e : 0x1 - (this['vehicle_fx3'] - 0x1e) / 0x1e));
                                    draw_image_transition_hd(SPRITE['BABY_MAMMOTH_TAMED'], _0x37adb6, -_0x37adb6['width'] / 0x4, -_0x37adb6['height'] / 0x4 + _0x413304);
                                } else {
                                    if (this['vehicle'] === INV['MOUNT_BOAR']) {
                                        var _0x37adb6 = sprite[SPRITE['BOAR_TAMED']][world['time']];
                                        if (this['speed'] > 0x55) this['vehicle_fx1'] = Math['min'](0x1, this['vehicle_fx1'] + delta / 0x4);
                                        else this['vehicle_fx1'] = Math['max'](0x0, this['vehicle_fx1'] - delta);
                                        this['vehicle_fx3'] += delta * 0x3c;
                                        if (this['vehicle_fx3'] > 0x3c) this['vehicle_fx3'] -= 0x3c;
                                        var _0x413304 = this['vehicle_fx1'] * (-0x6 + 0xc * (this['vehicle_fx3'] < 0x1e ? this['vehicle_fx3'] / 0x1e : 0x1 - (this['vehicle_fx3'] - 0x1e) / 0x1e));
                                        draw_image_transition_hd(SPRITE['BOAR_TAMED'], _0x37adb6, -_0x37adb6['width'] / 0x4, -_0x37adb6['height'] / 0x4 + _0x413304);
                                    } else {
                                        if (this['vehicle'] === INV['CRAB_BOSS']) {
                                            var _0x4e5412 = Math['PI'] / 0x2,
                                                _0x207570 = Math['PI'] / 0x4,
                                                _0x37adb6 = sprite[SPRITE['CRAB_BOSS_TAMED']][world['time']];
                                            if (this['speed'] > 0x55) this['vehicle_fx1'] = Math['min'](0x1, this['vehicle_fx1'] + delta / 0x4);
                                            else this['vehicle_fx1'] = Math['max'](0x0, this['vehicle_fx1'] - delta);
                                            this['vehicle_fx3'] += delta * 0x3c;
                                            if (this['vehicle_fx3'] > 0x3c) this['vehicle_fx3'] -= 0x3c;
                                            var _0x413304 = this['vehicle_fx1'] * (-0x6 + 0xc * (this['vehicle_fx3'] < 0x1e ? this['vehicle_fx3'] / 0x1e : 0x1 - (this['vehicle_fx3'] - 0x1e) / 0x1e));
                                            draw_image_transition_hd(SPRITE['CRAB_BOSS_TAMED'], _0x37adb6, -_0x37adb6['width'] / 0x4 + _0x413304, -_0x37adb6['height'] / 0x4), ctx['restore'](), ctx['save'](), ctx['translate'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']), ctx['rotate'](Math['PI'] + this['vehicle_fx2'] + _0x207570), ctx['translate'](0x78, _0x413304), ctx['rotate'](_0x4e5412), _0x37adb6 = sprite[SPRITE['CRAB_BOSS_CLAW_LEFT']][world['time']], w = -_0x37adb6['width'], h = -_0x37adb6['height'], ctxDrawImage(ctx, _0x37adb6, -w / 0x2, -h / 0x2, w, h), ctx['restore'](), ctx['save'](), ctx['translate'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']), ctx['rotate'](Math['PI'] + this['vehicle_fx2'] + _0x4e5412 + _0x207570), ctx['translate'](0x78, _0x413304), ctx['rotate'](_0x4e5412), _0x37adb6 = sprite[SPRITE['CRAB_BOSS_CLAW_RIGHT']][world['time']], w = -_0x37adb6['width'], h = -_0x37adb6['height'], ctxDrawImage(ctx, _0x37adb6, -w / 0x2, -h / 0x2, w, h);
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    ctx['restore']();
}
__EFFECT_HURT__ = 0x0, __EFFECT_HEAL__ = 0x1, __EFFECT_COLD__ = 0x2, __EFFECT_HUNGER__ = 0x3, __EFFECT_BOX__ = 0x4, __IMAGE_EFFECT__ = [
    [],
    [],
    [],
    [],
    []
], __IMAGE_EFFECT_COLOR__ = ['#BB0000', '#00BB00', '#1CE7E0', '#DBE71C', '#BB0000'];

function get_image_effect(_0x1738d0, _0xc3f665, _0x516a3e) {
    if (_0xc3f665['tryLoad']() !== 0x1) return _0xc3f665;
    var _0x21ee8e = __IMAGE_EFFECT__[_0x516a3e][_0x1738d0];
    if (_0x21ee8e === undefined) {
        _0x21ee8e = document['createElement']('canvas');
        var _0x3f234e = _0x21ee8e['getContext']('2d'),
            _0x12c06b = _0xc3f665['width'],
            _0x4d8bfd = _0xc3f665['height'];
        _0x21ee8e['width'] = _0x12c06b, _0x21ee8e['height'] = _0x4d8bfd, _0x3f234e['drawImage'](_0xc3f665, 0x0, 0x0), _0x3f234e['globalCompositeOperation'] = 'source-in', _0x3f234e['fillStyle'] = __IMAGE_EFFECT_COLOR__[_0x516a3e], _0x3f234e['fillRect'](0x0, 0x0, _0x12c06b, _0x4d8bfd), __IMAGE_EFFECT__[_0x516a3e][_0x1738d0] = _0x21ee8e;
    }
    return _0x21ee8e;
};

function draw_player() {
    var _0x22d7c5 = 0x0;
    switch (this['right']) {
        case SPRITE['WOOD_SHIELD']:
        case SPRITE['STONE_SHIELD']:
        case SPRITE['GOLD_SHIELD']:
        case SPRITE['DIAMOND_SHIELD']:
        case SPRITE['AMETHYST_SHIELD']:
        case SPRITE['REIDITE_SHIELD']:
            var _0x22d7c5 = 0x1;
            break;
    }
    if (this['ghost']) {
        for (var _0x2b4dd3 = 0x0; _0x2b4dd3 < this['bubbles']['length']; _0x2b4dd3++) {
            var _0x6ed0e3 = this['bubbles'][_0x2b4dd3];
            if (_0x6ed0e3['life'] > 0.5) var _0x475f3c = 0x1 - (_0x6ed0e3['life'] - 0.5) * 0x2;
            else var _0x475f3c = _0x6ed0e3['life'] * 0x2;
            ctx['globalAlpha'] = _0x475f3c;
            var _0x1d06a4 = sprite[SPRITE['BUBBLES']][world['time']][_0x6ed0e3['id']];
            ctxDrawImage(ctx, _0x1d06a4, user['cam']['x'] + _0x6ed0e3['x'] - _0x1d06a4['width'] / 0x2, user['cam']['y'] + _0x6ed0e3['y'] - _0x1d06a4['height'] / 0x2), ctx['globalAlpha'] = 0x1;
        }
        ctx['save'](), ctx['font'] = '30px\x20Baloo\x20Paaji', ctx['strokeStyle'] = 'black', ctx['lineWidth'] = 0x7, ctx['strokeText'](Math['floor'](0x3c - (Date['now']() - this['ghosttime']) / 0x3e8) + 0x1, user['cam']['x'] + this['x'] - 0x19, user['cam']['y'] + this['y'] + 0x14), ctx['fillStyle'] = 'white', ctx['fillText'](Math['floor'](0x3c - (Date['now']() - this['ghosttime']) / 0x3e8) + 0x1, user['cam']['x'] + this['x'] - 0x19, user['cam']['y'] + this['y'] + 0x14), ctx['restore']();
        return;
    }
    ctx['save'](), ctx['translate'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']), world['dist_from_biomes'](this);
    this['action'] & STATE['ATTACK'] && draw_player_effect(this);
    ctx['save'](), ctx['rotate'](this['angle'] - Math['PI'] / 0x2);
    if (!(this['action'] & STATE['ATTACK'])) {
        if (this['action'] & STATE['IDLE'] || this['vehicle'] !== 0x0) this['idle']['update']();
        else this['action'] & STATE['WALK'] && this['walk']['update']();
    }
    var _0x48e215 = this['idle']['v'],
        _0x4a0151 = this['walk']['v'],
        _0x5cc63c;
    if (this['clothe'] === SPRITE['WINTER_HOOD']) _0x1d06a4 = sprite[SPRITE['GLOVES_HOOD']][world['time']], _0x5cc63c = SPRITE['GLOVES_HOOD'];
    else {
        if (this['clothe'] === SPRITE['DIAMOND_PROTECTION']) _0x1d06a4 = sprite[SPRITE['GLOVES_DIAMOND_PROTECTION']][world['time']], _0x5cc63c = SPRITE['GLOVES_DIAMOND_PROTECTION'];
        else {
            if (this['clothe'] === SPRITE['AMETHYST_PROTECTION']) _0x1d06a4 = sprite[SPRITE['GLOVES_AMETHYST_PROTECTION']][world['time']], _0x5cc63c = SPRITE['GLOVES_AMETHYST_PROTECTION'];
            else {
                if (this['clothe'] === SPRITE['REIDITE_PROTECTION']) _0x1d06a4 = sprite[SPRITE['GLOVES_REIDITE_PROTECTION']][world['time']], _0x5cc63c = SPRITE['GLOVES_REIDITE_PROTECTION'];
                else this['superzombie'] ? (_0x1d06a4 = sprite[SPRITE['ZOMBIE_HAND']][world['time']], _0x5cc63c = SPRITE['ZOMBIE_HAND']) : (_0x1d06a4 = sprite[SPRITE['HAND']][this['skin']][world['time']], _0x5cc63c = SPRITE['HAND']);
            }
        }
    }
    shadow = sprite[SPRITE['HAND_SHADOW']][world['time']];
    var _0x15c7f6 = _0x1d06a4,
        _0x553b37 = _0x5cc63c;
    if (this['action'] & STATE['ATTACK']) {
        if (this['attack']['update']() && this['attack']['o'] == ![]) {
            this['hand'] = !this['hand'], this['action'] -= STATE['ATTACK'];
            if (this['uid'] == user['uid']) user['control']['mouse'] = 0x0;
        }
        if (this['right'] >= 0x0) this['hand'] = !![];
        var _0x5bfeb7 = this['hand'] ? this['attack']['v'] : -this['attack']['v'] / 0x3,
            _0x51ad7d = this['hand'] ? this['attack']['v'] / 0x3 : -this['attack']['v'];
        if (this['superzombie']) ctx['save'](), ctx['rotate'](_0x5bfeb7), draw_image_transition(_0x5cc63c, _0x1d06a4, -_0x1d06a4['width'] / 0x2 - scale * (0x42 + _0x48e215), -_0x1d06a4['height'] / 0x2 + (0x5 + _0x4a0151) * scale), ctx['restore'](), ctx['save'](), ctx['rotate'](_0x51ad7d), draw_image_transition(_0x5cc63c, _0x1d06a4, -_0x1d06a4['width'] / 0x2 + scale * (0x42 + _0x48e215), -_0x1d06a4['height'] / 0x2 + (0x5 + _0x4a0151) * scale), ctx['restore']();
        else {
            if (_0x22d7c5 === 0x0) {
                if (this['right'] === SPRITE['WOOD_BOW']) _0x5bfeb7 = -Utils['ease_out_quad'](-_0x5bfeb7);
                ctx['save'](), ctx['rotate'](_0x5bfeb7), draw_image_transition(SPRITE['HAND_SHADOW'], shadow, -shadow['width'] / 0x2 - scale * (0x31 + _0x48e215), -shadow['height'] / 0x2 + (0xf + _0x4a0151) * scale);
                if (this['right'] === SPRITE['BOOK']) {
                    var _0x47a28e = sprite[this['right']][this['book']][world['time']];
                    draw_image_transition_hd_2(this['right'], this['book'], _0x47a28e, -_0x47a28e['width'] / 0x4 - scale * (0x3e + _0x48e215), -_0x47a28e['height'] / 0x4 + scale * (_0x4a0151 + 0x12));
                } else draw_player_right_stuff(this['right'], _0x48e215, _0x4a0151);
                if (_0x5cc63c >= SPRITE['GLOVES_DIAMOND_PROTECTION']) draw_image_transition_hd(_0x5cc63c, _0x1d06a4, -_0x1d06a4['width'] / 0x4 - scale * (0x31 + _0x48e215), -_0x1d06a4['height'] / 0x4 + (0xb + _0x4a0151) * scale);
                else {
                    if (_0x5cc63c !== SPRITE['GLOVES_HOOD']) draw_image_transition_hd_2(_0x5cc63c, this['skin'], _0x1d06a4, -_0x1d06a4['width'] / 0x4 - scale * (0x31 + _0x48e215), -_0x1d06a4['height'] / 0x4 + (0xb + _0x4a0151) * scale);
                    else draw_image_transition(_0x5cc63c, _0x1d06a4, -_0x1d06a4['width'] / 0x2 - scale * (0x31 + _0x48e215), -_0x1d06a4['height'] / 0x2 + (0xb + _0x4a0151) * scale);
                }
                ctx['restore'](), ctx['save'](), ctx['rotate'](_0x51ad7d), draw_image_transition(SPRITE['HAND_SHADOW'], shadow, -shadow['width'] / 0x2 + scale * (0x31 + _0x48e215), -shadow['height'] / 0x2 + (0xf + _0x4a0151) * scale);
                if (_0x5cc63c >= SPRITE['GLOVES_DIAMOND_PROTECTION']) draw_image_transition_hd(_0x5cc63c, _0x1d06a4, -_0x1d06a4['width'] / 0x4 + scale * (0x31 + _0x48e215), -_0x1d06a4['height'] / 0x4 + (0xb + _0x4a0151) * scale);
                else {
                    if (_0x5cc63c !== SPRITE['GLOVES_HOOD']) draw_image_transition_hd_2(_0x5cc63c, this['skin'], _0x1d06a4, -_0x1d06a4['width'] / 0x4 + scale * (0x31 + _0x48e215), -_0x1d06a4['height'] / 0x4 + (0xb + _0x4a0151) * scale);
                    else draw_image_transition(_0x5cc63c, _0x1d06a4, -_0x1d06a4['width'] / 0x2 + scale * (0x31 + _0x48e215), -_0x1d06a4['height'] / 0x2 + (0xb + _0x4a0151) * scale);
                }
                ctx['restore']();
            }
        }
    } else {
        if (this['superzombie']) draw_image_transition(_0x5cc63c, _0x1d06a4, -_0x1d06a4['width'] / 0x2 - scale * (0x42 + _0x48e215), -_0x1d06a4['height'] / 0x2 + (0x5 + _0x4a0151) * scale), draw_image_transition(_0x5cc63c, _0x1d06a4, -_0x1d06a4['width'] / 0x2 + scale * (0x42 + _0x48e215), -_0x1d06a4['height'] / 0x2 + (0x5 + _0x4a0151) * scale);
        else {
            if (_0x22d7c5 === 0x0) {
                draw_image_transition(SPRITE['HAND_SHADOW'], shadow, -shadow['width'] / 0x2 - scale * (0x31 + _0x48e215), -shadow['height'] / 0x2 + (0xf + _0x4a0151) * scale);
                if (this['right'] === SPRITE['BOOK']) {
                    var _0x47a28e = sprite[this['right']][this['book']][world['time']];
                    draw_image_transition_hd_2(this['right'], this['book'], _0x47a28e, -_0x47a28e['width'] / 0x4 - scale * (0x3e + _0x48e215), -_0x47a28e['height'] / 0x4 + scale * (_0x4a0151 + 0x12));
                } else draw_player_right_stuff(this['right'], _0x48e215, _0x4a0151);
                if (_0x5cc63c >= SPRITE['GLOVES_DIAMOND_PROTECTION']) draw_image_transition_hd(_0x5cc63c, _0x1d06a4, -_0x1d06a4['width'] / 0x4 - scale * (0x31 + _0x48e215), -_0x1d06a4['height'] / 0x4 + (0xb + _0x4a0151) * scale);
                else {
                    if (_0x5cc63c !== SPRITE['GLOVES_HOOD']) draw_image_transition_hd_2(_0x5cc63c, this['skin'], _0x1d06a4, -_0x1d06a4['width'] / 0x4 - scale * (0x31 + _0x48e215), -_0x1d06a4['height'] / 0x4 + (0xb + _0x4a0151) * scale);
                    else draw_image_transition(_0x5cc63c, _0x1d06a4, -_0x1d06a4['width'] / 0x2 - scale * (0x31 + _0x48e215), -_0x1d06a4['height'] / 0x2 + (0xb + _0x4a0151) * scale);
                }
                draw_image_transition(SPRITE['HAND_SHADOW'], shadow, -shadow['width'] / 0x2 + scale * (0x31 + _0x48e215), -shadow['height'] / 0x2 + (0xf + _0x4a0151) * scale);
                if (_0x5cc63c >= SPRITE['GLOVES_DIAMOND_PROTECTION']) draw_image_transition_hd(_0x5cc63c, _0x1d06a4, -_0x1d06a4['width'] / 0x4 + scale * (0x31 + _0x48e215), -_0x1d06a4['height'] / 0x4 + (0xb + _0x4a0151) * scale);
                else {
                    if (_0x5cc63c !== SPRITE['GLOVES_HOOD']) draw_image_transition_hd_2(_0x5cc63c, this['skin'], _0x1d06a4, -_0x1d06a4['width'] / 0x4 + scale * (0x31 + _0x48e215), -_0x1d06a4['height'] / 0x4 + (0xb + _0x4a0151) * scale);
                    else draw_image_transition(_0x5cc63c, _0x1d06a4, -_0x1d06a4['width'] / 0x2 + scale * (0x31 + _0x48e215), -_0x1d06a4['height'] / 0x2 + (0xb + _0x4a0151) * scale);
                }
            }
        }
    }
    if (this['bag'] && this['clothe'] < 0x1) {
        var _0x1d06a4 = sprite[SPRITE['BAG']][this['baglook']][world['time']];
        draw_image_transition_hd_2(SPRITE['BAG'], this['baglook'], _0x1d06a4, -_0x1d06a4['width'] / 0x4, -_0x1d06a4['height'] / 0x4 - 0x27 * scale);
    }
    if (this['superzombie']) {
        var _0x1d06a4 = sprite[SPRITE['ZOMBIE_BODY']][world['time']];
        draw_image_transition(SPRITE['ZOMBIE_BODY'], _0x1d06a4, -_0x1d06a4['width'] / 0x2, -_0x1d06a4['height'] / 0x2), this['move_head']['update'](), _0x1d06a4 = sprite[SPRITE['ZOMBIE_HEAD']][world['time']], draw_image_transition(SPRITE['ZOMBIE_HEAD'], _0x1d06a4, -_0x1d06a4['width'] / 0x2, -_0x1d06a4['height'] / 0x2 + this['move_head']['v']);
    } else {
        var _0x1d06a4 = sprite[SPRITE['BODY']][this['skin']][world['time']];
        if (this['clothe'] !== SPRITE['WINTER_HOOD']) {
            draw_image_transition_hd_2(SPRITE['BODY'], this['skin'], _0x1d06a4, -_0x1d06a4['width'] / 0x4, -_0x1d06a4['height'] / 0x4);
            if (this['accessory'] > 0x0) {
                var _0x1d06a4 = sprite[SPRITE['ACCESSORY']][this['accessory']][world['time']];
                draw_image_transition_hd_2(SPRITE['ACCESSORY'], this['accessory'], _0x1d06a4, -_0x1d06a4['width'] / 0x4, -_0x1d06a4['height'] / 0x4);
            }
        }
    }
    if (this['action'] & STATE['HEAL']) {
        if (this['heal']['update']() && this['heal']['o'] == ![]) this['action'] -= STATE['HEAL'];
        ctx['globalAlpha'] = 0.6 - this['heal']['v'];
        if (this['superzombie']) {
            var _0x1d06a4 = sprite[SPRITE['ZOMBIE_HEAL']];
            ctxDrawImage(ctx, _0x1d06a4, -_0x1d06a4['width'] / 0x2, -_0x1d06a4['height'] / 0x2);
        } else {
            var _0x1d06a4 = get_image_effect(this['skin'], sprite[SPRITE['BODY']][this['skin']][0x0], __EFFECT_HEAL__);
            ctxDrawImage(ctx, _0x1d06a4, _0x1d06a4['width'] / 0x4, _0x1d06a4['height'] / 0x4, -_0x1d06a4['width'] / 0x2, -_0x1d06a4['height'] / 0x2);
        }
        ctx['globalAlpha'] = 0x1;
    }
    if (this['action'] & STATE['WEB']) {
        if (this['web']['update']() && this['web']['o'] == ![]) this['action'] -= STATE['WEB'];
        ctx['globalAlpha'] = 0.6 - this['web']['v'];
        var _0x1d06a4 = sprite[SPRITE['WEB']];
        ctxDrawImage(ctx, _0x1d06a4, -_0x1d06a4['width'] / 0x2, -_0x1d06a4['height'] / 0x2), ctx['globalAlpha'] = 0x1;
    }
    if (this['action'] & STATE['HURT']) {
        if (this['hit']['update']() && this['hit']['o'] == ![]) this['action'] -= STATE['HURT'];
        ctx['globalAlpha'] = 0.6 - this['hit']['v'];
        if (this['superzombie']) {
            var _0x1d06a4 = sprite[SPRITE['ZOMBIE_HURT']];
            ctxDrawImage(ctx, _0x1d06a4, -_0x1d06a4['width'] / 0x2, -_0x1d06a4['height'] / 0x2);
        } else {
            var _0x1d06a4 = get_image_effect(this['skin'], sprite[SPRITE['BODY']][this['skin']][0x0], __EFFECT_HURT__);
            ctxDrawImage(ctx, _0x1d06a4, _0x1d06a4['width'] / 0x4, _0x1d06a4['height'] / 0x4, -_0x1d06a4['width'] / 0x2, -_0x1d06a4['height'] / 0x2);
        }
        ctx['globalAlpha'] = 0x1;
    }
    if (this['action'] & STATE['COLD']) {
        if (this['freeze']['update']() && this['freeze']['o'] == ![]) this['action'] -= STATE['COLD'];
        ctx['globalAlpha'] = 0.6 - this['freeze']['v'];
        var _0x1d06a4 = get_image_effect(this['skin'], sprite[SPRITE['BODY']][this['skin']][0x0], __EFFECT_COLD__);
        ctxDrawImage(ctx, _0x1d06a4, _0x1d06a4['width'] / 0x4, _0x1d06a4['height'] / 0x4, -_0x1d06a4['width'] / 0x2, -_0x1d06a4['height'] / 0x2), ctx['globalAlpha'] = 0x1;
    }
    if (this['action'] & STATE['HUNGER']) {
        if (this['starve']['update']() && this['starve']['o'] == ![]) this['action'] -= STATE['HUNGER'];
        ctx['globalAlpha'] = 0.6 - this['starve']['v'];
        if (this['superzombie']) {
            var _0x1d06a4 = sprite[SPRITE['ZOMBIE_HUNGER']];
            ctxDrawImage(ctx, _0x1d06a4, -_0x1d06a4['width'] / 0x2, -_0x1d06a4['height'] / 0x2);
        } else {
            var _0x1d06a4 = get_image_effect(this['skin'], sprite[SPRITE['BODY']][this['skin']][0x0], __EFFECT_HUNGER__);
            ctxDrawImage(ctx, _0x1d06a4, _0x1d06a4['width'] / 0x4, _0x1d06a4['height'] / 0x4, -_0x1d06a4['width'] / 0x2, -_0x1d06a4['height'] / 0x2);
        }
        ctx['globalAlpha'] = 0x1;
    }
    draw_player_clothe(this['clothe']);
    if (_0x22d7c5 === 0x1) {
        if (this['action'] & STATE['ATTACK']) _0x48e215 += this['attack']['v'] * 0xf;
        draw_image_transition(SPRITE['HAND_SHADOW'], shadow, -shadow['width'] / 0x2 - scale * 0x1a, -shadow['height'] / 0x2 + (0x1f + _0x4a0151 + _0x48e215) * scale);
        if (_0x553b37 >= SPRITE['GLOVES_DIAMOND_PROTECTION']) draw_image_transition_hd(_0x553b37, _0x15c7f6, -_0x15c7f6['width'] / 0x4 - scale * 0x1a, -_0x15c7f6['height'] / 0x4 + (0x1b + _0x4a0151 + _0x48e215) * scale);
        else {
            if (_0x553b37 !== SPRITE['GLOVES_HOOD']) draw_image_transition_hd_2(_0x553b37, this['skin'], _0x15c7f6, -_0x15c7f6['width'] / 0x4 - scale * 0x1a, -_0x15c7f6['height'] / 0x4 + (0x1b + _0x4a0151 + _0x48e215) * scale);
            else draw_image_transition(_0x553b37, _0x15c7f6, -_0x15c7f6['width'] / 0x2 - scale * 0x1a, -_0x15c7f6['height'] / 0x2 + (0x1b + _0x4a0151 + _0x48e215) * scale);
        }
        draw_image_transition(SPRITE['HAND_SHADOW'], shadow, -shadow['width'] / 0x2 + scale * 0x1a, -shadow['height'] / 0x2 + (0x1f + _0x4a0151 + _0x48e215) * scale);
        if (_0x553b37 >= SPRITE['GLOVES_DIAMOND_PROTECTION']) draw_image_transition_hd(_0x553b37, _0x15c7f6, -_0x15c7f6['width'] / 0x4 + scale * 0x1a, -_0x15c7f6['height'] / 0x4 + (0x1b + _0x4a0151 + _0x48e215) * scale);
        else {
            if (_0x553b37 !== SPRITE['GLOVES_HOOD']) draw_image_transition_hd_2(_0x553b37, this['skin'], _0x15c7f6, -_0x15c7f6['width'] / 0x4 + scale * 0x1a, -_0x15c7f6['height'] / 0x4 + (0x1b + _0x4a0151 + _0x48e215) * scale);
            else draw_image_transition(_0x553b37, _0x15c7f6, -_0x15c7f6['width'] / 0x2 + scale * 0x1a, -_0x15c7f6['height'] / 0x2 + (0x1b + _0x4a0151 + _0x48e215) * scale);
        }
        draw_player_right_stuff_after(this['right'], 0x0, _0x4a0151 + _0x48e215);
    }
    ctx['restore']();
    if (this['dist_winter'] > 0x0) {
        if (!this['player']['label_winter']) this['player']['label_winter'] = create_text(scale, this['player']['nickname'], 0x14, '#187484', '#000', 0x2, null, null, 0x12c * scale);
        var _0x1d06a4 = this['player']['label_winter'];
    } else {
        if (!this['player']['label']) this['player']['label'] = create_text(scale, this['player']['nickname'], 0x14, '#FFF', '#000', 0x2, null, null, 0x12c * scale);
        var _0x1d06a4 = this['player']['label'];
    }
    if (world['day'] == SPRITE['NIGHT']) ctx['globalAlpha'] = 0.5;
    var _0x48e215 = Math['floor'](-_0x1d06a4['width'] / 0x2),
        _0x4a0151 = Math['floor'](-_0x1d06a4['height'] / 0x2 - 0x46 * scale);
    ctxDrawImage(ctx, _0x1d06a4, _0x48e215, _0x4a0151);
    if (this['player']['level'] > 0x0) {
        var _0x5315e9 = _0x48e215 + _0x1d06a4['width'] + 0x5;
        _0x1d06a4 = sprite[SPRITE['VERIFIED']];
        if (PLAYER_LEVEL[this['player']['level']] === undefined) PLAYER_LEVEL[this['player']['level']] = create_text(scale, '<' + this['player']['level'] + '>', 0x14, '#F9E8A2', '#000', 0x2, null, null, 0x32 * scale);
        ctxDrawImage(ctx, PLAYER_LEVEL[this['player']['level']], _0x5315e9, _0x4a0151);
    }
    ctx['globalAlpha'] = 0x1;
    if (user['in_team'](this['pid'])) {
        if (this['pid'] == user['team'][0x0]) var _0x1d06a4 = sprite[SPRITE['ICON_LEADER']];
        else var _0x1d06a4 = sprite[SPRITE['ICON_MEMBER']];
        ctxDrawImage(ctx, _0x1d06a4, _0x48e215 - _0x1d06a4['width'] - 0x5, _0x4a0151 - 0x6);
    }
    ctx['restore']();
    Settings['esp'] && (ctx['save'](), ctx['translate'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']), ctx['rotate'](this['angle']), ctx['lineWidth'] = 2.6, ctx['strokeStyle'] = this['ally'] ? 'cyan' : 'red', ctx['strokeRect'](-0x14, -0x1d, 0x2d, 0x3c), ctx['restore'](), ctx['save'](), (ctx['fillStyle'] = this['ally'] ? 'cyan' : 'red', ctx['beginPath']()), ctx['arc'](this['x'] + user['cam']['x'], this['y'] + user['cam']['y'], 0x7, 0x0, 0x2 * Math['PI']), ctx['fill'](), ctx['restore']());
    if (Settings['Moves']) {
        (this['x'] != this['r']['x'] || this['y'] != this['r']['y']) && (ctx['beginPath'](), ctx['lineWidth'] = 3.5, ctx['moveTo'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']), ctx['lineTo'](user['cam']['x'] + this['r']['x'], user['cam']['y'] + this['r']['y']), ctx['strokeStyle'] = 'red', ctx['stroke']());;
    }
}

function draw_alert_ghost() {
    if (this['enabled'] && this['delay'] >= 0x0) {
        var _0x425227 = new Date()['getTime'](),
            _0x504157 = _0x425227 - this['delay'],
            _0x1690e2 = _0x504157 % 0x3e8 / 0x3e8;
        if (_0x1690e2 > 0.5) _0x1690e2 = 0x1 - (_0x1690e2 - 0.5) * 0x2;
        else _0x1690e2 *= 0x2;
        _0x504157 = Math['floor'](_0x504157 / 0x3e8), _0x504157 < WORLD['GHOST_DELAY'] && (_0x504157 = WORLD['GHOST_DELAY'] - _0x504157, !this['label'] && (this['label'] = create_text(scale, '\x20seconds\x20before\x20you\x20die', 0x28, '#660000', null, null, null, null, null, '#000', 0xa)), (this['now'] != _0x504157 || !this['sec']) && (this['now'] = _0x504157, this['sec'] = create_text(scale, '' + _0x504157, 0x28, '#660000', null, null, null, null, null, '#000', 0xa)), ctxDrawImage(ctx, this['label'], (canw - this['label']['width']) / 0x2, 0x64 * scale), ctx['globalAlpha'] = _0x1690e2, ctxDrawImage(ctx, this['sec'], (canw - this['label']['width']) / 0x2 - this['sec']['width'] + 0xf * scale, 0x64 * scale), ctx['globalAlpha'] = 0x1);
    }
}

function draw_welcome_message() {
    if (this['message'] !== undefined) {
        var _0x139255 = user['inv']['can_select']['length'] > 0x0 ? -0x5f : 0x0;
        ctxDrawImage(ctx, this['message'], 0x0, canh - this['message']['height'] + _0x139255);
    }
};

function draw_alert(_0x10f104, _0x1570aa) {
    if (this['text']) {
        if (!this['timeout']['o']) ctx['globalAlpha'] = 0x1;
        else ctx['globalAlpha'] = 0x1 - this['timeout']['v'];
        if (!this['label']) this['label'] = create_text(scale, this['text'], 0x28, _0x10f104, null, null, null, null, null, _0x1570aa, 0xa);
        ctxDrawImage(ctx, this['label'], (canw - this['label']['width']) / 0x2, 0x32 * scale), ctx['globalAlpha'] = 0x1, this['timeout']['update']() && this['timeout']['o'] == ![] && (this['text'] = this['list']['shift'](), this['label'] = null);
    }
}

function draw_chat() {
    ctx['save'](), ctx['translate'](user['cam']['x'] + this['x'], user['cam']['y'] + this['y']);
    if (this['text']['length'] > 0x0) {
        for (var _0x205995 = 0x0; _0x205995 < this['text']['length'] && _0x205995 < 0x2; _0x205995++) {
            !this['label'][_0x205995] && (this['label'][_0x205995] = create_message(scale, this['text'][_0x205995]), this['text_effect'][_0x205995] = 0x0, this['text_move'][_0x205995] = 0x0);
            if (_0x205995 === 0x1) this['text_move'][0x0] = Utils['ease_in_out_quad'](this['text_ease']) * 0x1e;
        }
        this['text_effect'][0x0] += delta;
        if (this['text']['length'] > 0x1) {
            this['text_ease'] = Math['min'](this['text_ease'] + delta, 0x1);
            if (this['text_effect'][0x0] > 0x1 && this['text_ease'] > 0.5) this['text_effect'][0x1] += delta;
        }
        for (var _0x205995 = 0x0; _0x205995 < this['text']['length'] && _0x205995 < 0x2; _0x205995++) {
            var _0x54c475 = this['text_effect'][_0x205995];
            if (_0x54c475 > 0x0) {
                if (_0x54c475 < 0.25) ctx['globalAlpha'] = _0x54c475 * 0x4;
                else {
                    if (_0x54c475 > 3.75) ctx['globalAlpha'] = Math['max']((0x4 - _0x54c475) * 0x4, 0x0);
                    else ctx['globalAlpha'] = 0x1;
                }
                ctxDrawImage(ctx, this['label'][_0x205995], -this['label'][_0x205995]['width'] / 0x2, -this['text_move'][_0x205995] + -this['label'][_0x205995]['height'] / 0x2 - 0x6e * scale);
            }
        }
        this['text_effect'][0x0] > 0x4 && (this['text_effect']['shift'](), this['text']['shift'](), this['text_move']['shift'](), this['label']['shift'](), this['text_ease'] = 0x0);
    }
    ctx['restore']();
}
var __effect = 0x0;

function draw_objects_effect(_0x2cea9e, _0xbedae7, _0x55b9b2, _0x4dfad7, _0xc6919f, _0x5b3232, _0x29875b, _0x5c2f29) {
    if (_0x5c2f29 === undefined) _0x5c2f29 = 0x0;
    for (var _0x3514c3 = _0x29875b; _0x3514c3 >= _0x5c2f29; _0x3514c3--) {
        for (var _0x57a39d = _0x2cea9e; _0x57a39d <= _0xbedae7; _0x57a39d++) {
            for (var _0x48ba75 = _0x55b9b2; _0x48ba75 <= _0x4dfad7; _0x48ba75++) {
                var _0x2ae7cb = MAP['tiles'][_0x57a39d][_0x48ba75];
                if (!_0x2ae7cb || !_0x2ae7cb[_0x5b3232]) continue;
                var _0x36b8cf = _0x2ae7cb[_0x5b3232][_0x3514c3];
                if (_0x36b8cf === undefined) continue;
                for (var _0x8b6837 = 0x0; _0x8b6837 < _0x36b8cf['length']; _0x8b6837++) {
                    var _0x4994f1 = _0x36b8cf[_0x8b6837],
                        _0x48cfe3 = sprite[_0xc6919f][world['time']][_0x3514c3],
                        _0x253166 = (__effect + (_0x57a39d + _0x48ba75) * 0x3) % 0x3c,
                        _0x8da9b3 = _0x253166 < 0x1e ? _0x253166 / 0x1e : 0x1 - (_0x253166 - 0x1e) / 0x1e,
                        _0x5d43a4 = -_0x48cfe3['width'] * (0x1 + 0.9 * _0x8da9b3 / 0x1e),
                        _0x4bd4d7 = -_0x48cfe3['height'] * (0x1 + 0.9 * _0x8da9b3 / 0x1e);
                    _0x253166 = (__effect + (_0x57a39d + _0x48ba75) * 0x7) % 0x3c, _0x8da9b3 = _0x253166 < 0x1e ? _0x253166 / 0x1e : 0x1 - (_0x253166 - 0x1e) / 0x1e;
                    var _0x566ddb = ctx['globalAlpha'];
                    ctx['globalAlpha'] = (0.9 + _0x8da9b3 * 0.1) * _0x566ddb, ctxDrawImage(ctx, _0x48cfe3, user['cam']['x'] + _0x4994f1['x'] - _0x5d43a4 / 0x2, user['cam']['y'] + _0x4994f1['y'] - _0x4bd4d7 / 0x2, _0x5d43a4, _0x4bd4d7), ctx['globalAlpha'] = _0x566ddb;
                }
            }
        }
    }
}

function draw_breath_objects(_0xa4fb10, _0x2124f5, _0x530915, _0x27f8a5, _0x57a857, _0x39f9dd, _0x3b65ea, _0x1ae08a) {
    if (_0x1ae08a === undefined) _0x1ae08a = 0x0;
    world['breath'][_0x57a857]['update']();
    for (var _0x2b75c3 = _0x3b65ea; _0x2b75c3 >= _0x1ae08a; _0x2b75c3--) {
        for (var _0x46134d = _0xa4fb10; _0x46134d <= _0x2124f5; _0x46134d++) {
            for (var _0x50fdfe = _0x530915; _0x50fdfe <= _0x27f8a5; _0x50fdfe++) {
                var _0x569a7a = MAP['tiles'][_0x46134d][_0x50fdfe];
                if (!_0x569a7a || !_0x569a7a[_0x39f9dd]) continue;
                var _0x4fba6d = _0x569a7a[_0x39f9dd][_0x2b75c3];
                if (_0x4fba6d === undefined) continue;
                for (var _0x47bfe4 = 0x0; _0x47bfe4 < _0x4fba6d['length']; _0x47bfe4++) {
                    var _0x5e4c0a = _0x4fba6d[_0x47bfe4];
                    if (_0x5e4c0a['update']) {
                        _0x5e4c0a['hit']['update']() && _0x5e4c0a['hit']['o'] == ![] && (_0x5e4c0a['update'] = ![]);
                        var _0x2e6d7d = (0x1 - _0x5e4c0a['hit']['v']) * delta * 0x258 * scale,
                            _0x1a2e2c = Math['cos'](_0x5e4c0a['angle']) * _0x2e6d7d,
                            _0xd5a5c8 = Math['sin'](_0x5e4c0a['angle']) * _0x2e6d7d;
                    } else var _0x1a2e2c = 0x0,
                        _0xd5a5c8 = 0x0;;
                    var _0x34e807 = sprite[_0x57a857][world['time']][_0x2b75c3],
                        _0x192d8a = -_0x34e807['width'] * world['breath'][_0x57a857]['v'],
                        _0x3e596d = -_0x34e807['height'] * world['breath'][_0x57a857]['v'];
                    ctxDrawImage(ctx, _0x34e807, user['cam']['x'] + _0x5e4c0a['x'] - _0x192d8a / 0x2 + _0x1a2e2c, user['cam']['y'] + _0x5e4c0a['y'] - _0x3e596d / 0x2 + _0xd5a5c8, _0x192d8a, _0x3e596d);
                }
            }
        }
    }
}
var randweb = [];
for (var i = 0x0; i < 0x64; i++) {
    var r = 0x1;
    if (Math['random']() < 0.25) r = 0x0;
    randweb['push'](r);
}
_scale_object = 0x1;

function draw_map_objects(_0x1830db, _0x1ef1cf, _0x1dc03b, _0x68bcc0, _0x9cb4ee, _0x109be2, _0x2fdd76, _0x2c9c73, _0x4e386a) {
    if (_0x2c9c73 === undefined) _0x2c9c73 = 0x0;
    for (var _0x28d794 = _0x2fdd76; _0x28d794 >= _0x2c9c73; _0x28d794--) {
        for (var _0x1903e5 = _0x1830db; _0x1903e5 <= _0x1ef1cf; _0x1903e5++) {
            for (var _0x2d45bf = _0x1dc03b; _0x2d45bf <= _0x68bcc0; _0x2d45bf++) {
                if (_0x4e386a > 0x0 && randweb[(_0x1903e5 + _0x2d45bf * _0x4e386a) % randweb['length']] === 0x1) continue;
                var _0x41b19f = MAP['tiles'][_0x1903e5][_0x2d45bf];
                if (_0x41b19f === undefined || _0x41b19f[_0x109be2] === undefined) continue;
                var _0x11f61a = _0x41b19f[_0x109be2][_0x28d794];
                if (_0x11f61a === undefined) continue;
                for (var _0x194bd4 = 0x0; _0x194bd4 < _0x11f61a['length']; _0x194bd4++) {
                    var _0x1fd1c9 = _0x11f61a[_0x194bd4];
                    if (_0x1fd1c9['update']) {
                        _0x1fd1c9['hit']['update']() && _0x1fd1c9['hit']['o'] == ![] && (_0x1fd1c9['update'] = ![]);
                        var _0x5bd095 = (0x1 - _0x1fd1c9['hit']['v']) * delta * 0x258 * scale,
                            _0x56fbbb = Math['cos'](_0x1fd1c9['angle']) * _0x5bd095,
                            _0x298e71 = Math['sin'](_0x1fd1c9['angle']) * _0x5bd095;
                    } else var _0x56fbbb = 0x0,
                        _0x298e71 = 0x0;;
                    var _0x3b1dd1 = sprite[_0x9cb4ee][world['time']][_0x28d794];
                    ctxDrawImage(ctx, _0x3b1dd1, user['cam']['x'] + _0x1fd1c9['x'] - _0x3b1dd1['width'] / (0x2 * _scale_object) + _0x56fbbb, user['cam']['y'] + _0x1fd1c9['y'] - _0x3b1dd1['height'] / (0x2 * _scale_object) + _0x298e71, _0x3b1dd1['width'] / _scale_object, _0x3b1dd1['height'] / _scale_object);
                }
            }
        }
    }
}

function draw_map_decorations(_0x29c982, _0x1acf9d, _0x2b497e, _0x4d9587, _0x2b85b3, _0x5c2164, _0x29c201, _0x2d023c, _0x45529e) {
    if (_0x2d023c === undefined) _0x2d023c = 0x0;
    for (var _0x5a8538 = _0x29c982; _0x5a8538 <= _0x1acf9d; _0x5a8538++) {
        for (var _0xddd05f = _0x2b497e; _0xddd05f <= _0x4d9587; _0xddd05f++) {
            var _0x370a17 = MAP['tiles'][_0x5a8538][_0xddd05f];
            if (_0x370a17 === undefined || _0x370a17[_0x5c2164] === undefined) continue;
            var _0x25e5b2 = _0x370a17[_0x5c2164];
            if (_0x25e5b2 === undefined) continue;
            if (_0x25e5b2['scale'] === 0x1) {
                var _0x46cc38 = sprite[_0x2b85b3][world['time']][_0x25e5b2['_id']];
                ctx['save'](), ctx['translate'](user['cam']['x'] + _0x25e5b2['x'], user['cam']['y'] + _0x25e5b2['y']), ctx['rotate'](_0x25e5b2['angle']), ctxDrawImage(ctx, _0x46cc38, -_0x46cc38['width'] / 0x4, -_0x46cc38['height'] / 0x4, _0x46cc38['width'] / 0x2, _0x46cc38['height'] / 0x2), ctx['restore']();
            } else {
                if (_0x25e5b2['scale'] === 0x3)
                    for (var _0x584aeb = 0x0; _0x584aeb < _0x25e5b2['p']['length']; _0x584aeb++) {
                        ctx['save'](), ctx['translate'](user['cam']['x'] + _0x25e5b2['x'], user['cam']['y'] + _0x25e5b2['y']), ctx['rotate'](_0x25e5b2['p'][_0x584aeb]['angle']);
                        var _0x46cc38 = sprite[_0x2b85b3][world['time']][_0x25e5b2['p'][_0x584aeb]['_id']];
                        ctxDrawImage(ctx, _0x46cc38, -_0x46cc38['width'] / 0x3 + _0x25e5b2['p'][_0x584aeb]['x'], -_0x46cc38['height'] / 0x3 + _0x25e5b2['p'][_0x584aeb]['y'], _0x46cc38['width'] / 1.5, _0x46cc38['height'] / 1.5), ctx['restore']();
                    } else {
                        var _0x46cc38 = sprite[_0x2b85b3][world['time']][_0x25e5b2['_id']];
                        ctx['save'](), ctx['translate'](user['cam']['x'] + _0x25e5b2['x'], user['cam']['y'] + _0x25e5b2['y']), ctx['rotate'](_0x25e5b2['angle']), ctxDrawImage(ctx, _0x46cc38, -_0x46cc38['width'] / 0x2, -_0x46cc38['height'] / 0x2, _0x46cc38['width'], _0x46cc38['height']), ctx['restore']();
                    }
            }
        }
    }
}

function draw_lava_effect(_0x4d84cb, _0x3e7c00, _0x37aca6, _0x15422e, _0x1644cb, _0x3ebd11, _0x12ccf8, _0x459c8e, _0x45c352) {
    if (_0x459c8e === undefined) _0x459c8e = 0x0;
    for (var _0xf47c83 = _0x12ccf8; _0xf47c83 >= _0x459c8e; _0xf47c83--) {
        for (var _0x52b320 = _0x4d84cb; _0x52b320 <= _0x3e7c00; _0x52b320++) {
            for (var _0x3c5e3b = _0x37aca6; _0x3c5e3b <= _0x15422e; _0x3c5e3b++) {
                var _0x93ad71 = MAP['tiles'][_0x52b320][_0x3c5e3b];
                if (_0x93ad71 === undefined || _0x93ad71[_0x3ebd11] === undefined) continue;
                var _0x37b780 = _0x93ad71[_0x3ebd11][_0xf47c83];
                if (_0x37b780 === undefined) continue;
                for (var _0x5c0f7d = 0x0; _0x5c0f7d < _0x37b780['length']; _0x5c0f7d++) {
                    var _0xea117e = _0x37b780[_0x5c0f7d];
                    if (_0xea117e['update']) {
                        _0xea117e['hit']['update']() && _0xea117e['hit']['o'] == ![] && (_0xea117e['update'] = ![]);
                        var _0x51b93b = (0x1 - _0xea117e['hit']['v']) * delta * 0x258 * scale,
                            _0x5b50f1 = Math['cos'](_0xea117e['angle']) * _0x51b93b,
                            _0x411606 = Math['sin'](_0xea117e['angle']) * _0x51b93b;
                    } else var _0x5b50f1 = 0x0,
                        _0x411606 = 0x0;;
                    for (var _0x3c7671 = 0x0; _0x3c7671 < _bubble[_0xf47c83]['amount']; _0x3c7671++) {
                        world['lava'][_0x3c7671]['last'] !== old_timestamp && (world['lava'][_0x3c7671]['update'](), world['lava'][_0x3c7671]['last'] = old_timestamp);
                        var _0x43a836 = sprite[SPRITE['LAVA_BUBBLE']][world['time']][_bubble[_0xf47c83]['pos'][_0x3c7671]['t']],
                            _0x24770c = -_0x43a836['width'] * world['lava'][_0x3c7671]['v'],
                            _0x527295 = -_0x43a836['height'] * world['lava'][_0x3c7671]['v'];
                        ctxDrawImage(ctx, _0x43a836, user['cam']['x'] + _0xea117e['x'] - _0x24770c / 0x4 + _0x5b50f1 + _bubble[_0xf47c83]['pos'][_0x3c7671]['x'], user['cam']['y'] + _0xea117e['y'] - _0x527295 / 0x4 + _0x411606 + _bubble[_0xf47c83]['pos'][_0x3c7671]['y'], _0x24770c / 0x2, _0x527295 / 0x2);
                    }
                }
            }
        }
    }
}
_bubble = [{
    'amount': 0xa,
    'pos': [{
        'x': -0x80,
        'y': -0x14,
        't': 0x0
    }, {
        'x': -0x56,
        'y': -0x4,
        't': 0x1
    }, {
        'x': -0x3c,
        'y': -0x4a,
        't': 0x2
    }, {
        'x': -0x16,
        'y': -0x90,
        't': 0x0
    }, {
        'x': -0x3a,
        'y': 0x56,
        't': 0x0
    }, {
        'x': 0x3,
        'y': -0x1e,
        't': 0x0
    }, {
        'x': 0x41,
        'y': -0x73,
        't': 0x1
    }, {
        'x': 0x76,
        'y': -0x32,
        't': 0x0
    }, {
        'x': 0x49,
        'y': 0xf,
        't': 0x1
    }, {
        'x': 0x43,
        'y': 0x4f,
        't': 0x0
    }]
}, {
    'amount': 0x5,
    'pos': [{
        'x': -0x2d,
        'y': -0x1a,
        't': 0x0
    }, {
        'x': -0x2d,
        'y': 0x14,
        't': 0x2
    }, {
        'x': 0xa,
        'y': -0x3c,
        't': 0x1
    }, {
        'x': 0x34,
        'y': -0x11,
        't': 0x1
    }, {
        'x': 0xe,
        'y': 0x2d,
        't': 0x0
    }]
}, {
    'amount': 0x3,
    'pos': [{
        'x': -0x1e,
        'y': 0x3,
        't': 0x2
    }, {
        'x': 0x7,
        'y': -0x26,
        't': 0x2
    }, {
        'x': 0x25,
        'y': 0x5,
        't': 0x2
    }]
}, {
    'amount': 0xb,
    'pos': [{
        'x': -0x4a,
        'y': -0x57,
        't': 0x2
    }, {
        'x': -0xb,
        'y': -0xa,
        't': 0x1
    }, {
        'x': -0x63,
        'y': 0x11,
        't': 0x1
    }, {
        'x': -0x42,
        'y': 0x54,
        't': 0x0
    }, {
        'x': -0x37,
        'y': 0x7b,
        't': 0x1
    }, {
        'x': 0xa,
        'y': 0x51,
        't': 0x2
    }, {
        'x': 0x34,
        'y': 0x32,
        't': 0x0
    }, {
        'x': 0x8a,
        'y': 0x9,
        't': 0x1
    }, {
        'x': 0x68,
        'y': -0x1c,
        't': 0x0
    }, {
        'x': 0x43,
        'y': -0x38,
        't': 0x2
    }, {
        'x': 0x5,
        'y': -0x70,
        't': 0x0
    }]
}, {
    'amount': 0x6,
    'pos': [{
        'x': -0x21,
        'y': -0x42,
        't': 0x2
    }, {
        'x': -0x3a,
        'y': 0xa,
        't': 0x0
    }, {
        'x': -0x13,
        'y': 0x2c,
        't': 0x1
    }, {
        'x': 0x2c,
        'y': 0x14,
        't': 0x0
    }, {
        'x': 0x35,
        'y': -0x24,
        't': 0x2
    }, {
        'x': 0x7,
        'y': -0x3e,
        't': 0x0
    }]
}, {
    'amount': 0x3,
    'pos': [{
        'x': -0x13,
        'y': -0x19,
        't': 0x1
    }, {
        'x': -0x1d,
        'y': 0xd,
        't': 0x2
    }, {
        'x': 0xc,
        'y': 0xc,
        't': 0x0
    }]
}];
var _js = 0x0,
    _je = 0x0,
    _is = 0x0,
    _ie = 0x0;

function draw_world() {
    var _0x492618 = _js,
        _0x494552 = _je,
        _0x2aa8c6 = _is,
        _0x40d710 = _ie;
    if (ui['quality']) draw_map_transition(draw_map_objects, _0x2aa8c6, _0x40d710, _0x492618, _0x494552, SPRITE['LAKE_EDGE'], 'l', 0x2);
    if (ui['quality']) draw_map_transition(draw_map_objects, _0x2aa8c6, _0x40d710, _0x492618, _0x494552, SPRITE['LAVA_GROUND'], 'la', 0x5);
    draw_map_transition(draw_map_objects, _0x2aa8c6, _0x40d710, _0x492618, _0x494552, SPRITE['MAGMA'], 'la', 0x5), draw_map_transition(draw_breath_objects, _0x2aa8c6, _0x40d710, _0x492618, _0x494552, SPRITE['LAKE'], 'l', 0x2);
    ui['quality'] && (draw_map_transition(draw_lava_effect, _0x2aa8c6, _0x40d710, _0x492618, _0x494552, SPRITE['MAGMA'], 'la', 0x5), draw_map_transition(draw_breath_objects, _0x2aa8c6, _0x40d710, _0x492618, _0x494552, SPRITE['LAKE_DEEP'], 'l', 0x2));
    draw_map_transition(draw_map_objects, _0x2aa8c6, _0x40d710, _0x492618, _0x494552, SPRITE['MARKER'], 'ma', 0x3);
    var _0x1ce47e = world['units'][ITEMS['SAND_WORM']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x1ce47e['length']; _0x1c0776++) _0x1ce47e[_0x1c0776]['draw_ground']();
    var _0x124aae = world['units'][ITEMS['PLAYERS']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x124aae['length']; _0x1c0776++) {
        var _0x5d5726 = _0x124aae[_0x1c0776];
        for (var _0x355270 = 0x0; _0x355270 < _0x5d5726['swim']['length']; _0x355270++) draw_swim(_0x5d5726['swim'][_0x355270]);
    }
    var _0x3766a2 = world['units'][ITEMS['BRIDGE']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x3766a2['length']; _0x1c0776++) {
        draw_transition(_0x3766a2[_0x1c0776], SPRITE['BRIDGE']), _0x3766a2[_0x1c0776]['draw_life'](_0x3766a2[_0x1c0776]['info']);
    }
    var _0x40cd9f = world['units'][ITEMS['FURNACE']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x40cd9f['length']; _0x1c0776++) {
        if (_0x40cd9f[_0x1c0776]['action'] == 0x2) draw_bg_transition(_0x40cd9f[_0x1c0776]);
    }
    var _0x212b24 = world['units'][ITEMS['FIRE']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x212b24['length']; _0x1c0776++) draw_bg_transition(_0x212b24[_0x1c0776], SPRITE['WOOD_FIRE']);
    var _0x4e483a = world['units'][ITEMS['RESURRECTION']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x4e483a['length']; _0x1c0776++) draw_bg_transition(_0x4e483a[_0x1c0776]);
    var _0x1fac5c = world['units'][ITEMS['EMERALD_MACHINE']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x1fac5c['length']; _0x1c0776++) draw_bg_transition(_0x1fac5c[_0x1c0776]);
    var _0xa09460 = world['units'][ITEMS['BIG_FIRE']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0xa09460['length']; _0x1c0776++) draw_bg_transition(_0xa09460[_0x1c0776], SPRITE['BIG_FIRE_WOOD']);
    var _0x1c00ab = world['units'][ITEMS['SIGN']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x1c00ab['length']; _0x1c0776++) draw_transition(_0x1c00ab[_0x1c0776]);
    var _0x21395a = world['units'][ITEMS['PLOT']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x21395a['length']; _0x1c0776++) draw_transition(_0x21395a[_0x1c0776], SPRITE['PLOT']);
    var _0x5bcd36 = world['units'][ITEMS['SEED']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x5bcd36['length']; _0x1c0776++) draw_bg_transition(_0x5bcd36[_0x1c0776]);
    var _0x5bcd36 = world['units'][ITEMS['TOMATO_SEED']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x5bcd36['length']; _0x1c0776++) draw_bg_transition(_0x5bcd36[_0x1c0776]);
    var _0x5bcd36 = world['units'][ITEMS['SEED']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x5bcd36['length']; _0x1c0776++) draw_fg_transition(_0x5bcd36[_0x1c0776]);
    var _0x2c169a = world['units'][ITEMS['CARROT_SEED']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x2c169a['length']; _0x1c0776++)
        if ((_0x2c169a[_0x1c0776]['info'] & 0xf) === 0x0 || _0x2c169a[_0x1c0776]['info'] === 0xa) draw_transition(_0x2c169a[_0x1c0776]);
    var _0x3cda54 = world['units'][ITEMS['WATERMELON_SEED']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x3cda54['length']; _0x1c0776++)
        if ((_0x3cda54[_0x1c0776]['info'] & 0xf) === 0x0 || _0x3cda54[_0x1c0776]['info'] === 0xa) draw_transition(_0x3cda54[_0x1c0776]);
    var _0xa120a6 = world['units'][ITEMS['ALOE_VERA_SEED']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0xa120a6['length']; _0x1c0776++)
        if ((_0xa120a6[_0x1c0776]['info'] & 0xf) === 0x0 || _0xa120a6[_0x1c0776]['info'] === 0xa) draw_transition(_0xa120a6[_0x1c0776]);
    var _0x4fcf1e = world['units'][ITEMS['WHEAT_MOB']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x4fcf1e['length']; _0x1c0776++) draw_transition(_0x4fcf1e[_0x1c0776], SPRITE['WHEAT_SEED']);
    var _0x9711ad = world['units'][ITEMS['GARLIC_SEED']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x9711ad['length']; _0x1c0776++)
        if ((_0x9711ad[_0x1c0776]['info'] & 0xf) === 0x0 || _0x9711ad[_0x1c0776]['info'] === 0xa) draw_transition(_0x9711ad[_0x1c0776]);
    var _0x188504 = world['units'][ITEMS['THORNBUSH_SEED']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x188504['length']; _0x1c0776++)
        if ((_0x188504[_0x1c0776]['info'] & 0xf) === 0x0 || _0x188504[_0x1c0776]['info'] === 0xa) draw_transition(_0x188504[_0x1c0776]);
    var _0x3148a6 = world['units'][ITEMS['PUMPKIN_SEED']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x3148a6['length']; _0x1c0776++)
        if ((_0x3148a6[_0x1c0776]['info'] & 0xf) === 0x0 || _0x3148a6[_0x1c0776]['info'] === 0xa) draw_transition(_0x3148a6[_0x1c0776]);
    var _0x4fcf1e = world['units'][ITEMS['WHEAT_SEED']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x4fcf1e['length']; _0x1c0776++) draw_transition(_0x4fcf1e[_0x1c0776]);
    var _0x54791b = world['units'][ITEMS['GIFT']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x54791b['length']; _0x1c0776++) draw_transition(_0x54791b[_0x1c0776], SPRITE['GIFT'], SPRITE['HURT_GIFT']);
    var _0x36e1e0 = world['units'][ITEMS['WOOD_DOOR_SPIKE']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x36e1e0['length']; _0x1c0776++) {
        if (_0x36e1e0[_0x1c0776]['info'] & 0x1) draw_transition(_0x36e1e0[_0x1c0776], SPRITE['DOOR_WOOD_OPEN']);
    }
    var _0x36e1e0 = world['units'][ITEMS['STONE_DOOR_SPIKE']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x36e1e0['length']; _0x1c0776++) {
        if (_0x36e1e0[_0x1c0776]['info'] & 0x1) draw_transition(_0x36e1e0[_0x1c0776], SPRITE['DOOR_STONE_OPEN']);
    }
    var _0x36e1e0 = world['units'][ITEMS['GOLD_DOOR_SPIKE']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x36e1e0['length']; _0x1c0776++) {
        if (_0x36e1e0[_0x1c0776]['info']) draw_transition(_0x36e1e0[_0x1c0776], SPRITE['DOOR_GOLD_OPEN']);
    }
    var _0x36e1e0 = world['units'][ITEMS['DIAMOND_DOOR_SPIKE']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x36e1e0['length']; _0x1c0776++) {
        if (_0x36e1e0[_0x1c0776]['info']) draw_transition(_0x36e1e0[_0x1c0776], SPRITE['DOOR_DIAMOND_OPEN']);
    }
    var _0x36e1e0 = world['units'][ITEMS['AMETHYST_DOOR_SPIKE']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x36e1e0['length']; _0x1c0776++) {
        if (_0x36e1e0[_0x1c0776]['info']) draw_transition(_0x36e1e0[_0x1c0776], SPRITE['DOOR_AMETHYST_OPEN']);
    }
    var _0x36e1e0 = world['units'][ITEMS['REIDITE_DOOR_SPIKE']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x36e1e0['length']; _0x1c0776++) {
        if (_0x36e1e0[_0x1c0776]['info']) draw_transition(_0x36e1e0[_0x1c0776], SPRITE['DOOR_GOLD_OPEN']);
    }
    var _0x36e1e0 = world['units'][ITEMS['WOOD_DOOR']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x36e1e0['length']; _0x1c0776++) {
        if (_0x36e1e0[_0x1c0776]['info'] & 0x1) draw_transition(_0x36e1e0[_0x1c0776], SPRITE['DOOR_WOOD_OPEN']);
    }
    var _0x36e1e0 = world['units'][ITEMS['STONE_DOOR']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x36e1e0['length']; _0x1c0776++) {
        if (_0x36e1e0[_0x1c0776]['info'] & 0x1) draw_transition(_0x36e1e0[_0x1c0776], SPRITE['DOOR_STONE_OPEN']);
    }
    var _0x36e1e0 = world['units'][ITEMS['GOLD_DOOR']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x36e1e0['length']; _0x1c0776++) {
        if (_0x36e1e0[_0x1c0776]['info']) draw_transition(_0x36e1e0[_0x1c0776], SPRITE['DOOR_GOLD_OPEN']);
    }
    var _0x36e1e0 = world['units'][ITEMS['DIAMOND_DOOR']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x36e1e0['length']; _0x1c0776++) {
        if (_0x36e1e0[_0x1c0776]['info']) draw_transition(_0x36e1e0[_0x1c0776], SPRITE['DOOR_DIAMOND_OPEN']);
    }
    var _0x36e1e0 = world['units'][ITEMS['AMETHYST_DOOR']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x36e1e0['length']; _0x1c0776++) {
        if (_0x36e1e0[_0x1c0776]['info']) draw_transition(_0x36e1e0[_0x1c0776], SPRITE['DOOR_AMETHYST_OPEN']);
    }
    var _0x36e1e0 = world['units'][ITEMS['REIDITE_DOOR']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x36e1e0['length']; _0x1c0776++) {
        if (_0x36e1e0[_0x1c0776]['info']) draw_transition(_0x36e1e0[_0x1c0776], SPRITE['DOOR_GOLD_OPEN']);
    }
    var _0x4d0515 = world['units'][ITEMS['RABBIT']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x4d0515['length']; _0x1c0776++) draw_transition(_0x4d0515[_0x1c0776], SPRITE['RABBIT'], SPRITE['HURT_RABBIT']);
    var _0x12838a = world['units'][ITEMS['BED']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x12838a['length']; _0x1c0776++) draw_transition(_0x12838a[_0x1c0776], SPRITE['BED']);
    var _0x1ce47e = world['units'][ITEMS['SAND_WORM']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x1ce47e['length']; _0x1c0776++) draw_transition(_0x1ce47e[_0x1c0776], SPRITE['SAND_WORM'], SPRITE['HURT_SAND_WORM']);
    var _0x1cb1b3 = world['units'][ITEMS['SPELL']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x1cb1b3['length']; _0x1c0776++) {
        if (_0x1cb1b3[_0x1c0776]['fly'] === 0x0) draw_transition(_0x1cb1b3[_0x1c0776]);
    }
    var _0x12838a = world['units'][ITEMS['BED']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x12838a['length']; _0x1c0776++) draw_transition(_0x12838a[_0x1c0776], SPRITE['BED_TOP']);
    var _0x9e8152 = world['units'][ITEMS['CRAB']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x9e8152['length']; _0x1c0776++) draw_transition(_0x9e8152[_0x1c0776]);
    var _0x100cf2 = world['units'][ITEMS['FOX']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x100cf2['length']; _0x1c0776++) draw_transition(_0x100cf2[_0x1c0776], SPRITE['FOX'], SPRITE['HURT_FOX']);
    var _0x48334c = world['units'][ITEMS['BOAR']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x48334c['length']; _0x1c0776++) draw_transition(_0x48334c[_0x1c0776]);
    var _0x215da4 = world['units'][ITEMS['WOLF']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x215da4['length']; _0x1c0776++) draw_transition(_0x215da4[_0x1c0776], SPRITE['WOLF'], SPRITE['HURT_WOLF']);
    var _0x1b5c81 = world['units'][ITEMS['BABY_DRAGON']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x1b5c81['length']; _0x1c0776++) draw_transition(_0x1b5c81[_0x1c0776], SPRITE['BABY_DRAGON'], SPRITE['HURT_BABY_DRAGON']);
    var _0x52e571 = world['units'][ITEMS['BABY_LAVA']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x52e571['length']; _0x1c0776++) draw_transition(_0x52e571[_0x1c0776], SPRITE['BABY_LAVA'], SPRITE['HURT_BABY_LAVA']);
    var _0x2c169a = world['units'][ITEMS['CARROT_SEED']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x2c169a['length']; _0x1c0776++)
        if ((_0x2c169a[_0x1c0776]['info'] & 0xf) !== 0x0 && _0x2c169a[_0x1c0776]['info'] !== 0xa) draw_transition(_0x2c169a[_0x1c0776]);
    var _0x3cda54 = world['units'][ITEMS['WATERMELON_SEED']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x3cda54['length']; _0x1c0776++)
        if ((_0x3cda54[_0x1c0776]['info'] & 0xf) !== 0x0 && _0x3cda54[_0x1c0776]['info'] !== 0xa) draw_transition(_0x3cda54[_0x1c0776]);
    var _0xa120a6 = world['units'][ITEMS['ALOE_VERA_MOB']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0xa120a6['length']; _0x1c0776++) draw_transition(_0xa120a6[_0x1c0776], SPRITE['ALOE_VERA']);
    var _0xa120a6 = world['units'][ITEMS['ALOE_VERA_SEED']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0xa120a6['length']; _0x1c0776++)
        if ((_0xa120a6[_0x1c0776]['info'] & 0xf) !== 0x0 && _0xa120a6[_0x1c0776]['info'] !== 0xa) draw_transition(_0xa120a6[_0x1c0776]);
    var _0x5bcd36 = world['units'][ITEMS['TOMATO_SEED']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x5bcd36['length']; _0x1c0776++) draw_fg_transition(_0x5bcd36[_0x1c0776]);
    var _0x9711ad = world['units'][ITEMS['GARLIC_SEED']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x9711ad['length']; _0x1c0776++)
        if ((_0x9711ad[_0x1c0776]['info'] & 0xf) !== 0x0 && _0x9711ad[_0x1c0776]['info'] !== 0xa) draw_transition(_0x9711ad[_0x1c0776]);
    var _0x188504 = world['units'][ITEMS['THORNBUSH_SEED']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x188504['length']; _0x1c0776++)
        if ((_0x188504[_0x1c0776]['info'] & 0xf) !== 0x0 && _0x188504[_0x1c0776]['info'] !== 0xa) draw_transition(_0x188504[_0x1c0776]);
    var _0x3148a6 = world['units'][ITEMS['PUMPKIN_SEED']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x3148a6['length']; _0x1c0776++)
        if ((_0x3148a6[_0x1c0776]['info'] & 0xf) !== 0x0 && _0x3148a6[_0x1c0776]['info'] !== 0xa) draw_transition(_0x3148a6[_0x1c0776]);
    var _0x3e6cad = world['units'][ITEMS['TREASURE_CHEST']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x3e6cad['length']; _0x1c0776++) draw_transition(_0x3e6cad[_0x1c0776], SPRITE['TREASURE_CHEST'], SPRITE['HURT_TREASURE_CHEST']);
    var _0x304cb7 = world['units'][ITEMS['KRAKEN']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x304cb7['length']; _0x1c0776++) draw_transition(_0x304cb7[_0x1c0776], SPRITE['KRAKEN'], SPRITE['HURT_KRAKEN']);
    var _0x37b7c0 = world['units'][ITEMS['PIRANHA']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x37b7c0['length']; _0x1c0776++) draw_transition(_0x37b7c0[_0x1c0776], SPRITE['PIRANHA'], SPRITE['HURT_PIRANHA']);
    var _0x177465 = world['units'][ITEMS['SPIDER']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x177465['length']; _0x1c0776++) draw_transition(_0x177465[_0x1c0776], SPRITE['SPIDER'], SPRITE['HURT_SPIDER']);
    var _0x440890 = world['units'][ITEMS['PENGUIN']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x440890['length']; _0x1c0776++) draw_transition(_0x440890[_0x1c0776], SPRITE['PENGUIN'], SPRITE['HURT_PENGUIN']);
    var _0x5bcc85 = world['units'][ITEMS['BEAR']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x5bcc85['length']; _0x1c0776++) draw_transition(_0x5bcc85[_0x1c0776], SPRITE['BEAR'], SPRITE['HURT_BEAR']);
    var _0x28417c = world['units'][ITEMS['BABY_MAMMOTH']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x28417c['length']; _0x1c0776++) draw_transition(_0x28417c[_0x1c0776]);
    var _0x2469c5 = world['units'][ITEMS['FLAME']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x2469c5['length']; _0x1c0776++) draw_transition(_0x2469c5[_0x1c0776], SPRITE['FIRE_MOB'], SPRITE['HURT_FIRE_MOB']);
    var _0x58d065 = world['units'][ITEMS['CRAB_BOSS']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x58d065['length']; _0x1c0776++) draw_transition(_0x58d065[_0x1c0776]);
    var _0x26be95 = world['units'][ITEMS['MAMMOTH']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x26be95['length']; _0x1c0776++) draw_transition(_0x26be95[_0x1c0776], SPRITE['MAMMOTH'], SPRITE['HURT_MAMMOTH']);
    var _0x5a6962 = world['units'][ITEMS['DRAGON']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x5a6962['length']; _0x1c0776++) {
        if (_0x5a6962[_0x1c0776]['scale'] === 0x1) draw_transition(_0x5a6962[_0x1c0776], SPRITE['DRAGON'], SPRITE['HURT_DRAGON']);
    }
    var _0x5a6962 = world['units'][ITEMS['LAVA_DRAGON']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x5a6962['length']; _0x1c0776++) {
        if (_0x5a6962[_0x1c0776]['scale'] === 0x1) draw_transition(_0x5a6962[_0x1c0776], SPRITE['LAVA_DRAGON'], SPRITE['HURT_LAVA_DRAGON']);
    }
    var _0x3880fb = world['units'][ITEMS['WORKBENCH']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x3880fb['length']; _0x1c0776++) draw_transition(_0x3880fb[_0x1c0776], SPRITE['WORKBENCH']);
    var _0x40cd9f = world['units'][ITEMS['FURNACE']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x40cd9f['length']; _0x1c0776++) draw_transition(_0x40cd9f[_0x1c0776]);
    var _0x2df8c9 = world['units'][ITEMS['BREAD_OVEN']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x2df8c9['length']; _0x1c0776++) draw_transition(_0x2df8c9[_0x1c0776]);
    var _0x36e1e0 = world['units'][ITEMS['WOOD_DOOR']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x36e1e0['length']; _0x1c0776++) {
        if (!(_0x36e1e0[_0x1c0776]['info'] & 0x1)) draw_transition(_0x36e1e0[_0x1c0776], Settings['ColoredSpikes'] ? _0x36e1e0[_0x1c0776]['ally'] ? 0x271c : 0x271d : SPRITE['DOOR_WOOD_CLOSE']);
        _0x36e1e0[_0x1c0776]['draw_life'](_0x36e1e0[_0x1c0776]['info'] >> 0x1);
    }
    var _0x36e1e0 = world['units'][ITEMS['STONE_DOOR']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x36e1e0['length']; _0x1c0776++) {
        if (!(_0x36e1e0[_0x1c0776]['info'] & 0x1)) draw_transition(_0x36e1e0[_0x1c0776], Settings['ColoredSpikes'] ? _0x36e1e0[_0x1c0776]['ally'] ? 0x271e : 0x271f : SPRITE['DOOR_STONE_CLOSE']);
        _0x36e1e0[_0x1c0776]['draw_life'](_0x36e1e0[_0x1c0776]['info'] >> 0x1);
    }
    var _0x36e1e0 = world['units'][ITEMS['GOLD_DOOR']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x36e1e0['length']; _0x1c0776++) {
        if (!(_0x36e1e0[_0x1c0776]['info'] & 0x1)) draw_transition(_0x36e1e0[_0x1c0776], Settings['ColoredSpikes'] ? _0x36e1e0[_0x1c0776]['ally'] ? 0x2720 : 0x2721 : SPRITE['DOOR_GOLD_CLOSE']);
        _0x36e1e0[_0x1c0776]['draw_life'](_0x36e1e0[_0x1c0776]['info'] >> 0x1);
    }
    var _0x36e1e0 = world['units'][ITEMS['DIAMOND_DOOR']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x36e1e0['length']; _0x1c0776++) {
        if (!(_0x36e1e0[_0x1c0776]['info'] & 0x1)) draw_transition(_0x36e1e0[_0x1c0776], Settings['ColoredSpikes'] ? _0x36e1e0[_0x1c0776]['ally'] ? 0x2722 : 0x2723 : SPRITE['DOOR_DIAMOND_CLOSE']);
        _0x36e1e0[_0x1c0776]['draw_life'](_0x36e1e0[_0x1c0776]['info'] >> 0x1);
    }
    var _0x36e1e0 = world['units'][ITEMS['AMETHYST_DOOR']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x36e1e0['length']; _0x1c0776++) {
        if (!(_0x36e1e0[_0x1c0776]['info'] & 0x1)) draw_transition(_0x36e1e0[_0x1c0776], Settings['ColoredSpikes'] ? _0x36e1e0[_0x1c0776]['ally'] ? 0x2724 : 0x2725 : SPRITE['DOOR_AMETHYST_CLOSE']);
        _0x36e1e0[_0x1c0776]['draw_life'](_0x36e1e0[_0x1c0776]['info'] >> 0x1);
    }
    var _0x36e1e0 = world['units'][ITEMS['REIDITE_DOOR']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x36e1e0['length']; _0x1c0776++) {
        if (!(_0x36e1e0[_0x1c0776]['info'] & 0x1)) draw_transition(_0x36e1e0[_0x1c0776], Settings['ColoredSpikes'] ? _0x36e1e0[_0x1c0776]['ally'] ? 0x2726 : 0x2727 : SPRITE['REIDITE_DOOR']);
        _0x36e1e0[_0x1c0776]['draw_life'](_0x36e1e0[_0x1c0776]['info'] >> 0x1);
    }
    var _0x36e1e0 = world['units'][ITEMS['WOOD_DOOR_SPIKE']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x36e1e0['length']; _0x1c0776++) {
        if (!(_0x36e1e0[_0x1c0776]['info'] & 0x1)) draw_transition(_0x36e1e0[_0x1c0776], Settings['ColoredSpikes'] ? _0x36e1e0[_0x1c0776]['ally'] ? 0x2728 : 0x2729 : SPRITE['WOOD_DOOR_SPIKE']);
        _0x36e1e0[_0x1c0776]['draw_life'](_0x36e1e0[_0x1c0776]['info'] >> 0x1);
    }
    var _0x36e1e0 = world['units'][ITEMS['STONE_DOOR_SPIKE']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x36e1e0['length']; _0x1c0776++) {
        if (!(_0x36e1e0[_0x1c0776]['info'] & 0x1)) draw_transition(_0x36e1e0[_0x1c0776], Settings['ColoredSpikes'] ? _0x36e1e0[_0x1c0776]['ally'] ? 0x272a : 0x272b : SPRITE['STONE_DOOR_SPIKE']);
        _0x36e1e0[_0x1c0776]['draw_life'](_0x36e1e0[_0x1c0776]['info'] >> 0x1);
    }
    var _0x36e1e0 = world['units'][ITEMS['GOLD_DOOR_SPIKE']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x36e1e0['length']; _0x1c0776++) {
        if (!(_0x36e1e0[_0x1c0776]['info'] & 0x1)) draw_transition(_0x36e1e0[_0x1c0776], Settings['ColoredSpikes'] ? _0x36e1e0[_0x1c0776]['ally'] ? 0x272c : 0x272d : SPRITE['GOLD_DOOR_SPIKE']);
        _0x36e1e0[_0x1c0776]['draw_life'](_0x36e1e0[_0x1c0776]['info'] >> 0x1);
    }
    var _0x36e1e0 = world['units'][ITEMS['DIAMOND_DOOR_SPIKE']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x36e1e0['length']; _0x1c0776++) {
        if (!(_0x36e1e0[_0x1c0776]['info'] & 0x1)) draw_transition(_0x36e1e0[_0x1c0776], Settings['ColoredSpikes'] ? _0x36e1e0[_0x1c0776]['ally'] ? 0x272e : 0x272f : SPRITE['DIAMOND_DOOR_SPIKE']);
        _0x36e1e0[_0x1c0776]['draw_life'](_0x36e1e0[_0x1c0776]['info'] >> 0x1);
    }
    var _0x36e1e0 = world['units'][ITEMS['AMETHYST_DOOR_SPIKE']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x36e1e0['length']; _0x1c0776++) {
        if (!(_0x36e1e0[_0x1c0776]['info'] & 0x1)) draw_transition(_0x36e1e0[_0x1c0776], Settings['ColoredSpikes'] ? _0x36e1e0[_0x1c0776]['ally'] ? 0x2730 : 0x2731 : SPRITE['AMETHYST_DOOR_SPIKE']);
        _0x36e1e0[_0x1c0776]['draw_life'](_0x36e1e0[_0x1c0776]['info'] >> 0x1);
    }
    var _0x36e1e0 = world['units'][ITEMS['REIDITE_DOOR_SPIKE']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x36e1e0['length']; _0x1c0776++) {
        if (!(_0x36e1e0[_0x1c0776]['info'] & 0x1)) draw_transition(_0x36e1e0[_0x1c0776], Settings['ColoredSpikes'] ? _0x36e1e0[_0x1c0776]['ally'] ? 0x2732 : 0x2733 : SPRITE['REIDITE_DOOR_SPIKE']);
        _0x36e1e0[_0x1c0776]['draw_life'](_0x36e1e0[_0x1c0776]['info'] >> 0x1);
    }
    var _0x1eea82 = world['units'][ITEMS['WALL']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x1eea82['length']; _0x1c0776++) {
        draw_transition(_0x1eea82[_0x1c0776], SPRITE['WALL']), _0x1eea82[_0x1c0776]['draw_life'](_0x1eea82[_0x1c0776]['info']);
    }
    var _0x1eea82 = world['units'][ITEMS['STONE_WALL']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x1eea82['length']; _0x1c0776++) {
        draw_transition(_0x1eea82[_0x1c0776], SPRITE['STONE_WALL']), _0x1eea82[_0x1c0776]['draw_life'](_0x1eea82[_0x1c0776]['info']);
    }
    var _0x1eea82 = world['units'][ITEMS['GOLD_WALL']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x1eea82['length']; _0x1c0776++) {
        draw_transition(_0x1eea82[_0x1c0776], SPRITE['GOLD_WALL']), _0x1eea82[_0x1c0776]['draw_life'](_0x1eea82[_0x1c0776]['info']);
    }
    var _0x1eea82 = world['units'][ITEMS['DIAMOND_WALL']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x1eea82['length']; _0x1c0776++) {
        draw_transition(_0x1eea82[_0x1c0776], SPRITE['DIAMOND_WALL']), _0x1eea82[_0x1c0776]['draw_life'](_0x1eea82[_0x1c0776]['info']);
    }
    var _0x1eea82 = world['units'][ITEMS['AMETHYST_WALL']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x1eea82['length']; _0x1c0776++) {
        draw_transition(_0x1eea82[_0x1c0776], SPRITE['AMETHYST_WALL']), _0x1eea82[_0x1c0776]['draw_life'](_0x1eea82[_0x1c0776]['info']);
    }
    var _0x1eea82 = world['units'][ITEMS['REIDITE_WALL']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x1eea82['length']; _0x1c0776++) {
        draw_transition(_0x1eea82[_0x1c0776], SPRITE['REIDITE_WALL']), _0x1eea82[_0x1c0776]['draw_life'](_0x1eea82[_0x1c0776]['info']);
    }
    var _0x586143 = world['units'][ITEMS['SPIKE']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x586143['length']; _0x1c0776++) {
        draw_transition(_0x586143[_0x1c0776], Settings['ColoredSpikes'] ? _0x586143[_0x1c0776]['ally'] ? 0x271a : 0x271b : SPRITE['SPIKE']), _0x586143[_0x1c0776]['draw_life'](_0x586143[_0x1c0776]['info']);
    }
    var _0x586143 = world['units'][ITEMS['STONE_SPIKE']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x586143['length']; _0x1c0776++) {
        draw_transition(_0x586143[_0x1c0776], Settings['ColoredSpikes'] ? _0x586143[_0x1c0776]['ally'] ? 0x2718 : 0x2719 : SPRITE['STONE_SPIKE']), _0x586143[_0x1c0776]['draw_life'](_0x586143[_0x1c0776]['info']);
    }
    var _0x586143 = world['units'][ITEMS['GOLD_SPIKE']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x586143['length']; _0x1c0776++) {
        draw_transition(_0x586143[_0x1c0776], Settings['ColoredSpikes'] ? _0x586143[_0x1c0776]['ally'] ? 0x2716 : 0x2717 : SPRITE['GOLD_SPIKE']), _0x586143[_0x1c0776]['draw_life'](_0x586143[_0x1c0776]['info']);
    }
    var _0x586143 = world['units'][ITEMS['DIAMOND_SPIKE']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x586143['length']; _0x1c0776++) {
        draw_transition(_0x586143[_0x1c0776], Settings['ColoredSpikes'] ? _0x586143[_0x1c0776]['ally'] ? 0x2714 : 0x2715 : SPRITE['DIAMOND_SPIKE']), _0x586143[_0x1c0776]['draw_life'](_0x586143[_0x1c0776]['info']);
    }
    var _0x586143 = world['units'][ITEMS['AMETHYST_SPIKE']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x586143['length']; _0x1c0776++) {
        draw_transition(_0x586143[_0x1c0776], Settings['ColoredSpikes'] ? _0x586143[_0x1c0776]['ally'] ? 0x2712 : 0x2713 : SPRITE['AMETHYST_SPIKE']), _0x586143[_0x1c0776]['draw_life'](_0x586143[_0x1c0776]['info']);
    }
    var _0x586143 = world['units'][ITEMS['REIDITE_SPIKE']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x586143['length']; _0x1c0776++) {
        draw_transition(_0x586143[_0x1c0776], Settings['ColoredSpikes'] ? _0x586143[_0x1c0776]['ally'] ? 0x2710 : 0x2711 : SPRITE['REIDITE_SPIKE']), _0x586143[_0x1c0776]['draw_life'](_0x586143[_0x1c0776]['info']);
    }
    var _0x2b2d0b = world['units'][ITEMS['WELL']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x2b2d0b['length']; _0x1c0776++) {
        var _0x53ec49 = _0x2b2d0b[_0x1c0776];
        if (_0x53ec49['info'] > 0x0) draw_transition(_0x53ec49, SPRITE['WELL_FULL']);
        else draw_transition(_0x53ec49, SPRITE['WELL_EMPTY']);
    }
    var _0x364aae = world['units'][ITEMS['TOTEM']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x364aae['length']; _0x1c0776++) {
        draw_transition(_0x364aae[_0x1c0776], SPRITE['TOTEM']);
        if (Settings['AutoTotem']['e'] && !user['totem']['wait'] && user['team']['length'] === 0x0) {
            let _0x401229 = world['fast_units'][user['uid']];
            if (_0x401229) {
                if (!((_0x364aae[_0x1c0776]['info'] & 0x10) >> 0x4) && _0x364aae[_0x1c0776]['info'] < 0x8) {
                    dist2dSQRT(_0x401229, _0x364aae[_0x1c0776]) < 0x12c && client['socket']['send'](JSON['stringify']([0x12, _0x364aae[_0x1c0776]['pid'], _0x364aae[_0x1c0776]['id']]));;
                };
            };
        };
        ctx['drawImage'](_0x364aae[_0x1c0776]['img']['canvas'], user['cam']['x'] + _0x364aae[_0x1c0776]['x'] - 0x2d, user['cam']['y'] + _0x364aae[_0x1c0776]['y'] - 0x2d);
    }
    draw_map_transition(draw_map_objects, _0x2aa8c6, _0x40d710, _0x492618, _0x494552, SPRITE['GOLD'], 'g', 0x2), draw_map_transition(draw_map_objects, _0x2aa8c6, _0x40d710, _0x492618, _0x494552, SPRITE['GOLD_WINTER'], 'gw', 0x2), draw_map_transition(draw_map_objects, _0x2aa8c6, _0x40d710, _0x492618, _0x494552, SPRITE['DIAMOND'], 'd', 0x2), draw_map_transition(draw_map_objects, _0x2aa8c6, _0x40d710, _0x492618, _0x494552, SPRITE['DIAMOND_WINTER'], 'dw', 0x2), draw_map_transition(draw_map_objects, _0x2aa8c6, _0x40d710, _0x492618, _0x494552, SPRITE['PLANT'], 'p', 0x0), draw_map_transition(draw_map_objects, _0x2aa8c6, _0x40d710, _0x492618, _0x494552, SPRITE['EMERALD'], 'm', 0x2), draw_map_transition(draw_map_objects, _0x2aa8c6, _0x40d710, _0x492618, _0x494552, SPRITE['AMETHYST'], 'a', 0x2), draw_map_transition(draw_map_objects, _0x2aa8c6, _0x40d710, _0x492618, _0x494552, SPRITE['REIDITE'], 're', 0x2), draw_map_transition(draw_map_objects, _0x2aa8c6, _0x40d710, _0x492618, _0x494552, SPRITE['SHADOW_CAVE_STONES'], 'cs', 0x3, 0x3), draw_map_transition(draw_map_objects, _0x2aa8c6, _0x40d710, _0x492618, _0x494552, SPRITE['SHADOW_CAVE_STONES'], 'cs', 0x2, 0x2), draw_map_transition(draw_map_objects, _0x2aa8c6, _0x40d710, _0x492618, _0x494552, SPRITE['SHADOW_CAVE_STONES'], 'cs', 0x1, 0x1), draw_map_transition(draw_map_objects, _0x2aa8c6, _0x40d710, _0x492618, _0x494552, SPRITE['SHADOW_CAVE_STONES'], 'cs', 0x0, 0x0), draw_map_transition(draw_map_objects, _0x2aa8c6, _0x40d710, _0x492618, _0x494552, SPRITE['CAVE_STONES'], 'cs', 0x3, 0x3), draw_map_transition(draw_map_objects, _0x2aa8c6, _0x40d710, _0x492618, _0x494552, SPRITE['CAVE_STONES'], 'cs', 0x2, 0x2), draw_map_transition(draw_map_objects, _0x2aa8c6, _0x40d710, _0x492618, _0x494552, SPRITE['CAVE_STONES'], 'cs', 0x1, 0x1), draw_map_transition(draw_map_objects, _0x2aa8c6, _0x40d710, _0x492618, _0x494552, SPRITE['CAVE_STONES'], 'cs', 0x0, 0x0);
    var _0x4e954d = world['units'][ITEMS['FRUIT']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x4e954d['length']; _0x1c0776++) {
        for (var _0x355270 = 0x0; _0x355270 < _0x4e954d[_0x1c0776]['info']; _0x355270++) draw_transition(_0x4e954d[_0x1c0776]['fruits'][_0x355270], SPRITE['FRUIT']);
    }
    draw_map_transition(draw_map_objects, _0x2aa8c6, _0x40d710, _0x492618, _0x494552, SPRITE['STONES'], 's', 0x2);
    var _0x274ed1 = world['units'][ITEMS['EXTRACTOR_MACHINE_STONE']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x274ed1['length']; _0x1c0776++) {
        draw_transition(_0x274ed1[_0x1c0776]);
    }
    var _0x274ed1 = world['units'][ITEMS['EXTRACTOR_MACHINE_GOLD']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x274ed1['length']; _0x1c0776++) {
        draw_transition(_0x274ed1[_0x1c0776]);
    }
    var _0x274ed1 = world['units'][ITEMS['EXTRACTOR_MACHINE_DIAMOND']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x274ed1['length']; _0x1c0776++) {
        draw_transition(_0x274ed1[_0x1c0776]);
    }
    var _0x274ed1 = world['units'][ITEMS['EXTRACTOR_MACHINE_AMETHYST']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x274ed1['length']; _0x1c0776++) {
        draw_transition(_0x274ed1[_0x1c0776]);
    }
    var _0x274ed1 = world['units'][ITEMS['EXTRACTOR_MACHINE_REIDITE']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x274ed1['length']; _0x1c0776++) {
        draw_transition(_0x274ed1[_0x1c0776]);
    }
    var _0xee0fd8 = world['units'][ITEMS['WINDMILL']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0xee0fd8['length']; _0x1c0776++) draw_bg_transition(_0xee0fd8[_0x1c0776]);
    var _0x212b24 = world['units'][ITEMS['FIRE']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x212b24['length']; _0x1c0776++) draw_fg_transition(_0x212b24[_0x1c0776]);
    var _0x212b24 = world['units'][ITEMS['BIG_FIRE']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x212b24['length']; _0x1c0776++) draw_fg_transition(_0x212b24[_0x1c0776]);
    var _0x40cd9f = world['units'][ITEMS['FURNACE']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x40cd9f['length']; _0x1c0776++) {
        if (_0x40cd9f[_0x1c0776]['action'] == 0x2) draw_fg_transition(_0x40cd9f[_0x1c0776]);
    }
    var _0x2df8c9 = world['units'][ITEMS['BREAD_OVEN']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x2df8c9['length']; _0x1c0776++) {
        draw_fg_transition(_0x2df8c9[_0x1c0776]);
    }
    var _0x4e483a = world['units'][ITEMS['RESURRECTION']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x4e483a['length']; _0x1c0776++) draw_fg_transition(_0x4e483a[_0x1c0776]);
    var _0x1fac5c = world['units'][ITEMS['EMERALD_MACHINE']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x1fac5c['length']; _0x1c0776++) {
        draw_fg_transition(_0x1fac5c[_0x1c0776]), _0x1fac5c[_0x1c0776]['draw_life'](_0x1fac5c[_0x1c0776]['info']), ctx['drawImage'](_0x1fac5c[_0x1c0776]['img']['canvas'], user['cam']['x'] + _0x1fac5c[_0x1c0776]['x'] - 0x37, user['cam']['y'] + _0x1fac5c[_0x1c0776]['y'] - 0x23);
    }
    draw_map_transition(draw_map_objects, _0x2aa8c6, _0x40d710, _0x492618, _0x494552, SPRITE['CACTUS'], 'c', 0x0), draw_map_transition(draw_map_objects, _0x2aa8c6, _0x40d710, _0x492618, _0x494552, SPRITE['TREE'], 't', 0x5, 0x4), draw_map_transition(draw_map_objects, _0x2aa8c6, _0x40d710, _0x492618, _0x494552, SPRITE['FIR'], 'f', 0x2, 0x2), draw_map_transition(draw_map_objects, _0x2aa8c6, _0x40d710, _0x492618, _0x494552, SPRITE['PALM'], 'plm', 0x0, 0x0), draw_map_transition(draw_map_objects, _0x2aa8c6, _0x40d710, _0x492618, _0x494552, SPRITE['TREE_BRANCH'], 'b', 0x3, 0x2), draw_map_transition(draw_map_objects, _0x2aa8c6, _0x40d710, _0x492618, _0x494552, SPRITE['TREE'], 't', 0x3, 0x2), draw_map_transition(draw_map_objects, _0x2aa8c6, _0x40d710, _0x492618, _0x494552, SPRITE['TREE_BRANCH'], 'b', 0x1, 0x0), draw_map_transition(draw_map_objects, _0x2aa8c6, _0x40d710, _0x492618, _0x494552, SPRITE['FIR'], 'f', 0x1, 0x1), draw_map_transition(draw_map_objects, _0x2aa8c6, _0x40d710, _0x492618, _0x494552, SPRITE['PALM'], 'plm', 0x1, 0x1), draw_map_transition(draw_map_objects, _0x2aa8c6, _0x40d710, _0x492618, _0x494552, SPRITE['TREE'], 't', 0x1, 0x0), draw_map_transition(draw_map_objects, _0x2aa8c6, _0x40d710, _0x492618, _0x494552, SPRITE['FIR'], 'f', 0x0, 0x0), draw_map_transition(draw_map_objects, _0x2aa8c6, _0x40d710, _0x492618, _0x494552, SPRITE['PALM'], 'plm', 0x2, 0x2);
    var _0xee0fd8 = world['units'][ITEMS['WINDMILL']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0xee0fd8['length']; _0x1c0776++) draw_fg_transition(_0xee0fd8[_0x1c0776]);
    var _0x579666 = world['units'][ITEMS['CHEST']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x579666['length']; _0x1c0776++) {
        draw_transition(_0x579666[_0x1c0776]);
        if (Settings['AutoSteal']['e']) {
            if (_0x579666[_0x1c0776]['ally'] || !_0x579666[_0x1c0776]['lock'] || _0x579666[_0x1c0776]['info'] && Settings['AutoSteal']['u'] && user['inv']['n'][0x98] || _0x579666[_0x1c0776]['steal'] && user['inv']['n'][0x98]) {
                let _0x30b8f6 = world['fast_units'][user['uid']];
                if (_0x30b8f6 && dist2dSQRT(_0x30b8f6, _0x579666[_0x1c0776]) < 0x12c) {
                    (Settings['AutoSteal']['u'] || _0x579666[_0x1c0776]['steal']) && !_0x579666[_0x1c0776]['ally'] && _0x579666[_0x1c0776]['lock'] && client['socket']['send'](JSON['stringify']([0xf, _0x579666[_0x1c0776]['pid'], _0x579666[_0x1c0776]['id']]));;
                    client['socket']['send'](JSON['stringify']([0x9, _0x579666[_0x1c0776]['pid'], _0x579666[_0x1c0776]['id']])), client['socket']['send'](JSON['stringify']([0x9, _0x579666[_0x1c0776]['pid'], _0x579666[_0x1c0776]['id']])), client['socket']['send'](JSON['stringify']([0x9, _0x579666[_0x1c0776]['pid'], _0x579666[_0x1c0776]['id']])), client['socket']['send'](JSON['stringify']([0x9, _0x579666[_0x1c0776]['pid'], _0x579666[_0x1c0776]['id']]));
                };
            };
        };
    }
    var _0x2dda86 = world['units'][ITEMS['CRATE']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x2dda86['length']; _0x1c0776++) draw_transition(_0x2dda86[_0x1c0776], SPRITE['CRATE'], SPRITE['HURT_DEAD_BOX']);
    var _0x2ac1c0 = world['units'][ITEMS['DEAD_BOX']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x2ac1c0['length']; _0x1c0776++) draw_transition(_0x2ac1c0[_0x1c0776], SPRITE['CRATE'], SPRITE['HURT_DEAD_BOX']);
    var _0x124aae = world['units'][ITEMS['PLAYERS']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x124aae['length']; _0x1c0776++) {
        var _0x5d5726 = _0x124aae[_0x1c0776];
        if (_0x124aae[_0x1c0776]['vehicle'] !== INV['BABY_DRAGON'] && _0x124aae[_0x1c0776]['vehicle'] !== INV['BABY_LAVA'] && _0x124aae[_0x1c0776]['vehicle'] !== INV['HAWK'] && _0x124aae[_0x1c0776]['vehicle'] !== INV['PLANE'] && _0x124aae[_0x1c0776]['vehicle'] !== INV['NIMBUS']) {
            if (_0x5d5726['tower'] === 0x0) {
                if (_0x5d5726['tower_fx'] > 0.001) {
                    _0x5d5726['tower_fx'] = Utils['lerp'](_0x5d5726['tower_fx'], 0x0, 0.018);
                    var _0x17f1d3 = 0x1 + 0.18 * Math['min'](0x1, Math['max'](_0x5d5726['tower_fx'], 0x0) / 0x64);
                    ctx['save'](), ctx['scale'](_0x17f1d3, _0x17f1d3), user['cam']['x'] /= _0x17f1d3, user['cam']['y'] /= _0x17f1d3, _0x5d5726['x'] /= _0x17f1d3, _0x5d5726['y'] /= _0x17f1d3, _0x5d5726['r']['x'] /= _0x17f1d3, _0x5d5726['r']['y'] /= _0x17f1d3, _0x5d5726['draw_vehicle'](), _0x5d5726['draw'](), user['cam']['x'] *= _0x17f1d3, user['cam']['y'] *= _0x17f1d3, _0x5d5726['x'] *= _0x17f1d3, _0x5d5726['y'] *= _0x17f1d3, _0x5d5726['r']['x'] *= _0x17f1d3, _0x5d5726['r']['y'] *= _0x17f1d3, ctx['restore']();
                } else _0x5d5726['fly'] = 0x0, _0x5d5726['draw_vehicle'](), _0x5d5726['draw']();
            }
        } else {
            if (_0x5d5726['speed'] <= 0xb4) {
                ctx['save']();
                var _0x17f1d3 = 0x1 + 0.35 * Math['min'](0x1, Math['max'](_0x5d5726['vehicle_fx5'] - 0x1e, 0x0) / 0xb4);
                ctx['scale'](_0x17f1d3, _0x17f1d3), user['cam']['x'] /= _0x17f1d3, user['cam']['y'] /= _0x17f1d3, _0x5d5726['x'] /= _0x17f1d3, _0x5d5726['y'] /= _0x17f1d3, _0x5d5726['r']['x'] /= _0x17f1d3, _0x5d5726['r']['y'] /= _0x17f1d3, _0x5d5726['fly'] = 0x0, _0x5d5726['draw_vehicle'](), _0x5d5726['draw'](), user['cam']['x'] *= _0x17f1d3, user['cam']['y'] *= _0x17f1d3, _0x5d5726['x'] *= _0x17f1d3, _0x5d5726['y'] *= _0x17f1d3, _0x5d5726['r']['x'] *= _0x17f1d3, _0x5d5726['r']['y'] *= _0x17f1d3, ctx['restore']();
            }
        }
    }
    var _0x353d53 = world['units'][ITEMS['WOOD_TOWER']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x353d53['length']; _0x1c0776++) draw_transition(_0x353d53[_0x1c0776], SPRITE['WOOD_TOWER']);
    var _0x124aae = world['units'][ITEMS['PLAYERS']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x124aae['length']; _0x1c0776++) {
        var _0x5d5726 = _0x124aae[_0x1c0776];
        if (_0x5d5726['tower'] === 0x1 && (_0x5d5726['speed'] < 0xb4 || _0x5d5726['vehicle'] !== INV['BABY_DRAGON'] && _0x5d5726['vehicle'] !== INV['BABY_LAVA'] && _0x5d5726['vehicle'] !== INV['NIMBUS'] && _0x5d5726['vehicle'] !== INV['HAWK'] && _0x5d5726['vehicle'] !== INV['PLANE'])) {
            _0x5d5726['tower_fx'] = Utils['lerp'](_0x5d5726['tower_fx'], 0x64, 0.018);
            var _0x17f1d3 = 0x1 + 0.18 * Math['min'](0x1, Math['max'](_0x5d5726['tower_fx'], 0x0) / 0x64);
            ctx['save'](), ctx['scale'](_0x17f1d3, _0x17f1d3), user['cam']['x'] /= _0x17f1d3, user['cam']['y'] /= _0x17f1d3, _0x5d5726['x'] /= _0x17f1d3, _0x5d5726['y'] /= _0x17f1d3, _0x5d5726['r']['x'] /= _0x17f1d3, _0x5d5726['r']['y'] /= _0x17f1d3, _0x5d5726['draw_vehicle'](), _0x5d5726['draw'](), user['cam']['x'] *= _0x17f1d3, user['cam']['y'] *= _0x17f1d3, _0x5d5726['x'] *= _0x17f1d3, _0x5d5726['y'] *= _0x17f1d3, _0x5d5726['r']['x'] *= _0x17f1d3, _0x5d5726['r']['y'] *= _0x17f1d3, ctx['restore']();
        }
    }
    var _0xad02dd = world['units'][ITEMS['ROOF']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0xad02dd['length']; _0x1c0776++) {
        draw_transition(_0xad02dd[_0x1c0776], SPRITE['ROOF']), _0xad02dd[_0x1c0776]['draw_life'](_0xad02dd[_0x1c0776]['info']);
    }
    var _0x5dcdf9 = world['units'][ITEMS['FIREFLY']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x5dcdf9['length']; _0x1c0776++) draw_transition(_0x5dcdf9[_0x1c0776], SPRITE['FIREFLY'], SPRITE['HURT_FIREFLY']);
    var _0x143255 = world['units'][ITEMS['GARLAND']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x143255['length']; _0x1c0776++) draw_transition(_0x143255[_0x1c0776], SPRITE['GARLAND']);
    var _0x124aae = world['units'][ITEMS['PLAYERS']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x124aae['length']; _0x1c0776++) {
        var _0x5d5726 = _0x124aae[_0x1c0776];
        if ((_0x5d5726['vehicle'] === INV['BABY_DRAGON'] || _0x5d5726['vehicle'] === INV['BABY_LAVA'] || _0x5d5726['vehicle'] === INV['NIMBUS'] || _0x5d5726['vehicle'] === INV['HAWK'] || _0x5d5726['vehicle'] === INV['PLANE']) && _0x5d5726['speed'] > 0xb4) {
            _0x5d5726['fly'] = 0x1, ctx['save']();
            var _0x17f1d3 = 0x1 + 0.35 * Math['min'](0x1, Math['max'](_0x5d5726['vehicle_fx5'] - 0x1e, 0x0) / 0xb4);
            ctx['scale'](_0x17f1d3, _0x17f1d3), user['cam']['x'] /= _0x17f1d3, user['cam']['y'] /= _0x17f1d3, _0x5d5726['x'] /= _0x17f1d3, _0x5d5726['y'] /= _0x17f1d3, _0x5d5726['r']['x'] /= _0x17f1d3, _0x5d5726['r']['y'] /= _0x17f1d3, _0x5d5726['draw_vehicle'](), _0x5d5726['draw'](), user['cam']['x'] *= _0x17f1d3, user['cam']['y'] *= _0x17f1d3, _0x5d5726['x'] *= _0x17f1d3, _0x5d5726['y'] *= _0x17f1d3, _0x5d5726['r']['x'] *= _0x17f1d3, _0x5d5726['r']['y'] *= _0x17f1d3, ctx['restore']();
        }
    }
    var _0x1cb1b3 = world['units'][ITEMS['SPELL']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x1cb1b3['length']; _0x1c0776++) {
        if (_0x1cb1b3[_0x1c0776]['fly'] === 0x1) draw_transition(_0x1cb1b3[_0x1c0776]);
    }
    var _0x5a6962 = world['units'][ITEMS['DRAGON']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x5a6962['length']; _0x1c0776++) {
        if (_0x5a6962[_0x1c0776]['scale'] > 0x1) draw_transition(_0x5a6962[_0x1c0776], SPRITE['DRAGON'], SPRITE['HURT_DRAGON']);
    }
    var _0x5a6962 = world['units'][ITEMS['LAVA_DRAGON']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x5a6962['length']; _0x1c0776++) {
        if (_0x5a6962[_0x1c0776]['scale'] > 0x1) draw_transition(_0x5a6962[_0x1c0776], SPRITE['LAVA_DRAGON'], SPRITE['HURT_LAVA_DRAGON']);
    }
    var _0x2b8cbe = world['units'][ITEMS['HAWK']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x2b8cbe['length']; _0x1c0776++) draw_transition(_0x2b8cbe[_0x1c0776], SPRITE['HAWK'], SPRITE['HURT_HAWK']);
    var _0x3c5e9e = world['units'][ITEMS['VULTURE']];
    for (var _0x1c0776 = 0x0; _0x1c0776 < _0x3c5e9e['length']; _0x1c0776++) draw_transition(_0x3c5e9e[_0x1c0776], SPRITE['VULTURE'], SPRITE['HURT_VULTURE']);
    if (Settings['Tracers']) {
        let _0x5bf291 = world['fast_units'][user['uid']],
            _0xcb3e15 = world['units'][ITEMS['KRAKEN']];
        if (_0x5bf291) {
            if (_0xcb3e15['length'] > 0x0) {
                for (let _0x1a1d3d = 0x0; _0x1a1d3d < _0xcb3e15['length']; _0x1a1d3d++) ctx['beginPath'](), ctx['moveTo'](user['cam']['x'] + _0x5bf291['x'], user['cam']['y'] + _0x5bf291['y']), ctx['lineTo'](user['cam']['x'] + _0xcb3e15[_0x1a1d3d]['x'], user['cam']['y'] + _0xcb3e15[_0x1a1d3d]['y']), ctx['strokeStyle'] = 'purple', ctx['stroke']();
                ctx['save'](), ctx['font'] = '18px\x20Baloo\x20Paaji', ctx['strokeStyle'] = 'black', ctx['lineWidth'] = 0x7, ctx['strokeText']('Kraken\x20Amount:\x20' + _0xcb3e15['length'], 0x0, 0x2cb), ctx['fillStyle'] = 'white', ctx['fillText']('Kraken\x20Amount:\x20' + _0xcb3e15['length'], 0x0, 0x2cb), ctx['restore']();
            }
            let _0x2d2962 = world['units'][ITEMS['SAND_WORM']];
            if (_0x2d2962['length'] > 0x0) {
                for (let _0x33f7ab = 0x0; _0x33f7ab < _0x2d2962['length']; _0x33f7ab++) ctx['beginPath'](), ctx['moveTo'](user['cam']['x'] + _0x5bf291['x'], user['cam']['y'] + _0x5bf291['y']), ctx['lineTo'](user['cam']['x'] + _0x2d2962[_0x33f7ab]['x'], user['cam']['y'] + _0x2d2962[_0x33f7ab]['y']), ctx['strokeStyle'] = 'black', ctx['stroke']();
                ctx['save'](), ctx['font'] = '18px\x20Baloo\x20Paaji', ctx['strokeStyle'] = 'black', ctx['lineWidth'] = 0x7, ctx['strokeText']('Sandworm\x20Amount:\x20' + _0x2d2962['length'], 0x0, 0x2b2), ctx['fillStyle'] = 'white', ctx['fillText']('Sandworm\x20Amount:\x20' + _0x2d2962['length'], 0x0, 0x2b2), ctx['restore']();
            }
            let _0x2778bf = world['units'][ITEMS['PLAYERS']];
            ctx['save']();
            for (let _0x5bd113 = 0x0; _0x5bd113 < _0x2778bf['length']; _0x5bd113++) _0x2778bf[_0x5bd113]['pid'] !== user['id'] && (ctx['lineWidth'] = 2.6, ctx['beginPath'](), ctx['moveTo'](user['cam']['x'] + _0x5bf291['x'], user['cam']['y'] + _0x5bf291['y']), ctx['lineTo'](user['cam']['x'] + _0x2778bf[_0x5bd113]['x'], user['cam']['y'] + _0x2778bf[_0x5bd113]['y']), ctx['strokeStyle'] = _0x2778bf[_0x5bd113]['ally'] ? 'cyan' : 'red', ctx['stroke']());
            ctx['restore']();
            let _0x463515 = world['units'][ITEMS['HAWK']];
            ctx['save']();
            for (let _0x459b7f = 0x0; _0x459b7f < _0x463515['length']; _0x459b7f++) _0x463515[_0x459b7f]['pid'] !== user['id'] && (ctx['lineWidth'] = 2.6, ctx['beginPath'](), ctx['moveTo'](user['cam']['x'] + _0x5bf291['x'], user['cam']['y'] + _0x5bf291['y']), ctx['lineTo'](user['cam']['x'] + _0x463515[_0x459b7f]['x'], user['cam']['y'] + _0x463515[_0x459b7f]['y']), ctx['strokeStyle'] = 'brown', ctx['stroke']());
            ctx['restore']();
        }
    }
    if (Settings['JoinLeave']) {
        let _0x4e4201 = 0x190;
        if (JoinLeave['toggle11']) {
            ctx['save'](), ctx['font'] = '18px\x20Baloo\x20Paaji', ctx['strokeStyle'] = 'black', ctx['lineWidth'] = 0x7, ctx['fillStyle'] = 'green';
            for (var _0x1c0776 = 0x0; _0x1c0776 < JoinLeave['Join']['length']; _0x1c0776++) {
                ctx['strokeText'](JoinLeave['Join'][_0x1c0776], 0x0, _0x4e4201), ctx['fillText'](JoinLeave['Join'][_0x1c0776], 0x0, _0x4e4201), _0x4e4201 += 0x14;
            };
            ctx['restore']();
        };
        if (JoinLeave['toggle22']) {
            ctx['save'](), ctx['font'] = '18px\x20Baloo\x20Paaji', ctx['strokeStyle'] = 'black', ctx['lineWidth'] = 0x7, ctx['fillStyle'] = 'red';
            for (var _0x1c0776 = 0x0; _0x1c0776 < JoinLeave['Leave']['length']; _0x1c0776++) {
                ctx['strokeText'](JoinLeave['Leave'][_0x1c0776], 0x0, _0x4e4201), ctx['fillText'](JoinLeave['Leave'][_0x1c0776], 0x0, _0x4e4201), _0x4e4201 += 0x14;
            };
            ctx['restore']();
        };
    };
    __effect += delta * 0xf;
}

function draw_bg_transition(_0x4f2eee, _0x324f57) {
    if (world['transition']) ctx['globalAlpha'] = 0x1, _0x4f2eee['draw_bg'](_0x324f57), world['time'] = world['time'] ? 0x0 : 0x1, ctx['globalAlpha'] = 0x1 - world['shade']['v'], _0x4f2eee['draw_bg'](_0x324f57), world['time'] = world['time'] ? 0x0 : 0x1, ctx['globalAlpha'] = 0x1;
    else _0x4f2eee['draw_bg'](_0x324f57);
}

function draw_fg_transition(_0x5f6f61, _0x3dd6cd) {
    if (world['transition']) ctx['globalAlpha'] = 0x1, _0x5f6f61['draw_fg'](_0x3dd6cd), world['time'] = world['time'] ? 0x0 : 0x1, ctx['globalAlpha'] = 0x1 - world['shade']['v'], _0x5f6f61['draw_fg'](_0x3dd6cd), world['time'] = world['time'] ? 0x0 : 0x1, ctx['globalAlpha'] = 0x1;
    else _0x5f6f61['draw_fg'](_0x3dd6cd);
}

function draw_image_transition_2(_0x328918, _0x4decea, _0x1a5b93, _0x53cb16, _0x398b29) {
    if (world['transition']) ctx['globalAlpha'] = 0x1, ctxDrawImage(ctx, sprite[_0x328918][_0x4decea][world['time']], _0x53cb16, _0x398b29), world['time'] = world['time'] ? 0x0 : 0x1, ctx['globalAlpha'] = 0x1 - world['shade']['v'], ctxDrawImage(ctx, sprite[_0x328918][_0x4decea][world['time']], _0x53cb16, _0x398b29), world['time'] = world['time'] ? 0x0 : 0x1, ctx['globalAlpha'] = 0x1;
    else ctxDrawImage(ctx, _0x1a5b93, _0x53cb16, _0x398b29);
}

function draw_image_transition(_0x3bf2dd, _0xe0cdf, _0x12e0d3, _0x9912b5) {
    if (world['transition']) ctx['globalAlpha'] = 0x1, ctxDrawImage(ctx, sprite[_0x3bf2dd][world['time']], _0x12e0d3, _0x9912b5), world['time'] = world['time'] ? 0x0 : 0x1, ctx['globalAlpha'] = 0x1 - world['shade']['v'], ctxDrawImage(ctx, sprite[_0x3bf2dd][world['time']], _0x12e0d3, _0x9912b5), world['time'] = world['time'] ? 0x0 : 0x1, ctx['globalAlpha'] = 0x1;
    else ctxDrawImage(ctx, _0xe0cdf, _0x12e0d3, _0x9912b5);
}

function draw_image_transition_hd_2(_0x1d64c6, _0x3e6435, _0x38e835, _0x329952, _0x380371) {
    var _0x2339b0 = _0x38e835['width'],
        _0x50ee12 = _0x38e835['height'],
        _0x33bef2 = Math['floor'](_0x2339b0 / 0x2),
        _0x5dbeb1 = Math['floor'](_0x50ee12 / 0x2);
    if (world['transition']) ctx['globalAlpha'] = 0x1, ctxDrawImage(ctx, sprite[_0x1d64c6][_0x3e6435][world['time']], 0x0, 0x0, _0x2339b0, _0x50ee12, _0x329952, _0x380371, _0x33bef2, _0x5dbeb1), world['time'] = world['time'] ? 0x0 : 0x1, ctx['globalAlpha'] = 0x1 - world['shade']['v'], ctxDrawImage(ctx, sprite[_0x1d64c6][_0x3e6435][world['time']], 0x0, 0x0, _0x2339b0, _0x50ee12, _0x329952, _0x380371, _0x33bef2, _0x5dbeb1), world['time'] = world['time'] ? 0x0 : 0x1, ctx['globalAlpha'] = 0x1;
    else ctxDrawImage(ctx, sprite[_0x1d64c6][_0x3e6435][world['time']], 0x0, 0x0, _0x2339b0, _0x50ee12, _0x329952, _0x380371, _0x33bef2, _0x5dbeb1);
}

function draw_image_transition_hd(_0xd526b7, _0x48cadc, _0x1ccb58, _0x4a769e) {
    var _0x226902 = _0x48cadc['width'],
        _0x209cf8 = _0x48cadc['height'],
        _0x1261ca = Math['floor'](_0x226902 / 0x2),
        _0x47e474 = Math['floor'](_0x209cf8 / 0x2);
    if (world['transition']) ctx['globalAlpha'] = 0x1, ctxDrawImage(ctx, sprite[_0xd526b7][world['time']], 0x0, 0x0, _0x226902, _0x209cf8, _0x1ccb58, _0x4a769e, _0x1261ca, _0x47e474), world['time'] = world['time'] ? 0x0 : 0x1, ctx['globalAlpha'] = 0x1 - world['shade']['v'], ctxDrawImage(ctx, sprite[_0xd526b7][world['time']], 0x0, 0x0, _0x226902, _0x209cf8, _0x1ccb58, _0x4a769e, _0x1261ca, _0x47e474), world['time'] = world['time'] ? 0x0 : 0x1, ctx['globalAlpha'] = 0x1;
    else ctxDrawImage(ctx, _0x48cadc, 0x0, 0x0, _0x226902, _0x209cf8, _0x1ccb58, _0x4a769e, _0x1261ca, _0x47e474);
}

function draw_swim(_0x29edb1) {
    ctx['globalAlpha'] = _0x29edb1['alpha'], circle(ctx, _0x29edb1['x'] + user['cam']['x'], _0x29edb1['y'] + user['cam']['y'], _0x29edb1['r']), fill_path(ctx, SPRITE['SWIM_COLOR'][world['time']]), ctx['globalAlpha'] = 0x1;
}

function draw_foot(_0x1c9fc3) {
    ctx['save'](), ctx['translate'](user['cam']['x'] + _0x1c9fc3['x'], user['cam']['y'] + _0x1c9fc3['y']), ctx['rotate'](_0x1c9fc3['angle']), ctx['globalAlpha'] = _0x1c9fc3['alpha'];
    var _0x53872c = sprite[_0x1c9fc3['id']][world['time']];
    ctxDrawImage(ctx, _0x53872c, -_0x53872c['width'] / 0x2, -_0x53872c['height'] / 0x2), ctx['globalAlpha'] = 0x1, ctx['restore']();
}

function draw_imgs_transition(_0xc3f9ec, _0x4011f8, _0x45f2e8, _0x3399fd, _0x21e62e) {
    world['transition'] && _0x21e62e == 0x1 ? (ctx['globalAlpha'] = 0x1, ctxDrawImage(ctx, sprite[_0xc3f9ec][world['time']][_0x4011f8], _0x45f2e8, _0x3399fd), world['time'] = world['time'] ? 0x0 : 0x1, ctx['globalAlpha'] = 0x1 - world['shade']['v'], ctxDrawImage(ctx, sprite[_0xc3f9ec][world['time']][_0x4011f8], _0x45f2e8, _0x3399fd), world['time'] = world['time'] ? 0x0 : 0x1, ctx['globalAlpha'] = 0x1) : (ctx['globalAlpha'] = _0x21e62e, ctxDrawImage(ctx, sprite[_0xc3f9ec][world['time']][_0x4011f8], _0x45f2e8, _0x3399fd), ctx['globalAlpha'] = 0x1);
}

function draw_transition(_0x506418, _0x1cfdb7, _0x1aeaf2) {
    if (world['transition']) ctx['globalAlpha'] = 0x1, _0x506418['draw'](_0x1cfdb7, _0x1aeaf2), world['time'] = world['time'] ? 0x0 : 0x1, ctx['globalAlpha'] = 0x1 - world['shade']['v'], _0x506418['draw'](_0x1cfdb7, _0x1aeaf2), world['time'] = world['time'] ? 0x0 : 0x1, ctx['globalAlpha'] = 0x1;
    else _0x506418['draw'](_0x1cfdb7, _0x1aeaf2);
}

function draw_map_transition(_0x4261e5, _0x377b62, _0x55c9c4, _0x4f4bed, _0x48490f, _0x386604, _0x16328c, _0x2bee59, _0x2ed75d, _0x4ed5e9) {
    if (world['transition']) ctx['globalAlpha'] = 0x1, _0x4261e5(_0x377b62, _0x55c9c4, _0x4f4bed, _0x48490f, _0x386604, _0x16328c, _0x2bee59, _0x2ed75d, _0x4ed5e9), world['time'] = world['time'] ? 0x0 : 0x1, ctx['globalAlpha'] = 0x1 - world['shade']['v'], _0x4261e5(_0x377b62, _0x55c9c4, _0x4f4bed, _0x48490f, _0x386604, _0x16328c, _0x2bee59, _0x2ed75d, _0x4ed5e9), world['time'] = world['time'] ? 0x0 : 0x1, ctx['globalAlpha'] = 0x1;
    else _0x4261e5(_0x377b62, _0x55c9c4, _0x4f4bed, _0x48490f, _0x386604, _0x16328c, _0x2bee59, _0x2ed75d, _0x4ed5e9);
}

function get_color_transition(_0x39a987, _0x125c7a, _0x32dcbf, _0x8c8369, _0x40cebb, _0x436cf7, _0x29ffee) {
    var _0x551567 = '#',
        _0x558916 = Math['floor'](_0x8c8369 * _0x29ffee + (0x1 - _0x29ffee) * _0x39a987);
    _0x551567 += _0x558916 < 0x10 ? '0' + _0x558916['toString'](0x10) : _0x558916['toString'](0x10);
    var _0x558916 = Math['floor'](_0x40cebb * _0x29ffee + (0x1 - _0x29ffee) * _0x125c7a);
    _0x551567 += _0x558916 < 0x10 ? '0' + _0x558916['toString'](0x10) : _0x558916['toString'](0x10);
    var _0x558916 = Math['floor'](_0x436cf7 * _0x29ffee + (0x1 - _0x29ffee) * _0x32dcbf);
    return _0x551567 += _0x558916 < 0x10 ? '0' + _0x558916['toString'](0x10) : _0x558916['toString'](0x10), _0x551567;
}

function draw_simple_ground() {
    if (world['transition']) {
        var _0x4db57a = world['time'] ? 0x1 - world['shade']['v'] : world['shade']['v'];
        ctx['fillStyle'] = get_color_transition(0x4, 0x2b, 0x30, 0x13, 0x3a, 0x2b, _0x4db57a);
    } else ctx['fillStyle'] = SPRITE['GROUND'][world['time']];
    ctx['fillRect'](0x0, 0x0, canw, canh);
};

function draw_ground() {
    for (var _0x2ed33d = world['biomes']['length'] - 0x1; _0x2ed33d >= 0x0; _0x2ed33d--) {
        var _0x412a68 = world['biomes'][_0x2ed33d];
        if (_0x412a68['t'] === world['BIOME_SEA']) {
            var _0x52afc9 = world['BIOME'][_0x412a68['t']];
            if (-user['cam']['x'] >= _0x412a68['x1'] - 0xe6 - canw && -user['cam']['x'] <= _0x412a68['x2'] + 0x14a && -user['cam']['y'] >= _0x412a68['y1'] - canh && -user['cam']['y'] <= _0x412a68['y2'] + 0x64) {
                var _0x2c5745 = _0x412a68['x2'];
                if (_0x412a68['t'] !== world['BIOME_SEA']) _0x2c5745 -= 0x262;
                var _0x53b413 = _0x412a68['x1'];
                if (_0x412a68['t'] !== world['BIOME_SEA']) _0x53b413 += 0x262;
                var _0x2366d1 = _0x412a68['y2'];
                if (_0x412a68['t'] !== world['BIOME_SEA']) _0x2366d1 -= 0x262;
                var _0x5867ae = _0x412a68['y1'];
                if (_0x412a68['t'] !== world['BIOME_SEA']) _0x5867ae += 0x262;
                if (world['transition']) {
                    var _0x206136 = world['time'] ? 0x1 - world['shade']['v'] : world['shade']['v'];
                    ctx['fillStyle'] = get_color_transition(_0x52afc9['night'][0x0], _0x52afc9['night'][0x1], _0x52afc9['night'][0x2], _0x52afc9['day'][0x0], _0x52afc9['day'][0x1], _0x52afc9['day'][0x1], _0x206136);
                } else ctx['fillStyle'] = _0x52afc9['_color'][world['time']];
                var _0x5dc04b = Math['max'](user['cam']['x'] + _0x53b413 - 0x2 - 0xe6, 0x0),
                    _0x355579 = Math['max'](-user['cam']['x'] + canw - _0x2c5745 - 0x14a - 0x2, 0x0),
                    _0x3916ea = Math['max'](user['cam']['y'] + _0x5867ae - 0x2, 0x0),
                    _0x611f02 = Math['max'](-user['cam']['y'] + canh - _0x2366d1 - 0x64 - 0x2, 0x0);
                ctx['beginPath'](), ctx['fillRect'](_0x5dc04b, _0x3916ea, canw - _0x355579 - _0x5dc04b, canh - _0x3916ea - _0x611f02);
            }
        }
    }
    for (var _0x2ed33d = world['biomes']['length'] - 0x1; _0x2ed33d >= 0x0; _0x2ed33d--) {
        var _0x412a68 = world['biomes'][_0x2ed33d];
        if (_0x412a68['t'] !== world['BIOME_SEA']) {
            var _0x2c5745 = _0x412a68['x2'];
            if (_0x412a68['t'] !== world['BIOME_SEA']) _0x2c5745 -= 0x190;
            var _0x53b413 = _0x412a68['x1'];
            if (_0x412a68['t'] !== world['BIOME_SEA']) _0x53b413 += 0x190;
            var _0x2366d1 = _0x412a68['y2'];
            if (_0x412a68['t'] !== world['BIOME_SEA']) _0x2366d1 -= 0x12c;
            var _0x5867ae = _0x412a68['y1'];
            if (_0x412a68['t'] !== world['BIOME_SEA']) _0x5867ae += 0x12c;
            (_0x412a68['v'] & WORLD['RIGHT']) === 0x0 && -user['cam']['x'] >= _0x2c5745 - canw + 0x78 && -user['cam']['x'] <= _0x2c5745 + 0x334 && -user['cam']['y'] >= _0x5867ae + 0x58 - canh && -user['cam']['y'] <= _0x2366d1 + 0x32 && (draw_beach_sand_right(_0x2c5745, _0x5867ae + 0x58, _0x2366d1 - 0x58, user['beach'][0x0], world['BIOME'][_0x412a68['t']], _0x412a68['v'] & WORLD['RIGHT']), draw_beach_right(_0x2c5745, _0x5867ae + 0x58, _0x2366d1 - 0x58, user['beach'][0x0], world['BIOME'][_0x412a68['t']], _0x412a68['v'] & WORLD['RIGHT'])), (_0x412a68['v'] & WORLD['LEFT']) === 0x0 && -user['cam']['x'] >= _0x53b413 - canw - 0x2bc && -user['cam']['x'] <= _0x53b413 - 0x14 && -user['cam']['y'] >= _0x5867ae + 0x58 - canh && -user['cam']['y'] <= _0x2366d1 + 0x32 && (draw_beach_sand_left(_0x53b413, _0x5867ae + 0x58, _0x2366d1 - 0x58, user['beach'][0x1], world['BIOME'][_0x412a68['t']], _0x412a68['v'] & WORLD['LEFT']), draw_beach_left(_0x53b413, _0x5867ae + 0x58, _0x2366d1 - 0x58, user['beach'][0x1], world['BIOME'][_0x412a68['t']], _0x412a68['v'] & WORLD['LEFT'])), (_0x412a68['v'] & WORLD['BOTTOM']) === 0x0 && -user['cam']['x'] >= _0x53b413 - 0xeb - canw && -user['cam']['x'] <= _0x2c5745 + 0x15e && -user['cam']['y'] >= _0x2366d1 - canh - 0x113 && -user['cam']['y'] <= _0x2366d1 + 0x1ea && (draw_beach_sand_bottom(_0x2366d1 - 0xe6, _0x53b413 - 0xe6, _0x2c5745 + 0xe6, user['beach'][0x2], world['BIOME'][_0x412a68['t']], _0x412a68['v'] & WORLD['BOTTOM']), draw_beach_bottom(_0x2366d1 - 0xe6, _0x53b413 - 0xe6, _0x2c5745 + 0xe6, user['beach'][0x2], world['BIOME'][_0x412a68['t']], _0x412a68['v'] & WORLD['BOTTOM'])), (_0x412a68['v'] & WORLD['TOP']) === 0x0 && -user['cam']['x'] >= _0x53b413 - 0xeb - canw && -user['cam']['x'] <= _0x2c5745 + 0x15e && -user['cam']['y'] >= _0x5867ae - canh - 0x186 && -user['cam']['y'] <= _0x5867ae + 0x13b && (draw_beach_sand_top(_0x5867ae + 0x136, _0x53b413 - 0xe6, _0x2c5745 + 0xe6, user['beach'][0x3], world['BIOME'][_0x412a68['t']], _0x412a68['v'] & WORLD['TOP']), draw_beach_top(_0x5867ae + 0x136, _0x53b413 - 0xe6, _0x2c5745 + 0xe6, user['beach'][0x3], world['BIOME'][_0x412a68['t']], _0x412a68['v'] & WORLD['TOP']));
        }
    }
    for (var _0x2ed33d = world['biomes']['length'] - 0x1; _0x2ed33d >= 0x0; _0x2ed33d--) {
        var _0x412a68 = world['biomes'][_0x2ed33d];
        if (_0x412a68['t'] !== world['BIOME_SEA']) {
            var _0x2c5745 = _0x412a68['x2'];
            if (_0x412a68['t'] !== world['BIOME_SEA']) _0x2c5745 -= 0x190;
            var _0x53b413 = _0x412a68['x1'];
            if (_0x412a68['t'] !== world['BIOME_SEA']) _0x53b413 += 0x190;
            var _0x2366d1 = _0x412a68['y2'];
            if (_0x412a68['t'] !== world['BIOME_SEA']) _0x2366d1 -= 0x12c;
            var _0x5867ae = _0x412a68['y1'];
            if (_0x412a68['t'] !== world['BIOME_SEA']) _0x5867ae += 0x12c;
            (_0x412a68['v'] & WORLD['RIGHT']) !== 0x0 && -user['cam']['x'] >= _0x2c5745 - canw + 0x78 && -user['cam']['x'] <= _0x2c5745 + 0x334 && -user['cam']['y'] >= _0x5867ae + 0x58 - canh && -user['cam']['y'] <= _0x2366d1 + 0x32 && draw_beach_sand_right(_0x2c5745, _0x5867ae + 0x58, _0x2366d1 - 0x58, user['beach'][0x0], world['BIOME'][_0x412a68['t']], _0x412a68['v'] & WORLD['RIGHT']), (_0x412a68['v'] & WORLD['LEFT']) !== 0x0 && -user['cam']['x'] >= _0x53b413 - canw - 0x2bc && -user['cam']['x'] <= _0x53b413 - 0x14 && -user['cam']['y'] >= _0x5867ae + 0x58 - canh && -user['cam']['y'] <= _0x2366d1 + 0x32 && draw_beach_sand_left(_0x53b413, _0x5867ae + 0x58, _0x2366d1 - 0x58, user['beach'][0x1], world['BIOME'][_0x412a68['t']], _0x412a68['v'] & WORLD['LEFT']), (_0x412a68['v'] & WORLD['BOTTOM']) !== 0x0 && -user['cam']['x'] >= _0x53b413 - 0xeb - canw && -user['cam']['x'] <= _0x2c5745 + 0x15e && -user['cam']['y'] >= _0x2366d1 - canh - 0x113 && -user['cam']['y'] <= _0x2366d1 + 0x1ea && draw_beach_sand_bottom(_0x2366d1 - 0xe6, _0x53b413 - 0xe6, _0x2c5745 + 0xe6, user['beach'][0x2], world['BIOME'][_0x412a68['t']], _0x412a68['v'] & WORLD['BOTTOM']), (_0x412a68['v'] & WORLD['TOP']) !== 0x0 && -user['cam']['x'] >= _0x53b413 - 0xeb - canw && -user['cam']['x'] <= _0x2c5745 + 0x15e && -user['cam']['y'] >= _0x5867ae - canh - 0x186 && -user['cam']['y'] <= _0x5867ae + 0x13b && draw_beach_sand_top(_0x5867ae + 0x136, _0x53b413 - 0xe6, _0x2c5745 + 0xe6, user['beach'][0x3], world['BIOME'][_0x412a68['t']], _0x412a68['v'] & WORLD['TOP']);
        }
    }
    for (var _0x2ed33d = world['biomes']['length'] - 0x1; _0x2ed33d >= 0x0; _0x2ed33d--) {
        var _0x412a68 = world['biomes'][_0x2ed33d];
        if (_0x412a68['t'] !== world['BIOME_SEA']) {
            var _0x52afc9 = world['BIOME'][_0x412a68['t']];
            if (-user['cam']['x'] >= _0x412a68['x1'] - 0xe6 - canw && -user['cam']['x'] <= _0x412a68['x2'] + 0x14a && -user['cam']['y'] >= _0x412a68['y1'] - canh && -user['cam']['y'] <= _0x412a68['y2'] + 0x64) {
                var _0x2c5745 = _0x412a68['x2'];
                if (_0x412a68['t'] !== world['BIOME_SEA']) {
                    if ((_0x412a68['v'] & WORLD['RIGHT']) === 0x0) _0x2c5745 -= 0x19e;
                    else _0x2c5745 -= 0x262;
                }
                var _0x53b413 = _0x412a68['x1'];
                if (_0x412a68['t'] !== world['BIOME_SEA']) {
                    if ((_0x412a68['v'] & WORLD['LEFT']) === 0x0) _0x53b413 += 0x19e;
                    else _0x53b413 += 0x262;
                }
                var _0x2366d1 = _0x412a68['y2'];
                if (_0x412a68['t'] !== world['BIOME_SEA']) {
                    if ((_0x412a68['v'] & WORLD['BOTTOM']) === 0x0) _0x2366d1 -= 0x19e;
                    else _0x2366d1 -= 0x262;
                }
                var _0x5867ae = _0x412a68['y1'];
                if (_0x412a68['t'] !== world['BIOME_SEA']) {
                    if ((_0x412a68['v'] & WORLD['TOP']) === 0x0) _0x5867ae += 0x19e;
                    else _0x5867ae += 0x262;
                }
                if (world['transition']) {
                    var _0x206136 = world['time'] ? 0x1 - world['shade']['v'] : world['shade']['v'];
                    ctx['fillStyle'] = get_color_transition(_0x52afc9['night'][0x0], _0x52afc9['night'][0x1], _0x52afc9['night'][0x2], _0x52afc9['day'][0x0], _0x52afc9['day'][0x1], _0x52afc9['day'][0x2], _0x206136);
                } else ctx['fillStyle'] = _0x52afc9['_color'][world['time']];
                var _0x5dc04b = Math['max'](user['cam']['x'] + _0x53b413 - 0x2 - 0xe6, 0x0),
                    _0x355579 = Math['max'](-user['cam']['x'] + canw - _0x2c5745 - 0x14a - 0x2, 0x0),
                    _0x3916ea = Math['max'](user['cam']['y'] + _0x5867ae - 0x2, 0x0),
                    _0x611f02 = Math['max'](-user['cam']['y'] + canh - _0x2366d1 - 0x64 - 0x2, 0x0);
                ctx['beginPath'](), ctx['fillRect'](_0x5dc04b, _0x3916ea, canw - _0x355579 - _0x5dc04b, canh - _0x3916ea - _0x611f02);
            }
        }
    }
    ui['quality'] && (draw_map_transition(draw_breath_objects, _is, _ie, _js, _je, SPRITE['WAVE_TWO'], 'isl', 0x2), draw_map_transition(draw_breath_objects, _is, _ie, _js, _je, SPRITE['WAVE_ONE'], 'isl', 0x2));
    draw_map_transition(draw_map_objects, _is, _ie, _js, _je, SPRITE['ISLAND'], 'isl', 0x2);
    if (ui['quality']) draw_map_transition(draw_map_decorations, _is, _ie, _js, _je, SPRITE['DECORATION'], 'de');
    var _0x355013 = world['units'][ITEMS['PLAYERS']];
    for (var _0x2ed33d = 0x0; _0x2ed33d < _0x355013['length']; _0x2ed33d++) {
        var _0x1e5331 = _0x355013[_0x2ed33d];
        for (var _0x5a46aa = 0x0; _0x5a46aa < _0x1e5331['foot']['length']; _0x5a46aa++) draw_foot(_0x1e5331['foot'][_0x5a46aa]);
    }
    __wave += delta * 0x28;
    if (__wave > 0x3c) __wave -= 0x3c;
    draw_map_transition(draw_river_tile, _is, _ie, _js, _je, SPRITE['RIVER'], 'r', 0x0);
    for (var _0x2ed33d = 0x0; _0x2ed33d < world['biomes']['length']; _0x2ed33d++) {
        var _0x412a68 = world['biomes'][_0x2ed33d];
        if (_0x412a68['t'] !== world['BIOME_SEA']) {
            var _0x2c5745 = _0x412a68['x2'];
            if (_0x412a68['t'] !== world['BIOME_SEA']) _0x2c5745 -= 0x190;
            var _0x53b413 = _0x412a68['x1'];
            if (_0x412a68['t'] !== world['BIOME_SEA']) _0x53b413 += 0x190;
            var _0x2366d1 = _0x412a68['y2'];
            if (_0x412a68['t'] !== world['BIOME_SEA']) _0x2366d1 -= 0x12c;
            var _0x5867ae = _0x412a68['y1'];
            if (_0x412a68['t'] !== world['BIOME_SEA']) _0x5867ae += 0x12c;
            if ((_0x412a68['v'] & WORLD['RIGHT']) > 0x0 && -user['cam']['x'] >= _0x2c5745 - canw + 0x78 && -user['cam']['x'] <= _0x2c5745 + 0x334 && -user['cam']['y'] >= _0x5867ae + 0x58 - canh && -user['cam']['y'] <= _0x2366d1 + 0x32) draw_beach_right(_0x2c5745, _0x5867ae + 0x58, _0x2366d1 - 0x58, user['beach'][0x0], world['BIOME'][_0x412a68['t']], _0x412a68['v'] & WORLD['RIGHT']);
            if ((_0x412a68['v'] & WORLD['LEFT']) > 0x0 && -user['cam']['x'] >= _0x53b413 - canw - 0x2bc && -user['cam']['x'] <= _0x53b413 - 0x14 && -user['cam']['y'] >= _0x5867ae + 0x58 - canh && -user['cam']['y'] <= _0x2366d1 + 0x32) draw_beach_left(_0x53b413, _0x5867ae + 0x58, _0x2366d1 - 0x58, user['beach'][0x1], world['BIOME'][_0x412a68['t']], _0x412a68['v'] & WORLD['LEFT']);
            if ((_0x412a68['v'] & WORLD['BOTTOM']) > 0x0 && -user['cam']['x'] >= _0x53b413 - 0xeb - canw && -user['cam']['x'] <= _0x2c5745 + 0x15e && -user['cam']['y'] >= _0x2366d1 - canh - 0x113 && -user['cam']['y'] <= _0x2366d1 + 0x1ea) draw_beach_bottom(_0x2366d1 - 0xe6, _0x53b413 - 0xe6, _0x2c5745 + 0xe6, user['beach'][0x2], world['BIOME'][_0x412a68['t']], _0x412a68['v'] & WORLD['BOTTOM']);
            if ((_0x412a68['v'] & WORLD['TOP']) > 0x0 && -user['cam']['x'] >= _0x53b413 - 0xeb - canw && -user['cam']['x'] <= _0x2c5745 + 0x15e && -user['cam']['y'] >= _0x5867ae - canh - 0x186 && -user['cam']['y'] <= _0x5867ae + 0x13b) draw_beach_top(_0x5867ae + 0x136, _0x53b413 - 0xe6, _0x2c5745 + 0xe6, user['beach'][0x3], world['BIOME'][_0x412a68['t']], _0x412a68['v'] & WORLD['TOP']);
        }
    }
};

function draw_ash() {
    var _0x226779 = user['ash'],
        _0x523755 = _0x226779['flakes'];
    for (var _0x276824 = 0x0; _0x276824 < _0x523755['length']; _0x276824++) {
        var _0x1bd380 = _0x523755[_0x276824];
        _0x226779['update'](_0x1bd380), draw_imgs_transition(SPRITE['ASHES'], _0x1bd380['id'], user['cam']['x'] + _0x1bd380['x'], user['cam']['y'] + _0x1bd380['y'], _0x1bd380['alpha']);
    }
    for (var _0x276824 = 0x0; _0x276824 < _0x523755['length']; _0x276824++) {
        var _0x1bd380 = _0x523755[_0x276824];
        if (_0x1bd380['life'] <= 0x0 || _0x1bd380['x'] > -user['cam']['x'] + canw || _0x1bd380['x'] < -user['cam']['x'] || _0x1bd380['y'] > -user['cam']['y'] + canh) _0x523755['splice'](_0x276824, 0x1);
    }
    var _0x325364 = -user['cam']['y'];
    if (world['dist_lava'] > -0x3e8) _0x226779['add'](_0x325364);
}

function draw_winter() {
    var _0xd31421 = user['winter'];
    if (_0xd31421['tempest'] === 0x0) _0xd31421['tempest_speed'] = Math['max'](0x0, _0xd31421['tempest_speed'] - delta / 0xa);
    else _0xd31421['tempest_speed'] = Math['min'](0x1, _0xd31421['tempest_speed'] + delta / 0xa);
    var _0x419ee7 = _0xd31421['flakes'];
    for (var _0x1fade9 = 0x0; _0x1fade9 < _0x419ee7['length']; _0x1fade9++) {
        var _0x589916 = _0x419ee7[_0x1fade9];
        _0xd31421['update'](_0x589916), draw_imgs_transition(SPRITE['FLAKES'], _0x589916['id'], user['cam']['x'] + _0x589916['x'], user['cam']['y'] + _0x589916['y'], _0x589916['alpha']);
    }
    for (var _0x1fade9 = 0x0; _0x1fade9 < _0x419ee7['length']; _0x1fade9++) {
        var _0x589916 = _0x419ee7[_0x1fade9];
        if (_0x589916['life'] <= 0x0 || _0x589916['x'] > -user['cam']['x'] + canw || _0x589916['x'] < -user['cam']['x'] || _0x589916['y'] > -user['cam']['y'] + canh) _0x419ee7['splice'](_0x1fade9, 0x1);
    }
    var _0x17e2bd = -user['cam']['y'];
    if (world['dist_winter'] > -0x3e8) _0xd31421['add'](_0x17e2bd);
}

function draw_desert() {
    var _0x4c15a7 = user['desert'];
    if (_0x4c15a7['tempest'] === 0x0) _0x4c15a7['tempest_speed'] = Math['max'](0x0, _0x4c15a7['tempest_speed'] - delta / 0xa);
    else _0x4c15a7['tempest_speed'] = Math['min'](0x1, _0x4c15a7['tempest_speed'] + delta / 0xa);
    var _0x19588a = _0x4c15a7['flakes'];
    for (var _0x1c9991 = 0x0; _0x1c9991 < _0x19588a['length']; _0x1c9991++) {
        var _0x530769 = _0x19588a[_0x1c9991];
        _0x4c15a7['update'](_0x530769), draw_imgs_transition(SPRITE['DESERT'], _0x530769['id'], user['cam']['x'] + _0x530769['x'], user['cam']['y'] + _0x530769['y'], _0x530769['alpha']);
    }
    for (var _0x1c9991 = 0x0; _0x1c9991 < _0x19588a['length']; _0x1c9991++) {
        var _0x530769 = _0x19588a[_0x1c9991];
        if (_0x530769['life'] <= 0x0 || _0x530769['x'] > -user['cam']['x'] + canw || _0x530769['x'] < -user['cam']['x'] - user['cam']['w'] / 0x2 || _0x530769['y'] > -user['cam']['y'] + canh) _0x19588a['splice'](_0x1c9991, 0x1);
    }
    var _0x295a85 = -user['cam']['y'];
    if (world['dist_desert'] > -0x3e8) _0x4c15a7['add'](_0x295a85);
};

function draw_beach_sand_left(_0x513f16, _0x3de9c7, _0x4d89ff, _0x1ab652, _0x55bb94, _0x2db543) {
    var _0x4c150e = _0x1ab652['w1'],
        _0x2f68ad = _0x1ab652['w2'],
        _0x1e6901 = _0x1ab652['w3'],
        _0x2ae79f = user['cam']['x'] + _0x513f16 - 0x2bc,
        _0x52b404 = Math['max'](user['cam']['y'] + _0x3de9c7, 0x0),
        _0x10a909 = Math['max'](-user['cam']['y'] + canh - _0x4d89ff - 0x64, 0x0),
        _0x5c8fbd = _0x52b404,
        _0x2cf37c = canh - _0x52b404 - _0x10a909;
    if (_0x2db543) var _0x45acb9 = _0x1ab652['t'](_0x4c150e)['x'];
    else var _0x45acb9 = _0x4c150e['r']['x'];
    var _0x30b4c8 = _0x2ae79f + WORLD['LW1SX'],
        _0x3dbcbf = _0x30b4c8,
        _0x53a9fa = _0x5c8fbd,
        _0x4ce1a3 = _0x45acb9 + WORLD['W1SX'],
        _0x14ea02 = _0x2cf37c;
    _0x30b4c8 += _0x45acb9 + WORLD['W1SX'] - 0x2;
    var _0x48bdbe = _0x30b4c8;
    if (_0x2db543) var _0x45acb9 = _0x1ab652['t'](_0x2f68ad)['x'];
    else var _0x45acb9 = _0x2f68ad['r']['x'];
    var _0x40f8e8 = _0x2ae79f + WORLD['LW2SX'] - _0x30b4c8 + _0x45acb9,
        _0x186283 = _0x30b4c8,
        _0x589f4a = _0x5c8fbd,
        _0x8ce8ec = _0x40f8e8,
        _0x9536d4 = _0x2cf37c;
    _0x30b4c8 += _0x40f8e8 - 0x2;
    var _0x177993 = _0x30b4c8 - 0x2;
    if (_0x2db543) var _0x45acb9 = _0x1ab652['t'](_0x1e6901)['x'];
    else var _0x45acb9 = _0x1e6901['r']['x'];
    _0x40f8e8 = _0x2ae79f + WORLD['LW3SX'] - _0x30b4c8 + _0x45acb9;
    if (_0x177993 < _0x30b4c8 + _0x40f8e8 - 0x3) {
        var _0x3b8bc9 = !![],
            _0x323f7e = _0x30b4c8,
            _0x410f5c = _0x5c8fbd,
            _0x55feec = _0x40f8e8,
            _0x58a102 = _0x2cf37c;
        _0x30b4c8 += _0x40f8e8 - 0x2;
        var _0x5719cc = _0x30b4c8;
    } else {
        var _0x3b8bc9 = ![];
        _0x30b4c8 = _0x177993;
        var _0x5719cc = -0x1;
    }
    _0x40f8e8 = _0x2ae79f + WORLD['LSANDX'] - _0x30b4c8;
    if (_0x2db543 > 0x0 && _0x55bb94['isSand'] === 0x1) {
        if (world['transition']) {
            var _0x195ab4 = world['time'] ? 0x1 - world['shade']['v'] : world['shade']['v'];
            ctx['fillStyle'] = get_color_transition(0xf, 0x4d, 0x48, 0xfc, 0xef, 0xbb, _0x195ab4);
        } else ctx['fillStyle'] = SPRITE['SAND_COLOR'][world['time']];
        ctx['fillRect'](_0x30b4c8, _0x5c8fbd, _0x40f8e8, _0x2cf37c);
    } else {
        if (world['transition']) {
            var _0x195ab4 = world['time'] ? 0x1 - world['shade']['v'] : world['shade']['v'];
            ctx['fillStyle'] = get_color_transition(_0x55bb94['night'][0x0], _0x55bb94['night'][0x1], _0x55bb94['night'][0x2], _0x55bb94['day'][0x0], _0x55bb94['day'][0x1], _0x55bb94['day'][0x2], _0x195ab4);
        } else ctx['fillStyle'] = _0x55bb94['_color'][world['time']];
        ctx['fillRect'](_0x30b4c8, _0x5c8fbd, _0x40f8e8, _0x2cf37c);
    }
}

function draw_beach_left(_0x48ad3e, _0x516fd3, _0x1cf278, _0x288a0a, _0x265cd7, _0x2ebdb4) {
    var _0x31cc4b = _0x288a0a['w1'],
        _0x58b5f0 = _0x288a0a['w2'],
        _0x400908 = _0x288a0a['w3'],
        _0x13936e = user['cam']['x'] + _0x48ad3e - 0x2bc,
        _0x45366b = Math['max'](user['cam']['y'] + _0x516fd3, 0x0),
        _0x44deae = Math['max'](-user['cam']['y'] + canh - _0x1cf278 - 0x64, 0x0),
        _0x4db72a = _0x45366b,
        _0x2e1eaf = canh - _0x45366b - _0x44deae;
    if (_0x2ebdb4) var _0x26f25d = _0x288a0a['t'](_0x31cc4b);
    else var _0x26f25d = _0x31cc4b['r'];
    var _0x3fbe7c = _0x13936e + WORLD['LW1SX'],
        _0x5921ad = _0x3fbe7c,
        _0x373728 = _0x4db72a,
        _0x50f5ba = _0x26f25d['x'] + WORLD['W1SX'],
        _0xa47250 = _0x2e1eaf;
    _0x3fbe7c += _0x26f25d['x'] + WORLD['W1SX'] - 0x2;
    var _0x4b40bf = _0x3fbe7c;
    if (_0x2ebdb4) var _0x26f25d = _0x288a0a['t'](_0x58b5f0);
    else var _0x26f25d = _0x58b5f0['r'];
    var _0x254707 = _0x13936e + WORLD['LW2SX'] - _0x3fbe7c + _0x26f25d['x'],
        _0x28bb3b = _0x3fbe7c,
        _0xde2ffe = _0x4db72a,
        _0x83a415 = _0x254707,
        _0xfc6dca = _0x2e1eaf;
    _0x3fbe7c += _0x254707 - 0x2;
    var _0x1ebcb5 = _0x3fbe7c - 0x2;
    if (_0x2ebdb4) var _0x26f25d = _0x288a0a['t'](_0x400908);
    else var _0x26f25d = _0x400908['r'];
    _0x254707 = _0x13936e + WORLD['LW3SX'] - _0x3fbe7c + _0x26f25d['x'];
    if (_0x1ebcb5 < _0x3fbe7c + _0x254707 - 0x3) {
        var _0x3dee9e = !![],
            _0x291994 = _0x3fbe7c,
            _0x1d0202 = _0x4db72a,
            _0x290756 = _0x254707,
            _0x22caef = _0x2e1eaf;
        _0x3fbe7c += _0x254707 - 0x2;
        var _0x481618 = _0x3fbe7c;
    } else {
        var _0x3dee9e = ![];
        _0x3fbe7c = _0x1ebcb5;
        var _0x481618 = -0x1;
    }
    _0x254707 = _0x13936e + WORLD['LSANDX'] - _0x3fbe7c;
    if (world['transition']) {
        var _0x2a2b83 = world['time'] ? 0x1 - world['shade']['v'] : world['shade']['v'];
        ctx['fillStyle'] = get_color_transition(0x9, 0x37, 0x3f, 0xb, 0x6a, 0x84, _0x2a2b83);
    } else ctx['fillStyle'] = SPRITE['WATER_3_COLOR'][world['time']];
    ctx['fillRect'](_0x5921ad, _0x373728, _0x50f5ba, _0xa47250);
    if (_0x2ebdb4) {
        if (world['transition']) {
            var _0x2a2b83 = world['time'] ? 0x1 - world['shade']['v'] : world['shade']['v'];
            ctx['fillStyle'] = get_color_transition(0xf, 0x46, 0x4c, 0x2a, 0x8b, 0x9b, _0x2a2b83);
        } else ctx['fillStyle'] = SPRITE['WATER_2_COLOR'][world['time']];
    } else {
        if (world['transition']) {
            var _0x2a2b83 = world['time'] ? 0x1 - world['shade']['v'] : world['shade']['v'];
            ctx['fillStyle'] = get_color_transition(0x9, 0x37, 0x3f, 0xb, 0x6a, 0x84, _0x2a2b83);
        } else ctx['fillStyle'] = SPRITE['WATER_3_COLOR'][world['time']];
    }
    ctx['fillRect'](_0x28bb3b, _0xde2ffe, _0x83a415, _0xfc6dca);
    if (_0x3dee9e) {
        if (_0x2ebdb4) {
            if (world['transition']) {
                var _0x2a2b83 = world['time'] ? 0x1 - world['shade']['v'] : world['shade']['v'];
                ctx['fillStyle'] = get_color_transition(0x11, 0x5e, 0x60, 0xa9, 0xd6, 0xd3, _0x2a2b83);
            } else ctx['fillStyle'] = SPRITE['WATER_1_COLOR'][world['time']];
        } else {
            if (world['transition']) {
                var _0x2a2b83 = world['time'] ? 0x1 - world['shade']['v'] : world['shade']['v'];
                ctx['fillStyle'] = get_color_transition(0x9, 0x37, 0x3f, 0xb, 0x6a, 0x84, _0x2a2b83);
            } else ctx['fillStyle'] = SPRITE['WATER_3_COLOR'][world['time']];
        }
        ctx['fillRect'](_0x291994, _0x1d0202, _0x290756, _0x22caef);
    }
    if (ui['quality'] && _0x2ebdb4) _0x288a0a['draw_foams_left'](_0x1ebcb5, _0x481618, _0x4b40bf, _0x13936e, -user['cam']['y'] + _0x373728, -user['cam']['y'] + _0x373728 + _0xa47250);
};

function draw_beach_sand_top(_0x4b64e, _0x37aaa7, _0x2a384d, _0x584677, _0x1d3e16, _0x2090fc) {
    var _0xbbd81f = _0x584677['w1'],
        _0x471350 = _0x584677['w2'],
        _0x574f82 = _0x584677['w3'],
        _0x3ed843 = user['cam']['y'] + _0x4b64e - 0x2bc,
        _0xe48c4d = Math['max'](user['cam']['x'] + _0x37aaa7, 0x0),
        _0x538c8a = Math['max'](-user['cam']['x'] + canw - _0x2a384d - 0x64, 0x0),
        _0x38590e = _0xe48c4d,
        _0x181a73 = canw - _0xe48c4d - _0x538c8a;
    if (_0x2090fc) var _0x25189e = _0x584677['t'](_0xbbd81f)['x'];
    else var _0x25189e = _0xbbd81f['r']['x'];
    var _0x258c2f = _0x3ed843 + WORLD['LW1SX'],
        _0x2daa6e = _0x38590e,
        _0x29584d = _0x258c2f,
        _0x32918f = _0x25189e + WORLD['W1SX'],
        _0x2210a7 = _0x181a73;
    _0x258c2f += _0x25189e + WORLD['W1SX'] - 0x2;
    var _0x17fbc4 = _0x258c2f;
    if (_0x2090fc) var _0x25189e = _0x584677['t'](_0x471350)['x'];
    else var _0x25189e = _0x471350['r']['x'];
    var _0xec19e2 = _0x3ed843 + WORLD['LW2SX'] - _0x258c2f + _0x25189e,
        _0x86ee99 = _0x258c2f,
        _0x4b990c = _0x38590e,
        _0x545e7e = _0xec19e2,
        _0x10b984 = _0x181a73;
    _0x258c2f += _0xec19e2 - 0x2;
    var _0x5e1858 = _0x258c2f - 0x2;
    if (_0x2090fc) var _0x25189e = _0x584677['t'](_0x574f82)['x'];
    else var _0x25189e = _0x574f82['r']['x'];
    _0xec19e2 = _0x3ed843 + WORLD['LW3SX'] - _0x258c2f + _0x25189e;
    if (_0x5e1858 < _0x258c2f + _0xec19e2 - 0x3) {
        var _0xcfcc39 = !![],
            _0xc98fb8 = _0x258c2f,
            _0xcff072 = _0x38590e,
            _0x2543c6 = _0xec19e2,
            _0x1127b5 = _0x181a73;
        _0x258c2f += _0xec19e2 - 0x2;
        var _0x4f8e89 = _0x258c2f;
    } else {
        var _0xcfcc39 = ![];
        _0x258c2f = _0x5e1858;
        var _0x4f8e89 = -0x1;
    }
    _0xec19e2 = _0x3ed843 + WORLD['LSANDX'] - _0x258c2f;
    if (_0x2090fc > 0x0 && _0x1d3e16['isSand'] === 0x1) {
        if (world['transition']) {
            var _0x4998e3 = world['time'] ? 0x1 - world['shade']['v'] : world['shade']['v'];
            ctx['fillStyle'] = get_color_transition(0xf, 0x4d, 0x48, 0xfc, 0xef, 0xbb, _0x4998e3);
        } else ctx['fillStyle'] = SPRITE['SAND_COLOR'][world['time']];
        ctx['fillRect'](_0x38590e, _0x258c2f, _0x181a73, _0xec19e2);
    } else {
        if (world['transition']) {
            var _0x4998e3 = world['time'] ? 0x1 - world['shade']['v'] : world['shade']['v'];
            ctx['fillStyle'] = get_color_transition(_0x1d3e16['night'][0x0], _0x1d3e16['night'][0x1], _0x1d3e16['night'][0x2], _0x1d3e16['day'][0x0], _0x1d3e16['day'][0x1], _0x1d3e16['day'][0x2], _0x4998e3);
        } else ctx['fillStyle'] = _0x1d3e16['_color'][world['time']];
        ctx['fillRect'](_0x38590e, _0x258c2f, _0x181a73, _0xec19e2);
    }
};

function draw_beach_top(_0x34186d, _0x2d227d, _0x4b1a40, _0x11db05, _0x26a7dd, _0x78f1a4) {
    var _0x43b515 = _0x11db05['w1'],
        _0x35101e = _0x11db05['w2'],
        _0x6504f5 = _0x11db05['w3'],
        _0xb96319 = user['cam']['y'] + _0x34186d - 0x2bc,
        _0x23a7af = Math['max'](user['cam']['x'] + _0x2d227d, 0x0),
        _0x103197 = Math['max'](-user['cam']['x'] + canw - _0x4b1a40 - 0x64, 0x0),
        _0x3c1994 = _0x23a7af,
        _0x351790 = canw - _0x23a7af - _0x103197;
    if (_0x78f1a4) var _0x463888 = _0x11db05['t'](_0x43b515);
    else var _0x463888 = _0x43b515['r'];
    var _0x87fe30 = _0xb96319 + WORLD['LW1SX'],
        _0x43bd05 = _0x3c1994,
        _0xd24ae0 = _0x87fe30,
        _0x23c477 = _0x463888['x'] + WORLD['W1SX'],
        _0x2965d9 = _0x351790;
    _0x87fe30 += _0x463888['x'] + WORLD['W1SX'] - 0x2;
    var _0x45dc87 = _0x87fe30;
    if (_0x78f1a4) var _0x463888 = _0x11db05['t'](_0x35101e);
    else var _0x463888 = _0x35101e['r'];
    var _0x5c5e82 = _0xb96319 + WORLD['LW2SX'] - _0x87fe30 + _0x463888['x'],
        _0x428cb1 = _0x87fe30,
        _0x211647 = _0x3c1994,
        _0x567412 = _0x5c5e82,
        _0x8689b4 = _0x351790;
    _0x87fe30 += _0x5c5e82 - 0x2;
    var _0x3bc769 = _0x87fe30 - 0x2;
    if (_0x78f1a4) var _0x463888 = _0x11db05['t'](_0x6504f5);
    else var _0x463888 = _0x6504f5['r'];
    _0x5c5e82 = _0xb96319 + WORLD['LW3SX'] - _0x87fe30 + _0x463888['x'];
    if (_0x3bc769 < _0x87fe30 + _0x5c5e82 - 0x3) {
        var _0x5a71dd = !![],
            _0x425536 = _0x87fe30,
            _0x37ad6e = _0x3c1994,
            _0x14e13d = _0x5c5e82,
            _0x3bb949 = _0x351790;
        _0x87fe30 += _0x5c5e82 - 0x2;
        var _0x2377ff = _0x87fe30;
    } else {
        var _0x5a71dd = ![];
        _0x87fe30 = _0x3bc769;
        var _0x2377ff = -0x1;
    }
    _0x5c5e82 = _0xb96319 + WORLD['LSANDX'] - _0x87fe30;
    if (world['transition']) {
        var _0x4ef4c3 = world['time'] ? 0x1 - world['shade']['v'] : world['shade']['v'];
        ctx['fillStyle'] = get_color_transition(0x9, 0x37, 0x3f, 0xb, 0x6a, 0x84, _0x4ef4c3);
    } else ctx['fillStyle'] = SPRITE['WATER_3_COLOR'][world['time']];
    ctx['fillRect'](_0x43bd05, _0xd24ae0, _0x2965d9, _0x23c477);
    if (_0x78f1a4) {
        if (world['transition']) {
            var _0x4ef4c3 = world['time'] ? 0x1 - world['shade']['v'] : world['shade']['v'];
            ctx['fillStyle'] = get_color_transition(0xf, 0x46, 0x4c, 0x2a, 0x8b, 0x9b, _0x4ef4c3);
        } else ctx['fillStyle'] = SPRITE['WATER_2_COLOR'][world['time']];
    } else {
        if (world['transition']) {
            var _0x4ef4c3 = world['time'] ? 0x1 - world['shade']['v'] : world['shade']['v'];
            ctx['fillStyle'] = get_color_transition(0x9, 0x37, 0x3f, 0xb, 0x6a, 0x84, _0x4ef4c3);
        } else ctx['fillStyle'] = SPRITE['WATER_3_COLOR'][world['time']];
    }
    ctx['fillRect'](_0x211647, _0x428cb1, _0x8689b4, _0x567412);
    if (_0x5a71dd) {
        if (_0x78f1a4) {
            if (world['transition']) {
                var _0x4ef4c3 = world['time'] ? 0x1 - world['shade']['v'] : world['shade']['v'];
                ctx['fillStyle'] = get_color_transition(0x11, 0x5e, 0x60, 0xa9, 0xd6, 0xd3, _0x4ef4c3);
            } else ctx['fillStyle'] = SPRITE['WATER_1_COLOR'][world['time']];
        } else {
            if (world['transition']) {
                var _0x4ef4c3 = world['time'] ? 0x1 - world['shade']['v'] : world['shade']['v'];
                ctx['fillStyle'] = get_color_transition(0x9, 0x37, 0x3f, 0xb, 0x6a, 0x84, _0x4ef4c3);
            } else ctx['fillStyle'] = SPRITE['WATER_3_COLOR'][world['time']];
        }
        ctx['fillRect'](_0x37ad6e, _0x425536, _0x3bb949, _0x14e13d);
    }
    if (ui['quality'] && _0x78f1a4) _0x11db05['draw_foams_top'](_0x3bc769, _0x2377ff, _0x45dc87, _0xb96319, -user['cam']['x'] + _0x43bd05, -user['cam']['x'] + _0x43bd05 + _0x2965d9);
};

function draw_beach_sand_right(_0x304ece, _0xe19d12, _0x44831f, _0x245ad3, _0x50813d, _0x5633dc) {
    var _0x3f5934 = _0x245ad3['w1'],
        _0x5ee513 = _0x245ad3['w2'],
        _0xc368ba = _0x245ad3['w3'],
        _0x2bbb23 = user['cam']['x'] + _0x304ece + 0x334,
        _0x50ef4e = Math['max'](user['cam']['y'] + _0xe19d12, 0x0),
        _0x3ecbcc = Math['max'](-user['cam']['y'] + canh - _0x44831f - 0x64, 0x0),
        _0x104c03 = _0x50ef4e,
        _0x441410 = canh - _0x50ef4e - _0x3ecbcc;
    if (_0x5633dc) var _0x5ad0d7 = _0x245ad3['t'](_0x3f5934)['x'];
    else var _0x5ad0d7 = _0x3f5934['r']['x'];
    var _0x462e64 = _0x2bbb23 + WORLD['LW1SX'],
        _0x1da219 = _0x462e64,
        _0x1821e3 = _0x104c03,
        _0x283ee0 = -_0x5ad0d7 + WORLD['W1SX'],
        _0x2687d2 = _0x441410;
    _0x462e64 += -_0x5ad0d7 + WORLD['W1SX'] + 0x2;
    var _0x9b542b = _0x462e64;
    if (_0x5633dc) var _0x5ad0d7 = _0x245ad3['t'](_0x5ee513)['x'];
    else var _0x5ad0d7 = _0x5ee513['r']['x'];
    var _0x4f3712 = _0x2bbb23 - WORLD['LW2SX'] - _0x462e64 - _0x5ad0d7,
        _0x26581c = _0x462e64,
        _0x2e9057 = _0x104c03,
        _0x48cedd = _0x4f3712,
        _0x4aaa94 = _0x441410;
    _0x462e64 += _0x4f3712 + 0x2;
    var _0x5b96a5 = _0x462e64 - 0x2;
    if (_0x5633dc) var _0x5ad0d7 = _0x245ad3['t'](_0xc368ba)['x'];
    else var _0x5ad0d7 = _0xc368ba['r']['x'];
    _0x4f3712 = _0x2bbb23 - WORLD['LW3SX'] - _0x462e64 - _0x5ad0d7;
    if (_0x5b96a5 > _0x462e64 + _0x4f3712) {
        var _0x333f16 = !![],
            _0x2128c0 = _0x462e64,
            _0x1ff6b9 = _0x104c03,
            _0x3d7262 = _0x4f3712,
            _0x456a65 = _0x441410;
        _0x462e64 += _0x4f3712 + 0x2;
        var _0x12cc70 = _0x462e64;
    } else {
        var _0x333f16 = ![];
        _0x462e64 = _0x5b96a5;
        var _0x12cc70 = -0x1;
    }
    _0x4f3712 = _0x2bbb23 - WORLD['LSANDX'] - _0x462e64;
    if (_0x5633dc > 0x0 && _0x50813d['isSand'] === 0x1) {
        if (world['transition']) {
            var _0x171510 = world['time'] ? 0x1 - world['shade']['v'] : world['shade']['v'];
            ctx['fillStyle'] = get_color_transition(0xf, 0x4d, 0x48, 0xfc, 0xef, 0xbb, _0x171510);
        } else ctx['fillStyle'] = SPRITE['SAND_COLOR'][world['time']];
        ctx['fillRect'](_0x462e64, _0x104c03, _0x4f3712, _0x441410);
    } else {
        if (world['transition']) {
            var _0x171510 = world['time'] ? 0x1 - world['shade']['v'] : world['shade']['v'];
            ctx['fillStyle'] = get_color_transition(_0x50813d['night'][0x0], _0x50813d['night'][0x1], _0x50813d['night'][0x2], _0x50813d['day'][0x0], _0x50813d['day'][0x1], _0x50813d['day'][0x2], _0x171510);
        } else ctx['fillStyle'] = _0x50813d['_color'][world['time']];
        ctx['fillRect'](_0x462e64, _0x104c03, _0x4f3712, _0x441410);
    }
};

function draw_beach_right(_0xaf0768, _0x1d6628, _0x77a2ef, _0x519a8c, _0x890ba7, _0x1038d1) {
    var _0x312910 = _0x519a8c['w1'],
        _0xf4cbfe = _0x519a8c['w2'],
        _0x64c456 = _0x519a8c['w3'],
        _0x660dc1 = user['cam']['x'] + _0xaf0768 + 0x334,
        _0x3aa037 = Math['max'](user['cam']['y'] + _0x1d6628, 0x0),
        _0x3231a1 = Math['max'](-user['cam']['y'] + canh - _0x77a2ef - 0x64, 0x0),
        _0x44f72b = _0x3aa037,
        _0x829ddb = canh - _0x3aa037 - _0x3231a1;
    if (_0x1038d1) var _0x4e0b4e = _0x519a8c['t'](_0x312910);
    else var _0x4e0b4e = _0x312910['r'];
    var _0x4b1fb2 = _0x660dc1 + WORLD['LW1SX'],
        _0x753574 = _0x4b1fb2,
        _0x310ca5 = _0x44f72b,
        _0x1ef9d0 = -_0x4e0b4e['x'] + WORLD['W1SX'],
        _0x3f88ba = _0x829ddb;
    _0x4b1fb2 += -_0x4e0b4e['x'] + WORLD['W1SX'] + 0x2;
    var _0x6a35ca = _0x4b1fb2;
    if (_0x1038d1) var _0x4e0b4e = _0x519a8c['t'](_0xf4cbfe);
    else var _0x4e0b4e = _0xf4cbfe['r'];
    var _0x5b583e = _0x660dc1 - WORLD['LW2SX'] - _0x4b1fb2 - _0x4e0b4e['x'],
        _0x539874 = _0x4b1fb2,
        _0x3fef02 = _0x44f72b,
        _0x131cbf = _0x5b583e,
        _0x4e92c3 = _0x829ddb;
    _0x4b1fb2 += _0x5b583e + 0x2;
    var _0xd6b220 = _0x4b1fb2 - 0x2;
    if (_0x1038d1) var _0x4e0b4e = _0x519a8c['t'](_0x64c456);
    else var _0x4e0b4e = _0x64c456['r'];
    _0x5b583e = _0x660dc1 - WORLD['LW3SX'] - _0x4b1fb2 - _0x4e0b4e['x'];
    if (_0xd6b220 > _0x4b1fb2 + _0x5b583e) {
        var _0x18e012 = !![],
            _0x4f1012 = _0x4b1fb2,
            _0x261de4 = _0x44f72b,
            _0x536398 = _0x5b583e,
            _0xe03d40 = _0x829ddb;
        _0x4b1fb2 += _0x5b583e + 0x2;
        var _0x59bf69 = _0x4b1fb2;
    } else {
        var _0x18e012 = ![];
        _0x4b1fb2 = _0xd6b220;
        var _0x59bf69 = -0x1;
    }
    _0x5b583e = _0x660dc1 - WORLD['LSANDX'] - _0x4b1fb2;
    if (world['transition']) {
        var _0x647cb8 = world['time'] ? 0x1 - world['shade']['v'] : world['shade']['v'];
        ctx['fillStyle'] = get_color_transition(0x9, 0x37, 0x3f, 0xb, 0x6a, 0x84, _0x647cb8);
    } else ctx['fillStyle'] = SPRITE['WATER_3_COLOR'][world['time']];
    ctx['fillRect'](_0x753574, _0x310ca5, _0x1ef9d0, _0x3f88ba);
    if (_0x1038d1) {
        if (world['transition']) {
            var _0x647cb8 = world['time'] ? 0x1 - world['shade']['v'] : world['shade']['v'];
            ctx['fillStyle'] = get_color_transition(0xf, 0x46, 0x4c, 0x2a, 0x8b, 0x9b, _0x647cb8);
        } else ctx['fillStyle'] = SPRITE['WATER_2_COLOR'][world['time']];
    } else {
        if (world['transition']) {
            var _0x647cb8 = world['time'] ? 0x1 - world['shade']['v'] : world['shade']['v'];
            ctx['fillStyle'] = get_color_transition(0x9, 0x37, 0x3f, 0xb, 0x6a, 0x84, _0x647cb8);
        } else ctx['fillStyle'] = SPRITE['WATER_3_COLOR'][world['time']];
    }
    ctx['fillRect'](_0x539874, _0x3fef02, _0x131cbf, _0x4e92c3);
    if (_0x18e012) {
        if (_0x1038d1) {
            if (world['transition']) {
                var _0x647cb8 = world['time'] ? 0x1 - world['shade']['v'] : world['shade']['v'];
                ctx['fillStyle'] = get_color_transition(0x11, 0x5e, 0x60, 0xa9, 0xd6, 0xd3, _0x647cb8);
            } else ctx['fillStyle'] = SPRITE['WATER_1_COLOR'][world['time']];
        } else {
            if (world['transition']) {
                var _0x647cb8 = world['time'] ? 0x1 - world['shade']['v'] : world['shade']['v'];
                ctx['fillStyle'] = get_color_transition(0x9, 0x37, 0x3f, 0xb, 0x6a, 0x84, _0x647cb8);
            } else ctx['fillStyle'] = SPRITE['WATER_3_COLOR'][world['time']];
        }
        ctx['fillRect'](_0x4f1012, _0x261de4, _0x536398, _0xe03d40);
    }
    if (ui['quality'] && _0x1038d1) _0x519a8c['draw_foams_right'](_0xd6b220, _0x59bf69, _0x6a35ca, _0x660dc1, -user['cam']['y'] + _0x310ca5, -user['cam']['y'] + _0x310ca5 + _0x3f88ba);
};

function draw_beach_sand_bottom(_0x232fa3, _0x861c6, _0x2f852f, _0x39cf55, _0x33568b, _0x5cb92e) {
    var _0x3389e3 = _0x39cf55['w1'],
        _0x493160 = _0x39cf55['w2'],
        _0x26bdfb = _0x39cf55['w3'],
        _0x494465 = user['cam']['y'] + _0x232fa3 + 0x2c6,
        _0x502838 = Math['max'](user['cam']['x'] + _0x861c6, 0x0),
        _0x5aad44 = Math['max'](-user['cam']['x'] + canw - _0x2f852f - 0x64, 0x0),
        _0x41d503 = _0x502838,
        _0x55322c = canw - _0x502838 - _0x5aad44;
    if (_0x5cb92e) var _0x194f0c = _0x39cf55['t'](_0x3389e3)['x'];
    else var _0x194f0c = _0x3389e3['r']['x'];
    var _0x5c3b3b = _0x494465 + WORLD['LW1SX'],
        _0x14baf8 = _0x5c3b3b,
        _0x244398 = _0x41d503,
        _0x4952c8 = -_0x194f0c + WORLD['W1SX'],
        _0x3b6b6d = _0x55322c;
    _0x5c3b3b += -_0x194f0c + WORLD['W1SX'] + 0x2;
    var _0xaac7e8 = _0x5c3b3b;
    if (_0x5cb92e) var _0x194f0c = _0x39cf55['t'](_0x493160)['x'];
    else var _0x194f0c = _0x493160['r']['x'];
    var _0xf1753c = _0x494465 - WORLD['LW2SX'] - _0x5c3b3b - _0x194f0c,
        _0x194473 = _0x5c3b3b,
        _0x3925ab = _0x41d503,
        _0x1ee4a6 = _0xf1753c,
        _0x521ecc = _0x55322c;
    _0x5c3b3b += _0xf1753c + 0x2;
    var _0x330236 = _0x5c3b3b - 0x2;
    if (_0x5cb92e) var _0x194f0c = _0x39cf55['t'](_0x26bdfb)['x'];
    else var _0x194f0c = _0x26bdfb['r']['x'];
    _0xf1753c = _0x494465 - WORLD['LW3SX'] - _0x5c3b3b - _0x194f0c;
    if (_0x330236 > _0x5c3b3b + _0xf1753c) {
        var _0x4acd0a = !![],
            _0x36d33d = _0x5c3b3b,
            _0x591c4e = _0x41d503,
            _0x227a0b = _0xf1753c,
            _0x20830f = _0x55322c;
        _0x5c3b3b += _0xf1753c + 0x2;
        var _0x284f1d = _0x5c3b3b;
    } else {
        var _0x4acd0a = ![];
        _0x5c3b3b = _0x330236;
        var _0x284f1d = -0x1;
    }
    _0xf1753c = _0x494465 - WORLD['LSANDX'] - _0x5c3b3b;
    if (_0x5cb92e > 0x0 && _0x33568b['isSand'] === 0x1) {
        if (world['transition']) {
            var _0x1961a6 = world['time'] ? 0x1 - world['shade']['v'] : world['shade']['v'];
            ctx['fillStyle'] = get_color_transition(0xf, 0x4d, 0x48, 0xfc, 0xef, 0xbb, _0x1961a6);
        } else ctx['fillStyle'] = SPRITE['SAND_COLOR'][world['time']];
        ctx['fillRect'](_0x41d503, _0x5c3b3b, _0x55322c, _0xf1753c);
    } else {
        if (world['transition']) {
            var _0x1961a6 = world['time'] ? 0x1 - world['shade']['v'] : world['shade']['v'];
            ctx['fillStyle'] = get_color_transition(_0x33568b['night'][0x0], _0x33568b['night'][0x1], _0x33568b['night'][0x2], _0x33568b['day'][0x0], _0x33568b['day'][0x1], _0x33568b['day'][0x2], _0x1961a6);
        } else ctx['fillStyle'] = _0x33568b['_color'][world['time']];
        ctx['fillRect'](_0x41d503, _0x5c3b3b, _0x55322c, _0xf1753c);
    }
};

function draw_beach_bottom(_0x336f83, _0xe78abc, _0x30f9fc, _0x8c4a3e, _0x1ecebe, _0x16bf52) {
    var _0x90c439 = _0x8c4a3e['w1'],
        _0x422699 = _0x8c4a3e['w2'],
        _0x842bc1 = _0x8c4a3e['w3'],
        _0x247ba7 = user['cam']['y'] + _0x336f83 + 0x2c6,
        _0xd4fc89 = Math['max'](user['cam']['x'] + _0xe78abc, 0x0),
        _0x1d203d = Math['max'](-user['cam']['x'] + canw - _0x30f9fc - 0x64, 0x0),
        _0x3806b7 = _0xd4fc89,
        _0x21ac95 = canw - _0xd4fc89 - _0x1d203d;
    if (_0x16bf52) var _0x43dd6e = _0x8c4a3e['t'](_0x90c439);
    else var _0x43dd6e = _0x90c439['r'];
    var _0x283009 = _0x247ba7 + WORLD['LW1SX'],
        _0x1f1fbc = _0x283009,
        _0x1c6201 = _0x3806b7,
        _0x2fa890 = -_0x43dd6e['x'] + WORLD['W1SX'],
        _0x3bfc0a = _0x21ac95;
    _0x283009 += -_0x43dd6e['x'] + WORLD['W1SX'] + 0x2;
    var _0x13de94 = _0x283009;
    if (_0x16bf52) var _0x43dd6e = _0x8c4a3e['t'](_0x422699);
    else var _0x43dd6e = _0x422699['r'];
    var _0x31038e = _0x247ba7 - WORLD['LW2SX'] - _0x283009 - _0x43dd6e['x'],
        _0x16afea = _0x283009,
        _0x2bce57 = _0x3806b7,
        _0x2ff121 = _0x31038e,
        _0x419733 = _0x21ac95;
    _0x283009 += _0x31038e + 0x2;
    var _0x1285ac = _0x283009 - 0x2;
    if (_0x16bf52) var _0x43dd6e = _0x8c4a3e['t'](_0x842bc1);
    else var _0x43dd6e = _0x842bc1['r'];
    _0x31038e = _0x247ba7 - WORLD['LW3SX'] - _0x283009 - _0x43dd6e['x'];
    if (_0x1285ac > _0x283009 + _0x31038e) {
        var _0x250b63 = !![],
            _0x516ee8 = _0x283009,
            _0x19ef6b = _0x3806b7,
            _0x47fc45 = _0x31038e,
            _0xd4b6 = _0x21ac95;
        _0x283009 += _0x31038e + 0x2;
        var _0x4078b6 = _0x283009;
    } else {
        var _0x250b63 = ![];
        _0x283009 = _0x1285ac;
        var _0x4078b6 = -0x1;
    }
    _0x31038e = _0x247ba7 - WORLD['LSANDX'] - _0x283009;
    if (world['transition']) {
        var _0xf4371a = world['time'] ? 0x1 - world['shade']['v'] : world['shade']['v'];
        ctx['fillStyle'] = get_color_transition(0x9, 0x37, 0x3f, 0xb, 0x6a, 0x84, _0xf4371a);
    } else ctx['fillStyle'] = SPRITE['WATER_3_COLOR'][world['time']];
    ctx['fillRect'](_0x1c6201, _0x1f1fbc, _0x3bfc0a, _0x2fa890);
    if (_0x16bf52) {
        if (world['transition']) {
            var _0xf4371a = world['time'] ? 0x1 - world['shade']['v'] : world['shade']['v'];
            ctx['fillStyle'] = get_color_transition(0xf, 0x46, 0x4c, 0x2a, 0x8b, 0x9b, _0xf4371a);
        } else ctx['fillStyle'] = SPRITE['WATER_2_COLOR'][world['time']];
    } else {
        if (world['transition']) {
            var _0xf4371a = world['time'] ? 0x1 - world['shade']['v'] : world['shade']['v'];
            ctx['fillStyle'] = get_color_transition(0x9, 0x37, 0x3f, 0xb, 0x6a, 0x84, _0xf4371a);
        } else ctx['fillStyle'] = SPRITE['WATER_3_COLOR'][world['time']];
    }
    ctx['fillRect'](_0x2bce57, _0x16afea, _0x419733, _0x2ff121);
    if (_0x250b63) {
        if (_0x16bf52) {
            if (world['transition']) {
                var _0xf4371a = world['time'] ? 0x1 - world['shade']['v'] : world['shade']['v'];
                ctx['fillStyle'] = get_color_transition(0x11, 0x5e, 0x60, 0xa9, 0xd6, 0xd3, _0xf4371a);
            } else ctx['fillStyle'] = SPRITE['WATER_1_COLOR'][world['time']];
        } else {
            if (world['transition']) {
                var _0xf4371a = world['time'] ? 0x1 - world['shade']['v'] : world['shade']['v'];
                ctx['fillStyle'] = get_color_transition(0x9, 0x37, 0x3f, 0xb, 0x6a, 0x84, _0xf4371a);
            } else ctx['fillStyle'] = SPRITE['WATER_3_COLOR'][world['time']];
        }
        ctx['fillRect'](_0x19ef6b, _0x516ee8, _0xd4b6, _0x47fc45);
    }
    if (ui['quality'] && _0x16bf52) _0x8c4a3e['draw_foams_bottom'](_0x1285ac, _0x4078b6, _0x13de94, _0x247ba7, -user['cam']['x'] + _0x1c6201, -user['cam']['x'] + _0x1c6201 + _0x3bfc0a);
};

function draw_world_with_effect() {
    ctx['globalAlpha'] = 0x1;
    if (world['transition']) var _0xeca701 = world['shade']['update']();
    world['update_dist_from_biomes'](-user['cam']['x'], -user['cam']['y']), _js = Math['max'](Math['floor'](-user['cam']['x'] / world['dw']) - 0x5, 0x0), _je = Math['min'](Math['floor']((-user['cam']['x'] + user['cam']['w']) / world['dw']) + 0x4, world['nw'] - 0x1), _is = Math['max'](Math['floor'](-user['cam']['y'] / world['dh']) - 0x3, 0x0), _ie = Math['min'](Math['floor']((-user['cam']['y'] + user['cam']['h']) / world['dh']) + 0x3, world['nh'] - 0x1), draw_ground(), draw_world(), ui['quality'] && world['mode'] !== WORLD['MODE_ZOMBIES'] && world['mode'] !== WORLD['MODE_LEGACY'] && world['mode'] !== WORLD['MODE_BR'] && (draw_desert(), draw_winter(), draw_ash()), world['transition'] && (_0xeca701 && (world['transition'] = ![], world['shade']['v'] = 0x0, world['shade']['o'] = ![]));
}
var ANIMATION_STOP = 0x0,
    ANIMATION_RUN = 0x1,
    FOCUS_OUT = 0x0,
    FOCUS_IN = 0x1,
    ALIGN_CENTER = 0x0,
    ALIGN_LEFT = 0x1,
    STYLE_RETRO = 0x0,
    STYLE_FLAT = 0x1,
    KEYDOWN = 0x0,
    KEYPRESS = 0x1,
    GET_KEY_OUT = 0x0,
    GET_KEY_IN = 0x1,
    MOUSE_MOVE = 0x0,
    MOUSE_DOWN = 0x1,
    MOUSE_UP = 0x2,
    BUTTON_OUT = 0x0,
    BUTTON_IN = 0x1,
    BUTTON_CLICK = 0x2;

function gui_disable_antialiasing(_0x24d731) {
    _0x24d731['imageSmoothingEnabled'] = ![], _0x24d731['webkitImageSmoothingEnabled'] = ![], _0x24d731['mozImageSmoothingEnabled'] = ![], _0x24d731['msImageSmoothingEnabled'] = ![], _0x24d731['oImageSmoothingEnabled'] = ![];
}

function get_mouse_pos(_0x292ac7, _0x50b021) {
    var _0x288a47 = _0x292ac7['getBoundingClientRect']();
    return {
        'x': _0x50b021['clientX'] - _0x288a47['left'],
        'y': _0x50b021['clientY'] - _0x288a47['top']
    };
}

function gui_render_text(_0xdd8587, _0x399656, _0x295768, _0x48e6be, _0x4b4a16, _0x5feaf0, _0x2f429a, _0x4ee4fb, _0x79cf1f, _0x2ad0be, _0x39a0c5, _0x3835e6, _0x20a1da, _0x840728, _0x116cf4) {
    if (_0xdd8587['length'] === 0x0) _0xdd8587 = '\x20';
    if (_0x2f429a === undefined) _0x2f429a = 0x0;
    if (_0x4ee4fb === undefined) _0x4ee4fb = 0x0;
    if (_0x79cf1f === undefined) _0x79cf1f = 0x0;
    if (_0x840728 === undefined) _0x840728 = 0x0;
    var _0x3cfbf9 = document['createElement']('canvas'),
        _0x5d9bf0 = _0x3cfbf9['getContext']('2d');
    _0x5d9bf0['textBaseline'] = 'middle', _0x5d9bf0['font'] = (_0x116cf4 !== undefined ? _0x116cf4 + '\x20' : '') + _0x48e6be + 'px\x20' + _0x399656;
    if (_0x4b4a16 !== undefined) _0x4b4a16 = Math['min'](_0x5d9bf0['measureText'](_0xdd8587)['width'], _0x4b4a16);
    else _0x4b4a16 = _0x5d9bf0['measureText'](_0xdd8587)['width'];
    _0x3cfbf9['width'] = _0x4b4a16 + _0x2f429a, _0x3cfbf9['height'] = _0x48e6be + _0x4ee4fb;
    if (_0x5feaf0 !== undefined) {
        if (_0x39a0c5 !== undefined) _0x5d9bf0['globalAlpha'] = _0x39a0c5;
        _0x5d9bf0['fillStyle'] = _0x5feaf0;
        if (_0x3835e6 !== undefined) roundRect(_0x5d9bf0, _0x79cf1f + 0x2, _0x79cf1f, _0x4b4a16 + _0x2f429a - _0x79cf1f * 0x2 - 0x4, _0x48e6be + _0x4ee4fb - _0x79cf1f * 0x2, _0x3835e6), _0x5d9bf0['fill']();
        else _0x5d9bf0['fillRect'](_0x79cf1f, _0x79cf1f, _0x4b4a16 + _0x2f429a - _0x79cf1f * 0x2, _0x48e6be + _0x4ee4fb - _0x79cf1f * 0x2);
        _0x5d9bf0['globalAlpha'] = 0x1, _0x79cf1f !== 0x0 && (_0x5d9bf0['lineWidth'] = _0x79cf1f, _0x5d9bf0['strokeStyle'] = _0x2ad0be, _0x5d9bf0['stroke']());
    }
    return _0x5d9bf0['textBaseline'] = 'middle', _0x5d9bf0['font'] = (_0x116cf4 !== undefined ? _0x116cf4 + '\x20' : '') + _0x48e6be + 'px\x20' + _0x399656, _0x20a1da !== undefined && (_0x5d9bf0['strokeStyle'] = _0x20a1da, _0x5d9bf0['lineWidth'] = _0x840728, _0x5d9bf0['lineJoin'] = 'miter', _0x5d9bf0['miterLimit'] = 0x2, _0x5d9bf0['strokeText'](_0xdd8587, Math['floor'](_0x2f429a / 0x2), Math['floor'](_0x4ee4fb / 0x2) + Math['floor'](_0x48e6be / 0x2), _0x4b4a16)), _0x5d9bf0['fillStyle'] = _0x295768, _0x5d9bf0['fillText'](_0xdd8587, Math['floor'](_0x2f429a / 0x2), Math['floor'](_0x4ee4fb / 0x2) + Math['floor'](_0x48e6be / 0x2), _0x4b4a16), _0x3cfbf9['w2'] = _0x3cfbf9['width'] / 0x2, _0x3cfbf9['h2'] = _0x3cfbf9['height'] / 0x2, _0x3cfbf9;
};

function gui_create_button(_0x1b60a6, _0x438b1d, _0xa95365, _0x25b9df, _0x44dd8b, _0x350146, _0x4f4625, _0x497637, _0x1c6682, _0x5adcbf, _0x28abfd) {
    if (_0x1c6682 === undefined) _0x1c6682 = 0x0;
    if (_0x497637 === undefined) _0x497637 = 0x0;
    if (_0x5adcbf === undefined) _0x5adcbf = 0x0;
    if (_0x28abfd === undefined) _0x28abfd = 0x1;
    _0x44dd8b = _0x44dd8b === 0x3 ? 0x3 : _0x44dd8b === 0x1 ? 0x2 : 0x1;
    if (_0x350146 !== 0x1) _0x350146 = 0x0;
    if (_0x25b9df) var _0x39e956 = _0x25b9df;
    var _0x34224e = {
            'width': _0x1b60a6,
            'height': _0x438b1d,
            'img': _0x39e956,
            'state': BUTTON_OUT,
            'translate': {
                'x': _0x497637,
                'y': _0x1c6682,
                '_x': _0x497637,
                '_y': _0x1c6682
            },
            'enable_breath': _0x350146,
            'breath': 0x0,
            'callback': _0x4f4625,
            'position': _0x5adcbf,
            'active': _0x28abfd
        },
        _0x81fd12 = function() {
            return _0x34224e['img'][_0x34224e['state']];
        },
        _0x2eb14d = function(_0x49a8d8) {
            var _0x257de1 = _0x34224e['translate'];
            return (_0x34224e['width'] === 0x0 || _0x34224e['height'] === 0x0) && (_0x34224e['width'] = _0x34224e['img'][0x0]['width'], _0x34224e['height'] = _0x34224e['img'][0x0]['height']), _0x49a8d8['x'] > _0x257de1['x'] && _0x49a8d8['x'] < _0x257de1['x'] + _0x34224e['width'] / _0x44dd8b && _0x49a8d8['y'] > _0x257de1['y'] && _0x49a8d8['y'] < _0x257de1['y'] + _0x34224e['height'] / _0x44dd8b;
        },
        _0x47ea18 = function(_0x5da6a6, _0x350f0d, _0x535492) {
            if (_0x2eb14d(_0x350f0d)) {
                if (_0x535492 == MOUSE_DOWN) _0x34224e['state'] = BUTTON_CLICK;
                else {
                    if (_0x535492 == MOUSE_UP) _0x34224e['state'] = BUTTON_IN;
                    else {
                        if (_0x535492 == MOUSE_MOVE && _0x34224e['state'] != BUTTON_CLICK) _0x34224e['state'] = BUTTON_IN;
                    }
                }
                return !![];
            }
            return _0x34224e['state'] = BUTTON_OUT, ![];
        },
        _0x350146 = function() {
            var _0x35036c = 0x0;
            if (_0x34224e['enable_breath'] === 0x1) {
                if (_0x34224e['state'] === BUTTON_IN || _0x34224e['state'] === BUTTON_CLICK) _0x34224e['breath'] = (_0x34224e['breath'] + delta * 0x3e8) % 0x3e8;
                else {
                    if (_0x34224e['breath'] > 0x0) {
                        _0x34224e['breath'] = _0x34224e['breath'] > 0x1f4 ? _0x34224e['breath'] + delta * 0x3e8 : _0x34224e['breath'] - delta * 0x3e8;
                        if (_0x34224e['breath'] < 0x0 || _0x34224e['breath'] > 0x3e8) _0x34224e['breath'] = 0x0;
                    }
                }
                _0x35036c = 0.2 * Utils['ease_in_out_quad'](_0x34224e['breath'] > 0x1f4 ? (0x3e8 - _0x34224e['breath']) / 0x1f4 : _0x34224e['breath'] / 0x1f4);
            }
            return _0x35036c;
        },
        _0x696203;
    if (_0x44dd8b === 0x2) _0x696203 = function(_0xcc165a) {
        var _0xb5bbde = 0x1 + _0x350146(),
            _0x1d6a2e = _0x81fd12(),
            _0x4d5478 = _0x34224e['width'] * _0xb5bbde / 0x2,
            _0x1e86d7 = _0x34224e['height'] * _0xb5bbde / 0x2,
            _0x473ba6 = (_0x4d5478 - _0x34224e['width'] / 0x2) / 0x2,
            _0x3e738c = (_0x1e86d7 - _0x34224e['height'] / 0x2) / 0x2;
        ctxDrawImage(_0xcc165a, _0x1d6a2e, _0x34224e['translate']['x'] - _0x473ba6, _0x34224e['translate']['y'] - _0x3e738c, _0x4d5478, _0x1e86d7);
    };
    else _0x44dd8b === 0x3 ? (_0x696203 = function(_0x41ef1e) {
        var _0x54feb8 = _0x81fd12(),
            _0x361602 = _0x34224e['width'],
            _0x194c8b = _0x34224e['height'],
            _0x45f95d = (_0x361602 - _0x34224e['width']) / 0x2,
            _0x47c9ab = (_0x194c8b - _0x34224e['height']) / 0x2;
        ctxDrawImage(_0x41ef1e, _0x54feb8, _0x34224e['translate']['x'] - _0x45f95d, _0x34224e['translate']['y'] - _0x47c9ab, _0x361602, _0x194c8b);
    }, _0x44dd8b = 0x1) : _0x696203 = function(_0x2e8fed) {
        var _0x49f344 = _0x81fd12();
        ctxDrawImage(_0x2e8fed, _0x49f344, _0x34224e['translate']['x'], _0x34224e['translate']['y']);
    };
    return {
        'info': _0x34224e,
        'trigger': _0x47ea18,
        'draw': _0x696203,
        'in_button': _0x2eb14d
    };
}

function gui_create_image_hd(_0x3af516, _0x3139ad, _0x4d8b85, _0x59fc2e, _0x5c842f) {
    var _0x2ed952 = {
            'x': _0x4d8b85,
            'y': _0x59fc2e,
            '_x': _0x4d8b85,
            '_y': _0x59fc2e
        },
        _0x2e91ac = function(_0x2ae98f) {
            ctxDrawImage(_0x2ae98f, _0x3af516, _0x2ed952['x'], _0x2ed952['y'], _0x3af516['width'] / 0x2, _0x3af516['height'] / 0x2);
        };
    return {
        'translate': _0x2ed952,
        'draw': _0x2e91ac,
        'active': _0x3139ad,
        'position': _0x5c842f
    };
}

function gui_create_image(_0x5bc6d8) {
    var _0x1cc4d3 = {
            'x': 0x0,
            'y': 0x0
        },
        _0x13262d = function(_0x4558ee) {
            ctxDrawImage(_0x4558ee, _0x5bc6d8, _0x1cc4d3['x'], _0x1cc4d3['y']);
        };
    return {
        'img': _0x5bc6d8,
        'translate': _0x1cc4d3,
        'draw': _0x13262d
    };
}

function gui_create_animation(_0x2a265e, _0x428d22) {
    if (_0x428d22 === undefined) _0x428d22 = 0.033;
    var _0x49c9e7 = {
            'x': 0x0,
            'y': 0x0
        },
        _0x49d4b3 = 0x0,
        _0x31df25 = 0x0,
        _0x382368 = function() {
            return _0x31df25 += delta, _0x31df25 > _0x428d22 && (_0x49d4b3 = (_0x49d4b3 + 0x1) % _0x2a265e['length'], _0x31df25 -= _0x428d22), _0x2a265e[_0x49d4b3];
        },
        _0x54c5d9 = function(_0x316fae) {
            ctxDrawImage(_0x316fae, _0x382368(), _0x49c9e7['x'], _0x49c9e7['y']);
        };
    return {
        'img': _0x2a265e,
        'translate': _0x49c9e7,
        'draw': _0x54c5d9
    };
}

function gui_add_breath_effect(_0x213709, _0x372c77, _0x43a9ca, _0x53e153, _0x370831, _0x3eaf10, _0x45a1c7) {
    _0x213709['end'] = _0x372c77, _0x213709['start'] = _0x43a9ca, _0x213709['speed_start'] = _0x53e153, _0x213709['speed_end'] = _0x370831, _0x213709['width'] = _0x213709['img']['width'], _0x213709['height'] = _0x213709['img']['height'], _0x213709['scale'] = (_0x372c77 + _0x43a9ca) / 0x2, _0x213709['breath'] = ![], _0x213709['draw'] = function(_0x3124cd) {
        _0x213709['translate']['x'] = canw2 - _0x213709['width'] / 0x2, ctxDrawImage(_0x3124cd, _0x213709['img'], 0x0, 0x0, _0x213709['img']['width'], _0x213709['img']['height'], _0x213709['translate']['x'], _0x213709['translate']['y'], _0x213709['width'], _0x213709['height']);
    };
}

function gui_breath_effect(_0x2c72a7) {
    _0x2c72a7['scale'] += _0x2c72a7['breath'] ? delta / _0x2c72a7['speed_start'] : -delta / _0x2c72a7['speed_end'];
    if (_0x2c72a7['scale'] > _0x2c72a7['end']) _0x2c72a7['breath'] = ![];
    else {
        if (_0x2c72a7['scale'] < _0x2c72a7['start']) _0x2c72a7['breath'] = !![];
    }
}
var SENDWORD = 'send',
    SHOW_ID = Utils['getURLData']('id') === '1' ? 0x1 : 0x0,
    PASSWORD = Utils['getURLData']('password'),
    RIVET_API = 'https://matchmaker.api.rivet.gg/v1',
    STATE = {
        'DELETE': 0x1,
        'HURT': 0x2,
        'COLD': 0x4,
        'HUNGER': 0x8,
        'ATTACK': 0x10,
        'WALK': 0x20,
        'IDLE': 0x40,
        'HEAL': 0x80,
        'WEB': 0x100
    },
    KIT = [{
        'price': 0x3e8,
        'items': [
            [0x2, INV['FIRE']],
            [0x1, INV['COOKED_MEAT']],
            [0x8, INV['PLANT']],
            [0x1, INV['BREAD']]
        ]
    }, {
        'price': 0x7d0,
        'items': [
            [0x2, INV['BIG_FIRE']],
            [0x1, INV['PICK_WOOD']],
            [0x2, INV['COOKED_MEAT']],
            [0x10, INV['PLANT']],
            [0x2, INV['BREAD']]
        ]
    }, {
        'price': 0xfa0,
        'items': [
            [0x3, INV['BIG_FIRE']],
            [0x1, INV['PICK']],
            [0x4, INV['COOKED_MEAT']],
            [0x14, INV['PLANT']],
            [0x4, INV['BREAD']],
            [0x1, INV['WORKBENCH']],
            [0x50, INV['STONE']],
            [0x8c, INV['WOOD']]
        ]
    }, {
        'price': 0x1f40,
        'items': [
            [0x1, INV['BAG']],
            [0x4, INV['BIG_FIRE']],
            [0x1, INV['PICK_GOLD']],
            [0x6, INV['COOKED_MEAT']],
            [0x1e, INV['PLANT']],
            [0x6, INV['BREAD']],
            [0x1, INV['WORKBENCH']],
            [0x96, INV['STONE']],
            [0xc8, INV['WOOD']],
            [0x3c, INV['GOLD']],
            [0x2, INV['BOTTLE_FULL']]
        ]
    }, {
        'price': 0x3e80,
        'items': [
            [0x1, INV['BAG']],
            [0x1, INV['PICK_DIAMOND']],
            [0x1, INV['BED']],
            [0x7, INV['CAKE']],
            [0x2, INV['BOTTLE_FULL']],
            [0x2, INV['BIG_FIRE']],
            [0x1, INV['FURNACE']],
            [0xf, INV['STONE_WALL']],
            [0x2, INV['STONE_DOOR']],
            [0x1, INV['TOTEM']],
            [0x1, INV['SPANNER']],
            [0xc8, INV['STONE']],
            [0x12c, INV['WOOD']]
        ]
    }, {
        'price': 0x3e80,
        'items': [
            [0x1, INV['BAG']],
            [0x1, INV['COAT']],
            [0x1, INV['SHOVEL_GOLD']],
            [0x1, INV['PICK_GOLD']],
            [0xa, INV['CAKE']],
            [0x4, INV['BOTTLE_FULL']],
            [0x6, INV['BIG_FIRE']],
            [0x3, INV['BANDAGE']],
            [0x1, INV['BOOK']],
            [0xc8, INV['STONE']],
            [0x12c, INV['WOOD']]
        ]
    }, {
        'price': 0x3e80,
        'items': [
            [0x1, INV['BAG']],
            [0x1, INV['HOOD']],
            [0x1, INV['HAMMER_GOLD']],
            [0x3, INV['BANDAGE']],
            [0x1, 0x0],
            [0x1, INV['PICK_GOLD']],
            [0x7, INV['CAKE']],
            [0x2, INV['BOTTLE_FULL']],
            [0x4, INV['BIG_FIRE']],
            [0x96, INV['STONE']],
            [0xc8, INV['WOOD']],
            [0x1, INV['LOCKPICK']]
        ]
    }, {
        'price': 0x3e80,
        'items': [
            [0x1, INV['BAG']],
            [0x1, INV['PEASANT']],
            [0x1, INV['PICK_GOLD']],
            [0x7, INV['CAKE']],
            [0x2, INV['BOTTLE_FULL']],
            [0x4, INV['BIG_FIRE']],
            [0x2, INV['WINDMILL']],
            [0x4, INV['BREAD_OVEN']],
            [0xa, INV['PLOT']],
            [0x6, INV['WHEAT_SEED']],
            [0x4, INV['SEED']],
            [0x1, INV['WATERING_CAN_FULL']],
            [0x1f4, INV['WOOD']]
        ]
    }, {
        'price': 0x3e80,
        'items': [
            [0x1, INV['BAG']],
            [0x1, INV['PICK_GOLD']],
            [0x10, INV['FOODFISH_COOKED']],
            [0x1, INV['BOTTLE_FULL']],
            [0x6, INV['BIG_FIRE']],
            [0x3, INV['BANDAGE']],
            [0x1, INV['DIVING_MASK']],
            [0x1, INV['SWORD']],
            [0x10, INV['BRIDGE']],
            [0x96, INV['STONE']],
            [0xc8, INV['WOOD']]
        ]
    }, {
        'price': 0x4e20,
        'items': [
            [0x1, INV['BAG']],
            [0x1, INV['PICK_GOLD']],
            [0x1, INV['CAKE']],
            [0x1, INV['BOTTLE_FULL']],
            [0x3, INV['BIG_FIRE']],
            [0x3, INV['BANDAGE']],
            [0x1, INV['GOLD_HELMET']],
            [0x1, INV['SWORD_GOLD']],
            [0x1, INV['DIAMOND_SPEAR']],
            [0x2, INV['GOLD_SPIKE']],
            [0x32, INV['STONE']],
            [0x64, INV['WOOD']]
        ]
    }],
    CLIENT = {
        'VERSION_NUMBER': 0x34,
        'TIMEOUT_TIME': 0x7d0,
        'TIMEOUT_NUMBER': 0x3,
        'PING': '[13]',
        'PING_DELAY': 0xea60,
        'ROTATE': 0.2,
        'ATTACK': 0.2,
        'SLOW_ATTACK': 0.58,
        'CAM_DELAY': 0x32,
        'MUTE_DELAY': 0x1e848,
        'TIMEOUT_SERVER': 0x927c0,
        'WAITING_FOR_SERVER': 0x1f40,
        'DELAY_CONNECTION_UPDATE': 0x5,
        'LAG_DISTANCE': 0xc8,
        'LOOSE_FOCUS': 0xf,
        'TOKEN_LEN': 0x14,
        'TEAM_MANAGE': 0x0,
        'TEAM_SHOW': 0x1,
        'TEAM_LEAVE': 0x2,
        'TEAM_JOIN': 0x3,
        'TEAM_FULL': 0x4,
        'SKIN_MAX': 0x14,
        'ACCESSORY_MAX': 0xe,
        'SYMBOL_MAX': 0x4
    };

function NetworkClient() {
    var _0x5315ab = this;
    this['socket'] = null, this['_current_id'] = 0x0, this['server_list'] = [], this['mode_list'] = [
        [],
        [],
        [],
        [],
        [],
        [],
        [],
        [],
        []
    ], this['selected_server'] = [-0x1, -0x1, -0x1, -0x1, -0x1, -0x1, -0x1, -0x1, -0x1], this['current_mode'] = 0x0, this['privateServer'] = 0x0, this['get_rivet_token'] = async function() {
        if (environment == environments['DEV']) {
            let _0x1fba1b = await fetch(DB + 'rivet-token');
            return await _0x1fba1b['text']();
        } else return null;
    }, this['fetch_server_list'] = async function() {
        let _0x4c60e2 = await this['get_rivet_token'](),
            _0x3cc6df = {};
        if (_0x4c60e2) _0x3cc6df['Authorization'] = 'Bearer\x20' + _0x4c60e2;
        let _0x2ecf57 = await fetch(RIVET_API + '/lobbies/list', {
            'method': 'GET',
            'headers': _0x3cc6df
        });
        if (!_0x2ecf57['ok']) {
            console['error']('Failed\x20to\x20list\x20lobbies');
            throw 'Failed\x20to\x20list\x20lobbies';
        }
        let _0x1e579c = await _0x2ecf57['json']();
        console['log']('Lobbies', _0x1e579c), this['server_list'] = [];
        let _0x5105ca = {};
        for (let _0x54b264 of _0x1e579c['game_modes']) {
            this['server_list']['push']({
                'a': 'Auto\x20Select',
                'gm': _0x54b264['game_mode_id'],
                'm': 0x64,
                'nu': 0x0,
                'auto': !![]
            });
        }
        for (let _0x46ea90 of _0x1e579c['lobbies']) {
            let _0x4b8263 = _0x46ea90['game_mode_id'],
                _0xc3bb36;
            _0x4b8263 in _0x5105ca ? _0xc3bb36 = ++_0x5105ca[_0x4b8263] : _0xc3bb36 = _0x5105ca[_0x4b8263] = 0x1;
            let _0x56984d = _0x1e579c['regions']['find'](_0x354dd0 => _0x354dd0['region_id'] == _0x46ea90['region_id']);
            this['server_list']['push']({
                'a': _0x56984d['region_display_name'] + '\x20' + _0xc3bb36,
                'gm': _0x46ea90['game_mode_id'],
                'idx': _0xc3bb36,
                'm': _0x46ea90['max_players_normal'],
                'nu': _0x46ea90['total_player_count'],
                'id': _0x46ea90['lobby_id']
            });
        }
    }, this['geolocate_server'] = function(_0x4e0206) {
        var _0x430d42 = [];
        for (var _0x48325f = 0x0; _0x48325f < _0x4e0206['length']; _0x48325f++) {
            if (_0x4e0206[_0x48325f]['a']['indexOf'](TZ) !== -0x1) _0x430d42['push'](_0x48325f);
        }
        if (_0x430d42['length'] === 0x0) return 0x0;
        return _0x430d42[Math['floor'](Math['random']() * _0x430d42['length'])];
    }, this['set_server_list'] = function(_0x29d3f1) {
        var _0x2bf69c = 0x0;
        for (var _0x921a4d = 0x0; _0x921a4d < _0x29d3f1['length']; _0x921a4d++) _0x2bf69c += _0x29d3f1[_0x921a4d]['nu'];
        var _0x246d4e = document['getElementById']('servselect');
        if (client['selected_server'][client['current_mode']] === -0x1) client['selected_server'][client['current_mode']] = _0x246d4e['selectedIndex'] = client['geolocate_server'](_0x29d3f1);
        else _0x246d4e['selectedIndex'] = client['selected_server'][client['current_mode']];
        var _0x1355ca = '<label\x20for=\x22ul-id\x22><button\x20type=\x22button\x22\x20class=\x22ng-binding\x22>' + _0x29d3f1[_0x246d4e['selectedIndex']]['a'] + (_0x29d3f1[_0x246d4e['selectedIndex']]['nu'] > 0x0 ? '\x20[' + _0x29d3f1[_0x246d4e['selectedIndex']]['nu'] + '\x20' + LANG[TEXT['PLAYERS']] + ']' : '') + '</button></label>' + '<ul\x20role=\x22listbox\x22\x20id=\x22ul-id\x22\x20class=\x22md-whiteframe-z1\x22\x20name=\x22ul-id\x22>' + '<li\x20role=\x22option\x22\x20id=\x22selectDisabled\x22>' + LANG[TEXT['CHOOSE']] + '\x20(' + this['total_players'] + ')\x20' + LANG[TEXT['TOTAL_PLAYERS']] + '</li>';
        for (var _0x921a4d = 0x0; _0x921a4d < _0x29d3f1['length']; _0x921a4d++) {
            _0x1355ca += '<li\x20role=\x22option\x22>' + _0x29d3f1[_0x921a4d]['a'], _0x1355ca += '\x20[' + _0x29d3f1[_0x921a4d]['nu'] + '\x20' + LANG[TEXT['PLAYERS']] + ']', _0x1355ca += '</li>\x0a';
        }
        _0x1355ca += '<li\x20role=\x22option\x22\x20id=\x22selectDisabled\x22>(' + _0x2bf69c + ')\x20' + LANG[TEXT['TOTAL_MODE']] + '</li>', _0x1355ca += '</div>', _0x246d4e['innerHTML'] = _0x1355ca, $('.md-select')['on']('click', function() {
            $(this)['toggleClass']('active');
        }), $('.md-select\x20ul\x20li')['on']('click', function() {
            var _0x1e8896 = $(this)['text'](),
                _0x9c56f = -0x1,
                _0x2a1e7c = client['mode_list'][client['current_mode']];
            for (var _0x1cb927 = 0x0; _0x1cb927 < _0x2a1e7c['length']; _0x1cb927++) {
                if (_0x2a1e7c[_0x1cb927]['a'] + '\x20[' + _0x2a1e7c[_0x1cb927]['nu'] + '\x20' + LANG[TEXT['PLAYERS']] + ']' === _0x1e8896) {
                    _0x9c56f = _0x1cb927;
                    break;
                }
            }
            if (_0x9c56f === -0x1) return;
            document['getElementById']('servselect')['selectedIndex'] = _0x9c56f, client['selected_server'][client['current_mode']] = _0x9c56f, $('.md-select\x20ul\x20li')['removeClass']('active'), $(this)['addClass']('active'), $('.md-select\x20label\x20button')['text'](_0x1e8896);
        });
    }, this['total_players'] = 0x0, this['update_server_list'] = function() {
        this['total_players'] = 0x0;
        for (var _0xf043be = 0x0; _0xf043be < client['server_list']['length']; _0xf043be++) {
            if (this['server_list'][_0xf043be]['gm'] == 'experimental') this['mode_list'][WORLD['MODE_EXPERIMENTAL']]['push'](this['server_list'][_0xf043be]);
            else {
                if (this['server_list'][_0xf043be]['gm'] == 'zombies') this['mode_list'][WORLD['MODE_ZOMBIES']]['push'](this['server_list'][_0xf043be]);
                else {
                    if (this['server_list'][_0xf043be]['gm'] == 'forest') this['mode_list'][WORLD['MODE_LEGACY']]['push'](this['server_list'][_0xf043be]);
                    else {
                        if (this['server_list'][_0xf043be]['gm'] == 'battle-royale') this['mode_list'][WORLD['MODE_BR']]['push'](this['server_list'][_0xf043be]);
                        else {
                            if (this['server_list'][_0xf043be]['gm'] == 'vampires') this['mode_list'][WORLD['MODE_VAMPIRES']]['push'](this['server_list'][_0xf043be]);
                            else this['mode_list'][WORLD['MODE_PVP']]['push'](this['server_list'][_0xf043be]);
                        }
                    }
                }
            }
            this['total_players'] += this['server_list'][_0xf043be]['nu'];
        }
        for (_0xf043be = 0x0; _0xf043be < this['mode_list']['length']; _0xf043be++)
            if (this['mode_list'][_0xf043be]['length'] === 0x0) this['mode_list'][_0xf043be]['push']({
                'a': LANG[TEXT['COMMING_SOON']],
                'nu': 0x0,
                'i': '127.0.0.1',
                'p': 0x50
            });
        this['set_server_list'](this['mode_list'][0x0]), this['select_gamemode'] = function(_0x5a72aa) {
            client['current_mode'] = _0x5a72aa, client['set_server_list'](client['mode_list'][client['current_mode']]), client['set_server_list'](client['mode_list'][client['current_mode']]), document['getElementById']('servselect')['selectedIndex'] = client['current_mode'];
        };
    }, this['timeout_server'] = 0x0, this['timeout_number'] = 0x0, this['timeout_handler'] = null, this['timeout'] = function() {
        _0x5315ab['timeout_number']++, _0x5315ab['socket']['close']();
        if (_0x5315ab['timeout_number'] > CLIENT['TIMEOUT_NUMBER']) ___adsvid = 0x1, ui['error_level'] = CLIENT['ERROR_REFUSED'], _0x5315ab['new_alert'](LANG[TEXT['YOU_CANNOT_JOIN']]), ui['waiting'] = ![], user['reconnect']['enabled'] && game['quit'](ui['run']);
        else _0x5315ab['connect_timeout']();
    }, this['kick'] = function(_0x3bd436) {
        if (this['_current_id'] != this['socket']['_current_id']) return;
        this['_current_id']++, this['new_alert'](LANG[TEXT['KICKED']] + _0x3bd436), game['quit'](ui['run']);
    }, this['mute'] = function() {
        this['new_alert']('You\x20speak\x20too\x20much');
    }, this['already_used_key'] = function() {
        clearTimeout(this['timeout_handler']), this['new_alert'](LANG[TEXT['KEY_ALREADY']]), ui['waiting'] = ![];
    }, this['hide_shop_kit'] = function() {
        user['shop']['open'] = ![];
    }, this['hide_recipe_book'] = function() {
        game['show_recipe_book'] = 0x0;
    }, this['hide_clock'] = function() {
        game['show_clock'] = 0x0;
    }, this['sand_tempest'] = function(_0x4cb9ae) {
        user['desert']['tempest'] = _0x4cb9ae;
        if (world['dist_desert'] > -0x12c) {
            if (_0x4cb9ae === 0x0) this['new_alert'](LANG[TEXT['TEMPEST_OFF']]);
            else this['new_alert'](LANG[TEXT['TEMPEST_ON']]);
        }
    }, this['bandage'] = function(_0x856f26) {
        user['bandage'] = _0x856f26;
    }, this['blizzard_status'] = function(_0x3122fa) {
        user['blizzard'] = _0x3122fa;
    }, this['blizzard'] = function(_0x4c610e) {
        user['winter']['tempest'] = _0x4c610e;
        if (world['dist_winter'] > -0x12c) {
            if (_0x4c610e === 0x0) this['new_alert'](LANG[TEXT['BLIZZARD_OFF']]);
            else this['new_alert'](LANG[TEXT['BLIZZARD_ON']]);
        }
    }, this['explorer_quest'] = function(_0x93cd6) {
        if (_0x93cd6 === 0x0) document['getElementById']('exploreForest')['src'] = 'img/forest-leaf-ok.png';
        else {
            if (_0x93cd6 === 0x1) document['getElementById']('exploreWinter')['src'] = 'img/winter-flake-ok.png';
            else {
                if (_0x93cd6 === 0x2) document['getElementById']('exploreLava')['src'] = 'img/lava-volcano-ok.png';
                else {
                    if (_0x93cd6 === 0x3) document['getElementById']('exploreDesert')['src'] = 'img/desert-cactus-ok.png';
                }
            }
        }
    }, this['hide_market'] = function() {
        game['show_market'] = 0x0;
    }, this['hide_quest'] = function() {
        game['show_quest'] = 0x0;
    }, this['clean_inventory'] = function() {
        user['inv']['can_select'] = [], user['inv']['n'] = [], user['inv']['id'] = -0x1, user['inv']['drag']['stop'](), user['craft']['can_craft'] = [], user['craft']['crafting'] = ![], user['craft']['can_build'] = ![], user['craft']['preview'] = -0x1, user['craft']['id'] = -0x1, user['craft']['workbench'] = ![], user['craft']['well'] = ![], user['craft']['fire'] = ![], user['craft']['water'] = ![], user['craft']['timeout'] = new Utils['LinearAnimation'](![], 0x0, 0x1, 0x0, 0x1, 0x1);
    }, this['wrong_key'] = function() {
        clearTimeout(this['timeout_handler']), this['new_alert'](), ui['waiting'] = ![];
    }, this['commands'] = function(_0x38dc1d) {
        for (var _0x401668 = 0x0; _0x401668 < _0x38dc1d['length']; _0x401668++) {
            if (typeof _0x38dc1d[_0x401668] === 'string') _0x38dc1d[_0x401668] = Utils['escape_html'](_0x38dc1d[_0x401668]);
        }
        user['terminal']['write_command'](_0x38dc1d[0x1], _0x38dc1d[0x2], _0x38dc1d[0x3], _0x38dc1d[0x4]);
    }, this['message'] = function(_0x4802d4) {
        this['new_alert'](_0x4802d4);
    }, this['wrong_password'] = function() {
        clearTimeout(this['timeout_handler']), this['new_alert'](LANG[TEXT['WRONG_PASSWORD']]), ui['waiting'] = ![];
    }, this['new_version'] = function() {
        clearTimeout(this['timeout_handler']), this['new_alert'](LANG[TEXT['NEW_VERSION']]), ui['waiting'] = ![];
    }, this['old_version'] = function() {
        clearTimeout(this['timeout_handler']), this['new_alert'](LANG[TEXT['OLD_VERSION']]), ui['waiting'] = ![];
    }, this['get_bag'] = function() {
        user['inv']['update_bag_size'](0x1, 0x0), game['update_inv_buttons']();
    }, this['verified_account'] = function(_0x2adb60) {
        var _0x32bbba = _0x2adb60[0x1],
            _0x39b060 = world['players'][_0x32bbba];
        _0x39b060['skin'] = _0x2adb60[0x2], _0x39b060['accessory'] = _0x2adb60[0x3], _0x39b060['baglook'] = _0x2adb60[0x4], _0x39b060['book'] = _0x2adb60[0x5], _0x39b060['crate'] = _0x2adb60[0x6], _0x39b060['dead'] = _0x2adb60[0x7], _0x39b060['level'] = _0x2adb60[0x8];
        var _0x746271 = world['fast_units'][_0x32bbba * world['max_units']];
        _0x746271 && (_0x746271['skin'] = _0x2adb60[0x2], _0x746271['accessory'] = _0x2adb60[0x3], _0x746271['baglook'] = _0x2adb60[0x4], _0x746271['book'] = _0x2adb60[0x5]);
    }, this['build_stop'] = function(_0x3f9cd7) {
        if (_0x3f9cd7 === INV['BAG']) user['inv']['update_bag_size'](0x1, 0x0), game['update_inv_buttons']();
        else this['gather']([0x0, _0x3f9cd7, 0x1]);
        user['craft']['restart']();
    }, this['recycle_ok'] = function(_0x2e09d5) {
        user['auto_feed']['delay'] = 0x0, user['craft']['do_recycle'](_0x2e09d5);
    }, this['recycle_stop'] = function(_0x265dab) {
        var _0x4e2ca4 = RECIPES[_0x265dab]['r'];
        for (var _0x5a0356 = 0x0; _0x5a0356 < _0x4e2ca4['length']; _0x5a0356++) {
            if (user['inv']['max'] > user['inv']['can_select']['length'] || user['inv']['n'][_0x4e2ca4[_0x5a0356][0x0]] > 0x0) {
                var _0x59dcd7 = Math['floor'](_0x4e2ca4[_0x5a0356][0x1] * 0.8);
                if (!_0x59dcd7) continue;
                this['gather']([0x0, _0x4e2ca4[_0x5a0356][0x0], _0x59dcd7]);
            }
        }
        user['craft']['restart']();
    }, this['build_ok'] = function(_0x3ebd6a) {
        user['auto_feed']['delay'] = 0x0, user['craft']['do_craft'](_0x3ebd6a);
    }, this['new_alert'] = function(_0x4949da) {
        if (!user['alert']['text']) user['alert']['text'] = _0x4949da;
        else {
            if (_0x4949da !== user['alert']['text'] && _0x4949da !== user['alert']['list'][user['alert']['list']['length'] - 0x1]) user['alert']['list']['push'](_0x4949da);
        }
    }, this['no_resources'] = function() {
        this['new_alert'](LANG[TEXT['NO_MORE_RESOURCES']]);
    }, this['survive'] = function() {
        var _0x6ef2df;
        if (user['day'] == 0x0) _0x6ef2df = LANG[TEXT['SURVIVED_1DAY']];
        else _0x6ef2df = LANG[TEXT['SURVIVED']] + (user['day'] + 0x1) + LANG[TEXT['DAYS']];
        this['new_alert'](_0x6ef2df), user['day']++;
    }, this['fail_restore'] = function() {
        clearTimeout(_0x5315ab['timeout_handler']), user['reconnect']['enabled'] = ![], user['alive'] = ![], this['new_alert'](LANG[TEXT['DEAD_SAD']]), game['quit'](ui['run']), this['socket']['close']();
    }, this['blocked'] = function() {
        ___adsvid = 0x1, clearTimeout(this['timeout_handler']), this['new_alert'](LANG[TEXT['SPAM_ME']]), ui['waiting'] = ![];
    }, this['full'] = function() {
        ___adsvid = 0x1, clearTimeout(this['timeout_handler']), this['new_alert'](LANG[TEXT['SPAM_ME2']]), ui['waiting'] = ![];
    }, this['new_player'] = function(_0x112acd) {
        var _0xa94ebe = _0x112acd[0x1],
            _0xf370db = world['players'];
        _0xf370db[_0xa94ebe]['nickname'] = _0x112acd[0x2], _0xf370db[_0xa94ebe]['skin'] = _0x112acd[0x3], _0xf370db[_0xa94ebe]['accessory'] = _0x112acd[0x4], _0xf370db[_0xa94ebe]['baglook'] = _0x112acd[0x5], _0xf370db[_0xa94ebe]['book'] = _0x112acd[0x6], _0xf370db[_0xa94ebe]['crate'] = _0x112acd[0x7], _0xf370db[_0xa94ebe]['dead'] = _0x112acd[0x8], _0xf370db[_0xa94ebe]['level'] = _0x112acd[0x9], _0xf370db[_0xa94ebe]['score'] = 0x0, _0xf370db[_0xa94ebe]['ldb_label'] = null, _0xf370db[_0xa94ebe]['label'] = null, _0xf370db[_0xa94ebe]['label_winter'] = null, _0xf370db[_0xa94ebe]['alive'] = !![];
        if (SHOW_ID === 0x1) _0xf370db[_0xa94ebe]['nickname'] += '|' + _0xa94ebe;
        setTimeout(() => {
            JoinLeave['Join']['unshift'](_0x112acd[0x2] + '\x20|\x20' + world['players'][_0x112acd[0x1]]['level']);
            if (JoinLeave['Join']['length'] > 0x5) JoinLeave['Join']['pop']();
        }, 0x2ee), JoinLeave['toggle11'] = !![], clearTimeout(JoinLeave['toggle1']), JoinLeave['toggle1'] = setTimeout(() => {
            JoinLeave['toggle11'] = ![];
        }, 0x2710);
    }, this['get_focus'] = function() {
        if (Spectator) return;
        this['socket'][SENDWORD](WINDOW1[JSONWORD1]['stringify']([0xb]));
    }, this['empty_res'] = function() {
        this['new_alert'](LANG[TEXT['EMPTY']]);
        if (Settings['AutoEme']['e']) {
            EmeraldIndex++;
            if (EmeraldIndex > 0x2) EmeraldIndex = 0x0;
        };
    }, this['inv_full'] = function() {
        this['new_alert'](LANG[TEXT['INV_FULL']]);
    }, this['choose_kit'] = function(_0x1bd78) {
        this['socket'][SENDWORD](WINDOW3[JSONWORD7]['stringify']([0x15, _0x1bd78])), user['shop']['open'] = ![];
    }, this['kit_ok'] = function(_0x50d4e7) {
        var _0x51268f = KIT[_0x50d4e7 - 0x1]['items'];
        for (var _0x1e0f95 = 0x0; _0x1e0f95 < _0x51268f['length'] && user['inv']['max'] > user['inv']['can_select']['length']; _0x1e0f95++) {
            var _0x32977b = _0x51268f[_0x1e0f95][0x1],
                _0x2fb69c = _0x51268f[_0x1e0f95][0x0];
            if (_0x51268f[_0x1e0f95][0x1] === INV['BAG']) user['inv']['update_bag_size'](0x1, 0x0);
            else this['gather']([0x0, _0x32977b, _0x2fb69c]);
        }
    }, this['gather'] = function(_0x23f07a) {
        var _0x3a6779 = _0x23f07a['length'],
            _0x4ec30f = user['inv'];
        for (var _0x1826de = 0x1; _0x1826de < _0x3a6779; _0x1826de += 0x2) {
            var _0x5a405d = _0x23f07a[_0x1826de],
                _0x5aa952 = _0x23f07a[_0x1826de + 0x1];
            for (var _0x26a7dc = 0x0; _0x26a7dc < _0x4ec30f['can_select']['length']; _0x26a7dc++) {
                if (_0x4ec30f['can_select'][_0x26a7dc]['id'] == _0x5a405d) {
                    _0x4ec30f['n'][_0x5a405d] += _0x5aa952;
                    break;
                }
            }
            _0x26a7dc == _0x4ec30f['can_select']['length'] && (_0x4ec30f['n'][_0x5a405d] = _0x5aa952, _0x4ec30f['can_select']['push'](game['inv_buttons'][_0x5a405d]), game['update_inv_buttons']());
        }
        user['craft']['update']();
    }, this['gauges'] = function(_0x3e2b36, _0x99deb4, _0x3d0bde, _0x1a7131, _0x1f4d19, _0xd927d9, _0x3dc5c0) {
        (Math['floor'](0xb - (Date['now']() - TimerTools['HPTimer']) / 0x3e8) < 0x5 || _0x3e2b36 / 0x64 > user['gauges']['l']) && (TimerTools['HPTimer'] = new Date()['getTime']());
        TimerTools['GaugeTimer'] = new Date()['getTime'](), user['gauges']['l'] = _0x3e2b36 / 0x64, user['gauges']['realhp'] = _0x3e2b36 * 0x2, user['gauges']['h'] = _0x99deb4 / 0x64, user['gauges']['c'] = _0x3d0bde / 0x64, user['gauges']['t'] = _0x1a7131 / 0x64, user['gauges']['o'] = _0x1f4d19 / 0x64, user['gauges']['wa'] = _0xd927d9 / 0x64;
        if (Settings['Ice2']) {
            if (0x64 - Math['floor'](user['gauges']['wa'] * 0x64) >= 0x1e) client['socket']['send'](JSON['stringify']([0x5, 0x88]));
        } else {
            if (Settings['Ice'] && !user['gauges']['c']) client['socket']['send'](JSON['stringify']([0x5, 0x88]));
        }
        user['bandage'] = _0x3dc5c0;
    }, this['succeed_quest'] = function(_0x21b993) {
        game['quests']['modify'](_0x21b993, 0x2);
    }, this['fail_quest'] = function(_0xe9ce02) {
        game['quests']['modify'](_0xe9ce02, 0x0);
    }, this['claimed'] = function(_0x3192ab) {
        game['quests']['modify'](_0x3192ab, 0x3);
    }, this['gauges_life'] = function(_0x4f5ab9, _0x296dde) {
        user['gauges']['l'] = _0x4f5ab9 / 0x64, user['bandage'] = _0x296dde;
    }, this['gauges_water'] = function(_0x55e6ef) {
        user['gauges']['t'] = _0x55e6ef / 0x64;
    }, this['gauges_food'] = function(_0x19c3cc) {
        user['gauges']['h'] = _0x19c3cc / 0x64;
    }, this['gauges_warm'] = function(_0xe44901) {
        user['gauges']['wa'] = _0xe44901 / 0x64;
    }, this['gauges_cold'] = function(_0x219c50) {
        user['gauges']['c'] = _0x219c50 / 0x64;
    }, this['get_time'] = function(_0x3ddcc6) {
        world['time'] = _0x3ddcc6, world['transition'] = !![], audio['transition'] = 0x1;
    }, this['change_ground'] = function() {
        document['getElementById']('game_body')['style']['backgroundColor'] = SPRITE['GROUND'][world['time']];
    }, this['kill_player'] = function(_0x2d125c) {
        if (world['mode'] == WORLD['MODE_HUNGER_GAMES'] && world['players'][_0x2d125c]['nickname'] !== 'spectator') this['new_alert'](world['players'][_0x2d125c]['nickname'] + LANG[TEXT['DEAD']]);
        world['players'][_0x2d125c]['alive'] = ![], JoinLeave['Leave']['unshift'](world['players'][_0x2d125c]['nickname'] + '\x20|\x20' + world['players'][_0x2d125c]['level']);
        if (JoinLeave['Leave']['length'] > 0x5) JoinLeave['Leave']['pop']();
        JoinLeave['toggle22'] = !![], clearTimeout(JoinLeave['toggle2']), JoinLeave['toggle2'] = setTimeout(() => {
            JoinLeave['toggle22'] = ![];
        }, 0x2710);
    }, this['set_cam'] = function(_0x13cca3) {
        if (Spectator) return;
        var _0x2f04a3 = new Uint16Array(_0x13cca3);
        player['cam']['change'](_0x2f04a3[0x1], _0x2f04a3[0x2]);
    }, this['recover_focus'] = function(_0x1e8862) {
        var _0x5b8472 = new Uint16Array(_0x1e8862);
        user['cam']['change'](_0x5b8472[0x1], _0x5b8472[0x2]);
    }, this['hitten_other'] = function(_0x374c6d, _0x4f71c6) {
        var _0x18dce4 = new Uint16Array(_0x4f71c6),
            _0x5b62ab = (_0x374c6d['length'] - 0x2) / 0x4;
        for (var _0x30e38b = 0x0; _0x30e38b < _0x5b62ab; _0x30e38b++) {
            var _0x5aa4c6 = _0x18dce4[0x1 + 0x2 * _0x30e38b],
                _0x4ab6ff = _0x374c6d[0x4 + 0x4 * _0x30e38b],
                _0x385228 = (_0x374c6d[0x5 + 0x4 * _0x30e38b] >> 0x1) / 0x7f * Math['PI'] * 0x2,
                _0x381a2e = world['fast_units'][_0x4ab6ff * world['max_units'] + _0x5aa4c6];
            if (_0x381a2e && _0x381a2e['hit']) {
                if (audio['loaded'] && audio['run']) audio['hit'](_0x374c6d[0x5 + 0x4 * _0x30e38b] & 0x1, SOUND_BUILD[_0x381a2e['type']], _0x381a2e['x'], _0x381a2e['y']);
                _0x381a2e['hit']['angle'] = _0x385228, _0x381a2e['hit']['update'] = _0x385228;
            }
        }
    }, this['hitten'] = function(_0x2e247f) {
        var _0x14ee3c = new Uint16Array(_0x2e247f),
            _0x4bfd92 = (_0x14ee3c['length'] - 0x1) / 0x4;
        for (var _0x4906f2 = 0x0; _0x4906f2 < _0x4bfd92; _0x4906f2++) {
            var _0x163652 = _0x4906f2 * 0x4,
                _0x175b3d = _0x14ee3c[0x1 + _0x163652],
                _0x15e593 = _0x14ee3c[0x2 + _0x163652],
                _0x15b25e = (_0x14ee3c[0x3 + _0x163652] >> 0x1) / 0x7f * Math['PI'] * 0x2,
                _0xf4fbda = _0x14ee3c[0x4 + _0x163652],
                _0x43bfc3 = MAP['tiles'][_0x15e593][_0x175b3d],
                _0x535ecd;
            switch (_0xf4fbda) {
                case 0x0:
                    _0x535ecd = _0x43bfc3['p'][0x0][0x0], _0x535ecd['angle'] = _0x15b25e, _0x535ecd['update'] = !![];
                    break;
                case 0x1:
                    _0x535ecd = _0x43bfc3['s'][0x0][0x0], _0x535ecd['angle'] = _0x15b25e, _0x535ecd['update'] = !![];
                    break;
                case 0x2:
                    _0x535ecd = _0x43bfc3['s'][0x1][0x0], _0x535ecd['angle'] = _0x15b25e, _0x535ecd['update'] = !![];
                    break;
                case 0x3:
                    _0x535ecd = _0x43bfc3['s'][0x2][0x0], _0x535ecd['angle'] = _0x15b25e, _0x535ecd['update'] = !![];
                    break;
                case 0x4:
                    _0x535ecd = _0x43bfc3['t'][0x0][0x0], _0x535ecd['angle'] = _0x15b25e, _0x535ecd['update'] = !![];
                    break;
                case 0x5:
                    _0x535ecd = _0x43bfc3['t'][0x1][0x0], _0x535ecd['angle'] = _0x15b25e, _0x535ecd['update'] = !![];
                    break;
                case 0x6:
                    _0x535ecd = _0x43bfc3['t'][0x2][0x0], _0x535ecd['angle'] = _0x15b25e, _0x535ecd['update'] = !![];
                    break;
                case 0x7:
                    _0x535ecd = _0x43bfc3['t'][0x3][0x0], _0x535ecd['angle'] = _0x15b25e, _0x535ecd['update'] = !![];
                    break;
                case 0x8:
                    _0x535ecd = _0x43bfc3['t'][0x4][0x0], _0x535ecd['angle'] = _0x15b25e, _0x535ecd['update'] = !![];
                    break;
                case 0x9:
                    _0x535ecd = _0x43bfc3['t'][0x5][0x0], _0x535ecd['angle'] = _0x15b25e, _0x535ecd['update'] = !![];
                    break;
                case 0xa:
                    _0x535ecd = _0x43bfc3['g'][0x0][0x0], _0x535ecd['angle'] = _0x15b25e, _0x535ecd['update'] = !![];
                    break;
                case 0xb:
                    _0x535ecd = _0x43bfc3['g'][0x1][0x0], _0x535ecd['angle'] = _0x15b25e, _0x535ecd['update'] = !![];
                    break;
                case 0xc:
                    _0x535ecd = _0x43bfc3['g'][0x2][0x0], _0x535ecd['angle'] = _0x15b25e, _0x535ecd['update'] = !![];
                    break;
                case 0xd:
                    _0x535ecd = _0x43bfc3['d'][0x0][0x0], _0x535ecd['angle'] = _0x15b25e, _0x535ecd['update'] = !![];
                    break;
                case 0xe:
                    _0x535ecd = _0x43bfc3['d'][0x1][0x0], _0x535ecd['angle'] = _0x15b25e, _0x535ecd['update'] = !![];
                    break;
                case 0xf:
                    _0x535ecd = _0x43bfc3['d'][0x2][0x0], _0x535ecd['angle'] = _0x15b25e, _0x535ecd['update'] = !![];
                    break;
                case 0x10:
                    _0x535ecd = _0x43bfc3['b'][0x0][0x0], _0x535ecd['angle'] = _0x15b25e, _0x535ecd['update'] = !![];
                    break;
                case 0x11:
                    _0x535ecd = _0x43bfc3['b'][0x1][0x0], _0x535ecd['angle'] = _0x15b25e, _0x535ecd['update'] = !![];
                    break;
                case 0x12:
                    _0x535ecd = _0x43bfc3['b'][0x2][0x0], _0x535ecd['angle'] = _0x15b25e, _0x535ecd['update'] = !![];
                    break;
                case 0x13:
                    _0x535ecd = _0x43bfc3['b'][0x3][0x0], _0x535ecd['angle'] = _0x15b25e, _0x535ecd['update'] = !![];
                    break;
                case 0x14:
                    _0x535ecd = _0x43bfc3['f'][0x0][0x0], _0x535ecd['angle'] = _0x15b25e, _0x535ecd['update'] = !![];
                    break;
                case 0x15:
                    _0x535ecd = _0x43bfc3['f'][0x1][0x0], _0x535ecd['angle'] = _0x15b25e, _0x535ecd['update'] = !![];
                    break;
                case 0x16:
                    _0x535ecd = _0x43bfc3['f'][0x2][0x0], _0x535ecd['angle'] = _0x15b25e, _0x535ecd['update'] = !![];
                    break;
                case 0x17:
                    _0x535ecd = _0x43bfc3['sw'][0x0][0x0], _0x535ecd['angle'] = _0x15b25e, _0x535ecd['update'] = !![];
                    break;
                case 0x18:
                    _0x535ecd = _0x43bfc3['sw'][0x1][0x0], _0x535ecd['angle'] = _0x15b25e, _0x535ecd['update'] = !![];
                    break;
                case 0x19:
                    _0x535ecd = _0x43bfc3['sw'][0x2][0x0], _0x535ecd['angle'] = _0x15b25e, _0x535ecd['update'] = !![];
                    break;
                case 0x1a:
                    _0x535ecd = _0x43bfc3['gw'][0x0][0x0], _0x535ecd['angle'] = _0x15b25e, _0x535ecd['update'] = !![];
                    break;
                case 0x1b:
                    _0x535ecd = _0x43bfc3['gw'][0x1][0x0], _0x535ecd['angle'] = _0x15b25e, _0x535ecd['update'] = !![];
                    break;
                case 0x1c:
                    _0x535ecd = _0x43bfc3['gw'][0x2][0x0], _0x535ecd['angle'] = _0x15b25e, _0x535ecd['update'] = !![];
                    break;
                case 0x1d:
                    _0x535ecd = _0x43bfc3['dw'][0x0][0x0], _0x535ecd['angle'] = _0x15b25e, _0x535ecd['update'] = !![];
                    break;
                case 0x1e:
                    _0x535ecd = _0x43bfc3['dw'][0x1][0x0], _0x535ecd['angle'] = _0x15b25e, _0x535ecd['update'] = !![];
                    break;
                case 0x1f:
                    _0x535ecd = _0x43bfc3['dw'][0x2][0x0], _0x535ecd['angle'] = _0x15b25e, _0x535ecd['update'] = !![];
                    break;
                case 0x20:
                    _0x535ecd = _0x43bfc3['a'][0x0][0x0], _0x535ecd['angle'] = _0x15b25e, _0x535ecd['update'] = !![];
                    break;
                case 0x21:
                    _0x535ecd = _0x43bfc3['a'][0x1][0x0], _0x535ecd['angle'] = _0x15b25e, _0x535ecd['update'] = !![];
                    break;
                case 0x22:
                    _0x535ecd = _0x43bfc3['a'][0x2][0x0], _0x535ecd['angle'] = _0x15b25e, _0x535ecd['update'] = !![];
                    break;
                case 0x23:
                    _0x535ecd = _0x43bfc3['cs'][0x0][0x0], _0x535ecd['angle'] = _0x15b25e, _0x535ecd['update'] = !![];
                    break;
                case 0x24:
                    _0x535ecd = _0x43bfc3['cs'][0x1][0x0], _0x535ecd['angle'] = _0x15b25e, _0x535ecd['update'] = !![];
                    break;
                case 0x25:
                    _0x535ecd = _0x43bfc3['cs'][0x2][0x0], _0x535ecd['angle'] = _0x15b25e, _0x535ecd['update'] = !![];
                    break;
                case 0x26:
                    _0x535ecd = _0x43bfc3['cs'][0x3][0x0], _0x535ecd['angle'] = _0x15b25e, _0x535ecd['update'] = !![];
                    break;
                case 0x28:
                    _0x535ecd = _0x43bfc3['plm'][0x0][0x0], _0x535ecd['angle'] = _0x15b25e, _0x535ecd['update'] = !![];
                    break;
                case 0x29:
                    _0x535ecd = _0x43bfc3['plm'][0x1][0x0], _0x535ecd['angle'] = _0x15b25e, _0x535ecd['update'] = !![];
                    break;
                case 0x2a:
                    _0x535ecd = _0x43bfc3['plm'][0x2][0x0], _0x535ecd['angle'] = _0x15b25e, _0x535ecd['update'] = !![];
                    break;
                case 0x32:
                    _0x535ecd = _0x43bfc3['re'][0x0][0x0], _0x535ecd['angle'] = _0x15b25e, _0x535ecd['update'] = !![];
                    break;
                case 0x33:
                    _0x535ecd = _0x43bfc3['re'][0x1][0x0], _0x535ecd['angle'] = _0x15b25e, _0x535ecd['update'] = !![];
                    break;
                case 0x34:
                    _0x535ecd = _0x43bfc3['re'][0x2][0x0], _0x535ecd['angle'] = _0x15b25e, _0x535ecd['update'] = !![];
                    break;
                case 0x37:
                    _0x535ecd = _0x43bfc3['c'][0x0][0x0], _0x535ecd['angle'] = _0x15b25e, _0x535ecd['update'] = !![];
                    break;
                case 0x38:
                    _0x535ecd = _0x43bfc3['m'][0x0][0x0], _0x535ecd['angle'] = _0x15b25e, _0x535ecd['update'] = !![];
                    break;
                case 0x39:
                    _0x535ecd = _0x43bfc3['m'][0x1][0x0], _0x535ecd['angle'] = _0x15b25e, _0x535ecd['update'] = !![];
                    break;
                case 0x3a:
                    _0x535ecd = _0x43bfc3['m'][0x2][0x0], _0x535ecd['angle'] = _0x15b25e, _0x535ecd['update'] = !![];
                    break;
            }
            if (audio['loaded'] && audio['run'] && _0x535ecd) audio['hit'](_0x14ee3c[0x3 + _0x163652] & 0x1, SOUND_NATURE[_0xf4fbda], _0x535ecd['x'], _0x535ecd['y']);
        }
    }, this['resurrection'] = function() {
        this['socket'][SENDWORD](WINDOW2[JSONWORD2]['stringify']([0x11, user['resurrection']['pid'], user['resurrection']['iid']]));
    }, this['give_wheat'] = function(_0x255e55, _0x22aa25) {
        this['socket'][SENDWORD](WINDOW2[JSONWORD4]['stringify']([0x16, _0x22aa25, _0x255e55['pid'], _0x255e55['iid']]));
    }, this['give_bread_oven'] = function(_0x47da77, _0x1749a1, _0x90a5e9) {
        if (_0x1749a1) this['socket'][SENDWORD](WINDOW2[JSONWORD4]['stringify']([0x19, _0x1749a1, _0x47da77['pid'], _0x47da77['iid']]));
        else this['socket'][SENDWORD](WINDOW2[JSONWORD3]['stringify']([0x18, _0x90a5e9, _0x47da77['pid'], _0x47da77['iid']]));
    }, this['take_bread'] = function(_0x403a94) {
        this['socket'][SENDWORD](WINDOW5[JSONWORD5]['stringify']([0x1a, _0x403a94['pid'], _0x403a94['iid']]));
    }, this['claim_quest_reward'] = function(_0x3f6f5f) {
        this['socket'][SENDWORD](WINDOW5[JSONWORD8]['stringify']([0x1b, _0x3f6f5f]));
    }, this['give_well'] = function(_0x1deeb4) {
        this['socket'][SENDWORD](WINDOW4[JSONWORD2]['stringify']([0x1e, _0x1deeb4['pid'], _0x1deeb4['iid']]));
    }, this['give_wood_extractor'] = function(_0x31947e, _0x5aa3fa) {
        this['socket'][SENDWORD](WINDOW3[JSONWORD5]['stringify']([0x26, _0x5aa3fa, _0x31947e['pid'], _0x31947e['iid'], _0x31947e['type']]));
    }, this['give_wood'] = function(_0x81e472, _0x436ac4) {
        this['socket'][SENDWORD](WINDOW3[JSONWORD5]['stringify']([0xc, _0x436ac4, _0x81e472['pid'], _0x81e472['iid']]));
    }, this['give_item'] = function(_0x5c61b8, _0x571a80, _0x20f5dd) {
        this['socket'][SENDWORD](WINDOW4[JSONWORD4]['stringify']([0x8, _0x571a80, _0x20f5dd, _0x5c61b8['pid'], _0x5c61b8['iid']]));
    }, this['take_extractor'] = function(_0x377a8b) {
        this['socket'][SENDWORD](WINDOW5[JSONWORD5]['stringify']([0x25, _0x377a8b['pid'], _0x377a8b['iid'], _0x377a8b['type']]));
    }, this['take_flour'] = function(_0x3c2533) {
        this['socket'][SENDWORD](WINDOW5[JSONWORD5]['stringify']([0x17, _0x3c2533['pid'], _0x3c2533['iid']]));
    }, this['take_chest'] = function(_0x27ec1c) {
        this['socket'][SENDWORD](WINDOW5[JSONWORD5]['stringify']([0x9, _0x27ec1c['pid'], _0x27ec1c['iid']]));
    }, this['unlock_chest'] = function(_0x214351) {
        this['socket'][SENDWORD](WINDOW6[JSONWORD6]['stringify']([0xf, _0x214351['pid'], _0x214351['iid']]));
    }, this['lock_chest'] = function(_0x117ca6) {
        this['socket'][SENDWORD](WINDOW7[JSONWORD7]['stringify']([0x10, _0x117ca6['iid']]));
    }, this['kick_team'] = function(_0x412f94) {
        _0x5315ab['socket'][SENDWORD](WINDOW8[JSONWORD8]['stringify']([0x14, user['totem']['id'], user['team'][_0x412f94]]));
    }, this['join_team'] = function() {
        _0x5315ab['socket'][SENDWORD](WINDOW9[JSONWORD9]['stringify']([0x12, user['totem']['pid'], user['totem']['id']]));
    }, this['leave_team'] = function() {
        _0x5315ab['socket'][SENDWORD](WINDOW10[JSONWORD10]['stringify']([0x13]));
    }, this['lock_team'] = function() {
        _0x5315ab['socket'][SENDWORD](WINDOW10[JSONWORD8]['stringify']([0x23, user['totem']['id']])), document['getElementById']('lock_team')['innerHTML'] == 'LOCK' ? (user['totem']['lock'] = 0x1, document['getElementById']('lock_team')['innerHTML'] = 'UNLOCK') : (user['totem']['lock'] = 0x0, document['getElementById']('lock_team')['innerHTML'] = 'LOCK');
    }, this['units'] = function(_0x431be6, _0x4a9a20, _0x5c1d68) {
        var _0x31d3ec = new Uint16Array(_0x431be6);
        if (_0x5c1d68) world['delete_all_units']();
        var _0x1b05fc = (_0x4a9a20['length'] - 0x2) / 0x12;
        for (var _0xbef7ac = 0x0; _0xbef7ac < _0x1b05fc; _0xbef7ac++) {
            var _0x4bd3d2 = 0x2 + _0xbef7ac * 0x12,
                _0x15dc77 = 0x1 + _0xbef7ac * 0x9,
                _0x4247d8 = _0x4a9a20[_0x4bd3d2],
                _0xd06ce1 = _0x31d3ec[_0x15dc77 + 0x1],
                _0x3caebf = _0x31d3ec[_0x15dc77 + 0x5],
                _0x5d7a0f = _0x4247d8 * world['max_units'] + _0x3caebf;
            if (_0xd06ce1 & STATE['DELETE']) {
                world['delete_units'](_0x5d7a0f);
                continue;
            }
            var _0x14bb94 = _0x31d3ec[_0x15dc77 + 0x2],
                _0x423eb2 = _0x31d3ec[_0x15dc77 + 0x3],
                _0xa1018a = _0x31d3ec[_0x15dc77 + 0x4],
                _0x24ae3b = _0x31d3ec[_0x15dc77 + 0x6],
                _0x7af66b = _0x31d3ec[_0x15dc77 + 0x7],
                _0x2ec08b = _0x31d3ec[_0x15dc77 + 0x8],
                _0x2098f0 = _0x4a9a20[_0x4bd3d2 + 0x1] / 0xff * Math['PI'] * 0x2;
            if (!world['fast_units'][_0x5d7a0f]) {
                var _0xe79d6a = new Item(_0x14bb94, _0x4247d8, _0x3caebf, _0x423eb2, _0xa1018a, _0x2098f0, _0xd06ce1, _0x24ae3b, _0x7af66b, _0x2ec08b);
                world['fast_units'][_0x5d7a0f] = _0xe79d6a, world['units'][_0x14bb94]['push'](_0xe79d6a);
                continue;
            }
            var _0x24865f = world['fast_units'][_0x5d7a0f];
            _0x24865f['r']['x'] = _0x423eb2, _0x24865f['r']['y'] = _0xa1018a;
            _0x4247d8 != 0x0 && Utils['dist'](_0x24865f, _0x24865f['r']) > CLIENT['LAG_DISTANCE'] && (_0x24865f['x'] = _0x423eb2, _0x24865f['y'] = _0xa1018a);
            if (_0x24865f['id'] !== user['id'] || _0x4247d8 === 0x0) _0x24865f['nangle'] = _0x2098f0;
            _0x24865f['action'] |= _0xd06ce1, _0x24865f['info'] = _0x24ae3b, _0x24865f['speed'] = _0x7af66b, _0x24865f['extra'] = _0x2ec08b;
            if (_0x24865f['update']) _0x24865f['update'](_0xd06ce1);
            let _0x5dee90 = world['fast_units'][user['uid']];
            if (_0xd06ce1 === 0x2) _0x24865f['hited']++, _0x24865f['dmged'] += getdmg(_0x5dee90['right']);
        }
    }, this['leaderboard'] = function(_0x446ac1) {
        this['timeout_server'] = old_timestamp;
        var _0x410042 = new Uint16Array(_0x446ac1);
        user['ldb']['init'](_0x410042);
    }, this['new_recipes'] = function(_0x12f586) {
        if (OLD_RECIPES !== undefined) RECIPES = OLD_RECIPES;
        if (_0x12f586['length'] > 0x0) {
            OLD_RECIPES = JSON['parse'](JSON['stringify'](RECIPES));
            for (var _0x386c82 = 0x0; _0x386c82 < _0x12f586['length']; _0x386c82++) {
                var _0x2ebe1c = _0x12f586[_0x386c82],
                    _0x307ace = RECIPES[_0x2ebe1c['item']];
                if (_0x307ace === undefined) continue;
                _0x307ace['r'] = _0x2ebe1c['recipe'], _0x307ace['w'] = _0x2ebe1c['workbench'], _0x307ace['f'] = _0x2ebe1c['fire'], _0x307ace['o'] = _0x2ebe1c['water'], _0x307ace['e'] = _0x2ebe1c['well'], _0x307ace['time'] = 0x1 / _0x2ebe1c['time'];
            }
        }
    }, this['welcome'] = function(_0x2dcf9c) {
        if (!_0x2dcf9c || _0x2dcf9c['length'] === 0x0) user['welcome']['message'] = undefined;
        else user['welcome']['message'] = create_welcome_text(_0x2dcf9c);
    }, this['chat'] = function(_0xa9d8b6) {
        var _0x22a11e = world['fast_units'][_0xa9d8b6[0x1] * world['max_units']];
        if (_0x22a11e) {
            if (world['mode'] === WORLD['MODE_ZOMBIES'] && _0x22a11e['skin'] === WORLD['ZOMBIE_SKIN']) {
                if (!user['zombie']) _0x22a11e['text']['push'](ZOMBIE_GRUMBLES[Math['floor'](Math['random']() * ZOMBIE_GRUMBLES['length'])]);
                else {
                    if (Math['random']() > 0.5) _0x22a11e['text']['push'](_0xa9d8b6[0x2] + '\x20...' + ZOMBIE_GRUMBLE);
                    else _0x22a11e['text']['push'](ZOMBIE_GRUMBLE + '...\x20' + _0xa9d8b6[0x2]);
                }
            } else _0x22a11e['text']['push'](_0xa9d8b6[0x2]);
        }
    }, this['select_craft'] = function(_0x27dd94) {
        if (user['inv']['max'] === user['inv']['can_select']['length'] && RECIPES[_0x27dd94]['id2'] !== INV['BAG'] && user['inv']['find_item'](RECIPES[_0x27dd94]['id2']) == -0x1 && !user['inv']['free_place'](RECIPES[_0x27dd94]['r'])) return this['inv_full'](), 0x0;
        return this['socket']['send'](JSON['stringify']([0x5, 0x1c])), this['socket'][SENDWORD](WINDOW1[JSONWORD1]['stringify']([0x7, _0x27dd94])), lastcrafted = _0x27dd94, 0x1;
    }, this['workbench'] = function(_0x811d54) {
        user['craft']['set_workbench'](_0x811d54);
    }, this['well'] = function(_0x517b73) {
        user['craft']['well'] = _0x517b73, user['craft']['update']();
    }, this['fire'] = function(_0x34bf8d) {
        user['craft']['fire'] = _0x34bf8d, user['craft']['update']();
    }, this['water'] = function(_0x907032) {
        user['craft']['water'] = _0x907032, user['craft']['update']();
    }, this['dont_harvest'] = function(_0x2c2da2) {
        this['new_alert'](LANG[TEXT['WRONG_TOOL']]);
    }, this['cancel_craft'] = function() {
        user['craft']['restart']();
    }, this['minimap'] = function(_0x2076c8) {
        game['minimap']['players'] = [];
        var _0x1bd45c = world['fast_units'][user['uid']],
            _0x5c1825 = 0x0;
        for (var _0x53c1f9 = 0x1; _0x53c1f9 < _0x2076c8['length']; _0x53c1f9 += 0x2) {
            var _0x54ae4b = {
                'x': Math['floor'](_0x2076c8[_0x53c1f9] * world['w'] / 0xfa),
                'y': Math['floor'](_0x2076c8[_0x53c1f9 + 0x1] * world['h'] / 0xfa)
            };
            if (_0x1bd45c && !_0x5c1825 && !user['spectator'] && Utils['dist'](_0x54ae4b, _0x1bd45c) < 0xfa) {
                _0x5c1825 += 0x1;
                continue;
            }
            game['minimap']['players']['push'](_0x54ae4b);
        }
    }, this['reborn'] = function() {
        user['resurrection']['open'] = ![], user['ghost']['enabled'] = ![], user['ghost']['delay'] = -0x1, user['ghost']['label'] = null, user['ghost']['sec'] = null, user['ghost']['now'] = -0x1, user['inv']['n'][INV['CROWN_BLUE']] && (CrownCooldown = +new Date(), user['helmet']['wait'] = 0x1, setTimeout(() => {
            let _0x2f8de7 = world['fast_units'][user['uid']];
            _0x2f8de7 && _0x2f8de7['clothe'] !== INV['CROWN_BLUE'] && client['socket']['send'](JSON['stringify']([0x5, 0x4f]));
        }, 0x190));
    }, this['ghost'] = function(_0x231f1b) {
        WORLD['GHOST_DELAY'] = _0x231f1b, user['ghost']['enabled'] = !![], user['ghost']['delay'] = new Date()['getTime'](), user['ghost']['label'] = null, user['ghost']['now'] = -0x1;
        var _0x1a6af5 = [INV['SUPER_HAMMER'], INV['DRAGON_HEART'], INV['SWORD_WOOD'], INV['SWORD'], INV['SWORD_GOLD'], INV['SWORD_DIAMOND'], INV['SWORD_AMETHYST'], INV['REIDITE_SWORD'], INV['DRAGON_SWORD'], INV['LAVA_SWORD'], INV['PIRATE_SWORD'], INV['SPEAR'], INV['WOOD_SPEAR'], INV['GOLD_SPEAR'], INV['DIAMOND_SPEAR'], INV['AMETHYST_SPEAR'], INV['REIDITE_SPEAR'], INV['DRAGON_SPEAR'], INV['LAVA_SPEAR'], INV['CRAB_SPEAR'], INV['WOOD_BOW'], INV['STONE_BOW'], INV['GOLD_BOW'], INV['DIAMOND_BOW'], INV['AMETHYST_BOW'], INV['REIDITE_BOW'], INV['DRAGON_BOW'], INV['WOOD_SHIELD'], INV['STONE_SHIELD'], INV['GOLD_SHIELD'], INV['DIAMOND_SHIELD'], INV['AMETHYST_SHIELD'], INV['REIDITE_SHIELD'], INV['WAND1'], INV['WAND2'], INV['PICK_WOOD'], INV['PICK'], INV['PICK_GOLD'], INV['PICK_DIAMOND'], INV['PICK_AMETHYST'], INV['PICK_REIDITE'], INV['SPANNER'], INV['PITCHFORK'], INV['PITCHFORK2']];
        for (var _0x4212a2 = 0x0; _0x4212a2 < _0x1a6af5['length']; _0x4212a2++) {
            var _0x1f4b32 = user['inv']['find_item'](_0x1a6af5[_0x4212a2]);
            if (_0x1f4b32 != -0x1) user['inv']['delete_item'](_0x1a6af5['length'][_0x4212a2], _0x1f4b32);
        }
        user['craft']['restart']();
    }, this['decrease_item2'] = function(_0x490a50, _0x5c2a4f, _0x5e6851) {
        this['decrease_item'](_0x490a50, _0x5c2a4f * 0x100 + _0x5e6851);
    }, this['decrease_item'] = function(_0x1682b5, _0x388c00) {
        user['craft']['preview'] = Settings['Equiq'] ? user['inv']['n'][user['craft']['preview']] - 0x1 ? user['craft']['preview'] : -0x1 : -0x1, user['inv']['decrease'](_0x1682b5, _0x388c00, user['inv']['find_item'](_0x1682b5)), user['craft']['update']();
    }, this['accept_build'] = function(_0x19d63d) {
        user['craft']['preview'] = Settings['Equiq'] ? user['inv']['n'][user['craft']['preview']] - 0x1 ? user['craft']['preview'] : -0x1 : -0x1, user['build']['wait'] = !![];
        var _0x2d7826 = user['inv']['find_item'](_0x19d63d);
        user['inv']['decrease'](_0x19d63d, 0x1, _0x2d7826);
        if (_0x2d7826 >= 0x0 && !user['inv']['n'][_0x19d63d]) user['craft']['update']();
        if (_0x19d63d == INV['TOTEM']) user['team'] = [user['id']];
    }, this['cancel_crafting'] = function() {
        this['socket'][SENDWORD](WINDOW2[JSONWORD2]['stringify']([0x1f]));
    }, this['buy_market'] = function(_0xf0d457) {
        this['socket'][SENDWORD](WINDOW3[JSONWORD3]['stringify']([0x20, _0xf0d457['val'], _0xf0d457['id']]));
    }, this['update_sign'] = function(_0x4af48a, _0x239986) {
        this['socket'][SENDWORD](WINDOW3[JSONWORD5]['stringify']([0x21, _0x4af48a, _0x239986]));
    }, this['send_build'] = function() {
        var _0x113eb2 = world['fast_units'][user['uid']];
        if (_0x113eb2) {
            var _0x1923db = Math['PI'] * 0x2;
            this['socket'][SENDWORD](WINDOW3[JSONWORD3]['stringify']([0xa, user['craft']['preview'], Math['floor']((_0x113eb2['angle'] + _0x1923db) % _0x1923db * 0xff / _0x1923db), user['craft']['mode']])), Limit['E'] = !![];
            if (user['craft']['preview'] === 0x6d) {
                toPlace = 0x6d;
                return;
            };
            if (user['craft']['preview'] === 0x7e) {
                toPlace = 0x7e;
                return;
            };
            if (user['craft']['preview'] === 0xb6) {
                toPlace = 0xb6;
                return;
            };
            if (user['craft']['preview'] === 0xc6) {
                toPlace = 0xc6;
                return;
            };
            if (user['craft']['preview'] === 0xc8) {
                toPlace = 0xc8;
                return;
            };
        }
    }, this['select_inv'] = function(_0xc67b0, _0x3681ce) {
        switch (_0xc67b0) {
            case INV['BANDAGE']:
            case INV['PLANT']:
            case INV['MEAT']:
            case INV['COOKED_MEAT']:
            case INV['SANDWICH']:
            case INV['BOTTLE_FULL']:
            case INV['COOKIE']:
            case INV['CAKE']:
            case INV['ICE']:
            case INV['BREAD']:
            case INV['PUMPKIN']:
            case INV['TOMATO']:
            case INV['CACTUS']:
            case INV['CARROT']:
            case INV['WATERMELON']:
            case INV['ALOE_VERA']:
            case INV['GARLIC']:
            case INV['FOODFISH']:
            case INV['FOODFISH_COOKED']:
            case INV['CRAB_STICK']:
            case INV['CRAB_LOOT']:
            case INV['CANDY']:
            case INV['SUGAR_CAN']:
                user['craft']['preview'] = -0x1, this['socket'][SENDWORD](WINDOW4[JSONWORD4]['stringify']([0x5, _0xc67b0]));
                break;
            case INV['WORKBENCH']:
            case INV['SPIKE']:
            case INV['SEED']:
            case INV['WHEAT_SEED']:
            case INV['PUMPKIN_SEED']:
            case INV['TOMATO_SEED']:
            case INV['CARROT_SEED']:
            case INV['GARLIC_SEED']:
            case INV['THORNBUSH_SEED']:
            case INV['WATERMELON_SEED']:
            case INV['ALOE_VERA_SEED']:
            case INV['FIRE']:
            case INV['WALL']:
            case INV['STONE_WALL']:
            case INV['GOLD_WALL']:
            case INV['DIAMOND_WALL']:
            case INV['BIG_FIRE']:
            case INV['CHEST']:
            case INV['RESURRECTION']:
            case INV['EMERALD_MACHINE']:
            case INV['WOOD_DOOR']:
            case INV['STONE_DOOR']:
            case INV['GOLD_DOOR']:
            case INV['DIAMOND_DOOR']:
            case INV['AMETHYST_DOOR']:
            case INV['REIDITE_DOOR']:
            case INV['WOOD_DOOR_SPIKE']:
            case INV['STONE_DOOR_SPIKE']:
            case INV['GOLD_DOOR_SPIKE']:
            case INV['DIAMOND_DOOR_SPIKE']:
            case INV['AMETHYST_DOOR_SPIKE']:
            case INV['REIDITE_DOOR_SPIKE']:
            case INV['STONE_SPIKE']:
            case INV['GOLD_SPIKE']:
            case INV['DIAMOND_SPIKE']:
            case INV['FURNACE']:
            case INV['AMETHYST_WALL']:
            case INV['AMETHYST_SPIKE']:
            case INV['REIDITE_WALL']:
            case INV['REIDITE_SPIKE']:
            case INV['BRIDGE']:
            case INV['ROOF']:
            case INV['PLOT']:
            case INV['WINDMILL']:
            case INV['EXTRACTOR_MACHINE_STONE']:
            case INV['EXTRACTOR_MACHINE_GOLD']:
            case INV['EXTRACTOR_MACHINE_DIAMOND']:
            case INV['EXTRACTOR_MACHINE_AMETHYST']:
            case INV['EXTRACTOR_MACHINE_REIDITE']:
            case INV['BED']:
            case INV['GARLAND']:
            case INV['WELL']:
            case INV['SIGN']:
            case INV['BREAD_OVEN']:
            case INV['TOTEM']:
            case INV['WOOD_TOWER']:
                if (!user['zombie']) {
                    if (user['craft']['preview'] === _0xc67b0) user['craft']['preview'] = -0x1;
                    else user['craft']['preview'] = _0xc67b0;
                }
                break;
            case INV['SWORD']:
            case INV['SWORD_WOOD']:
            case INV['SWORD_GOLD']:
            case INV['SWORD_DIAMOND']:
            case INV['SWORD_AMETHYST']:
            case INV['REIDITE_SWORD']:
            case INV['PIRATE_SWORD']:
            case INV['DRAGON_SWORD']:
            case INV['LAVA_SWORD']:
            case INV['WOOD_BOW']:
            case INV['STONE_BOW']:
            case INV['GOLD_BOW']:
            case INV['DIAMOND_BOW']:
            case INV['AMETHYST_BOW']:
            case INV['REIDITE_BOW']:
            case INV['DRAGON_BOW']:
            case INV['WAND1']:
            case INV['WAND2']:
            case INV['WOOD_SPEAR']:
            case INV['SPEAR']:
            case INV['GOLD_SPEAR']:
            case INV['DIAMOND_SPEAR']:
            case INV['AMETHYST_SPEAR']:
            case INV['AMETHYST_REIDITE']:
            case INV['DRAGON_SPEAR']:
            case INV['LAVA_SPEAR']:
            case INV['REIDITE_SPEAR']:
            case INV['CRAB_SPEAR']:
                if (!user['zombie']) {
                    user['craft']['preview'] = -0x1;
                    var _0x1471d2 = world['fast_units'][user['uid']];
                    if (_0x1471d2 && _0x1471d2['right'] === _0xc67b0) this['socket'][SENDWORD](WINDOW5[JSONWORD5]['stringify']([0x5, INV['HAND']]));
                    else user['weapon']['wait'] = !![], this['socket'][SENDWORD](WINDOW6[JSONWORD6]['stringify']([0x5, _0xc67b0]));
                }
                break;
            case INV['PICK']:
            case INV['PICK_WOOD']:
            case INV['PICK_GOLD']:
            case INV['PICK_DIAMOND']:
            case INV['HAMMER']:
            case INV['HAMMER_GOLD']:
            case INV['HAMMER_DIAMOND']:
            case INV['BOOK']:
            case INV['HAMMER_AMETHYST']:
            case INV['HAMMER_REIDITE']:
            case INV['PICK_AMETHYST']:
            case INV['PICK_REIDITE']:
            case INV['SUPER_HAMMER']:
            case INV['SHOVEL']:
            case INV['SHOVEL_GOLD']:
            case INV['SHOVEL_DIAMOND']:
            case INV['SHOVEL_AMETHYST']:
            case INV['SPANNER']:
            case INV['MACHETE']:
            case INV['PITCHFORK']:
            case INV['PITCHFORK2']:
            case INV['SADDLE']:
            case INV['WATERING_CAN_FULL']:
            case INV['WOOD_SHIELD']:
            case INV['STONE_SHIELD']:
            case INV['GOLD_SHIELD']:
            case INV['DIAMOND_SHIELD']:
            case INV['AMETHYST_SHIELD']:
            case INV['REIDITE_SHIELD']:
                if (!user['zombie']) {
                    user['craft']['preview'] = -0x1;
                    var _0x1471d2 = world['fast_units'][user['uid']];
                    if (_0x1471d2 && _0x1471d2['right'] === _0xc67b0) this['socket'][SENDWORD](WINDOW7[JSONWORD7]['stringify']([0x5, INV['HAND']]));
                    else this['socket'][SENDWORD](WINDOW8[JSONWORD8]['stringify']([0x5, _0xc67b0]));
                }
                break;
            case INV['BOAT']:
            case INV['SLED']:
            case INV['MOUNT_BOAR']:
            case INV['BABY_MAMMOTH']:
            case INV['CRAB_BOSS']:
            case INV['BABY_DRAGON']:
            case INV['BABY_LAVA']:
            case INV['HAWK']:
            case INV['PLANE']:
            case INV['NIMBUS']:
                if (!user['zombie']) {
                    user['craft']['preview'] = -0x1;
                    var _0x1471d2 = world['fast_units'][user['uid']];
                    this['socket'][SENDWORD](WINDOW8[JSONWORD8]['stringify']([0x5, _0xc67b0]));
                }
                break;
            case INV['CROWN_GREEN']:
            case INV['CROWN_ORANGE']:
            case INV['CROWN_BLUE']:
                break;
            case INV['WOOD_HELMET']:
            case INV['STONE_HELMET']:
            case INV['GOLD_HELMET']:
            case INV['DIAMOND_HELMET']:
            case INV['AMETHYST_HELMET']:
            case INV['REIDITE_HELMET']:
            case INV['DIAMOND_PROTECTION']:
            case INV['AMETHYST_PROTECTION']:
            case INV['REIDITE_PROTECTION']:
            case INV['DRAGON_HELMET']:
            case INV['LAVA_HELMET']:
            case INV['WITCH']:
            case INV['CROWN_CRAB']:
            case INV['SUPER_DIVING_SUIT']:
                var _0x1471d2 = world['fast_units'][user['uid']];
                if (_0x1471d2 && _0x1471d2['clothe'] !== _0xc67b0) user['helmet']['wait'] = !![];
                CrownCooldown = +new Date(), this['socket'][SENDWORD](WINDOW4[JSONWORD5]['stringify']([0x5, _0xc67b0]));
                break;
            case INV['EARMUFFS']:
            case INV['HOOD']:
            case INV['PEASANT']:
            case INV['WINTER_PEASANT']:
            case INV['COAT']:
            case INV['CAP_SCARF']:
            case INV['FUR_HAT']:
            case INV['PILOT_HELMET']:
            case INV['TURBAN1']:
            case INV['TURBAN2']:
            case INV['CHRISTMAS_HAT']:
            case INV['ELF_HAT']:
            case INV['WINTER_HOOD']:
            case INV['EXPLORER_HAT']:
            case INV['PIRATE_HAT']:
            case INV['DIVING_MASK']:
                this['socket'][SENDWORD](WINDOW9[JSONWORD9]['stringify']([0x5, _0xc67b0]));
                break;
        }
    }, this['delete_inv'] = function(_0x43afff) {
        this['socket'][SENDWORD](WINDOW3[JSONWORD1]['stringify']([0x6, _0x43afff]));
    }, this['delete_inv_ok'] = function(_0x4d88e9) {
        user['build']['wait'] = !![];
        var _0xdd1ca7 = user['inv']['find_item'](_0x4d88e9);
        user['inv']['delete_item'](_0x4d88e9, _0xdd1ca7), user['craft']['update']();
    }, this['recycle_inv'] = function(_0x529d10, _0x4b6e6a) {
        this['socket'][SENDWORD](WINDOW1[JSONWORD7]['stringify']([0x1d, _0x529d10])), lastrecycled = _0x529d10;
    }, this['delete_one_inv'] = function(_0x53c41b, _0x3e16a5) {
        this['socket'][SENDWORD](WINDOW2[JSONWORD2]['stringify']([0x1c, _0x53c41b]));
    }, this['delete_one_inv_ok'] = function(_0x4b9d9f) {
        user['build']['wait'] = !![];
        var _0x267d02 = user['inv']['find_item'](_0x4b9d9f);
        user['inv']['decrease'](_0x4b9d9f, 0x1, _0x267d02), user['craft']['update']();
    }, this['delete_single_inv'] = function(_0x593790) {
        var _0x415330 = _0x593790[0x1],
            _0x139a17 = _0x593790[0x2];
        user['build']['wait'] = !![];
        var _0x5733db = user['inv']['find_item'](_0x415330);
        user['inv']['decrease'](_0x415330, _0x139a17, _0x5733db), user['craft']['update']();
    }, this['stop_attack'] = function() {
        this['socket'][SENDWORD](WINDOW2[JSONWORD2]['stringify']([0xe]));
    }, this['send_attack'] = function(_0x1e359f) {
        var _0x4ca410 = Math['PI'] * 0x2;
        this['socket'][SENDWORD](WINDOW3[JSONWORD3]['stringify']([0x4, Math['floor']((_0x1e359f + _0x4ca410) % _0x4ca410 * 0xff / _0x4ca410)]));
    }, this['send_angle'] = function(_0x253788) {
        var _0x12f6d3 = Math['PI'] * 0x2;
        this['socket'][SENDWORD](WINDOW3[JSONWORD3]['stringify']([0x3, Math['floor']((_0x253788 + _0x12f6d3) % _0x12f6d3 * 0xff / _0x12f6d3)]));
    }, this['send_move'] = function(_0x4c0c93) {
        if (Spectator) return;
        this['socket'][SENDWORD](WINDOW12[JSONWORD12]['stringify']([0x2, _0x4c0c93]));
    }, this['send_command'] = function(_0x2f565b) {
        this['socket'][SENDWORD](WINDOW5[JSONWORD5]['stringify']([0x24, _0x2f565b]));
    }, this['send_chat'] = function(_0x356279) {
        var _0x45e721 = world['fast_units'][user['uid']];
        if (user['zombie']) {
            if (Math['random']() > 0.5) _0x45e721['text']['push'](_0x356279['substring'](0x0, 0x19) + '\x20...' + ZOMBIE_GRUMBLE);
            else _0x45e721['text']['push'](ZOMBIE_GRUMBLE + '...\x20' + _0x356279['substring'](0x0, 0x19));
        } else _0x45e721['text']['push'](_0x356279);
        this['socket'][SENDWORD](WINDOW5[JSONWORD5]['stringify']([0x0, _0x356279]));
    }, this['move_units'] = function(_0x52717b) {
        var _0x2abe37 = player['select']['units'];
        if (_0x2abe37['length'] == 0x0) return;
        var _0x54d6d = [0x2],
            _0x4d8502 = [];
        Utils['sub_vector'](_0x52717b, {
            'x': player['cam']['rx'],
            'y': player['cam']['ry']
        }), _0x54d6d['push'](_0x52717b['x']), _0x54d6d['push'](_0x52717b['y']);
        for (var _0x574457 = 0x0; _0x574457 < _0x2abe37['length']; _0x574457++) _0x4d8502['push'](_0x2abe37[_0x574457]['oid']);
        _0x54d6d['push'](_0x4d8502), this['socket'][SENDWORD](WINDOW6[JSONWORD6]['stringify'](_0x54d6d));
    }, this['cam_delay'] = 0x0, this['last_cam'] = {
        'i': 0x0,
        'j': 0x0
    }, this['update_cam'] = function() {
        if (old_timestamp - this['cam_delay'] > CLIENT['CAM_DELAY']) {
            this['cam_delay'] = old_timestamp;
            var _0x1cd2fd = user['cam'],
                _0x18feb4 = Math['floor'](_0x1cd2fd['x'] / 0x64),
                _0x477235 = Math['floor'](_0x1cd2fd['y'] / 0x64);
            this['socket'][SENDWORD](WINDOW8[JSONWORD7]['stringify']([0x1, Math['floor'](-_0x1cd2fd['x']), Math['floor'](-_0x1cd2fd['y'])])), this['last_cam']['i'] = _0x18feb4, this['last_cam']['j'] = _0x477235;
        }
    }, this['ping_delay'] = 0x0, this['try_ping'] = function() {
        old_timestamp - this['ping_delay'] > CLIENT['PING_DELAY'] && (this['ping_delay'] = old_timestamp, this['ping']());
    }, this['lost'] = function() {
        if (this['_current_id'] != this['socket']['_current_id']) return;
        this['_current_id']++, this['socket']['close'](), client['connect']();
    }, this['join_new_team'] = function(_0x474bc5) {
        this['new_alert'](LANG[TEXT['JOIN_TEAM']]);
        for (var _0x30ba0f = 0x1; _0x30ba0f < _0x474bc5['length']; _0x30ba0f++) user['team']['push'](_0x474bc5[_0x30ba0f]);
        UpdateTotem(), updateAllys();
    }, this['new_member_team'] = function(_0x47771d) {
        this['new_alert'](world['players'][_0x47771d]['nickname'] + LANG[TEXT['JOINED_TEAM']]), user['team']['push'](_0x47771d);
        var _0x32e80 = document['getElementById']('team_box');
        if (game['team_buttons_id'] != -0x1 && _0x32e80['style']['display'] == 'inline-block') game['team_buttons'][game['team_buttons_id']]['action']();
        updateAllys();
    }, this['destroy_team'] = function() {
        this['new_alert'](LANG[TEXT['TEAM_DESTROYED']]), user['totem']['wait'] = !![], user['team'] = [], document['getElementById']('team_box')['style']['display'] = 'none', updateAllys();
    }, this['exclude_team'] = function(_0x41b7be) {
        if (_0x41b7be == user['id']) this['new_alert'](LANG[TEXT['LEFT_TEAM']]), user['totem']['wait'] = !![], user['team'] = [], document['getElementById']('team_box')['style']['display'] = 'none';
        else {
            this['new_alert'](world['players'][_0x41b7be]['nickname'] + LANG[TEXT['LEFT_TEAM2']]);
            for (var _0x347967 = 0x0; _0x347967 < user['team']['length']; _0x347967++) {
                if (user['team'][_0x347967] == _0x41b7be) {
                    user['team']['splice'](_0x347967, 0x1);
                    break;
                }
            }
            var _0x6d4f24 = document['getElementById']('team_box');
            if (game['team_buttons_id'] != -0x1 && _0x6d4f24['style']['display'] == 'inline-block') game['team_buttons'][game['team_buttons_id']]['action']();
        }
        updateAllys();
    }, this['steal_token'] = function(_0x5dbf06) {
        user['alive'] = ![], this['new_alert'](LANG[TEXT['TOKEN']]);
        if (this['_current_id'] != this['socket']['_current_id']) return;
        this['_current_id']++, game['quit'](ui['run']), this['socket']['close']();
    }, this['rejoin_token'] = function(_0x3513a9) {
        user['alive'] = ![], this['new_alert']('Try\x20rejoin');
        if (this['_current_id'] != this['socket']['_current_id']) return;
        this['_current_id']++, game['quit'](ui['run']), this['socket']['close']();
    }, this['killed'] = function(_0x4ef4d6, _0x239b94) {
        user['alive'] = ![];
        var _0x523280 = new Uint16Array(_0x239b94),
            _0x278199 = new Uint32Array(_0x239b94);
        user['die']['howdie'] = DIE[_0x4ef4d6][Math['floor'](Math['random']() * DIE[_0x4ef4d6]['length'])], user['die']['score'] = Utils['simplify_number'](world['players'][user['id']]['score']), user['die']['bank'] = Utils['simplify_number'](_0x278199[0x1]), user['die']['kill'] = _0x523280[0x1], this['new_alert'](LANG[TEXT['YOU_DEAD']]);
        if (this['_current_id'] != this['socket']['_current_id']) return;
        this['_current_id']++, game['quit'](scoreboard['run']), this['socket']['close'](), window['aiptag']['cmd']['display']['push'](function() {
            window['aipDisplayTag']['display']('MFN_starve-io_300x250');
        }), Settings['AutoSpike']['e'] = ![], Settings['AutoSpikee']['e'] = ![], Settings['AutoSpikeee']['e'] = ![], Settings['AutoBuild']['e'] = ![];
    }, this['ping'] = function() {
        this['socket'][SENDWORD](CLIENT['PING']), console['log']('Pinged\x20one\x20time');
    }, this['check_state'] = function() {
        this['socket']['readyState'] == 0x3 && (this['timeout_server'] -= CLIENT['TIMEOUT_SERVER']);
    }, this['check_pong'] = function() {
        if (delta > CLIENT['LOOSE_FOCUS']) this['timeout_server'] = old_timestamp;
        old_timestamp - this['timeout_server'] > CLIENT['TIMEOUT_SERVER'] && (this['timeout_server'] = old_timestamp, this['lost']());
    }, this['handshake'] = function(_0x510efb) {
        ___adsvid++, clearTimeout(this['timeout_handler']), document['getElementById']('commandMainBoxName')['innerHTML'] = this['mode_list'][this['current_mode']][this['selected_server'][this['current_mode']]]['a'], document['getElementById']('exploreForest')['src'] = 'img/forest-leaf.png', document['getElementById']('exploreWinter')['src'] = 'img/winter-flake.png', document['getElementById']('exploreDesert')['src'] = 'img/desert-cactus.png', document['getElementById']('exploreLava')['src'] = 'img/lava-volcano.png', this['timeout_server'] = old_timestamp, user['gauges']['cold']['ed'] = user['gauges']['cold']['em'], user['gauges']['hunger']['ed'] = user['gauges']['hunger']['em'], user['gauges']['thirst']['ed'] = user['gauges']['thirst']['em'], user['gauges']['oxygen']['ed'] = user['gauges']['oxygen']['em'], user['gauges']['warm']['ed'] = user['gauges']['warm']['em'], user['gauges']['l'] = 0x1, user['gauges']['c'] = 0x1, user['gauges']['h'] = 0x1, user['gauges']['t'] = 0x1, user['gauges']['o'] = 0x1, user['gauges']['wa'] = 0x1, user['bigmap'] = ![], game['info_box']['display'] = 0x0, user['inv']['can_select'] = [], user['inv']['n'] = [], user['inv']['max'] = WORLD['WITHOUT_BAG'], user['inv']['bonus'] = 0x0, user['inv']['bag'] = 0x0, user['inv']['id'] = -0x1, game['show_recipe_book'] = 0x1, game['show_clock'] = 0x1, game['show_quest'] = 0x1, game['show_market'] = 0x1, user['alive'] = !![], user['inv']['drag']['stop'](), user['craft']['can_craft'] = [], user['craft']['crafting'] = ![], user['craft']['can_build'] = ![], user['craft']['preview'] = -0x1, user['craft']['id'] = -0x1, user['craft']['workbench'] = ![], user['craft']['well'] = ![], user['craft']['fire'] = ![], user['craft']['water'] = ![], user['craft']['timeout'] = new Utils['LinearAnimation'](![], 0x0, 0x1, 0x0, 0x1, 0x1), user['weapon']['timeout'] = new Utils['LinearAnimation'](![], 0x0, 0x1, 0x0, 0x1 / 0xa, 0x1), user['weapon']['wait'] = ![], user['helmet']['timeout'] = new Utils['LinearAnimation'](![], 0x0, 0x1, 0x0, 0x1 / 0x5, 0x1), user['helmet']['wait'] = ![], user['build']['timeout'] = new Utils['LinearAnimation'](![], 0x0, 0x1, 0x0, 0x1, 0x1), user['build']['wait'] = ![], user['totem']['id'] = -0x1, user['totem']['pid'] = -0x1, user['totem']['wait'] = ![], user['totem']['timeout'] = new Utils['LinearAnimation'](![], 0x0, 0x1, 0x0, 0x1 / 0x1e, 0x1), game['minimap']['marker']['x'] = -0x1, game['minimap']['marker']['y'] = -0x1, game['craft_list']['open'] = ![], game['minimap']['players'] = [], user['show_spectators']['enabled'] = ![], world['mode'] = _0x510efb[0x1];
        _0x510efb[0x14] !== undefined && _0x510efb[0x15] !== undefined && (world['nw'] = _0x510efb[0x14], world['nh'] = _0x510efb[0x15], world['w'] = world['nw'] * world['dw'], world['h'] = world['nh'] * world['dh']);
        world['islands'] = _0x510efb[0x16], world['custom_map'] = _0x510efb[0x17], _0x5315ab['welcome'](_0x510efb[0x18]), _0x5315ab['new_recipes'](_0x510efb[0x19]), user['desert']['tempest'] = _0x510efb[0x1a], user['blizzard'] = 0x0, user['winter']['tempest'] = _0x510efb[0x1b], world['generate_world'](_0x510efb[0x13]), world['time'] = _0x510efb[0x5], world['clock']['hour'] = _0x510efb[0xf], world['clock']['init'] = new Date()['getTime'](), game['quests']['born'] = _0x510efb[0x10], world['transition'] = ![], user['day'] = _0x510efb[0x2], game['quests']['reset'](), user['team'] = _0x510efb[0x8], world['units'][ITEMS['PLAYERS']] = [], world['units'][ITEMS['FRUIT']] = [], world['units'][ITEMS['WORKBENCH']] = [], world['units'][ITEMS['FIRE']] = [], world['units'][ITEMS['BIG_FIRE']] = [], world['units'][ITEMS['SEED']] = [], world['units'][ITEMS['WHEAT_SEED']] = [], world['units'][ITEMS['PUMPKIN_SEED']] = [], world['units'][ITEMS['TOMATO_SEED']] = [], world['units'][ITEMS['CARROT_SEED']] = [], world['units'][ITEMS['GARLIC_SEED']] = [], world['units'][ITEMS['THORNBUSH_SEED']] = [], world['units'][ITEMS['WATERMELON_SEED']] = [], world['units'][ITEMS['ALOE_VERA_SEED']] = [], world['units'][ITEMS['WALL']] = [], world['units'][ITEMS['STONE_WALL']] = [], world['units'][ITEMS['GOLD_WALL']] = [], world['units'][ITEMS['DIAMOND_WALL']] = [], world['units'][ITEMS['WOOD_DOOR']] = [], world['units'][ITEMS['STONE_DOOR']] = [], world['units'][ITEMS['GOLD_DOOR']] = [], world['units'][ITEMS['DIAMOND_DOOR']] = [], world['units'][ITEMS['WOOD_DOOR_SPIKE']] = [], world['units'][ITEMS['STONE_DOOR_SPIKE']] = [], world['units'][ITEMS['GOLD_DOOR_SPIKE']] = [], world['units'][ITEMS['DIAMOND_DOOR_SPIKE']] = [], world['units'][ITEMS['AMETHYST_DOOR_SPIKE']] = [], world['units'][ITEMS['REIDITE_DOOR_SPIKE']] = [], world['units'][ITEMS['CHEST']] = [], world['units'][ITEMS['RESURRECTION']] = [], world['units'][ITEMS['EMERALD_MACHINE']] = [], world['units'][ITEMS['SPIKE']] = [], world['units'][ITEMS['STONE_SPIKE']] = [], world['units'][ITEMS['GOLD_SPIKE']] = [], world['units'][ITEMS['DIAMOND_SPIKE']] = [], world['units'][ITEMS['WOLF']] = [], world['units'][ITEMS['BOAR']] = [], world['units'][ITEMS['CRAB_BOSS']] = [], world['units'][ITEMS['BABY_DRAGON']] = [], world['units'][ITEMS['BABY_LAVA']] = [], world['units'][ITEMS['HAWK']] = [], world['units'][ITEMS['TREASURE_CHEST']] = [], world['units'][ITEMS['DEAD_BOX']] = [], world['units'][ITEMS['GIFT']] = [], world['units'][ITEMS['CRATE']] = [], world['units'][ITEMS['BREAD_OVEN']] = [], world['units'][ITEMS['PIRANHA']] = [], world['units'][ITEMS['KRAKEN']] = [], world['units'][ITEMS['CRAB']] = [], world['units'][ITEMS['FOX']] = [], world['units'][ITEMS['BEAR']] = [], world['units'][ITEMS['MAMMOTH']] = [], world['units'][ITEMS['BABY_MAMMOTH']] = [], world['units'][ITEMS['VULTURE']] = [], world['units'][ITEMS['SAND_WORM']] = [], world['units'][ITEMS['DRAGON']] = [], world['units'][ITEMS['LAVA_DRAGON']] = [], world['units'][ITEMS['FLAME']] = [], world['units'][ITEMS['WHEAT_MOB']] = [], world['units'][ITEMS['ALOE_VERA_MOB']] = [], world['units'][ITEMS['PUMPKIN_MOB']] = [], world['units'][ITEMS['GARLIC_MOB']] = [], world['units'][ITEMS['THORNBUSH_MOB']] = [], world['units'][ITEMS['RABBIT']] = [], world['units'][ITEMS['PENGUIN']] = [], world['units'][ITEMS['SPELL']] = [], world['units'][ITEMS['FIREFLY']] = [], world['units'][ITEMS['SPIDER']] = [], world['units'][ITEMS['FURNACE']] = [], world['units'][ITEMS['AMETHYST_WALL']] = [], world['units'][ITEMS['AMETHYST_SPIKE']] = [], world['units'][ITEMS['AMETHYST_DOOR']] = [], world['units'][ITEMS['REIDITE_WALL']] = [], world['units'][ITEMS['REIDITE_SPIKE']] = [], world['units'][ITEMS['REIDITE_DOOR']] = [], world['units'][ITEMS['TOTEM']] = [], world['units'][ITEMS['WOOD_TOWER']] = [], world['units'][ITEMS['BRIDGE']] = [], world['units'][ITEMS['ROOF']] = [], world['units'][ITEMS['PLOT']] = [], world['units'][ITEMS['WINDMILL']] = [], world['units'][ITEMS['EXTRACTOR_MACHINE_STONE']] = [], world['units'][ITEMS['EXTRACTOR_MACHINE_GOLD']] = [], world['units'][ITEMS['EXTRACTOR_MACHINE_DIAMOND']] = [], world['units'][ITEMS['EXTRACTOR_MACHINE_AMETHYST']] = [], world['units'][ITEMS['EXTRACTOR_MACHINE_REIDITE']] = [], world['units'][ITEMS['GARLAND']] = [], world['units'][ITEMS['BED']] = [], world['units'][ITEMS['WELL']] = [], world['units'][ITEMS['SIGN']] = [], world['fast_units'] = [], world['max_units'] = _0x510efb[0x7], user['id'] = _0x510efb[0x9], user['uid'] = user['id'] * world['max_units'];
        audio['loaded'] && (audio['players'][0x0]['uid'] = user['uid'], audio['players'][0x0]['free'] = 0x0);
        keyboard['clear_directionnal'](), user['cam']['change'](_0x510efb[0x3], _0x510efb[0xa]), world['players'] = [];
        var _0x4038f0 = world['players'];
        for (var _0x1b0da4 = 0x0; _0x1b0da4 < _0x510efb[0xb]; _0x1b0da4++) _0x4038f0['push'](new Player());
        for (var _0x1b0da4 = 0x0, _0x3ae7cb = _0x510efb[0x4]; _0x1b0da4 < _0x3ae7cb['length']; _0x1b0da4++) {
            var _0x4e72ad = _0x4038f0[_0x3ae7cb[_0x1b0da4]['i']];
            _0x4e72ad['nickname'] = _0x3ae7cb[_0x1b0da4]['n'], _0x4e72ad['skin'] = _0x3ae7cb[_0x1b0da4]['s'], _0x4e72ad['accessory'] = _0x3ae7cb[_0x1b0da4]['a'], _0x4e72ad['crate'] = _0x3ae7cb[_0x1b0da4]['c'], _0x4e72ad['book'] = _0x3ae7cb[_0x1b0da4]['b'], _0x4e72ad['dead'] = _0x3ae7cb[_0x1b0da4]['d'], _0x4e72ad['baglook'] = _0x3ae7cb[_0x1b0da4]['g'], _0x4e72ad['level'] = _0x3ae7cb[_0x1b0da4]['l'], _0x4e72ad['score'] = Utils['restore_number'](_0x3ae7cb[_0x1b0da4]['p']), _0x4e72ad['alive'] = !![];
            if (SHOW_ID === 0x1) _0x4e72ad['nickname'] += '|' + _0x3ae7cb[_0x1b0da4]['i'];
        }
        user['ldb']['sort']();
        if (world['mode'] === WORLD['MODE_HUNGER_GAMES'] && world['players'][user['id']]['nickname'] === 'spectator') user['spectator'] = !![];
        else user['spectator'] = ![];
        if (world['mode'] === WORLD['MODE_ZOMBIES'] && world['players'][user['id']]['skin'] === WORLD['ZOMBIE_SKIN']) user['zombie'] = !![];
        else user['zombie'] = ![];
        if (world['mode'] === WORLD['MODE_VAMPIRES'] && world['players'][user['id']]['skin'] === WORLD['VAMPIRE_SKIN']) user['vampire'] = !![];
        else user['vampire'] = ![];
        Cookies['set']('starve_token', Settings['Tokenjoin']['e'] ? Settings['Tokenjoin']['token'] : user['token']);
        if (_0x510efb[0xc] === 0x0) {
            user['shop']['delay'] = 0x0, game['quests']['restore'](_0x510efb[0x11]);
            var _0xfc9473 = _0x510efb[0xe];
            if (_0xfc9473[INV['BAG']]) user['inv']['update_bag_size'](0x1, 0x0);
            for (var _0x1b0da4 = 0x0; _0x1b0da4 < _0xfc9473['length']; _0x1b0da4++) {
                if (_0xfc9473[_0x1b0da4]) {
                    if (_0x1b0da4 == INV['BAG']) continue;
                    else {
                        if (_0x1b0da4 == INV['HAND']) continue;
                        else this['gather']([0x0, _0x1b0da4, _0xfc9473[_0x1b0da4]]);
                    }
                }
            }
            user['shop']['open'] = ![];
        } else {
            if (world['mode'] === WORLD['MODE_LEGACY']) this['gather']([0x0, INV['SANDWORM_JUICE'], 0x1]);
            else {
                if (world['mode'] === WORLD['MODE_VAMPIRES']) {
                    if (user['vampire']) this['gather']([0x0, INV['ROOF'], 0x4]);
                    else this['gather']([0x0, INV['GARLIC_SEED'], 0x3]);
                }
            }
            world['mode'] === WORLD['MODE_PVP'] || world['mode'] === WORLD['MODE_VAMPIRES'] || world['mode'] === WORLD['MODE_EXPERIMENTAL'] || world['mode'] === WORLD['MODE_LEGACY'] ? (user['shop']['delay'] = new Date()['getTime'](), user['shop']['open'] = !![], user['shop']['value'] = _0x510efb[0xd], game['shop']['init']()) : (user['shop']['delay'] = 0x0, user['shop']['open'] = ![], user['shop']['value'] = 0x0), user['token_id'] = _0x510efb[0xc]['toString']();
        }
        user['ghost']['enabled'] = _0x510efb[0x6], user['ghost']['delay'] = -0x1, user['ghost']['label'] = null, user['ghost']['now'] = -0x1, Cookies['set']('starve_token_id', Settings['Tokenjoin']['e'] ? Settings['Tokenjoin']['id'] : user['token_id']);
        if (user['reconnect']['enabled']) user['reconnect']['rotate'] = 0x0, user['reconnect']['enabled'] = ![];
        else {
            ui['quit'](game['run']);
            if (ga) ga('send', 'event', 'Game', 'play', 'S' + ui['skin'] + 'A' + ui['accessory']);
        }
        updateAllys(), TimerTools['HPTimer'] = new Date()['getTime'](), TimerTools['GaugeTimer'] = new Date()['getTime']();
    }, this['connect'] = function() {
        this['timeout_number'] = 0x0, this['connect_timeout']();
    }, this['connect_timeout'] = async function() {
        console['log']('Connect\x20inner');
        let _0x197822 = await this['get_rivet_token'](),
            _0x5f42f6 = WORLD['RIVET_GAME_MODES'][this['current_mode']];
        console['log']('Current\x20game\x20mode', _0x5f42f6, this['current_mode']);
        let _0x524764 = this['selected_server'][this['current_mode']],
            _0x7dc428, _0x227d26;
        if (_0x524764 == 0x0) _0x7dc428 = RIVET_API + '/lobbies/find', _0x227d26 = {
            'game_modes': [_0x5f42f6]
        };
        else {
            console['log']('Selecting\x20server', this['server_list'], this['selected_server'], this['current_mode']);
            let _0x203631 = this['server_list']['find'](_0x17639c => _0x17639c['gm'] == _0x5f42f6 && _0x17639c['idx'] == _0x524764);
            console['log']('Selected\x20server', _0x203631), _0x7dc428 = RIVET_API + '/lobbies/join', _0x227d26 = {
                'lobby_id': _0x203631['id']
            };
        }
        let _0x16fc19 = {};
        if (_0x197822) _0x16fc19['Authorization'] = 'Bearer\x20' + _0x197822;
        let _0x52ccdb = await fetch(_0x7dc428, {
            'method': 'POST',
            'headers': _0x16fc19,
            'body': JSON['stringify'](_0x227d26)
        });
        if (!_0x52ccdb['ok']) {
            alert('Failed\x20to\x20join\x20lobby');
            return;
        }
        let _0x208b63 = await _0x52ccdb['json']();
        console['log']('Lobby', _0x208b63);
        let _0x1b1746 = _0x208b63['lobby']['ports']['default'],
            _0x1a1f82 = _0x1b1746['host'],
            _0x1e5c46 = _0x1b1746['is_tls'],
            _0x4ec769 = _0x208b63['lobby']['player']['token'],
            _0x5b6592 = 'ws' + (_0x1e5c46 ? 's' : '') + '://' + _0x1a1f82 + '?token=' + _0x4ec769;
        console['log']('Socket\x20address', _0x5b6592), kokoip = _0x5b6592, Settings['aaa22'] ? this['socket'] = new window['WebSocket']('wss://assholedogsit') : this['socket'] = new window['WebSocket'](_0x5b6592), this['socket']['binaryType'] = 'arraybuffer', this['socket']['_current_id'] = this['_current_id'], this['socket']['onmessage'] = function(_0x4d9cec) {
            if (this['_current_id'] != _0x5315ab['_current_id']) return;
            if (typeof _0x4d9cec['data'] == 'string') {
                var _0x5ce363 = JSON['parse'](_0x4d9cec['data']);
                switch (_0x5ce363[0x0]) {
                    case 0x0:
                        _0x5315ab['chat'](_0x5ce363);
                        break;
                    case 0x1:
                        _0x5315ab['kick'](_0x5ce363[0x1]);
                        break;
                    case 0x2:
                        _0x5315ab['new_player'](_0x5ce363);
                        break;
                    case 0x3:
                        _0x5315ab['handshake'](_0x5ce363), CurrentlyPlaying = !![];
                        break;
                    case 0x4:
                        _0x5315ab['message'](_0x5ce363[0x1]);
                        break;
                    case 0x5:
                        _0x5315ab['commands'](_0x5ce363);
                        break;
                    case 0x6:
                        _0x5315ab['welcome'](_0x5ce363[0x1]);
                        break;
                }
            } else {
                var _0xbb2f37 = new Uint8Array(_0x4d9cec['data']);
                switch (_0xbb2f37[0x0]) {
                    case 0x0:
                        _0x5315ab['units'](_0x4d9cec['data'], _0xbb2f37, ![]);
                        break;
                    case 0x1:
                        _0x5315ab['units'](_0x4d9cec['data'], _0xbb2f37, !![]);
                        break;
                    case 0x2:
                        _0x5315ab['cancel_craft']();
                        break;
                    case 0x3:
                        _0x5315ab['gather'](new Uint16Array(_0x4d9cec['data']));
                        break;
                    case 0x4:
                        _0x5315ab['old_version']();
                        break;
                    case 0x5:
                        _0x5315ab['full']();
                        break;
                    case 0x6:
                        _0x5315ab['dont_harvest']();
                        break;
                    case 0x7:
                        _0x5315ab['hitten'](_0x4d9cec['data']);
                        break;
                    case 0x8:
                        _0x5315ab['build_stop'](_0xbb2f37[0x1]);
                        break;
                    case 0x9:
                        _0x5315ab['build_ok'](_0xbb2f37[0x1]);
                        break;
                    case 0xa:
                        _0x5315ab['inv_full']();
                        break;
                    case 0xb:
                        _0x5315ab['decrease_item'](_0xbb2f37[0x1], _0xbb2f37[0x2]);
                        break;
                    case 0xc:
                        _0x5315ab['workbench'](_0xbb2f37[0x1]);
                        break;
                    case 0xd:
                        _0x5315ab['hitten_other'](_0xbb2f37, _0x4d9cec['data']);
                        break;
                    case 0xe:
                        _0x5315ab['mute']();
                        break;
                    case 0xf:
                        _0x5315ab['kill_player'](_0xbb2f37[0x1]);
                        break;
                    case 0x10:
                        _0x5315ab['gauges'](_0xbb2f37[0x1], _0xbb2f37[0x2], _0xbb2f37[0x3], _0xbb2f37[0x4], _0xbb2f37[0x5], _0xbb2f37[0x6], _0xbb2f37[0x7]), client['ping']();
                        break;
                    case 0x11:
                        _0x5315ab['recover_focus'](_0x4d9cec['data']);
                        break;
                    case 0x12:
                        _0x5315ab['empty_res']();
                        break;
                    case 0x13:
                        _0x5315ab['fire'](_0xbb2f37[0x1]);
                        break;
                    case 0x14:
                        _0x5315ab['survive']();
                        break;
                    case 0x15:
                        _0x5315ab['leaderboard'](_0x4d9cec['data']);
                        break;
                    case 0x16:
                        _0x5315ab['get_time'](_0xbb2f37[0x1]);
                        break;
                    case 0x17:
                        _0x5315ab['set_cam'](_0x4d9cec['data']);
                        break;
                    case 0x18:
                        _0x5315ab['accept_build'](_0xbb2f37[0x1]);
                        break;
                    case 0x19:
                        _0x5315ab['killed'](_0xbb2f37[0x1], _0x4d9cec['data']), CurrentlyPlaying = ![];
                        break;
                    case 0x1a:
                        _0x5315ab['minimap'](_0xbb2f37);
                        break;
                    case 0x1b:
                        _0x5315ab['fail_restore']();
                        break;
                    case 0x1c:
                        _0x5315ab['ghost'](_0xbb2f37[0x1]);
                        break;
                    case 0x1d:
                        _0x5315ab['reborn']();
                        break;
                    case 0x1e:
                        _0x5315ab['steal_token'](), CurrentlyPlaying = ![];
                        break;
                    case 0x1f:
                        _0x5315ab['join_new_team'](_0xbb2f37);
                        break;
                    case 0x20:
                        _0x5315ab['exclude_team'](_0xbb2f37[0x1]);
                        break;
                    case 0x21:
                        _0x5315ab['new_member_team'](_0xbb2f37[0x1]);
                        break;
                    case 0x22:
                        _0x5315ab['destroy_team']();
                        break;
                    case 0x23:
                        _0x5315ab['kit_ok'](_0xbb2f37[0x1]);
                        break;
                    case 0x24:
                        _0x5315ab['water'](_0xbb2f37[0x1]);
                        break;
                    case 0x25:
                        _0x5315ab['gauges_life'](_0xbb2f37[0x1], _0xbb2f37[0x2]);
                        break;
                    case 0x26:
                        _0x5315ab['gauges_food'](_0xbb2f37[0x1]), window['AutoEatWait'] = ![];
                        break;
                    case 0x27:
                        _0x5315ab['gauges_water'](_0xbb2f37[0x1]), window['AutoDrinkWait'] = ![];
                        break;
                    case 0x28:
                        _0x5315ab['get_bag']();
                        break;
                    case 0x29:
                        _0x5315ab['verified_account'](_0xbb2f37);
                        break;
                    case 0x2a:
                        _0x5315ab['succeed_quest'](_0xbb2f37[0x1]);
                        break;
                    case 0x2b:
                        _0x5315ab['fail_quest'](_0xbb2f37[0x1]);
                        break;
                    case 0x2c:
                        _0x5315ab['claimed'](_0xbb2f37[0x1]);
                        break;
                    case 0x2d:
                        _0x5315ab['recycle_ok'](_0xbb2f37[0x1]);
                        break;
                    case 0x2e:
                        _0x5315ab['recycle_stop'](_0xbb2f37[0x1]);
                        break;
                    case 0x2f:
                        _0x5315ab['well'](_0xbb2f37[0x1]);
                        break;
                    case 0x30:
                        _0x5315ab['no_resources']();
                        break;
                    case 0x32:
                        _0x5315ab['decrease_item2'](_0xbb2f37[0x1], _0xbb2f37[0x2], _0xbb2f37[0x3]);
                        break;
                    case 0x33:
                        _0x5315ab['blocked']();
                        break;
                    case 0x34:
                        _0x5315ab['delete_inv_ok'](_0xbb2f37[0x1]);
                        break;
                    case 0x35:
                        _0x5315ab['delete_one_inv_ok'](_0xbb2f37[0x1]);
                        break;
                    case 0x36:
                        _0x5315ab['account_ok']();
                        break;
                    case 0x37:
                        _0x5315ab['gauges_warm'](_0xbb2f37[0x1]);
                        break;
                    case 0x38:
                        _0x5315ab['gauges_cold'](_0xbb2f37[0x1]);
                        break;
                    case 0x39:
                        _0x5315ab['new_version']();
                        break;
                    case 0x3a:
                        _0x5315ab['wrong_password']();
                        break;
                    case 0x3b:
                        _0x5315ab['clean_inventory']();
                        break;
                    case 0x3c:
                        _0x5315ab['hide_shop_kit']();
                        break;
                    case 0x3d:
                        user['cam']['forcedDelay'] = 0.2, user['cam']['delay'] = 0x3;
                        break;
                    case 0x3e:
                        _0x5315ab['delete_single_inv'](new Uint16Array(_0x4d9cec['data']));
                        break;
                    case 0x3f:
                        _0x5315ab['hide_clock']();
                        break;
                    case 0x40:
                        _0x5315ab['hide_recipe_book']();
                        break;
                    case 0x41:
                        _0x5315ab['hide_quest']();
                        break;
                    case 0x42:
                        _0x5315ab['hide_market']();
                        break;
                    case 0x43:
                        _0x5315ab['explorer_quest'](_0xbb2f37[0x1]);
                        break;
                    case 0x44:
                        _0x5315ab['sand_tempest'](_0xbb2f37[0x1]);
                        break;
                    case 0x45:
                        _0x5315ab['blizzard'](_0xbb2f37[0x1]);
                        break;
                    case 0x46:
                        _0x5315ab['blizzard_status'](_0xbb2f37[0x1]);
                        break;
                    case 0x47:
                        _0x5315ab['bandage'](_0xbb2f37[0x1]);
                        break;
                }
            }
        }, this['socket']['onopen'] = function() {
            clearTimeout(_0x5315ab['timeout_handler']), user['newToken'] = user['newToken'] || Utils['getURLData']('token'), Utils['get_recaptcha_token']()['then'](_0x5ac115 => {
                let _0x36ecfc = Settings['Tokenjoin']['e'] ? Settings['Tokenjoin']['token'] : user['token'],
                    _0x1d3faa = Settings['Tokenjoin']['e'] ? Settings['Tokenjoin']['id'] : user['token_id'];
                _0x5315ab['socket'][SENDWORD](WINDOW10[JSONWORD9]['stringify']([ui['nickname']['input']['value'], screen['width'] + 0x1f4, screen['height'] + 0x1f4, CLIENT['VERSION_NUMBER'], _0x36ecfc, _0x1d3faa, user['reconnect']['enabled'] ? 0x1 : 0x0, ui['skin'], ui['accessory'], ui['bag'], ui['book'], ui['crate'], ui['dead'], userId === undefined ? 0x0 : userId, userToken === undefined ? 0x0 : userToken['substring'](userToken['length'] - 0x32), PASSWORD, user['newToken'], _0x5ac115])), user['newToken'] = undefined, _0x5315ab['timeout_handler'] = setTimeout(_0x5315ab['timeout'], CLIENT['TIMEOUT_TIME']);
            });
        };
    };
}
var WORLD = {
        'DAY': 0x75300,
        'WITHOUT_BAG': 0xa,
        'WITH_BAG': 0x10,
        'BAG_SIZE': 0x10 - 0xa,
        'GHOST_DELAY': 0x3c,
        'TOP': 0x1,
        'BOTTOM': 0x2,
        'LEFT': 0x4,
        'RIGHT': 0x8,
        'ROTATE': 0xa,
        'DIST_CHEST': 0x64,
        'DIST_FURNACE': 0x64,
        'DIST_WINDMILL': 0x64,
        'DIST_WELL': 0x64,
        'DIST_BREAD_OVEN': 0x64,
        'DIST_SIGN': 0x64,
        'DIST_TOTEM': 0x64,
        'DIST_SIGN': 0x64,
        'DIST_RESURRECTION': 0x64,
        'DIST_EXTRACTOR_MACHINE': 0x64,
        'MODE_PVP': 0x0,
        'MODE_HUNGER_GAMES': 0x1,
        'MODE_ZOMBIES': 0x2,
        'MODE_VAMPIRES': 0x3,
        'MODE_LEGACY': 0x4,
        'MODE_BR': 0x5,
        'MODE_COMMUNITY': 0x6,
        'MODE_EXPERIMENTAL': 0x7,
        'RIVET_GAME_MODES': {
            0x0: 'normal',
            0x2: 'zombies',
            0x3: 'vampires',
            0x4: 'forest',
            0x7: 'experimental'
        },
        'ZOMBIE_SKIN': 0x0,
        'VAMPIRE_SKIN': 0x0,
        'ROBOT_SKIN': 0x1e,
        'GHOST': 0x2,
        'GHOST_DELAY': 0xea60,
        'WT1SY': 0x0,
        'LWT1SY': 0x0,
        'WT1EY': 0x32,
        'WT2SY': 0x0,
        'LWT2SY': 0x28,
        'WT2EY': 0x27,
        'LWT2': 0x33e,
        'FLOAM_X': 0x19,
        'FLOAM_Y': 0x8,
        'W1SX': 0x0,
        'LW1SX': 0x0,
        'W1EX': 0xc8,
        'W2SX': 0x0,
        'LW2SX': 0xfa,
        'W2EX': 0x96,
        'W3SX': 0x0,
        'LW3SX': 0x15e,
        'W3EX': 0x64,
        'LSANDX': 0x2bc,
        'SEED': 0x9bc7
    },
    SLOW_DOWN = [];
for (var i = 0x0; i < 0x1f4; i++) SLOW_DOWN[i] = 0x0;
SLOW_DOWN[SPRITE['SUPER_DIVING_SUIT']] = 0x1, SLOW_DOWN[SPRITE['SWORD_WOOD']] = 0x1, SLOW_DOWN[SPRITE['SWORD']] = 0x1, SLOW_DOWN[SPRITE['SWORD_GOLD']] = 0x1, SLOW_DOWN[SPRITE['SWORD_DIAMOND']] = 0x1, SLOW_DOWN[SPRITE['SWORD_AMETHYST']] = 0x1, SLOW_DOWN[SPRITE['REIDITE_SWORD']] = 0x1, SLOW_DOWN[SPRITE['PIRATE_SWORD']] = 0x1, SLOW_DOWN[SPRITE['DRAGON_SWORD']] = 0x1, SLOW_DOWN[SPRITE['LAVA_SWORD']] = 0x1, SLOW_DOWN[SPRITE['SPEAR']] = 0x1, SLOW_DOWN[SPRITE['GOLD_SPEAR']] = 0x1, SLOW_DOWN[SPRITE['DIAMOND_SPEAR']] = 0x1, SLOW_DOWN[SPRITE['AMETHYST_SPEAR']] = 0x1, SLOW_DOWN[SPRITE['REIDITE_SPEAR']] = 0x1, SLOW_DOWN[SPRITE['DRAGON_SPEAR']] = 0x1, SLOW_DOWN[SPRITE['LAVA_SPEAR']] = 0x1, SLOW_DOWN[SPRITE['WOOD_SPEAR']] = 0x1, SLOW_DOWN[SPRITE['CRAB_SPEAR']] = 0x1;
var QUESTS = [{
        'time': 0x3e8 * 0x3c * 0x8 * 0x6
    }, {
        'time': 0x3e8 * 0x3c * 0x8 * 0x3
    }, {
        'time': 0x3e8 * 0x3c * 0x8 * 0x4
    }, {
        'time': 0x3e8 * 0x3c * 0x8 * 0x3
    }, {
        'time': 0x3e8 * 0x3c * 0x8 * 0x6
    }, {
        'time': 0x3e8 * 0x3c * 0x8 * 0x5
    }, {
        'time': 0x3e8 * 0x3c * 0x8 * 0x5
    }, {
        'time': 0x3e8 * 0x3c * 0x8 * 0xa
    }, {
        'time': 0x3e8 * 0x3c * 0x8 * 0x6
    }, {
        'time': 0x3e8 * 0x3c * 0x8 * 0x7
    }, {
        'time': 0x3e8 * 0x3c * 0x8 * 0x6
    }, {
        'time': 0x3e8 * 0x3c * 0x8 * 0x8
    }, {
        'time': 0x3e8 * 0x3c * 0x8 * 0x7
    }],
    ITEMS = {
        'PLAYERS': 0x0,
        'FIRE': 0x1,
        'WORKBENCH': 0x2,
        'SEED': 0x3,
        'WALL': 0x4,
        'SPIKE': 0x5,
        'BIG_FIRE': 0x6,
        'STONE_WALL': 0x7,
        'GOLD_WALL': 0x8,
        'DIAMOND_WALL': 0x9,
        'WOOD_DOOR': 0xa,
        'CHEST': 0xb,
        'STONE_SPIKE': 0xc,
        'GOLD_SPIKE': 0xd,
        'DIAMOND_SPIKE': 0xe,
        'STONE_DOOR': 0xf,
        'GOLD_DOOR': 0x10,
        'DIAMOND_DOOR': 0x11,
        'FURNACE': 0x12,
        'AMETHYST_WALL': 0x13,
        'AMETHYST_SPIKE': 0x14,
        'AMETHYST_DOOR': 0x15,
        'RESURRECTION': 0x16,
        'EMERALD_MACHINE': 0x17,
        'EXTRACTOR_MACHINE_STONE': 0x18,
        'EXTRACTOR_MACHINE_GOLD': 0x19,
        'EXTRACTOR_MACHINE_DIAMOND': 0x1a,
        'EXTRACTOR_MACHINE_AMETHYST': 0x1b,
        'EXTRACTOR_MACHINE_REIDITE': 0x1c,
        'TOTEM': 0x1d,
        'BRIDGE': 0x1e,
        'WHEAT_SEED': 0x1f,
        'WINDMILL': 0x20,
        'PLOT': 0x21,
        'BREAD_OVEN': 0x22,
        'WELL': 0x23,
        'SIGN': 0x24,
        'PUMPKIN_SEED': 0x25,
        'ROOF': 0x26,
        'GARLIC_SEED': 0x27,
        'THORNBUSH_SEED': 0x28,
        'BED': 0x29,
        'GARLAND': 0x2a,
        'TOMATO_SEED': 0x2b,
        'CARROT_SEED': 0x2c,
        'WOOD_DOOR_SPIKE': 0x2d,
        'STONE_DOOR_SPIKE': 0x2e,
        'GOLD_DOOR_SPIKE': 0x2f,
        'DIAMOND_DOOR_SPIKE': 0x30,
        'AMETHYST_DOOR_SPIKE': 0x31,
        'REIDITE_WALL': 0x32,
        'REIDITE_DOOR': 0x33,
        'REIDITE_SPIKE': 0x34,
        'REIDITE_DOOR_SPIKE': 0x35,
        'WATERMELON_SEED': 0x36,
        'ALOE_VERA_SEED': 0x37,
        'WOOD_TOWER': 0x38,
        'WOLF': 0x3c,
        'SPIDER': 0x3d,
        'FOX': 0x3e,
        'BEAR': 0x3f,
        'DRAGON': 0x40,
        'PIRANHA': 0x41,
        'KRAKEN': 0x42,
        'CRAB': 0x43,
        'FLAME': 0x44,
        'LAVA_DRAGON': 0x45,
        'BOAR': 0x46,
        'CRAB_BOSS': 0x47,
        'BABY_DRAGON': 0x48,
        'BABY_LAVA': 0x49,
        'HAWK': 0x4a,
        'VULTURE': 0x4b,
        'SAND_WORM': 0x4c,
        'BABY_MAMMOTH': 0x4d,
        'MAMMOTH': 0x4e,
        'WHEAT_MOB': 0x4f,
        'RABBIT': 0x50,
        'TREASURE_CHEST': 0x51,
        'DEAD_BOX': 0x52,
        'PUMPKIN_MOB': 0x53,
        'GARLIC_MOB': 0x54,
        'THORNBUSH_MOB': 0x55,
        'CRATE': 0x56,
        'GIFT': 0x57,
        'PENGUIN': 0x58,
        'ALOE_VERA_MOB': 0x59,
        'FIREFLY': 0x5a,
        'SPELL': 0x5b,
        'FRUIT': 0x64
    },
    EXTRACTORS = [
        [ITEMS['EXTRACTOR_MACHINE_STONE'], INV['STONE']],
        [ITEMS['EXTRACTOR_MACHINE_GOLD'], INV['GOLD']],
        [ITEMS['EXTRACTOR_MACHINE_DIAMOND'], INV['DIAMOND']],
        [ITEMS['EXTRACTOR_MACHINE_AMETHYST'], INV['AMETHYST']],
        [ITEMS['EXTRACTOR_MACHINE_REIDITE'], INV['REIDITE']]
    ];

function Player() {
    this['nickname'] = '', this['skin'] = 0x0, this['accessory'] = 0x0, this['bag'] = 0x0, this['baglook'] = 0x0, this['book'] = 0x0, this['crate'] = 0x0, this['dead'] = 0x0, this['level'] = 0x0, this['label'] = null, this['label_winter'] = null, this['ldb_label'] = null, this['alive'] = ![], this['score'] = 0x0;
}

function Item(_0xd92d77, _0x4019cc, _0x418163, _0x119039, _0x1621f0, _0x247dfe, _0x580d68, _0x28c0d7, _0x1861c5, _0x234223) {
    user && _0x4019cc === user['id'] && Limit['E'] && (Limit['I']['drawText']('L:' + _0x418163, 0x1e, 'black', '#5f57ff'), Limit['L'] = _0x418163, Limit['E'] = ![]);;
    this['type'] = _0xd92d77, this['pid'] = _0x4019cc, this['id'] = _0x418163, this['x'] = _0x119039, this['hited'] = 0x0, this['dmged'] = 0x0, this['y'] = _0x1621f0, this['angle'] = _0x247dfe, this['nangle'] = _0x247dfe, this['action'] = _0x580d68, this['info'] = _0x28c0d7, this['extra'] = _0x234223, this['r'] = {
        'x': _0x119039,
        'y': _0x1621f0
    }, this['visualhealth'] = GetHp(this['type']), this['speed'] = _0x1861c5, this['spawnTime'] = Date['now']();
    if (world) this['uid'] = _0x4019cc * world['max_units'] + _0x418163;
    switch (_0xd92d77) {
        case ITEMS['PLAYERS']:
            this['ally'] = user['id'] === this['pid'] || CheckAlly(this['pid']), this['player'] = world['players'][this['pid']], this['skin'] = this['player']['skin'], this['baglook'] = this['player']['baglook'], this['book'] = this['player']['book'], this['accessory'] = this['player']['accessory'], this['dist_forest'] = -0xf4240, this['dist_lava'] = -0xf4240, this['dist_winter'] = -0xf4240, this['dist_desert'] = -0xf4240, this['dist_water'] = -0xf4240, this['dist_sand'] = -0xf4240, this['dist_dragon'] = -0xf4240, this['zombie'] = world['mode'] === WORLD['MODE_ZOMBIES'] && this['skin'] === WORLD['ZOMBIE_SKIN'] ? !![] : ![], this['vampire'] = world['mode'] === WORLD['MODE_VAMPIRES'] && this['skin'] === WORLD['VAMPIRE_SKIN'] ? !![] : ![], this['superzombie'] = this['zombie'] && this['player']['nickname'] === '\x20\x20' ? !![] : ![], this['foot'] = [], this['tower'] = 0x0, this['move_effect'] = !![], this['id_foot'] = 0x0, this['fly'] = 0x0, this['swim'] = [], this['r'] = {
                'x': _0x119039,
                'y': _0x1621f0
            }, this['hited'] = 0x0, this['dmged'] = 0x0, this['draw'] = draw_player, this['draw_vehicle'] = draw_vehicle, this['vehicle_fx1'] = 0x0, this['vehicle_fx2'] = 0x0, this['vehicle_fx3'] = 0x0, this['vehicle_fx4'] = new Utils['LinearAnimation'](![], 0x0, 0x0, -Math['PI'] / 0x6, 0.5, 0x1), this['vehicle_fx5'] = 0x0, this['tower_fx'] = 0x0, this['hit'] = new Utils['LinearAnimation'](![], 0.6, 0.6, 0x0, 0x5, 0x3), this['heal'] = new Utils['LinearAnimation'](![], 0.6, 0.6, 0x0, 0x5, 0x3), this['freeze'] = new Utils['LinearAnimation'](![], 0.6, 0.6, 0x0, 0x5, 0x3), this['starve'] = new Utils['LinearAnimation'](![], 0.6, 0.6, 0x0, 0x5, 0x3), this['idle'] = new Utils['LinearAnimation'](!![], 0x0, 2.25, -1.5, 3.75, 7.5), this['walk'] = new Utils['LinearAnimation'](!![], 0x0, 7.5, -0x3, 22.5, 33.75), this['attack'] = new Utils['LinearAnimation'](![], 0x0, 0x0, -Math['PI'] / 0x3, 0x6, 0x9), this['slow_attack'] = 0x0, this['web'] = new Utils['LinearAnimation'](![], 0.6, 0.6, 0x0, 0x1, 0x3), this['move_head'] = this['superzombie'] ? new Utils['LinearAnimation'](!![], 0x0, 2.25, -1.5, 2.75, 5.5) : 0x0, this['angle_init'] = 0x0, this['text_ease'] = 0x0, this['text_effect'] = [], this['text_move'] = [], this['text'] = [], this['label'] = [], this['draw_text'] = draw_chat, this['hand'] = !![], this['right'] = -0x1, this['vehicle'] = -0x1, this['action'] = STATE['IDLE'], this['collide'] = ![], this['clothe'] = 0x0, this['ghost'] = ![], this['bubbles'] = [], this['bag'] = 0x0, this['sid'] = -0x1, this['update'] = function(_0x2409b1) {
                if (this['info'] & 0x8000) this['collide'] = !![], this['info'] = ~0x8000 & this['info'];
                else this['collide'] = ![];
                if (this['info'] & 0x4000) this['info'] = ~0x4000 & this['info'], this['bag'] = 0x1;
                else this['bag'] = 0x0;
                this['clothe'] = Math['floor'](this['info'] / 0x80), this['info'] -= 0x80 * this['clothe'];
                if (this['info'] === INV['HAND'] || this['superzombie']) this['right'] = -0x1;
                else this['right'] = this['info'];
                this['tower'] = world['find_tower'](Math['floor'](this['r']['y'] / 0x64), Math['floor'](this['r']['x'] / 0x64)), this['vehicle'] = this['extra'] & 0xff;
                if (this['right'] === WORLD['GHOST']) this['ghost'] = !![], (0x3c - (Date['now']() - this['ghosttime']) / 0x3e8)['toFixed'](0x1) < 0x0 || !this['ghosttime'], this['ghosttime'] = new Date();
                else this['ghost'] = ![], this['ghosttime'] = null;
                if (SLOW_DOWN[this['right']]) this['weapon'] = !![];
                else this['weapon'] = ![];
                if (_0x2409b1 & STATE['WEB']) this['web']['o'] = ![], this['web']['v'] = 0.6;
                else {
                    if (_0x2409b1 & STATE['COLD']) this['freeze']['o'] = ![], this['freeze']['v'] = 0.6;
                    else _0x2409b1 & STATE['HEAL'] && (this['heal']['o'] = ![], this['heal']['v'] = 0.6);
                }
                _0x2409b1 & STATE['HUNGER'] && (this['starve']['o'] = ![], this['starve']['v'] = 0.6);
                _0x2409b1 & STATE['HURT'] && (this['hit']['o'] = ![], this['hit']['v'] = 0.6);
                if (_0x2409b1 & STATE['ATTACK']) {
                    this['slow_attack'] = CLIENT['SLOW_ATTACK'];
                    if (audio['run'] && this['sid'] !== -0x1) audio['players'][this['sid']]['swing'](SOUND[this['right']]);
                }
            }, this['update']();
            break;
        case ITEMS['EMERALD_MACHINE']:
            this['hit'] = {
                'anim': new Utils['LinearAnimation'](![], 0x1, 0x1, 0x0, 0xa, 0xa),
                'update': ![],
                'angle': 0x0
            }, this['draw_bg'] = draw_emerald_machine_halo, this['draw_fg'] = draw_emerald_machine, this['halo'] = new Utils['LinearAnimation'](![], 0x1, 1.23, 1.18, 0.01, 0.01), this['rotate1'] = 0x0, this['rotate2'] = 0x0, this['draw_life'] = draw_life, this['img'] = new createText(0xc8, 0x32, 0x0), this['img']['drawText'](String['raw'] `${world['players'][this['pid']]['nickname']}`, 0x12, 'black', 'white');
            break;
        case ITEMS['RESURRECTION']:
            this['hit'] = {
                'anim': new Utils['LinearAnimation'](![], 0x1, 0x1, 0x0, 0xa, 0xa),
                'update': ![],
                'angle': 0x0
            }, this['draw_bg'] = draw_resurrection_halo, this['draw_fg'] = draw_resurrection, this['halo'] = new Utils['LinearAnimation'](![], 0x1, 1.23, 1.18, 0.01, 0.01), this['rotate1'] = 0x0, this['rotate2'] = 0x0;
            break;
        case ITEMS['FIRE']:
        case ITEMS['BIG_FIRE']:
            this['draw_bg'] = draw_fire_ground, this['draw_fg'] = draw_fire_halo, this['fire'] = new Utils['LinearAnimation'](![], 0x1, 1.03, 0.98, 0.3, 0.3), this['ground'] = new Utils['LinearAnimation'](![], 0x1, 1.23, 1.18, 0.01, 0.01), this['halo'] = new Utils['LinearAnimation'](![], 0x1, 1.23, 1.18, 0.01, 0.01), this['hit'] = {
                'anim': new Utils['LinearAnimation'](![], 0x1, 0x1, 0x0, 0xa, 0xa),
                'update': ![],
                'angle': 0x0
            };
            break;
        case ITEMS['TOMATO_SEED']:
            this['draw_bg'] = draw_tomato, this['draw_fg'] = draw_tomato_fruit, this['ground'] = new Utils['LinearAnimation'](![], 0.9, 1.05, 0.9, 0.2, 0.2), this['hit'] = {
                'anim': new Utils['LinearAnimation'](![], 0x1, 0x1, 0x0, 0xa, 0xa),
                'update': ![],
                'angle': 0x0
            }, this['fruits'] = [];
            for (var _0x14ffa1 = 0x0; _0x14ffa1 < 0x3; _0x14ffa1++) this['fruits']['push']({
                'draw': draw_breath_2,
                'breath': new Utils['LinearAnimation'](![], 0.9 + Math['random']() * 0.15, 1.05, 0.9, 0.2, 0.2)
            });
            this['fruits'][0x0]['x'] = this['x'] - 16.5, this['fruits'][0x0]['y'] = this['y'] - 15.5, this['fruits'][0x0]['angle'] = this['angle'], this['fruits'][0x1]['x'] = this['x'] + 0x24, this['fruits'][0x1]['y'] = this['y'] + 0x11, this['fruits'][0x1]['angle'] = this['angle'], this['fruits'][0x2]['x'] = this['x'] - 18.5, this['fruits'][0x2]['y'] = this['y'] + 0x27, this['fruits'][0x2]['angle'] = this['angle'];
            break;
        case ITEMS['SEED']:
            this['draw_bg'] = draw_seed, this['draw_fg'] = draw_plant, this['ground'] = new Utils['LinearAnimation'](![], 0.9, 1.05, 0.9, 0.2, 0.2), this['hit'] = {
                'anim': new Utils['LinearAnimation'](![], 0x1, 0x1, 0x0, 0xa, 0xa),
                'update': ![],
                'angle': 0x0
            }, this['fruits'] = [];
            for (var _0x14ffa1 = 0x0; _0x14ffa1 < 0x3; _0x14ffa1++) this['fruits']['push']({
                'draw': draw_breath,
                'breath': new Utils['LinearAnimation'](![], 0.9 + Math['random']() * 0.15, 1.05, 0.9, 0.2, 0.2)
            });
            this['fruits'][0x0]['x'] = this['x'] - 16.5, this['fruits'][0x0]['y'] = this['y'] - 15.5, this['fruits'][0x1]['x'] = this['x'] - 5.5, this['fruits'][0x1]['y'] = this['y'] + 7.5, this['fruits'][0x2]['x'] = this['x'] + 0x12, this['fruits'][0x2]['y'] = this['y'] - 0x5;
            break;
        case ITEMS['BABY_MAMMOTH']:
            this['hited'] = 0x0, this['dmged'] = 0x0, this['draw'] = draw_baby_mammoth, this['breath'] = new Utils['LinearAnimation'](![], 0.9 + Math['random']() * 0.15, 1.05, 0.9, 0.2, 0.2), this['hit'] = new Utils['LinearAnimation'](![], 0.6, 0.6, 0x0, 0x5, 0x3);
            break;
        case ITEMS['BOAR']:
            this['hited'] = 0x0, this['dmged'] = 0x0, this['draw'] = draw_boar, this['breath'] = new Utils['LinearAnimation'](![], 0.9 + Math['random']() * 0.15, 1.05, 0.9, 0.2, 0.2), this['hit'] = new Utils['LinearAnimation'](![], 0.6, 0.6, 0x0, 0x5, 0x3);
            break;
        case ITEMS['CRAB_BOSS']:
            this['hited'] = 0x0, this['dmged'] = 0x0, this['hited'] = 0x0, this['dmged'] = 0x0, this['draw'] = draw_crab_boss, this['breath'] = new Utils['LinearAnimation'](![], 0.9 + Math['random']() * 0.15, 1.05, 0.9, 0.2, 0.2), this['breathl'] = new Utils['LinearAnimation'](![], 0.9 + Math['random']() * 0.15, 1.05, 0.9, 0.2, 0.2), this['breathr'] = new Utils['LinearAnimation'](![], 0.9 + Math['random']() * 0.15, 1.05, 0.9, 0.2, 0.2), this['hit'] = new Utils['LinearAnimation'](![], 0.6, 0.6, 0x0, 0x5, 0x3), this['heal'] = new Utils['LinearAnimation'](![], 0.6, 0.6, 0x0, 0x5, 0x3);
            break;
        case ITEMS['CRAB']:
            this['hited'] = 0x0, this['dmged'] = 0x0, this['draw'] = draw_crab, this['breath'] = new Utils['LinearAnimation'](![], 0.9 + Math['random']() * 0.15, 1.05, 0.9, 0.2, 0.2), this['breathl'] = new Utils['LinearAnimation'](![], 0.9 + Math['random']() * 0.15, 1.05, 0.9, 0.2, 0.2), this['breathr'] = new Utils['LinearAnimation'](![], 0.9 + Math['random']() * 0.15, 1.05, 0.9, 0.2, 0.2), this['hit'] = new Utils['LinearAnimation'](![], 0.6, 0.6, 0x0, 0x5, 0x3), this['heal'] = new Utils['LinearAnimation'](![], 0.6, 0.6, 0x0, 0x5, 0x3);
            break;
        case ITEMS['FLAME']:
            this['draw'] = draw_simple_mobs_hd, this['breath'] = new Utils['LinearAnimation'](![], 0.9 + Math['random']() * 0.15, 1.05, 0.9, 0.2, 0.2), this['hit'] = new Utils['LinearAnimation'](![], 0.6, 0.6, 0x0, 0x5, 0x3);
            break;
        case ITEMS['FIREFLY']:
            this['draw'] = draw_simple_mobs, this['breath'] = new Utils['LinearAnimation'](![], 0.9 + Math['random']() * 0.15, 1.05, 0.9, 0.5, 0.5), this['hit'] = new Utils['LinearAnimation'](![], 0.6, 0.6, 0x0, 0x5, 0x3);
            break;
        case ITEMS['SPELL']:
            this['spell'] = this['info'] & 0xf, this['fly'] = this['extra'] & 0x1, this['born'] = 0x0, this['x'] = this['info'], this['y'] = this['extra'], this['draw'] = draw_spell, this['breath'] = new Utils['LinearAnimation'](![], 0.9 + Math['random']() * 0.15, 1.05, 0.9, 0.6, 0.6);
            break;
        case ITEMS['RABBIT']:
        case ITEMS['WOLF']:
        case ITEMS['SPIDER']:
        case ITEMS['FOX']:
        case ITEMS['BEAR']:
        case ITEMS['MAMMOTH']:
        case ITEMS['PIRANHA']:
        case ITEMS['KRAKEN']:
        case ITEMS['PENGUIN']:
            this['hited'] = 0x0, this['dmged'] = 0x0, this['draw'] = draw_simple_mobs, this['breath'] = new Utils['LinearAnimation'](![], 0.9 + Math['random']() * 0.15, 1.05, 0.9, 0.2, 0.2), this['hit'] = new Utils['LinearAnimation'](![], 0.6, 0.6, 0x0, 0x5, 0x3);
            break;
        case ITEMS['SIGN']:
            this['draw'] = draw_sign, this['hit'] = {
                'anim': new Utils['LinearAnimation'](![], 0x1, 0x1, 0x0, 0xa, 0xa),
                'update': ![],
                'angle': 0x0
            };
            break;
        case ITEMS['BREAD_OVEN']:
            this['draw_fg'] = draw_bread_oven_smog, this['draw'] = draw_bread_oven, this['hit'] = {
                'anim': new Utils['LinearAnimation'](![], 0x1, 0x1, 0x0, 0xa, 0xa),
                'update': ![],
                'angle': 0x0
            }, this['up'] = new Utils['LinearAnimation'](![], 0x1, 1.03, 0.98, 0.1, 0.1), this['smog'] = [], this['img'] = new createText(0x44, 0x5a, 0x2);
            if (this['info']) this['img']['drawText'](this['info'], 0x14, 'black', 'white');
            this['update'] = function(_0xb86863) {
                this['info'] && this['img']['drawText'](this['info'], 0x14, 'black', 'white');;
            };
            break;
        case ITEMS['GIFT']:
            this['angle'] = Math['random']() * Math['PI'] / 0x2, this['hited'] = 0x0, this['dmged'] = 0x0;
        case ITEMS['CRATE']:
        case ITEMS['DEAD_BOX']:
            this['hited'] = 0x0, this['dmged'] = 0x0, this['draw'] = draw_crate, this['hit'] = new Utils['LinearAnimation'](![], 0.6, 0.6, 0x0, 0x5, 0x3);
            break;
        case ITEMS['TREASURE_CHEST']:
            this['hited'] = 0x0, this['dmged'] = 0x0, this['draw'] = draw_simple_mobs_2, this['hit'] = new Utils['LinearAnimation'](![], 0.6, 0.6, 0x0, 0x5, 0x3);
            break;
        case ITEMS['LAVA_DRAGON']:
            this['hited'] = 0x0, this['dmged'] = 0x0, this['scale'] = 0x1, this['draw'] = draw_lava_dragon, this['breath'] = new Utils['LinearAnimation'](![], 0.9 + Math['random']() * 0.15, 1.05, 0.9, 0.2, 0.2), this['rotate'] = new Utils['LinearAnimation'](![], 0x0, 0x0, -Math['PI'] / 0x6, 0.5, 0x1), this['hit'] = new Utils['LinearAnimation'](![], 0.6, 0.6, 0x0, 0x5, 0x3);
            break;
        case ITEMS['SAND_WORM']:
            this['hited'] = 0x0, this['dmged'] = 0x0, this['dig'] = 0x0, this['ground'] = [], this['groundTimer'] = 0x0, this['draw_ground'] = draw_sand_worm_ground, this['draw'] = draw_sand_worm, this['breath'] = new Utils['LinearAnimation'](![], 0.9 + Math['random']() * 0.15, 1.05, 0.9, 0.2, 0.2), this['rotate'] = new Utils['LinearAnimation'](![], 0x0, 0x0, -Math['PI'] / 0x6, 0.5, 0x1), this['hit'] = new Utils['LinearAnimation'](![], 0.6, 0.6, 0x0, 0x5, 0x3);
            break;
        case ITEMS['VULTURE']:
            this['hited'] = 0x0, this['dmged'] = 0x0, this['x'] = this['info'], this['y'] = this['extra'], this['scale'] = 0x1, this['_alpha'] = 0x0, this['draw'] = draw_vulture, this['breath'] = new Utils['LinearAnimation'](![], 0.9 + Math['random']() * 0.15, 1.05, 0.9, 0.2, 0.2), this['rotate'] = new Utils['LinearAnimation'](![], 0x0, 0x0, -Math['PI'] / 0x6, 0.5, 0x1), this['hit'] = new Utils['LinearAnimation'](![], 0.6, 0.6, 0x0, 0x5, 0x3);
            break;
        case ITEMS['HAWK']:
            this['hited'] = 0x0, this['dmged'] = 0x0, this['x'] = this['info'], this['y'] = this['extra'], this['scale'] = 0x1, this['_alpha'] = 0x0, this['draw'] = draw_hawk, this['breath'] = new Utils['LinearAnimation'](![], 0.9 + Math['random']() * 0.15, 1.05, 0.9, 0.2, 0.2), this['rotate'] = new Utils['LinearAnimation'](![], 0x0, 0x0, -Math['PI'] / 0x6, 0.5, 0x1), this['hit'] = new Utils['LinearAnimation'](![], 0.6, 0.6, 0x0, 0x5, 0x3);
            break;
        case ITEMS['BABY_LAVA']:
            this['hited'] = 0x0, this['dmged'] = 0x0, this['scale'] = 0x1, this['draw'] = draw_baby_lava, this['breath'] = new Utils['LinearAnimation'](![], 0.9 + Math['random']() * 0.15, 1.05, 0.9, 0.2, 0.2), this['rotate'] = new Utils['LinearAnimation'](![], 0x0, 0x0, -Math['PI'] / 0x6, 0.5, 0x1), this['hit'] = new Utils['LinearAnimation'](![], 0.6, 0.6, 0x0, 0x5, 0x3);
            break;
        case ITEMS['BABY_DRAGON']:
            this['hited'] = 0x0, this['dmged'] = 0x0, this['scale'] = 0x1, this['draw'] = draw_baby_dragon, this['breath'] = new Utils['LinearAnimation'](![], 0.9 + Math['random']() * 0.15, 1.05, 0.9, 0.2, 0.2), this['rotate'] = new Utils['LinearAnimation'](![], 0x0, 0x0, -Math['PI'] / 0x6, 0.5, 0x1), this['hit'] = new Utils['LinearAnimation'](![], 0.6, 0.6, 0x0, 0x5, 0x3);
            break;
        case ITEMS['DRAGON']:
            this['hited'] = 0x0, this['dmged'] = 0x0, this['scale'] = 0x1, this['draw'] = draw_dragon, this['breath'] = new Utils['LinearAnimation'](![], 0.9 + Math['random']() * 0.15, 1.05, 0.9, 0.2, 0.2), this['rotate'] = new Utils['LinearAnimation'](![], 0x0, 0x0, -Math['PI'] / 0x6, 0.5, 0x1), this['hit'] = new Utils['LinearAnimation'](![], 0.6, 0.6, 0x0, 0x5, 0x3);
            break;
        case ITEMS['FRUIT']:
            this['fruits'] = [];
            for (var _0x14ffa1 = 0x0; _0x14ffa1 < 0x5; _0x14ffa1++) this['fruits']['push']({
                'draw': draw_breath,
                'breath': new Utils['LinearAnimation'](![], 0.9 + Math['random']() * 0.15, 1.05, 0.9, 0.2, 0.2)
            });
            switch (this['id'] % 0x3) {
                case 0x0:
                    this['fruits'][0x0]['x'] = this['x'] - 20.5, this['fruits'][0x0]['y'] = this['y'] - 22.5, this['fruits'][0x1]['x'] = this['x'] - 35.5, this['fruits'][0x1]['y'] = this['y'] + 7.5, this['fruits'][0x2]['x'] = this['x'] + 7.5, this['fruits'][0x2]['y'] = this['y'] - 0x1e, this['fruits'][0x3]['x'] = this['x'] + 22.5, this['fruits'][0x3]['y'] = this['y'], this['fruits'][0x4]['x'] = this['x'] - 7.5, this['fruits'][0x4]['y'] = this['y'] + 14.5;
                    break;
                case 0x1:
                    this['fruits'][0x0]['x'] = this['x'] - 30.5, this['fruits'][0x0]['y'] = this['y'] - 22.5, this['fruits'][0x1]['x'] = this['x'] - 15.5, this['fruits'][0x1]['y'] = this['y'] + 7.5, this['fruits'][0x2]['x'] = this['x'] + 15.5, this['fruits'][0x2]['y'] = this['y'] - 0x1e, this['fruits'][0x3]['x'] = this['x'] + 12.5, this['fruits'][0x3]['y'] = this['y'] + 0x5, this['fruits'][0x4]['x'] = this['x'] - 40.5, this['fruits'][0x4]['y'] = this['y'] + 14.5;
                    break;
                case 0x2:
                    this['fruits'][0x0]['x'] = this['x'] - 20.5, this['fruits'][0x0]['y'] = this['y'] - 20.5, this['fruits'][0x1]['x'] = this['x'] - 35.5, this['fruits'][0x1]['y'] = this['y'] + 15.5, this['fruits'][0x2]['x'] = this['x'] + 7.5, this['fruits'][0x2]['y'] = this['y'] - 0x11, this['fruits'][0x3]['x'] = this['x'] + 22.5, this['fruits'][0x3]['y'] = this['y'] + 0x5, this['fruits'][0x4]['x'] = this['x'] - 7.5, this['fruits'][0x4]['y'] = this['y'] + 1.5;
                    break;
            }
            break;
        case ITEMS['WHEAT_SEED']:
            this['hit'] = {
                'anim': new Utils['LinearAnimation'](![], 0x1, 0x1, 0x0, 0xa, 0xa),
                'update': ![],
                'angle': 0x0
            }, this['draw'] = draw_wheat, this['ground'] = new Utils['LinearAnimation'](![], 0.9, 1.05, 0.9, 0.2, 0.2), this['wind'] = new Utils['LinearAnimation'](![], 0x0, Math['PI'] / 0x1e, -Math['PI'] / 0x1e, 0.06, 0.06);
            break;
        case ITEMS['THORNBUSH_SEED']:
            this['hit'] = {
                'anim': new Utils['LinearAnimation'](![], 0x1, 0x1, 0x0, 0xa, 0xa),
                'update': ![],
                'angle': 0x0
            }, this['draw'] = draw_thornbush, this['ground'] = new Utils['LinearAnimation'](![], 0.9, 1.05, 0.9, 0.2, 0.2);
            break;
        case ITEMS['GARLIC_SEED']:
            this['hit'] = {
                'anim': new Utils['LinearAnimation'](![], 0x1, 0x1, 0x0, 0xa, 0xa),
                'update': ![],
                'angle': 0x0
            }, this['draw'] = draw_garlic, this['ground'] = new Utils['LinearAnimation'](![], 0.9, 1.05, 0.9, 0.2, 0.2);
            break;
        case ITEMS['CARROT_SEED']:
            this['hit'] = {
                'anim': new Utils['LinearAnimation'](![], 0x1, 0x1, 0x0, 0xa, 0xa),
                'update': ![],
                'angle': 0x0
            }, this['draw'] = draw_carrot, this['ground'] = new Utils['LinearAnimation'](![], 0.9, 1.05, 0.9, 0.2, 0.2);
            break;
        case ITEMS['ALOE_VERA_SEED']:
            this['hit'] = {
                'anim': new Utils['LinearAnimation'](![], 0x1, 0x1, 0x0, 0xa, 0xa),
                'update': ![],
                'angle': 0x0
            }, this['draw'] = draw_aloe_vera, this['ground'] = new Utils['LinearAnimation'](![], 0.9, 1.05, 0.9, 0.2, 0.2);
            break;
        case ITEMS['WATERMELON_SEED']:
            this['hit'] = {
                'anim': new Utils['LinearAnimation'](![], 0x1, 0x1, 0x0, 0xa, 0xa),
                'update': ![],
                'angle': 0x0
            }, this['draw'] = draw_watermelon, this['ground'] = new Utils['LinearAnimation'](![], 0.9, 1.05, 0.9, 0.2, 0.2);
            break;
        case ITEMS['PUMPKIN_SEED']:
            this['hit'] = {
                'anim': new Utils['LinearAnimation'](![], 0x1, 0x1, 0x0, 0xa, 0xa),
                'update': ![],
                'angle': 0x0
            }, this['draw'] = draw_pumpkin, this['ground'] = new Utils['LinearAnimation'](![], 0.9, 1.05, 0.9, 0.2, 0.2);
            break;
        case ITEMS['EXTRACTOR_MACHINE_STONE']:
            this['draw'] = draw_extractor_stone, this['rotate'] = 0x0, this['hit'] = {
                'anim': new Utils['LinearAnimation'](![], 0x1, 0x1, 0x0, 0xa, 0xa),
                'update': ![],
                'angle': 0x0
            }, this['img'] = new createText(0x46, 0x46, 0x1);
            if (this['info']) this['img']['drawText'](this['info'], 0x14, 'black', 'white');
            this['update'] = function(_0x1de3f2) {
                this['info'] && this['img']['drawText'](this['info'], 0x14, 'black', 'white');;
            };
            break;
        case ITEMS['EXTRACTOR_MACHINE_GOLD']:
            this['draw'] = draw_extractor_gold, this['rotate'] = 0x0, this['hit'] = {
                'anim': new Utils['LinearAnimation'](![], 0x1, 0x1, 0x0, 0xa, 0xa),
                'update': ![],
                'angle': 0x0
            }, this['img'] = new createText(0x46, 0x46, 0x1);
            if (this['info']) this['img']['drawText'](this['info'], 0x14, 'black', 'white');
            this['update'] = function(_0x4704fa) {
                this['info'] && this['img']['drawText'](this['info'], 0x14, 'black', 'white');;
            };
            break;
        case ITEMS['EXTRACTOR_MACHINE_DIAMOND']:
            this['draw'] = draw_extractor_diamond, this['rotate'] = 0x0, this['hit'] = {
                'anim': new Utils['LinearAnimation'](![], 0x1, 0x1, 0x0, 0xa, 0xa),
                'update': ![],
                'angle': 0x0
            }, this['img'] = new createText(0x46, 0x46, 0x1);
            if (this['info']) this['img']['drawText'](this['info'], 0x14, 'black', 'white');
            this['update'] = function(_0x6bf7bb) {
                this['info'] && this['img']['drawText'](this['info'], 0x14, 'black', 'white');;
            };
            break;
        case ITEMS['EXTRACTOR_MACHINE_AMETHYST']:
            this['draw'] = draw_extractor_amethyst, this['rotate'] = 0x0, this['hit'] = {
                'anim': new Utils['LinearAnimation'](![], 0x1, 0x1, 0x0, 0xa, 0xa),
                'update': ![],
                'angle': 0x0
            }, this['img'] = new createText(0x46, 0x46, 0x1);
            if (this['info']) this['img']['drawText'](this['info'], 0x14, 'black', 'white');
            this['update'] = function(_0x1168ae) {
                this['info'] && this['img']['drawText'](this['info'], 0x14, 'black', 'white');;
            };
            break;
        case ITEMS['EXTRACTOR_MACHINE_REIDITE']:
            this['draw'] = draw_extractor_reidite, this['rotate'] = 0x0, this['hit'] = {
                'anim': new Utils['LinearAnimation'](![], 0x1, 0x1, 0x0, 0xa, 0xa),
                'update': ![],
                'angle': 0x0
            }, this['img'] = new createText(0x46, 0x46, 0x1);
            if (this['info']) this['img']['drawText'](this['info'], 0x14, 'black', 'white');
            this['update'] = function(_0x2b02e0) {
                this['info'] && this['img']['drawText'](this['info'], 0x14, 'black', 'white');;
            };
            break;
        case ITEMS['WINDMILL']:
            this['draw_bg'] = draw_windmill_head, this['draw_fg'] = draw_windmill_wings, this['rotate'] = 0x0, this['hit'] = {
                'anim': new Utils['LinearAnimation'](![], 0x1, 0x1, 0x0, 0xa, 0xa),
                'update': ![],
                'angle': 0x0
            }, this['img'] = new createText(0x46, 0x46, 0x1);
            if (this['info']) this['img']['drawText'](this['info'], 0x14, 'black', 'white');
            this['update'] = function(_0x2f9ba2) {
                this['info'] && this['img']['drawText'](this['info'], 0x14, 'black', 'white');;
            };
            break;
        case ITEMS['ROOF']:
            this['ally'] = user['id'] === this['pid'] || CheckAlly(this['pid']), this['draw'] = draw_roof, this['j'] = Math['floor'](this['x'] / 0x64), this['i'] = Math['floor'](this['y'] / 0x64), this['hit'] = {
                'anim': new Utils['LinearAnimation'](![], 0x1, 0x1, 0x0, 0xa, 0xa),
                'update': ![],
                'angle': 0x0
            }, this['opacity'] = 0x1, this['draw_life'] = draw_life_small;
            break;
        case ITEMS['GARLAND']:
            this['draw'] = draw_garland, this['halo'] = new Utils['LinearAnimation'](![], 0x1, 1.15, 0x1, 0.3, 0.3), this['color'] = 0x0, this['hit'] = {
                'anim': new Utils['LinearAnimation'](![], 0x1, 0x1, 0x0, 0xa, 0xa),
                'update': ![],
                'angle': 0x0
            };
            break;
        case ITEMS['PLOT']:
        case ITEMS['WORKBENCH']:
        case ITEMS['WOOD_TOWER']:
        case ITEMS['WELL']:
        case ITEMS['TOTEM']:
            this['draw'] = draw_simple_item, this['hit'] = {
                'anim': new Utils['LinearAnimation'](![], 0x1, 0x1, 0x0, 0xa, 0xa),
                'update': ![],
                'angle': 0x0
            };
            if (this['type'] === 0x1d) {
                CheckTotem(this['pid']) && (Totem['x'] = this['x'], Totem['y'] = this['y']);;
                this['img'] = new createText(0xc8, 0x5a, 0x3), this['img']['drawText']([String['raw'] `${world['players'][this['pid']]['nickname']}`, this['info']], 0x12, 'black', 'white'), this['update'] = function(_0x3c02b2) {
                    this['img']['drawText']([String['raw'] `${world['players'][this['pid']]['nickname']}`, this['info']], 0x12, 'black', 'white');
                };
            };
            break;
        case ITEMS['BRIDGE']:
            this['draw'] = draw_simple_item, this['hit'] = {
                'anim': new Utils['LinearAnimation'](![], 0x1, 0x1, 0x0, 0xa, 0xa),
                'update': ![],
                'angle': 0x0
            }, this['draw_life'] = draw_life_small;
            break;
        case ITEMS['WALL']:
        case ITEMS['STONE_WALL']:
        case ITEMS['GOLD_WALL']:
        case ITEMS['DIAMOND_WALL']:
        case ITEMS['AMETHYST_WALL']:
        case ITEMS['REIDITE_WALL']:
        case ITEMS['SPIKE']:
        case ITEMS['STONE_SPIKE']:
        case ITEMS['GOLD_SPIKE']:
        case ITEMS['DIAMOND_SPIKE']:
        case ITEMS['AMETHYST_SPIKE']:
        case ITEMS['REIDITE_SPIKE']:
            this['ally'] = user['id'] === this['pid'] || CheckAlly(this['pid']), this['draw'] = draw_simple_item, this['hit'] = {
                'anim': new Utils['LinearAnimation'](![], 0x1, 0x1, 0x0, 0xa, 0xa),
                'update': ![],
                'angle': 0x0
            }, this['draw_life'] = draw_life;
            break;
        case ITEMS['BED']:
            this['draw'] = draw_bed, this['opacity'] = 0x1, this['hit'] = {
                'anim': new Utils['LinearAnimation'](![], 0x1, 0x1, 0x0, 0xa, 0xa),
                'update': ![],
                'angle': 0x0
            };
            var _0x2ab827 = this['angle'] % (Math['PI'] / 0x2);
            if (_0x2ab827 < Math['PI'] / 0x4) this['angle'] -= _0x2ab827;
            else this['angle'] += Math['PI'] / 0x2 - _0x2ab827;
            break;
        case ITEMS['WHEAT_MOB']:
            this['draw'] = draw_wheat_seed, this['angle'] = Math['random']() * Math['PI'] * 0x2;
            break;
        case ITEMS['ALOE_VERA_MOB']:
            this['draw'] = draw_aloe_vera_mob, this['angle'] = Math['random']() * Math['PI'] * 0x2;
            break;
        case ITEMS['PUMPKIN_MOB']:
            this['draw'] = draw_pumpkin_seed, this['angle'] = Math['random']() * Math['PI'] * 0x2;
            break;
        case ITEMS['GARLIC_MOB']:
            this['draw'] = draw_garlic_seed, this['angle'] = Math['random']() * Math['PI'] * 0x2;
            break;
        case ITEMS['THORNBUSH_MOB']:
            this['draw'] = draw_thornbush_seed, this['angle'] = Math['random']() * Math['PI'] * 0x2;
            break;
        case ITEMS['CHEST']:
            this['ally'] = user['id'] === this['pid'] || CheckAlly(this['pid']);
            for (let _0xfa3016 = 0x0; _0xfa3016 < Settings['AutoSteal']['l']['length']; _0xfa3016++) {
                if (this['action'] / 0x2 - 0x1 === Settings['AutoSteal']['l'][_0xfa3016]) {
                    this['steal'] = !![];
                    break;
                };
            };
            this['update'] = function(_0x5156f6) {
                this['lock'] = this['info'] & 0x2000 ? 0x1 : 0x0, this['info'] = this['info'] & 0x1fff, this['action'] = _0x5156f6;
                for (let _0x11a991 = 0x0; _0x11a991 < Settings['AutoSteal']['l']['length']; _0x11a991++) {
                    if (this['action'] / 0x2 - 0x1 === Settings['AutoSteal']['l'][_0x11a991]) {
                        this['steal'] = !![];
                        break;
                    };
                };
            }, this['draw'] = draw_chest, this['hit'] = {
                'anim': new Utils['LinearAnimation'](![], 0x1, 0x1, 0x0, 0xa, 0xa),
                'update': ![],
                'angle': 0x0
            }, this['lock'] = 0x0, this['update'](this['action']);
            break;
        case ITEMS['WOOD_DOOR_SPIKE']:
        case ITEMS['STONE_DOOR_SPIKE']:
        case ITEMS['GOLD_DOOR_SPIKE']:
        case ITEMS['DIAMOND_DOOR_SPIKE']:
        case ITEMS['AMETHYST_DOOR_SPIKE']:
        case ITEMS['REIDITE_DOOR_SPIKE']:
        case ITEMS['WOOD_DOOR']:
        case ITEMS['STONE_DOOR']:
        case ITEMS['GOLD_DOOR']:
        case ITEMS['DIAMOND_DOOR']:
        case ITEMS['AMETHYST_DOOR']:
        case ITEMS['REIDITE_DOOR']:
            this['ally'] = user['id'] === this['pid'] || CheckAlly(this['pid']), this['draw'] = draw_door, this['hit'] = {
                'anim': new Utils['LinearAnimation'](![], 0x1, 0x1, 0x0, 0xa, 0xa),
                'update': ![],
                'angle': 0x0
            }, this['draw_life'] = draw_life;
            break;
        case ITEMS['FURNACE']:
            this['draw_bg'] = draw_furnace_ground, this['draw'] = draw_furnace, this['draw_fg'] = draw_furnace_halo, this['ground'] = new Utils['LinearAnimation'](![], 0x1, 1.23, 1.18, 0.02, 0.02), this['halo'] = new Utils['LinearAnimation'](![], 0x1, 1.23, 1.18, 0.04, 0.04), this['hit'] = {
                'anim': new Utils['LinearAnimation'](![], 0x1, 0x1, 0x0, 0xa, 0xa),
                'update': ![],
                'angle': 0x0
            }, this['update'] = function(_0x5202a5) {
                this['action'] = _0x5202a5;
            };
            break;
    }
}

function World(_0x23fa1d) {
    this['mode'] = WORLD['MODE_PVP'], this['max_units'] = _0x23fa1d, this['custom_map'] = 0x0, this['islands'] = 0x6, this['players'] = [], this['units'] = [], this['units'][ITEMS['PLAYERS']] = [], this['units'][ITEMS['FRUIT']] = [], this['units'][ITEMS['RABBIT']] = [], this['units'][ITEMS['WOLF']] = [], this['units'][ITEMS['CRAB']] = [], this['units'][ITEMS['BOAR']] = [], this['units'][ITEMS['BABY_MAMMOTH']] = [], this['units'][ITEMS['CRAB_BOSS']] = [], this['units'][ITEMS['BABY_DRAGON']] = [], this['units'][ITEMS['BABY_LAVA']] = [], this['units'][ITEMS['HAWK']] = [], this['units'][ITEMS['PIRANHA']] = [], this['units'][ITEMS['KRAKEN']] = [], this['units'][ITEMS['FOX']] = [], this['units'][ITEMS['PENGUIN']] = [], this['units'][ITEMS['SPELL']] = [], this['units'][ITEMS['FIREFLY']] = [], this['units'][ITEMS['BEAR']] = [], this['units'][ITEMS['MAMMOTH']] = [], this['units'][ITEMS['DRAGON']] = [], this['units'][ITEMS['LAVA_DRAGON']] = [], this['units'][ITEMS['FLAME']] = [], this['units'][ITEMS['WHEAT_MOB']] = [], this['units'][ITEMS['ALOE_VERA_MOB']] = [], this['units'][ITEMS['PUMPKIN_MOB']] = [], this['units'][ITEMS['GARLIC_MOB']] = [], this['units'][ITEMS['THORNBUSH_MOB']] = [], this['units'][ITEMS['TREASURE_CHEST']] = [], this['units'][ITEMS['DEAD_BOX']] = [], this['units'][ITEMS['CRATE']] = [], this['units'][ITEMS['BREAD_OVEN']] = [], this['units'][ITEMS['SIGN']] = [], this['units'][ITEMS['SPIDER']] = [], this['units'][ITEMS['WORKBENCH']] = [], this['units'][ITEMS['FIRE']] = [], this['units'][ITEMS['BIG_FIRE']] = [], this['units'][ITEMS['SEED']] = [], this['units'][ITEMS['SPIKE']] = [], this['units'][ITEMS['STONE_SPIKE']] = [], this['units'][ITEMS['GOLD_SPIKE']] = [], this['units'][ITEMS['DIAMOND_SPIKE']] = [], this['units'][ITEMS['AMETHYST_SPIKE']] = [], this['units'][ITEMS['REIDITE_SPIKE']] = [], this['units'][ITEMS['WALL']] = [], this['units'][ITEMS['STONE_WALL']] = [], this['units'][ITEMS['GOLD_WALL']] = [], this['units'][ITEMS['DIAMOND_WALL']] = [], this['units'][ITEMS['AMETHYST_WALL']] = [], this['units'][ITEMS['REIDITE_WALL']] = [], this['units'][ITEMS['BED']] = [], this['units'][ITEMS['WOOD_DOOR']] = [], this['units'][ITEMS['STONE_DOOR']] = [], this['units'][ITEMS['GOLD_DOOR']] = [], this['units'][ITEMS['DIAMOND_DOOR']] = [], this['units'][ITEMS['AMETHYST_DOOR']] = [], this['units'][ITEMS['REIDITE_DOOR']] = [], this['units'][ITEMS['WOOD_DOOR_SPIKE']] = [], this['units'][ITEMS['STONE_DOOR_SPIKE']] = [], this['units'][ITEMS['GOLD_DOOR_SPIKE']] = [], this['units'][ITEMS['DIAMOND_DOOR_SPIKE']] = [], this['units'][ITEMS['AMETHYST_DOOR_SPIKE']] = [], this['units'][ITEMS['REIDITE_DOOR_SPIKE']] = [], this['units'][ITEMS['FURNACE']] = [], this['units'][ITEMS['TOTEM']] = [], this['units'][ITEMS['WOOD_TOWER']] = [], this['units'][ITEMS['CHEST']] = [], this['units'][ITEMS['RESURRECTION']] = [], this['units'][ITEMS['EMERALD_MACHINE']] = [], this['units'][ITEMS['BRIDGE']] = [], this['units'][ITEMS['ROOF']] = [], this['units'][ITEMS['PLOT']] = [], this['units'][ITEMS['WHEAT_SEED']] = [], this['units'][ITEMS['ALOE_VERA_SEED']] = [], this['units'][ITEMS['PUMPKIN_SEED']] = [], this['units'][ITEMS['TOMATO_SEED']] = [], this['units'][ITEMS['CARROT_SEED']] = [], this['units'][ITEMS['WATERMELON_SEED']] = [], this['units'][ITEMS['GARLIC_SEED']] = [], this['units'][ITEMS['THORNBUSH_SEED']] = [], this['units'][ITEMS['WINDMILL']] = [], this['units'][ITEMS['EXTRACTOR_MACHINE_STONE']] = [], this['units'][ITEMS['EXTRACTOR_MACHINE_GOLD']] = [], this['units'][ITEMS['EXTRACTOR_MACHINE_DIAMOND']] = [], this['units'][ITEMS['EXTRACTOR_MACHINE_AMETHYST']] = [], this['units'][ITEMS['EXTRACTOR_MACHINE_REIDITE']] = [], this['units'][ITEMS['WELL']] = [], this['units'][ITEMS['GIFT']] = [], this['units'][ITEMS['GARLAND']] = [], this['fast_units'] = [], this['nw'] = 0x104, this['nh'] = 0x104, this['dw'] = 0x64, this['dh'] = 0x64, this['w'] = this['nw'] * this['dw'], this['h'] = this['nh'] * this['dh'], this['RNG'] = new RNG['Random'](), this['biomes'] = [], this['shade'] = new Utils['LinearAnimation'](![], 0x0, 0x1, 0x0, 0x1, 0x1), this['transition'] = ![], this['BIOME'] = [], this['BIOME_FOREST'] = 0x0, this['BIOME_WINTER'] = 0x1, this['BIOME_LAVA'] = 0x2, this['BIOME_DRAGON'] = 0x3, this['BIOME_SEA'] = 0x4, this['BIOME_DESERT'] = 0xa, this['BIOME'][this['BIOME_FOREST']] = {
        'isSand': 0x1,
        'day': [0x13, 0x3a, 0x2b],
        'night': [0x4, 0x2b, 0x30],
        '_color': ['#133a2b', '#042b30']
    }, this['BIOME'][this['BIOME_SEA']] = {
        'isSand': 0x0,
        'day': [0xb, 0x6a, 0x84],
        'night': [0x9, 0x37, 0x3f],
        '_color': ['#0B6A84', '#09373F']
    }, this['BIOME'][this['BIOME_WINTER']] = {
        'isSand': 0x0,
        'day': [0xeb, 0xf2, 0xf0],
        'night': [0x13, 0x61, 0x67],
        '_color': ['#EBF2F0', '#136167']
    }, this['BIOME'][this['BIOME_LAVA']] = {
        'isSand': 0x0,
        'day': [0x2d, 0x20, 0x17],
        'night': [0x3, 0x1c, 0x1e],
        '_color': ['#2D2017', '#031C1E']
    }, this['BIOME'][this['BIOME_DRAGON']] = {
        'isSand': 0x0,
        'day': [0x4a, 0x4a, 0x4a],
        'night': [0x18, 0x3d, 0x3c],
        '_color': ['#4A4A4A', '#183D3C']
    }, this['BIOME'][this['BIOME_DESERT']] = {
        'isSand': 0x0,
        'day': [0xeb, 0xd8, 0xa6],
        'night': [0x9, 0x3d, 0x38],
        '_color': ['#EBD8A6', '#093D38']
    }, this['Biome'] = function(_0x21c50c, _0x441364, _0x3e09a7, _0x383d01, _0x38ea8d, _0x3c2391) {
        this['x1'] = _0x441364 * 0x64, this['y1'] = _0x3e09a7 * 0x64, this['w'] = _0x383d01 * 0x64, this['h'] = _0x38ea8d * 0x64, this['x2'] = (_0x441364 + _0x383d01) * 0x64, this['y2'] = (_0x3e09a7 + _0x38ea8d) * 0x64, this['t'] = _0x21c50c;
        if (_0x3c2391 === undefined) this['v'] = 0xf;
        else this['v'] = _0x3c2391;
    };

    function _0x1ad15f(_0x4f8f4a, _0x45bfe6, _0x14e4c7, _0x16d2c5, _0x2edd2e) {
        var _0x3d77bc = _0x45bfe6 + Math['floor'](world['RNG']['get']() * _0x16d2c5),
            _0x36b14d = _0x14e4c7 + Math['floor'](world['RNG']['get']() * _0x16d2c5),
            _0x3419c0 = 0xa + Math['floor'](world['RNG']['get']() * (world['nw'] - _0x3d77bc - 0x14)),
            _0x306f47 = 0xa + Math['floor'](world['RNG']['get']() * (world['nh'] - _0x36b14d - 0x14)),
            _0x549b55 = _0x3419c0 + _0x3d77bc,
            _0x26a609 = _0x306f47 + _0x36b14d;
        for (var _0xaffd33 = 0x0; _0xaffd33 < world['biomes']['length']; _0xaffd33++) {
            var _0x3b55fd = world['biomes'][_0xaffd33];
            if (Utils['intersect_aabb'](_0x3419c0, _0x549b55, _0x306f47, _0x26a609, _0x3b55fd['x1'] / 0x64 - _0x2edd2e, _0x3b55fd['x2'] / 0x64 + _0x2edd2e, _0x3b55fd['y1'] / 0x64 - _0x2edd2e, _0x3b55fd['y2'] / 0x64 + _0x2edd2e) === 0x1) return 0x0;
        }
        return world['biomes']['push'](new world['Biome'](_0x4f8f4a, _0x3419c0, _0x306f47, _0x3d77bc, _0x36b14d, 0xf)), 0x1;
    };

    function _0x32a37f(_0x3c13c3, _0x420737, _0x5240e5) {
        var _0x14e8df = 0x0,
            _0x78b3a1 = _0x420737;
        for (var _0x53dccf = _0x5240e5; _0x53dccf < world['nh']; _0x53dccf++) {
            for (var _0x474044 = _0x420737; _0x474044 < world['nw']; _0x474044++) {
                if (_0x53dccf === _0x5240e5) _0x78b3a1 = Math['max'](_0x474044, _0x78b3a1);
                if (_0x474044 > _0x78b3a1) break;
                if (_0x3c13c3[_0x53dccf][_0x474044] === 0x1) break;
                _0x3c13c3[_0x53dccf][_0x474044] = 0x1;
            }
            if (_0x474044 < _0x78b3a1) break;
        }
        world['biomes']['push'](new world['Biome'](world['BIOME_SEA'], _0x420737, _0x5240e5, _0x78b3a1 - _0x420737 + 0x1, _0x53dccf - _0x5240e5, 0xf));
    };

    function _0x2c062a(_0x1db3f5, _0x47093a, _0x51821c, _0x456da5, _0x31c6f2) {
        for (var _0x54b4ee = 0x0; _0x54b4ee < _0x31c6f2; _0x54b4ee++) {
            if (_0x1ad15f(_0x1db3f5, _0x47093a, _0x51821c, _0x456da5, 0x8) === 0x1) break;
        }
        if (_0x54b4ee === _0x31c6f2) return 0x0;
        return 0x1;
    };
    this['MAX_DIST'] = -0xf4240, this['dist_winter'] = this['MAX_DIST'], this['dist_desert'] = this['MAX_DIST'], this['dist_lava'] = this['MAX_DIST'], this['dist_forest'] = this['MAX_DIST'], this['dist_water'] = this['MAX_DIST'], this['dist_dragon'] = this['MAX_DIST'], this['dist_from_biomes'] = function(_0x38499b) {
        var _0x188ef0 = _0x38499b['r']['x'],
            _0x461307 = _0x38499b['r']['y'],
            _0x4704cd = Math['floor'](_0x461307 / 0x64),
            _0x414346 = Math['floor'](_0x188ef0 / 0x64);
        _0x38499b['dist_winter'] = world['MAX_DIST'], _0x38499b['dist_desert'] = world['MAX_DIST'], _0x38499b['dist_lava'] = world['MAX_DIST'], _0x38499b['dist_forest'] = world['MAX_DIST'], _0x38499b['dist_dragon'] = world['MAX_DIST'], _0x38499b['dist_sand'] = world['MAX_DIST'];
        for (var _0x3f8ce6 = 0x0; world['biomes'][_0x3f8ce6]['t'] !== world['BIOME_SEA']; _0x3f8ce6++) {
            if (world['biomes'][_0x3f8ce6]['t'] === world['BIOME_FOREST']) {
                var _0x382645 = world['dist_from_biome'](_0x3f8ce6, _0x188ef0, _0x461307);
                _0x38499b['dist_forest'] = Math['max'](_0x38499b['dist_forest'], _0x382645);
                if (_0x382645 > 0x0 && world['dist_from_sand'](_0x3f8ce6, _0x188ef0, _0x461307) === 0x1) _0x38499b['dist_sand'] = 0x1;
            } else {
                if (world['biomes'][_0x3f8ce6]['t'] === world['BIOME_WINTER']) _0x38499b['dist_winter'] = Math['max'](_0x38499b['dist_winter'], world['dist_from_biome'](_0x3f8ce6, _0x188ef0, _0x461307));
                else {
                    if (world['biomes'][_0x3f8ce6]['t'] === world['BIOME_DESERT']) _0x38499b['dist_desert'] = Math['max'](_0x38499b['dist_desert'], world['dist_from_biome'](_0x3f8ce6, _0x188ef0, _0x461307));
                    else {
                        if (world['biomes'][_0x3f8ce6]['t'] === world['BIOME_LAVA']) _0x38499b['dist_lava'] = Math['max'](_0x38499b['dist_lava'], world['dist_from_biome'](_0x3f8ce6, _0x188ef0, _0x461307));
                        else world['biomes'][_0x3f8ce6]['t'] === world['BIOME_DRAGON'] && (_0x38499b['dist_dragon'] = Math['max'](_0x38499b['dist_dragon'], world['dist_from_biome'](_0x3f8ce6, _0x188ef0, _0x461307)));
                    }
                }
            }
        }
        MAP['tiles'][_0x4704cd][_0x414346]['iblk'] && (_0x38499b['dist_sand'] = 0x1);
        if (world['find_bridge'](_0x414346, _0x4704cd)) _0x38499b['dist_water'] = _0x38499b['MAX_DIST'];
        else {
            if (MAP['tiles'][_0x4704cd][_0x414346]['wtb'] || _0x38499b['dist_winter'] < 0x0 && _0x38499b['dist_lava'] < 0x0 && _0x38499b['dist_forest'] < 0x0 && _0x38499b['dist_sand'] < 0x0 && _0x38499b['dist_dragon'] < 0x0 && _0x38499b['dist_desert'] < 0x0) _0x38499b['dist_water'] = 0x1;
            else _0x38499b['dist_water'] = _0x38499b['MAX_DIST'];
        }
    }, this['update_dist_from_biomes'] = function(_0x2617ff, _0x5568ec) {
        world['dist_winter'] = world['MAX_DIST'], world['dist_desert'] = world['MAX_DIST'], world['dist_lava'] = world['MAX_DIST'], world['dist_dragon'] = world['MAX_DIST'], world['dist_forest'] = world['MAX_DIST'];
        for (var _0x49d232 = 0x0; world['biomes'][_0x49d232]['t'] !== world['BIOME_SEA']; _0x49d232++) {
            if (world['biomes'][_0x49d232]['t'] === world['BIOME_FOREST']) world['dist_forest'] = Math['max'](world['dist_forest'], world['dist_from_biome'](_0x49d232, _0x2617ff, _0x5568ec));
            else {
                if (world['biomes'][_0x49d232]['t'] === world['BIOME_WINTER']) world['dist_winter'] = Math['max'](world['dist_winter'], world['dist_from_biome'](_0x49d232, _0x2617ff, _0x5568ec));
                else {
                    if (world['biomes'][_0x49d232]['t'] === world['BIOME_DESERT']) world['dist_desert'] = Math['max'](world['dist_desert'], world['dist_from_biome'](_0x49d232, _0x2617ff, _0x5568ec));
                    else {
                        if (world['biomes'][_0x49d232]['t'] === world['BIOME_LAVA']) world['dist_lava'] = Math['max'](world['dist_lava'], world['dist_from_biome'](_0x49d232, _0x2617ff, _0x5568ec));
                        else {
                            if (world['biomes'][_0x49d232]['t'] === world['BIOME_DRAGON']) world['dist_dragon'] = Math['max'](world['dist_dragon'], world['dist_from_biome'](_0x49d232, _0x2617ff, _0x5568ec));
                        }
                    }
                }
            }
        }
        if (world['dist_winter'] < 0x0 && world['dist_dragon'] < 0x0 && world['dist_forest'] < 0x0 && world['dist_dragon'] < 0x0 && world['dist_desert'] < 0x0) world['dist_water'] = 0x1;
        else world['dist_water'] = world['MAX_DIST'];
    }, this['dist_from_sand'] = function(_0x2a0eb4, _0x2c5f62, _0x467f97) {
        var _0x761ada = world['biomes'][_0x2a0eb4],
            _0x47a701 = 0x0;
        x1 = _0x761ada['x1'] + 0x1e + ((_0x761ada['v'] & WORLD['LEFT']) === 0x0 ? 0x96 : 0x0);
        var _0x5a7165 = _0x2c5f62 - x1;
        if ((_0x761ada['v'] & WORLD['LEFT']) > 0x0 && _0x5a7165 > 0x0 && _0x5a7165 < 0x140) _0x47a701 = 0x1;
        y1 = _0x761ada['y1'] + 0xfa + ((_0x761ada['v'] & WORLD['TOP']) === 0x0 ? 0x96 : 0x0), _0x5a7165 = _0x467f97 - y1;
        if ((_0x761ada['v'] & WORLD['TOP']) > 0x0 && _0x5a7165 > 0x0 && _0x5a7165 < 0x140) _0x47a701 = 0x1;
        x2 = _0x761ada['x2'] + 0x50 + ((_0x761ada['v'] & WORLD['RIGHT']) === 0x0 ? -0xc8 : 0x0), _0x5a7165 = x2 - _0x2c5f62;
        if ((_0x761ada['v'] & WORLD['RIGHT']) > 0x0 && _0x5a7165 > 0x0 && _0x5a7165 < 0x140) _0x47a701 = 0x1;
        y2 = _0x761ada['y2'] - 0xc8 + ((_0x761ada['v'] & WORLD['BOTTOM']) === 0x0 ? -0xc8 : 0x0), _0x5a7165 = y2 - _0x467f97;
        if ((_0x761ada['v'] & WORLD['BOTTOM']) > 0x0 && _0x5a7165 > 0x0 && _0x5a7165 < 0x140) _0x47a701 = 0x1;
        if (_0x2c5f62 >= x1 && _0x2c5f62 <= x2 && _0x467f97 >= y1 && _0x467f97 <= y2) return _0x47a701;
        return 0x0;
    }, this['dist_from_biome'] = function(_0x40af0c, _0x4ec4c5, _0x71b184) {
        var _0xaab8bf = world['biomes'][_0x40af0c];
        x1 = _0xaab8bf['x1'] + 0x1e, y1 = _0xaab8bf['y1'] + 0xfa, x2 = _0xaab8bf['x2'] + 0x50, y2 = _0xaab8bf['y2'] - 0xc8;
        if (_0x4ec4c5 >= x1 && _0x4ec4c5 <= x2 && _0x71b184 >= y1 && _0x71b184 <= y2) return Math['min'](_0x4ec4c5 - x1, x2 - _0x4ec4c5, _0x71b184 - y1, y2 - _0x71b184);
        var _0x2c5c91 = -0xf4240;
        if (_0x4ec4c5 - x1 < 0x0) _0x2c5c91 = Math['max'](_0x2c5c91, _0x4ec4c5 - x1);
        else {
            if (x2 - _0x4ec4c5 < 0x0) _0x2c5c91 = Math['max'](_0x2c5c91, x2 - _0x4ec4c5);
        }
        distY = -0xf4240;
        if (_0x71b184 < y1 || _0x71b184 > y2) {
            if (_0x71b184 - y1 < 0x0) distY = Math['max'](distY, _0x71b184 - y1);
            else distY = Math['max'](distY, y2 - _0x71b184);
            if (_0x2c5c91 !== -0xf4240 && distY !== -0xf4240) _0x2c5c91 = Math['min'](_0x2c5c91, distY);
            else _0x2c5c91 = distY;
        }
        return _0x2c5c91;
    };

    function _0x7162da(_0x45be32, _0xace261) {
        var _0x39537b = world['biomes'][_0xace261];
        for (var _0x19f851 = 0x0, _0x3a43f6 = 0x0; _0x19f851 < _0x45be32 && _0x3a43f6 < 0x2710; _0x3a43f6++) {
            var _0x4aaaa8 = _0x39537b['y1'] + world['RNG']['get']() * _0x39537b['h'],
                _0x594dd9 = _0x39537b['x1'] + world['RNG']['get']() * _0x39537b['w'],
                _0x2a51b8 = Math['floor'](_0x4aaaa8 / 0x64),
                _0x24b5df = Math['floor'](_0x594dd9 / 0x64),
                _0x481420 = world['dist_from_biome'](_0xace261, _0x24b5df * 0x64 + 0x32, _0x2a51b8 * 0x64 + 0x32);
            if (_0x481420 < 0x258) continue;
            var _0x376dc7 = 0x1;
            for (var _0x3f734c = _0x2a51b8 - 0x4; _0x376dc7 === 0x1 && _0x3f734c <= _0x2a51b8 + 0x4; _0x3f734c++) {
                for (var _0x59608f = _0x24b5df - 0x4; _0x376dc7 === 0x1 && _0x59608f <= _0x24b5df + 0x4; _0x59608f++) {
                    if (MAP['tiles'][_0x3f734c][_0x59608f] !== undefined) _0x376dc7 = 0x0;
                }
            }
            if (_0x376dc7 === 0x0) continue;
            _0x9e081c(_0x2a51b8, _0x24b5df, 'la', _0x19f851 % 0x6, 0x0), _0x19f851++;
        }
    }

    function _0xdd9949(_0x3ad51a, _0x1be596, _0x336c45, _0x4aa55d, _0x44d0fd, _0x5a3540, _0x26c5d9, _0x3abbd0) {
        var _0x5f06f5 = Math['floor'](_0x26c5d9 / 0x2),
            _0x24d8b1 = Math['max'](0x1, Math['floor'](_0x26c5d9 / 0x2)),
            _0x2e6489 = Math['floor'](_0x3abbd0 / 0x2),
            _0xb53bd1 = Math['max'](0x1, Math['floor'](_0x3abbd0 / 0x2));
        for (var _0x569757 = 0x0; _0x569757 < _0x336c45; _0x569757++) {
            for (var _0xf09319 = _0x3ad51a - _0x2e6489; _0xf09319 < _0x3ad51a + _0xb53bd1; _0xf09319++) {
                for (var _0xe387ad = _0x1be596 - _0x5f06f5; _0xe387ad < _0x1be596 + _0x24d8b1; _0xe387ad++) {
                    if (_0x9e081c(_0xf09319, _0xe387ad, 'wtb', 0x0, 0x1) === 0x1) _0x5a3540['push']([_0xf09319, _0xe387ad, 0x1]);
                }
            }
            _0x3ad51a += _0x4aa55d, _0x1be596 += _0x44d0fd;
        }
    };

    function _0x431e5e(_0x48ccfb, _0x2d0c41) {
        var _0x390a47 = world['biomes'][_0x48ccfb],
            _0xfa0d71 = Math['floor'](_0x390a47['y1'] / 0x64),
            _0x53dced = Math['floor'](_0x390a47['x1'] / 0x64),
            _0x230c8e = Math['floor'](_0x390a47['h'] / 0x64),
            _0x2c2831 = Math['floor'](_0x390a47['w'] / 0x64),
            _0x998c14 = _0xfa0d71 + Math['floor'](_0x230c8e / 0x2),
            _0x30dbac = _0x53dced + Math['floor'](_0x2c2831 / 0x2);
        for (var _0x5537d9 = 0x0; _0x5537d9 < 0x3; _0x5537d9++) {
            var _0x2cd055 = Math['floor'](_0x998c14 - 0x3 + world['RNG']['get']() * 0x6),
                _0x48c626 = Math['floor'](_0x30dbac - 0x3 + world['RNG']['get']() * 0x6);
            _0x9e081c(_0x2cd055, _0x48c626, 'plm', _0x5537d9, 0x1);
        }
        for (var _0x5537d9 = 0x0; _0x5537d9 < 0x50; _0x5537d9++) {
            var _0x2cd055 = Math['floor'](_0x998c14 - 0x3 + world['RNG']['get']() * 0x6),
                _0x48c626 = Math['floor'](_0x30dbac - 0x3 + world['RNG']['get']() * 0x6);
            if (_0x9e081c(_0x2cd055, _0x48c626, 'wtb', 0x0, 0x1) === 0x1) _0x2d0c41['push']([_0x2cd055, _0x48c626, 0x0]);
        }
    };

    function _0x3c66cf(_0x812b65, _0x45efe1) {
        var _0xbb1f74 = world['biomes'][_0x812b65],
            _0x586ba6 = Math['floor'](_0xbb1f74['y1'] / 0x64),
            _0x24ca23 = Math['floor'](_0xbb1f74['x1'] / 0x64),
            _0x200b61 = Math['floor'](_0xbb1f74['h'] / 0x64),
            _0x18ac28 = Math['floor'](_0xbb1f74['w'] / 0x64),
            _0x24e605 = _0x586ba6 + _0x200b61,
            _0x15d71b = _0x24ca23 + _0x18ac28,
            _0x6cc1b1 = 0x2,
            _0x4ac543 = _0x200b61,
            _0x13e0c2 = _0x586ba6,
            _0x1dc894 = _0x24ca23 + 0xa + Math['floor']((_0x18ac28 - 0x14) * world['RNG']['get']());
        for (var _0x14832e = _0x1dc894 - 0x4; _0x14832e < _0x1dc894 + 0x4; _0x14832e++) _0x9e081c(_0x586ba6 - 0x1, _0x14832e, 'wtb', 0x0, 0x1);
        while (_0x4ac543 > 0x0) {
            if (_0x6cc1b1 === 0x2) {
                for (var _0x71193d = 0xa; _0x71193d > 0x1; _0x71193d--) {
                    _0xdd9949(_0x13e0c2, _0x1dc894, 0x1, 0x1, 0x0, _0x45efe1, _0x71193d, 0x1), _0x4ac543 -= 0x1, _0x13e0c2 += 0x1;
                }
                _0x6cc1b1 = 0x0;
                continue;
            }
            if (_0x4ac543 < 0xa) {
                for (var _0x71193d = 0x1; _0x4ac543 > 0x0; _0x71193d++) {
                    _0xdd9949(_0x13e0c2, _0x1dc894, 0x1, 0x1, 0x0, _0x45efe1, _0x71193d, 0x1), _0x4ac543 -= 0x1, _0x13e0c2 += 0x1;
                }
                continue;
            }
            if (_0x6cc1b1 === 0x1) {
                var _0x316d25 = Math['min'](_0x4ac543, Math['floor'](0x1 + 0x4 * world['RNG']['get']())),
                    _0x18ac28 = 0x1 + Math['floor'](world['RNG']['get']() * 0x4);
                _0xdd9949(_0x13e0c2, _0x1dc894, _0x316d25, 0x1, 0x0, _0x45efe1, _0x18ac28, _0x18ac28), _0x6cc1b1 = 0x0, _0x4ac543 -= _0x316d25, _0x13e0c2 += _0x316d25;
                continue;
            }
            _0x6cc1b1 = 0x1;
            var _0x22078a = Math['floor'](0x1 + 0x2 * world['RNG']['get']()),
                _0x2b83b4 = 0x1 + Math['floor'](world['RNG']['get']() * 0x4);
            if (_0x1dc894 < _0x24ca23 + 0x10) _0xdd9949(_0x13e0c2, _0x1dc894, _0x22078a, 0x0, 0x1, _0x45efe1, _0x2b83b4, _0x2b83b4), _0x1dc894 += _0x22078a;
            else {
                if (_0x1dc894 > _0x15d71b - 0x10) _0xdd9949(_0x13e0c2, _0x1dc894, _0x22078a, 0x0, -0x1, _0x45efe1, _0x2b83b4, _0x2b83b4), _0x1dc894 -= _0x22078a;
                else world['RNG']['get']() > 0.5 ? (_0xdd9949(_0x13e0c2, _0x1dc894, _0x22078a, 0x0, 0x1, _0x45efe1, _0x2b83b4, _0x2b83b4), _0x1dc894 += _0x22078a) : (_0xdd9949(_0x13e0c2, _0x1dc894, _0x22078a, 0x0, -0x1, _0x45efe1, _0x2b83b4, _0x2b83b4), _0x1dc894 -= _0x22078a);
            }
        }
        for (var _0x14832e = _0x1dc894 - 0x1; _0x14832e < _0x1dc894 + 0x2; _0x14832e++) _0x9e081c(_0x13e0c2, _0x14832e, 'wtb', 0x0, 0x1);
    }

    function _0x4621de(_0x2acd9b, _0xc2f6fe) {
        for (var _0x1220ba = 0x0; _0x1220ba < _0xc2f6fe['length']; _0x1220ba++) {
            var _0x124a2a = _0xc2f6fe[_0x1220ba][0x0],
                _0xb4452f = _0xc2f6fe[_0x1220ba][0x1],
                _0x347094 = _0xc2f6fe[_0x1220ba][0x2];
            _0x3195d7(_0x124a2a, _0xb4452f, _0x2acd9b, _0x347094);
        }
    };
    this['add_island'] = function(_0x1b0007, _0xea094b, _0x349c12) {
        var _0x69c11 = _0x349c12,
            _0x5605ea = _0xea094b;
        _0x9e081c(_0x69c11, _0x5605ea, 'isl', _0x1b0007, 0x1);
        for (var _0x19877b = 0x0; _0x19877b < 0x4; _0x19877b++) {
            for (var _0xa1869f = 0x0; _0xa1869f < 0x3; _0xa1869f++) {
                _0x9e081c(_0x69c11 - _0xa1869f, _0x5605ea - _0x19877b, 'iblk', 0x0), _0x9e081c(_0x69c11 + _0xa1869f, _0x5605ea - _0x19877b, 'iblk', 0x0), _0x9e081c(_0x69c11 + _0xa1869f, _0x5605ea + _0x19877b, 'iblk', 0x0), _0x9e081c(_0x69c11 - _0xa1869f, _0x5605ea + _0x19877b, 'iblk', 0x0);
            }
        }
        if (_0x1b0007 === 0x0) {
            for (var _0x19877b = 0x0; _0x19877b < 0x2; _0x19877b++) {
                _0x9e081c(_0x69c11 - _0x19877b, _0x5605ea - 0x4, 'iblk', 0x0), _0x9e081c(_0x69c11 + _0x19877b, _0x5605ea - 0x4, 'iblk', 0x0), _0x9e081c(_0x69c11 - _0x19877b, _0x5605ea + 0x4, 'iblk', 0x0), _0x9e081c(_0x69c11 + _0x19877b, _0x5605ea + 0x4, 'iblk', 0x0);
            }
            for (var _0x19877b = 0x0; _0x19877b < 0x3; _0x19877b++) {
                _0x9e081c(_0x69c11 - 0x3, _0x5605ea + _0x19877b, 'iblk', 0x0), _0x9e081c(_0x69c11 + 0x3, _0x5605ea + _0x19877b, 'iblk', 0x0), _0x9e081c(_0x69c11 - 0x3, _0x5605ea - _0x19877b, 'iblk', 0x0), _0x9e081c(_0x69c11 + 0x3, _0x5605ea - _0x19877b, 'iblk', 0x0);
            }
            _0x9e081c(_0x69c11 - 0x2, _0x5605ea - 0x4, 'iblk', 0x0), _0x9e081c(_0x69c11 - 0x3, _0x5605ea - 0x3, 'iblk', 0x0), _0x9e081c(_0x69c11 + 0x2, _0x5605ea + 0x4, 'iblk', 0x0), _0x9e081c(_0x69c11 + 0x3, _0x5605ea + 0x3, 'iblk', 0x0);
        } else {
            if (_0x1b0007 === 0x1) {
                for (var _0x19877b = 0x0; _0x19877b < 0x3; _0x19877b++) {
                    _0x9e081c(_0x69c11 - _0x19877b, _0x5605ea - 0x4, 'iblk', 0x0), _0x9e081c(_0x69c11 + _0x19877b, _0x5605ea - 0x4, 'iblk', 0x0), _0x9e081c(_0x69c11 - _0x19877b, _0x5605ea + 0x4, 'iblk', 0x0), _0x9e081c(_0x69c11 + _0x19877b, _0x5605ea + 0x4, 'iblk', 0x0);
                }
                for (var _0x19877b = 0x0; _0x19877b < 0x4; _0x19877b++) {
                    _0x9e081c(_0x69c11 - 0x3, _0x5605ea + _0x19877b, 'iblk', 0x0), _0x9e081c(_0x69c11 + 0x3, _0x5605ea + _0x19877b, 'iblk', 0x0), _0x9e081c(_0x69c11 - 0x3, _0x5605ea - _0x19877b, 'iblk', 0x0), _0x9e081c(_0x69c11 + 0x3, _0x5605ea - _0x19877b, 'iblk', 0x0);
                }
            } else {
                if (_0x1b0007 === 0x2) {
                    for (var _0x19877b = 0x0; _0x19877b < 0x2; _0x19877b++) {
                        _0x9e081c(_0x69c11 - _0x19877b, _0x5605ea - 0x4, 'iblk', 0x0), _0x9e081c(_0x69c11 + _0x19877b, _0x5605ea - 0x4, 'iblk', 0x0), _0x9e081c(_0x69c11 - _0x19877b, _0x5605ea + 0x4, 'iblk', 0x0), _0x9e081c(_0x69c11 + _0x19877b, _0x5605ea + 0x4, 'iblk', 0x0);
                    }
                    for (var _0x19877b = 0x0; _0x19877b < 0x3; _0x19877b++) {
                        _0x9e081c(_0x69c11 - 0x3, _0x5605ea + _0x19877b, 'iblk', 0x0), _0x9e081c(_0x69c11 + 0x3, _0x5605ea + _0x19877b, 'iblk', 0x0), _0x9e081c(_0x69c11 - 0x3, _0x5605ea - _0x19877b, 'iblk', 0x0), _0x9e081c(_0x69c11 + 0x3, _0x5605ea - _0x19877b, 'iblk', 0x0);
                    }
                }
            }
        }
    }, this['add_islands'] = function(_0x2be188) {
        for (var _0x4f8475 = 0x0; _0x4f8475 < world['biomes']['length'] && _0x2be188 > 0x0; _0x4f8475++) {
            var _0xe330f9 = world['biomes'][_0x4f8475];
            if (_0xe330f9['t'] !== world['BIOME_SEA']) continue;
            if (_0xe330f9['w'] > 0x708 && _0xe330f9['h'] > 0x3e8) {
                var _0x23497a = Math['floor']((_0xe330f9['x1'] + _0xe330f9['w'] / 0x2) / 0x64),
                    _0x50f720 = Math['floor']((_0xe330f9['y1'] + _0xe330f9['h'] / 0x2) / 0x64);
                world['add_island'](_0x2be188 % 0x3, _0x23497a, _0x50f720);
                for (var _0xb4f7c2 = 0x0; _0xb4f7c2 < 0x3; _0xb4f7c2++) {
                    var _0x42b3ac = _0x50f720 - 0x2 + Math['floor'](world['RNG']['get']() * 0x4),
                        _0x3eb498 = _0x23497a - 0x3 + Math['floor'](world['RNG']['get']() * 0x6);
                    if (MAP['tiles'][_0x42b3ac][_0x3eb498]['s'] === undefined) _0x9e081c(_0x42b3ac, _0x3eb498, 'plm', _0xb4f7c2);
                    var _0x42b3ac = _0x50f720 - 0x2 + Math['floor'](world['RNG']['get']() * 0x4),
                        _0x3eb498 = _0x23497a - 0x3 + Math['floor'](world['RNG']['get']() * 0x6);
                    if (MAP['tiles'][_0x42b3ac][_0x3eb498]['plm'] === undefined) _0x9e081c(_0x42b3ac, _0x3eb498, 's', _0xb4f7c2);
                }
                var _0x42b3ac = _0x50f720 - 0x2 + Math['floor'](world['RNG']['get']() * 0x4),
                    _0x3eb498 = _0x23497a - 0x3 + Math['floor'](world['RNG']['get']() * 0x6);
                if (MAP['tiles'][_0x42b3ac][_0x3eb498]['plm'] === undefined && MAP['tiles'][_0x42b3ac][_0x3eb498]['s'] === undefined) _0x9e081c(_0x42b3ac, _0x3eb498, 'p', 0x0, 0x1);
                _0x2be188--;
            }
        }
    }, this['generate_world'] = function(_0x5b5742) {
        world['RNG']['init'](_0x5b5742);
        var _0x5cd542 = 0x0;
        while (0x1) {
            _0x5cd542++;
            if (_0x5cd542 > 0x2710) return;
            world['biomes'] = [];
            if (world['custom_map'] === 0x0 && (world['mode'] === WORLD['MODE_VAMPIRES'] || world['mode'] === WORLD['MODE_EXPERIMENTAL'] || world['mode'] === WORLD['MODE_PVP'])) world['custom_map'] = ___MAP___;
            if (world['mode'] === WORLD['MODE_ZOMBIES']) world['biomes']['push'](new world['Biome'](world['BIOME_FOREST'], 0x2, 0x2, 0x50, 0x50, 0xf));
            else {
                if (world['mode'] === WORLD['MODE_LEGACY']) world['biomes']['push'](new world['Biome'](world['BIOME_FOREST'], 0x2, 0x2, 0x96, 0x96, 0xf));
                else {
                    if (world['custom_map'] !== 0x0 && world['custom_map']['length'] > 0x0 && world['custom_map'][0x0]['length'] > 0x3)
                        for (var _0x1ea02f = 0x0; _0x1ea02f < world['custom_map']['length']; _0x1ea02f++) {
                            var _0x53a9a2 = world['custom_map'][_0x1ea02f];
                            if (_0x53a9a2[0x0] === 0x0) {
                                var _0x332476 = WORLD['BIOME_FOREST'];
                                switch (_0x53a9a2[0x1]) {
                                    case 'FOREST':
                                        _0x332476 = world['BIOME_FOREST'];
                                        break;
                                    case 'WINTER':
                                        _0x332476 = world['BIOME_WINTER'];
                                        break;
                                    case 'DESERT':
                                        _0x332476 = world['BIOME_DESERT'];
                                        break;
                                    case 'LAVA':
                                        _0x332476 = world['BIOME_LAVA'];
                                        break;
                                    case 'DRAGON':
                                        _0x332476 = world['BIOME_DRAGON'];
                                        break;
                                }
                                world['biomes']['push'](new world['Biome'](_0x332476, _0x53a9a2[0x2], _0x53a9a2[0x3], _0x53a9a2[0x4], _0x53a9a2[0x5], _0x53a9a2[0x6], _0x53a9a2[0x7]));
                                continue;
                            } else break;
                        } else {
                            if (world['custom_map'] !== 0x0) {
                                for (var _0x1ea02f = 0x0; _0x1ea02f < world['custom_map']['length']; _0x1ea02f++) {
                                    var _0x595711 = world['custom_map'][_0x1ea02f],
                                        _0x332476 = WORLD['BIOME_FOREST'];
                                    switch (_0x595711[0x0]) {
                                        case 'FOREST':
                                            _0x332476 = world['BIOME_FOREST'];
                                            break;
                                        case 'WINTER':
                                            _0x332476 = world['BIOME_WINTER'];
                                            break;
                                        case 'DESERT':
                                            _0x332476 = world['BIOME_DESERT'];
                                            break;
                                        case 'LAVA':
                                            _0x332476 = world['BIOME_LAVA'];
                                            break;
                                        case 'DRAGON':
                                            _0x332476 = world['BIOME_DRAGON'];
                                            break;
                                    }
                                    if (_0x2c062a(_0x332476, _0x595711[0x1], _0x595711[0x2], 0x0, (_0x1ea02f + 0x1) * 0xa) === 0x0) break;
                                }
                                if (_0x1ea02f !== world['custom_map']['length']) continue;
                            }
                        }
                }
            }
            break;
        }
        render_minimap();
        var _0x3a419c = [];
        for (var _0xbaa18e = 0x0; _0xbaa18e < world['nh']; _0xbaa18e++) {
            _0x3a419c[_0xbaa18e] = new Array(world['nw']);
            for (var _0x461360 = 0x0; _0x461360 < world['nw']; _0x461360++) _0x3a419c[_0xbaa18e][_0x461360] = 0x0;
        }
        for (var _0xbaa18e = 0x0; _0xbaa18e < world['biomes']['length']; _0xbaa18e++) {
            var _0x595711 = world['biomes'][_0xbaa18e],
                _0xcd9106 = _0x595711['x2'] / 0x64,
                _0x2b647a = _0x595711['y2'] / 0x64;
            for (var _0x49e9ee = _0x595711['x1'] / 0x64; _0x49e9ee <= _0xcd9106; _0x49e9ee++) {
                for (var _0x123523 = _0x595711['y1'] / 0x64; _0x123523 <= _0x2b647a; _0x123523++) _0x3a419c[_0x123523][_0x49e9ee] = 0x1;
            }
        }
        for (var _0x123523 = 0x0; _0x123523 < world['nh']; _0x123523++) {
            for (var _0x49e9ee = 0x0; _0x49e9ee < world['nw']; _0x49e9ee++) {
                if (_0x3a419c[_0x123523][_0x49e9ee] === 0x0) _0x32a37f(_0x3a419c, _0x49e9ee, _0x123523);
            }
        }
        MAP = {
            'w': world['nw'],
            'h': world['nh'],
            'tiles': []
        };
        for (var _0xbaa18e = 0x0; _0xbaa18e < world['nh']; _0xbaa18e++) MAP['tiles'][_0xbaa18e] = [];
        if (world['custom_map'] !== 0x0 && world['custom_map']['length'] > 0x0 && world['custom_map'][0x0]['length'] > 0x3)
            for (var _0x1ea02f = 0x0; _0x1ea02f < world['custom_map']['length']; _0x1ea02f++) {
                var _0x53a9a2 = world['custom_map'][_0x1ea02f];
                if (_0x53a9a2[0x1] === 'isl') world['add_island'](_0x53a9a2[0x2], _0x53a9a2[0x3], _0x53a9a2[0x4]);
            } else world['add_islands'](world['islands']);
        if (world['custom_map'] !== 0x0 && world['custom_map']['length'] > 0x0 && world['custom_map'][0x0]['length'] > 0x3) {
            var _0x5dcd8 = [];
            for (var _0x1ea02f = 0x0; _0x1ea02f < world['custom_map']['length']; _0x1ea02f++) {
                var _0x53a9a2 = world['custom_map'][_0x1ea02f];
                if (_0x53a9a2[0x0] !== 0x1) continue;
                if (_0x53a9a2[0x1] === 'r') _0x9e081c(_0x53a9a2[0x3], _0x53a9a2[0x2], 'wtb', 0x0, 0x1), _0x5dcd8['push']([_0x53a9a2[0x3], _0x53a9a2[0x2], _0x53a9a2[0x4]]);
                else _0x9e081c(_0x53a9a2[0x4], _0x53a9a2[0x3], _0x53a9a2[0x1], _0x53a9a2[0x2], _0x53a9a2[0x5]);
            }
            _0x4621de(0x0, _0x5dcd8), _0x5dcd8 = [];
        } else
            for (var _0xbaa18e = 0x0; _0xbaa18e < world['biomes']['length']; _0xbaa18e++) {
                var _0x595711 = world['biomes'][_0xbaa18e];
                if (world['mode'] === WORLD['MODE_LEGACY']) {
                    if (_0x595711['t'] === world['BIOME_FOREST']) _0x2864d8(_0xbaa18e, _0x595711['w'] / (0x64 * 0x64));
                } else {
                    if (_0x595711['t'] === world['BIOME_FOREST']) _0xc3a97a(_0xbaa18e, _0x595711['w'] / (0x64 * 0x64));
                    if (_0x595711['t'] === world['BIOME_LAVA']) _0x22a6f7(_0xbaa18e, _0x595711['w'] / (0x64 * 0x64));
                    if (_0x595711['t'] === world['BIOME_WINTER']) _0x1a9d50(_0xbaa18e, _0x595711['w'] / (0x64 * 0x64));
                    if (_0x595711['t'] === world['BIOME_DESERT']) _0x431fc9(_0xbaa18e, _0x595711['w'] / (0x64 * 0x64));
                    if (_0x595711['t'] === world['BIOME_DRAGON']) _0x1df32e(_0xbaa18e);
                }
            }
        render_all_resources_minimap(), world['map_wrapper'](MAP);
    };

    function _0x1df32e(_0x4b4512) {
        for (var _0x5c280e = 0x0; _0x5c280e < 0x3; _0x5c280e++) _0x247c92(_0x4b4512, 's', _0x5c280e, 0xf);
        for (var _0x5c280e = 0x0; _0x5c280e < 0x3; _0x5c280e++) _0x247c92(_0x4b4512, 'a', _0x5c280e, 0x1);
        for (var _0x5c280e = 0x0; _0x5c280e < 0x3; _0x5c280e++) _0x247c92(_0x4b4512, 'd', _0x5c280e, 0x1);
        _0x2c923e(_0x4b4512);
    };

    function _0x1a9d50(_0x3ee7c8, _0x155c00) {
        for (var _0x47e692 = 0x0; _0x47e692 < 0x3; _0x47e692++) _0x247c92(_0x3ee7c8, 's', _0x47e692, Math['floor'](0x12 * _0x155c00));
        for (var _0x47e692 = 0x0; _0x47e692 < 0x3; _0x47e692++) _0x247c92(_0x3ee7c8, 'f', _0x47e692, Math['floor'](0x18 * _0x155c00));
        for (var _0x47e692 = 0x0; _0x47e692 < 0x3; _0x47e692++) _0x247c92(_0x3ee7c8, 'd', _0x47e692, Math['max'](0x1, Math['floor'](0x2 * _0x155c00)), 0.3);
        for (var _0x47e692 = 0x0; _0x47e692 < 0x3; _0x47e692++) _0x247c92(_0x3ee7c8, 'g', _0x47e692, Math['floor'](0x6 * _0x155c00));
        _0x2c923e(_0x3ee7c8);
    }

    function _0x431fc9(_0x9bb32, _0x40172d) {
        for (var _0xcabafb = 0x0; _0xcabafb < 0x3; _0xcabafb++) _0x247c92(_0x9bb32, 's', _0xcabafb, Math['floor'](0xc * _0x40172d));
        for (var _0xcabafb = 0x0; _0xcabafb < 0x3; _0xcabafb++) _0x247c92(_0x9bb32, 'm', _0xcabafb, Math['max'](0x1, Math['floor'](0x1 * _0x40172d)), 0.2);
        _0x247c92(_0x9bb32, 'c', 0x0, Math['floor'](0x24 * _0x40172d));
        var _0x4ddab3 = [];
        _0x431e5e(_0x9bb32, _0x4ddab3), _0x4621de(_0x9bb32, _0x4ddab3), _0x4ddab3 = [];
    };

    function _0x22a6f7(_0x1e509b, _0x41d5e9) {
        _0x7162da(0x50 * _0x41d5e9, _0x1e509b);
        for (var _0x4ba28f = 0x0; _0x4ba28f < 0x3; _0x4ba28f++) _0x247c92(_0x1e509b, 's', _0x4ba28f, Math['floor'](0xc * _0x41d5e9));
        for (var _0x4ba28f = 0x0; _0x4ba28f < 0x3; _0x4ba28f++) _0x247c92(_0x1e509b, 'g', _0x4ba28f, Math['floor'](0x6 * _0x41d5e9));
        for (var _0x4ba28f = 0x0; _0x4ba28f < 0x3; _0x4ba28f++) _0x247c92(_0x1e509b, 're', _0x4ba28f, Math['max'](0x1, Math['floor'](0x1 * _0x41d5e9)), 0.2);
        for (var _0x4ba28f = 0x0; _0x4ba28f < 0x3; _0x4ba28f++) _0x247c92(_0x1e509b, 'a', _0x4ba28f, Math['max'](0x1, Math['floor'](0x2 * _0x41d5e9)));
        _0x2c923e(_0x1e509b);
    }

    function _0x2864d8(_0x5f3ddb, _0x3747a0) {
        for (var _0x1fd6d6 = 0x0; _0x1fd6d6 < 0x6; _0x1fd6d6++) _0x247c92(_0x5f3ddb, 't', _0x1fd6d6, Math['floor'](0x50 * _0x3747a0));
        for (var _0x1fd6d6 = 0x0; _0x1fd6d6 < 0x4; _0x1fd6d6++) _0x247c92(_0x5f3ddb, 'b', _0x1fd6d6, Math['floor'](0x50 * _0x3747a0));
        for (var _0x1fd6d6 = 0x0; _0x1fd6d6 < 0x3; _0x1fd6d6++) _0x247c92(_0x5f3ddb, 's', _0x1fd6d6, Math['floor'](0x32 * _0x3747a0));
        var _0x5f1c00 = [];
        for (var _0x1fd6d6 = 0x0; _0x1fd6d6 < 0x6; _0x1fd6d6++) _0x3c66cf(_0x5f3ddb, _0x5f1c00);
        _0x4621de(_0x5f3ddb, _0x5f1c00), _0x5f1c00 = [], _0x247c92(_0x5f3ddb, 'p', 0x0, Math['floor'](0x1c * _0x3747a0));
        for (var _0x1fd6d6 = 0x0; _0x1fd6d6 < 0x3; _0x1fd6d6++) _0x247c92(_0x5f3ddb, 'g', _0x1fd6d6, Math['floor'](0x7 * _0x3747a0));
        for (var _0x1fd6d6 = 0x0; _0x1fd6d6 < 0x3; _0x1fd6d6++) _0x247c92(_0x5f3ddb, 'd', _0x1fd6d6, Math['floor'](0x2 * _0x3747a0));
        for (var _0x1fd6d6 = 0x0; _0x1fd6d6 < 0x3; _0x1fd6d6++) _0x247c92(_0x5f3ddb, 'a', _0x1fd6d6, Math['floor'](0x1 * _0x3747a0));
        for (var _0x1fd6d6 = 0x0; _0x1fd6d6 < 0x3; _0x1fd6d6++) _0x247c92(_0x5f3ddb, 'm', _0x1fd6d6, Math['floor'](0x1 * _0x3747a0));
        _0x247c92(_0x5f3ddb, 'a', 0x0, Math['floor'](0x1 * _0x3747a0)), _0x2c923e(_0x5f3ddb);
    }

    function _0xc3a97a(_0x40dc82, _0xa9c3a8) {
        for (var _0x16f773 = 0x0; _0x16f773 < 0x6; _0x16f773++) _0x247c92(_0x40dc82, 't', _0x16f773, Math['floor'](0x14 * _0xa9c3a8));
        for (var _0x16f773 = 0x0; _0x16f773 < 0x4; _0x16f773++) _0x247c92(_0x40dc82, 'b', _0x16f773, Math['floor'](0x14 * _0xa9c3a8));
        for (var _0x16f773 = 0x0; _0x16f773 < 0x3; _0x16f773++) _0x247c92(_0x40dc82, 's', _0x16f773, Math['floor'](0x14 * _0xa9c3a8));
        var _0x5af755 = [];
        _0x3c66cf(_0x40dc82, _0x5af755), _0x4621de(_0x40dc82, _0x5af755), _0x5af755 = [], _0x247c92(_0x40dc82, 'p', 0x0, Math['floor'](0x18 * _0xa9c3a8));
        for (var _0x16f773 = 0x0; _0x16f773 < 0x3; _0x16f773++) _0x247c92(_0x40dc82, 'g', _0x16f773, Math['floor'](0x5 * _0xa9c3a8));
        if (world['mode'] === WORLD['MODE_ZOMBIES']) {
            for (var _0x16f773 = 0x0; _0x16f773 < 0x3; _0x16f773++) _0x247c92(_0x40dc82, 'd', _0x16f773, Math['floor'](0x3 * _0xa9c3a8));
            for (var _0x16f773 = 0x0; _0x16f773 < 0x3; _0x16f773++) _0x247c92(_0x40dc82, 'a', _0x16f773, Math['floor'](0x2 * _0xa9c3a8));
        }
        _0x2c923e(_0x40dc82);
    }

    function _0x2c923e(_0x395472) {
        var _0x3c5c3f = world['biomes'][_0x395472];
        _0x9e081c(-0x3 + Math['floor'](_0x3c5c3f['y2'] / 0x64), -0x1 + Math['floor'](_0x3c5c3f['x2'] / 0x64), 's', 0x0, 0x0), _0x9e081c(0x3 + Math['floor'](_0x3c5c3f['y1'] / 0x64), -0x1 + Math['floor'](_0x3c5c3f['x2'] / 0x64), 's', 0x0, 0x0), _0x9e081c(-0x3 + Math['floor'](_0x3c5c3f['y2'] / 0x64), 0x1 + Math['floor'](_0x3c5c3f['x1'] / 0x64), 's', 0x0, 0x0), _0x9e081c(0x3 + Math['floor'](_0x3c5c3f['y1'] / 0x64), 0x1 + Math['floor'](_0x3c5c3f['x1'] / 0x64), 's', 0x0, 0x0);
    };

    function _0x247c92(_0x52033e, _0x5a73c1, _0x18f8b3, _0x5cc6af, _0x1a588f) {
        var _0x15d575 = world['biomes'][_0x52033e],
            _0x4e8cd2 = Math['floor'](_0x15d575['x1'] / 0x64),
            _0x4ba304 = Math['floor'](_0x15d575['y1'] / 0x64),
            _0x20eec0 = Math['floor'](_0x15d575['w'] / 0x64),
            _0x23c3df = Math['floor'](_0x15d575['h'] / 0x64);
        _0x1a588f !== undefined && (_0x1a588f = 0x1 - _0x1a588f, _0x4e8cd2 += Math['floor'](_0x20eec0 * _0x1a588f / 0x2), _0x4ba304 += Math['floor'](_0x23c3df * _0x1a588f / 0x2), _0x20eec0 -= Math['floor'](_0x20eec0 * _0x1a588f), _0x23c3df -= Math['floor'](_0x23c3df * _0x1a588f));
        var _0x51ea08 = MAP['tiles'];
        for (var _0x2a2c95 = 0x0, _0x1ddd09 = 0x0; _0x2a2c95 < _0x5cc6af; _0x1ddd09++) {
            if (_0x1ddd09 > 0xc350) break;
            var _0x3473f3 = _0x4ba304 + Math['floor'](world['RNG']['get']() * _0x23c3df),
                _0x27b614 = _0x4e8cd2 + Math['floor'](world['RNG']['get']() * _0x20eec0),
                _0x5d5f51 = world['dist_from_biome'](_0x52033e, _0x27b614 * 0x64 + 0x32, _0x3473f3 * 0x64 + 0x32);
            if (_0x5d5f51 < 0x190) continue;
            var _0x552a4f = _0x51ea08[_0x3473f3][_0x27b614 + 0x1];
            if (_0x552a4f !== undefined && _0x552a4f[_0x5a73c1] !== undefined && _0x552a4f[_0x5a73c1][_0x18f8b3] !== undefined) continue;
            var _0x552a4f = _0x51ea08[_0x3473f3][_0x27b614 - 0x1];
            if (_0x552a4f !== undefined && _0x552a4f[_0x5a73c1] !== undefined && _0x552a4f[_0x5a73c1][_0x18f8b3] !== undefined) continue;
            var _0x552a4f = _0x51ea08[_0x3473f3 + 0x1][_0x27b614];
            if (_0x552a4f !== undefined && _0x552a4f[_0x5a73c1] !== undefined && _0x552a4f[_0x5a73c1][_0x18f8b3] !== undefined) continue;
            var _0x552a4f = _0x51ea08[_0x3473f3 - 0x1][_0x27b614];
            if (_0x552a4f !== undefined && _0x552a4f[_0x5a73c1] !== undefined && _0x552a4f[_0x5a73c1][_0x18f8b3] !== undefined) continue;
            var _0x552a4f = _0x51ea08[_0x3473f3 + 0x1][_0x27b614 - 0x1];
            if (_0x552a4f !== undefined && _0x552a4f[_0x5a73c1] !== undefined && _0x552a4f[_0x5a73c1][_0x18f8b3] !== undefined) continue;
            var _0x552a4f = _0x51ea08[_0x3473f3 - 0x1][_0x27b614 + 0x1];
            if (_0x552a4f !== undefined && _0x552a4f[_0x5a73c1] !== undefined && _0x552a4f[_0x5a73c1][_0x18f8b3] !== undefined) continue;
            var _0x552a4f = _0x51ea08[_0x3473f3 + 0x1][_0x27b614 + 0x1];
            if (_0x552a4f !== undefined && _0x552a4f[_0x5a73c1] !== undefined && _0x552a4f[_0x5a73c1][_0x18f8b3] !== undefined) continue;
            var _0x552a4f = _0x51ea08[_0x3473f3 - 0x1][_0x27b614 - 0x1];
            if (_0x552a4f !== undefined && _0x552a4f[_0x5a73c1] !== undefined && _0x552a4f[_0x5a73c1][_0x18f8b3] !== undefined) continue;
            _0x51ea08[_0x3473f3][_0x27b614] === undefined && (_0x9e081c(_0x3473f3, _0x27b614, _0x5a73c1, _0x18f8b3, 0x1), _0x2a2c95++);
        }
    };

    function _0x1c7538(_0x5783cd, _0x1c127a) {
        return _0x5783cd >= 0x0 && _0x1c127a >= 0x0 && _0x5783cd < world['nh'] && _0x1c127a < world['nw'];
    };

    function _0x3195d7(_0x2a3906, _0x578418, _0x4a22eb, _0x53072e) {
        if (!_0x1c7538(_0x2a3906, _0x578418)) return;
        tiles = MAP['tiles'];
        if (tiles[_0x2a3906][_0x578418] === undefined) tiles[_0x2a3906][_0x578418] = {};
        if (tiles[_0x2a3906][_0x578418]['r'] !== undefined) return;
        var _0x62c5fc = 0x0;
        if (_0x1c7538(_0x2a3906 - 0x1, _0x578418) && tiles[_0x2a3906 - 0x1][_0x578418] !== undefined && tiles[_0x2a3906 - 0x1][_0x578418]['wtb'] !== undefined) _0x62c5fc += 0x2;
        if (_0x1c7538(_0x2a3906, _0x578418 - 0x1) && tiles[_0x2a3906][_0x578418 - 0x1] !== undefined && tiles[_0x2a3906][_0x578418 - 0x1]['wtb'] !== undefined) _0x62c5fc += 0x8;
        if (_0x1c7538(_0x2a3906, _0x578418 + 0x1) && tiles[_0x2a3906][_0x578418 + 0x1] !== undefined && tiles[_0x2a3906][_0x578418 + 0x1]['wtb'] !== undefined) _0x62c5fc += 0x10;
        if (_0x1c7538(_0x2a3906 + 0x1, _0x578418) && tiles[_0x2a3906 + 0x1][_0x578418] !== undefined && tiles[_0x2a3906 + 0x1][_0x578418]['wtb'] !== undefined) _0x62c5fc += 0x40;
        if (_0x1c7538(_0x2a3906 - 0x1, _0x578418 - 0x1) && (_0x62c5fc & 0x8 + 0x2) === 0x8 + 0x2 && tiles[_0x2a3906 - 0x1][_0x578418 - 0x1] !== undefined && tiles[_0x2a3906 - 0x1][_0x578418 - 0x1]['wtb'] !== undefined) _0x62c5fc += 0x1;
        if (_0x1c7538(_0x2a3906 - 0x1, _0x578418 + 0x1) && (_0x62c5fc & 0x10 + 0x2) === 0x10 + 0x2 && tiles[_0x2a3906 - 0x1][_0x578418 + 0x1] !== undefined && tiles[_0x2a3906 - 0x1][_0x578418 + 0x1]['wtb'] !== undefined) _0x62c5fc += 0x4;
        if (_0x1c7538(_0x2a3906 + 0x1, _0x578418 - 0x1) && (_0x62c5fc & 0x8 + 0x40) === 0x8 + 0x40 && tiles[_0x2a3906 + 0x1][_0x578418 - 0x1] !== undefined && tiles[_0x2a3906 + 0x1][_0x578418 - 0x1]['wtb'] !== undefined) _0x62c5fc += 0x20;
        if (_0x1c7538(_0x2a3906 + 0x1, _0x578418 + 0x1) && (_0x62c5fc & 0x10 + 0x40) === 0x10 + 0x40 && tiles[_0x2a3906 + 0x1][_0x578418 + 0x1] !== undefined && tiles[_0x2a3906 + 0x1][_0x578418 + 0x1]['wtb'] !== undefined) _0x62c5fc += 0x80;
        tiles[_0x2a3906][_0x578418]['r'] = {}, tiles[_0x2a3906][_0x578418]['r']['river'] = _0x62c5fc, tiles[_0x2a3906][_0x578418]['r']['current'] = _0x53072e, tiles[_0x2a3906][_0x578418]['r']['dist'] = world['dist_from_biome'](_0x4a22eb, _0x578418 * 0x64 + 0x32, _0x2a3906 * 0x64 + 0x32) - 0x190, tiles[_0x2a3906][_0x578418]['r']['x'] = _0x578418 * 0x64 + 0x32, tiles[_0x2a3906][_0x578418]['r']['y'] = _0x2a3906 * 0x64 + 0x32;
    };

    function _0x9e081c(_0x389883, _0x3073f5, _0x13c9de, _0x5b0b2b, _0x37d8cb) {
        if (_0x389883 < 0x0 || _0x3073f5 < 0x0 || _0x389883 >= world['nh'] || _0x3073f5 >= world['nw']) return;
        tiles = MAP['tiles'];
        if (tiles[_0x389883][_0x3073f5] === undefined) tiles[_0x389883][_0x3073f5] = {};
        if (tiles[_0x389883][_0x3073f5][_0x13c9de] !== undefined) return 0x0;
        tiles[_0x389883][_0x3073f5][_0x13c9de] = [], tiles[_0x389883][_0x3073f5][_0x13c9de][_0x5b0b2b] = [{
            'x': _0x3073f5 * 0x64 + 0x32,
            'y': _0x389883 * 0x64 + 0x32
        }];
        if (_0x37d8cb === 0x1) add_resource_minimap(_0x13c9de, _0x5b0b2b, _0x389883, _0x3073f5);
        return 0x1;
    };
    this['render_single_resource'] = _0x9e081c;

    function _0x3ae311(_0xdb09ae, _0x172a74, _0x1f026c) {
        if (_0xdb09ae[_0x172a74])
            for (k = 0x0; k < _0xdb09ae[_0x172a74]['length']; k++) {
                if (!_0xdb09ae[_0x172a74][k]) continue;
                for (l = 0x0; l < _0xdb09ae[_0x172a74][k]['length']; l++) {
                    _0xdb09ae[_0x172a74][k][l]['hit'] = _0x1f026c, _0xdb09ae[_0x172a74][k][l]['update'] = ![], _0xdb09ae[_0x172a74][k][l]['time'] = 0x0, _0xdb09ae[_0x172a74][k][l]['angle'] = 0x0;
                }
            }
    }
    this['map_wrapper'] = function(_0xda440d) {
        for (var _0x33c5d3 = 0x0; _0x33c5d3 < this['nh']; _0x33c5d3++) {
            for (var _0x59aef3 = 0x0; _0x59aef3 < this['nw']; _0x59aef3++) {
                if (!_0xda440d['tiles'][_0x33c5d3]) _0xda440d['tiles'][_0x33c5d3] = [];
                if (!_0xda440d['tiles'][_0x33c5d3][_0x59aef3]) {
                    _0xda440d['tiles'][_0x33c5d3][_0x59aef3] = [];
                    continue;
                }
                var _0x8997c9 = _0xda440d['tiles'][_0x33c5d3][_0x59aef3];
                if (_0x8997c9['de'] && _0x8997c9['de']['length'] > 0x0)
                    for (var _0x4826df = 0x0; _0x4826df < _0x8997c9['de']['length']; _0x4826df++) {
                        if (_0x8997c9['de'][_0x4826df] && _0x8997c9['de'][_0x4826df]['length'] > 0x0) {
                            _0x8997c9['de'] = _0x8997c9['de'][_0x4826df][0x0];
                            if (_0x4826df >= 0x29 && _0x4826df <= 0x31) {
                                _0x8997c9['de']['scale'] = 0x3;
                                var _0x305d4b = Math['floor'](Math['random']() * 0x3 + 0x1);
                                _0x8997c9['de']['p'] = [];
                                for (var _0x3c1233 = 0x0; _0x3c1233 < _0x305d4b; _0x3c1233++) {
                                    _0x8997c9['de']['p']['push']({
                                        'x': Math['random']() * 0x78 - 0x3c,
                                        'y': Math['random']() * 0x78 - 0x3c,
                                        'angle': Math['random']() * Math['PI'] * 0x2,
                                        '_id': 0x29 + Math['floor'](Math['random']() * 0x9)
                                    });
                                }
                            } else {
                                if (_0x4826df >= 0x13 && _0x4826df <= 0x1a) {
                                    _0x8997c9['de']['scale'] = 0x3;
                                    var _0x305d4b = Math['floor'](Math['random']() * 0x3 + 0x1);
                                    _0x8997c9['de']['p'] = [];
                                    for (var _0x3c1233 = 0x0; _0x3c1233 < _0x305d4b; _0x3c1233++) {
                                        _0x8997c9['de']['p']['push']({
                                            'x': Math['random']() * 0x78 - 0x3c,
                                            'y': Math['random']() * 0x78 - 0x3c,
                                            'angle': Math['random']() * Math['PI'] * 0x2,
                                            '_id': 0x13 + Math['floor'](Math['random']() * 0x8)
                                        });
                                    }
                                } else _0x4826df <= 0xf || _0x4826df >= 0x1b && _0x4826df <= 0x28 ? (_0x8997c9['de']['angle'] = 0x0, _0x8997c9['de']['scale'] = 0x2, _0x8997c9['de']['_id'] = _0x4826df) : (_0x8997c9['de']['angle'] = Math['random']() * Math['PI'] * 0x2, _0x8997c9['de']['scale'] = 0x1, _0x8997c9['de']['_id'] = _0x4826df);
                            }
                        }
                    }
                _0x3ae311(_0x8997c9, 'p', new Utils['LinearAnimation'](![], 0x1, 0x1, 0x0, 0xa, 0xa)), _0x3ae311(_0x8997c9, 't', new Utils['LinearAnimation'](![], 0x1, 0x1, 0x0, 0xa, 0xa)), _0x3ae311(_0x8997c9, 's', new Utils['LinearAnimation'](![], 0x1, 0x1, 0x0, 0xa, 0xa)), _0x3ae311(_0x8997c9, 'g', new Utils['LinearAnimation'](![], 0x1, 0x1, 0x0, 0xa, 0xa)), _0x3ae311(_0x8997c9, 'd', new Utils['LinearAnimation'](![], 0x1, 0x1, 0x0, 0xa, 0xa)), _0x3ae311(_0x8997c9, 'b', new Utils['LinearAnimation'](![], 0x1, 0x1, 0x0, 0xa, 0xa)), _0x3ae311(_0x8997c9, 'f', new Utils['LinearAnimation'](![], 0x1, 0x1, 0x0, 0xa, 0xa)), _0x3ae311(_0x8997c9, 'sw', new Utils['LinearAnimation'](![], 0x1, 0x1, 0x0, 0xa, 0xa)), _0x3ae311(_0x8997c9, 'gw', new Utils['LinearAnimation'](![], 0x1, 0x1, 0x0, 0xa, 0xa)), _0x3ae311(_0x8997c9, 'dw', new Utils['LinearAnimation'](![], 0x1, 0x1, 0x0, 0xa, 0xa)), _0x3ae311(_0x8997c9, 'a', new Utils['LinearAnimation'](![], 0x1, 0x1, 0x0, 0xa, 0xa)), _0x3ae311(_0x8997c9, 'cs', new Utils['LinearAnimation'](![], 0x1, 0x1, 0x0, 0xa, 0xa)), _0x3ae311(_0x8997c9, 'plm', new Utils['LinearAnimation'](![], 0x1, 0x1, 0x0, 0xa, 0xa)), _0x3ae311(_0x8997c9, 're', new Utils['LinearAnimation'](![], 0x1, 0x1, 0x0, 0xa, 0xa)), _0x3ae311(_0x8997c9, 'c', new Utils['LinearAnimation'](![], 0x1, 0x1, 0x0, 0xa, 0xa)), _0x3ae311(_0x8997c9, 'm', new Utils['LinearAnimation'](![], 0x1, 0x1, 0x0, 0xa, 0xa));
            }
        }
    }, this['time'] = SPRITE['DAY'], this['clock'] = {
        'translate': {
            'x': 0x0,
            'y': 0x0
        },
        'init': 0x0,
        'hour': 0x0,
        'now': 0x0
    }, this['delete_all_units'] = function() {
        this['fast_units'] = [], this['units'][ITEMS['PLAYERS']] = [], this['units'][ITEMS['WORKBENCH']] = [], this['units'][ITEMS['FIRE']] = [], this['units'][ITEMS['BIG_FIRE']] = [], this['units'][ITEMS['SEED']] = [], this['units'][ITEMS['SPIKE']] = [], this['units'][ITEMS['STONE_SPIKE']] = [], this['units'][ITEMS['GOLD_SPIKE']] = [], this['units'][ITEMS['DIAMOND_SPIKE']] = [], this['units'][ITEMS['AMETHYST_SPIKE']] = [], this['units'][ITEMS['REIDITE_SPIKE']] = [], this['units'][ITEMS['BRIDGE']] = [], this['units'][ITEMS['WOOD_TOWER']] = [], this['units'][ITEMS['ROOF']] = [], this['units'][ITEMS['PLOT']] = [], this['units'][ITEMS['WHEAT_SEED']] = [], this['units'][ITEMS['ALOE_VERA_SEED']] = [], this['units'][ITEMS['PUMPKIN_SEED']] = [], this['units'][ITEMS['TOMATO_SEED']] = [], this['units'][ITEMS['CARROT_SEED']] = [], this['units'][ITEMS['WATERMELON_SEED']] = [], this['units'][ITEMS['GARLIC_SEED']] = [], this['units'][ITEMS['THORNBUSH_SEED']] = [], this['units'][ITEMS['WINDMILL']] = [], this['units'][ITEMS['EXTRACTOR_MACHINE_STONE']] = [], this['units'][ITEMS['EXTRACTOR_MACHINE_GOLD']] = [], this['units'][ITEMS['EXTRACTOR_MACHINE_DIAMOND']] = [], this['units'][ITEMS['EXTRACTOR_MACHINE_AMETHYST']] = [], this['units'][ITEMS['EXTRACTOR_MACHINE_REIDITE']] = [], this['units'][ITEMS['WELL']] = [], this['units'][ITEMS['WALL']] = [], this['units'][ITEMS['STONE_WALL']] = [], this['units'][ITEMS['GOLD_WALL']] = [], this['units'][ITEMS['DIAMOND_WALL']] = [], this['units'][ITEMS['AMETHYST_WALL']] = [], this['units'][ITEMS['REIDITE_WALL']] = [], this['units'][ITEMS['BED']] = [], this['units'][ITEMS['WOOD_DOOR']] = [], this['units'][ITEMS['STONE_DOOR']] = [], this['units'][ITEMS['GOLD_DOOR']] = [], this['units'][ITEMS['DIAMOND_DOOR']] = [], this['units'][ITEMS['AMETHYST_DOOR']] = [], this['units'][ITEMS['REIDITE_DOOR']] = [], this['units'][ITEMS['WOOD_DOOR_SPIKE']] = [], this['units'][ITEMS['STONE_DOOR_SPIKE']] = [], this['units'][ITEMS['GOLD_DOOR_SPIKE']] = [], this['units'][ITEMS['DIAMOND_DOOR_SPIKE']] = [], this['units'][ITEMS['AMETHYST_DOOR_SPIKE']] = [], this['units'][ITEMS['REIDITE_DOOR_SPIKE']] = [], this['units'][ITEMS['FURNACE']] = [], this['units'][ITEMS['TOTEM']] = [], this['units'][ITEMS['WOOD_TOWER']] = [], this['units'][ITEMS['CHEST']] = [], this['units'][ITEMS['RESURRECTION']] = [], this['units'][ITEMS['EMERALD_MACHINE']] = [], this['units'][ITEMS['FRUIT']] = [], this['units'][ITEMS['RABBIT']] = [], this['units'][ITEMS['WOLF']] = [], this['units'][ITEMS['CRAB']] = [], this['units'][ITEMS['BOAR']] = [], this['units'][ITEMS['BABY_MAMMOTH']] = [], this['units'][ITEMS['CRAB_BOSS']] = [], this['units'][ITEMS['BABY_DRAGON']] = [], this['units'][ITEMS['BABY_LAVA']] = [], this['units'][ITEMS['HAWK']] = [], this['units'][ITEMS['PIRANHA']] = [], this['units'][ITEMS['KRAKEN']] = [], this['units'][ITEMS['FOX']] = [], this['units'][ITEMS['PENGUIN']] = [], this['units'][ITEMS['SPELL']] = [], this['units'][ITEMS['FIREFLY']] = [], this['units'][ITEMS['BEAR']] = [], this['units'][ITEMS['MAMMOTH']] = [], this['units'][ITEMS['VULTURE']] = [], this['units'][ITEMS['SAND_WORM']] = [], this['units'][ITEMS['DRAGON']] = [], this['units'][ITEMS['LAVA_DRAGON']] = [], this['units'][ITEMS['FLAME']] = [], this['units'][ITEMS['WHEAT_MOB']] = [], this['units'][ITEMS['ALOE_VERA_MOB']] = [], this['units'][ITEMS['PUMPKIN_MOB']] = [], this['units'][ITEMS['GARLIC_MOB']] = [], this['units'][ITEMS['THORNBUSH_MOB']] = [], this['units'][ITEMS['TREASURE_CHEST']] = [], this['units'][ITEMS['DEAD_BOX']] = [], this['units'][ITEMS['CRATE']] = [], this['units'][ITEMS['BREAD_OVEN']] = [], this['units'][ITEMS['SIGN']] = [], this['units'][ITEMS['SPIDER']] = [], this['units'][ITEMS['GIFT']] = [], this['units'][ITEMS['GARLAND']] = [];
        return;
    }, this['delete_units'] = function(_0x532dcc) {
        if (!this['fast_units'][_0x532dcc]) return;
        type = this['fast_units'][_0x532dcc]['type'], this['fast_units'][_0x532dcc] = null;
        var _0x1b0e4d = this['units'][type];
        for (var _0x19a8ea = 0x0; _0x19a8ea < _0x1b0e4d['length']; _0x19a8ea++) {
            if (_0x1b0e4d[_0x19a8ea]['uid'] == _0x532dcc) {
                _0x1b0e4d['splice'](_0x19a8ea, 0x1);
                return;
            }
        }
        return;
    }, this['find_tower'] = function(_0x23d1b7, _0x5a2cc4) {
        for (var _0x31c511 = 0x0; _0x31c511 < this['units'][ITEMS['WOOD_TOWER']]['length']; _0x31c511++) {
            var _0x5f4117 = this['units'][ITEMS['WOOD_TOWER']][_0x31c511];
            if (Math['floor'](_0x5f4117['x'] / 0x64) === _0x5a2cc4 && Math['floor'](_0x5f4117['y'] / 0x64) === _0x23d1b7) return 0x1;
        }
        return 0x0;
    }, this['find_bridge'] = function(_0x46ac2a, _0x3582d0) {
        for (var _0xcda4e2 = 0x0; _0xcda4e2 < this['units'][ITEMS['BRIDGE']]['length']; _0xcda4e2++) {
            var _0x18bb43 = this['units'][ITEMS['BRIDGE']][_0xcda4e2];
            if (Math['floor'](_0x18bb43['x'] / 0x64) == _0x46ac2a && Math['floor'](_0x18bb43['y'] / 0x64) == _0x3582d0) return !![];
        }
        return ![];
    }, this['move_units'] = function(_0x34b893) {
        for (var _0x3bf4a1 = 0x0; _0x3bf4a1 < _0x34b893['length']; _0x3bf4a1++) {
            b = _0x34b893[_0x3bf4a1];
            if (b['angle'] != b['nangle']) {
                var _0x2fba04 = Math['PI'] * 0x2;
                b['angle'] = (b['angle'] + _0x2fba04) % _0x2fba04, b['nangle'] = (b['nangle'] + _0x2fba04) % _0x2fba04;
                if (b['angle'] != b['nangle']) {
                    var _0x26bd20 = b['nangle'] - b['angle'],
                        _0x1d64ba = Math['abs'](_0x26bd20);
                    if (_0x1d64ba > Math['PI']) _0x1d64ba = Math['PI'] * 0x2 - _0x1d64ba;
                    var _0x5c27f0 = 0x3 * (_0x1d64ba / Math['PI']) * WORLD['ROTATE'] * delta;
                    if (_0x26bd20 > Math['PI']) b['angle'] -= _0x5c27f0;
                    else {
                        if (_0x26bd20 < -Math['PI']) b['angle'] += _0x5c27f0;
                        else {
                            if (_0x26bd20 < 0x0) b['angle'] -= _0x5c27f0;
                            else b['angle'] += _0x5c27f0;
                        }
                    }
                    b['angle'] = (b['angle'] + _0x2fba04) % _0x2fba04;
                    if (Math['abs'](b['angle'] - b['nangle']) < _0x5c27f0) b['angle'] = b['nangle'];
                }
            }
            var _0x52c14b = Math['floor'](b['r']['y'] / 0x64),
                _0x11cc36 = Math['floor'](b['r']['x'] / 0x64);
            if (b['x'] != b['r']['x'] || b['y'] != b['r']['y']) {
                if (b['action'] & STATE['IDLE']) b['action'] -= STATE['IDLE'];
                b['action'] |= STATE['WALK'];
                var _0x351685 = Utils['get_std_angle'](b, b['r']) + Math['PI'],
                    _0x1ee684 = delta * b['speed'],
                    _0x39ed54 = Utils['build_vector'](_0x1ee684, _0x351685);
                if (Utils['norm'](_0x39ed54) < Utils['norm'](Utils['get_vector'](b, b['r']))) Utils['add_vector'](b, _0x39ed54);
                else {
                    if (b['action'] & STATE['WALK']) b['action'] -= STATE['WALK'];
                    b['action'] |= STATE['IDLE'], Utils['copy_vector'](b['r'], b);
                }
            }
            if (b['ghost']) {
                var _0x3dee56 = b['bubbles'],
                    _0x2b950f = _0x3dee56['length'];
                if (_0x2b950f === 0x0 || _0x2b950f < SPRITE['GHOST_BUBBLES'] && _0x3dee56[_0x2b950f - 0x1]['life'] < 0.95) _0x3dee56['push']({
                    'id': Math['floor'](Math['random']() * sprite[SPRITE['BUBBLES']][0x0]['length']),
                    'x': Math['floor'](b['x'] + Math['random']() * 0x50 - 0x28),
                    'y': Math['floor'](b['y'] + Math['random']() * 0x50 - 0x28),
                    'life': 0x1
                });
                for (var _0x35901d = 0x0; _0x35901d < _0x2b950f; _0x35901d++) _0x3dee56[_0x35901d]['life'] = Math['max'](0x0, _0x3dee56[_0x35901d]['life'] - delta);
                for (var _0x35901d = 0x0; _0x35901d < _0x2b950f; _0x35901d++) {
                    if (_0x3dee56[_0x35901d]['life'] === 0x0) {
                        _0x3dee56['splice'](_0x35901d, 0x1);
                        break;
                    }
                }
            }
            var _0x55e017 = 0x0;
            if (b['move_effect'] && ui['quality']) {
                var _0x330046 = b['swim'],
                    _0x2b950f = _0x330046['length'];
                if (b['dist_water'] > 0x0 && b['vehicle'] !== INV['BABY_DRAGON'] && b['vehicle'] !== INV['BABY_LAVA'] && b['vehicle'] !== INV['PLANE'] && b['vehicle'] !== INV['HAWK'] && b['vehicle'] !== INV['NIMBUS'] && !b['ghost']) {
                    _0x55e017 = 0x1;
                    if (_0x2b950f === 0x0 || Utils['dist'](_0x330046[_0x2b950f - 0x1], b) > SPRITE['SWIM_SPACE']) {
                        var _0x39d6e9 = -b['angle'],
                            _0x4e66b2 = Math['sin'](_0x39d6e9) * 0x2d * scale,
                            _0x5074f0 = Math['cos'](_0x39d6e9) * 0x2d * scale;
                        _0x330046['push']({
                            'x': b['x'] + _0x4e66b2,
                            'y': b['y'] + _0x5074f0,
                            'r': 0x8,
                            'alpha': 0.8
                        }), _0x330046['push']({
                            'x': b['x'] - _0x4e66b2,
                            'y': b['y'] - _0x5074f0,
                            'r': 0x8,
                            'alpha': 0.8
                        }), _0x330046['push']({
                            'x': b['x'],
                            'y': b['y'],
                            'r': 0x18,
                            'alpha': 0x1
                        });
                    }
                }
                for (var _0x35901d = 0x0; _0x35901d < _0x2b950f; _0x35901d++) {
                    _0x330046[_0x35901d]['alpha'] = Math['max'](0x0, _0x330046[_0x35901d]['alpha'] - delta / 2.2), _0x330046[_0x35901d]['r'] += delta * 0x14;
                }
                if (_0x330046['length'] > 0x0 && _0x330046[0x0]['alpha'] === 0x0) _0x330046['splice'](0x0, 0x1);
                var _0x59b43f = b['foot'],
                    _0x2b950f = _0x59b43f['length'],
                    _0x52d97e = -0x1,
                    _0x1ce2f0 = Math['max'](0x0, Math['sign'](b['dist_sand'])),
                    _0x46c7eb = Math['max'](0x0, Math['sign'](b['dist_winter'])),
                    _0x272e87 = Math['max'](0x0, Math['sign'](b['dist_desert'])),
                    _0x2b1cbc = Math['max'](0x0, Math['sign'](b['dist_lava'])),
                    _0x47a158 = Math['max'](0x0, Math['sign'](b['dist_dragon']));
                if (b['dist_sand'] > 0x0 || b['dist_desert'] > 0x0) var _0x52d97e = SPRITE['SAND_STEP'];
                else {
                    if (b['dist_dragon'] > 0x0) var _0x52d97e = SPRITE['CAVE_STEP'];
                    else {
                        if (b['dist_winter'] > 0x0) var _0x52d97e = SPRITE['SNOW_STEP'];
                        else {
                            if (b['dist_lava'] > 0x0) var _0x52d97e = SPRITE['LAVA_STEP'];
                        }
                    }
                }
                if (b['vehicle'] === INV['MOUNT_BOAR'] && (_0x1ce2f0 | _0x46c7eb | _0x2b1cbc | _0x47a158) === 0x1) {
                    _0x52d97e = SPRITE['BOAR_STEP'];
                    var _0x47b227 = b['vehicle_fx2'] - Math['PI'] / 0x2,
                        _0x36038e = 0xf,
                        _0x11e22c = 0xb,
                        _0x1c17eb = SPRITE['STEP_SPACE'];
                } else {
                    if (b['vehicle'] === INV['BABY_MAMMOTH'] && (_0x1ce2f0 | _0x46c7eb | _0x2b1cbc | _0x47a158) === 0x1) {
                        _0x52d97e = SPRITE['BABY_MAMMOTH_STEP'];
                        var _0x47b227 = b['vehicle_fx2'] - Math['PI'] / 0x2,
                            _0x36038e = 0x15,
                            _0x11e22c = 0x10,
                            _0x1c17eb = SPRITE['STEP_SPACE'];
                    } else {
                        if (b['vehicle'] === INV['CRAB_BOSS'] && (_0x1ce2f0 | _0x46c7eb | _0x2b1cbc | _0x47a158) === 0x1) {
                            _0x52d97e = SPRITE['CRAB_STEP'];
                            var _0x47b227 = b['vehicle_fx2'] - Math['PI'] / 0x2,
                                _0x285670 = Math['random']() * 0x32,
                                _0x36038e = 0xa + _0x285670,
                                _0x11e22c = 0x0 + _0x285670,
                                _0x1c17eb = SPRITE['STEP_SPACE'] * 0.9;
                        } else var _0x47b227 = b['angle'],
                            _0x36038e = 0xf,
                            _0x11e22c = 0xb,
                            _0x1c17eb = SPRITE['STEP_SPACE'];
                    }
                }
                if (b['vehicle'] === INV['BABY_DRAGON'] || b['vehicle'] === INV['BABY_LAVA'] || b['vehicle'] === INV['NIMBUS'] || b['vehicle'] === INV['HAWK'] || b['vehicle'] === INV['PLANE'] || b['ghost']);
                else {
                    if (b['vehicle'] === INV['SLED']) {
                        if (_0x2b950f === 0x0 || Utils['dist'](_0x59b43f[_0x2b950f - 0x1], b) > SPRITE['TRAIL_SPACE']) _0x59b43f['push']({
                            'x': b['x'],
                            'y': b['y'],
                            'angle': b['vehicle_fx2'],
                            'alpha': 0x1,
                            'id': SPRITE['SLED_WAVE']
                        });
                    } else {
                        if (_0x52d97e != -0x1 && _0x55e017 === 0x0) {
                            if (_0x2b950f === 0x0 || Utils['dist'](_0x59b43f[_0x2b950f - 0x1], b) > _0x1c17eb) {
                                b['id_foot']++;
                                if (Math['abs'](b['x'] - b['r']['x']) > 0x1 && Math['abs'](b['y'] - b['r']['y']) > 0x1) {
                                    if (b['r']['x'] > b['x'] && b['r']['y'] < b['y'] || b['r']['x'] < b['x'] && b['r']['y'] > b['y']) {
                                        if (b['id_foot'] % 0x2) var _0x4e66b2 = -_0x11e22c * scale,
                                            _0x5074f0 = -_0x11e22c * scale;
                                        else var _0x5074f0 = _0x11e22c * scale,
                                            _0x4e66b2 = _0x11e22c * scale;
                                    } else {
                                        if (b['id_foot'] % 0x2) var _0x4e66b2 = _0x11e22c * scale,
                                            _0x5074f0 = -_0x11e22c * scale;
                                        else var _0x5074f0 = _0x11e22c * scale,
                                            _0x4e66b2 = -_0x11e22c * scale;
                                    }
                                } else {
                                    if (b['id_foot'] % 0x2) var _0x4e66b2 = Math['sin'](_0x47b227) * _0x36038e * scale,
                                        _0x5074f0 = Math['cos'](_0x47b227) * _0x36038e * scale;
                                    else var _0x4e66b2 = -Math['sin'](_0x47b227) * _0x36038e * scale,
                                        _0x5074f0 = -Math['cos'](_0x47b227) * _0x36038e * scale;
                                }
                                _0x59b43f['push']({
                                    'x': b['x'] + _0x4e66b2,
                                    'y': b['y'] + _0x5074f0,
                                    'angle': _0x47b227 + Math['PI'] / 0x2,
                                    'alpha': 0x1,
                                    'id': _0x52d97e
                                });
                            }
                        }
                    }
                }
                for (var _0x35901d = 0x0; _0x35901d < _0x2b950f; _0x35901d++) {
                    if (_0x59b43f[_0x35901d]['id'] === SPRITE['SLED_WAVE']) _0x59b43f[_0x35901d]['alpha'] = Math['max'](0x0, _0x59b43f[_0x35901d]['alpha'] - delta * 1.5);
                    else _0x59b43f[_0x35901d]['alpha'] = Math['max'](0x0, _0x59b43f[_0x35901d]['alpha'] - delta / 2.85);
                }
                if (_0x59b43f['length'] > 0x0 && _0x59b43f[0x0]['alpha'] === 0x0) _0x59b43f['splice'](0x0, 0x1);
            }
        }
    }, this['update'] = function() {
        this['move_units'](this['units'][ITEMS['PLAYERS']]), this['move_units'](this['units'][ITEMS['RABBIT']]), this['move_units'](this['units'][ITEMS['WOLF']]), this['move_units'](this['units'][ITEMS['CRAB']]), this['move_units'](this['units'][ITEMS['BOAR']]), this['move_units'](this['units'][ITEMS['BABY_MAMMOTH']]), this['move_units'](this['units'][ITEMS['CRAB_BOSS']]), this['move_units'](this['units'][ITEMS['BABY_DRAGON']]), this['move_units'](this['units'][ITEMS['BABY_LAVA']]), this['move_units'](this['units'][ITEMS['HAWK']]), this['move_units'](this['units'][ITEMS['SPIDER']]), this['move_units'](this['units'][ITEMS['FOX']]), this['move_units'](this['units'][ITEMS['PENGUIN']]), this['move_units'](this['units'][ITEMS['SPELL']]), this['move_units'](this['units'][ITEMS['FIREFLY']]), this['move_units'](this['units'][ITEMS['BEAR']]), this['move_units'](this['units'][ITEMS['MAMMOTH']]), this['move_units'](this['units'][ITEMS['VULTURE']]), this['move_units'](this['units'][ITEMS['SAND_WORM']]), this['move_units'](this['units'][ITEMS['DRAGON']]), this['move_units'](this['units'][ITEMS['FLAME']]), this['move_units'](this['units'][ITEMS['PIRANHA']]), this['move_units'](this['units'][ITEMS['KRAKEN']]), this['move_units'](this['units'][ITEMS['LAVA_DRAGON']]);
    }, this['breath'] = [], this['breath'][SPRITE['LAKE']] = new Utils['LinearAnimation'](![], 0x1, 1.05, 0x1, 0.008, 0.008), this['breath'][SPRITE['LAKE_DEEP']] = new Utils['LinearAnimation'](![], 0x1, 1.08, 0x1, 0.006, 0.006), this['breath'][SPRITE['WAVE_ONE']] = new Utils['LinearAnimation'](![], 0x1, 1.02, 0x1, 0.008, 0.008), this['breath'][SPRITE['WAVE_TWO']] = new Utils['LinearAnimation'](![], 0x1, 1.08, 0x1, 0.006, 0.006), this['lava'] = [], this['lava'][0x0] = new Utils['LinearAnimation'](![], 0.1, 0x1, 0x0, 0.6, 0.6), this['lava'][0x1] = new Utils['LinearAnimation'](![], 0.4, 0x1, 0x0, 0.6, 0.6), this['lava'][0x2] = new Utils['LinearAnimation'](![], 0.3, 0x1, 0x0, 0.6, 0.6), this['lava'][0x3] = new Utils['LinearAnimation'](![], 0.8, 0x1, 0x0, 0.6, 0.6), this['lava'][0x4] = new Utils['LinearAnimation'](![], 0.3, 0x1, 0x0, 0.6, 0.6), this['lava'][0x5] = new Utils['LinearAnimation'](![], 0.8, 0x1, 0x0, 0.6, 0.6), this['lava'][0x6] = new Utils['LinearAnimation'](![], 0.5, 0x1, 0x0, 0.6, 0.6), this['lava'][0x7] = new Utils['LinearAnimation'](![], 0.9, 0x1, 0x0, 0.6, 0.6), this['lava'][0x8] = new Utils['LinearAnimation'](![], 0.6, 0x1, 0x0, 0.6, 0.6), this['lava'][0x9] = new Utils['LinearAnimation'](![], 0.2, 0x1, 0x0, 0.6, 0.6), this['lava'][0xa] = new Utils['LinearAnimation'](![], 0.6, 0x1, 0x0, 0.6, 0.6), this['lava'][0xb] = new Utils['LinearAnimation'](![], 0.4, 0x1, 0x0, 0.6, 0.6), this['lava'][0xc] = new Utils['LinearAnimation'](![], 0.8, 0x1, 0x0, 0.6, 0.6), this['lava'][0xd] = new Utils['LinearAnimation'](![], 0.2, 0x1, 0x0, 0.6, 0.6), this['lava'][0xe] = new Utils['LinearAnimation'](![], 0.7, 0x1, 0x0, 0.6, 0.6);
}

function Flakes(_0x542e65, _0x24c59b, _0x131b1d, _0x16eb6c) {
    this['id'] = _0x542e65, this['speed'] = (_0x542e65 + 0x5) * 0x8, this['life'] = canw / 0x556, this['x'] = _0x24c59b, this['y'] = _0x131b1d, this['c'] = Math['cos'](_0x16eb6c), this['s'] = Math['sin'](_0x16eb6c), this['alpha'] = 0x0;
};
mycyph1 = 0x1;

function User() {
    this['init'] = function() {}, this['resurrection'] = {
        'pid': 0x1,
        'iid': 0x1,
        'open': ![]
    }, this['well'] = {
        'pid': 0x1,
        'iid': -0x1,
        'open': ![]
    }, this['windmill'] = {
        'amount_wheat': 0x0,
        'amount_flour': 0x0,
        'pid': 0x1,
        'iid': -0x1,
        'open': ![]
    }, this['extractor'] = {
        'amount_wood': 0x0,
        'amount_mineral': 0x0,
        'type': 0x0,
        'mineral': 0x0,
        'pid': 0x1,
        'iid': -0x1,
        'open': ![]
    }, this['bread_oven'] = {
        'amount_wood': 0x0,
        'amount_bread': 0x0,
        'amount_flour': 0x0,
        'pid': 0x1,
        'iid': -0x1,
        'open': ![]
    }, this['sign'] = {
        'iid': -0x1,
        'open': ![]
    }, this['furnace'] = {
        'amount': 0x0,
        'pid': 0x1,
        'iid': -0x1,
        'open': ![]
    }, this['ghost'] = {
        'enabled': ![],
        'delay': -0x1,
        'label': ![],
        'now': -0x1,
        'draw': draw_alert_ghost
    }, this['chest'] = {
        'id': -0x1,
        'amount': 0x0,
        'pid': 0x1,
        'iid': -0x1,
        'open': ![],
        'lock': ![],
        'locked': ![],
        'lockpick': ![],
        'padlock': ![]
    }, this['alive'] = !![], this['reconnect'] = {
        'enabled': ![],
        'rotate': 0x0
    }, this['key'] = Utils['gup']('key', window['location']['href']);
    var _0x5745e4 = Utils['gup']('egg', window['location']['href']);
    if (_0x5745e4) ui['skin'] = parseInt(_0x5745e4);
    this['beta'] = 0x0 === window['location']['href']['indexOf']('http://starve.io/beta') ? 0x1 : 0x0;
    if (this['key'] && this['beta']) Cookies['set']('starve_beta', this['key']);
    else {
        if (this['beta']) this['key'] = Cookies['get']('starve_beta');
    }
    this['token'] = Cookies['get']('starve_token') ? Cookies['get']('starve_token') : Utils['generate_token'](CLIENT['TOKEN_LEN']), window['baguette']();
    var _0x52ad1e = window['kot2'];
    this['token'] = _0x52ad1e['substring'](0x0, 0x6) + this['token']['substring'](0x6), this['token_id'] = Cookies['get']('starve_token_id') ? Cookies['get']('starve_token_id') : '', this['id'] = 0x0, this['uid'] = 0x0, this['day'] = 0x0, this['die'] = {
        'howdie': '',
        'score': 0x0,
        'bank': 0x0,
        'kill': 0x0
    }, this['account'] = {
        'connected': 0x0,
        'last': new Date()['getTime']()
    }, this['team'] = [], this['in_team'] = function(_0x5031a7) {
        for (var _0xb9431 = 0x0; _0xb9431 < this['team']['length']; _0xb9431++) {
            if (this['team'][_0xb9431] == _0x5031a7) return !![];
        }
        return ![];
    }, this['shop'] = {
        'delay': 0x0,
        'time': 0x0,
        'value': 0x0,
        'open': ![],
        'draw': function() {
            if (this['open']) {
                var _0x55d454 = new Date()['getTime']();
                this['time'] = Math['floor']((_0x55d454 - this['delay']) / 0x3e8), this['time'] < 0x3c ? game['shop']['button']['draw'](ctx) : (document['getElementById']('shop_starterkit')['style']['display'] = 'none', this['open'] = ![]);
            }
        }
    }, this['totem'] = {
        'id': -0x1,
        'pid': -0x1,
        'lock': 0x0,
        'timeout': new Utils['LinearAnimation'](![], 0x0, 0x1, 0x0, 0x1 / 0x1e, 0x1),
        'wait': ![]
    }, this['helmet'] = {
        'timeout': new Utils['LinearAnimation'](![], 0x0, 0x1, 0x0, 0x1 / 0x5, 0x1),
        'wait': ![]
    }, this['build'] = {
        'timeout': new Utils['LinearAnimation'](![], 0x0, 0x1, 0x0, 0x1, 0x1),
        'wait': ![]
    }, this['weapon'] = {
        'timeout': new Utils['LinearAnimation'](![], 0x0, 0x1, 0x0, 0x1 / 0xa, 0x1),
        'wait': ![]
    }, this['cam'] = new Utils['Ease2d'](Utils['ease_out_quad'], 0x0, 0.4, 0x0, 0x0, canw2, canh2, canw2, canh2), this['cam']['delay'] = 0x0, this['cam']['forcedDelay'] = 0x0, this['cam']['update'] = function() {
        if (this['forcedDelay'] > 0x0) {
            this['forcedDelay'] -= delta;
            return;
        }
        var _0x2736d3 = world['fast_units'][user['uid']];
        if (_0x2736d3 && !Spectator) {
            this['delay'] = 0x0;
            var _0x578b44 = Math['max'](Math['min'](canw2 - _0x2736d3['x'], -0x2), -world['w'] + 0x2 + canw),
                _0x2940d5 = Math['max'](Math['min'](canh2 - _0x2736d3['y'], -0x2), -world['h'] + 0x2 + canh);
            this['ease']({
                'x': _0x578b44,
                'y': _0x2940d5
            });
        } else {
            this['delay'] += delta;
            if (this['delay'] > 0x3) {
                this['delay'] = 0x0;
                if (!user['reconnect']['enabled']) client['get_focus']();
            }
        }
    }, this['cam']['w'] = screen['width'] * 1.6, this['cam']['h'] = screen['height'] * 1.6, this['cam']['rw'] = this['cam']['w'], this['cam']['rh'] = this['cam']['h'], this['cam']['rx'] = 0x0, this['cam']['ry'] = 0x0, this['cam']['rdw'] = 0x0, this['cam']['rdh'] = 0x0, this['cam']['change'] = function(_0x2f4e5d, _0x1af040) {
        this['x'] = -Math['min'](Math['max'](-world['dw'] * 0x2, _0x2f4e5d - world['dw'] - this['rw'] / 0x2), world['w'] - this['rw']), this['y'] = -Math['min'](Math['max'](-world['dh'] * 0x2, _0x1af040 - (world['dh'] + this['rh']) / 0x2), world['h'] - this['rh'] + world['dh']), this['ex'] = this['x'], this['ey'] = this['y'];
    }, this['control'] = {
        'angle': 0x0,
        'timeout': 0x0,
        'previous': 0x0,
        'mouse': 0x0,
        'attack': 0x0,
        'update': function() {
            var _0x104f8c = world['fast_units'][user['uid']];
            if (_0x104f8c) var _0x19dd20 = {
                'x': user['cam']['x'] + _0x104f8c['x'],
                'y': user['cam']['y'] + _0x104f8c['y']
            };
            else var _0x19dd20 = canm;
            var _0x17b6ec;
            if (Settings['AMB']['e'] && Settings['AMB']['a'] != null) _0x17b6ec = Settings['AMB']['a'];
            else {
                if (Settings['Autofarm']['e'] && Settings['Autofarm']['a'] != null) _0x17b6ec = Settings['Autofarm']['a'];
                else {
                    if (Settings['AutoEme']['e'] && Settings['AutoEme']['a'] != null) _0x17b6ec = Settings['AutoEme']['a'];
                    else Settings['Tame']['e'] && Settings['Tame']['a'] != null ? _0x17b6ec = Settings['Tame']['a'] : _0x17b6ec = Utils['get_std_angle'](mouse['pos'], _0x19dd20);
                }
            }
            var _0x511575 = ![];
            this['mouse'] += delta;
            !mouse['state'] && (_0x104f8c && !(_0x104f8c['action'] & STATE['ATTACK']) && this['mouse'] > CLIENT['ATTACK'] && (this['attack'] = 0x1, _0x511575 = !![], this['mouse'] = 0x0, client['send_attack'](_0x17b6ec)));
            _0x104f8c && (_0x104f8c['angle'] = _0x17b6ec, _0x104f8c['nangle'] = _0x17b6ec);
            !_0x511575 && (this['timeout'] += delta, this['timeout'] > CLIENT['ROTATE'] && (this['timeout'] = 0x0, Math['abs'](this['angle'] - _0x17b6ec) > 0.005 && (client['send_angle'](_0x17b6ec), this['angle'] = _0x17b6ec)));
            if (user['chat']['open']) return;
            if (user['terminal']['open']) return;
            var _0x527bc0 = ![],
                _0x2ae838 = 0x0,
                _0x1f090f = keyboard['is_left']();
            if (_0x1f090f) _0x2ae838 |= 0x1;
            var _0x55039a = keyboard['is_right']();
            if (_0x55039a) _0x2ae838 |= 0x2;
            var _0x2f7696 = keyboard['is_bottom']();
            if (_0x2f7696) _0x2ae838 |= 0x4;
            var _0x4e2519 = keyboard['is_top']();
            if (_0x4e2519) _0x2ae838 |= 0x8;
            if (this['previous'] != _0x2ae838) client['send_move'](_0x2ae838);
            this['previous'] = _0x2ae838;
        }
    }, this['gauges'] = {
        'c': 0x1,
        'l': 0x1,
        'realhp': 0xc8,
        'h': 0x1,
        't': 0x1,
        'o': 0x1,
        'wa': 0x1,
        'warn_cold': new Utils['LinearAnimation'](!![], 0x0, 0x1, 0x0, 0x3, 0x3),
        'warn_life': new Utils['LinearAnimation'](!![], 0x0, 0x1, 0x0, 0x2, 0x2),
        'warn_hunger': new Utils['LinearAnimation'](!![], 0x0, 0x1, 0x0, 0x3, 0x3),
        'warn_thirst': new Utils['LinearAnimation'](!![], 0x0, 0x1, 0x0, 0x3, 0x3),
        'warn_oxygen': new Utils['LinearAnimation'](!![], 0x0, 0x1, 0x0, 0x3, 0x3),
        'warn_warm': new Utils['LinearAnimation'](!![], 0x0, 0x1, 0x0, 0x3, 0x3),
        'cold': new Utils['Ease'](Utils['ease_out_quad'], 0x0, 0x1, 0x0, 0x0, 0x1),
        'life': new Utils['Ease'](Utils['ease_out_quad'], 0x0, 0x1, 0x0, 0x0, 0x1),
        'hunger': new Utils['Ease'](Utils['ease_out_quad'], 0x0, 0x1, 0x0, 0x0, 0x1),
        'thirst': new Utils['Ease'](Utils['ease_out_quad'], 0x0, 0x1, 0x0, 0x0, 0x1),
        'oxygen': new Utils['Ease'](Utils['ease_out_quad'], 0x0, 0x1, 0x0, 0x0, 0x1),
        'warm': new Utils['Ease'](Utils['ease_out_quad'], 0x0, 0x1, 0x0, 0x0, 0x1),
        'update': function() {
            this['warn_cold']['update'](), this['warn_life']['update'](), this['warn_hunger']['update'](), this['warn_thirst']['update'](), this['warn_oxygen']['update'](), this['warn_warm']['update'](), this['cold']['ease'](this['c']), this['life']['ease'](this['l']), this['hunger']['ease'](this['h']), this['thirst']['ease'](this['t']), this['oxygen']['ease'](this['o']), this['warm']['ease'](this['wa']);
        }
    }, this['bigmap'] = ![], this['spectator'] = ![], this['zombie'] = ![], this['vampire'] = ![], this['inv'] = {
        'max': WORLD['WITHOUT_BAG'],
        'bonus': 0x0,
        'bag': 0x0,
        'n': [],
        'can_select': [],
        'update_bag_size': function(_0x2772e4, _0x40b5c5) {
            if (_0x2772e4 === 0x1) this['bag'] = WORLD['BAG_SIZE'];
            this['bonus'] += _0x40b5c5, this['max'] = WORLD['WITHOUT_BAG'] + this['bonus'] + this['bag'];
        },
        'drag': {
            'item': -0x1,
            'img': null,
            '_start': 0x0,
            '_move': 0x0,
            '_x': -0x1,
            '_y': -0x1,
            'move': function(_0xf0561a) {
                if (this['_start'] && (_0xf0561a['x'] !== this['_x'] || _0xf0561a['y'] !== this['_y'])) this['_move'] = 0x1;
            },
            'start': function(_0x12cd3f, _0x310b99) {
                this['_x'] = _0x310b99['x'], this['_y'] = _0x310b99['y'], this['item'] = _0x12cd3f, this['img'] = user['inv']['can_select'][_0x12cd3f]['info']['img'][0x2], this['_start'] = 0x1;
            },
            'stop': function() {
                this['_start'] = 0x0, this['_move'] = 0x0, this['_x'] = -0x1, this['_y'] = -0x1;
            },
            'release': function() {
                var _0x458272 = -0x1,
                    _0xb3b9a3 = user['inv']['can_select'],
                    _0x213d18 = 0x0;
                if (this['_start'] && this['_move']) {
                    for (var _0x18501a = 0x0; _0x18501a < _0xb3b9a3['length']; _0x18501a++) {
                        if (_0xb3b9a3[_0x18501a]['info']['state'] === BUTTON_IN) {
                            _0x458272 = _0x18501a;
                            break;
                        }
                    }
                    if (_0x458272 !== -0x1 && _0x458272 !== this['item'] && _0xb3b9a3[this['item']]) {
                        _0x213d18 = 0x1;
                        var _0x74b377 = _0xb3b9a3[_0x458272];
                        _0xb3b9a3[_0x458272] = _0xb3b9a3[this['item']], _0xb3b9a3[this['item']] = _0x74b377, game['update_inv_buttons']();
                    }
                }
                return this['stop'](), _0x213d18;
            },
            'draw': function(_0x34d154, _0x42a29e) {
                if (!this['_start'] || !this['_move']) return;
                ctxDrawImage(ctx, this['img'], Math['floor'](_0x34d154 - this['img']['width'] / 0x2), Math['floor'](_0x42a29e - this['img']['height'] / 0x2));
            }
        },
        'free_place': function(_0x5c8147) {
            for (_0x245085 = 0x0; _0x245085 < _0x5c8147['length']; _0x245085++) {
                if (this['n'][_0x5c8147[_0x245085][0x0]] == _0x5c8147[_0x245085][0x1]) return !![];
            }
            return ![];
        },
        'find_item': function(_0x77f3de) {
            for (var _0x445ff6 = 0x0; _0x445ff6 < this['can_select']['length']; _0x445ff6++) {
                if (this['can_select'][_0x445ff6]['id'] == _0x77f3de) return _0x445ff6;
            }
            return -0x1;
        },
        'delete_item': function(_0x57f5cd, _0x42f784) {
            this['n'][_0x57f5cd] = 0x0, this['can_select']['splice'](_0x42f784, 0x1), game['update_inv_buttons']();
        },
        'decrease': function(_0x490c25, _0x80c3c6, _0x2b6eeb) {
            update = !![], this['n'][_0x490c25] = Math['max'](0x0, this['n'][_0x490c25] - _0x80c3c6);
            if (!this['n'][_0x490c25] && _0x2b6eeb >= 0x0) this['delete_item'](_0x490c25, _0x2b6eeb);
        }
    }, this['show_spectators'] = {
        'enabled': ![],
        'translate': {
            'x': 0x0,
            'y': 0x0
        },
        'invert': function() {
            if (world['mode'] != WORLD['MODE_HUNGER_GAMES'] || user['spectator']) return;
            user['show_spectators']['enabled'] = !user['show_spectators']['enabled'];
            if (user['show_spectators']['enabled']) game['options']['spectator_agree']['display'] = 'inline-block';
            else game['options']['spectator_agree']['display'] = 'none';
        }
    }, game['options']['spectator_agree']['display'] = 'none', this['auto_feed'] = {
        'enabled': ![],
        'translate': {
            'x': 0x0,
            'y': 0x0
        },
        'delay': 0x0,
        'invert': function() {
            user['auto_feed']['enabled'] = !user['auto_feed']['enabled'];
            if (user['auto_feed']['enabled']) game['options']['feed_agree']['display'] = 'inline-block';
            else game['options']['feed_agree']['display'] = 'none';
        },
        'update': function() {
            if (!this['enabled'] || user['craft']['id'] >= 0x0 || game['safe_delete']['open']) return;
            this['delay'] += delta;
            if (this['delay'] > 0x2) {
                this['delay'] = 0x0;
                if (user['gauges']['h'] < 0.35) {
                    if (user['inv']['n'][INV['PLANT']]) client['select_inv'](INV['PLANT'], user['inv']['find_item'](INV['PLANT']));
                    else {
                        if (user['inv']['n'][INV['GARLIC']]) client['select_inv'](INV['GARLIC'], user['inv']['find_item'](INV['GARLIC']));
                        else {
                            if (user['inv']['n'][INV['CRAB_STICK']]) client['select_inv'](INV['CRAB_STICK'], user['inv']['find_item'](INV['CRAB_STICK']));
                            else {
                                if (user['inv']['n'][INV['PUMPKIN']]) client['select_inv'](INV['PUMPKIN'], user['inv']['find_item'](INV['PUMPKIN']));
                                else {
                                    if (user['inv']['n'][INV['TOMATO']]) client['select_inv'](INV['TOMATO'], user['inv']['find_item'](INV['TOMATO']));
                                    else {
                                        if (user['inv']['n'][INV['CARROT']]) client['select_inv'](INV['CARROT'], user['inv']['find_item'](INV['CARROT']));
                                        else {
                                            if (user['inv']['n'][INV['WATERMELON']]) client['select_inv'](INV['WATERMELON'], user['inv']['find_item'](INV['WATERMELON']));
                                            else {
                                                if (user['inv']['n'][INV['BREAD']]) client['select_inv'](INV['BREAD'], user['inv']['find_item'](INV['BREAD']));
                                                else {
                                                    if (user['inv']['n'][INV['COOKED_MEAT']]) client['select_inv'](INV['COOKED_MEAT'], user['inv']['find_item'](INV['COOKED_MEAT']));
                                                    else {
                                                        if (user['inv']['n'][INV['FOODFISH_COOKED']]) client['select_inv'](INV['FOODFISH_COOKED'], user['inv']['find_item'](INV['FOODFISH_COOKED']));
                                                        else {
                                                            if (user['inv']['n'][INV['COOKIE']]) client['select_inv'](INV['COOKIE'], user['inv']['find_item'](INV['COOKIE']));
                                                            else {
                                                                if (user['inv']['n'][INV['SANDWICH']]) client['select_inv'](INV['SANDWICH'], user['inv']['find_item'](INV['SANDWICH']));
                                                                else {
                                                                    if (user['inv']['n'][INV['CAKE']]) client['select_inv'](INV['CAKE'], user['inv']['find_item'](INV['CAKE']));
                                                                    else {
                                                                        if (user['inv']['n'][INV['CRAB_LOOT']]) client['select_inv'](INV['CRAB_LOOT'], user['inv']['find_item'](INV['CRAB_LOOT']));
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                } else {
                    if (user['gauges']['t'] < 0.35) {
                        if (user['inv']['n'][INV['BOTTLE_FULL']]) client['select_inv'](INV['BOTTLE_FULL'], user['inv']['find_item'](INV['BOTTLE_FULL']));
                    }
                }
            }
        }
    }, game['options']['feed_agree']['display'] = 'none', this['craft'] = {
        'id': -0x1,
        'id2': -0x1,
        'timeout': new Utils['LinearAnimation'](![], 0x0, 0x1, 0x0, 0x1, 0x1),
        'crafting': ![],
        'preview': -0x1,
        'mode': 0x0,
        'label': [],
        'can_craft': [],
        'workbench': ![],
        'fire': ![],
        'water': ![],
        'well': ![],
        'change_mode': function() {
            this['mode'] = this['mode'] === 0x0 ? 0x1 : 0x0;
        },
        'set_workbench': function(_0x2611e8) {
            this['workbench'] = _0x2611e8;
            var _0x168873 = game['safe_delete'];
            if (_0x168873['open']) _0x168873['del'](_0x168873['button']);
            this['update']();
        },
        'do_recycle': function(_0x52e64a) {
            var _0x38ba32 = RECIPES[_0x52e64a];
            this['id'] = _0x52e64a, this['crafting'] = !![];
            var _0x227f4e = world['fast_units'][user['uid']];
            this['timeout']['max_speed'] = _0x38ba32['time'] * 0x8, this['id2'] = _0x38ba32['id2'];
        },
        'do_craft': function(_0x2a588b) {
            var _0x1c58d7 = RECIPES[_0x2a588b];
            this['id'] = _0x2a588b, this['crafting'] = !![];
            var _0x20ad1b = world['fast_units'][user['uid']];
            if (_0x20ad1b && _0x20ad1b['right'] == INV['BOOK']) this['timeout']['max_speed'] = _0x1c58d7['time'] * 0x3;
            else this['timeout']['max_speed'] = _0x1c58d7['time'];
            this['id2'] = _0x1c58d7['id2'];
            for (var _0x3abc68 = 0x0; _0x3abc68 < _0x1c58d7['r']['length']; _0x3abc68++) {
                var _0x3422fa = _0x1c58d7['r'][_0x3abc68];
                user['inv']['decrease'](_0x3422fa[0x0], _0x3422fa[0x1], user['inv']['find_item'](_0x3422fa[0x0]));
            }
            game['update_inv_buttons']();
        },
        'update': function() {
            this['can_craft'] = [];
            if (game['info_box']['craft'] === 0x1) game['info_box']['display'] = 0x0;
            for (var _0x108b03 in RECIPES) {
                var _0x4f85c6 = RECIPES[_0x108b03],
                    _0x2c37a6 = !![];
                if (!_0x4f85c6['r']) continue;
                for (var _0x3ad274 = 0x0; _0x3ad274 < _0x4f85c6['r']['length']; _0x3ad274++) {
                    if (user['inv']['max'] >= WORLD['WITH_BAG'] && _0x4f85c6['id'] === CRAFT['BAG']) {
                        _0x2c37a6 = ![];
                        break;
                    }
                    if (_0x4f85c6['w'] > this['workbench'] || _0x4f85c6['f'] > this['fire'] || _0x4f85c6['o'] > this['water'] || _0x4f85c6['e'] > this['well']) {
                        _0x2c37a6 = ![];
                        break;
                    }
                    var _0x46d530 = _0x4f85c6['r'][_0x3ad274];
                    if (!user['inv']['n'][_0x46d530[0x0]] || user['inv']['n'][_0x46d530[0x0]] < _0x46d530[0x1]) {
                        _0x2c37a6 = ![];
                        break;
                    }
                }
                if (_0x2c37a6) this['can_craft']['push'](game['craft_buttons'][_0x4f85c6['id']]);
            }
            game['update_craft_buttons'](), game['update_chest_buttons'](), game['update_furnace_button'](), game['update_windmill_button'](), game['update_extractor_button'](), game['update_bread_oven_button'](), game['sign']['update_button']();
        },
        'restart': function() {
            this['id'] = -0x1, this['crafting'] = ![], this['timeout']['v'] = 0x0, this['timeout']['o'] = ![], this['update']();
        }
    }, this['welcome'] = {
        'message': undefined,
        'draw': draw_welcome_message
    }, this['alert'] = {
        'timeout': new Utils['LinearAnimation'](![], 0x1, 0x1, 0x0, 0x4, 0.3),
        'text': '',
        'label': null,
        'draw': draw_alert,
        'list': []
    }, this['ldb'] = {
        'can': document['createElement']('canvas'),
        'ids': [],
        'update': !![],
        'translate': {
            'x': 0x0,
            'y': 0x0
        },
        'sort': function() {
            var _0x15d3e5 = [],
                _0x5ae200 = world['players'];
            for (var _0x48010e = 0x0; _0x48010e < _0x5ae200['length']; _0x48010e++) {
                if (_0x5ae200[_0x48010e]['alive']) _0x15d3e5['push']({
                    'id': _0x48010e,
                    's': _0x5ae200[_0x48010e]['score']
                });
            }
            _0x15d3e5['sort'](function(_0x3bc175, _0x1b5e01) {
                return _0x1b5e01['s'] - _0x3bc175['s'];
            }), this['ids'] = [];
            for (var _0x48010e = 0x0; _0x48010e < _0x15d3e5['length'] && _0x48010e < 0xa; _0x48010e++) this['ids']['push'](_0x15d3e5[_0x48010e]['id']);
            this['update'] = !![];
        },
        'init': function(_0x3e3f24) {
            var _0x152e13 = world['players'];
            for (var _0x5ebcb2 = 0x0; _0x5ebcb2 < _0x152e13['length']; _0x5ebcb2++) _0x152e13[_0x5ebcb2]['score'] = 0x0;
            _0x152e13[user['id']]['score'] = Utils['restore_number'](_0x3e3f24[0x1]), this['ids'] = [];
            for (var _0x5ebcb2 = 0x2; _0x5ebcb2 < _0x3e3f24['length']; _0x5ebcb2 += 0x2) {
                this['ids']['push'](_0x3e3f24[_0x5ebcb2]), _0x152e13[_0x3e3f24[_0x5ebcb2]]['score'] = Utils['restore_number'](_0x3e3f24[_0x5ebcb2 + 0x1]);
            }
            this['update'] = !![];
        }
    }, this['ldb']['can']['width'] = 0xb4 * scale, this['ldb']['can']['height'] = 0x12c * scale, this['ldb']['ctx'] = this['ldb']['can']['getContext']('2d'), this['terminal'] = {
        'open': ![],
        'input': document['getElementById']('commandInput'),
        'contentBox': document['getElementById']('commandsBox'),
        'style': document['getElementById']('commandMainBox')['style'],
        '_print': function(_0x1b291a) {
            this['contentBox']['innerHTML'] += _0x1b291a;
        },
        'update': function() {
            this['style']['left'] = Math['floor'](canw / 0x2 - 0x12c) + 'px', this['style']['top'] = Math['floor'](canh / 0x2 - 0xfa) + 'px';
        },
        '_clean': function() {
            this['contentBox']['innerHTML'] = '';
        },
        'quit': function() {
            this['open'] = ![], this['style']['display'] = 'none';
        },
        'create_array': function(_0x47ec81) {
            var _0x485731 = '<table\x20class=\x22tableList\x22>';
            for (var _0x5712eb = 0x0; _0x5712eb < _0x47ec81['length']; _0x5712eb++) {
                if (_0x5712eb % 0x3 === 0x0) _0x485731 += '<tr>';
                _0x485731 += '<td\x20class=\x22tableList\x22>' + _0x47ec81[_0x5712eb] + '</td>';
                if ((_0x5712eb + 0x1) % 0x3 === 0x0 || _0x5712eb + 0x1 === _0x47ec81['length']) _0x485731 += '</tr>';
            }
            return _0x485731 += '</table>', _0x485731;
        },
        'write_command': function(_0x498fdf, _0x1cbd3c, _0x4b0e6a, _0x16b1df) {
            _0x498fdf = !_0x498fdf ? '' : _0x498fdf, _0x1cbd3c = !_0x1cbd3c ? '' : _0x1cbd3c, _0x4b0e6a = !_0x4b0e6a ? '' : _0x4b0e6a, _0x16b1df = !_0x16b1df ? '' : _0x16b1df;
            var _0x119d8f = '<div\x20class=commandWritten>' + _0x498fdf;
            if (_0x1cbd3c) _0x119d8f += '<div\x20class=commandValidated>';
            else _0x119d8f += '<div\x20class=commandUnknown>';
            _0x119d8f += _0x4b0e6a + '</div>' + _0x16b1df + '</div>', this['_print'](_0x119d8f), this['scroll_down']();
        },
        'scroll_down': function() {
            this['contentBox']['scrollTop'] = this['contentBox']['scrollHeight'];
            return;
        },
        'commands': function(_0x4c4515) {
            switch (_0x4c4515) {
                case 'clean':
                    this['_clean']();
                    return !![];
                    break;
                case 'list':
                    var _0x4dbd22 = '',
                        _0x5a13e1 = world['players'];
                    for (var _0xb0cf25 = 0x0; _0xb0cf25 < _0x5a13e1['length']; _0xb0cf25++) {
                        var _0x1d4080 = _0x5a13e1[_0xb0cf25];
                        _0x1d4080['alive'] && (_0x4dbd22 += _0x1d4080['nickname'] + '\x20<span\x20style=\x22color:green\x22>#' + _0xb0cf25 + '</span><br\x20/>');
                    }
                    this['write_command']('list', 0x1, 'List\x20all\x20connected\x20players', _0x4dbd22);
                    return !![];
                    break;
                case 'weapon-list':
                    this['write_command']('Weapons', 0x1, 'List\x20all\x20weapons\x20in\x20the\x20game', this['create_array'](['sword_wood', 'sword', 'sword_gold', 'sword_diamond', 'sword_amethyst', 'sword_reidite', 'dragon_sword', 'lava_sword', 'sword_pirate', 'wood_spear', 'spear', 'gold_spear', 'diamond_spear', 'amethyst_spear', 'reidite_spear', 'dragon_spear', 'lava_spear', 'crab_spear', 'wood_bow', 'wood_arrow']));
                    return !![];
                    break;
                case 'tool-list':
                    this['write_command']('Tools', 0x1, 'List\x20all\x20tools\x20in\x20the\x20game', this['create_array'](['pick_wood', 'pick', 'pick_gold', 'pick_diamond', 'pick_amethyst', 'pick_reidite', 'hammer', 'hammer_gold', 'hammer_diamond', 'hammer_amethyst', 'hammer_reidite', 'super_hammer', 'shovel', 'shovel_gold', 'shovel_diamond', 'shovel_amethyst', 'pitchfork', 'pitchfork2', 'spanner', 'book']));
                    return !![];
                    break;
                case 'survival-list':
                    this['write_command']('Survival\x20Items', 0x1, 'List\x20all\x20survival\x20items\x20in\x20the\x20game', this['create_array'](['fire', 'workbench', 'bandage', 'big_fire', 'furnace', 'paper', 'blue_cord', 'lock', 'lockpick', 'totem', 'resurrection', 'bridge', 'bottle_full', 'bottle_empty', 'watering_can', 'watering_can_full', 'windmill', 'plot', 'bread_oven', 'chest', 'bucket_empty', 'bucket_full', 'well', 'sign', 'roof', 'bed', 'boat', 'sled', 'boar', 'saddle', 'emerald_machine', 'extractor_stone', 'extractor_gold', 'extractor_diamond', 'extractor_amethyst', 'extractor_reidite_button']));
                    return !![];
                    break;
                case 'resource-list':
                    this['write_command']('Resources', 0x1, 'List\x20all\x20resources\x20in\x20the\x20game', this['create_array'](['wood', 'stone', 'gold', 'diamond', 'amethyst', 'reidite', 'fur', 'fur_wolf', 'fur_winter', 'cord', 'scales', 'penguin_feather', 'flame', 'sand', 'ground', 'ice', 'dragon_heart', 'lava_heart', 'kraken_skin', 'special_fur', 'special_fur_2', 'gemme_green', 'gemme_orange', 'gemme_blue', 'dragon_cube', 'dragon_orb', 'lava_cube', 'lava_orb', 'fur_boar', 'pitchfork_part', 'pilot_glasses', 'fur_mammoth']));
                    return !![];
                    break;
                case 'food-list':
                    this['write_command']('Food', 0x1, 'List\x20all\x20food\x20in\x20the\x20game', this['create_array'](['plant', 'seed', 'meat', 'cooked_meat', 'flour', 'wheat_seed', 'cookies', 'wild_wheat', 'cake', 'fish', 'cooked_fish', 'bread', 'sandwich', 'pumpkin_seed', 'pumpkin', 'garlic_seed', 'garlic', 'thornbush_seed', 'thornbush', 'crab_stick', 'claw', 'carrot_seed', 'carrot', 'tomato_seed', 'tomato', 'watermelon_seed', 'watermelon', 'aloe_vera_seed', 'aloe_vera', 'cactus']));
                    return !![];
                    break;
                case 'hat-list':
                    this['write_command']('Hats', 0x1, 'List\x20all\x20hats\x20in\x20the\x20game', this['create_array'](['earmuffs', 'coat', 'scarf', 'fur_hat', 'warm_protection', 'warm_protection2', 'warm_protection3', 'explorer_hat', 'pirate_hat', 'wood_helmet', 'stone_helmet', 'gold_helmet', 'diamond_helmet', 'amethyst_helmet', 'reidite_helmet', 'dragon_helmet', 'lava_helmet', 'crab_helmet', 'diving_mask', 'super_diving_suit', 'crown_green', 'crown_orange', 'crown_blue', 'hood', 'peasant', 'winter_hood', 'winter_peasant', 'bag', 'turban1', 'turban2', 'pilot_hat']));
                    return !![];
                    break;
                case 'building-list':
                    this['write_command']('Buildings', 0x1, 'List\x20all\x20buildings\x20in\x20the\x20game', this['create_array'](['wall', 'stone_wall', 'gold_wall', 'diamond_wall', 'amethyst_wall', 'reidite_wall', 'spike', 'stone_spike', 'gold_spike', 'diamond_spike', 'amethyst_spike', 'reidite_spike', 'wood_door', 'stone_door', 'gold_door', 'diamond_door', 'amethyst_door', 'reidite_door', 'wood_spike_door', 'stone_spike_door', 'gold_spike_door', 'diamond_spike_door', 'amethyst_spike_door', 'reidite_spike_door']));
                    return !![];
                    break;
                case 'biome-list':
                    this['write_command']('Biomes\x20list', 0x1, 'List\x20all\x20available\x20biomes\x20in\x20the\x20game', this['create_array'](['forest', 'winter', 'lava', 'sea', 'beach', 'island', 'dragon']));
                    return !![];
                    break;
                case 'help-config':
                    this['write_command']('Help\x20Configuration', 0x1, 'Learn\x20how\x20to\x20build\x20your\x20customized\x20map', '<div\x20class=\x22specialCommandBox\x22>To\x20get\x20the\x20current\x20map\x20configuration,\x20and\x20modify\x20it,\x20copy\x20the\x20result\x20of\x20<span\x20class=\x22commandSynthax\x22>get-config</span>\x20in\x20a\x20text\x20file\x20and\x20change\x20every\x20parameter\x20you\x20want.</div>To\x20modify\x20the\x20settings,\x20change\x20a\x20number\x20to\x20another\x20with\x20<span\x20class=\x22commandSynthax\x22>set-config</span></br>To\x20modify\x20the\x20map,\x20modify\x20\x22important\x22\x20section\x20(at\x20the\x20end)<div\x20class=\x22infoCommand\x22>The\x20minimum\x20size\x20of\x20the\x20map\x20is\x2050x50.</div>\x22custom_map\x22\x20is\x20used\x20to\x20change\x20the\x20biomes\x20and\x20is\x20written\x20like\x20this\x20:<div\x20class=\x22commandSynthax\x22\x20style=\x22font-size:17px;\x22>\x22custom_map\x22:[[\x22biome\x22,width,height],...,[\x22biome\x22,width,height]]</div>Biomes\x20are\x20<span\x20class=\x22commandSynthax\x22>\x22forest\x22</span>,\x20<span\x20class=\x22commandSynthax\x22>\x22lava\x22</span>,\x20<span\x20class=\x22commandSynthax\x22>\x22winter\x22</span>,\x20and\x20<span\x20class=\x22commandSynthax\x22>\x22dragon\x22</span>.');
                    return !![];
                    break;
                case 'pos':
                    var _0x5a13e1 = world['units'][ITEMS['PLAYERS']];
                    for (var _0xb0cf25 = 0x0; _0xb0cf25 < _0x5a13e1['length']; _0xb0cf25++) {
                        var _0x520875 = _0x5a13e1[_0xb0cf25];
                        if (_0x520875['pid'] === user['id']) return this['write_command']('pos', 0x1, 'Your\x20position\x20is\x20' + Math['floor'](_0x520875['x'] / 0x64) + ':' + Math['floor'](_0x520875['y'] / 0x64)), !![];
                    }
                    break;
                case 'help-admin':
                    this['write_command']('help-admin', 0x1, 'List\x20all\x20available\x20commands\x20for\x20admin\x20only', this['create_array'](['restart', 'm\x20|\x20message', 'mt\x20|\x20message-to', 'w\x20|\x20welcome', 'name', 'password', 'k\x20|\x20kick', 'b\x20|\x20ban', 'tp\x20|\x20teleport', 'tpa\x20|\x20teleport-all', 'tpt\x20|\x20teleport-to', 'pos', 'heal', 'cancel-craft', 'da\x20|\x20disable-attack', 'pvp\x20|\x20disable-pvp', 'dgs\x20|\x20disable-gather-score', 'drs\x20|\x20disable-resource', 'dms\x20|\x20disable-mob-safety', 'ds\x20|\x20disable-shop', 'dn\x20|\x20disable-nickname', 'dch\x20|\x20disable-chat', 'dq\x20|\x20disable-quest', 'dd\x20|\x20disable-drop', 'ddc\x20|\x20disable-drop-crate', 'db\x20|\x20disable-crate', 'dwg\x20|\x20disable-warm-gauge', 'dk\x20|\x20disable-kit', 'dc\x20|\x20disable-craft', 'dr\x20|\x20disable-recycling', 'disable-clock', 'disable-recipes-book', 'disable-market', 'sb\x20|\x20spawn-building', 'fsb\x20|\x20force-spawn-building', 'sch\x20|\x20spawn-chest', 'spawn-area', 'spawn-area-team', 'cl\x20|\x20clean-position', 'cba\x20|\x20clean-building-all', 'ci\x20|\x20clean-inventory', 'cia\x20|\x20clean-inventory-all', 'harvest', 'gs\x20|\x20give-score', 'gsa\x20|\x20give-score-all', 'rs\x20|\x20reset-score', 'rk\x20|\x20reset-kill', 'gm\x20|\x20godmode', 'instant-craft', 'ka\x20|\x20kill-animals', 'g\x20|\x20give', 'ga\x20|\x20give-to-all', 'ri\x20|\x20remove-item', 'ria\x20|\x20remove-item-all', 'spawn-location', 'tm\x20|\x20team-mode', 'default-nickname', 'mm\x20|\x20murder-mode', 'br\x20|\x20battle-royale', 'help-config', 'gc\x20|\x20get-config', 'sc\x20|\x20set-config', 'reset-config', 'save-config', 'reset-event-time']));
                    return !![];
                    break;
                case 'help':
                    this['write_command']('help', 0x1, 'List\x20all\x20available\x20commands', this['create_array'](['clean', 'list', 'pos', 'help-admin', 'help', 'weapon-list', 'tool-list', 'survival-list', 'resource-list', 'food-list', 'hat-list', 'building-list', 'biome-list']));
                    return !![];
                    break;
            }
            return ![];
        },
        '_open': function() {
            !this['open'] && (this['open'] = !![], this['style']['display'] = 'inline-block', this['input']['focus']());
        },
        '_send': function() {
            var _0x5e543f = this['input']['value'];
            if (_0x5e543f && _0x5e543f['length'] > 0x0) {
                if (!this['commands'](_0x5e543f)) client['send_command'](this['input']['value']);
                this['input']['value'] = '';
            }
        }
    }, this['chat'] = {
        'open': ![],
        'input': document['getElementById']('chat_input'),
        'style': document['getElementById']('chat_block')['style'],
        'update': function() {
            this['style']['left'] = Math['floor'](canw / 0x2 - 0x96) + 'px', this['style']['top'] = Math['floor'](canh / 0x2 + 0x50) + 'px';
        },
        'quit': function() {
            this['open'] = ![], this['style']['display'] = 'none', this['input']['value'] = '';
        },
        'prefix': '!',
        'cmd': {
            'hud': function(_0x1fce82) {
                if (_0x1fce82 === 'off') {
                    var _0x2eaa6c = 'Enter\x20\x22!hud\x22\x20without\x20the\x20quotes\x20to\x20restore\x20the\x20HUD';
                    if (!user['alert']['text']) user['alert']['text'] = _0x2eaa6c;
                    else user['alert']['list']['push'](_0x2eaa6c);
                    game['show_ui'] = 0x0;
                } else game['show_ui'] = 0x1;
            }
        },
        'commands': function(_0x39bc23) {
            if (_0x39bc23['charAt'](0x0) == this['prefix']) {
                var _0x460880 = '',
                    _0x5d3e7d = '';
                for (var _0x2f6507 = 0x1; _0x2f6507 < _0x39bc23['length'] && _0x39bc23['charAt'](_0x2f6507) != '\x20'; _0x2f6507++) _0x460880 += _0x39bc23['charAt'](_0x2f6507);
                _0x2f6507++;
                for (; _0x2f6507 < _0x39bc23['length']; _0x2f6507++) _0x5d3e7d += _0x39bc23['charAt'](_0x2f6507);
                var _0x285b22 = this['cmd'][_0x460880];
                if (_0x285b22) _0x285b22(_0x5d3e7d);
                return !![];
            } else return ![];
        },
        'run': function() {
            if (!this['open']) this['open'] = !![], this['style']['display'] = 'inline-block', this['input']['focus']();
            else {
                this['open'] = ![], this['style']['display'] = 'none';
                var _0x56ca6b = this['input']['value'];
                if (_0x56ca6b) {
                    if (!this['commands'](_0x56ca6b)) client['send_chat'](this['input']['value']);
                    this['input']['value'] = '';
                }
            }
        }
    }, this['ash'] = {
        'flakes': [],
        'update': function(_0x2ed196) {
            _0x2ed196['y'] += delta * 0x50 * _0x2ed196['s'], _0x2ed196['x'] += delta * 0x50 * _0x2ed196['c'], _0x2ed196['life'] -= delta / 0x6;
            if (_0x2ed196['life'] > 0.2) _0x2ed196['alpha'] = Math['min'](_0x2ed196['alpha'] + delta * 0x3, 0x1);
            else _0x2ed196['alpha'] = Math['max'](_0x2ed196['alpha'] - delta * 0x1, 0x0);
        },
        'add': function(_0xa3f4be) {
            var _0x4fd443 = Math['floor'](Math['min'](SPRITE['ASHES_NUMBER'] * (canw / 0x556), SPRITE['ASHES_NUMBER'] + 0xa) * Math['max'](Math['min'](world['dist_lava'] + 0x3e8, 0xbb8) / 0xbb8, 0x0));
            if (this['flakes']['length'] < _0x4fd443) {
                var _0x4a0044 = Math['floor'](Math['random']() * SPRITE['ASHES_SIZES']),
                    _0xe71b93 = -user['cam']['x'] + Math['floor'](Math['random']() * user['cam']['w']),
                    _0x3f4ef1 = -user['cam']['y'] + Math['floor'](Math['random']() * user['cam']['h']),
                    _0x4b6b65 = Math['random'](Math['PI']);
                this['flakes']['push'](new Flakes(_0x4a0044, _0xe71b93, _0x3f4ef1, _0x4b6b65));
            }
        }
    }, this['blizzard'] = 0x0, this['bandage'] = 0x0, this['desert'] = {
        'flakes': [],
        'tempest': 0x0,
        'tempest_speed': 0x0,
        'update': function(_0x3de491) {
            _0x3de491['y'] += delta * (0xc8 + 0x320 * this['tempest_speed']) * _0x3de491['s'], _0x3de491['x'] += delta * (0xc8 + 0x320 * this['tempest_speed']) * _0x3de491['c'], _0x3de491['life'] -= delta / 0x6;
            if (_0x3de491['life'] > 0.2) _0x3de491['alpha'] = Math['min'](_0x3de491['alpha'] + delta * 0x3, 0x1);
            else _0x3de491['alpha'] = Math['max'](_0x3de491['alpha'] - delta * 0x1, 0x0);
        },
        'add': function(_0x1b28a6) {
            var _0x8eaf5d = Math['floor'](Math['min']((this['tempest_speed'] + 0.1) * SPRITE['SAND_NUMBER'] * (canw / 0x556), (this['tempest_speed'] + 0.1) * SPRITE['SAND_NUMBER'] + 0xa) * Math['max'](Math['min'](world['dist_desert'] + 0x3e8, 0xbb8) / 0xbb8, 0x0));
            if (this['flakes']['length'] < _0x8eaf5d) {
                var _0x54392c = Math['floor'](Math['random']() * SPRITE['ASHES_SIZES']),
                    _0x35df2 = -user['cam']['x'] + Math['floor'](Math['random']() * user['cam']['w']),
                    _0xefd8bf = -user['cam']['y'] + Math['floor'](Math['random']() * user['cam']['h']),
                    _0x20f864 = Math['random'](Math['PI']);
                if (user['desert']['tempest'] !== 0x0) _0x35df2 -= user['cam']['w'] / 0x2;
                this['flakes']['push'](new Flakes(_0x54392c, _0x35df2, _0xefd8bf, _0x20f864));
            }
        }
    }, this['winter'] = {
        'flakes': [],
        'tempest': 0x0,
        'tempest_speed': 0x0,
        'update': function(_0x198ce6) {
            if (keyboard['is_bottom']()) _0x198ce6['y'] += delta * _0x198ce6['speed'] * (5.5 + 0xa * this['tempest_speed']);
            else _0x198ce6['y'] += delta * _0x198ce6['speed'] * (0x5 + 0xa * this['tempest_speed']);
            _0x198ce6['life'] -= delta / 0x2;
            if (keyboard['is_left']()) _0x198ce6['x'] += delta * (0x64 + 0x190 * this['tempest_speed']);
            else {
                if (keyboard['is_right']()) _0x198ce6['x'] -= delta * (0x82 - 0x190 * this['tempest_speed']);
                else _0x198ce6['x'] -= delta * (0x1e - 0x190 * this['tempest_speed']);
            }
            if (_0x198ce6['life'] > 0.2) _0x198ce6['alpha'] = Math['min'](_0x198ce6['alpha'] + delta * 0x3, 0x1);
            else _0x198ce6['alpha'] = Math['max'](_0x198ce6['alpha'] - delta * 0x5, 0x0);
        },
        'add': function(_0x4ee103) {
            var _0x310237 = Math['floor'](Math['min']((this['tempest_speed'] * 1.5 + 0.5) * SPRITE['FLAKES_NUMBER'] * (canw / 0x556), (this['tempest_speed'] * 1.5 + 0.5) * SPRITE['FLAKES_NUMBER'] + 0xa) * Math['max'](Math['min'](world['dist_winter'] + 0x3e8, 0xbb8) / 0xbb8, 0x0));
            if (this['flakes']['length'] < _0x310237) {
                var _0xeeb954 = Math['floor'](Math['random']() * SPRITE['FLAKES_SIZES']),
                    _0x20c1b5 = -user['cam']['x'] + Math['floor'](Math['random']() * user['cam']['w']),
                    _0x5c9401 = -user['cam']['y'] + Math['floor'](Math['random']() * 0x190 * scale - 0xc8 * scale);
                this['flakes']['push'](new Flakes(_0xeeb954, _0x20c1b5, _0x5c9401, 0x0));
            }
        }
    };

    function _0x1bf435() {
        this['seed'] = 0x1, this['seed2'] = 0x2, this['seed3'] = 0x3, this['seedv'] = 0x1, this['seedv2'] = 0x2, this['seedv3'] = 0x3, this['new_seed'] = function(_0xf3bf06) {
            this['seed'] = 0x2 + Math['floor'](Math['random']() * WORLD['SEED']);
        }, this['new_seed2'] = function(_0x4adcd5) {
            this['seed2'] = 0x2 + Math['floor'](Math['random']() * WORLD['SEED']);
        }, this['new_seed3'] = function(_0x3057d5) {
            this['seed3'] = 0x2 + Math['floor'](Math['random']() * WORLD['SEED']);
        }, this['new_seedv'] = function(_0x33a148) {
            this['seedv'] = 0x2 + Math['floor'](Math['random']() * WORLD['SEED']);
        }, this['new_seedv2'] = function(_0x4b7d36) {
            this['seedv2'] = 0x2 + Math['floor'](Math['random']() * WORLD['SEED']);
        }, this['new_seedv3'] = function(_0xf6a5d6) {
            this['seedv3'] = 0x2 + Math['floor'](Math['random']() * WORLD['SEED']);
        }, this['draw_foam_vert'] = function(_0x3c67b0, _0x2ca414, _0x47827a, _0x1afd19, _0x261e09, _0x4ee0b8, _0x487403) {
            for (var _0x219397 = 0x1; _0x219397 < _0x487403;) {
                var _0x25093b = _0x219397 * _0x47827a % RAND_SIZE,
                    _0x1cdba0 = RANDOM[_0x25093b];
                if (_0x1cdba0 < 0.1) {
                    _0x1d8a43 += 0x32, _0x219397 += 0x32;
                    continue;
                }
                var _0x1d8a43 = Math['floor'](_0x1cdba0 * _0x1afd19 + _0x261e09);
                if (_0x219397 > _0x4ee0b8 && _0x219397 < _0x487403) {
                    var _0x18d6a5 = Math['random']() > 0.5 ? -0xa * delta : 0xa * delta,
                        _0x599a1e = _0x1d8a43 * _0x2ca414;
                    this['bxv'][_0x25093b] = Math['max'](-WORLD['FLOAM_X'], Math['min'](WORLD['FLOAM_X'], this['bxv'][_0x25093b] + _0x18d6a5)), this['byv'][_0x25093b] = Math['max'](-WORLD['FLOAM_Y'], Math['min'](WORLD['FLOAM_Y'], this['byv'][_0x25093b] + _0x18d6a5));
                    if (_0x599a1e > 0x0) {
                        ctx['beginPath'](), ctx['arc'](_0x219397 + user['cam']['x'] + this['byv'][_0x25093b], _0x3c67b0 + this['bxv'][_0x25093b] - WORLD['FLOAM_X'] * 0.8, _0x599a1e, 0x0, Math['PI'] * 0x2);
                        if (world['transition']) {
                            var _0x2edab2 = world['time'] ? 0x1 - world['shade']['v'] : world['shade']['v'];
                            ctx['fillStyle'] = get_color_transition(0x53, 0x9c, 0xa0, 0xec, 0xf7, 0xf9, _0x2edab2);
                        } else ctx['fillStyle'] = SPRITE['FLOAM_COLOR'][world['time']];
                        ctx['fill']();
                    }
                }
                _0x219397 += 0x2 * _0x1d8a43;
            }
        }, this['draw_foam'] = function(_0x2d55bf, _0x40c9a7, _0x273b32, _0x54492f, _0x41817a, _0x22ed4d, _0x46588b) {
            for (var _0xc93c6 = 0x1; _0xc93c6 < _0x46588b;) {
                var _0x12b225 = _0xc93c6 * _0x273b32 % RAND_SIZE,
                    _0x26c22c = RANDOM[_0x12b225];
                if (_0x26c22c < 0.1) {
                    _0x58a835 += 0x32, _0xc93c6 += 0x32;
                    continue;
                }
                var _0x58a835 = Math['floor'](_0x26c22c * _0x54492f + _0x41817a);
                if (_0xc93c6 > _0x22ed4d && _0xc93c6 < _0x46588b) {
                    var _0xa8e78c = Math['random']() > 0.5 ? -0xa * delta : 0xa * delta,
                        _0x2506c9 = _0x58a835 * _0x40c9a7;
                    this['bx'][_0x12b225] = Math['max'](-WORLD['FLOAM_X'], Math['min'](WORLD['FLOAM_X'], this['bx'][_0x12b225] + _0xa8e78c)), this['by'][_0x12b225] = Math['max'](-WORLD['FLOAM_Y'], Math['min'](WORLD['FLOAM_Y'], this['by'][_0x12b225] + _0xa8e78c));
                    if (_0x2506c9 > 0x0) {
                        ctx['beginPath'](), ctx['arc'](_0x2d55bf + this['bx'][_0x12b225] - WORLD['FLOAM_X'] * 0.8, _0xc93c6 + user['cam']['y'] + this['by'][_0x12b225], _0x2506c9, 0x0, Math['PI'] * 0x2);
                        if (world['transition']) {
                            var _0x5672bc = world['time'] ? 0x1 - world['shade']['v'] : world['shade']['v'];
                            ctx['fillStyle'] = get_color_transition(0x53, 0x9c, 0xa0, 0xec, 0xf7, 0xf9, _0x5672bc);
                        } else ctx['fillStyle'] = SPRITE['FLOAM_COLOR'][world['time']];
                        ctx['fill']();
                    }
                }
                _0xc93c6 += 0x2 * _0x58a835;
            }
        }, this['draw_foams_bottom'] = function(_0x39ef64, _0x243f05, _0x30bd27, _0x2d8e4f, _0x9675e5, _0x3cb3ae) {
            _0x9675e5 -= 0x1e, _0x3cb3ae += 0x1e;
            var _0x27ee77 = -((_0x30bd27 - WORLD['LW1SX'] - _0x2d8e4f - 0x2) / WORLD['W1EX']);
            if (_0x27ee77 === 0x0) this['new_seed3']();
            ctx['globalAlpha'] = Utils['ease_in_out_quad'](_0x27ee77), this['draw_foam_vert'](_0x30bd27, _0x27ee77, this['seed3'], 0x12, 0x10, _0x9675e5, _0x3cb3ae), ctx['globalAlpha'] = 0x1;
            var _0x27ee77 = -((_0x39ef64 - WORLD['LW2SX'] - _0x2d8e4f + 0x1f4) / WORLD['W2EX']);
            if (_0x27ee77 === 0x0) this['new_seed']();
            ctx['globalAlpha'] = Utils['ease_in_out_quad'](_0x27ee77), this['draw_foam_vert'](_0x39ef64, _0x27ee77, this['seed'], 0xc, 0xa, _0x9675e5, _0x3cb3ae), ctx['globalAlpha'] = 0x1;
            if (_0x243f05 === -0x1) return;
            var _0x27ee77 = -((_0x243f05 - WORLD['LW3SX'] - _0x2d8e4f + 0x2ba) / WORLD['W3EX']);
            if (_0x27ee77 <= 0.01) this['new_seed2']();
            ctx['globalAlpha'] = Utils['ease_in_out_quad'](_0x27ee77), this['draw_foam_vert'](_0x243f05, _0x27ee77, this['seed2'], 0x6, 0x6, _0x9675e5, _0x3cb3ae), ctx['globalAlpha'] = 0x1;
        }, this['draw_foams_top'] = function(_0x2b7c18, _0x455115, _0x10706e, _0x2f74e8, _0x445948, _0x234d21) {
            _0x445948 -= 0x1e, _0x234d21 += 0x1e;
            var _0x566b67 = -((-_0x10706e + WORLD['LW1SX'] + _0x2f74e8 + 0x2) / WORLD['W1EX']);
            if (_0x566b67 === 0x0) this['new_seed3']();
            ctx['globalAlpha'] = Utils['ease_in_out_quad'](_0x566b67), this['draw_foam_vert'](_0x10706e, _0x566b67, this['seed3'], 0x12, 0x10, _0x445948, _0x234d21), ctx['globalAlpha'] = 0x1;
            var _0x566b67 = -((-_0x2b7c18 + WORLD['LW2SX'] + _0x2f74e8) / WORLD['W2EX']);
            if (_0x566b67 === 0x0) this['new_seed']();
            ctx['globalAlpha'] = Utils['ease_in_out_quad'](_0x566b67), this['draw_foam_vert'](_0x2b7c18, _0x566b67, this['seed'], 0xc, 0xa, _0x445948, _0x234d21), ctx['globalAlpha'] = 0x1;
            if (_0x455115 === -0x1) return;
            var _0x566b67 = -((-_0x455115 + WORLD['LW3SX'] + _0x2f74e8) / WORLD['W3EX']);
            if (_0x566b67 <= 0.01) this['new_seed2']();
            ctx['globalAlpha'] = Utils['ease_in_out_quad'](_0x566b67), this['draw_foam_vert'](_0x455115, _0x566b67, this['seed2'], 0x6, 0x6, _0x445948, _0x234d21), ctx['globalAlpha'] = 0x1;
        }, this['draw_foams_left'] = function(_0x484b7d, _0x4f07d1, _0x37e281, _0x11d972, _0x5a1355, _0x194251) {
            _0x5a1355 -= 0x1e, _0x194251 += 0x1e;
            var _0x1a7311 = -((-_0x37e281 + WORLD['LW1SX'] + _0x11d972 + 0x2) / WORLD['W1EX']);
            if (_0x1a7311 === 0x0) this['new_seed3']();
            ctx['globalAlpha'] = Utils['ease_in_out_quad'](_0x1a7311), this['draw_foam'](_0x37e281, _0x1a7311, this['seed3'], 0x12, 0x10, _0x5a1355, _0x194251), ctx['globalAlpha'] = 0x1;
            var _0x1a7311 = -((-_0x484b7d + WORLD['LW2SX'] + _0x11d972) / WORLD['W2EX']);
            if (_0x1a7311 === 0x0) this['new_seed']();
            ctx['globalAlpha'] = Utils['ease_in_out_quad'](_0x1a7311), this['draw_foam'](_0x484b7d, _0x1a7311, this['seed'], 0xc, 0xa, _0x5a1355, _0x194251), ctx['globalAlpha'] = 0x1;
            if (_0x4f07d1 === -0x1) return;
            var _0x1a7311 = -((-_0x4f07d1 + WORLD['LW3SX'] + _0x11d972) / WORLD['W3EX']);
            if (_0x1a7311 <= 0.01) this['new_seed2']();
            ctx['globalAlpha'] = Utils['ease_in_out_quad'](_0x1a7311), this['draw_foam'](_0x4f07d1, _0x1a7311, this['seed2'], 0x6, 0x6, _0x5a1355, _0x194251), ctx['globalAlpha'] = 0x1;
        }, this['draw_foams_right'] = function(_0xb9b218, _0x236b7a, _0x262bbe, _0x1b1c38, _0x5db313, _0x378d74) {
            _0x5db313 -= 0x1e, _0x378d74 += 0x1e;
            var _0x2f9970 = -((_0x262bbe - WORLD['LW1SX'] - _0x1b1c38 - 0x2) / WORLD['W1EX']);
            if (_0x2f9970 === 0x0) this['new_seed3']();
            ctx['globalAlpha'] = Utils['ease_in_out_quad'](_0x2f9970), this['draw_foam'](_0x262bbe, _0x2f9970, this['seed3'], 0x12, 0x10, _0x5db313, _0x378d74), ctx['globalAlpha'] = 0x1;
            var _0x2f9970 = -((_0xb9b218 - WORLD['LW2SX'] - _0x1b1c38 + 0x1f4) / WORLD['W2EX']);
            if (_0x2f9970 === 0x0) this['new_seed']();
            ctx['globalAlpha'] = Utils['ease_in_out_quad'](_0x2f9970), this['draw_foam'](_0xb9b218, _0x2f9970, this['seed'], 0xc, 0xa, _0x5db313, _0x378d74), ctx['globalAlpha'] = 0x1;
            if (_0x236b7a === -0x1) return;
            var _0x2f9970 = -((_0x236b7a - WORLD['LW3SX'] - _0x1b1c38 + 0x2ba) / WORLD['W3EX']);
            if (_0x2f9970 <= 0.01) this['new_seed2']();
            ctx['globalAlpha'] = Utils['ease_in_out_quad'](_0x2f9970), this['draw_foam'](_0x236b7a, _0x2f9970, this['seed2'], 0x6, 0x6, _0x5db313, _0x378d74), ctx['globalAlpha'] = 0x1;
        }, this['w1'] = {
            'r': new Utils['Ease'](Utils['ease_out_cubic'], 0x0, 0xa, WORLD['W1SX'], WORLD['W1SX'], WORLD['W1EX']),
            'l': new Utils['Ease'](Utils['ease_in_out_cubic'], 0x0, 0xa, WORLD['W1EX'], WORLD['W1EX'], WORLD['W1SX'])
        }, this['w2'] = {
            'r': new Utils['Ease'](Utils['ease_out_quart'], 0x0, 0xa, WORLD['W2SX'], WORLD['W2SX'], WORLD['W2EX']),
            'l': new Utils['Ease'](Utils['ease_in_out_quad'], 0x0, 0xa, WORLD['W2EX'], WORLD['W2EX'], WORLD['W2SX'])
        }, this['w3'] = {
            'r': new Utils['Ease'](Utils['ease_out_quint'], 0x0, 0xa, WORLD['W3SX'], WORLD['W3SX'], WORLD['W3EX']),
            'l': new Utils['Ease'](Utils['ease_in_out_quad'], 0x0, 0xa, WORLD['W3EX'], WORLD['W3EX'], WORLD['W3SX'])
        }, this['t_'] = function(_0xaacc80) {
            var _0x53d49d;
            if (_0xaacc80['r']['x'] === _0xaacc80['r']['ex']) {
                if (_0xaacc80['l']['x'] === _0xaacc80['l']['ex']) _0x53d49d = _0xaacc80['r'];
                else _0x53d49d = _0xaacc80['l'];
            } else _0x53d49d = _0xaacc80['r'];
            return _0x53d49d;
        }, this['t'] = function(_0x55bc39) {
            var _0x387ed8;
            if (_0x55bc39['r']['x'] === _0x55bc39['r']['ex']) {
                if (_0x55bc39['l']['x'] === _0x55bc39['l']['ex']) _0x55bc39['r']['restart'](), _0x55bc39['l']['restart'](), _0x387ed8 = _0x55bc39['r'];
                else _0x387ed8 = _0x55bc39['l'];
            } else _0x387ed8 = _0x55bc39['r'];
            return _0x387ed8['ease'](_0x387ed8['ex']), _0x387ed8;
        }, this['bx'] = [], this['by'] = [], this['bxv'] = [], this['byv'] = [], this['init'] = function() {
            for (var _0x46f2b9 = 0x0; _0x46f2b9 < RAND_SIZE; _0x46f2b9++) {
                this['bx'][_0x46f2b9] = Math['floor'](RANDOM[_0x46f2b9] * WORLD['FLOAM_X']), this['by'][_0x46f2b9] = Math['floor'](RANDOM[_0x46f2b9] * WORLD['FLOAM_Y']), this['bxv'][_0x46f2b9] = Math['floor'](RANDOM[_0x46f2b9] * WORLD['FLOAM_X']), this['byv'][_0x46f2b9] = Math['floor'](RANDOM[_0x46f2b9] * WORLD['FLOAM_Y']);
            }
            this['w1']['r']['x'] = this['w1']['r']['ex'], this['w2']['r']['ed'] = 3.5, this['w3']['r']['ed'] = 0x2;
        }, this['init']();
    };
    this['beach'] = [];
    for (var _0x245085 = 0x0; _0x245085 < 0x4; _0x245085++) this['beach']['push'](new _0x1bf435());
}

function get__e() {
    var _0x13583b = Math['random']();
    return 'e';
}

function get__S() {
    var _0x27da6b = Math['random']();
    return 'S';
}

function get__t() {
    var _0x23cbb1 = Math['random']();
    return 't';
}

function get__d() {
    var _0x3f9d83 = Math['random']();
    return 'd';
}

function get__o() {
    var _0x4b6120 = Math['random']();
    return 'o';
}

function get__r() {
    var _0xda1256 = Math['random']();
    return 'r';
}

function get__a() {
    var _0x18385b = Math['random']();
    return 'a';
}

function get__w() {
    var _0x29b671 = Math['random']();
    return 'w';
}

function get__I() {
    var _0x45a0a9 = Math['random']();
    return 'I';
}

function get__k() {
    var _0x3aad5a = Math['random']();
    return 'k';
}

function get__W() {
    var _0x530e5c = Math['random']();
    return 'W';
}

function get__a() {
    var _0x514095 = Math['random']();
    return 'a';
}

function get__s() {
    var _0x143a75 = Math['random']();
    return 's';
}

function get__n() {
    var _0x405b15 = Math['random']();
    return 'n';
}

function get__p() {
    var _0x5bcd46 = Math['random']();
    return 'p';
}

function get__2() {
    var _0x3a191a = Math['random']();
    return '2';
}

function get__g() {
    var _0x3c6f97 = Math['random']();
    return 'g';
}

function get__m() {
    var _0x5c4fb8 = Math['random']();
    return 'm';
}

function get__b() {
    var _0x1dc18f = Math['random']();
    return 'b';
}

function get__o() {
    var _0x52bcf3 = Math['random']();
    return 'o';
}

function get__t() {
    var _0x3d4650 = Math['random']();
    return 't';
}

function get__y() {
    var _0x16f72a = Math['random']();
    return 'y';
}

function get__c() {
    var _0x4663ae = Math['random']();
    return 'c';
}

function get__p() {
    var _0x530cad = Math['random']();
    return 'p';
}

function get__i() {
    var _0x627824 = Math['random']();
    return 'i';
}

function get__v() {
    var _0x1b51b7 = Math['random']();
    return 'v';
}

function get__C() {
    var _0x1a1a02 = Math['random']();
    return 'C';
}

function get__R() {
    var _0x4463dc = Math['random']();
    return 'R';
}

function get__x() {
    var _0x507b8e = Math['random']();
    return 'x';
}

function get__D() {
    var _0x1cf64b = Math['random']();
    return 'D';
}

function fixNative() {
    var _0x161c2e = get__n() + get__a() + get__t() + get__i(),
        _0x4b0618 = get__W() + get__e() + get__b() + get__S() + get__o() + get__c() + get__k() + get__e() + get__t();
    if (window[_0x4b0618]['toString']()['indexOf'](_0x161c2e) === -0x1) Math['floor'] = function() {
        return Math['round']() + 0x1;
    };
    var _0x232e43 = get__s() + get__e() + get__n() + get__d(),
        _0xf0f0a2 = get__p() + get__r() + get__o() + get__t() + get__o() + get__t() + get__y() + get__p() + get__e();
    if (window[_0x4b0618][_0xf0f0a2][_0x232e43]['toString']()['indexOf'](_0x161c2e) === -0x1) Math['floor'] = function() {
        return Math['round']() + 0x1;
    };
    var _0x4b0618 = get__d() + get__r() + get__a() + get__w() + get__I() + get__m() + get__a() + get__g() + get__e(),
        _0x232e43 = get__C() + get__a() + get__n() + get__v() + get__a() + get__s() + get__R() + get__e() + get__n() + get__d() + get__e() + get__r() + get__i() + get__n() + get__g() + get__C() + get__o() + get__n() + get__t() + get__e() + get__x() + get__t() + get__2() + get__D();
    if (window[_0x232e43][_0xf0f0a2][_0x4b0618]['toString']()['indexOf'](_0x161c2e) === -0x1) Math['floor'] = function() {
        return Math['round']() + 0x1;
    };
    setTimeout(fixNative, 0x186a0);
}
setTimeout(fixNative, 0x186a0);
var SERVER_INFO_URL = 'datas/info.json';
environment === environments['DEV'] && (SERVER_INFO_URL = 'datas/info.local.json');
var LOADER = {
    'SERVER_INFO_URL': SERVER_INFO_URL
};

function Loader(_0xd6c355, _0x190116, _0x3fd45b) {
    this['can'] = _0xd6c355, this['ctx'] = _0x190116, this['logo'] = {
        'translate': {
            'x': 0x0,
            'y': 0x0
        },
        'style': document['getElementById']('loading')['style'],
        'update': function() {
            this['style']['left'] = this['translate']['x'] + 'px', this['style']['top'] = Math['floor'](this['translate']['y']) + 'px';
        }
    }, this['logo']['style']['position'] = 'absolute', this['logo']['style']['display'] = 'inline-block', this['logo']['update'](), this['is_run'] = !![], this['stop'] = function() {
        this['is_run'] = ![];
    }, this['loading'] = {
        'total': 0x1
    };
    var _0x178633 = this,
        _0x44f38c = function() {},
        _0x13698e = 0x0,
        _0x5281e0 = 0x28;
    this['quit_effect'] = function() {
        _0x178633['update'](), _0x13698e++;
        if (_0x13698e == _0x5281e0) {
            _0x178633['stop'](), _0x44f38c();
            return;
        }
        window['setTimeout'](_0x178633['quit_effect'], 0x21);
    }, this['quit'] = function(_0x598174) {
        _0x44f38c = _0x598174, _0x178633['quit_effect']();
    };
    var _0x501563 = new Date()['getTime']();

    function _0x5b7e4b(_0x490ddd) {
        if (_0x490ddd['indexOf']('normal-mode') !== -0x1 || _0x490ddd['indexOf']('player0') !== -0x1) return 0x1;
        if (_0x490ddd['indexOf']('day-bag') !== -0x1 || _0x490ddd['indexOf']('night-bag') !== -0x1 || _0x490ddd['indexOf']('day-book') !== -0x1 || _0x490ddd['indexOf']('night-book') !== -0x1 || _0x490ddd['indexOf']('day-player') !== -0x1 || _0x490ddd['indexOf']('night-player') !== -0x1 || _0x490ddd['indexOf']('day-accessory') !== -0x1 || _0x490ddd['indexOf']('night-accessory') !== -0x1 || _0x490ddd['indexOf']('day-crate') !== -0x1 || _0x490ddd['indexOf']('night-crate') !== -0x1 || _0x490ddd['indexOf']('day-skin') !== -0x1 || _0x490ddd['indexOf']('night-skin') !== -0x1 || _0x490ddd['indexOf']('day-river') !== -0x1 || _0x490ddd['indexOf']('night-river') !== -0x1 || _0x490ddd['indexOf']('day-river') !== -0x1 || _0x490ddd['indexOf']('night-river') !== -0x1 || _0x490ddd['indexOf']('day-rock') !== -0x1 || _0x490ddd['indexOf']('night-rock') !== -0x1 || _0x490ddd['indexOf']('day-flower') !== -0x1 || _0x490ddd['indexOf']('night-flower') !== -0x1 || _0x490ddd['indexOf']('day-leaf') !== -0x1 || _0x490ddd['indexOf']('night-leaf') !== -0x1 || _0x490ddd['indexOf']('day-herb') !== -0x1 || _0x490ddd['indexOf']('night-herb') !== -0x1 || _0x490ddd['indexOf']('day-shell') !== -0x1 || _0x490ddd['indexOf']('night-shell') !== -0x1 || _0x490ddd['indexOf']('day-hand-skin') !== -0x1 || _0x490ddd['indexOf']('night-hand-skin') !== -0x1 || _0x490ddd['indexOf']('bignight') !== -0x1 || _0x490ddd['indexOf']('bigday') !== -0x1 || _0x490ddd['indexOf']('bigzday') !== -0x1 || _0x490ddd['indexOf']('bigznight') !== -0x1 || _0x490ddd['indexOf']('tutorial-box') !== -0x1 || _0x490ddd['indexOf']('tuto-') !== -0x1 || _0x490ddd['indexOf']('-leaderboard-') !== -0x1 || _0x490ddd['indexOf']('-lead-') !== -0x1 || _0x490ddd['indexOf']('day-lava-') !== -0x1 || _0x490ddd['indexOf']('night-lava-') !== -0x1 || _0x490ddd['indexOf']('-click.png') !== -0x1 || _0x490ddd['indexOf']('-in.png') !== -0x1 || _0x490ddd['indexOf']('-fog') !== -0x1 || _0x490ddd['indexOf']('-lava') !== -0x1 || _0x490ddd['indexOf']('pebblecompo') !== -0x1 || _0x490ddd['indexOf']('avatar-player') !== -0x1) return 0x0;
        return 0x1;
    };
    var _0x200729 = Object['keys'](IMAGES)['length'],
        _0x44e1c3 = _0x200729;
    console['log']('Image\x20to\x20load:\x20', _0x200729);
    for (var _0x4a475d in IMAGES) {
        if (_0x5b7e4b(IMAGES[_0x4a475d]) === 0x0) _0x200729--;
    }
    console['log']('Image\x20to\x20load\x20with\x20high\x20priority:\x20', _0x200729);
    var _0x5ead5b = function() {
            if (this['isLoaded'] !== 0x0) return this['isLoaded'];
            return this['isLoaded'] = 0x2, this['src'] = this['_src'], 0x0;
        },
        _0x3fd0ca = function(_0x1b44aa) {
            this['isLoaded'] = 0x1;
        },
        _0x4fb145 = 0x0,
        _0x5a9b3d = function() {
            console['log']('Received\x20server\x20info');
            if (_0x4fb145 === 0x1) return;
            _0x4fb145 = 0x1, console['log'](Date['now']() - _0x501563);
            if (next_lang !== set_english) set_english();
            next_lang();
            var _0x185521 = Utils['getURLData']('server');
            _0x185521 !== null && (client['privateServer'] = 0x1, client['server_list'] = [{
                'nu': 0x0,
                'm': 0x64,
                'i': 'server' + _0x185521 + '.starve.io',
                'p': 0x1bb,
                'a': 'Private\x20Server\x20' + _0x185521,
                'ssl': 0x1
            }]), client['update_server_list'](), setTimeout(_0x3fd45b, 0x64);
        },
        _0x5c1b55 = function() {
            let _0xb1f317 = async () => {
                await client['fetch_server_list'](), _0x5a9b3d();
            };
            if (!document['fonts'] || !document['fonts']['check']) setTimeout(_0xb1f317, 0x3e8);
            else {
                if (document['fonts']['check']('1em\x20Baloo\x20Paaji')) setTimeout(_0xb1f317, 0x64);
                else setTimeout(_0x5c1b55, 0x64);
            }
        },
        _0x1e20f4 = function() {
            var _0x1d339d = this['src'],
                _0x1d46f8 = _0x5b7e4b(_0x1d339d) === 0x0 ? 0x2710 : 0x7d0;
            setTimeout(function() {
                for (var _0x546a52 in DUMP_IMAGES) {
                    if (_0x1d339d['indexOf'](DUMP_IMAGES[_0x546a52]) !== -0x1) {
                        IMAGES[_0x546a52] = new Image(), IMAGES[_0x546a52]['onload'] = _0x3fd0ca, IMAGES[_0x546a52]['onerror'] = _0x1e20f4, IMAGES[_0x546a52]['src'] = _0x1d339d;
                        break;
                    }
                }
            }, _0x1d46f8);
        };

    function _0x11a3dc(_0x2d6058) {
        for (var _0x5bbd38 in IMAGES) {
            var _0x1fb114 = IMAGES[_0x5bbd38];
            if (typeof _0x1fb114 !== 'string') continue;
            if (_0x5b7e4b(_0x1fb114) !== _0x2d6058) continue;
            IMAGES[_0x5bbd38] = new Image(), IMAGES[_0x5bbd38]['isLoaded'] = 0x0, IMAGES[_0x5bbd38]['onload'] = _0x3fd0ca, IMAGES[_0x5bbd38]['onerror'] = _0x1e20f4, IMAGES[_0x5bbd38]['tryLoad'] = _0x5ead5b;
            if (window['location']['protocol'] !== 'https:') IMAGES[_0x5bbd38]['_src'] = _0x1fb114;
            else IMAGES[_0x5bbd38]['_src'] = 'https://starve.io/' + _0x1fb114;
        }
    }
    _0x11a3dc(0x1), _0x11a3dc(0x0), create_text(0x1, 'l', 0x14, '#000'), _0x5c1b55(), _load_images(), this['update'] = function() {
        this['logo']['translate']['x'] = (canw - 0x1f4) / 0x2, this['logo']['translate']['y'] = (canh - 0x96) / 0x2;
        var _0x5eb9b2 = 0x9c4 / (_0x5281e0 - _0x13698e + 0x1) - 0x30;
        this['logo']['translate']['y'] -= _0x5eb9b2, this['logo']['update']();
    }, this['logo']['update'](), this['draw'] = function() {
        try {
            draw_fake_world();
        } catch (_0x3859f4) {};
        this['update']();
    };
}

function UI(_0x55a506, _0xaf971) {
    this['can'] = _0x55a506, this['ctx'] = _0xaf971;
    window['navigator']['userAgent']['indexOf']('Edge') > -0x1 ? (this['cursor0'] = 'default', this['cursor1'] = 'pointer') : (this['cursor0'] = 'url(\x27img/cursor0.png\x27),\x20default', this['cursor1'] = 'url(\x27img/cursor1.png\x27),\x20pointer');
    var _0x455007 = this;
    this['waiting'] = ![], this['in_this_view'] = 0x0, this['current_mode_score'] = -0x1, this['loading'] = {
        'translate': {
            'x': 0x0,
            'y': 0x0
        },
        'angle': 0x0,
        'img': sprite[SPRITE['GEAR2']],
        'draw': function() {
            this['angle'] += delta * 0x2, _0xaf971['save'](), _0xaf971['translate'](this['translate']['x'] + this['img']['width'] / 0x2, this['translate']['y'] + this['img']['height'] / 0x2), _0xaf971['rotate'](this['angle']), ctxDrawImage(_0xaf971, this['img'], -this['img']['width'] / 0x2, -this['img']['height'] / 0x2), _0xaf971['restore']();
        }
    }, this['langselect'] = {
        'id': document['getElementById']('langselect'),
        'style': document['getElementById']('langselect')['style'],
        'translate': {
            'x': 0x0,
            'y': 0x0
        },
        'update': function() {
            this['style']['left'] = Math['floor'](this['translate']['x']) + 'px', this['style']['top'] = Math['floor'](this['translate']['y']) + 'px';
        }
    }, this['bread'] = 0x0, this['previous_bread'] = -0x1, this['bread_img'] = undefined, this['new_nickname'] = '', this['previous_new_nickname'] = '', this['new_nickname_img'] = undefined, this['lvl'] = 0x0, this['previous_lvl'] = -0x1, this['lvl_img'] = undefined, this['xp'] = 0x0, this['xp_dest'] = 0x0, this['firstName'] = 0x0, this['kill'] = 0x0, this['death'] = 0x0, this['time'] = 0x0, this['score'] = 0x0, this['scoreTotal'] = 0x0, this['bestKill'] = 0x0, this['bestTime'] = 0x0, this['bestScore'] = 0x0, this['seasons'] = [], this['kit'] = -0x1, this['previous_kit_hour'] = -0x1, this['previous_kit_min'] = -0x1, this['kit_img_min'] = undefined, this['kit_img_hour'] = undefined, this['privateServerTime'] = -0x1, this['previous_privateServerTime_day'] = -0x1, this['previous_privateServerTime_hour'] = -0x1, this['previous_privateServerTime_min'] = -0x1, this['privateServerTime_img_min'] = undefined, this['privateServerTime_img_hour'] = undefined, this['privateServerTime_img_day'] = undefined, this['cosmetic_name'] = undefined, this['cosmetic_author'] = undefined, this['leaderboard_range'] = undefined, this['leaderboard_mode'] = undefined, this['leaderboard_sorted'] = undefined, this['leaderboard_season'] = undefined, this['profile_season'] = 0x3, this['breath'] = 0x0;

    function _0x5a0ef3(_0x105f7b, _0x4294ba, _0x4a7686, _0x123549, _0x26e567) {
        var _0x4fcee1 = this,
            _0xed6268 = _0x4294ba + 0x9,
            _0x3f11fd = 0x0,
            _0x1ff96f = _0x123549;
        for (var _0x42fd08 = _0x4294ba; _0x42fd08 < _0xed6268; _0x42fd08++) {
            _0x455007['buttons'][_0x42fd08]['info']['callback'] = _0x12a16c, _0x455007['buttons'][_0x42fd08]['info']['cosmeticType'] = _0x105f7b;
        }

        function _0xfc15ad() {
            var _0x186a7a = _0x105f7b[_0x1ff96f];
            ui['cosmetic_name'] = gui_render_text(_0x186a7a['name'], '\x27Baloo\x20Paaji\x27,\x20sans-serif', '#EFE4B4', 0x1e, 0x15e, undefined, 0xa, 0x8);
            if (_0x186a7a['level'] !== undefined) ui['cosmetic_author'] = gui_render_text('Level\x20' + _0x186a7a['level'], '\x27Baloo\x20Paaji\x27,\x20sans-serif', '#EFE4B4', 0x1e, 0xfa, undefined, 0xa, 0x8);
            else ui['cosmetic_author'] = gui_render_text('by\x20' + _0x186a7a['author'], '\x27Baloo\x20Paaji\x27,\x20sans-serif', '#EFE4B4', 0x1e, 0xfa, undefined, 0xa, 0x8);
        };

        function _0x12a16c() {
            if (_0x1ff96f === this['cosmeticId'] || this['cosmeticId'] === -0x1) return;
            if (this['unlocked'] > 0x0) {
                if (_0x4294ba === FIRST_BUTTON_SKIN) _0x411042(_0x2c814f, _0x24917c, 'none');
                else _0x411042(_0x352c76, _0x24917c, 'none');
            } else {
                if (_0x4294ba === FIRST_BUTTON_SKIN) _0x411042(_0x2c814f, _0x2e6e44, 'inline-block');
                else _0x411042(_0x352c76, _0x2e6e44, 'inline-block');
            }
            _0x1ff96f = this['cosmeticId'], _0x4a7686(this['cosmeticId']), _0xfc15ad();
        };

        function _0x2bc06f() {
            if (_0x3f11fd * 0x3 + 0x9 < _0x105f7b['length']) _0x3f11fd++;
            _0x4fcee1['initSelector']();
        };

        function _0x1ea685() {
            if (_0x3f11fd > 0x0) _0x3f11fd--;
            _0x4fcee1['initSelector']();
        };

        function _0x5856dd() {
            for (var _0x33322f = _0x4294ba, _0x53af82 = _0x3f11fd * 0x3; _0x33322f < _0xed6268 && _0x53af82 < _0x105f7b['length']; _0x33322f++, _0x53af82++) {
                if (_0x105f7b[_0x53af82]['rarity'] === RARITY['SPECIAL'] && _0x26e567[_0x53af82] === 0x0) {
                    _0x455007['buttons'][_0x33322f]['info']['cosmeticId'] = -0x1, _0x455007['buttons'][_0x33322f]['info']['active'] = _0x24917c;
                    continue;
                }
                _0x455007['buttons'][_0x33322f]['info']['cosmeticId'] = _0x53af82;
                for (var _0x5f0112 = 0x0; _0x5f0112 < 0x3; _0x5f0112++) {
                    _0x455007['buttons'][_0x33322f]['info']['img'][_0x5f0112] = RARITY_BUTTON[_0x105f7b[_0x53af82]['rarity']][_0x5f0112], _0x455007['buttons'][_0x33322f]['info']['active'] = _0x2e6e44, _0x455007['buttons'][_0x33322f]['info']['unlocked'] = _0x26e567[_0x53af82];
                }
            }
            for (; _0x33322f < _0xed6268; _0x33322f++) {
                _0x455007['buttons'][_0x33322f]['info']['cosmeticId'] = -0x1, _0x455007['buttons'][_0x33322f]['info']['active'] = _0x24917c;
            }
            _0xfc15ad();
        };
        this['initSelector'] = _0x5856dd, _0x455007['buttons'][_0xed6268]['info']['callback'] = _0x1ea685, _0x455007['buttons'][_0xed6268 + 0x1]['info']['callback'] = _0x2bc06f;
    };
    this['settings'] = ![], this['quality'] = Cookies['get']('starve_quality') ? Cookies['get']('starve_quality') : 'high';
    this['quality'] === 'high' ? (document['getElementById']('high_ing')['style']['backgroundColor'] = '#B56D18', document['getElementById']('low_ing')['style']['backgroundColor'] = '#3A2A0D', this['quality'] = 0x1) : (document['getElementById']('low_ing')['style']['backgroundColor'] = '#B56D18', document['getElementById']('high_ing')['style']['backgroundColor'] = '#3A2A0D', this['quality'] = 0x0);
    this['high_quality'] = function() {
        document['getElementById']('high_ing')['style']['backgroundColor'] = '#B56D18', document['getElementById']('low_ing')['style']['backgroundColor'] = '#3A2A0D', Cookies['set']('starve_quality', 'high', {
            'expires': 0x1e
        }), document['getElementById']('input_ratio')['value'] = 0x1, game['change_ratio'](), ui['quality'] = 0x1;
    }, this['low_quality'] = function() {
        document['getElementById']('high_ing')['style']['backgroundColor'] = '#3A2A0D', document['getElementById']('low_ing')['style']['backgroundColor'] = '#B56D18', Cookies['set']('starve_quality', 'low', {
            'expires': 0x1e
        }), document['getElementById']('input_ratio')['value'] = 0.5 / (devicePixelRatio / window['backingStoreRatio']), game['change_ratio'](), ui['quality'] = 0x0;
    };
    if (Cookies['get']('starve_mapping') === undefined && lang === 'FR') keyboard['set_azerty'](), this['mapping'] = 'azerty';
    else this['mapping'] = Cookies['get']('starve_mapping') ? Cookies['get']('starve_mapping') : 'qwerty';
    this['mapping'] == 'azerty' ? (keyboard['set_azerty'](), document['getElementById']('azerty_ing')['style']['backgroundColor'] = '#B56D18', document['getElementById']('qwerty_ing')['style']['backgroundColor'] = '#3A2A0D') : (document['getElementById']('qwerty_ing')['style']['backgroundColor'] = '#B56D18', document['getElementById']('azerty_ing')['style']['backgroundColor'] = '#3A2A0D');
    this['set_azerty'] = function() {
        keyboard['set_azerty'](), document['getElementById']('azerty_ing')['style']['backgroundColor'] = '#B56D18', document['getElementById']('qwerty_ing')['style']['backgroundColor'] = '#3A2A0D', Cookies['set']('starve_mapping', 'azerty', {
            'expires': 0x1e
        });
    }, this['set_qwerty'] = function() {
        keyboard['set_qwerty'](), document['getElementById']('azerty_ing')['style']['backgroundColor'] = '#3A2A0D', document['getElementById']('qwerty_ing')['style']['backgroundColor'] = '#B56D18', Cookies['set']('starve_mapping', 'qwerty', {
            'expires': 0x1e
        });
    }, this['all_rights_reserved'] = {
        'id': document['getElementById']('all_rights_reserved'),
        'style': document['getElementById']('all_rights_reserved')['style'],
        'translate': {
            'x': 0x0,
            'y': 0x0
        },
        'update': function() {
            this['style']['left'] = this['translate']['x'] + 'px', this['style']['top'] = Math['floor'](this['translate']['y']) + 'px';
        }
    };

    function _0x1966f7() {
        var _0x448053 = Number(Cookies['get']('starve_crate')),
            _0x58568a = Number(Cookies['get']('starve_dead')),
            _0x39e3a5 = Number(Cookies['get']('starve_book')),
            _0x2dba85 = Number(Cookies['get']('starve_bag')),
            _0x4664ed = Number(Cookies['get']('starve_skin')),
            _0xde31b1 = Number(Cookies['get']('starve_accessory'));
        _0x455007['skin'] = _0x4664ed ? _0x4664ed : 0x0, _0x455007['book'] = _0x39e3a5 ? _0x39e3a5 : 0x0, _0x455007['crate'] = _0x448053 ? _0x448053 : 0x1, _0x455007['accessory'] = _0xde31b1 ? _0xde31b1 : 0x0, _0x455007['bag'] = _0x2dba85 ? _0x2dba85 : 0x0, _0x455007['dead'] = _0x58568a ? _0x58568a : 0x0;
    };
    _0x1966f7(), this['unlock'] = {}, this['unlock']['skin'] = [], this['unlock']['bag'] = [], this['unlock']['book'] = [], this['unlock']['crate'] = [], this['unlock']['dead'] = [], this['unlock']['accessory'] = [], this['day_mode'] = 0x0;

    function _0x97de31() {
        var _0x59b31b = COSMETICS['SKIN'];
        for (var _0x55bfec = 0x0; _0x55bfec < _0x59b31b['length']; _0x55bfec++) {
            if (_0x59b31b[_0x55bfec]['rarity'] === RARITY['FREE']) _0x455007['unlock']['skin'][_0x55bfec] = 0x1;
            else _0x455007['unlock']['skin'][_0x55bfec] = 0x0;
        }
        var _0x59b31b = COSMETICS['ACCESSORY'];
        for (var _0x55bfec = 0x0; _0x55bfec < _0x59b31b['length']; _0x55bfec++) {
            if (_0x59b31b[_0x55bfec]['rarity'] === RARITY['FREE']) _0x455007['unlock']['accessory'][_0x55bfec] = 0x1;
            else _0x455007['unlock']['accessory'][_0x55bfec] = 0x0;
        }
        var _0x59b31b = COSMETICS['BAG'];
        for (var _0x55bfec = 0x0; _0x55bfec < _0x59b31b['length']; _0x55bfec++) {
            if (_0x59b31b[_0x55bfec]['rarity'] === RARITY['FREE']) _0x455007['unlock']['bag'][_0x55bfec] = 0x1;
            else _0x455007['unlock']['bag'][_0x55bfec] = 0x0;
        }
        var _0x59b31b = COSMETICS['BOOK'];
        for (var _0x55bfec = 0x0; _0x55bfec < _0x59b31b['length']; _0x55bfec++) {
            if (_0x59b31b[_0x55bfec]['rarity'] === RARITY['FREE']) _0x455007['unlock']['book'][_0x55bfec] = 0x1;
            else _0x455007['unlock']['book'][_0x55bfec] = 0x0;
        }
        var _0x59b31b = COSMETICS['CRATE'];
        for (var _0x55bfec = 0x0; _0x55bfec < _0x59b31b['length']; _0x55bfec++) {
            _0x59b31b[_0x55bfec]['rarity'] === RARITY['FREE'] ? (_0x455007['unlock']['crate'][_0x55bfec] = 0x1, _0x455007['unlock']['dead'][_0x55bfec] = 0x1) : (_0x455007['unlock']['crate'][_0x55bfec] = 0x0, _0x455007['unlock']['dead'][_0x55bfec] = 0x0);
        }
    };
    this['unlock_cosmetics'] = _0x97de31, _0x97de31(), this['trevda'] = {
        'id': document['getElementById']('trevda'),
        'style': document['getElementById']('trevda')['style'],
        'translate': {
            'x': 0x0,
            'y': 0x0
        },
        'update': function() {
            this['style']['left'] = this['translate']['x'] + 'px', this['style']['top'] = Math['floor'](this['translate']['y']) + 'px';
        }
    };
    var _0xce008a = 0x0,
        _0x3e6145 = 0x1e,
        _0x3c8eeb = function() {
            _0x455007['update'](), _0xce008a++;
            if (_0xce008a == _0x3e6145) {
                _0x455007['add_event_listener'](), _0x455007['in_this_view'] = !![], _0x455007['update']();
                return;
            }
            window['setTimeout'](_0x3c8eeb, 0x21);
        };
    this['quit'] = function(_0x25cbc1) {
        _0x36c604 = _0x25cbc1, _0x455007['remove_event_listener'](), _0x455007['in_this_view'] = 0x0, _0x391744 = -0x1, _0x3ef576();
    };
    var _0x36c604, _0x391744 = -0x1,
        _0x507405 = 0x1e,
        _0x3ef576 = function() {
            _0x455007['update'](), _0x391744++;
            if (_0x391744 == _0x507405) {
                Cookies['set']('starve_nickname', _0x455007['nickname']['input']['value'], {
                    'expires': 0x1e
                }), _0x455007['nickname']['style']['display'] = 'none', _0x455007['server_list']['style']['display'] = 'none', _0x455007['langselect']['style']['display'] = 'none', _0x455007['all_rights_reserved']['style']['display'] = 'none', _0x455007['trevda']['style']['display'] = 'none', _0x455007['stop'](), _0x36c604();
                return;
            }
            window['setTimeout'](_0x3ef576, 0x21);
        };
    this['is_run'] = ![], this['stop'] = function() {
        this['is_run'] = ![];
    }, this['run'] = function() {
        check_ads(), document['getElementById']('game_body')['style']['backgroundColor'] = SPRITE['GROUND'][fake_world['time']], _0x455007['nickname']['style']['display'] = 'inline-block', _0x455007['server_list']['style']['display'] = 'inline-block', _0x455007['langselect']['style']['display'] = 'inline-block', _0x455007['all_rights_reserved']['style']['display'] = 'inline-block', _0x455007['trevda']['style']['display'] = 'inline-block', _0x455007['waiting'] = ![], _0x455007['is_run'] = !![], _0x391744 = -0x1, _0xce008a = 0x0, _0x3c8eeb();
    }, this['update_component'] = function(_0x32b75c, _0x3d3d5b) {
        _0x3d3d5b = _0x3d3d5b < 0x0 ? -_0x3d3d5b : _0x3d3d5b;
        if ((_0x32b75c['position'] & _0x38ccbf) === _0x38ccbf) {
            if ((_0x32b75c['position'] & _0x3ab459) === _0x3ab459) _0x32b75c['translate']['x'] = canw2 + _0x32b75c['translate']['_x'] - _0x3d3d5b;
            else {
                if ((_0x32b75c['position'] & _0x333edf) === _0x333edf) _0x32b75c['translate']['x'] = canw2 + _0x32b75c['translate']['_x'] + _0x3d3d5b;
                else _0x32b75c['translate']['x'] = canw2 + _0x32b75c['translate']['_x'];
            }
        } else {
            if ((_0x32b75c['position'] & _0x3ab459) === _0x3ab459) _0x32b75c['translate']['x'] = _0x32b75c['translate']['_x'] - _0x3d3d5b;
            else {
                if ((_0x32b75c['position'] & _0x333edf) === _0x333edf) _0x32b75c['translate']['x'] = canw - _0x32b75c['translate']['_x'] + _0x3d3d5b;
                else _0x32b75c['translate']['x'] = _0x32b75c['translate']['_x'];
            }
        }
        if ((_0x32b75c['position'] & _0x2d599b) === _0x2d599b) {
            if ((_0x32b75c['position'] & _0x14d4d7) === _0x14d4d7) _0x32b75c['translate']['y'] = canh2 + _0x32b75c['translate']['_y'] - _0x3d3d5b;
            else {
                if ((_0x32b75c['position'] & _0x55d6ce) === _0x55d6ce) _0x32b75c['translate']['y'] = canh2 + _0x32b75c['translate']['_y'] + _0x3d3d5b;
                else _0x32b75c['translate']['y'] = canh2 + _0x32b75c['translate']['_y'];
            }
        } else {
            if ((_0x32b75c['position'] & _0x14d4d7) === _0x14d4d7) _0x32b75c['translate']['y'] = _0x32b75c['translate']['_y'] - _0x3d3d5b;
            else {
                if ((_0x32b75c['position'] & _0x55d6ce) === _0x55d6ce) _0x32b75c['translate']['y'] = canh + _0x32b75c['translate']['_y'] + _0x3d3d5b;
                else _0x32b75c['translate']['y'] = _0x32b75c['translate']['_y'];
            }
        }
        _0x32b75c['style'] !== undefined && (_0x32b75c['style']['left'] = Math['floor'](_0x32b75c['translate']['x']) + 'px', _0x32b75c['style']['top'] = Math['floor'](_0x32b75c['translate']['y']) + 'px');
    }, this['update'] = function() {
        var _0x4acb45 = 0x0;
        if (_0xce008a != _0x3e6145 || _0x391744 != -0x1) {
            if (_0xce008a != _0x3e6145) var _0x4acb45 = 0x5dc / (_0xce008a + 0x1) - 0x32;
            if (_0x391744 != -0x1) var _0x4acb45 = -(0x6d6 / (_0x507405 - _0x391744 + 0x1) - 0x30);
        }
        for (var _0x47236e = 0x0; _0x47236e < this['bkgd']['length']; _0x47236e++) this['update_component'](this['bkgd'][_0x47236e], _0x4acb45);
        for (var _0x47236e = 0x0; _0x47236e < this['buttons']['length']; _0x47236e++) this['update_component'](this['buttons'][_0x47236e]['info'], _0x4acb45);
        for (var _0x47236e = 0x0; _0x47236e < this['css']['length']; _0x47236e++) this['update_component'](this['css'][_0x47236e], _0x4acb45);
        this['loading']['translate']['x'] = (canw - this['loading']['img']['width']) / 0x2, this['loading']['translate']['y'] = 0x0, this['langselect']['translate']['x'] = canw - 0x1c2, this['langselect']['translate']['y'] = canh - 0x28, this['all_rights_reserved']['translate']['x'] = canw - 0x154, this['all_rights_reserved']['translate']['y'] = canh - 0x19, this['trevda']['translate']['x'] = canw - 0x140, this['trevda']['translate']['y'] = 0x50;
        if (_0xce008a != _0x3e6145 || _0x391744 != -0x1) {
            var _0x5b339f = 0x0;
            if (_0xce008a != _0x3e6145) var _0x5b339f = 0x5dc / (_0xce008a + 0x1) - 0x32;
            if (_0x391744 != -0x1) var _0x5b339f = -(0x6d6 / (_0x507405 - _0x391744 + 0x1) - 0x30);
            this['loading']['translate']['y'] -= _0x5b339f > 0x0 ? _0x5b339f : -_0x5b339f, this['langselect']['translate']['y'] -= _0x5b339f < 0x0 ? _0x5b339f : -_0x5b339f, this['all_rights_reserved']['translate']['y'] -= _0x5b339f < 0x0 ? _0x5b339f : -_0x5b339f;
        }
        this['langselect']['update'](), this['all_rights_reserved']['update'](), this['trevda']['update']();
    }, this['create_spin'] = function(_0x3bf5ac) {
        var _0x265c80 = document['createElement']('canvas'),
            _0x224511 = _0x265c80['getContext']('2d');
        _0x265c80['width'] = 0x156, _0x265c80['height'] = 0x156;
        var _0x4d9bfb = -Math['PI'] / 0x2;
        for (var _0x28c2dc = 0x0; _0x28c2dc < _0x3bf5ac['length']; _0x28c2dc++) {
            var _0x1ee624 = _0x3bf5ac[_0x28c2dc][0x0],
                _0x2ab226 = _0x3bf5ac[_0x28c2dc][0x1] * Math['PI'] / 0xb4;
            _0x224511['beginPath'](), _0x224511['arc'](0xab, 0xab, 0xaa, _0x4d9bfb, _0x4d9bfb + _0x2ab226, ![]), _0x224511['lineTo'](0xab, 0xab), _0x224511['fillStyle'] = _0x1ee624, _0x224511['fill'](), _0x4d9bfb += _0x2ab226;
        }
        return _0x265c80;
    }, this['generate_new_nickname'] = function() {
        this['new_nickname'] = document['getElementById']('account_nickname_input')['value'], this['new_nickname'] !== this['previous_new_nickname'] && (this['previous_new_nickname'] = this['new_nickname'], this['new_nickname_img'] = gui_render_text(this['new_nickname'], '\x27Baloo\x20Paaji\x27,\x20sans-serif', '#EFE4B4', 0x2d, 0x226));
    }, this['draw'] = function() {
        draw_fake_world(), ui['xp'] = Utils['lerp'](ui['xp'], ui['xp_dest'], 0.03), this['bkgd'][LEVEL_GAUGE]['translate']['x'] = this['bkgd'][0x0]['translate']['x'] + -0x48 + 0xa5 * ui['xp'], this['bkgd'][LEVEL_GAUGE]['translate']['_x'] = this['bkgd'][LEVEL_GAUGE]['translate']['x'], this['bkgd'][LEVEL_GAUGE]['translate']['y'] = this['bkgd'][0x0]['translate']['y'] + 0x1e, this['bkgd'][LEVEL_GAUGE]['translate']['_y'] = this['bkgd'][LEVEL_GAUGE]['translate']['y'];
        for (var _0x27a095 = 0x2; _0x27a095 < this['bkgd']['length']; _0x27a095++) {
            if (this['bkgd'][_0x27a095]['active'] === _0x2e6e44) this['bkgd'][_0x27a095]['draw'](_0xaf971);
        }
        var _0x8513ee = this['kit'] - Date['now']();
        if (_0x8513ee > 0x0) {
            var _0x3e4e7a = Math['floor'](_0x8513ee / 0xea60),
                _0x5c5465 = Math['floor'](_0x3e4e7a / 0x3c);
            _0x3e4e7a %= 0x3c;
            _0x3e4e7a !== this['previous_kit_min'] && (this['previous_kit_min'] = _0x3e4e7a, _0x3e4e7a = _0x3e4e7a < 0xa ? '0' + _0x3e4e7a : '' + _0x3e4e7a, _0x455007['kit_img_min'] = gui_render_text(_0x3e4e7a, '\x27Baloo\x20Paaji\x27,\x20sans-serif', '#EFE4B4', 0x50, 0xc8));
            _0x5c5465 !== this['previous_kit_hour'] && (this['previous_kit_hour'] = _0x5c5465, _0x5c5465 = _0x5c5465 < 0xa ? '0' + _0x5c5465 : '' + _0x5c5465, _0x455007['kit_img_hour'] = gui_render_text(_0x5c5465, '\x27Baloo\x20Paaji\x27,\x20sans-serif', '#EFE4B4', 0x50, 0xc8));
            var _0x5d57cc = this['bkgd'][BAG_REMAIN_BOX];
            _0x5d57cc['draw'](_0xaf971);
            var _0x43cc39 = this['kit_img_hour'];
            ctxDrawImage(_0xaf971, _0x43cc39, _0x5d57cc['translate']['x'] - _0x43cc39['width'] / 0x4 + 0xb6, _0x5d57cc['translate']['y'] - _0x43cc39['height'] / 0x4 + 0x28, _0x43cc39['width'] / 0x2, _0x43cc39['height'] / 0x2);
            var _0x43cc39 = this['kit_img_min'];
            ctxDrawImage(_0xaf971, _0x43cc39, _0x5d57cc['translate']['x'] - _0x43cc39['width'] / 0x4 + 0xfb, _0x5d57cc['translate']['y'] - _0x43cc39['height'] / 0x4 + 0x28, _0x43cc39['width'] / 0x2, _0x43cc39['height'] / 0x2);
        }
        var _0x8513ee = this['privateServerTime'] - Date['now']();
        if (_0x8513ee > 0x0) {
            var _0x3e4e7a = Math['floor'](_0x8513ee / 0xea60),
                _0x5c5465 = Math['floor'](_0x3e4e7a / 0x3c),
                _0x280f0d = Math['floor'](_0x5c5465 / 0x18);
            _0x3e4e7a %= 0x3c, _0x5c5465 %= 0x18;
            _0x3e4e7a !== this['previous_privateServerTime_min'] && (this['previous_privateServerTime_min'] = _0x3e4e7a, _0x3e4e7a = _0x3e4e7a < 0xa ? '0' + _0x3e4e7a : '' + _0x3e4e7a, _0x455007['privateServerTime_img_min'] = gui_render_text(_0x3e4e7a, '\x27Baloo\x20Paaji\x27,\x20sans-serif', '#EFE4B4', 0x50, 0xc8));
            _0x5c5465 !== this['previous_privateServerTime_hour'] && (this['previous_privateServerTime_hour'] = _0x5c5465, _0x5c5465 = _0x5c5465 < 0xa ? '0' + _0x5c5465 : '' + _0x5c5465, _0x455007['privateServerTime_img_hour'] = gui_render_text(_0x5c5465, '\x27Baloo\x20Paaji\x27,\x20sans-serif', '#EFE4B4', 0x50, 0xc8));
            _0x280f0d !== this['previous_privateServerTime_day'] && (this['previous_privateServerTime_day'] = _0x280f0d, _0x280f0d = _0x280f0d < 0xa ? '0' + _0x280f0d : '' + _0x280f0d, _0x455007['privateServerTime_img_day'] = gui_render_text(_0x280f0d, '\x27Baloo\x20Paaji\x27,\x20sans-serif', '#EFE4B4', 0x50, 0xc8));
            var _0x5d57cc = this['bkgd'][SERVER_REMAIN_BOX];
            _0x5d57cc['draw'](_0xaf971);
            var _0x43cc39 = this['privateServerTime_img_day'];
            ctxDrawImage(_0xaf971, _0x43cc39, _0x5d57cc['translate']['x'] - _0x43cc39['width'] / 0x4 + 0x71, _0x5d57cc['translate']['y'] - _0x43cc39['height'] / 0x4 + 0x28, _0x43cc39['width'] / 0x2, _0x43cc39['height'] / 0x2);
            var _0x43cc39 = this['privateServerTime_img_hour'];
            ctxDrawImage(_0xaf971, _0x43cc39, _0x5d57cc['translate']['x'] - _0x43cc39['width'] / 0x4 + 0xb6, _0x5d57cc['translate']['y'] - _0x43cc39['height'] / 0x4 + 0x28, _0x43cc39['width'] / 0x2, _0x43cc39['height'] / 0x2);
            var _0x43cc39 = this['privateServerTime_img_min'];
            ctxDrawImage(_0xaf971, _0x43cc39, _0x5d57cc['translate']['x'] - _0x43cc39['width'] / 0x4 + 0xfb, _0x5d57cc['translate']['y'] - _0x43cc39['height'] / 0x4 + 0x28, _0x43cc39['width'] / 0x2, _0x43cc39['height'] / 0x2);
        }
        if ((this['current_view'] & _0x6cfa49) === _0x6cfa49) this['buttons'][GAME_BUTTON]['info']['state'] = BUTTON_CLICK;
        else {
            if ((this['current_view'] & _0xaa9b6f) === _0xaa9b6f) this['buttons'][LEADERBOARD_BUTTON]['info']['state'] = BUTTON_CLICK;
            else {
                if ((this['current_view'] & _0x593e2a) === _0x593e2a) this['buttons'][COSMETICS_BUTTON]['info']['state'] = BUTTON_CLICK;
                else {
                    if ((this['current_view'] & _0x4f2e13) === _0x4f2e13) this['buttons'][PROFILE_BUTTON]['info']['state'] = BUTTON_CLICK;
                    else {
                        if ((this['current_view'] & _0x296115) === _0x296115) this['buttons'][TUTORIAL_BUTTON]['info']['state'] = BUTTON_CLICK;
                        else {
                            if ((this['current_view'] & _0x5ee3a9) === _0x5ee3a9) this['buttons'][LOGIN_BUTTON]['info']['state'] = BUTTON_CLICK;
                            else {
                                if ((this['current_view'] & _0x271d21) === _0x271d21) this['buttons'][SHOP_BUTTON]['info']['state'] = BUTTON_CLICK;
                                else {
                                    if ((this['current_view'] & _0x2c587c) === _0x2c587c) this['buttons'][SHOP_BUTTON]['info']['state'] = BUTTON_CLICK;
                                    else {
                                        if ((this['current_view'] & _0x56ac79) === _0x56ac79) this['buttons'][SHOP_BUTTON]['info']['state'] = BUTTON_CLICK;
                                        else {
                                            if ((this['current_view'] & _0x56210c) === _0x56210c) this['buttons'][SHOP_BUTTON]['info']['state'] = BUTTON_CLICK;
                                            else {
                                                if ((this['current_view'] & _0x4079e2) === _0x4079e2) this['buttons'][SHOP_BUTTON]['info']['state'] = BUTTON_CLICK;
                                                else {
                                                    if ((this['current_view'] & _0x38e1d9) === _0x38e1d9) this['buttons'][SHOP_BUTTON]['info']['state'] = BUTTON_CLICK;
                                                    else {
                                                        if ((this['current_view'] & _0x3ac679) === _0x3ac679) this['buttons'][SHOP_BUTTON]['info']['state'] = BUTTON_CLICK;
                                                        else {
                                                            if ((this['current_view'] & _0x4dd4a2) === _0x4dd4a2) this['buttons'][COSMETICS_BUTTON]['info']['state'] = BUTTON_CLICK;
                                                            else {
                                                                if ((this['current_view'] & _0x573e07) === _0x573e07) this['buttons'][COSMETICS_BUTTON]['info']['state'] = BUTTON_CLICK;
                                                                else {
                                                                    if ((this['current_view'] & _0x46f518) === _0x46f518) this['buttons'][COSMETICS_BUTTON]['info']['state'] = BUTTON_CLICK;
                                                                    else {
                                                                        if ((this['current_view'] & _0x5c343f) === _0x5c343f) this['buttons'][COSMETICS_BUTTON]['info']['state'] = BUTTON_CLICK;
                                                                        else {
                                                                            if ((this['current_view'] & _0x373ea5) === _0x373ea5) this['buttons'][COSMETICS_BUTTON]['info']['state'] = BUTTON_CLICK;
                                                                            else {
                                                                                if ((this['current_view'] & _0x27e67f) === _0x27e67f) this['buttons'][COSMETICS_BUTTON]['info']['state'] = BUTTON_CLICK;
                                                                                else {
                                                                                    if ((this['current_view'] & _0x2d1ff7) === _0x2d1ff7) this['buttons'][SERVER_BUTTON]['info']['state'] = BUTTON_CLICK;
                                                                                    else {
                                                                                        if ((this['current_view'] & _0x318405) === _0x318405) this['buttons'][SERVER_BUTTON]['info']['state'] = BUTTON_CLICK;
                                                                                        else {
                                                                                            if ((this['current_view'] & _0x3af4b8) === _0x3af4b8) this['buttons'][SERVER_BUTTON]['info']['state'] = BUTTON_CLICK;
                                                                                            else {
                                                                                                if ((this['current_view'] & _0x15f891) === _0x15f891) this['buttons'][PROFILE_BUTTON]['info']['state'] = BUTTON_CLICK;
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        if ((this['current_view'] & _0xaa9b6f) === _0xaa9b6f) {
            this['leaderboard_mode'] === this['LEADERBOARD_TOTAL'] ? (this['leaderboard_range'] = this['LEADERBOARD_ALL'], this['buttons'][this['LEADERBOARD_ALL']]['info']['active'] = _0x24917c, this['buttons'][this['LEADERBOARD_WEEK']]['info']['active'] = _0x24917c, this['buttons'][this['LEADERBOARD_TODAY']]['info']['active'] = _0x24917c) : (this['buttons'][this['LEADERBOARD_ALL']]['info']['active'] = _0x2e6e44, this['buttons'][this['LEADERBOARD_WEEK']]['info']['active'] = _0x2e6e44, this['buttons'][this['LEADERBOARD_TODAY']]['info']['active'] = _0x2e6e44);
            if (this['leaderboard_mode'] === this['LEADERBOARD_NORMAL']) this['buttons'][this['LEADERBOARD_NORMAL']]['info']['state'] = BUTTON_CLICK;
            else {
                if (this['leaderboard_mode'] === this['LEADERBOARD_VAMPIRE']) this['buttons'][this['LEADERBOARD_VAMPIRE']]['info']['state'] = BUTTON_CLICK;
                else {
                    if (this['leaderboard_mode'] === this['LEADERBOARD_TOTAL']) this['buttons'][this['LEADERBOARD_TOTAL']]['info']['state'] = BUTTON_CLICK;
                    else {
                        if (this['leaderboard_mode'] === this['LEADERBOARD_ZOMBIE']) this['buttons'][this['LEADERBOARD_ZOMBIE']]['info']['state'] = BUTTON_CLICK;
                        else {
                            if (this['leaderboard_mode'] === this['LEADERBOARD_FOREST']) this['buttons'][this['LEADERBOARD_FOREST']]['info']['state'] = BUTTON_CLICK;
                        }
                    }
                }
            }
            if (this['leaderboard_range'] === this['LEADERBOARD_ALL']) this['buttons'][this['LEADERBOARD_ALL']]['info']['state'] = BUTTON_CLICK;
            else {
                if (this['leaderboard_range'] === this['LEADERBOARD_WEEK']) this['buttons'][this['LEADERBOARD_WEEK']]['info']['state'] = BUTTON_CLICK;
                else {
                    if (this['leaderboard_range'] === this['LEADERBOARD_TODAY']) this['buttons'][this['LEADERBOARD_TODAY']]['info']['state'] = BUTTON_CLICK;
                }
            }
            if (this['leaderboard_sorted'] === this['LEADERBOARD_KILL']) this['buttons'][this['LEADERBOARD_KILL']]['info']['state'] = BUTTON_CLICK;
            else {
                if (this['leaderboard_sorted'] === this['LEADERBOARD_SCORE']) this['buttons'][this['LEADERBOARD_SCORE']]['info']['state'] = BUTTON_CLICK;
                else {
                    if (this['leaderboard_sorted'] === this['LEADERBOARD_TIME']) this['buttons'][this['LEADERBOARD_TIME']]['info']['state'] = BUTTON_CLICK;
                }
            }
            if (this['leaderboard_season'] === this['LEADERBOARD_SEASON1']) this['buttons'][this['LEADERBOARD_SEASON1']]['info']['state'] = BUTTON_CLICK;
            else {
                if (this['leaderboard_season'] === this['LEADERBOARD_SEASON2']) this['buttons'][this['LEADERBOARD_SEASON2']]['info']['state'] = BUTTON_CLICK;
                else {
                    if (this['leaderboard_season'] === this['LEADERBOARD_SEASON3']) this['buttons'][this['LEADERBOARD_SEASON3']]['info']['state'] = BUTTON_CLICK;
                    else {
                        if (this['leaderboard_season'] === this['LEADERBOARD_SEASON4']) this['buttons'][this['LEADERBOARD_SEASON4']]['info']['state'] = BUTTON_CLICK;
                        else {
                            if (this['leaderboard_season'] === this['LEADERBOARD_SEASON5']) this['buttons'][this['LEADERBOARD_SEASON5']]['info']['state'] = BUTTON_CLICK;
                        }
                    }
                }
            }
        }
        if ((this['current_view'] & _0x4f2e13) === _0x4f2e13) {
            if (this['current_mode_score'] === -0x1) this['buttons'][_0x362bc0]['info']['state'] = BUTTON_CLICK;
            else {
                if (this['current_mode_score'] === WORLD['MODE_PVP']) this['buttons'][_0x531a02]['info']['state'] = BUTTON_CLICK;
                else {
                    if (this['current_mode_score'] === WORLD['MODE_ZOMBIES']) this['buttons'][_0x2355d9]['info']['state'] = BUTTON_CLICK;
                    else {
                        if (this['current_mode_score'] === WORLD['MODE_VAMPIRES']) this['buttons'][_0x3648f7]['info']['state'] = BUTTON_CLICK;
                        else {
                            if (this['current_mode_score'] === WORLD['MODE_LEGACY']) this['buttons'][_0x2ce1b2]['info']['state'] = BUTTON_CLICK;
                        }
                    }
                }
            }
            if (this['profile_season'] === 0x0) this['buttons'][_0x2c6b81]['info']['state'] = BUTTON_CLICK;
            else {
                if (this['profile_season'] === 0x1) this['buttons'][_0x1787fe]['info']['state'] = BUTTON_CLICK;
                else {
                    if (this['profile_season'] === 0x2) this['buttons'][_0x1a33a5]['info']['state'] = BUTTON_CLICK;
                    else {
                        if (this['profile_season'] === 0x3) this['buttons'][_0x36a805]['info']['state'] = BUTTON_CLICK;
                        else {
                            if (this['profile_season'] === 0x4) this['buttons'][_0x542864]['info']['state'] = BUTTON_CLICK;
                        }
                    }
                }
            }
        }
        if ((this['current_view'] & _0x6cfa49) === _0x6cfa49 && client['privateServer'] === 0x0) {
            if (this['buttons'][_0x2153c4]['in_button'](mouse['pos'])) this['buttons'][_0x2153c4]['hint'] = Math['min'](0x1, this['buttons'][_0x2153c4]['hint'] + delta * 1.5);
            else this['buttons'][_0x2153c4]['hint'] = Math['max'](0x0, this['buttons'][_0x2153c4]['hint'] - delta * 1.5);
            if (this['buttons'][_0x1f738f]['in_button'](mouse['pos'])) this['buttons'][_0x1f738f]['hint'] = Math['min'](0x1, this['buttons'][_0x1f738f]['hint'] + delta * 1.5);
            else this['buttons'][_0x1f738f]['hint'] = Math['max'](0x0, this['buttons'][_0x1f738f]['hint'] - delta * 1.5);
            if (this['buttons'][_0x1d091f]['in_button'](mouse['pos'])) this['buttons'][_0x1d091f]['hint'] = Math['min'](0x1, this['buttons'][_0x1d091f]['hint'] + delta * 1.5);
            else this['buttons'][_0x1d091f]['hint'] = Math['max'](0x0, this['buttons'][_0x1d091f]['hint'] - delta * 1.5);
            if (this['buttons'][_0x94b81a]['in_button'](mouse['pos'])) this['buttons'][_0x94b81a]['hint'] = Math['min'](0x1, this['buttons'][_0x94b81a]['hint'] + delta * 1.5);
            else this['buttons'][_0x94b81a]['hint'] = Math['max'](0x0, this['buttons'][_0x94b81a]['hint'] - delta * 1.5);
            if (this['buttons'][_0x3ff6c3]['in_button'](mouse['pos'])) this['buttons'][_0x3ff6c3]['hint'] = Math['min'](0x1, this['buttons'][_0x3ff6c3]['hint'] + delta * 1.5);
            else this['buttons'][_0x3ff6c3]['hint'] = Math['max'](0x0, this['buttons'][_0x3ff6c3]['hint'] - delta * 1.5);
            if (this['buttons'][_0x2d63d5]['in_button'](mouse['pos'])) this['buttons'][_0x2d63d5]['hint'] = Math['min'](0x1, this['buttons'][_0x2d63d5]['hint'] + delta * 1.5);
            else this['buttons'][_0x2d63d5]['hint'] = Math['max'](0x0, this['buttons'][_0x2d63d5]['hint'] - delta * 1.5);
        }
        var _0x2d702a = 0x1;
        if ((this['current_view'] & (_0x2c587c | _0x56ac79 | _0x56210c | _0x4079e2 | _0x38e1d9 | _0x3ac679)) > 0x1) {
            var _0x43cc39 = IMAGES['ARROW_SPIN'];
            _0xaf971['save'](), _0xaf971['translate'](canw2, _0x47bc03 + _0x43cc39['height'] / 0x4), this['spin'] === 0x1 && (this['spin_effect'] += delta / 0x3, _0x2d702a = this['spin_target'] - 0x64 / Math['pow'](0x1 + this['spin_effect'], 0x1 + this['spin_effect']), _0xaf971['rotate'](_0x2d702a)), ctxDrawImage(_0xaf971, _0x43cc39, -_0x43cc39['width'] / 0x4, -_0x43cc39['height'] / 0x4, _0x43cc39['width'] / 0x2, _0x43cc39['height'] / 0x2), _0xaf971['restore']();
        }
        if (client['privateServer'] === 0x0) {
            if (client['current_mode'] === WORLD['MODE_PVP']) this['buttons'][_0x2153c4]['info']['state'] = BUTTON_CLICK;
            else {
                if (client['current_mode'] === WORLD['MODE_LEGACY']) this['buttons'][_0x1f738f]['info']['state'] = BUTTON_CLICK;
                else {
                    if (client['current_mode'] === WORLD['MODE_ZOMBIES']) this['buttons'][_0x3ff6c3]['info']['state'] = BUTTON_CLICK;
                    else {
                        if (client['current_mode'] === WORLD['MODE_VAMPIRES']) this['buttons'][_0x2d63d5]['info']['state'] = BUTTON_CLICK;
                        else {
                            if (client['current_mode'] === WORLD['MODE_COMMUNITY']) this['buttons'][_0x1d091f]['info']['state'] = BUTTON_CLICK;
                            else {
                                if (client['current_mode'] === WORLD['MODE_EXPERIMENTAL']) this['buttons'][_0x94b81a]['info']['state'] = BUTTON_CLICK;
                            }
                        }
                    }
                }
            }
        }
        for (var _0x27a095 = 0x1; _0x27a095 < this['buttons']['length']; _0x27a095++) {
            if (this['buttons'][_0x27a095]['info']['active'] === _0x2e6e44) this['buttons'][_0x27a095]['draw'](_0xaf971);
        }
        this['bkgd'][0x0]['draw'](_0xaf971);
        if ((this['current_view'] & (_0x43d6a2 | _0x342d09)) > 0x0) {
            var _0x43cc39 = this['new_nickname_img'];
            ctxDrawImage(_0xaf971, _0x43cc39, canw2 - _0x43cc39['width'] / 0x4, 0x8a, _0x43cc39['width'] / 0x2, _0x43cc39['height'] / 0x2);
        }
        var _0x153142 = Math['max'](0x1, Math['min'](0x12, Math['floor']((ui['lvl'] + 0x3) / 0x2)));
        this['bkgd'][_0x153142]['active'] = _0x2e6e44, this['bkgd'][_0x153142]['draw'](_0xaf971), this['bkgd'][_0x153142]['active'] = _0x24917c, this['buttons'][0x0]['draw'](_0xaf971);
        if ((this['current_view'] & (_0x593e2a | _0x573e07 | _0x5c343f | _0x4dd4a2 | _0x373ea5)) > 0x1) {
            var _0x527ba8 = (this['current_view'] & (_0x573e07 | _0x5c343f | _0x4dd4a2 | _0x373ea5)) > 0x1 ? -0xbe : 0x0,
                _0x43cc39 = sprite[SPRITE['BAG']][this['bag']][this['day_mode']];
            ctxDrawImage(_0xaf971, _0x43cc39, canw2 - _0x43cc39['width'] / 0x4 + _0x527ba8, 0xb7, _0x43cc39['width'] / 0x2, _0x43cc39['height'] / 0x2), this['breath'] = (this['breath'] + delta * 0x3e8) % 0x7d0;
            var _0x3f3c8a = 4.5 * (this['breath'] < 0x3e8) ? this['breath'] / 0x3e8 : (0x7d0 - this['breath']) / 0x3e8,
                _0x43cc39 = sprite[SPRITE['BOOK']][this['book']][this['day_mode']];
            ctxDrawImage(_0xaf971, _0x43cc39, canw2 - _0x43cc39['width'] / 0x4 - 0x3e + _0x3f3c8a + _0x527ba8, 0xf0, _0x43cc39['width'] / 0x2, _0x43cc39['height'] / 0x2);
            var _0x43cc39 = sprite[SPRITE['HAND']][this['skin']][this['day_mode']];
            ctxDrawImage(_0xaf971, _0x43cc39, canw2 - _0x43cc39['width'] / 0x4 - 0x36 + _0x3f3c8a + _0x527ba8, 0x110, _0x43cc39['width'] / 0x2, _0x43cc39['height'] / 0x2), ctxDrawImage(_0xaf971, _0x43cc39, canw2 - _0x43cc39['width'] / 0x4 + 0x36 - _0x3f3c8a + _0x527ba8, 0x110, _0x43cc39['width'] / 0x2, _0x43cc39['height'] / 0x2);
            var _0x43cc39 = sprite[SPRITE['BODY']][this['skin']][this['day_mode']];
            ctxDrawImage(_0xaf971, _0x43cc39, canw2 - _0x43cc39['width'] / 0x4 + _0x527ba8, 0xde, _0x43cc39['width'] / 0x2, _0x43cc39['height'] / 0x2);
            var _0x43cc39 = sprite[SPRITE['ACCESSORY']][this['accessory']][this['day_mode']];
            ctxDrawImage(_0xaf971, _0x43cc39, canw2 - _0x43cc39['width'] / 0x4 + _0x527ba8, 0xde, _0x43cc39['width'] / 0x2, _0x43cc39['height'] / 0x2);
        }
        if ((this['current_view'] & _0x593e2a) === _0x593e2a) {
            var _0x43cc39 = sprite[SPRITE['CRATE']][this['crate']][this['day_mode']];
            ctxDrawImage(_0xaf971, _0x43cc39, canw2 - _0x43cc39['width'] / 0x4 - 0x3d, 0x196 - _0x43cc39['height'] / 0x4, _0x43cc39['width'] / 0x2, _0x43cc39['height'] / 0x2);
            var _0x43cc39 = sprite[SPRITE['CRATE']][this['dead']][this['day_mode']];
            ctxDrawImage(_0xaf971, _0x43cc39, canw2 - _0x43cc39['width'] / 0x4 + 0x35, 0x196 - _0x43cc39['height'] / 0x4, _0x43cc39['width'] / 0x2, _0x43cc39['height'] / 0x2);
        }
        if ((this['current_view'] & _0x46f518) === _0x46f518) {
            var _0x43cc39 = sprite[SPRITE['CRATE']][this['dead']][this['day_mode']];
            ctxDrawImage(_0xaf971, _0x43cc39, canw2 - _0x43cc39['width'] / 0x4 - 0xc8, 0x10c - _0x43cc39['height'] / 0x4, _0x43cc39['width'] / 0x2, _0x43cc39['height'] / 0x2);
        }
        if ((this['current_view'] & _0x27e67f) === _0x27e67f) {
            var _0x43cc39 = sprite[SPRITE['CRATE']][this['crate']][this['day_mode']];
            ctxDrawImage(_0xaf971, _0x43cc39, canw2 - _0x43cc39['width'] / 0x4 - 0xc8, 0x10c - _0x43cc39['height'] / 0x4, _0x43cc39['width'] / 0x2, _0x43cc39['height'] / 0x2);
        }
        if ((this['current_view'] & (_0x573e07 | _0x5c343f | _0x4dd4a2 | _0x373ea5 | _0x46f518 | _0x27e67f)) > 0x1) {
            for (var _0x27a095 = 0x1; _0x27a095 < this['buttons']['length']; _0x27a095++) {
                if ((this['buttons'][_0x27a095]['view'] & this['current_view']) === 0x0) continue;
                var _0x201421 = this['buttons'][_0x27a095]['info'];
                if (_0x201421['cosmeticId'] >= 0x0) {
                    var _0x43cc39 = _0x201421['cosmeticType'][_0x201421['cosmeticId']]['day'];
                    ctxDrawImage(_0xaf971, _0x43cc39, _0x201421['translate']['x'] - _0x43cc39['width'] / 0x8 + 44.5, _0x201421['translate']['y'] - _0x43cc39['height'] / 0x8 + 45.5, _0x43cc39['width'] / 0x4, _0x43cc39['height'] / 0x4);
                    if (_0x201421['unlocked'] !== 0x1) {
                        var _0x43cc39 = IMAGES['RED_LOCKED'];
                        ctxDrawImage(_0xaf971, _0x43cc39, _0x201421['translate']['x'] - _0x43cc39['width'] / 0x4 + 44.5, _0x201421['translate']['y'] - _0x43cc39['height'] / 0x4 + 44.5, _0x43cc39['width'] / 0x2, _0x43cc39['height'] / 0x2);
                    }
                }
            }
            var _0x43cc39 = this['cosmetic_name'];
            ctxDrawImage(_0xaf971, _0x43cc39, canw2 - 0x138, 0x177, _0x43cc39['width'] / 0x2, _0x43cc39['height'] / 0x2);
            var _0x43cc39 = this['cosmetic_author'];
            ctxDrawImage(_0xaf971, _0x43cc39, canw2 - 0x138, 0x18b, _0x43cc39['width'] / 0x2, _0x43cc39['height'] / 0x2);
        }
        this['bread'] !== this['previous_bread'] && (this['previous_bread'] = this['bread'], this['bread_img'] = gui_render_text('' + this['bread'], '\x27Baloo\x20Paaji\x27,\x20sans-serif', '#EFE4B4', 0x3c, 0xfa));
        ctxDrawImage(_0xaf971, this['bread_img'], this['bkgd'][0x0]['translate']['x'] + 0x15e, 0xf, this['bread_img']['w2'], this['bread_img']['h2']);
        this['lvl'] !== this['previous_lvl'] && (this['previous_lvl'] = this['lvl'], this['lvl_img'] = gui_render_text('LVL\x20' + (this['lvl'] + 0x1), '\x27Baloo\x20Paaji\x27,\x20sans-serif', '#EFE4B4', 0x32, 0xfa, undefined, 0x1e, 0x18, undefined, undefined, undefined, undefined, '#3F3019', 0x14));
        ctxDrawImage(_0xaf971, this['lvl_img'], this['bkgd'][0x0]['translate']['x'] + 0x5e, 0x0, this['lvl_img']['w2'], this['lvl_img']['h2']);
        if (client['privateServer'] === 0x0) {
            var _0x30d440 = this['buttons'][_0x2153c4]['hint'];
            if (_0x30d440 > 0x0) {
                var _0x43cc39 = IMAGES['NORMAL_MODE_HOVER'];
                ctxDrawImage(_0xaf971, _0x43cc39, canw2 - _0x43cc39['width'] / 0x4, -0x24 - _0x43cc39['height'] * Utils['ease_in_out_quad'](0x1 - _0x30d440) / 0x2, _0x43cc39['width'] / 0x2, _0x43cc39['height'] / 0x2);
            }
            var _0x30d440 = this['buttons'][_0x1f738f]['hint'];
            if (_0x30d440 > 0x0) {
                var _0x43cc39 = IMAGES['FOREST_MODE_HOVER'];
                ctxDrawImage(_0xaf971, _0x43cc39, canw2 - _0x43cc39['width'] / 0x4, -0x24 - _0x43cc39['height'] * Utils['ease_in_out_quad'](0x1 - _0x30d440) / 0x2, _0x43cc39['width'] / 0x2, _0x43cc39['height'] / 0x2);
            }
            var _0x30d440 = this['buttons'][_0x1d091f]['hint'];
            if (_0x30d440 > 0x0) {
                var _0x43cc39 = IMAGES['MODE_COMMUNITY_HOVER'];
                ctxDrawImage(_0xaf971, _0x43cc39, canw2 - _0x43cc39['width'] / 0x4, -0x24 - _0x43cc39['height'] * Utils['ease_in_out_quad'](0x1 - _0x30d440) / 0x2, _0x43cc39['width'] / 0x2, _0x43cc39['height'] / 0x2);
            }
            var _0x30d440 = this['buttons'][_0x94b81a]['hint'];
            if (_0x30d440 > 0x0) {
                var _0x43cc39 = IMAGES['MODE_EXPERIMENTAL_HOVER'];
                ctxDrawImage(_0xaf971, _0x43cc39, canw2 - _0x43cc39['width'] / 0x4, -0x24 - _0x43cc39['height'] * Utils['ease_in_out_quad'](0x1 - _0x30d440) / 0x2, _0x43cc39['width'] / 0x2, _0x43cc39['height'] / 0x2);
            }
            var _0x30d440 = this['buttons'][_0x2d63d5]['hint'];
            if (_0x30d440 > 0x0) {
                var _0x43cc39 = IMAGES['VAMPIRE_MODE_HOVER'];
                ctxDrawImage(_0xaf971, _0x43cc39, canw2 - _0x43cc39['width'] / 0x4, -0x24 - _0x43cc39['height'] * Utils['ease_in_out_quad'](0x1 - _0x30d440) / 0x2, _0x43cc39['width'] / 0x2, _0x43cc39['height'] / 0x2);
            }
            var _0x30d440 = this['buttons'][_0x3ff6c3]['hint'];
            if (_0x30d440 > 0x0) {
                var _0x43cc39 = IMAGES['ZOMBIE_MODE_HOVER'];
                ctxDrawImage(_0xaf971, _0x43cc39, canw2 - _0x43cc39['width'] / 0x4, -0x24 - _0x43cc39['height'] * Utils['ease_in_out_quad'](0x1 - _0x30d440) / 0x2, _0x43cc39['width'] / 0x2, _0x43cc39['height'] / 0x2);
            }
        }
        if (this['spin'] === 0x1 && Math['abs'](_0x2d702a - this['spin_target']) < 0.006) {
            _0xaf971['globalAlpha'] = Math['min'](0x1, this['spin_win_effect'] * 0x3);
            var _0x43cc39 = IMAGES['SPIN_LIGHT'];
            _0xaf971['save'](), _0xaf971['translate'](canw2, 0x104), this['spin_win_effect'] += delta, _0xaf971['rotate'](this['spin_win_effect']), ctxDrawImage(_0xaf971, _0x43cc39, -_0x43cc39['width'] / 0x2, -_0x43cc39['height'] / 0x2, _0x43cc39['width'], _0x43cc39['height']), _0xaf971['restore']();
            var _0x3f3c8a = 1.05 + 0.05 * Math['sin'](this['spin_win_effect'] * 0x5);
            if (this['spin_type'] === 0x0) {
                _0x43cc39 = COSMETICS['SKIN'][this['spin_win']]['day'];
                var _0xd7b4e0 = _0x3f3c8a * _0x43cc39['width'],
                    _0x47bc50 = _0x3f3c8a * _0x43cc39['height'];
                ctxDrawImage(_0xaf971, _0x43cc39, canw2 - _0xd7b4e0 / 0x2, 0x104 - _0x47bc50 / 0x2, _0xd7b4e0, _0x47bc50);
            } else {
                if (this['spin_type'] === 0x1) {
                    _0x43cc39 = COSMETICS['SKIN'][0x0]['day'];
                    var _0xd7b4e0 = _0x3f3c8a * _0x43cc39['width'],
                        _0x47bc50 = _0x3f3c8a * _0x43cc39['height'];
                    ctxDrawImage(_0xaf971, _0x43cc39, canw2 - _0xd7b4e0 / 0x2, 0x104 - _0x47bc50 / 0x2, _0xd7b4e0, _0x47bc50), _0x43cc39 = COSMETICS['ACCESSORY'][this['spin_win']]['day'];
                    var _0xd7b4e0 = _0x3f3c8a * _0x43cc39['width'],
                        _0x47bc50 = _0x3f3c8a * _0x43cc39['height'];
                    ctxDrawImage(_0xaf971, _0x43cc39, canw2 - _0xd7b4e0 / 0x2, 0x104 - _0x47bc50 / 0x2, _0xd7b4e0, _0x47bc50);
                } else {
                    if (this['spin_type'] === 0x2) {
                        _0x43cc39 = COSMETICS['BAG'][this['spin_win']]['day'];
                        var _0xd7b4e0 = _0x3f3c8a * _0x43cc39['width'],
                            _0x47bc50 = _0x3f3c8a * _0x43cc39['height'];
                        ctxDrawImage(_0xaf971, _0x43cc39, canw2 - _0xd7b4e0 / 0x2, 0xb4 - _0x47bc50 / 0x2, _0xd7b4e0, _0x47bc50), _0x43cc39 = COSMETICS['SKIN'][0x0]['day'];
                        var _0xd7b4e0 = _0x3f3c8a * _0x43cc39['width'],
                            _0x47bc50 = _0x3f3c8a * _0x43cc39['height'];
                        ctxDrawImage(_0xaf971, _0x43cc39, canw2 - _0xd7b4e0 / 0x2, 0x104 - _0x47bc50 / 0x2, _0xd7b4e0, _0x47bc50);
                    } else {
                        if (this['spin_type'] === 0x3) {
                            _0x43cc39 = COSMETICS['BOOK'][this['spin_win']]['day'];
                            var _0xd7b4e0 = _0x3f3c8a * _0x43cc39['width'],
                                _0x47bc50 = _0x3f3c8a * _0x43cc39['height'];
                            _0xaf971['save'](), _0xaf971['translate'](canw2, 0x104), _0xaf971['rotate'](Math['PI']), ctxDrawImage(_0xaf971, _0x43cc39, -_0xd7b4e0 / 0x2, -_0x47bc50 / 0x2, _0xd7b4e0, _0x47bc50), _0xaf971['restore']();
                        } else {
                            if (this['spin_type'] === 0x4) {
                                _0x43cc39 = COSMETICS['CRATE'][this['spin_win']]['day'];
                                var _0xd7b4e0 = _0x3f3c8a * _0x43cc39['width'],
                                    _0x47bc50 = _0x3f3c8a * _0x43cc39['height'];
                                ctxDrawImage(_0xaf971, _0x43cc39, canw2 - _0xd7b4e0 / 0x2, 0x104 - _0x47bc50 / 0x2, _0xd7b4e0, _0x47bc50);
                            }
                        }
                    }
                }
            }
            var _0x43cc39 = this['spin_name'];
            ctxDrawImage(_0xaf971, _0x43cc39, canw2 - _0x43cc39['width'] / 0x4, 0x154, _0x43cc39['width'] / 0x2, _0x43cc39['height'] / 0x2);
            var _0x43cc39 = this['spin_author'];
            ctxDrawImage(_0xaf971, _0x43cc39, canw2 - _0x43cc39['width'] / 0x4, 0x16d, _0x43cc39['width'] / 0x2, _0x43cc39['height'] / 0x2), this['spin_win_effect'] > 0x6 && (this['spin'] = 0x0, _0x244a54(_0x271d21)), _0xaf971['globalAlpha'] = 0x1;
        }
        user['alert']['draw']('#FFF', '#000');
        if (_0x455007['waiting']) this['loading']['draw']();
    };
    var _0x82c94e = 0x0,
        _0x6cfa49 = Math['pow'](0x2, _0x82c94e++),
        _0x4f2e13 = Math['pow'](0x2, _0x82c94e++);
    this['__PROFILE__'] = _0x4f2e13;
    var _0x5ee3a9 = Math['pow'](0x2, _0x82c94e++),
        _0x593e2a = Math['pow'](0x2, _0x82c94e++),
        _0x271d21 = Math['pow'](0x2, _0x82c94e++),
        _0x296115 = Math['pow'](0x2, _0x82c94e++),
        _0xaa9b6f = Math['pow'](0x2, _0x82c94e++),
        _0x3dd526 = Math['pow'](0x2, _0x82c94e++);
    this['__BUY__'] = _0x3dd526;
    var _0x2c814f = Math['pow'](0x2, _0x82c94e++),
        _0x352c76 = Math['pow'](0x2, _0x82c94e++),
        _0x2c587c = Math['pow'](0x2, _0x82c94e++),
        _0x56ac79 = Math['pow'](0x2, _0x82c94e++),
        _0x56210c = Math['pow'](0x2, _0x82c94e++),
        _0x4079e2 = Math['pow'](0x2, _0x82c94e++),
        _0x38e1d9 = Math['pow'](0x2, _0x82c94e++),
        _0x3ac679 = Math['pow'](0x2, _0x82c94e++),
        _0x4dd4a2 = Math['pow'](0x2, _0x82c94e++),
        _0x46f518 = Math['pow'](0x2, _0x82c94e++),
        _0x573e07 = Math['pow'](0x2, _0x82c94e++),
        _0x5c343f = Math['pow'](0x2, _0x82c94e++),
        _0x373ea5 = Math['pow'](0x2, _0x82c94e++),
        _0x27e67f = Math['pow'](0x2, _0x82c94e++),
        _0x342d09 = Math['pow'](0x2, _0x82c94e++),
        _0x43d6a2 = Math['pow'](0x2, _0x82c94e++),
        _0x2d1ff7 = Math['pow'](0x2, _0x82c94e++);
    this['__SERVER_LOCATION__'] = _0x2d1ff7;
    var _0x318405 = Math['pow'](0x2, _0x82c94e++);
    this['__SERVER_DURATION__'] = _0x318405;
    var _0x3af4b8 = Math['pow'](0x2, _0x82c94e++);
    this['__SERVER_ACCESS__'] = _0x3af4b8;
    var _0x15f891 = Math['pow'](0x2, _0x82c94e++);
    this['current_view'] = _0x6cfa49;

    function _0x411042(_0x2f4c34, _0x21ff84, _0x3407d8) {
        for (var _0x5898ad = 0x0; _0x5898ad < _0x455007['bkgd']['length']; _0x5898ad++) {
            if ((_0x455007['bkgd'][_0x5898ad]['view'] & _0x2f4c34) !== 0x0) _0x455007['bkgd'][_0x5898ad]['active'] = _0x21ff84;
        }
        for (var _0x5898ad = 0x0; _0x5898ad < _0x455007['buttons']['length']; _0x5898ad++) {
            if ((_0x455007['buttons'][_0x5898ad]['view'] & _0x2f4c34) !== 0x0) _0x455007['buttons'][_0x5898ad]['info']['active'] = _0x21ff84;
        }
        for (var _0x5898ad = 0x0; _0x5898ad < _0x455007['css']['length']; _0x5898ad++) {
            if ((_0x455007['css'][_0x5898ad]['view'] & _0x2f4c34) !== 0x0) _0x455007['css'][_0x5898ad]['style']['display'] = _0x3407d8;
        }
    };
    var _0x32ed92 = [];
    this['hijackedAsset'] = 0x0;

    function _0x295e11(_0x1ccf9c, _0x454f6f) {
        _0x1ccf9c = _0x1ccf9c['replace']('Xday', 'day'), _0x1ccf9c = _0x1ccf9c['replace']('Xnight', 'night');
        for (var _0x237f85 = 0x0; _0x237f85 < _0x32ed92['length']; _0x237f85++) {
            var _0x321291 = _0x32ed92[_0x237f85];
            if (_0x321291[0x0] === _0x1ccf9c) {
                if (_0x321291[0x1] !== _0x454f6f) ui['hijackedAsset'] = 0x1;
                return;
            }
        }
        _0x32ed92['push']([_0x1ccf9c, _0x454f6f]);
    }

    function _0x3f3cd9(_0x45a172) {
        _0x45a172 = _0x45a172['replace']('http://starve.io', 'https://starve.io');
        var _0x18931f = new XMLHttpRequest();
        _0x18931f['open']('HEAD', _0x45a172, !![]), _0x18931f['onreadystatechange'] = function() {
            if (_0x18931f['readyState'] === 0x4) {
                if (_0x18931f['status'] === 0xc8) {
                    var _0x4b4e2f = Number(_0x18931f['getResponseHeader']('Content-Length'));
                    if (_0x4b4e2f > 0x0) _0x295e11(_0x45a172, _0x4b4e2f);
                }
            }
        }, _0x18931f['send'](null);
    };

    function _0xc23266() {};

    function _0x2b2581() {
        var _0x30ce1d = Number(Cookies['get']('starve_crate')),
            _0x58a2d0 = Number(Cookies['get']('starve_dead')),
            _0x1e980f = Number(Cookies['get']('starve_book')),
            _0x31a850 = Number(Cookies['get']('starve_bag')),
            _0x1e27cc = Number(Cookies['get']('starve_skin')),
            _0x962f51 = Number(Cookies['get']('starve_accessory'));
        if (!(ui['unlock']['skin'][ui['skin']] > 0x0)) ui['skin'] = !(ui['unlock']['skin'][_0x1e27cc] > 0x0) ? 0x0 : _0x1e27cc;
        if (!(ui['unlock']['book'][ui['book']] > 0x0)) ui['book'] = !(ui['unlock']['book'][_0x1e980f] > 0x0) ? 0x0 : _0x1e980f;
        if (!(ui['unlock']['dead'][ui['dead']] > 0x0)) ui['dead'] = !(ui['unlock']['dead'][_0x58a2d0] > 0x0) ? 0x0 : _0x58a2d0;
        if (!(ui['unlock']['crate'][ui['crate']] > 0x0)) ui['crate'] = !(ui['unlock']['crate'][_0x30ce1d] > 0x0) ? 0x0 : _0x30ce1d;
        if (!(ui['unlock']['accessory'][ui['accessory']] > 0x0)) ui['accessory'] = !(ui['unlock']['accessory'][_0x962f51] > 0x0) ? 0x0 : _0x962f51;
        if (!(ui['unlock']['bag'][ui['bag']] > 0x0)) ui['bag'] = !(ui['unlock']['bag'][_0x31a850] > 0x0) ? 0x0 : _0x31a850;
    };

    function _0x244a54(_0x40ce37) {
        if (_0x455007['in_this_view'] === ![]) return;
        _0x411042(_0x2c814f, _0x24917c, 'none'), _0x411042(_0x352c76, _0x24917c, 'none'), _0x2b2581();
        if (_0x40ce37 === _0x455007['current_view'] || _0x455007['spin'] >= 0x1) return;
        if (_0x40ce37 === _0x6cfa49 || _0x40ce37 === _0x271d21 || _0x40ce37 === _0x4f2e13 || _0x40ce37 === _0xaa9b6f || _0x40ce37 === _0x593e2a || _0x40ce37 === _0x296115) _0x455007['trevda']['style']['display'] = 'inline-block';
        else _0x455007['trevda']['style']['display'] = 'none';
        _0x411042(_0x455007['current_view'], _0x24917c, 'none'), _0x455007['current_view'] = _0x40ce37, _0x411042(_0x455007['current_view'], _0x2e6e44, 'inline-block');
    };
    this['select_subview'] = _0x244a54;

    function _0x2c577c() {
        _0x2b2581(), console['log']('Connecting\x20to\x20game'), client['connect']();
    };

    function _0x5a6874(_0x467506, _0x78b501, _0x58b783) {
        const _0x589d88 = new XMLHttpRequest();
        _0x589d88['open']('GET', _0x467506), _0x589d88['setRequestHeader']('Content-Type', 'application/x-www-form-urlencoded'), _0x589d88['onreadystatechange'] = function() {
            if (this['readyState'] == 0x4 && this['status'] == 0xc8) {
                if (_0x78b501 !== undefined) _0x78b501(_0x589d88['responseText']);
            } else {
                if (this['readyState'] == 0x4) {
                    if (_0x58b783 !== undefined) _0x58b783();
                }
            }
        }, _0x589d88['send']();
    };
    this['play_game'] = function() {
        if (_0x455007['waiting'] === ![]) {
            user['reconnect']['enabled'] = ![], _0x455007['waiting'] = !![];
            if (user['newToken']) _0x2c577c();
            else _0x5a6874(DB + 'token', function(_0x12b510) {
                console['log'](':::\x20[iandev]\x20/token\x20token\x20:::', _0x12b510);
                try {
                    const _0x1a6811 = _0x12b510['split']('_'),
                        _0x4dd9e8 = _0x1a6811[0x0] + '_',
                        _0x36808e = Number(_0x1a6811[0x1]),
                        _0x10c13c = Math['abs'](entrypoint(_0x36808e));
                    console['log'](':::\x20[iandev]\x20/challenge\x20token\x20:::', _0x10c13c), user['newToken'] = _0x4dd9e8 + _0x10c13c;
                } catch (_0x7b48f8) {
                    console['error'](':::\x20[iandev]\x20/token\x20error\x20:::', _0x7b48f8);
                }
                _0x2c577c();
            }, function() {
                _0x455007['waiting'] = ![];
            });
        }
    };
    var _0x3ab459 = 0x1,
        _0x333edf = 0x2,
        _0x14d4d7 = 0x4,
        _0x55d6ce = 0x8,
        _0x38ccbf = 0x10,
        _0x2d599b = 0x20,
        _0x1e54b8 = 0x0,
        _0xc0643f = 0x1,
        _0x244de0 = 0x0,
        _0x46916b = 0x1,
        _0x24917c = 0x0,
        _0x2e6e44 = 0x1;
    window['innerWidth'] < 0x514 ? this['nickname'] = {
        'id': document['getElementById']('nickname_block'),
        'style': document['getElementById']('nickname_block')['style'],
        'input': document['getElementById']('nickname_input'),
        'active': _0x2e6e44,
        'position': _0x14d4d7 | _0x3ab459,
        'view': _0x6cfa49,
        'translate': {
            'x': 0x0,
            'y': 0x0,
            '_x': 0xc8,
            '_y': 0xb8
        }
    } : this['nickname'] = {
        'id': document['getElementById']('nickname_block'),
        'style': document['getElementById']('nickname_block')['style'],
        'input': document['getElementById']('nickname_input'),
        'active': _0x2e6e44,
        'position': _0x14d4d7 | _0x38ccbf,
        'view': _0x6cfa49,
        'translate': {
            'x': 0x0,
            'y': 0x0,
            '_x': -0xb4,
            '_y': 0xb8
        }
    };
    this['nickname']['id']['addEventListener']('keyup', function(_0x57782e) {
        _0x57782e['preventDefault']();
        if (_0x57782e['keyCode'] == 0xd && !_0x455007['waiting'] && !_0x455007['settings']) _0x455007['play_game']();
    }), this['nickname']['input']['value'] = Cookies['get']('starve_nickname') ? Cookies['get']('starve_nickname') : '', this['account_nickname'] = {
        'id': document['getElementById']('account_nickname_block'),
        'style': document['getElementById']('account_nickname_block')['style'],
        'input': document['getElementById']('account_nickname_input'),
        'active': _0x24917c,
        'position': _0x14d4d7 | _0x38ccbf,
        'view': _0x4f2e13,
        'translate': {
            'x': 0x0,
            'y': 0x0,
            '_x': -0x7a,
            '_y': 0x6e
        }
    };
    if (window['innerWidth'] < 0x514) this['server_list'] = {
        'id': document['getElementById']('servselect'),
        'style': document['getElementById']('servselect')['style'],
        'active': _0x2e6e44,
        'position': _0x14d4d7 | _0x3ab459,
        'view': _0x6cfa49,
        'translate': {
            'x': 0x0,
            'y': 0x0,
            '_x': 0xd0,
            '_y': 0xe1
        }
    };
    else this['server_list'] = {
        'id': document['getElementById']('servselect'),
        'style': document['getElementById']('servselect')['style'],
        'active': _0x2e6e44,
        'position': _0x14d4d7 | _0x38ccbf,
        'view': _0x6cfa49,
        'translate': {
            'x': 0x0,
            'y': 0x0,
            '_x': -0xb4,
            '_y': 0xe1
        }
    };
    this['leaderboard'] = {
        'id': document['getElementById']('leaderboard'),
        'style': document['getElementById']('leaderboard')['style'],
        'active': _0x24917c,
        'position': _0x14d4d7 | _0x38ccbf,
        'view': _0xaa9b6f,
        'translate': {
            'x': 0x0,
            'y': 0x0,
            '_x': -294.5,
            '_y': 0xbe
        }
    }, this['stats_box'] = {
        'id': document['getElementById']('stats_box'),
        'style': document['getElementById']('stats_box')['style'],
        'active': _0x24917c,
        'position': _0x14d4d7 | _0x38ccbf,
        'view': _0x4f2e13,
        'translate': {
            'x': 0x0,
            'y': 0x0,
            '_x': 0x7d,
            '_y': 0xbb
        }
    }, this['serverAddressBlock'] = {
        'id': document['getElementById']('serverAddressBlock'),
        'style': document['getElementById']('serverAddressBlock')['style'],
        'input': document['getElementById']('serverAddressInput'),
        'active': _0x24917c,
        'position': _0x14d4d7 | _0x38ccbf,
        'view': _0x3af4b8,
        'translate': {
            'x': 0x0,
            'y': 0x0,
            '_x': -0xdc,
            '_y': 0x15e
        }
    }, _0x82c94e = 0x0, this['css'] = [], this['css'][_0x82c94e++] = this['nickname'], this['css'][_0x82c94e++] = this['server_list'], this['css'][_0x82c94e++] = this['leaderboard'], this['css'][_0x82c94e++] = this['account_nickname'], this['css'][_0x82c94e++] = this['stats_box'], this['css'][_0x82c94e++] = this['serverAddressBlock'], _0x82c94e = 0x0, this['bkgd'] = [], this['bkgd'][_0x82c94e++] = gui_create_image_hd(IMAGES['AVATAR_RESUME'], _0x2e6e44, 0x0, 0x0, _0x3ab459), this['bkgd'][_0x82c94e++] = gui_create_image_hd(IMAGES['AVATAR_LVL1'], _0x24917c, 0x0, 0x0, _0x3ab459), this['bkgd'][_0x82c94e++] = gui_create_image_hd(IMAGES['AVATAR_LVL2'], _0x24917c, 0x0, 0x0, _0x3ab459), this['bkgd'][_0x82c94e++] = gui_create_image_hd(IMAGES['AVATAR_LVL3'], _0x24917c, 0x0, 0x0, _0x3ab459), this['bkgd'][_0x82c94e++] = gui_create_image_hd(IMAGES['AVATAR_LVL4'], _0x24917c, 0x0, 0x0, _0x3ab459), this['bkgd'][_0x82c94e++] = gui_create_image_hd(IMAGES['AVATAR_LVL5'], _0x24917c, 0x0, 0x0, _0x3ab459), this['bkgd'][_0x82c94e++] = gui_create_image_hd(IMAGES['AVATAR_LVL6'], _0x24917c, 0x0, 0x0, _0x3ab459), this['bkgd'][_0x82c94e++] = gui_create_image_hd(IMAGES['AVATAR_LVL7'], _0x24917c, 0x0, 0x0, _0x3ab459), this['bkgd'][_0x82c94e++] = gui_create_image_hd(IMAGES['AVATAR_LVL8'], _0x24917c, 0x0, 0x0, _0x3ab459), this['bkgd'][_0x82c94e++] = gui_create_image_hd(IMAGES['AVATAR_LVL9'], _0x24917c, 0x0, 0x0, _0x3ab459), this['bkgd'][_0x82c94e++] = gui_create_image_hd(IMAGES['AVATAR_LVL10'], _0x24917c, 0x0, 0x0, _0x3ab459), this['bkgd'][_0x82c94e++] = gui_create_image_hd(IMAGES['AVATAR_LVL11'], _0x24917c, 0x0, 0x0, _0x3ab459), this['bkgd'][_0x82c94e++] = gui_create_image_hd(IMAGES['AVATAR_LVL12'], _0x24917c, 0x0, 0x0, _0x3ab459), this['bkgd'][_0x82c94e++] = gui_create_image_hd(IMAGES['AVATAR_LVL13'], _0x24917c, 0x0, 0x0, _0x3ab459), this['bkgd'][_0x82c94e++] = gui_create_image_hd(IMAGES['AVATAR_LVL14'], _0x24917c, 0x0, 0x0, _0x3ab459), this['bkgd'][_0x82c94e++] = gui_create_image_hd(IMAGES['AVATAR_LVL15'], _0x24917c, 0x0, 0x0, _0x3ab459), this['bkgd'][_0x82c94e++] = gui_create_image_hd(IMAGES['AVATAR_LVL16'], _0x24917c, 0x0, 0x0, _0x3ab459), this['bkgd'][_0x82c94e++] = gui_create_image_hd(IMAGES['AVATAR_LVL17'], _0x24917c, 0x0, 0x0, _0x3ab459), this['bkgd'][_0x82c94e++] = gui_create_image_hd(IMAGES['AVATAR_LVL18'], _0x24917c, 0x0, 0x0, _0x3ab459);
    if (window['innerWidth'] < 0x514) this['bkgd'][_0x82c94e] = gui_create_image_hd(IMAGES['LOGO_INTERFACE'], _0x2e6e44, 0xc8, 0x64, _0x14d4d7 | _0x3ab459);
    else this['bkgd'][_0x82c94e] = gui_create_image_hd(IMAGES['LOGO_INTERFACE'], _0x2e6e44, -0x2f1 / 0x4, 0x64, _0x14d4d7 | _0x38ccbf);
    this['bkgd'][_0x82c94e++]['view'] = _0x6cfa49, this['bkgd'][_0x82c94e++] = gui_create_image_hd(IMAGES['LINKS_BG'], _0x2e6e44, 0x161, -0xa, _0x333edf);
    window['innerWidth'] > 0x514 && (this['bkgd'][_0x82c94e] = gui_create_image_hd(IMAGES['CHANGELOG_BOX'], _0x2e6e44, -0x375 / 0x4, -0x13f / 0x2, _0x55d6ce | _0x38ccbf), this['bkgd'][_0x82c94e++]['view'] = _0x6cfa49);
    this['bkgd'][_0x82c94e] = gui_create_image_hd(IMAGES['PROFILE_BOX'], _0x24917c, -0x50d / 0x4, 0x64, _0x14d4d7 | _0x38ccbf), this['bkgd'][_0x82c94e++]['view'] = _0x4f2e13, this['bkgd'][_0x82c94e] = gui_create_image_hd(IMAGES['SKINS_BOX'], _0x24917c, -0x591 / 0x4, 0x64, _0x14d4d7 | _0x38ccbf), this['bkgd'][_0x82c94e++]['view'] = _0x593e2a, this['bkgd'][_0x82c94e] = gui_create_image_hd(IMAGES['ACCOUNT_BOX'], _0x24917c, -0x389 / 0x4, 0x32, _0x14d4d7 | _0x38ccbf), this['bkgd'][_0x82c94e++]['view'] = _0x5ee3a9, this['bkgd'][_0x82c94e] = gui_create_image_hd(IMAGES['SHOP_BOX'], _0x24917c, -0x648 / 0x4, 0x82, _0x14d4d7 | _0x38ccbf), this['bkgd'][_0x82c94e++]['view'] = _0x271d21, this['bkgd'][_0x82c94e] = gui_create_image_hd(IMAGES['SERVER_LOCATION_BOX'], _0x24917c, -0x45d / 0x4, 0x82, _0x14d4d7 | _0x38ccbf), this['bkgd'][_0x82c94e++]['view'] = _0x2d1ff7, this['bkgd'][_0x82c94e] = gui_create_image_hd(IMAGES['SERVER_DURATION_BOX'], _0x24917c, -0x4c6 / 0x4, 0x82, _0x14d4d7 | _0x38ccbf), this['bkgd'][_0x82c94e++]['view'] = _0x318405, this['bkgd'][_0x82c94e] = gui_create_image_hd(IMAGES['SERVER_ACCESS_BOX'], _0x24917c, -0x4c6 / 0x4, 0x64, _0x14d4d7 | _0x38ccbf), this['bkgd'][_0x82c94e++]['view'] = _0x3af4b8, this['bkgd'][_0x82c94e] = gui_create_image_hd(IMAGES['SEASON5_BOX'], _0x24917c, -IMAGES['SEASON5_BOX']['width'] / 0x4 - 0x15e, -0xf, _0x14d4d7 | _0x38ccbf), this['bkgd'][_0x82c94e++]['view'] = _0x15f891, this['bkgd'][_0x82c94e] = gui_create_image_hd(IMAGES['TUTORIAL_BOX'], _0x24917c, -0x5d9 / 0x4, 0x6e, _0x14d4d7 | _0x38ccbf), this['bkgd'][_0x82c94e++]['view'] = _0x296115, this['bkgd'][_0x82c94e] = gui_create_image_hd(IMAGES['LEADERBOARD_BOX'], _0x24917c, -0x4ca / 0x4, 0x64, _0x14d4d7 | _0x38ccbf), this['bkgd'][_0x82c94e++]['view'] = _0xaa9b6f, this['bkgd'][_0x82c94e] = gui_create_image_hd(IMAGES['BUY_BREAD_BOX'], _0x24917c, -0x565 / 0x4, 0x50, _0x14d4d7 | _0x38ccbf), this['bkgd'][_0x82c94e++]['view'] = _0x3dd526, this['bkgd'][_0x82c94e] = gui_create_image_hd(IMAGES['SPIN1'], _0x24917c, -0x606 / 0x4, 0x96, _0x14d4d7 | _0x38ccbf), this['bkgd'][_0x82c94e++]['view'] = _0x2c587c;
    var _0x16892f = 0x168 / 0x64,
        _0x5231c0 = this['create_spin']([
            ['#25c5d6', _0x16892f * 0x3],
            ['#e2cf27', _0x16892f * 0xa],
            ['#afac98', _0x16892f * 0x1e],
            ['#d88e23', _0x16892f * 0x39]
        ]);
    this['bkgd'][_0x82c94e] = gui_create_image_hd(_0x5231c0, _0x24917c, -_0x5231c0['width'] / 0x4, 0xb2, _0x14d4d7 | _0x38ccbf), this['bkgd'][_0x82c94e++]['view'] = _0x2c587c, this['play_spin'] = function(_0x4b38cb, _0x18c00d, _0x571553) {
        _0x455007['spin'] = 0x1, _0x455007['spin_effect'] = 0x0, _0x455007['spin_win_effect'] = 0x0, _0x455007['spin_target'] = _0x4b38cb, _0x455007['spin_type'] = _0x18c00d;
        var _0x1f8a22, _0x4c432a = 0x0;
        if (_0x18c00d === 0x0) {
            for (_0x4c432a = 0x0; _0x4c432a < COSMETICS['SKIN']['length']; _0x4c432a++) {
                if (_0x571553 === COSMETICS['SKIN'][_0x4c432a]['id']) break;
            }
            _0x1f8a22 = COSMETICS['SKIN'][_0x4c432a], _0x455007['unlock']['skin'][_0x4c432a] = 0x1;
        } else {
            if (_0x18c00d === 0x1) {
                for (_0x4c432a = 0x0; _0x4c432a < COSMETICS['ACCESSORY']['length']; _0x4c432a++) {
                    if (_0x571553 === COSMETICS['ACCESSORY'][_0x4c432a]['id']) break;
                }
                _0x1f8a22 = COSMETICS['ACCESSORY'][_0x4c432a], _0x455007['unlock']['accessory'][_0x4c432a] = 0x1;
            } else {
                if (_0x18c00d === 0x2) {
                    for (_0x4c432a = 0x0; _0x4c432a < COSMETICS['BAG']['length']; _0x4c432a++) {
                        if (_0x571553 === COSMETICS['BAG'][_0x4c432a]['id']) break;
                    }
                    _0x1f8a22 = COSMETICS['BAG'][_0x4c432a], _0x455007['unlock']['bag'][_0x4c432a] = 0x1;
                } else {
                    if (_0x18c00d === 0x3) {
                        for (_0x4c432a = 0x0; _0x4c432a < COSMETICS['BOOK']['length']; _0x4c432a++) {
                            if (_0x571553 === COSMETICS['BOOK'][_0x4c432a]['id']) break;
                        }
                        _0x1f8a22 = COSMETICS['BOOK'][_0x4c432a], _0x455007['unlock']['book'][_0x4c432a] = 0x1;
                    } else {
                        if (_0x18c00d === 0x4) {
                            for (_0x4c432a = 0x0; _0x4c432a < COSMETICS['CRATE']['length']; _0x4c432a++) {
                                if (_0x571553 === COSMETICS['CRATE'][_0x4c432a]['id']) break;
                            }
                            _0x1f8a22 = COSMETICS['CRATE'][_0x4c432a], _0x455007['unlock']['crate'][_0x4c432a] = 0x1, _0x455007['unlock']['dead'][_0x4c432a] = 0x1;
                        }
                    }
                }
            }
        }
        _0x455007['spin_win'] = _0x4c432a, _0x455007['spin_author'] = gui_render_text('by\x20' + _0x1f8a22['author'], '\x27Baloo\x20Paaji\x27,\x20sans-serif', '#EFE4B4', 0x28, 0x1f4, undefined, 0x1e, 0x18, undefined, undefined, undefined, undefined, '#000000', 0x18), _0x455007['spin_name'] = gui_render_text(_0x1f8a22['name'], '\x27Baloo\x20Paaji\x27,\x20sans-serif', '#EFE4B4', 0x3c, 0x258, undefined, 0x1e, 0x18, undefined, undefined, undefined, undefined, '#000000', 0x14);
    }, this['spin'] = 0x0, this['spin_effect'] = 0x0, this['spin_target'] = 0x0, this['spin_type'] = 0x0, this['spin_win_effect'] = 0x0, this['spin_author'] = undefined, this['spin_name'] = undefined;
    var _0x47bc03 = 0x96 + 0x1c0 / 0x4 - 0x104 / 0x4,
        _0x1204c1 = -0x104 / 0x4;
    this['bkgd'][_0x82c94e] = gui_create_image_hd(IMAGES['SPIN2'], _0x24917c, -0x606 / 0x4, 0x96, _0x14d4d7 | _0x38ccbf), this['bkgd'][_0x82c94e++]['view'] = _0x38e1d9;
    var _0x5231c0 = this['create_spin']([
        ['#d45ce5', _0x16892f * 0x3],
        ['#25c5d6', _0x16892f * 0xa],
        ['#e2cf27', _0x16892f * 0x1e],
        ['#afac98', _0x16892f * 0x39]
    ]);
    this['bkgd'][_0x82c94e] = gui_create_image_hd(_0x5231c0, _0x24917c, -_0x5231c0['width'] / 0x4, 0xb2, _0x14d4d7 | _0x38ccbf), this['bkgd'][_0x82c94e++]['view'] = _0x38e1d9, this['bkgd'][_0x82c94e] = gui_create_image_hd(IMAGES['SPIN3'], _0x24917c, -0x606 / 0x4, 0x96, _0x14d4d7 | _0x38ccbf), this['bkgd'][_0x82c94e++]['view'] = _0x56210c;
    var _0x5231c0 = this['create_spin']([
        ['#d33a2a', _0x16892f * 0x3],
        ['#d45ce5', _0x16892f * 0xa],
        ['#25c5d6', _0x16892f * 0x1e],
        ['#e2cf27', _0x16892f * 0x39]
    ]);
    this['bkgd'][_0x82c94e] = gui_create_image_hd(_0x5231c0, _0x24917c, -_0x5231c0['width'] / 0x4, 0xb2, _0x14d4d7 | _0x38ccbf), this['bkgd'][_0x82c94e++]['view'] = _0x56210c, this['bkgd'][_0x82c94e] = gui_create_image_hd(IMAGES['SPIN4'], _0x24917c, -0x606 / 0x4, 0x96, _0x14d4d7 | _0x38ccbf), this['bkgd'][_0x82c94e++]['view'] = _0x4079e2;
    var _0x5231c0 = this['create_spin']([
        ['#25c5d6', _0x16892f * 0x3],
        ['#e2cf27', _0x16892f * 0xa],
        ['#afac98', _0x16892f * 0x1e],
        ['#d88e23', _0x16892f * 0x39]
    ]);
    this['bkgd'][_0x82c94e] = gui_create_image_hd(_0x5231c0, _0x24917c, -_0x5231c0['width'] / 0x4, 0xb2, _0x14d4d7 | _0x38ccbf), this['bkgd'][_0x82c94e++]['view'] = _0x4079e2, this['bkgd'][_0x82c94e] = gui_create_image_hd(IMAGES['SPIN5'], _0x24917c, -0x606 / 0x4, 0x96, _0x14d4d7 | _0x38ccbf), this['bkgd'][_0x82c94e++]['view'] = _0x56ac79;
    var _0x5231c0 = this['create_spin']([
        ['#d45ce5', _0x16892f * 0x3],
        ['#25c5d6', _0x16892f * 0xa],
        ['#e2cf27', _0x16892f * 0x1e],
        ['#afac98', _0x16892f * 0x39]
    ]);
    this['bkgd'][_0x82c94e] = gui_create_image_hd(_0x5231c0, _0x24917c, -_0x5231c0['width'] / 0x4, 0xb2, _0x14d4d7 | _0x38ccbf), this['bkgd'][_0x82c94e++]['view'] = _0x56ac79, this['bkgd'][_0x82c94e] = gui_create_image_hd(IMAGES['SPIN6'], _0x24917c, -0x606 / 0x4, 0x96, _0x14d4d7 | _0x38ccbf), this['bkgd'][_0x82c94e++]['view'] = _0x3ac679;
    var _0x5231c0 = this['create_spin']([
        ['#d33a2a', _0x16892f * 0x3],
        ['#d45ce5', _0x16892f * 0xa],
        ['#25c5d6', _0x16892f * 0x1e],
        ['#e2cf27', _0x16892f * 0x39]
    ]);
    this['bkgd'][_0x82c94e] = gui_create_image_hd(_0x5231c0, _0x24917c, -_0x5231c0['width'] / 0x4, 0xb2, _0x14d4d7 | _0x38ccbf), this['bkgd'][_0x82c94e++]['view'] = _0x3ac679, this['bkgd'][_0x82c94e] = gui_create_image_hd(IMAGES['CUSTOM_SKIN_BOX'], _0x24917c, -0x556 / 0x4, 0x64, _0x14d4d7 | _0x38ccbf), this['bkgd'][_0x82c94e++]['view'] = _0x4dd4a2, this['bkgd'][_0x82c94e] = gui_create_image_hd(IMAGES['ACCESSORIES_BOX'], _0x24917c, -0x556 / 0x4, 0x64, _0x14d4d7 | _0x38ccbf), this['bkgd'][_0x82c94e++]['view'] = _0x373ea5, this['bkgd'][_0x82c94e] = gui_create_image_hd(IMAGES['BAG_BOX'], _0x24917c, -0x556 / 0x4, 0x64, _0x14d4d7 | _0x38ccbf), this['bkgd'][_0x82c94e++]['view'] = _0x573e07, this['bkgd'][_0x82c94e] = gui_create_image_hd(IMAGES['BOOK_BOX'], _0x24917c, -0x556 / 0x4, 0x64, _0x14d4d7 | _0x38ccbf), this['bkgd'][_0x82c94e++]['view'] = _0x5c343f, this['bkgd'][_0x82c94e] = gui_create_image_hd(IMAGES['CRATE_BOX'], _0x24917c, -0x556 / 0x4, 0x64, _0x14d4d7 | _0x38ccbf), this['bkgd'][_0x82c94e++]['view'] = _0x46f518, this['bkgd'][_0x82c94e] = gui_create_image_hd(IMAGES['LOOT_BOX'], _0x24917c, -0x556 / 0x4, 0x64, _0x14d4d7 | _0x38ccbf), this['bkgd'][_0x82c94e++]['view'] = _0x27e67f, BAG_REMAIN_BOX = _0x82c94e++, this['bkgd'][BAG_REMAIN_BOX] = gui_create_image_hd(IMAGES['BAG_REMAIN_BOX'], _0x24917c, 0x38c / 0x2 + 0x1e, 0x0, _0x14d4d7), SERVER_REMAIN_BOX = _0x82c94e++, this['bkgd'][SERVER_REMAIN_BOX] = gui_create_image_hd(IMAGES['SERVER_REMAIN_BOX'], _0x24917c, 0x38c / 0x2 + 0x255 / 0x2 + 0x3c, 0x0, _0x14d4d7), this['bkgd'][_0x82c94e] = gui_create_image_hd(IMAGES['LOCKED_CUSTOM_ALERT'], _0x24917c, -0x2f6 / 0x4, -0x5, _0x14d4d7 | _0x38ccbf), this['bkgd'][_0x82c94e++]['view'] = _0x352c76, this['bkgd'][_0x82c94e] = gui_create_image_hd(IMAGES['LOCKED_SKIN_ALERT'], _0x24917c, -0x2f6 / 0x4, -0x5, _0x14d4d7 | _0x38ccbf), this['bkgd'][_0x82c94e++]['view'] = _0x2c814f, LEVEL_GAUGE = _0x82c94e++, this['bkgd'][LEVEL_GAUGE] = gui_create_image_hd(IMAGES['GAUGE'], _0x2e6e44, 0x5d, 0x1e, _0x14d4d7), this['bkgd'][_0x82c94e] = gui_create_image_hd(IMAGES['CHANGE_NICKNAME1_BOX'], _0x24917c, -0x2b4 / 0x4, 0x6e, _0x14d4d7 | _0x38ccbf), this['bkgd'][_0x82c94e++]['view'] = _0x342d09, this['bkgd'][_0x82c94e] = gui_create_image_hd(IMAGES['CHANGE_NICKNAME0_BOX'], _0x24917c, -0x2b4 / 0x4, 0x6e, _0x14d4d7 | _0x38ccbf), this['bkgd'][_0x82c94e++]['view'] = _0x43d6a2, _0x82c94e = 0x0, this['buttons'] = [], this['buttons'][_0x82c94e++] = gui_create_button(0x32, 0x39, '', [IMAGES['BUY_BREAD_OUT'], IMAGES['BUY_BREAD_IN'], IMAGES['BUY_BREAD_CLICK']], _0xc0643f, _0x244de0, function() {
        if (_0x455007['isUserLogged']()) _0x244a54(_0x3dd526);
        else _0x244a54(_0x5ee3a9);
    }, 0x140, 0x0, _0x3ab459, _0x2e6e44);
    if (window['innerWidth'] < 0x514) this['buttons'][_0x82c94e] = gui_create_button(0xca, 0x61, '', [IMAGES['PLAY_BUTTON_OUT'], IMAGES['PLAY_BUTTON_IN'], IMAGES['PLAY_BUTTON_CLICK']], _0xc0643f, _0x244de0, this['play_game'], 0x1ce, 0xeb, _0x14d4d7 | _0x3ab459, _0x2e6e44);
    else this['buttons'][_0x82c94e] = gui_create_button(0xca, 0x61, '', [IMAGES['PLAY_BUTTON_OUT'], IMAGES['PLAY_BUTTON_IN'], IMAGES['PLAY_BUTTON_CLICK']], _0xc0643f, _0x244de0, this['play_game'], 0x4a, 0xeb, _0x14d4d7 | _0x38ccbf, _0x2e6e44);
    this['buttons'][_0x82c94e++]['view'] = _0x6cfa49;
    window['innerWidth'] > 0x514 && (this['buttons'][_0x82c94e] = gui_create_button(0x163, 0xa8, '', [IMAGES['CHANGELOG_BUTTON_OUT'], IMAGES['CHANGELOG_BUTTON_OUT'], IMAGES['CHANGELOG_BUTTON_OUT']], _0xc0643f, _0x244de0, function() {
        window['open']('./changelog.html', '_blank');
    }, -0xc3, -0x73, _0x55d6ce | _0x38ccbf, _0x2e6e44), this['buttons'][_0x82c94e++]['view'] = _0x6cfa49, this['buttons'][_0x82c94e] = gui_create_button(0x163, 0xa8, '', [IMAGES['DEVASTIO_BUTTON_OUT'], IMAGES['DEVASTIO_BUTTON_OUT'], IMAGES['DEVASTIO_BUTTON_OUT']], _0xc0643f, _0x244de0, function() {
        window['open']('https://devast.io', '_blank');
    }, 0x14, -0x73, _0x55d6ce | _0x38ccbf, _0x2e6e44), this['buttons'][_0x82c94e++]['view'] = _0x6cfa49);
    this['buttons'][_0x82c94e++] = gui_create_button(0x50, 0x50, '', [IMAGES['DISCORD_BUTTON_OUT'], IMAGES['DISCORD_BUTTON_IN'], IMAGES['DISCORD_BUTTON_CLICK']], _0xc0643f, _0x244de0, function() {
        window['open']('https://discord.gg/starveio', '_blank');
    }, 0x14a, 0xa, _0x333edf, _0x2e6e44), this['buttons'][_0x82c94e++] = gui_create_button(0x50, 0x50, '', [IMAGES['REDDIT_BUTTON_OUT'], IMAGES['REDDIT_BUTTON_IN'], IMAGES['REDDIT_BUTTON_CLICK']], _0xc0643f, _0x244de0, function() {
        window['open']('https://reddit.com/r/starveio', '_blank');
    }, 0x118, 0xa, _0x333edf, _0x2e6e44), this['buttons'][_0x82c94e++] = gui_create_button(0x50, 0x50, '', [IMAGES['WIKI_BUTTON_OUT'], IMAGES['WIKI_BUTTON_IN'], IMAGES['WIKI_BUTTON_CLICK']], _0xc0643f, _0x244de0, function() {
        window['open']('https://starveiopro.wikia.com/wiki/', '_blank');
    }, 0xe6, 0xa, _0x333edf, _0x2e6e44), this['buttons'][_0x82c94e++] = gui_create_button(0x50, 0x50, '', [IMAGES['FACEBOOK_BUTTON_OUT'], IMAGES['FACEBOOK_BUTTON_IN'], IMAGES['FACEBOOK_BUTTON_CLICK']], _0xc0643f, _0x244de0, function() {
        window['open']('https://www.facebook.com/pages/category/Video-Game/limaxio-571818073000979/', '_blank');
    }, 0x9b, 0xa, _0x333edf, _0x2e6e44), this['buttons'][_0x82c94e++] = gui_create_button(0x50, 0x50, '', [IMAGES['TWITTER_BUTTON_OUT'], IMAGES['TWITTER_BUTTON_IN'], IMAGES['TWITTER_BUTTON_CLICK']], _0xc0643f, _0x244de0, function() {
        window['open']('https://twitter.com/lapamauve', '_blank');
    }, 0x69, 0xa, _0x333edf, _0x2e6e44), this['buttons'][_0x82c94e++] = gui_create_button(0x50, 0x50, '', [IMAGES['YOUTUBE_BUTTON_OUT'], IMAGES['YOUTUBE_BUTTON_IN'], IMAGES['YOUTUBE_BUTTON_CLICK']], _0xc0643f, _0x244de0, function() {
        window['open']('https://youtube.com/c/lapamauve', '_blank');
    }, 0x37, 0xa, _0x333edf, _0x2e6e44), LEADERBOARD_BUTTON = _0x82c94e++, this['buttons'][LEADERBOARD_BUTTON] = gui_create_button(0xe8, 0x8e, '', [IMAGES['ICONS_BOTTOM_BG_BUTTON_OUT'], IMAGES['ICONS_BOTTOM_BG_BUTTON_IN'], IMAGES['ICONS_BOTTOM_BG_BUTTON_CLICK']], _0xc0643f, _0x244de0, function() {
        _0x244a54(_0xaa9b6f), getLeaderboard(ui['LEADERBOARD_ALL'], ui['LEADERBOARD_TOTAL'], ui['LEADERBOARD_SCORE'], ui['LEADERBOARD_SEASON5']);
    }, -0x5, 0x23d, _0x3ab459, _0x2e6e44), this['buttons'][_0x82c94e++] = gui_create_button(0xec, 0xa5, '', [IMAGES['LEADERBOARD_ICON'], IMAGES['LEADERBOARD_ICON'], IMAGES['LEADERBOARD_ICON']], _0xc0643f, _0x46916b, function() {
        _0x244a54(_0xaa9b6f);
    }, -0x5, 0x236, _0x3ab459, _0x2e6e44), TUTORIAL_BUTTON = _0x82c94e++, this['buttons'][TUTORIAL_BUTTON] = gui_create_button(0xec, 0xa5, '', [IMAGES['ICONS_BG_BUTTON_OUT'], IMAGES['ICONS_BG_BUTTON_IN'], IMAGES['ICONS_BG_BUTTON_CLICK']], _0xc0643f, _0x244de0, function() {
        _0x244a54(_0x296115);
    }, -0x5, 0x1ee, _0x3ab459, _0x2e6e44), this['buttons'][_0x82c94e++] = gui_create_button(0xec, 0xa5, '', [IMAGES['TUTORIAL_ICON'], IMAGES['TUTORIAL_ICON'], IMAGES['TUTORIAL_ICON']], _0xc0643f, _0x46916b, function() {
        _0x244a54(_0x296115);
    }, -0x5, 0x1ee, _0x3ab459, _0x2e6e44), SERVER_BUTTON = _0x82c94e++, this['buttons'][SERVER_BUTTON] = gui_create_button(0xec, 0xa5, '', [IMAGES['ICONS_BG_BUTTON_OUT'], IMAGES['ICONS_BG_BUTTON_IN'], IMAGES['ICONS_BG_BUTTON_CLICK']], _0xc0643f, _0x244de0, function() {
        if (_0x455007['isUserLogged']()) {
            if (ui['privateServerTime'] - Date['now']() > 0x0) _0x244a54(_0x3af4b8);
        } else _0x244a54(_0x5ee3a9);
    }, -0x5, 0x19f, _0x3ab459, _0x2e6e44), this['buttons'][_0x82c94e++] = gui_create_button(0xec, 0xa5, '', [IMAGES['SERVER_ACCESS_ICON'], IMAGES['SERVER_ACCESS_ICON'], IMAGES['SERVER_ACCESS_ICON']], _0xc0643f, _0x46916b, function() {
        if (_0x455007['isUserLogged']()) {
            if (ui['privateServerTime'] - Date['now']() > 0x0) _0x244a54(_0x3af4b8);
        } else _0x244a54(_0x5ee3a9);
    }, -0x5, 0x19f, _0x3ab459, _0x2e6e44), SHOP_BUTTON = _0x82c94e++, this['buttons'][SHOP_BUTTON] = gui_create_button(0xec, 0xa5, '', [IMAGES['ICONS_BG_BUTTON_OUT'], IMAGES['ICONS_BG_BUTTON_IN'], IMAGES['ICONS_BG_BUTTON_CLICK']], _0xc0643f, _0x244de0, function() {
        _0x244a54(_0x271d21);
    }, -0x5, 0x150, _0x3ab459, _0x2e6e44), this['buttons'][_0x82c94e++] = gui_create_button(0xec, 0xa5, '', [IMAGES['SHOP_ICON'], IMAGES['SHOP_ICON'], IMAGES['SHOP_ICON']], _0xc0643f, _0x46916b, function() {
        _0x244a54(_0x271d21);
    }, -0x5, 0x150, _0x3ab459, _0x2e6e44), COSMETICS_BUTTON = _0x82c94e++, this['buttons'][COSMETICS_BUTTON] = gui_create_button(0xec, 0xa5, '', [IMAGES['ICONS_BG_BUTTON_OUT'], IMAGES['ICONS_BG_BUTTON_IN'], IMAGES['ICONS_BG_BUTTON_CLICK']], _0xc0643f, _0x244de0, function() {
        _0x244a54(_0x593e2a);
    }, -0x5, 0x101, _0x3ab459, _0x2e6e44), this['buttons'][_0x82c94e++] = gui_create_button(0xec, 0xa5, '', [IMAGES['SKINS_ICON'], IMAGES['SKINS_ICON'], IMAGES['SKINS_ICON']], _0xc0643f, _0x46916b, function() {
        _0x244a54(_0x593e2a);
    }, -0x5, 0x101, _0x3ab459, _0x2e6e44), GAME_BUTTON = _0x82c94e++, this['buttons'][GAME_BUTTON] = gui_create_button(0xec, 0xa5, '', [IMAGES['ICONS_BG_BUTTON_OUT'], IMAGES['ICONS_BG_BUTTON_IN'], IMAGES['ICONS_BG_BUTTON_CLICK']], _0xc0643f, _0x244de0, function() {
        _0x244a54(_0x6cfa49);
    }, -0x5, 0xb2, _0x3ab459, _0x2e6e44), this['buttons'][_0x82c94e++] = gui_create_button(0xec, 0xa5, '', [IMAGES['START_ICON'], IMAGES['START_ICON'], IMAGES['START_ICON']], _0xc0643f, _0x46916b, function() {
        _0x244a54(_0x6cfa49);
    }, -0x5, 0xb2, _0x3ab459, _0x2e6e44), LOGIN_BUTTON = _0x82c94e++, this['LOGIN_BUTTON'] = LOGIN_BUTTON, this['buttons'][LOGIN_BUTTON] = gui_create_button(0x144, 0xde, '', [IMAGES['LOGIN_BUTTON_OUT'], IMAGES['LOGIN_BUTTON_IN'], IMAGES['LOGIN_BUTTON_CLICK']], _0xc0643f, _0x244de0, function() {
        _0x244a54(_0x5ee3a9);
    }, 0x0, 0x46, _0x3ab459, _0x2e6e44), PROFILE_BUTTON = _0x82c94e++, PROFILE_BUTTON_2 = _0x82c94e++, this['PROFILE_BUTTON'] = PROFILE_BUTTON, this['PROFILE_BUTTON_2'] = PROFILE_BUTTON_2, this['buttons'][PROFILE_BUTTON] = gui_create_button(0x144, 0xde, '', [IMAGES['PROFILE_BUTTON_OUT'], IMAGES['PROFILE_BUTTON_IN'], IMAGES['PROFILE_BUTTON_CLICK']], _0xc0643f, _0x244de0, function() {
        _0x244a54(_0x4f2e13), _0x1750df(-0x1);
    }, 0x0, 0x46, _0x3ab459, _0x24917c), this['buttons'][PROFILE_BUTTON_2] = gui_create_button(0x144, 0xde, '', [IMAGES['PROFILE_ICON'], IMAGES['PROFILE_ICON'], IMAGES['PROFILE_ICON']], _0xc0643f, _0x46916b, function() {
        _0x244a54(_0x4f2e13), _0x1750df(-0x1);
    }, 0x0, 0x46, _0x3ab459, _0x24917c);
    if (client['privateServer'] === 0x0) {
        var _0x2153c4 = _0x82c94e++;
        if (window['innerWidth'] < 0x514) this['buttons'][_0x2153c4] = gui_create_button(0x10a, 0xb0, '', [IMAGES['NORMAL_MODE_OUT'], IMAGES['NORMAL_MODE_IN'], IMAGES['NORMAL_MODE_CLICK']], _0xc0643f, _0x244de0, function() {
            client['select_gamemode'](WORLD['MODE_PVP']);
        }, 0x96, 0x12c, _0x3ab459 | _0x14d4d7, _0x2e6e44);
        else this['buttons'][_0x2153c4] = gui_create_button(0x10a, 0xb0, '', [IMAGES['NORMAL_MODE_OUT'], IMAGES['NORMAL_MODE_IN'], IMAGES['NORMAL_MODE_CLICK']], _0xc0643f, _0x244de0, function() {
            client['select_gamemode'](WORLD['MODE_PVP']);
        }, -0x154, 0x64, _0x38ccbf | _0x14d4d7, _0x2e6e44);
        this['buttons'][_0x2153c4]['view'] = _0x6cfa49, this['buttons'][_0x2153c4]['hint'] = 0x0;
        var _0x1f738f = _0x82c94e++;
        if (window['innerWidth'] < 0x514) this['buttons'][_0x1f738f] = gui_create_button(0x10a, 0xb0, '', [IMAGES['FOREST_MODE_OUT'], IMAGES['FOREST_MODE_IN'], IMAGES['FOREST_MODE_CLICK']], _0xc0643f, _0x244de0, function() {
            client['select_gamemode'](WORLD['MODE_LEGACY']);
        }, 0x96, 0x190, _0x3ab459 | _0x14d4d7, _0x2e6e44);
        else this['buttons'][_0x1f738f] = gui_create_button(0x10a, 0xb0, '', [IMAGES['FOREST_MODE_OUT'], IMAGES['FOREST_MODE_IN'], IMAGES['FOREST_MODE_CLICK']], _0xc0643f, _0x244de0, function() {
            client['select_gamemode'](WORLD['MODE_LEGACY']);
        }, -0x154, 0xc8, _0x38ccbf | _0x14d4d7, _0x2e6e44);
        this['buttons'][_0x1f738f]['view'] = _0x6cfa49, this['buttons'][_0x1f738f]['hint'] = 0x0;
        var _0x1d091f = _0x82c94e++;
        if (window['innerWidth'] < 0x514) this['buttons'][_0x1d091f] = gui_create_button(0x10a, 0xb0, '', [IMAGES['MODE_COMMUNITY_OUT'], IMAGES['MODE_COMMUNITY_IN'], IMAGES['MODE_COMMUNITY_CLICK']], _0xc0643f, _0x244de0, function() {
            client['select_gamemode'](WORLD['MODE_COMMUNITY']);
        }, 0x1c2, 0x12c, _0x3ab459 | _0x14d4d7, _0x2e6e44);
        else this['buttons'][_0x1d091f] = gui_create_button(0x10a, 0xb0, '', [IMAGES['MODE_COMMUNITY_OUT'], IMAGES['MODE_COMMUNITY_IN'], IMAGES['MODE_COMMUNITY_CLICK']], _0xc0643f, _0x244de0, function() {
            client['select_gamemode'](WORLD['MODE_COMMUNITY']);
        }, -0x154, 0x12c, _0x38ccbf | _0x14d4d7, _0x2e6e44);
        this['buttons'][_0x1d091f]['view'] = _0x6cfa49, this['buttons'][_0x1d091f]['hint'] = 0x0;
        var _0x3ff6c3 = _0x82c94e++;
        if (window['innerWidth'] < 0x514) this['buttons'][_0x3ff6c3] = gui_create_button(0x10a, 0xb0, '', [IMAGES['ZOMBIE_MODE_OUT'], IMAGES['ZOMBIE_MODE_IN'], IMAGES['ZOMBIE_MODE_CLICK']], _0xc0643f, _0x244de0, function() {
            client['select_gamemode'](WORLD['MODE_ZOMBIES']);
        }, 0x12c, 0x12c, _0x3ab459 | _0x14d4d7, _0x2e6e44);
        else this['buttons'][_0x3ff6c3] = gui_create_button(0x10a, 0xb0, '', [IMAGES['ZOMBIE_MODE_OUT'], IMAGES['ZOMBIE_MODE_IN'], IMAGES['ZOMBIE_MODE_CLICK']], _0xc0643f, _0x244de0, function() {
            client['select_gamemode'](WORLD['MODE_ZOMBIES']);
        }, 0xcc, 0x64, _0x38ccbf | _0x14d4d7, _0x2e6e44);
        this['buttons'][_0x3ff6c3]['view'] = _0x6cfa49, this['buttons'][_0x3ff6c3]['hint'] = 0x0;
        var _0x2d63d5 = _0x82c94e++;
        if (window['innerWidth'] < 0x514) this['buttons'][_0x2d63d5] = gui_create_button(0x10a, 0xb0, '', [IMAGES['VAMPIRE_MODE_OUT'], IMAGES['VAMPIRE_MODE_IN'], IMAGES['VAMPIRE_MODE_CLICK']], _0xc0643f, _0x244de0, function() {
            client['select_gamemode'](WORLD['MODE_VAMPIRES']);
        }, 0x12c, 0x190, _0x3ab459 | _0x14d4d7, _0x2e6e44);
        else this['buttons'][_0x2d63d5] = gui_create_button(0x10a, 0xb0, '', [IMAGES['VAMPIRE_MODE_OUT'], IMAGES['VAMPIRE_MODE_IN'], IMAGES['VAMPIRE_MODE_CLICK']], _0xc0643f, _0x244de0, function() {
            client['select_gamemode'](WORLD['MODE_VAMPIRES']);
        }, 0xcc, 0xc8, _0x38ccbf | _0x14d4d7, _0x2e6e44);
        this['buttons'][_0x2d63d5]['view'] = _0x6cfa49, this['buttons'][_0x2d63d5]['hint'] = 0x0;
        var _0x94b81a = _0x82c94e++;
        this['buttons'][_0x94b81a] = gui_create_button(0x10a, 0xb0, '', [IMAGES['MODE_EXPERIMENTAL_OUT'], IMAGES['MODE_EXPERIMENTAL_IN'], IMAGES['MODE_EXPERIMENTAL_CLICK']], _0xc0643f, _0x244de0, function() {
            client['select_gamemode'](WORLD['MODE_EXPERIMENTAL']);
        }, window['innerWidth'] < 0x514 ? 0x1c2 : 0xcc, window['innerWidth'] < 0x514 ? 0x190 : 0x12c, (window['innerWidth'] < 0x514 ? _0x3ab459 : _0x38ccbf) | _0x14d4d7, _0x2e6e44), this['buttons'][_0x94b81a]['view'] = _0x6cfa49, this['buttons'][_0x94b81a]['hint'] = 0x0;
    }
    this['buttons'][_0x82c94e] = gui_create_button(0x57, 0x4e, '', [IMAGES['MODIFY_NAME_OUT'], IMAGES['MODIFY_NAME_IN'], IMAGES['MODIFY_NAME_CLICK']], _0xc0643f, _0x244de0, function() {
        ui['generate_new_nickname']();
        if (ui['firstName'] === 0x0) _0x244a54(_0x43d6a2);
        else _0x244a54(_0x342d09);
    }, 0x7f, 0x6e, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x4f2e13, this['buttons'][_0x82c94e] = gui_create_button(0x57, 0x4e, '', [IMAGES['LOGOUT_OUT'], IMAGES['LOGOUT_IN'], IMAGES['LOGOUT_CLICK']], _0xc0643f, _0x244de0, function() {
        logout();
    }, 0xff, 0x6e, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x4f2e13, this['buttons'][_0x82c94e] = gui_create_button(0x3a, 0x40, '', [IMAGES['CLOSE_BUTTON_OUT'], IMAGES['CLOSE_BUTTON_IN'], IMAGES['CLOSE_BUTTON_CLICK']], _0xc0643f, _0x244de0, function() {
        _0x244a54(_0x6cfa49);
    }, 0xbd, 0x76, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x5ee3a9, this['buttons'][_0x82c94e] = gui_create_button(0x1f1, 0x48, '', [IMAGES['LOGIN_GOOGLE_OUT'], IMAGES['LOGIN_GOOGLE_IN'], IMAGES['LOGIN_GOOGLE_CLICK']], _0xc0643f, _0x244de0, function() {
        loginWithGoogle();
    }, -0x82, 0x186, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x5ee3a9, this['buttons'][_0x82c94e] = gui_create_button(0x1f1, 0x48, '', [IMAGES['LOGIN_FACEBOOK_OUT'], IMAGES['LOGIN_FACEBOOK_IN'], IMAGES['LOGIN_FACEBOOK_CLICK']], _0xc0643f, _0x244de0, function() {
        logWithFacebook();
    }, -0x82, 0x1ae, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x5ee3a9, __LEVEL_FACTOR__ = 0x4e20;

    function _0x111146(_0x5aa1c0) {
        var _0x3b1cab = ui['level_formula'](_0x5aa1c0),
            _0xb32aab = _0x3b1cab * _0x3b1cab * __LEVEL_FACTOR__,
            _0xbfede1 = (_0x3b1cab + 0x1) * (_0x3b1cab + 0x1) * __LEVEL_FACTOR__ - _0xb32aab;
        return _0x5aa1c0 -= _0xb32aab, _0x5aa1c0 / _0xbfede1;
    };
    this['xp_formula'] = _0x111146;

    function _0xd92ba1(_0x5c10dd) {
        return Math['floor'](Math['sqrt'](_0x5c10dd / __LEVEL_FACTOR__));
    };
    this['level_formula'] = _0xd92ba1, this['update_score'] = function(_0x24e5ff) {
        ui['lvl'] = ui['level_formula'](_0x24e5ff), ui['xp_dest'] = ui['xp_formula'](_0x24e5ff), ui['xp'] = 0x0, ui['score'] = _0x24e5ff;
    };

    function _0x1750df(_0x15745d, _0xf521d7) {
        if (_0xf521d7 !== undefined) {
            ui['profile_season'] = _0xf521d7;
            var _0x244f62 = ui['seasons'][_0xf521d7];
            ui['score'] = _0x244f62['score'], ui['kill'] = _0x244f62['kill'], ui['death'] = _0x244f62['death'], ui['time'] = _0x244f62['time'], ui['bestScore'] = _0x244f62['bestScore'], ui['bestKill'] = _0x244f62['bestKill'], ui['bestTime'] = _0x244f62['bestTime'], ui['scoreTotal'] = _0x244f62['scoreTotal'];
        }
        if (_0x15745d === undefined) _0x15745d = ui['current_mode_score'];
        ui['current_mode_score'] = _0x15745d;
        if (_0x15745d >= 0x0) document['getElementById']('stats_box_time')['innerHTML'] = ui['bestTime'][_0x15745d], document['getElementById']('stats_box_kill')['innerHTML'] = ui['bestKill'][_0x15745d], document['getElementById']('stats_box_score')['innerHTML'] = ui['bestScore'][_0x15745d];
        else {
            var _0x5d5eb0 = 0x0;
            for (var _0x530a16 = 0x0; _0x530a16 < ui['kill']['length']; _0x530a16++) _0x5d5eb0 += ui['kill'][_0x530a16];
            var _0x2d7757 = 0x0;
            for (var _0x530a16 = 0x0; _0x530a16 < ui['time']['length']; _0x530a16++) _0x2d7757 += ui['time'][_0x530a16];
            document['getElementById']('stats_box_time')['innerHTML'] = _0x2d7757, document['getElementById']('stats_box_kill')['innerHTML'] = _0x5d5eb0, document['getElementById']('stats_box_score')['innerHTML'] = ui['score'];
        }
    };
    this['login_restore_data'] = function(_0x4d47b0) {
        ui['buttons'][ui['LOGIN_BUTTON']]['info']['active'] = 0x0, ui['buttons'][ui['PROFILE_BUTTON']]['info']['active'] = 0x1, ui['buttons'][ui['PROFILE_BUTTON_2']]['info']['active'] = 0x1, _0x1966f7();
        if (_0x4d47b0['name']['indexOf']('Starver#') === -0x1) document['getElementById']('account_nickname_input')['value'] = window['decodeURIComponent'](window['escape'](window['atob'](_0x4d47b0['name'])));
        else document['getElementById']('account_nickname_input')['value'] = _0x4d47b0['name'];
        ui['bread'] = _0x4d47b0['bread'];
        var _0x552794 = _0x4d47b0['seasons'],
            _0x43e204 = _0x552794[_0x552794['length'] - 0x1];
        ui['seasons'] = _0x552794, _0x455007['update_score'](_0x43e204['score']), ui['score'] = _0x43e204['score'], ui['kill'] = _0x43e204['kill'], ui['death'] = _0x43e204['death'], ui['time'] = _0x43e204['time'], ui['bestScore'] = _0x43e204['bestScore'], ui['bestKill'] = _0x43e204['bestKill'], ui['bestTime'] = _0x43e204['bestTime'], ui['scoreTotal'] = _0x43e204['scoreTotal'], ui['firstName'] = _0x4d47b0['firstName'], document['getElementById']('serverAddressInput')['value'] = 'https://starve.io/?server=' + _0x4d47b0['privateServer'];
        if (ui['firstName'] === undefined) ui['firstName'] = 0x0;
        ui['privateServerTime'] = Date['now']() + _0x4d47b0['privateServerTime'];
        if (Number(_0x4d47b0['privateServerTime']) > 0x0) ui['privateServerTime'] = Date['now']() + Number(_0x4d47b0['privateServerTime']);
        ui['kit'] = Date['now']() + _0x4d47b0['kit'];
        if (Number(_0x4d47b0['kit']) > 0x0) ui['kit'] = Date['now']() + Number(_0x4d47b0['kit']);
        var _0x363542 = COSMETICS['SKIN'];
        for (var _0x3e49b1 = 0x0; _0x3e49b1 < _0x4d47b0['skins']['length']; _0x3e49b1++) {
            var _0x18319c = _0x4d47b0['skins'][_0x3e49b1];
            if (_0x18319c > 0x0)
                for (var _0x25f183 = 0x0; _0x25f183 < _0x363542['length']; _0x25f183++) {
                    if (_0x363542[_0x25f183]['id'] === _0x3e49b1) _0x455007['unlock']['skin'][_0x25f183] = 0x1;
                }
        }
        var _0x363542 = COSMETICS['ACCESSORY'];
        for (var _0x3e49b1 = 0x0; _0x3e49b1 < _0x4d47b0['accessories']['length']; _0x3e49b1++) {
            var _0x18319c = _0x4d47b0['accessories'][_0x3e49b1];
            if (_0x18319c > 0x0)
                for (var _0x25f183 = 0x0; _0x25f183 < _0x363542['length']; _0x25f183++) {
                    if (_0x363542[_0x25f183]['id'] === _0x3e49b1) _0x455007['unlock']['accessory'][_0x25f183] = 0x1;
                }
        }
        var _0x363542 = COSMETICS['BOOK'];
        for (var _0x3e49b1 = 0x0; _0x3e49b1 < _0x4d47b0['books']['length']; _0x3e49b1++) {
            var _0x18319c = _0x4d47b0['books'][_0x3e49b1];
            if (_0x18319c > 0x0)
                for (var _0x25f183 = 0x0; _0x25f183 < _0x363542['length']; _0x25f183++) {
                    if (_0x363542[_0x25f183]['id'] === _0x3e49b1) _0x455007['unlock']['book'][_0x25f183] = 0x1;
                }
        }
        var _0x363542 = COSMETICS['BAG'];
        for (var _0x3e49b1 = 0x0; _0x3e49b1 < _0x4d47b0['bags']['length']; _0x3e49b1++) {
            var _0x18319c = _0x4d47b0['bags'][_0x3e49b1];
            if (_0x18319c > 0x0)
                for (var _0x25f183 = 0x0; _0x25f183 < _0x363542['length']; _0x25f183++) {
                    if (_0x363542[_0x25f183]['id'] === _0x3e49b1) _0x455007['unlock']['bag'][_0x25f183] = 0x1;
                }
        }
        var _0x363542 = COSMETICS['CRATE'];
        for (var _0x3e49b1 = 0x0; _0x3e49b1 < _0x4d47b0['crates']['length']; _0x3e49b1++) {
            var _0x18319c = _0x4d47b0['crates'][_0x3e49b1];
            if (_0x18319c > 0x0)
                for (var _0x25f183 = 0x0; _0x25f183 < _0x363542['length']; _0x25f183++) {
                    _0x363542[_0x25f183]['id'] === _0x3e49b1 && (_0x455007['unlock']['crate'][_0x25f183] = 0x1, _0x455007['unlock']['dead'][_0x25f183] = 0x1);
                }
        }
    }, this['login_after'] = function() {
        window['onUserLogin'] = function() {
            _0x244a54(_0x6cfa49), getUserDetails(_0x455007['login_restore_data']);
        };
        if (userAlreadyLoggedIn === 0x1) window['onUserLogin']();
    }, window['onUserLogout'] = function() {
        ui['buttons'][ui['LOGIN_BUTTON']]['info']['active'] = 0x1, ui['buttons'][ui['PROFILE_BUTTON']]['info']['active'] = 0x0, ui['buttons'][ui['PROFILE_BUTTON_2']]['info']['active'] = 0x0, _0x244a54(_0x6cfa49);
    }, this['isUserLogged'] = function() {
        return ui['buttons'][ui['PROFILE_BUTTON']]['info']['active'];
    }, this['buttons'][_0x82c94e] = gui_create_button(0x1cd, 0x69, '', [IMAGES['GET_MORE_BUTTON_OUT'], IMAGES['GET_MORE_BUTTON_IN'], IMAGES['GET_MORE_BUTTON_CLICK']], _0xc0643f, _0x244de0, function() {
        if (_0x455007['isUserLogged']()) _0x244a54(_0x3dd526);
        else _0x244a54(_0x5ee3a9);
    }, -0x64, 0x50, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x271d21, this['buttons'][_0x82c94e] = gui_create_button(0x9d, 0x9e, '', [IMAGES['TUTO_WIKI_OUT'], IMAGES['TUTO_WIKI_IN'], IMAGES['TUTO_WIKI_CLICK']], _0xc0643f, _0x244de0, function() {
        window['open']('https://starveiopro.wikia.com/wiki/', '_blank');
    }, -0x23, 0x7d, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x296115, this['buttons'][_0x82c94e] = gui_create_button(0x42, 0x49, '', [IMAGES['TUTO_PREVIOUS_OUT'], IMAGES['TUTO_PREVIOUS_IN'], IMAGES['TUTO_PREVIOUS_CLICK']], _0xc0643f, _0x244de0, undefined, -0x44, 0x154, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x296115, this['buttons'][_0x82c94e] = gui_create_button(0x42, 0x49, '', [IMAGES['TUTO_NEXT_OUT'], IMAGES['TUTO_NEXT_IN'], IMAGES['TUTO_NEXT_CLICK']], _0xc0643f, _0x244de0, undefined, -0x1e, 0x154, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x296115, this['buttons'][_0x82c94e] = gui_create_button(0x61, 0x42, '', [IMAGES['LVL_LEADERBOARD_OUT'], IMAGES['LVL_LEADERBOARD_IN'], IMAGES['LVL_LEADERBOARD_CLICK']], _0xc0643f, _0x244de0, undefined, -0xe, 0x97, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0xaa9b6f, this['LEADERBOARD_KILL'] = _0x82c94e, this['buttons'][_0x82c94e] = gui_create_button(0x87, 0x42, '', [IMAGES['KILL_LEADERBOARD_OUT'], IMAGES['KILL_LEADERBOARD_IN'], IMAGES['KILL_LEADERBOARD_CLICK']], _0xc0643f, _0x244de0, function() {
        getLeaderboard(undefined, undefined, ui['LEADERBOARD_KILL']);
    }, 37.5, 0x97, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0xaa9b6f, this['LEADERBOARD_TIME'] = _0x82c94e, this['buttons'][_0x82c94e] = gui_create_button(0xa0, 0x42, '', [IMAGES['TIME_LEADERBOARD_OUT'], IMAGES['TIME_LEADERBOARD_IN'], IMAGES['TIME_LEADERBOARD_CLICK']], _0xc0643f, _0x244de0, function() {
        getLeaderboard(undefined, undefined, ui['LEADERBOARD_TIME']);
    }, 107.5, 0x97, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0xaa9b6f, this['LEADERBOARD_SCORE'] = _0x82c94e, this['buttons'][_0x82c94e] = gui_create_button(0xcf, 0x42, '', [IMAGES['SCORE_LEADERBOARD_OUT'], IMAGES['SCORE_LEADERBOARD_IN'], IMAGES['SCORE_LEADERBOARD_CLICK']], _0xc0643f, _0x244de0, function() {
        getLeaderboard(undefined, undefined, ui['LEADERBOARD_SCORE']);
    }, 190.5, 0x97, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0xaa9b6f, this['LEADERBOARD_TODAY'] = _0x82c94e, this['buttons'][_0x82c94e] = gui_create_button(0x90, 0x42, '', [IMAGES['TODAY_LEADERBOARD_OUT'], IMAGES['TODAY_LEADERBOARD_IN'], IMAGES['TODAY_LEADERBOARD_CLICK']], _0xc0643f, _0x244de0, function() {
        getLeaderboard(ui['LEADERBOARD_TODAY']);
    }, 103.5, 0x6e, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0xaa9b6f, this['LEADERBOARD_WEEK'] = _0x82c94e, this['buttons'][_0x82c94e] = gui_create_button(0x7c, 0x42, '', [IMAGES['WEEK_LEADERBOARD_OUT'], IMAGES['WEEK_LEADERBOARD_IN'], IMAGES['WEEK_LEADERBOARD_CLICK']], _0xc0643f, _0x244de0, function() {
        getLeaderboard(ui['LEADERBOARD_WEEK']);
    }, 177.5, 0x6e, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0xaa9b6f, this['LEADERBOARD_ALL'] = _0x82c94e, this['buttons'][_0x82c94e] = gui_create_button(0x68, 0x42, '', [IMAGES['ALL_LEADERBOARD_OUT'], IMAGES['ALL_LEADERBOARD_IN'], IMAGES['ALL_LEADERBOARD_CLICK']], _0xc0643f, _0x244de0, function() {
        getLeaderboard(ui['LEADERBOARD_ALL']);
    }, 0xf2, 0x6e, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0xaa9b6f, this['LEADERBOARD_SEASON1'] = _0x82c94e, this['buttons'][_0x82c94e] = gui_create_button(0xb7, 0x42, '', [IMAGES['SEASON1_LEADERBOARD_OUT'], IMAGES['SEASON1_LEADERBOARD_IN'], IMAGES['SEASON1_LEADERBOARD_CLICK']], _0xc0643f, _0x244de0, function() {
        getLeaderboard(undefined, undefined, undefined, ui['LEADERBOARD_SEASON1']);
    }, -0x122, 0x209, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0xaa9b6f, this['LEADERBOARD_SEASON2'] = _0x82c94e, this['buttons'][_0x82c94e] = gui_create_button(0xb7, 0x42, '', [IMAGES['SEASON2_LEADERBOARD_OUT'], IMAGES['SEASON2_LEADERBOARD_IN'], IMAGES['SEASON2_LEADERBOARD_CLICK']], _0xc0643f, _0x244de0, function() {
        getLeaderboard(undefined, undefined, undefined, ui['LEADERBOARD_SEASON2']);
    }, -0xb9, 0x209, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0xaa9b6f, this['LEADERBOARD_SEASON3'] = _0x82c94e, this['buttons'][_0x82c94e] = gui_create_button(0xb7, 0x42, '', [IMAGES['SEASON3_LEADERBOARD_OUT'], IMAGES['SEASON3_LEADERBOARD_IN'], IMAGES['SEASON3_LEADERBOARD_CLICK']], _0xc0643f, _0x244de0, function() {
        getLeaderboard(undefined, undefined, undefined, ui['LEADERBOARD_SEASON3']);
    }, -0x50, 0x209, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0xaa9b6f, this['LEADERBOARD_SEASON4'] = _0x82c94e, this['buttons'][_0x82c94e] = gui_create_button(0xb7, 0x42, '', [IMAGES['SEASON4_LEADERBOARD_OUT'], IMAGES['SEASON4_LEADERBOARD_IN'], IMAGES['SEASON4_LEADERBOARD_CLICK']], _0xc0643f, _0x244de0, function() {
        getLeaderboard(undefined, undefined, undefined, ui['LEADERBOARD_SEASON4']);
    }, 0x19, 0x209, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0xaa9b6f, this['LEADERBOARD_SEASON5'] = _0x82c94e, this['buttons'][_0x82c94e] = gui_create_button(0xb7, 0x42, '', [IMAGES['SEASON5_LEADERBOARD_OUT'], IMAGES['SEASON5_LEADERBOARD_IN'], IMAGES['SEASON5_LEADERBOARD_CLICK']], _0xc0643f, _0x244de0, function() {
        getLeaderboard(undefined, undefined, undefined, ui['LEADERBOARD_SEASON5']);
    }, 0x82, 0x209, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0xaa9b6f, this['buttons'][_0x82c94e] = gui_create_button(0xe8, 0x160, '', [IMAGES['CURRENCY1_OUT'], IMAGES['CURRENCY1_IN'], IMAGES['CURRENCY1_CLICK']], _0xc0643f, _0x244de0, function() {
        openXsolla(0x12c);
    }, -0x14a, 0x87, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x3dd526, this['buttons'][_0x82c94e] = gui_create_button(0xe8, 0x160, '', [IMAGES['CURRENCY2_OUT'], IMAGES['CURRENCY2_IN'], IMAGES['CURRENCY2_CLICK']], _0xc0643f, _0x244de0, function() {
        openXsolla(0x258);
    }, -0xc3, 0x87, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x3dd526, this['buttons'][_0x82c94e] = gui_create_button(0xf3, 0x176, '', [IMAGES['CURRENCY3_OUT'], IMAGES['CURRENCY3_IN'], IMAGES['CURRENCY3_CLICK']], _0xc0643f, _0x244de0, function() {
        openXsolla(0xa28);
    }, -0x3c, 0x82, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x3dd526, this['buttons'][_0x82c94e] = gui_create_button(0xe8, 0x160, '', [IMAGES['CURRENCY4_OUT'], IMAGES['CURRENCY4_IN'], IMAGES['CURRENCY4_CLICK']], _0xc0643f, _0x244de0, function() {
        openXsolla(0x1b58);
    }, 0x4e, 0x87, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x3dd526, this['buttons'][_0x82c94e] = gui_create_button(0xf3, 0x176, '', [IMAGES['CURRENCY5_OUT'], IMAGES['CURRENCY5_IN'], IMAGES['CURRENCY5_CLICK']], _0xc0643f, _0x244de0, function() {
        openXsolla(0x4e20);
    }, 0xd5, 0x82, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x3dd526, this['buttons'][_0x82c94e] = gui_create_button(0x3a, 0x40, '', [IMAGES['CLOSE_BUTTON_OUT'], IMAGES['CLOSE_BUTTON_IN'], IMAGES['CLOSE_BUTTON_CLICK']], _0xc0643f, _0x244de0, function() {
        _0x244a54(_0x271d21);
    }, 0x12c, 0x58, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x3dd526, this['buttons'][_0x82c94e] = gui_create_button(0x143, 0x70, '', [IMAGES['SKIN_BUTTON_OUT'], IMAGES['SKIN_BUTTON_IN'], IMAGES['SKIN_BUTTON_CLICK']], _0xc0643f, _0x244de0, function() {
        _0x244a54(_0x4dd4a2), _0x214e3c['initSelector']();
    }, -0x13b, 0xb9, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x593e2a, this['buttons'][_0x82c94e] = gui_create_button(0x143, 0x70, '', [IMAGES['ACCESSORY_BUTTON_OUT'], IMAGES['ACCESSORY_BUTTON_IN'], IMAGES['ACCESSORY_BUTTON_CLICK']], _0xc0643f, _0x244de0, function() {
        _0x244a54(_0x373ea5), _0x2d48d3['initSelector']();
    }, -0x13b, 0x141, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x593e2a, this['buttons'][_0x82c94e] = gui_create_button(0x143, 0x70, '', [IMAGES['BAG_BUTTON_OUT'], IMAGES['BAG_BUTTON_IN'], IMAGES['BAG_BUTTON_CLICK']], _0xc0643f, _0x244de0, function() {
        _0x244a54(_0x573e07), _0x405a16['initSelector']();
    }, 0x99, 0xb9, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x593e2a, this['buttons'][_0x82c94e] = gui_create_button(0x143, 0x70, '', [IMAGES['BOOK_BUTTON_OUT'], IMAGES['BOOK_BUTTON_IN'], IMAGES['BOOK_BUTTON_CLICK']], _0xc0643f, _0x244de0, function() {
        _0x244a54(_0x5c343f), _0x27580e['initSelector']();
    }, 0x99, 0x141, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x593e2a, this['buttons'][_0x82c94e] = gui_create_button(0x143, 0x70, '', [IMAGES['CRATE_BUTTON_OUT'], IMAGES['CRATE_BUTTON_IN'], IMAGES['CRATE_BUTTON_CLICK']], _0xc0643f, _0x244de0, function() {
        _0x244a54(_0x46f518), _0x2114d1['initSelector']();
    }, 0x99, 0x1cf, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x593e2a, this['buttons'][_0x82c94e] = gui_create_button(0x143, 0x70, '', [IMAGES['LOOT_BUTTON_OUT'], IMAGES['LOOT_BUTTON_IN'], IMAGES['LOOT_BUTTON_CLICK']], _0xc0643f, _0x244de0, function() {
        _0x244a54(_0x27e67f), _0x6e488d['initSelector']();
    }, -0x13b, 0x1cf, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x593e2a, this['buttons'][_0x82c94e] = gui_create_button(0x147, 0x75, '', [IMAGES['SEASON_5'], IMAGES['SEASON_5_IN'], IMAGES['SEASON_5_OUT']], _0xc0643f, _0x244de0, function() {
        _0x244a54(_0x15f891);
    }, 0x9b, 0x46, _0x3ab459, _0x2e6e44), this['buttons'][_0x82c94e++]['view'] = _0x6cfa49, this['buttons'][_0x82c94e] = gui_create_button(0x82, 0x81, '', [IMAGES['SHOP_BUTTON_OUT'], IMAGES['SHOP_BUTTON_IN'], IMAGES['SHOP_BUTTON_CLICK']], _0xc0643f, _0x244de0, function() {
        _0x411042(_0x2c814f, _0x24917c, 'none'), _0x244a54(_0x271d21);
    }, 0xa, 0x28, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x2c814f, this['buttons'][_0x82c94e] = gui_create_button(0x82, 0x81, '', [IMAGES['SHOP_BUTTON_OUT'], IMAGES['SHOP_BUTTON_IN'], IMAGES['SHOP_BUTTON_CLICK']], _0xc0643f, _0x244de0, function() {
        _0x411042(_0x352c76, _0x24917c, 'none'), _0x244a54(_0x271d21);
    }, 0xa, 0x28, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x352c76, this['buttons'][_0x82c94e] = gui_create_button(0x73, 0x49, '', [IMAGES['BACK_BUTTON_OUT'], IMAGES['BACK_BUTTON_IN'], IMAGES['BACK_BUTTON_CLICK']], _0xc0643f, _0x244de0, function() {
        _0x244a54(_0x271d21);
    }, 0xc8, 0x8c, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x2d1ff7, this['buttons'][_0x82c94e] = gui_create_button(0xfd, 0x6e, '', [IMAGES['ATLANTA_OUT'], IMAGES['ATLANTA_IN'], IMAGES['ATLANTA_CLICK']], _0xc0643f, _0x244de0, function() {
        regionPreference('Atlanta');
    }, -0x109, 0x12c, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x2d1ff7, this['buttons'][_0x82c94e] = gui_create_button(0xfd, 0x6e, '', [IMAGES['DALLAS_OUT'], IMAGES['DALLAS_IN'], IMAGES['DALLAS_CLICK']], _0xc0643f, _0x244de0, function() {
        regionPreference('Dallas');
    }, -0x82, 0x12c, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x2d1ff7, this['buttons'][_0x82c94e] = gui_create_button(0xfd, 0x6e, '', [IMAGES['FREMONT_OUT'], IMAGES['FREMONT_IN'], IMAGES['FREMONT_CLICK']], _0xc0643f, _0x244de0, function() {
        regionPreference('Fremont');
    }, 0x5, 0x12c, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x2d1ff7, this['buttons'][_0x82c94e] = gui_create_button(0xfd, 0x6e, '', [IMAGES['NEWARK_OUT'], IMAGES['NEWARK_IN'], IMAGES['NEWARK_CLICK']], _0xc0643f, _0x244de0, function() {
        regionPreference('Newark');
    }, 0x8c, 0x12c, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x2d1ff7, this['buttons'][_0x82c94e] = gui_create_button(0xfd, 0x6e, '', [IMAGES['LONDON_OUT'], IMAGES['LONDON_IN'], IMAGES['LONDON_CLICK']], _0xc0643f, _0x244de0, function() {
        regionPreference('London');
    }, -0x109, 0x16d, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x2d1ff7, this['buttons'][_0x82c94e] = gui_create_button(0xfd, 0x6e, '', [IMAGES['FRANKFURT_OUT'], IMAGES['FRANKFURT_IN'], IMAGES['FRANKFURT_CLICK']], _0xc0643f, _0x244de0, function() {
        regionPreference('Frankfurt');
    }, -0x82, 0x16d, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x2d1ff7, this['buttons'][_0x82c94e] = gui_create_button(0xfd, 0x6e, '', [IMAGES['SINGAPORE_OUT'], IMAGES['SINGAPORE_IN'], IMAGES['SINGAPORE_CLICK']], _0xc0643f, _0x244de0, function() {
        regionPreference('Singapore');
    }, 0x5, 0x16d, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x2d1ff7, this['buttons'][_0x82c94e] = gui_create_button(0xfd, 0x6e, '', [IMAGES['TOKYO_OUT'], IMAGES['TOKYO_IN'], IMAGES['TOKYO_CLICK']], _0xc0643f, _0x244de0, function() {
        regionPreference('Tokyo');
    }, 0x8c, 0x16d, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x2d1ff7, this['buttons'][_0x82c94e] = gui_create_button(0xfd, 0x6e, '', [IMAGES['TORONTO_OUT'], IMAGES['TORONTO_IN'], IMAGES['TORONTO_CLICK']], _0xc0643f, _0x244de0, function() {
        regionPreference('Toronto');
    }, -0x109, 0x1ae, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x2d1ff7, this['buttons'][_0x82c94e] = gui_create_button(0xfd, 0x6e, '', [IMAGES['MUMBAI_OUT'], IMAGES['MUMBAI_IN'], IMAGES['MUMBAI_CLICK']], _0xc0643f, _0x244de0, function() {
        regionPreference('Mumbai');
    }, -0x82, 0x1ae, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x2d1ff7, this['buttons'][_0x82c94e] = gui_create_button(0x73, 0x49, '', [IMAGES['BACK_BUTTON_OUT'], IMAGES['BACK_BUTTON_IN'], IMAGES['BACK_BUTTON_CLICK']], _0xc0643f, _0x244de0, function() {
        _0x244a54(_0x2d1ff7);
    }, 0xe6, 0x8c, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x318405, this['buttons'][_0x82c94e] = gui_create_button(0xe6, 0x160, '', [IMAGES['DAYS3_OUT'], IMAGES['DAYS3_IN'], IMAGES['DAYS3_CLICK']], _0xc0643f, _0x244de0, function() {
        openXsolla(0x15e);
    }, -0x118, 0xf0, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x318405, this['buttons'][_0x82c94e] = gui_create_button(0xe6, 0x160, '', [IMAGES['DAYS7_OUT'], IMAGES['DAYS7_IN'], IMAGES['DAYS7_CLICK']], _0xc0643f, _0x244de0, function() {
        openXsolla(0x2bc);
    }, -0x82, 0xf0, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x318405, this['buttons'][_0x82c94e] = gui_create_button(0xe6, 0x160, '', [IMAGES['DAYS30_OUT'], IMAGES['DAYS30_IN'], IMAGES['DAYS30_CLICK']], _0xc0643f, _0x244de0, function() {
        openXsolla(0x578);
    }, 0x14, 0xf0, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x318405, this['buttons'][_0x82c94e] = gui_create_button(0xe6, 0x160, '', [IMAGES['DAYS90_OUT'], IMAGES['DAYS90_IN'], IMAGES['DAYS90_CLICK']], _0xc0643f, _0x244de0, function() {
        openXsolla(0xbb8);
    }, 0xaa, 0xf0, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x318405, this['buttons'][_0x82c94e] = gui_create_button(0x69, 0x77, '', [IMAGES['COPY_PASTE_OUT'], IMAGES['COPY_PASTE_IN'], IMAGES['COPY_PASTE_CLICK']], _0xc0643f, _0x244de0, function() {
        document['getElementById']('serverAddressInput')['select'](), document['execCommand']('copy');
    }, 0xaa, 0x136, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x3af4b8, this['buttons'][_0x82c94e] = gui_create_button(0x69, 0x77, '', [IMAGES['RESTART_OUT'], IMAGES['RESTART_IN'], IMAGES['RESTART_CLICK']], _0xc0643f, _0x244de0, function() {
        rebootServer();
    }, 0xeb, 0x136, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x3af4b8, this['buttons'][_0x82c94e] = gui_create_button(0xcc, 0x73, '', [IMAGES['GUIDE_OUT'], IMAGES['GUIDE_IN'], IMAGES['GUIDE_CLICK']], _0xc0643f, _0x244de0, function() {
        window['open']('./commands.html', '_blank');
    }, -0x109, 0x1ea, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x3af4b8, this['buttons'][_0x82c94e] = gui_create_button(0x91, 0x45, '', [IMAGES['PRICE5_OUT'], IMAGES['PRICE5_IN'], IMAGES['PRICE5_CLICK']], _0xc0643f, _0x244de0, function() {
        _0x244a54(_0x2c587c);
    }, -0xd2, 0xaa, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x271d21, this['buttons'][_0x82c94e] = gui_create_button(0x91, 0x45, '', [IMAGES['PRICE1_OUT'], IMAGES['PRICE1_IN'], IMAGES['PRICE1_CLICK']], _0xc0643f, _0x244de0, function() {
        _0x244a54(_0x4079e2);
    }, 0x46, 0xaa, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x271d21, this['buttons'][_0x82c94e] = gui_create_button(0x91, 0x45, '', [IMAGES['PRICE2_OUT'], IMAGES['PRICE2_IN'], IMAGES['PRICE2_CLICK']], _0xc0643f, _0x244de0, function() {
        _0x244a54(_0x56ac79);
    }, 0x46, 0xcc, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x271d21, this['buttons'][_0x82c94e] = gui_create_button(0x91, 0x45, '', [IMAGES['PRICE3_OUT'], IMAGES['PRICE3_IN'], IMAGES['PRICE3_CLICK']], _0xc0643f, _0x244de0, function() {
        _0x244a54(_0x38e1d9);
    }, -0xd2, 0xcc, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x271d21, this['buttons'][_0x82c94e] = gui_create_button(0x91, 0x45, '', [IMAGES['PRICE3_OUT'], IMAGES['PRICE3_IN'], IMAGES['PRICE3_CLICK']], _0xc0643f, _0x244de0, function() {
        _0x244a54(_0x3ac679);
    }, 0x46, 0xee, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x271d21, this['buttons'][_0x82c94e] = gui_create_button(0x91, 0x45, '', [IMAGES['PRICE3_OUT'], IMAGES['PRICE3_IN'], IMAGES['PRICE3_CLICK']], _0xc0643f, _0x244de0, function() {
        if (_0x455007['isUserLogged']()) buyKit(0x0, 0x12c);
        else _0x244a54(_0x5ee3a9);
    }, 0x133, 0xcd, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x271d21, this['buttons'][_0x82c94e] = gui_create_button(0x91, 0x45, '', [IMAGES['PRICE4_OUT'], IMAGES['PRICE4_IN'], IMAGES['PRICE4_CLICK']], _0xc0643f, _0x244de0, function() {
        _0x244a54(_0x56210c);
    }, -0xd2, 0xee, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x271d21, this['buttons'][_0x82c94e] = gui_create_button(0x91, 0x45, '', [IMAGES['PRICE4_OUT'], IMAGES['PRICE4_IN'], IMAGES['PRICE4_CLICK']], _0xc0643f, _0x244de0, function() {
        if (_0x455007['isUserLogged']()) buyKit(0x1, 0x258);
        else _0x244a54(_0x5ee3a9);
    }, 0x133, 0xef, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x271d21, this['buttons'][_0x82c94e] = gui_create_button(0xc0, 0x65, '', [IMAGES['YES_BUTTON_OUT'], IMAGES['YES_BUTTON_IN'], IMAGES['YES_BUTTON_CLICK']], _0xc0643f, _0x244de0, function() {
        buyNameChanger();
    }, -0x64, 0xfa, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x43d6a2, this['buttons'][_0x82c94e] = gui_create_button(0xc0, 0x68, '', [IMAGES['YES_300_BUTTON_OUT'], IMAGES['YES_300_BUTTON_IN'], IMAGES['YES_300_BUTTON_CLICK']], _0xc0643f, _0x244de0, function() {
        buyNameChanger();
    }, -0x64, 0xef, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x342d09, this['buttons'][_0x82c94e] = gui_create_button(0xc0, 0x65, '', [IMAGES['NO_BUTTON_OUT'], IMAGES['NO_BUTTON_IN'], IMAGES['NO_BUTTON_CLICK']], _0xc0643f, _0x244de0, function() {
        _0x244a54(_0x4f2e13);
    }, 0xa, 0xfa, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x43d6a2, this['buttons'][_0x82c94e] = gui_create_button(0xc0, 0x68, '', [IMAGES['NO_THANKS_BUTTON_OUT'], IMAGES['NO_THANKS_BUTTON_IN'], IMAGES['NO_THANKS_BUTTON_CLICK']], _0xc0643f, _0x244de0, function() {
        _0x244a54(_0x4f2e13);
    }, 0xa, 0xef, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x342d09, RARITY_BUTTON = [], RARITY_BUTTON[RARITY['FREE']] = [IMAGES['FREE_ITEM_OUT'], IMAGES['FREE_ITEM_IN'], IMAGES['FREE_ITEM_CLICK']], RARITY_BUTTON[RARITY['WOOD']] = [IMAGES['WOOD_ITEM_OUT'], IMAGES['WOOD_ITEM_IN'], IMAGES['WOOD_ITEM_CLICK']], RARITY_BUTTON[RARITY['STONE']] = [IMAGES['STONE_ITEM_OUT'], IMAGES['STONE_ITEM_IN'], IMAGES['STONE_ITEM_CLICK']], RARITY_BUTTON[RARITY['GOLD']] = [IMAGES['GOLD_ITEM_OUT'], IMAGES['GOLD_ITEM_IN'], IMAGES['GOLD_ITEM_CLICK']], RARITY_BUTTON[RARITY['DIAMOND']] = [IMAGES['DIAMOND_ITEM_OUT'], IMAGES['DIAMOND_ITEM_IN'], IMAGES['DIAMOND_ITEM_CLICK']], RARITY_BUTTON[RARITY['AMETHYST']] = [IMAGES['AMETHYST_ITEM_OUT'], IMAGES['AMETHYST_ITEM_IN'], IMAGES['AMETHYST_ITEM_CLICK']], RARITY_BUTTON[RARITY['REIDITE']] = [IMAGES['REIDITE_ITEM_OUT'], IMAGES['REIDITE_ITEM_IN'], IMAGES['REIDITE_ITEM_CLICK']], RARITY_BUTTON[RARITY['LEVEL']] = [IMAGES['LEVEL_ITEM_OUT'], IMAGES['LEVEL_ITEM_IN'], IMAGES['LEVEL_ITEM_CLICK']], RARITY_BUTTON[RARITY['SPECIAL']] = [IMAGES['SPECIAL_ITEM_OUT'], IMAGES['SPECIAL_ITEM_IN'], IMAGES['SPECIAL_ITEM_CLICK']], FIRST_BUTTON_SKIN = _0x82c94e, this['buttons'][_0x82c94e] = gui_create_button(0xb2, 0xb6, '', [IMAGES['WOOD_ITEM_OUT'], IMAGES['WOOD_ITEM_IN'], IMAGES['WOOD_ITEM_CLICK']], _0xc0643f, _0x244de0, undefined, -0x1d, 0xcd, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x4dd4a2, this['buttons'][_0x82c94e] = gui_create_button(0xb2, 0xb6, '', [IMAGES['WOOD_ITEM_OUT'], IMAGES['WOOD_ITEM_IN'], IMAGES['WOOD_ITEM_CLICK']], _0xc0643f, _0x244de0, undefined, -0x1d, 0x12c, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x4dd4a2, this['buttons'][_0x82c94e] = gui_create_button(0xb2, 0xb6, '', [IMAGES['WOOD_ITEM_OUT'], IMAGES['WOOD_ITEM_IN'], IMAGES['WOOD_ITEM_CLICK']], _0xc0643f, _0x244de0, undefined, -0x1d, 0x18b, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x4dd4a2, this['buttons'][_0x82c94e] = gui_create_button(0xb2, 0xb6, '', [IMAGES['WOOD_ITEM_OUT'], IMAGES['WOOD_ITEM_IN'], IMAGES['WOOD_ITEM_CLICK']], _0xc0643f, _0x244de0, undefined, 0x41, 0xcd, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x4dd4a2, this['buttons'][_0x82c94e] = gui_create_button(0xb2, 0xb6, '', [IMAGES['WOOD_ITEM_OUT'], IMAGES['WOOD_ITEM_IN'], IMAGES['WOOD_ITEM_CLICK']], _0xc0643f, _0x244de0, undefined, 0x41, 0x12c, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x4dd4a2, this['buttons'][_0x82c94e] = gui_create_button(0xb2, 0xb6, '', [IMAGES['WOOD_ITEM_OUT'], IMAGES['WOOD_ITEM_IN'], IMAGES['WOOD_ITEM_CLICK']], _0xc0643f, _0x244de0, undefined, 0x41, 0x18b, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x4dd4a2, this['buttons'][_0x82c94e] = gui_create_button(0xb2, 0xb6, '', [IMAGES['WOOD_ITEM_OUT'], IMAGES['WOOD_ITEM_IN'], IMAGES['WOOD_ITEM_CLICK']], _0xc0643f, _0x244de0, undefined, 0x9f, 0xcd, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x4dd4a2, this['buttons'][_0x82c94e] = gui_create_button(0xb2, 0xb6, '', [IMAGES['WOOD_ITEM_OUT'], IMAGES['WOOD_ITEM_IN'], IMAGES['WOOD_ITEM_CLICK']], _0xc0643f, _0x244de0, undefined, 0x9f, 0x12c, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x4dd4a2, this['buttons'][_0x82c94e] = gui_create_button(0xb2, 0xb6, '', [IMAGES['WOOD_ITEM_OUT'], IMAGES['WOOD_ITEM_IN'], IMAGES['WOOD_ITEM_CLICK']], _0xc0643f, _0x244de0, undefined, 0x9f, 0x18b, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x4dd4a2, this['buttons'][_0x82c94e] = gui_create_button(0x27, 0x7a, '', [IMAGES['SKIN_PREVIOUS_OUT'], IMAGES['SKIN_PREVIOUS_IN'], IMAGES['SKIN_PREVIOUS_CLICK']], _0xc0643f, _0x244de0, undefined, -0x3d, 0x13b, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x4dd4a2, this['buttons'][_0x82c94e] = gui_create_button(0x27, 0x7a, '', [IMAGES['SKIN_NEXT_OUT'], IMAGES['SKIN_NEXT_IN'], IMAGES['SKIN_NEXT_CLICK']], _0xc0643f, _0x244de0, undefined, 0x104, 0x13b, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x4dd4a2, this['buttons'][_0x82c94e] = gui_create_button(0x73, 0x49, '', [IMAGES['BACK_BUTTON_OUT'], IMAGES['BACK_BUTTON_IN'], IMAGES['BACK_BUTTON_CLICK']], _0xc0643f, _0x244de0, function() {
        _0x244a54(_0x593e2a);
    }, -0x140, 0x1d6, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x4dd4a2, FIRST_BUTTON_ACCESSORY = _0x82c94e, this['buttons'][_0x82c94e] = gui_create_button(0xb2, 0xb6, '', [IMAGES['WOOD_ITEM_OUT'], IMAGES['WOOD_ITEM_IN'], IMAGES['WOOD_ITEM_CLICK']], _0xc0643f, _0x244de0, undefined, -0x1d, 0xcd, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x373ea5, this['buttons'][_0x82c94e] = gui_create_button(0xb2, 0xb6, '', [IMAGES['WOOD_ITEM_OUT'], IMAGES['WOOD_ITEM_IN'], IMAGES['WOOD_ITEM_CLICK']], _0xc0643f, _0x244de0, undefined, -0x1d, 0x12c, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x373ea5, this['buttons'][_0x82c94e] = gui_create_button(0xb2, 0xb6, '', [IMAGES['WOOD_ITEM_OUT'], IMAGES['WOOD_ITEM_IN'], IMAGES['WOOD_ITEM_CLICK']], _0xc0643f, _0x244de0, undefined, -0x1d, 0x18b, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x373ea5, this['buttons'][_0x82c94e] = gui_create_button(0xb2, 0xb6, '', [IMAGES['WOOD_ITEM_OUT'], IMAGES['WOOD_ITEM_IN'], IMAGES['WOOD_ITEM_CLICK']], _0xc0643f, _0x244de0, undefined, 0x41, 0xcd, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x373ea5, this['buttons'][_0x82c94e] = gui_create_button(0xb2, 0xb6, '', [IMAGES['WOOD_ITEM_OUT'], IMAGES['WOOD_ITEM_IN'], IMAGES['WOOD_ITEM_CLICK']], _0xc0643f, _0x244de0, undefined, 0x41, 0x12c, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x373ea5, this['buttons'][_0x82c94e] = gui_create_button(0xb2, 0xb6, '', [IMAGES['WOOD_ITEM_OUT'], IMAGES['WOOD_ITEM_IN'], IMAGES['WOOD_ITEM_CLICK']], _0xc0643f, _0x244de0, undefined, 0x41, 0x18b, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x373ea5, this['buttons'][_0x82c94e] = gui_create_button(0xb2, 0xb6, '', [IMAGES['WOOD_ITEM_OUT'], IMAGES['WOOD_ITEM_IN'], IMAGES['WOOD_ITEM_CLICK']], _0xc0643f, _0x244de0, undefined, 0x9f, 0xcd, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x373ea5, this['buttons'][_0x82c94e] = gui_create_button(0xb2, 0xb6, '', [IMAGES['WOOD_ITEM_OUT'], IMAGES['WOOD_ITEM_IN'], IMAGES['WOOD_ITEM_CLICK']], _0xc0643f, _0x244de0, undefined, 0x9f, 0x12c, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x373ea5, this['buttons'][_0x82c94e] = gui_create_button(0xb2, 0xb6, '', [IMAGES['WOOD_ITEM_OUT'], IMAGES['WOOD_ITEM_IN'], IMAGES['WOOD_ITEM_CLICK']], _0xc0643f, _0x244de0, undefined, 0x9f, 0x18b, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x373ea5, this['buttons'][_0x82c94e] = gui_create_button(0x27, 0x7a, '', [IMAGES['SKIN_PREVIOUS_OUT'], IMAGES['SKIN_PREVIOUS_IN'], IMAGES['SKIN_PREVIOUS_CLICK']], _0xc0643f, _0x244de0, undefined, -0x3d, 0x13b, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x373ea5, this['buttons'][_0x82c94e] = gui_create_button(0x27, 0x7a, '', [IMAGES['SKIN_NEXT_OUT'], IMAGES['SKIN_NEXT_IN'], IMAGES['SKIN_NEXT_CLICK']], _0xc0643f, _0x244de0, undefined, 0x104, 0x13b, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x373ea5, this['buttons'][_0x82c94e] = gui_create_button(0x73, 0x49, '', [IMAGES['BACK_BUTTON_OUT'], IMAGES['BACK_BUTTON_IN'], IMAGES['BACK_BUTTON_CLICK']], _0xc0643f, _0x244de0, function() {
        _0x244a54(_0x593e2a);
    }, -0x140, 0x1d6, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x373ea5, FIRST_BUTTON_LOOT = _0x82c94e, this['buttons'][_0x82c94e] = gui_create_button(0xb2, 0xb6, '', [IMAGES['WOOD_ITEM_OUT'], IMAGES['WOOD_ITEM_IN'], IMAGES['WOOD_ITEM_CLICK']], _0xc0643f, _0x244de0, undefined, -0x1d, 0xcd, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x27e67f, this['buttons'][_0x82c94e] = gui_create_button(0xb2, 0xb6, '', [IMAGES['WOOD_ITEM_OUT'], IMAGES['WOOD_ITEM_IN'], IMAGES['WOOD_ITEM_CLICK']], _0xc0643f, _0x244de0, undefined, -0x1d, 0x12c, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x27e67f, this['buttons'][_0x82c94e] = gui_create_button(0xb2, 0xb6, '', [IMAGES['WOOD_ITEM_OUT'], IMAGES['WOOD_ITEM_IN'], IMAGES['WOOD_ITEM_CLICK']], _0xc0643f, _0x244de0, undefined, -0x1d, 0x18b, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x27e67f, this['buttons'][_0x82c94e] = gui_create_button(0xb2, 0xb6, '', [IMAGES['WOOD_ITEM_OUT'], IMAGES['WOOD_ITEM_IN'], IMAGES['WOOD_ITEM_CLICK']], _0xc0643f, _0x244de0, undefined, 0x41, 0xcd, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x27e67f, this['buttons'][_0x82c94e] = gui_create_button(0xb2, 0xb6, '', [IMAGES['WOOD_ITEM_OUT'], IMAGES['WOOD_ITEM_IN'], IMAGES['WOOD_ITEM_CLICK']], _0xc0643f, _0x244de0, undefined, 0x41, 0x12c, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x27e67f, this['buttons'][_0x82c94e] = gui_create_button(0xb2, 0xb6, '', [IMAGES['WOOD_ITEM_OUT'], IMAGES['WOOD_ITEM_IN'], IMAGES['WOOD_ITEM_CLICK']], _0xc0643f, _0x244de0, undefined, 0x41, 0x18b, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x27e67f, this['buttons'][_0x82c94e] = gui_create_button(0xb2, 0xb6, '', [IMAGES['WOOD_ITEM_OUT'], IMAGES['WOOD_ITEM_IN'], IMAGES['WOOD_ITEM_CLICK']], _0xc0643f, _0x244de0, undefined, 0x9f, 0xcd, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x27e67f, this['buttons'][_0x82c94e] = gui_create_button(0xb2, 0xb6, '', [IMAGES['WOOD_ITEM_OUT'], IMAGES['WOOD_ITEM_IN'], IMAGES['WOOD_ITEM_CLICK']], _0xc0643f, _0x244de0, undefined, 0x9f, 0x12c, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x27e67f, this['buttons'][_0x82c94e] = gui_create_button(0xb2, 0xb6, '', [IMAGES['WOOD_ITEM_OUT'], IMAGES['WOOD_ITEM_IN'], IMAGES['WOOD_ITEM_CLICK']], _0xc0643f, _0x244de0, undefined, 0x9f, 0x18b, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x27e67f, this['buttons'][_0x82c94e] = gui_create_button(0x27, 0x7a, '', [IMAGES['SKIN_PREVIOUS_OUT'], IMAGES['SKIN_PREVIOUS_IN'], IMAGES['SKIN_PREVIOUS_CLICK']], _0xc0643f, _0x244de0, undefined, -0x3d, 0x13b, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x27e67f, this['buttons'][_0x82c94e] = gui_create_button(0x27, 0x7a, '', [IMAGES['SKIN_NEXT_OUT'], IMAGES['SKIN_NEXT_IN'], IMAGES['SKIN_NEXT_CLICK']], _0xc0643f, _0x244de0, undefined, 0x104, 0x13b, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x27e67f, this['buttons'][_0x82c94e] = gui_create_button(0x73, 0x49, '', [IMAGES['BACK_BUTTON_OUT'], IMAGES['BACK_BUTTON_IN'], IMAGES['BACK_BUTTON_CLICK']], _0xc0643f, _0x244de0, function() {
        _0x244a54(_0x593e2a);
    }, -0x140, 0x1d6, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x27e67f, FIRST_BUTTON_BAG = _0x82c94e, this['buttons'][_0x82c94e] = gui_create_button(0xb2, 0xb6, '', [IMAGES['WOOD_ITEM_OUT'], IMAGES['WOOD_ITEM_IN'], IMAGES['WOOD_ITEM_CLICK']], _0xc0643f, _0x244de0, undefined, -0x1d, 0xcd, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x573e07, this['buttons'][_0x82c94e] = gui_create_button(0xb2, 0xb6, '', [IMAGES['WOOD_ITEM_OUT'], IMAGES['WOOD_ITEM_IN'], IMAGES['WOOD_ITEM_CLICK']], _0xc0643f, _0x244de0, undefined, -0x1d, 0x12c, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x573e07, this['buttons'][_0x82c94e] = gui_create_button(0xb2, 0xb6, '', [IMAGES['WOOD_ITEM_OUT'], IMAGES['WOOD_ITEM_IN'], IMAGES['WOOD_ITEM_CLICK']], _0xc0643f, _0x244de0, undefined, -0x1d, 0x18b, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x573e07, this['buttons'][_0x82c94e] = gui_create_button(0xb2, 0xb6, '', [IMAGES['WOOD_ITEM_OUT'], IMAGES['WOOD_ITEM_IN'], IMAGES['WOOD_ITEM_CLICK']], _0xc0643f, _0x244de0, undefined, 0x41, 0xcd, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x573e07, this['buttons'][_0x82c94e] = gui_create_button(0xb2, 0xb6, '', [IMAGES['WOOD_ITEM_OUT'], IMAGES['WOOD_ITEM_IN'], IMAGES['WOOD_ITEM_CLICK']], _0xc0643f, _0x244de0, undefined, 0x41, 0x12c, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x573e07, this['buttons'][_0x82c94e] = gui_create_button(0xb2, 0xb6, '', [IMAGES['WOOD_ITEM_OUT'], IMAGES['WOOD_ITEM_IN'], IMAGES['WOOD_ITEM_CLICK']], _0xc0643f, _0x244de0, undefined, 0x41, 0x18b, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x573e07, this['buttons'][_0x82c94e] = gui_create_button(0xb2, 0xb6, '', [IMAGES['WOOD_ITEM_OUT'], IMAGES['WOOD_ITEM_IN'], IMAGES['WOOD_ITEM_CLICK']], _0xc0643f, _0x244de0, undefined, 0x9f, 0xcd, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x573e07, this['buttons'][_0x82c94e] = gui_create_button(0xb2, 0xb6, '', [IMAGES['WOOD_ITEM_OUT'], IMAGES['WOOD_ITEM_IN'], IMAGES['WOOD_ITEM_CLICK']], _0xc0643f, _0x244de0, undefined, 0x9f, 0x12c, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x573e07, this['buttons'][_0x82c94e] = gui_create_button(0xb2, 0xb6, '', [IMAGES['WOOD_ITEM_OUT'], IMAGES['WOOD_ITEM_IN'], IMAGES['WOOD_ITEM_CLICK']], _0xc0643f, _0x244de0, undefined, 0x9f, 0x18b, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x573e07, this['buttons'][_0x82c94e] = gui_create_button(0x27, 0x7a, '', [IMAGES['SKIN_PREVIOUS_OUT'], IMAGES['SKIN_PREVIOUS_IN'], IMAGES['SKIN_PREVIOUS_CLICK']], _0xc0643f, _0x244de0, undefined, -0x3d, 0x13b, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x573e07, this['buttons'][_0x82c94e] = gui_create_button(0x27, 0x7a, '', [IMAGES['SKIN_NEXT_OUT'], IMAGES['SKIN_NEXT_IN'], IMAGES['SKIN_NEXT_CLICK']], _0xc0643f, _0x244de0, undefined, 0x104, 0x13b, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x573e07, this['buttons'][_0x82c94e] = gui_create_button(0x73, 0x49, '', [IMAGES['BACK_BUTTON_OUT'], IMAGES['BACK_BUTTON_IN'], IMAGES['BACK_BUTTON_CLICK']], _0xc0643f, _0x244de0, function() {
        _0x244a54(_0x593e2a);
    }, -0x140, 0x1d6, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x573e07, FIRST_BUTTON_BOOK = _0x82c94e, this['buttons'][_0x82c94e] = gui_create_button(0xb2, 0xb6, '', [IMAGES['WOOD_ITEM_OUT'], IMAGES['WOOD_ITEM_IN'], IMAGES['WOOD_ITEM_CLICK']], _0xc0643f, _0x244de0, undefined, -0x1d, 0xcd, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x5c343f, this['buttons'][_0x82c94e] = gui_create_button(0xb2, 0xb6, '', [IMAGES['WOOD_ITEM_OUT'], IMAGES['WOOD_ITEM_IN'], IMAGES['WOOD_ITEM_CLICK']], _0xc0643f, _0x244de0, undefined, -0x1d, 0x12c, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x5c343f, this['buttons'][_0x82c94e] = gui_create_button(0xb2, 0xb6, '', [IMAGES['WOOD_ITEM_OUT'], IMAGES['WOOD_ITEM_IN'], IMAGES['WOOD_ITEM_CLICK']], _0xc0643f, _0x244de0, undefined, -0x1d, 0x18b, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x5c343f, this['buttons'][_0x82c94e] = gui_create_button(0xb2, 0xb6, '', [IMAGES['WOOD_ITEM_OUT'], IMAGES['WOOD_ITEM_IN'], IMAGES['WOOD_ITEM_CLICK']], _0xc0643f, _0x244de0, undefined, 0x41, 0xcd, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x5c343f, this['buttons'][_0x82c94e] = gui_create_button(0xb2, 0xb6, '', [IMAGES['WOOD_ITEM_OUT'], IMAGES['WOOD_ITEM_IN'], IMAGES['WOOD_ITEM_CLICK']], _0xc0643f, _0x244de0, undefined, 0x41, 0x12c, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x5c343f, this['buttons'][_0x82c94e] = gui_create_button(0xb2, 0xb6, '', [IMAGES['WOOD_ITEM_OUT'], IMAGES['WOOD_ITEM_IN'], IMAGES['WOOD_ITEM_CLICK']], _0xc0643f, _0x244de0, undefined, 0x41, 0x18b, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x5c343f, this['buttons'][_0x82c94e] = gui_create_button(0xb2, 0xb6, '', [IMAGES['WOOD_ITEM_OUT'], IMAGES['WOOD_ITEM_IN'], IMAGES['WOOD_ITEM_CLICK']], _0xc0643f, _0x244de0, undefined, 0x9f, 0xcd, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x5c343f, this['buttons'][_0x82c94e] = gui_create_button(0xb2, 0xb6, '', [IMAGES['WOOD_ITEM_OUT'], IMAGES['WOOD_ITEM_IN'], IMAGES['WOOD_ITEM_CLICK']], _0xc0643f, _0x244de0, undefined, 0x9f, 0x12c, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x5c343f, this['buttons'][_0x82c94e] = gui_create_button(0xb2, 0xb6, '', [IMAGES['WOOD_ITEM_OUT'], IMAGES['WOOD_ITEM_IN'], IMAGES['WOOD_ITEM_CLICK']], _0xc0643f, _0x244de0, undefined, 0x9f, 0x18b, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x5c343f, this['buttons'][_0x82c94e] = gui_create_button(0x27, 0x7a, '', [IMAGES['SKIN_PREVIOUS_OUT'], IMAGES['SKIN_PREVIOUS_IN'], IMAGES['SKIN_PREVIOUS_CLICK']], _0xc0643f, _0x244de0, undefined, -0x3d, 0x13b, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x5c343f, this['buttons'][_0x82c94e] = gui_create_button(0x27, 0x7a, '', [IMAGES['SKIN_NEXT_OUT'], IMAGES['SKIN_NEXT_IN'], IMAGES['SKIN_NEXT_CLICK']], _0xc0643f, _0x244de0, undefined, 0x104, 0x13b, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x5c343f, this['buttons'][_0x82c94e] = gui_create_button(0x73, 0x49, '', [IMAGES['BACK_BUTTON_OUT'], IMAGES['BACK_BUTTON_IN'], IMAGES['BACK_BUTTON_CLICK']], _0xc0643f, _0x244de0, function() {
        _0x244a54(_0x593e2a);
    }, -0x140, 0x1d6, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x5c343f, FIRST_BUTTON_CRATE = _0x82c94e, this['buttons'][_0x82c94e] = gui_create_button(0xb2, 0xb6, '', [IMAGES['WOOD_ITEM_OUT'], IMAGES['WOOD_ITEM_IN'], IMAGES['WOOD_ITEM_CLICK']], _0xc0643f, _0x244de0, undefined, -0x1d, 0xcd, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x46f518, this['buttons'][_0x82c94e] = gui_create_button(0xb2, 0xb6, '', [IMAGES['WOOD_ITEM_OUT'], IMAGES['WOOD_ITEM_IN'], IMAGES['WOOD_ITEM_CLICK']], _0xc0643f, _0x244de0, undefined, -0x1d, 0x12c, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x46f518, this['buttons'][_0x82c94e] = gui_create_button(0xb2, 0xb6, '', [IMAGES['WOOD_ITEM_OUT'], IMAGES['WOOD_ITEM_IN'], IMAGES['WOOD_ITEM_CLICK']], _0xc0643f, _0x244de0, undefined, -0x1d, 0x18b, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x46f518, this['buttons'][_0x82c94e] = gui_create_button(0xb2, 0xb6, '', [IMAGES['WOOD_ITEM_OUT'], IMAGES['WOOD_ITEM_IN'], IMAGES['WOOD_ITEM_CLICK']], _0xc0643f, _0x244de0, undefined, 0x41, 0xcd, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x46f518, this['buttons'][_0x82c94e] = gui_create_button(0xb2, 0xb6, '', [IMAGES['WOOD_ITEM_OUT'], IMAGES['WOOD_ITEM_IN'], IMAGES['WOOD_ITEM_CLICK']], _0xc0643f, _0x244de0, undefined, 0x41, 0x12c, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x46f518, this['buttons'][_0x82c94e] = gui_create_button(0xb2, 0xb6, '', [IMAGES['WOOD_ITEM_OUT'], IMAGES['WOOD_ITEM_IN'], IMAGES['WOOD_ITEM_CLICK']], _0xc0643f, _0x244de0, undefined, 0x41, 0x18b, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x46f518, this['buttons'][_0x82c94e] = gui_create_button(0xb2, 0xb6, '', [IMAGES['WOOD_ITEM_OUT'], IMAGES['WOOD_ITEM_IN'], IMAGES['WOOD_ITEM_CLICK']], _0xc0643f, _0x244de0, undefined, 0x9f, 0xcd, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x46f518, this['buttons'][_0x82c94e] = gui_create_button(0xb2, 0xb6, '', [IMAGES['WOOD_ITEM_OUT'], IMAGES['WOOD_ITEM_IN'], IMAGES['WOOD_ITEM_CLICK']], _0xc0643f, _0x244de0, undefined, 0x9f, 0x12c, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x46f518, this['buttons'][_0x82c94e] = gui_create_button(0xb2, 0xb6, '', [IMAGES['WOOD_ITEM_OUT'], IMAGES['WOOD_ITEM_IN'], IMAGES['WOOD_ITEM_CLICK']], _0xc0643f, _0x244de0, undefined, 0x9f, 0x18b, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x46f518, this['buttons'][_0x82c94e] = gui_create_button(0x27, 0x7a, '', [IMAGES['SKIN_PREVIOUS_OUT'], IMAGES['SKIN_PREVIOUS_IN'], IMAGES['SKIN_PREVIOUS_CLICK']], _0xc0643f, _0x244de0, undefined, -0x3d, 0x13b, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x46f518, this['buttons'][_0x82c94e] = gui_create_button(0x27, 0x7a, '', [IMAGES['SKIN_NEXT_OUT'], IMAGES['SKIN_NEXT_IN'], IMAGES['SKIN_NEXT_CLICK']], _0xc0643f, _0x244de0, undefined, 0x104, 0x13b, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x46f518, this['buttons'][_0x82c94e] = gui_create_button(0x73, 0x49, '', [IMAGES['BACK_BUTTON_OUT'], IMAGES['BACK_BUTTON_IN'], IMAGES['BACK_BUTTON_CLICK']], _0xc0643f, _0x244de0, function() {
        _0x244a54(_0x593e2a);
    }, -0x140, 0x1d6, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x46f518, this['buttons'][_0x82c94e] = gui_create_button(0x104, 0x104, '', [IMAGES['SPIN_BUTTON_1_OUT'], IMAGES['SPIN_BUTTON_1_IN'], IMAGES['SPIN_BUTTON_1_CLICK']], _0xc0643f, _0x244de0, function() {
        if (_0x455007['isUserLogged']()) buySpin(0x3, 0x32);
        else _0x244a54(_0x5ee3a9);
    }, -0x104 / 0x4, 0x96 + 0x1c0 / 0x4 - 0x104 / 0x4, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x4079e2, this['buttons'][_0x82c94e] = gui_create_button(0x73, 0x49, '', [IMAGES['BACK_BUTTON_OUT'], IMAGES['BACK_BUTTON_IN'], IMAGES['BACK_BUTTON_CLICK']], _0xc0643f, _0x244de0, function() {
        _0x244a54(_0x271d21);
    }, 0x135, 0xb4, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x4079e2, this['buttons'][_0x82c94e] = gui_create_button(0x104, 0x104, '', [IMAGES['SPIN_BUTTON_2_OUT'], IMAGES['SPIN_BUTTON_2_IN'], IMAGES['SPIN_BUTTON_2_CLICK']], _0xc0643f, _0x244de0, function() {
        if (_0x455007['isUserLogged']()) buySpin(0x0, 0x64);
        else _0x244a54(_0x5ee3a9);
    }, -0x104 / 0x4, 0x96 + 0x1c0 / 0x4 - 0x104 / 0x4, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x2c587c, this['buttons'][_0x82c94e] = gui_create_button(0x73, 0x49, '', [IMAGES['BACK_BUTTON_OUT'], IMAGES['BACK_BUTTON_IN'], IMAGES['BACK_BUTTON_CLICK']], _0xc0643f, _0x244de0, function() {
        _0x244a54(_0x271d21);
    }, 0x135, 0xb4, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x2c587c, this['buttons'][_0x82c94e] = gui_create_button(0x104, 0x104, '', [IMAGES['SPIN_BUTTON_3_OUT'], IMAGES['SPIN_BUTTON_3_IN'], IMAGES['SPIN_BUTTON_3_CLICK']], _0xc0643f, _0x244de0, function() {
        if (_0x455007['isUserLogged']()) buySpin(0x4, 0x96);
        else _0x244a54(_0x5ee3a9);
    }, -0x104 / 0x4, 0x96 + 0x1c0 / 0x4 - 0x104 / 0x4, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x56ac79, this['buttons'][_0x82c94e] = gui_create_button(0x73, 0x49, '', [IMAGES['BACK_BUTTON_OUT'], IMAGES['BACK_BUTTON_IN'], IMAGES['BACK_BUTTON_CLICK']], _0xc0643f, _0x244de0, function() {
        _0x244a54(_0x271d21);
    }, 0x135, 0xb4, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x56ac79, this['buttons'][_0x82c94e] = gui_create_button(0x104, 0x104, '', [IMAGES['SPIN_BUTTON_4_OUT'], IMAGES['SPIN_BUTTON_4_IN'], IMAGES['SPIN_BUTTON_4_CLICK']], _0xc0643f, _0x244de0, function() {
        if (_0x455007['isUserLogged']()) buySpin(0x1, 0x12c);
        else _0x244a54(_0x5ee3a9);
    }, -0x104 / 0x4, 0x96 + 0x1c0 / 0x4 - 0x104 / 0x4, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x38e1d9, this['buttons'][_0x82c94e] = gui_create_button(0x73, 0x49, '', [IMAGES['BACK_BUTTON_OUT'], IMAGES['BACK_BUTTON_IN'], IMAGES['BACK_BUTTON_CLICK']], _0xc0643f, _0x244de0, function() {
        _0x244a54(_0x271d21);
    }, 0x135, 0xb4, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x38e1d9, this['buttons'][_0x82c94e] = gui_create_button(0x104, 0x104, '', [IMAGES['SPIN_BUTTON_5_OUT'], IMAGES['SPIN_BUTTON_5_IN'], IMAGES['SPIN_BUTTON_5_CLICK']], _0xc0643f, _0x244de0, function() {
        if (_0x455007['isUserLogged']()) buySpin(0x2, 0x258);
        else _0x244a54(_0x5ee3a9);
    }, -0x104 / 0x4, 0x96 + 0x1c0 / 0x4 - 0x104 / 0x4, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x56210c, this['buttons'][_0x82c94e] = gui_create_button(0x73, 0x49, '', [IMAGES['BACK_BUTTON_OUT'], IMAGES['BACK_BUTTON_IN'], IMAGES['BACK_BUTTON_CLICK']], _0xc0643f, _0x244de0, function() {
        _0x244a54(_0x271d21);
    }, 0x135, 0xb4, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x56210c, this['buttons'][_0x82c94e] = gui_create_button(0x104, 0x104, '', [IMAGES['SPIN_BUTTON_4_OUT'], IMAGES['SPIN_BUTTON_4_IN'], IMAGES['SPIN_BUTTON_4_CLICK']], _0xc0643f, _0x244de0, function() {
        if (_0x455007['isUserLogged']()) buySpin(0x5, 0x12c);
        else _0x244a54(_0x5ee3a9);
    }, -0x104 / 0x4, 0x96 + 0x1c0 / 0x4 - 0x104 / 0x4, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x3ac679, this['buttons'][_0x82c94e] = gui_create_button(0x73, 0x49, '', [IMAGES['BACK_BUTTON_OUT'], IMAGES['BACK_BUTTON_IN'], IMAGES['BACK_BUTTON_CLICK']], _0xc0643f, _0x244de0, function() {
        _0x244a54(_0x271d21);
    }, 0x135, 0xb4, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x3ac679;
    var _0x2c6b81 = _0x82c94e;
    this['buttons'][_0x82c94e] = gui_create_button(0xcd, 0x43, '', [IMAGES['SEASON1_PROFILE_OUT'], IMAGES['SEASON1_PROFILE_IN'], IMAGES['SEASON1_PROFILE_CLICK']], _0xc0643f, _0x244de0, function() {
        _0x1750df(undefined, 0x0);
    }, -0x131, 0x7d, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x4f2e13;
    var _0x1787fe = _0x82c94e;
    this['buttons'][_0x82c94e] = gui_create_button(0xcd, 0x43, '', [IMAGES['SEASON2_PROFILE_OUT'], IMAGES['SEASON2_PROFILE_IN'], IMAGES['SEASON2_PROFILE_CLICK']], _0xc0643f, _0x244de0, function() {
        _0x1750df(undefined, 0x1);
    }, -0x131, 0xaa, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x4f2e13;
    var _0x1a33a5 = _0x82c94e;
    this['buttons'][_0x82c94e] = gui_create_button(0xcd, 0x43, '', [IMAGES['SEASON3_PROFILE_OUT'], IMAGES['SEASON3_PROFILE_IN'], IMAGES['SEASON3_PROFILE_CLICK']], _0xc0643f, _0x244de0, function() {
        _0x1750df(undefined, 0x2);
    }, -0x131, 0xd7, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x4f2e13;
    var _0x36a805 = _0x82c94e;
    this['buttons'][_0x82c94e] = gui_create_button(0xcd, 0x43, '', [IMAGES['SEASON4_PROFILE_OUT'], IMAGES['SEASON4_PROFILE_IN'], IMAGES['SEASON4_PROFILE_CLICK']], _0xc0643f, _0x244de0, function() {
        _0x1750df(undefined, 0x3);
    }, -0x131, 0x104, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x4f2e13;
    var _0x542864 = _0x82c94e;
    this['buttons'][_0x82c94e] = gui_create_button(0xcd, 0x43, '', [IMAGES['SEASON5_PROFILE_OUT'], IMAGES['SEASON5_PROFILE_IN'], IMAGES['SEASON5_PROFILE_CLICK']], _0xc0643f, _0x244de0, function() {
        _0x1750df(undefined, 0x3);
    }, -0x131, 0x131, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x4f2e13;
    var _0x362bc0 = _0x82c94e;
    this['buttons'][_0x82c94e] = gui_create_button(0x1cc, 0x49, '', [IMAGES['TOTAL_PROFILE_OUT'], IMAGES['TOTAL_PROFILE_IN'], IMAGES['TOTAL_PROFILE_CLICK']], _0xc0643f, _0x244de0, function() {
        _0x1750df(-0x1);
    }, -0xb4, 0xaa, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x4f2e13;
    var _0x531a02 = _0x82c94e;
    this['buttons'][_0x82c94e] = gui_create_button(0xde, 0x44, '', [IMAGES['NORMAL_PROFILE_OUT'], IMAGES['NORMAL_PROFILE_IN'], IMAGES['NORMAL_PROFILE_CLICK']], _0xc0643f, _0x244de0, function() {
        _0x1750df(WORLD['MODE_PVP']);
    }, -0xb4, 0xd7, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x4f2e13;
    var _0x2ce1b2 = _0x82c94e;
    this['buttons'][_0x82c94e] = gui_create_button(0xde, 0x44, '', [IMAGES['FOREST_PROFILE_OUT'], IMAGES['FOREST_PROFILE_IN'], IMAGES['FOREST_PROFILE_CLICK']], _0xc0643f, _0x244de0, function() {
        _0x1750df(WORLD['MODE_LEGACY']);
    }, -0xb4, 0x104, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x4f2e13;
    var _0x2355d9 = _0x82c94e;
    this['buttons'][_0x82c94e] = gui_create_button(0xde, 0x44, '', [IMAGES['ZOMBIE_PROFILE_OUT'], IMAGES['ZOMBIE_PROFILE_IN'], IMAGES['ZOMBIE_PROFILE_CLICK']], _0xc0643f, _0x244de0, function() {
        _0x1750df(WORLD['MODE_ZOMBIES']);
    }, -0x3c, 0xd7, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x4f2e13;
    var _0x3648f7 = _0x82c94e;
    this['buttons'][_0x82c94e] = gui_create_button(0xde, 0x44, '', [IMAGES['VAMPIRE_PROFILE_OUT'], IMAGES['VAMPIRE_PROFILE_IN'], IMAGES['VAMPIRE_PROFILE_CLICK']], _0xc0643f, _0x244de0, function() {
        _0x1750df(WORLD['MODE_VAMPIRES']);
    }, -0x3c, 0x104, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x4f2e13, this['LEADERBOARD_TOTAL'] = _0x82c94e, this['buttons'][_0x82c94e] = gui_create_button(0x8f, 0x42, '', [IMAGES['TOTAL_LEAD_OUT'], IMAGES['TOTAL_LEAD_IN'], IMAGES['TOTAL_LEAD_CLICK']], _0xc0643f, _0x244de0, function() {
        getLeaderboard(undefined, ui['LEADERBOARD_TOTAL']);
    }, -0x12a, 0x6e, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0xaa9b6f, this['LEADERBOARD_NORMAL'] = _0x82c94e, this['buttons'][_0x82c94e] = gui_create_button(0x68, 0x42, '', [IMAGES['NORMAL_LEAD_OUT'], IMAGES['NORMAL_LEAD_IN'], IMAGES['NORMAL_LEAD_CLICK']], _0xc0643f, _0x244de0, function() {
        getLeaderboard(undefined, ui['LEADERBOARD_NORMAL']);
    }, -0xdf, 0x6e, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0xaa9b6f, this['LEADERBOARD_FOREST'] = _0x82c94e, this['buttons'][_0x82c94e] = gui_create_button(0x6e, 0x42, '', [IMAGES['FOREST_LEAD_OUT'], IMAGES['FOREST_LEAD_IN'], IMAGES['FOREST_LEAD_CLICK']], _0xc0643f, _0x244de0, function() {
        getLeaderboard(undefined, ui['LEADERBOARD_FOREST']);
    }, -0xa8, 0x6e, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0xaa9b6f, this['LEADERBOARD_ZOMBIE'] = _0x82c94e, this['buttons'][_0x82c94e] = gui_create_button(0x58, 0x42, '', [IMAGES['ZOMBIE_LEAD_OUT'], IMAGES['ZOMBIE_LEAD_IN'], IMAGES['ZOMBIE_LEAD_CLICK']], _0xc0643f, _0x244de0, function() {
        getLeaderboard(undefined, ui['LEADERBOARD_ZOMBIE']);
    }, -0x6e, 0x6e, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0xaa9b6f, this['LEADERBOARD_VAMPIRE'] = _0x82c94e, this['buttons'][_0x82c94e] = gui_create_button(0x58, 0x42, '', [IMAGES['VAMPIRE_LEAD_OUT'], IMAGES['VAMPIRE_LEAD_IN'], IMAGES['VAMPIRE_LEAD_CLICK']], _0xc0643f, _0x244de0, function() {
        getLeaderboard(undefined, ui['LEADERBOARD_VAMPIRE']);
    }, -0x3f, 0x6e, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0xaa9b6f, this['buttons'][_0x82c94e] = gui_create_button(0x56, 0x2c, '', [IMAGES['TERMS_BUTTON_OUT'], IMAGES['TERMS_BUTTON_IN'], IMAGES['TERMS_BUTTON_CLICK']], _0xc0643f, _0x244de0, function() {
        window['open']('./terms.html', '_blank');
    }, 0x15d, 0x122, _0x38ccbf | _0x14d4d7, _0x24917c), this['buttons'][_0x82c94e++]['view'] = _0x271d21;
    var _0x214e3c = new _0x5a0ef3(COSMETICS['SKIN'], FIRST_BUTTON_SKIN, function(_0x3c2644) {
            ui['skin'] = _0x3c2644;
            if (ui['unlock']['skin'][_0x3c2644] === 0x1) Cookies['set']('starve_skin', '' + _0x3c2644, {
                'expires': 0x1e
            });
        }, this['skin'], this['unlock']['skin']),
        _0x405a16 = new _0x5a0ef3(COSMETICS['BAG'], FIRST_BUTTON_BAG, function(_0x319ef9) {
            ui['bag'] = _0x319ef9;
            if (ui['unlock']['bag'][_0x319ef9] === 0x1) Cookies['set']('starve_bag', '' + _0x319ef9, {
                'expires': 0x1e
            });
        }, this['bag'], this['unlock']['bag']),
        _0x27580e = new _0x5a0ef3(COSMETICS['BOOK'], FIRST_BUTTON_BOOK, function(_0xf2c1b6) {
            ui['book'] = _0xf2c1b6;
            if (ui['unlock']['book'][_0xf2c1b6] === 0x1) Cookies['set']('starve_book', '' + _0xf2c1b6, {
                'expires': 0x1e
            });
        }, this['book'], this['unlock']['book']),
        _0x2114d1 = new _0x5a0ef3(COSMETICS['CRATE'], FIRST_BUTTON_CRATE, function(_0x5244e9) {
            ui['dead'] = _0x5244e9;
            if (ui['unlock']['dead'][_0x5244e9] === 0x1) Cookies['set']('starve_dead', '' + _0x5244e9, {
                'expires': 0x1e
            });
        }, this['dead'], this['unlock']['dead']),
        _0x6e488d = new _0x5a0ef3(COSMETICS['CRATE'], FIRST_BUTTON_LOOT, function(_0x15df54) {
            ui['crate'] = _0x15df54;
            if (ui['unlock']['crate'][_0x15df54] === 0x1) Cookies['set']('starve_crate', '' + _0x15df54, {
                'expires': 0x1e
            });
        }, this['crate'], this['unlock']['crate']),
        _0x2d48d3 = new _0x5a0ef3(COSMETICS['ACCESSORY'], FIRST_BUTTON_ACCESSORY, function(_0x146bb3) {
            ui['accessory'] = _0x146bb3;
            if (ui['unlock']['accessory'][_0x146bb3] === 0x1) Cookies['set']('starve_accessory', '' + _0x146bb3, {
                'expires': 0x1e
            });
        }, this['accessory'], this['unlock']['accessory']);
    this['trigger_mousedown'] = function(_0x5ca46c) {
        mouse['pos'] = get_mouse_pos(_0x455007['can'], _0x5ca46c);
        for (var _0x2b0a33 = 0x0; _0x2b0a33 < _0x455007['buttons']['length']; _0x2b0a33++) {
            if (_0x455007['buttons'][_0x2b0a33]['info']['active'] === _0x2e6e44) _0x455007['buttons'][_0x2b0a33]['trigger'](_0x455007['can'], mouse['pos'], MOUSE_DOWN);
        }
    }, this['trigger_mouseup'] = function(_0x5f10bd) {
        mouse['pos'] = get_mouse_pos(_0x455007['can'], _0x5f10bd);
        for (var _0x503e41 = 0x0; _0x503e41 < _0x455007['buttons']['length']; _0x503e41++) {
            var _0x500f04 = _0x455007['buttons'][_0x503e41];
            if (_0x500f04['info']['active'] === _0x2e6e44) {
                if (_0x500f04['trigger'](_0x455007['can'], mouse['pos'], MOUSE_UP)) {
                    _0x500f04['info']['callback']();
                    return;
                }
            }
        }
    }, this['current_cursor'] = ![], this['trigger_mousemove'] = function(_0x43a08b) {
        mouse['pos'] = get_mouse_pos(_0x455007['can'], _0x43a08b);
        var _0x8f68d1 = ![];
        for (var _0x141503 = 0x0; _0x141503 < _0x455007['buttons']['length']; _0x141503++) {
            if (_0x455007['buttons'][_0x141503]['info']['active'] === _0x2e6e44) _0x8f68d1 |= _0x455007['buttons'][_0x141503]['trigger'](_0x455007['can'], mouse['pos'], MOUSE_MOVE);
        }
        if (_0x455007['current_cursor'] !== _0x8f68d1) {
            _0x455007['current_cursor'] = _0x8f68d1;
            if (_0x8f68d1) _0x55a506['style']['cursor'] = _0x455007['cursor1'];
            else _0x55a506['style']['cursor'] = _0x455007['cursor0'];
        }
    }, this['add_event_listener'] = function() {
        window['addEventListener']('mousedown', this['trigger_mousedown'], ![]), window['addEventListener']('mouseup', this['trigger_mouseup'], ![]), window['addEventListener']('mousemove', this['trigger_mousemove'], ![]);
    }, this['remove_event_listener'] = function() {
        window['removeEventListener']('mousedown', this['trigger_mousedown'], ![]), window['removeEventListener']('mouseup', this['trigger_mouseup'], ![]), window['removeEventListener']('mousemove', this['trigger_mousemove'], ![]);
    };
}

function Game(_0x4b8451, _0x46c7bc) {
    var _0x26de52 = this;
    this['can'] = _0x4b8451, this['ctx'] = _0x46c7bc;
    window['navigator']['userAgent']['indexOf']('Edge') > -0x1 ? (this['cursor0'] = 'default', this['cursor1'] = 'pointer') : (this['cursor0'] = 'url(\x27img/cursor0.png\x27),\x20default', this['cursor1'] = 'url(\x27img/cursor1.png\x27),\x20pointer');
    this['show_ui'] = 0x1, this['show_clock'] = 0x1, this['show_recipe_book'] = 0x1, this['show_quest'] = 0x1, this['team_box'] = {
        'id': document['getElementById']('team_box'),
        'style': document['getElementById']('team_box')['style'],
        'update': function() {
            this['style']['left'] = Math['floor'](canw2 - 0x7d) + 'px', this['style']['top'] = '110px';
        }
    }, this['audio'] = {
        'button_on': gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['SOUND_BUTTON_ON']]),
        'button_off': gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['SOUND_BUTTON_OFF']])
    }, this['sign'] = {
        'open': ![],
        'breads': 0x0,
        'symbol': document['getElementById']('sign_object'),
        'symbol_id': 0x0,
        'id': document['getElementById']('sign_window'),
        'style': document['getElementById']('sign_window')['style'],
        'button': gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['SIGN_BUTTON']]),
        'update_button': function() {
            var _0x1d8802 = Math['floor'](Math['floor']((0x3 + user['craft']['can_craft']['length']) / 0x4) * (0xa + sprite[SPRITE['INV_WOOD']][0x0]['width']) + 0x23);
            this['button']['info']['translate']['x'] = _0x1d8802, this['button']['info']['translate']['y'] = 0x16;
        },
        'update': function() {
            this['style']['left'] = Math['floor'](canw2 - 0x96) + 'px', this['style']['top'] = Math['floor'](canh2 - 0x73) + 'px';
        },
        'quit': function() {
            game['sign']['style']['display'] = 'none', game['sign']['open'] = ![];
        },
        'select': function() {
            game['sign']['open'] = !game['sign']['open'];
            if (game['sign']['open']) game['sign']['style']['display'] = 'inline-block';
            else game['sign']['style']['display'] = 'none';
        },
        'ok': function() {
            client['update_sign'](user['sign']['iid'], game['sign']['symbol_id']), game['sign']['select']();
        },
        'up': function() {
            game['sign']['symbol_id'] = game['sign']['symbol_id'] === 0x0 ? CLIENT['SYMBOL_MAX'] - 0x1 : game['sign']['symbol_id'] - 0x1, game['sign']['symbol']['src'] = './img/sign' + game['sign']['symbol_id'] + '.png';
        },
        'down': function() {
            game['sign']['symbol_id'] = (game['sign']['symbol_id'] + 0x1) % CLIENT['SYMBOL_MAX'], game['sign']['symbol']['src'] = './img/sign' + game['sign']['symbol_id'] + '.png';
        }
    }, document['getElementById']('quit_sign')['addEventListener']('mouseup', this['sign']['select'], ![]), document['getElementById']('ok_sign')['addEventListener']('mouseup', this['sign']['ok'], ![]), document['getElementById']('sign_up')['addEventListener']('mouseup', this['sign']['up'], ![]), document['getElementById']('sign_down')['addEventListener']('mouseup', this['sign']['down'], ![]), this['market'] = {
        'open': ![],
        'id': document['getElementById']('shop_market'),
        'style': document['getElementById']('shop_market')['style'],
        'items': [{
            'id': 0x0,
            'name': 'wood',
            'val': 0x1,
            'b': 0x1,
            'a': 0x3,
            'img_item': SPRITE['INV_WOOD']
        }, {
            'id': 0x1,
            'name': 'stone',
            'val': 0x1,
            'b': 0x1,
            'a': 0x4,
            'img_item': SPRITE['INV_STONE']
        }, {
            'id': 0x2,
            'name': 'gold',
            'val': 0x1,
            'b': 0x1,
            'a': 0x6,
            'img_item': SPRITE['INV_GOLD']
        }, {
            'id': 0x3,
            'name': 'diamond',
            'val': 0x4,
            'b': 0x4,
            'a': 0x1,
            'img_item': SPRITE['INV_DIAMOND']
        }, {
            'id': 0x4,
            'name': 'amethyst',
            'val': 0x8,
            'b': 0x8,
            'a': 0x1,
            'img_item': SPRITE['INV_AMETHYST']
        }, {
            'id': 0x5,
            'name': 'reidite',
            'val': 0x10,
            'b': 0x10,
            'a': 0x1,
            'img_item': SPRITE['INV_REIDITE']
        }, {
            'id': 0x6,
            'name': 'pumpkin_seed',
            'val': 0xa,
            'b': 0xa,
            'a': 0x1,
            'img_item': SPRITE['INV_PUMPKIN_SEED']
        }, {
            'id': 0x7,
            'name': 'carrot_seed',
            'val': 0x10,
            'b': 0x10,
            'a': 0x1,
            'img_item': SPRITE['INV_CARROT_SEED']
        }, {
            'id': 0x8,
            'name': 'tomato_seed',
            'val': 0x14,
            'b': 0x14,
            'a': 0x1,
            'img_item': SPRITE['INV_TOMATO_SEED']
        }, {
            'id': 0x9,
            'name': 'thornbush_seed',
            'val': 0x1e,
            'b': 0x1e,
            'a': 0x1,
            'img_item': SPRITE['INV_THORNBUSH_SEED']
        }, {
            'id': 0xa,
            'name': 'garlic_seed',
            'val': 0x28,
            'b': 0x28,
            'a': 0x1,
            'img_item': SPRITE['INV_GARLIC_SEED']
        }, {
            'id': 0xb,
            'name': 'watermelon_seed',
            'val': 0x3c,
            'b': 0x3c,
            'a': 0x1,
            'img_item': SPRITE['INV_WATERMELON_SEED']
        }],
        'button': gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['MARKET_BUTTON']]),
        'update': function() {
            this['style']['left'] = Math['floor'](canw2 - 0x1c2) + 'px', this['style']['top'] = Math['floor'](canh2 - 0x10e) + 'px';
        },
        'select': function() {
            game['market']['open'] = !game['market']['open'];
            if (game['market']['open']) game['market']['style']['display'] = 'inline-block';
            else game['market']['style']['display'] = 'none';
        },
        'quit': function() {
            game['market']['style']['display'] = 'none', game['market']['open'] = ![];
        },
        'buy': function() {
            client['buy_market'](this['itemMarket']);
        },
        'change': function() {
            var _0x51162b = this['id'];
            if (this['itemMarket']['a'] === 0x1) {
                var _0x2fb5df = Math['floor'](Number(this['value']) * this['itemMarket']['b']);
                this['itemMarket']['val'] = _0x2fb5df, document['getElementById'](this['itemMarket']['name'] + '_trad_number')['innerHTML'] = _0x2fb5df + '';
            } else {
                var _0x2fb5df = Math['floor'](Number(this['value']) / this['itemMarket']['a']);
                this['itemMarket']['val'] = _0x2fb5df, document['getElementById'](this['itemMarket']['name'] + '_trad_number')['innerHTML'] = _0x2fb5df + '';
            }
        }
    }, document['getElementById']('quit_market')['addEventListener']('mouseup', this['market']['quit'], ![]);
    var _0x5acf30 = [
        ['mouseup', this['market']['buy'], 'buy_'],
        ['click', this['market']['change'], ''],
        ['change', this['market']['change'], ''],
        ['keypress', this['market']['keypress'], '']
    ];
    for (var _0x1758a3 = 0x0; _0x1758a3 < this['market']['items']['length']; _0x1758a3++) {
        var _0x3d8552 = this['market']['items'][_0x1758a3];
        document['getElementById'](_0x3d8552['name'] + '_market')['src'] = sprite[_0x3d8552['img_item']][0x0]['_src'] === undefined ? sprite[_0x3d8552['img_item']][0x0]['src'] : sprite[_0x3d8552['img_item']][0x0]['_src'];
        _0x3d8552['a'] === 0x1 ? (document['getElementById'](_0x3d8552['name'] + '_trad_number')['innerHTML'] = _0x3d8552['b'], document['getElementById'](_0x3d8552['name'] + '_number')['value'] = 0x1, document['getElementById'](_0x3d8552['name'] + '_number')['step'] = 0x1, document['getElementById'](_0x3d8552['name'] + '_number')['min'] = 0x1, document['getElementById'](_0x3d8552['name'] + '_number')['max'] = Math['floor'](0xff / _0x3d8552['b'])) : (document['getElementById'](_0x3d8552['name'] + '_trad_number')['innerHTML'] = 0x1, document['getElementById'](_0x3d8552['name'] + '_number')['value'] = _0x3d8552['a'], document['getElementById'](_0x3d8552['name'] + '_number')['step'] = _0x3d8552['a'], document['getElementById'](_0x3d8552['name'] + '_number')['min'] = _0x3d8552['a']);
        document['getElementById']('buy_' + _0x3d8552['name'] + '_number')['itemMarket'] = _0x3d8552, document['getElementById'](_0x3d8552['name'] + '_number')['itemMarket'] = _0x3d8552;
        for (var _0x15fb80 = 0x0; _0x15fb80 < _0x5acf30['length']; _0x15fb80++) document['getElementById'](_0x5acf30[_0x15fb80][0x2] + _0x3d8552['name'] + '_number')['addEventListener'](_0x5acf30[_0x15fb80][0x0], _0x5acf30[_0x15fb80][0x1], ![]);
    }
    $('[type=\x27number\x27]')['keypress'](function(_0x39df36) {
        _0x39df36['preventDefault']();
    }), this['options'] = {
        'open': ![],
        'id': document['getElementById']('option_in_game'),
        'style': document['getElementById']('option_in_game')['style'],
        'agree': document['getElementById']('agree_ing')['style'],
        'cancel_agree': document['getElementById']('cancel_agree_ing')['style'],
        'quests_agree': document['getElementById']('quest_agree_ing')['style'],
        'spectator_agree': document['getElementById']('spectator_agree_ing')['style'],
        'feed_agree': document['getElementById']('auto_feed_agree_ing')['style'],
        'info_box_agree': document['getElementById']('info_agree_ing')['style'],
        'aliasing_agree': document['getElementById']('pixelated_agree_ing')['style'],
        'button': gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['OPTION_BUTTON']]),
        'select_options': function() {
            game['options']['open'] = !game['options']['open'];
            if (game['options']['open']) game['options']['style']['display'] = 'inline-block';
            else game['options']['style']['display'] = 'none';
        },
        'azerty': function() {
            ui['set_azerty']();
        },
        'qwerty': function() {
            ui['set_qwerty']();
        },
        'high': function() {
            ui['high_quality']();
        },
        'low': function() {
            ui['low_quality']();
        },
        'checkbox': function() {
            game['safe_delete']['checkbox']();
        },
        'cancel_checkbox': function() {
            game['safe_cancel']['checkbox']();
        },
        'quest_checkbox': function() {
            game['quests']['checkbox']();
        },
        'spectator_checkbox': function() {
            user['show_spectators']['invert']();
        },
        'feed_checkbox': function() {
            user['auto_feed']['invert']();
        },
        'quit': function() {
            game['options']['style']['display'] = 'none', game['options']['open'] = ![];
        },
        'update': function() {
            this['style']['left'] = Math['floor'](canw2 - 0xeb) + 'px', this['style']['top'] = Math['floor'](canh2 - 0xaa) + 'px';
        }
    }, document['getElementById']('azerty_ing')['addEventListener']('mouseup', this['options']['azerty'], ![]), document['getElementById']('qwerty_ing')['addEventListener']('mouseup', this['options']['qwerty'], ![]), document['getElementById']('low_ing')['addEventListener']('mouseup', this['options']['low'], ![]), document['getElementById']('high_ing')['addEventListener']('mouseup', this['options']['high'], ![]), document['getElementById']('quit_opt')['addEventListener']('mouseup', this['options']['quit'], ![]), document['getElementById']('case_agree_opt')['addEventListener']('mouseup', this['options']['checkbox'], ![]), document['getElementById']('quest_case_agree_opt')['addEventListener']('mouseup', this['options']['quest_checkbox'], ![]), document['getElementById']('cancel_case_agree_opt')['addEventListener']('mouseup', this['options']['cancel_checkbox'], ![]), document['getElementById']('spectator_case_agree_opt')['addEventListener']('mouseup', this['options']['spectator_checkbox'], ![]), document['getElementById']('auto_feed_case_agree_opt')['addEventListener']('mouseup', this['options']['feed_checkbox'], ![]), this['safe_cancel'] = {
        'open': ![],
        'activated': Cookies['get']('starve_cancel') ? Cookies['get']('starve_cancel') === '0' ? 0x0 : 0x1 : 0x1,
        'id': document['getElementById']('cancel_sure_delete'),
        'style': document['getElementById']('cancel_sure_delete')['style'],
        'agree': document['getElementById']('cancel_agree')['style'],
        'button': 0x0,
        'i': 0x0,
        'quit': function() {
            game['safe_cancel']['style']['display'] = 'none', game['safe_cancel']['open'] = ![];
        },
        'yes': function() {
            if (user['craft']['crafting']) client['cancel_crafting']();
            game['safe_cancel']['quit']();
        },
        'checkbox': function() {
            !game['safe_cancel']['activated'] ? (Cookies['set']('starve_cancel', '1'), game['safe_cancel']['agree']['display'] = 'none', game['options']['cancel_agree']['display'] = 'inline-block') : (Cookies['set']('starve_cancel', '0'), game['safe_cancel']['agree']['display'] = 'inline-block', game['options']['cancel_agree']['display'] = 'none'), game['safe_cancel']['activated'] = !game['safe_cancel']['activated'];
        },
        'del': function() {
            if (!this['activated']) this['yes']();
            else this['style']['display'] = 'inline-block', this['open'] = !![];
        },
        'update': function() {
            this['style']['left'] = Math['floor'](canw2 - 0xeb) + 'px', this['style']['top'] = Math['floor'](canh2 - 0x82) + 'px';
        }
    }, this['safe_cancel']['id']['oncontextmenu'] = function() {
        return ![];
    }, this['safe_cancel']['agree']['display'] = 'none';
    if (this['safe_cancel']['activated']) this['options']['cancel_agree']['display'] = 'inline-block';
    else this['options']['cancel_agree']['display'] = 'none';
    document['getElementById']('cancel_yes_delete')['addEventListener']('mouseup', this['safe_cancel']['yes'], ![]), document['getElementById']('cancel_no_delete')['addEventListener']('mouseup', this['safe_cancel']['quit'], ![]), document['getElementById']('cancel_case_agree')['addEventListener']('mouseup', this['safe_cancel']['checkbox'], ![]), document['addEventListener']('cancel_sure_delete', function(_0x119ef1) {
        _0x119ef1['preventDefault']();
    }, ![]), this['aliasing'] = {
        'activated': Cookies['get']('starve_aliasing') ? Cookies['get']('starve_aliasing') === '0' ? 0x0 : 0x1 : 0x1,
        'set_aliasing': function(_0x23b673) {
            if (_0x23b673) document['getElementById']('game_canvas')['style']['imageRendering'] = 'pixelated';
            else document['getElementById']('game_canvas')['style']['imageRendering'] = 'auto';
        },
        'checkbox': function() {
            game['aliasing']['activated'] === 0x0 ? (Cookies['set']('starve_aliasing', '1'), game['aliasing']['set_aliasing'](0x1), game['options']['aliasing_agree']['display'] = 'inline-block') : (Cookies['set']('starve_aliasing', '0'), game['aliasing']['set_aliasing'](0x0), game['options']['aliasing_agree']['display'] = 'none'), game['aliasing']['activated'] = (game['aliasing']['activated'] + 0x1) % 0x2;
        }
    };
    if (this['aliasing']['activated'] === 0x1) this['options']['aliasing_agree']['display'] = 'inline-block';
    else this['aliasing']['set_aliasing'](0x0), this['options']['aliasing_agree']['display'] = 'none';
    document['getElementById']('pixelated_case_agree_opt')['addEventListener']('mouseup', this['aliasing']['checkbox'], ![]), this['info_box'] = {
        'activated': Cookies['get']('starve_info_box') ? Cookies['get']('starve_info_box') === '0' ? 0x0 : 0x1 : 0x1,
        'display': 0x0,
        'x': 0x0,
        'y': 0x0,
        'id': 0x0,
        'craft': 0x0,
        'checkbox': function() {
            game['info_box']['activated'] === 0x0 ? (Cookies['set']('starve_info_box', '1'), game['options']['info_box_agree']['display'] = 'inline-block') : (Cookies['set']('starve_info_box', '0'), game['options']['info_box_agree']['display'] = 'none'), game['info_box']['activated'] = (game['info_box']['activated'] + 0x1) % 0x2;
        },
        'trigger': function(_0xb862f8, _0x30a3a1, _0x5f2f51) {
            if (_0xb862f8 && this['activated']) {
                this['display'] = 0x1;
                if (_0x5f2f51 === 0x0) this['id'] = _0x30a3a1['id'];
                else this['id'] = RECIPES[_0x30a3a1['id']]['id2'];
                this['x'] = _0x30a3a1['info']['translate']['x'] + 0x50, this['y'] = _0x30a3a1['info']['translate']['y'], this['craft'] = _0x5f2f51;
            }
            return _0xb862f8;
        }
    };
    if (this['info_box']['activated'] === 0x1) this['options']['info_box_agree']['display'] = 'inline-block';
    else this['options']['info_box_agree']['display'] = 'none';
    document['getElementById']('info_case_agree_opt')['addEventListener']('mouseup', this['info_box']['checkbox'], ![]);
    Cookies['get']('starve_scale') && (ratio_opt = Number(Cookies['get']('starve_scale')), document['getElementById']('input_ratio')['value'] = ratio_opt, ratio_opt *= devicePixelRatio / window['backingStoreRatio'], resize_canvas());
    this['change_ratio'] = function() {
        Cookies['set']('starve_scale', '' + document['getElementById']('input_ratio')['value']), ratio_opt = document['getElementById']('input_ratio')['value'] * (devicePixelRatio / window['backingStoreRatio']), resize_canvas();
    }, document['getElementById']('input_ratio')['addEventListener']('input', this['change_ratio'], ![]), this['safe_delete'] = {
        'open': ![],
        'activated': Cookies['get']('starve_safe') ? Cookies['get']('starve_safe') === '0' ? 0x0 : 0x1 : 0x1,
        'id': document['getElementById']('sure_delete'),
        'style': document['getElementById']('sure_delete')['style'],
        'agree': document['getElementById']('agree')['style'],
        'button': 0x0,
        'i': 0x0,
        'quit': function() {
            game['safe_delete']['style']['display'] = 'none', game['safe_delete']['open'] = ![];
        },
        'all': function() {
            if (!user['build']['wait']) {
                if (user['craft']['preview'] < 0x0 && user['craft']['id'] < 0x0 && !user['ghost']['enabled']) client['delete_inv'](game['safe_delete']['button']);
                game['safe_delete']['quit']();
            }
        },
        'recycle': function() {
            if (user['craft']['workbench'] && !user['build']['wait']) {
                if (user['craft']['preview'] < 0x0 && user['craft']['id'] < 0x0 && !user['ghost']['enabled']) client['recycle_inv'](game['safe_delete']['button']);
                game['safe_delete']['quit']();
            }
        },
        'one': function() {
            if (!user['build']['wait']) {
                if (user['craft']['preview'] < 0x0 && user['craft']['id'] < 0x0 && !user['ghost']['enabled']) client['delete_one_inv'](game['safe_delete']['button']);
                game['safe_delete']['quit']();
            }
        },
        'checkbox': function() {
            !game['safe_delete']['activated'] ? (Cookies['set']('starve_safe', '1'), game['safe_delete']['agree']['display'] = 'none', game['options']['agree']['display'] = 'inline-block') : (Cookies['set']('starve_safe', '0'), game['safe_delete']['agree']['display'] = 'inline-block', game['options']['agree']['display'] = 'none'), game['safe_delete']['activated'] = !game['safe_delete']['activated'];
        },
        'del': function(_0x5d7073) {
            this['button'] = _0x5d7073, document['getElementById']('item_to_del')['src'] = sprite[INV_INFOS[_0x5d7073]['img']][0x0]['_src'] === undefined ? sprite[INV_INFOS[_0x5d7073]['img']][0x0]['src'] : sprite[INV_INFOS[_0x5d7073]['img']][0x0]['_src'];
            if (INV_INFOS[_0x5d7073]['recycle'] && !user['zombie'] && user['craft']['workbench']) document['getElementById']('recycle_delete')['style']['display'] = 'inline-block';
            else document['getElementById']('recycle_delete')['style']['display'] = 'none';
            if (!this['activated']) this['all']();
            else this['style']['display'] = 'inline-block', this['open'] = !![];
        },
        'update': function() {
            this['style']['left'] = Math['floor'](canw2 - 0xeb) + 'px', this['style']['top'] = Math['floor'](canh2 - 0xaf) + 'px';
        }
    }, this['safe_delete']['agree']['display'] = 'none';
    if (this['safe_delete']['activated']) this['options']['agree']['display'] = 'inline-block';
    else this['options']['agree']['display'] = 'none';
    document['getElementById']('one_delete')['addEventListener']('mouseup', this['safe_delete']['one'], ![]), document['getElementById']('yes_delete')['addEventListener']('mouseup', this['safe_delete']['all'], ![]), document['getElementById']('recycle_delete')['addEventListener']('mouseup', this['safe_delete']['recycle'], ![]), document['getElementById']('no_delete')['addEventListener']('mouseup', this['safe_delete']['quit'], ![]), document['getElementById']('case_agree')['addEventListener']('mouseup', this['safe_delete']['checkbox'], ![]), this['shop'] = {
        'open': ![],
        'kit': -0x1,
        'button': gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['SHOP']]),
        'id': document['getElementById']('shop_starterkit'),
        'style': document['getElementById']('shop_starterkit')['style'],
        'update': function() {
            this['style']['left'] = Math['floor'](canw2 - 0x12c) + 'px', this['style']['top'] = Math['floor'](canh2 - 0xd7) + 'px';
        },
        'quit': function() {
            game['shop']['open'] = ![], game['shop']['style']['display'] = 'none';
        },
        'select': function() {
            game['shop']['open'] = !game['shop']['open'];
            if (!game['shop']['open']) game['shop']['style']['display'] = 'none';
            else game['shop']['style']['display'] = 'inline-block';
        },
        'buy': function() {
            if (game['shop']['kit'] >= 0x0) {
                client['choose_kit'](game['shop']['kit']), game['shop']['quit']();
                if (ga) ga('send', 'event', 'Game', 'kit', '' + game['shop']['kit']);
            }
        },
        'init': function() {
            var _0x5edb5d = user['shop']['value'];
            document['getElementById']('points_bank')['innerHTML'] = Utils['simplify_number'](_0x5edb5d) + '\x20points';
            for (var _0x395632 = 0x0; _0x395632 < KIT['length']; _0x395632++) {
                if (KIT[_0x395632]['price'] > _0x5edb5d) document['getElementById']('starter' + (_0x395632 + 0x1))['style']['opacity'] = '0.4';
                else document['getElementById']('starter' + (_0x395632 + 0x1))['style']['opacity'] = '1';
            }
            for (_0x395632 = 0x1; _0x395632 < 0xd; _0x395632++) {
                document['getElementById']('inv_shop' + _0x395632)['src'] = './img/empty-shop.png', document['getElementById']('amount_shop' + _0x395632)['innerHTML'] = '';
            }
            document['getElementById']('buy_kit')['style']['opacity'] = '0.2';
        },
        'get_starter': function() {
            if (this['id']['length'] > 0x8) var _0x5d9387 = Number(this['id']['charAt'](0x7) + this['id']['charAt'](0x8));
            else var _0x5d9387 = Number(this['id']['charAt'](0x7));
            var _0xd74dcc = KIT[_0x5d9387 - 0x1];
            user['shop']['value'] >= _0xd74dcc['price'] ? (game['shop']['kit'] = _0x5d9387, document['getElementById']('buy_kit')['style']['opacity'] = '1') : (game['shop']['kit'] = -0x1, document['getElementById']('buy_kit')['style']['opacity'] = '0.2');
            _0xd74dcc = _0xd74dcc['items'];
            for (var _0x4a5d9e = 0x1, _0x328c95 = 0x1; _0x4a5d9e < _0xd74dcc['length'] + 0x1; _0x4a5d9e++) {
                if (_0xd74dcc[_0x4a5d9e - 0x1][0x1] === INV['BAG']) continue;
                document['getElementById']('inv_shop' + _0x328c95)['style']['display'] = 'inline-block', document['getElementById']('inv_shop' + _0x328c95)['src'] = sprite[INV_INFOS[_0xd74dcc[_0x4a5d9e - 0x1][0x1]]['img']][0x0]['_src'] === undefined ? sprite[INV_INFOS[_0xd74dcc[_0x4a5d9e - 0x1][0x1]]['img']][0x0]['src'] : sprite[INV_INFOS[_0xd74dcc[_0x4a5d9e - 0x1][0x1]]['img']][0x0]['_src'], document['getElementById']('amount_shop' + _0x328c95)['innerHTML'] = '' + _0xd74dcc[_0x4a5d9e - 0x1][0x0], _0x328c95++;
            }
            for (; _0x328c95 < 0xd; _0x328c95++) {
                document['getElementById']('inv_shop' + _0x328c95)['src'] = './img/empty-shop.png', document['getElementById']('amount_shop' + _0x328c95)['innerHTML'] = '';
            }
        }
    }, document['getElementById']('quit3')['addEventListener']('mouseup', this['shop']['quit'], ![]), document['getElementById']('buy_kit')['addEventListener']('mouseup', this['shop']['buy'], ![]);
    for (var _0x15fb80 = 0x1; _0x15fb80 < 0xb; _0x15fb80++) document['getElementById']('starter' + _0x15fb80)['addEventListener']('mouseup', this['shop']['get_starter'], ![]);
    this['quests'] = {
        'open': ![],
        'activated': Cookies['get']('starve_quests') ? Cookies['get']('starve_quests') === '1' ? 0x1 : 0x0 : 0x0,
        'button': gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['QUEST_BUTTON']]),
        'id': document['getElementById']('chronoquest'),
        'style': document['getElementById']('chronoquest')['style'],
        'update': function() {
            this['style']['left'] = Math['floor'](canw2 - 0x1a4) + 'px', this['style']['top'] = Math['floor'](canh2 - 0x10e) + 'px';
        },
        'quit': function() {
            game['quests']['style']['display'] = 'none', game['quests']['open'] = ![];
        },
        'select': function() {
            game['quests']['open'] = !game['quests']['open'];
            if (!game['quests']['open']) game['quests']['style']['display'] = 'none';
            else game['quests']['style']['display'] = 'inline-block';
        },
        'list': [],
        'reset': function() {
            for (var _0xca7eb1 = 0x0; _0xca7eb1 < QUESTS['length']; _0xca7eb1++) {
                this['list'][_0xca7eb1] = 0x1, document['getElementById']('timeremain_' + _0xca7eb1)['style']['display'] = 'inline-block', document['getElementById']('time_finished_' + _0xca7eb1)['style']['display'] = 'none', document['getElementById']('claim_reward_' + _0xca7eb1)['style']['display'] = 'none';
            }
        },
        'timer': 0x0,
        'born': 0x0,
        'update_chrono': function() {
            if (!game['quests']['open']) return;
            var _0x52cd55 = new Date()['getTime']();
            if (_0x52cd55 - this['timer'] < 0x3e8) return;
            this['timer'] = _0x52cd55;
            for (var _0x225647 = 0x0; _0x225647 < QUESTS['length']; _0x225647++) {
                if (!game['quests']['list'][_0x225647]) continue;
                var _0x398ae8 = QUESTS[_0x225647]['time'] - (_0x52cd55 - world['clock']['init'] + game['quests']['born']);
                if (_0x398ae8 > 0xea600) document['getElementById']('timeremain_' + _0x225647)['innerHTML'] = Math['floor'](_0x398ae8 / 0x75300) + '\x20days';
                else {
                    if (_0x398ae8 > 0x75300) document['getElementById']('timeremain_' + _0x225647)['innerHTML'] = Math['floor'](_0x398ae8 / 0x75300) + '\x20day';
                    else {
                        if (_0x398ae8 > 0xea60) document['getElementById']('timeremain_' + _0x225647)['innerHTML'] = Math['floor'](_0x398ae8 / 0xea60) + '\x20min';
                        else document['getElementById']('timeremain_' + _0x225647)['innerHTML'] = Math['floor'](_0x398ae8 / 0x3e8) + '\x20sec';
                    }
                }
            }
        },
        'restore': function(_0xaba99) {
            for (var _0x2ba48f = 0x0; _0x2ba48f < _0xaba99['length']; _0x2ba48f++) {
                if (_0xaba99[_0x2ba48f] != 0x1) game['quests']['modify_simple'](_0x2ba48f, _0xaba99[_0x2ba48f]);
            }
        },
        'modify_simple': function(_0x411856, _0x58992d) {
            _0x58992d === 0x3 && (_0x411856 === 0xb || _0x411856 === 0xc) && (user['inv']['update_bag_size'](0x0, 0x1), game['update_inv_buttons']());
            document['getElementById']('timeremain_' + _0x411856)['innerHTML'] = '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;';
            if (_0x58992d > 0x1) document['getElementById']('time_finished_' + _0x411856)['innerHTML'] = 'SUCCEED', document['getElementById']('timeremain_' + _0x411856)['style']['display'] = 'none';
            else _0x58992d === 0x0 && (document['getElementById']('time_finished_' + _0x411856)['innerHTML'] = 'FAILED', document['getElementById']('timeremain_' + _0x411856)['style']['display'] = 'none');
            if (_0x58992d === 0x2) document['getElementById']('claim_reward_' + _0x411856)['style']['display'] = 'inline-block';
            else document['getElementById']('claim_reward_' + _0x411856)['style']['display'] = 'none';
            document['getElementById']('time_finished_' + _0x411856)['style']['display'] = 'inline', game['quests']['list'][_0x411856] = 0x0;
        },
        'modify': function(_0xf14a41, _0x525601) {
            game['quests']['modify_simple'](_0xf14a41, _0x525601), game['quests']['activated'] && (game['quests']['open'] = !![], game['quests']['style']['display'] = 'inline-block');
        },
        'checkbox': function() {
            !game['quests']['activated'] ? (Cookies['set']('starve_quests', '1'), game['options']['quests_agree']['display'] = 'inline-block') : (Cookies['set']('starve_quests', '0'), game['options']['quests_agree']['display'] = 'none'), game['quests']['activated'] = !game['quests']['activated'];
        },
        'claim': function() {
            var _0x1c40c1 = Number(this['id']['charAt'](0xd)),
                _0x1bbb38 = Number(this['id']['charAt'](0xe));
            if (this['id']['charAt'](0xe) !== '' && _0x1bbb38 >= 0x0 && _0x1bbb38 <= 0x9) _0x1c40c1 = _0x1c40c1 * 0xa + _0x1bbb38;
            client['claim_quest_reward'](_0x1c40c1);
        }
    };
    if (this['quests']['activated']) this['options']['quests_agree']['display'] = 'inline-block';
    else this['options']['quests_agree']['display'] = 'none';
    document['getElementById']('quit_chronoquest')['addEventListener']('mouseup', this['quests']['quit'], ![]);
    for (var _0x15fb80 = 0x0; _0x15fb80 < QUESTS['length']; _0x15fb80++) document['getElementById']('claim_reward_' + _0x15fb80)['addEventListener']('mouseup', this['quests']['claim'], ![]);
    this['craft_list'] = {
        'open': ![],
        'button': gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['RECIPE_BUTTON']]),
        'list': {
            'id': document['getElementById']('recipe_craft'),
            'style': document['getElementById']('recipe_craft')['style'],
            'recipes': [],
            'category': 0x0,
            'update': function() {
                this['style']['left'] = Math['floor'](canw2 - 0x14f) + 'px', this['style']['top'] = Math['floor'](canh2 - 0xd7) + 'px';
            },
            'quit': function() {
                document['getElementById']('recipe_craft')['style']['display'] = 'none', game['craft_list']['open'] = ![];
            },
            'previous': function() {
                document['getElementById']('recipe_craft')['style']['display'] = 'none', document['getElementById']('home_craft')['style']['display'] = 'inline-block';
            },
            'get_recipe': function(_0x21a318) {
                var _0x204ac3 = this['recipes'][_0x21a318];
                if (_0x204ac3['o']) document['getElementById']('watercraft')['style']['display'] = 'inline-block';
                else document['getElementById']('watercraft')['style']['display'] = 'none';
                if (_0x204ac3['f']) document['getElementById']('firecraft')['style']['display'] = 'inline-block';
                else document['getElementById']('firecraft')['style']['display'] = 'none';
                if (_0x204ac3['w']) document['getElementById']('workcraft')['style']['display'] = 'inline-block';
                else document['getElementById']('workcraft')['style']['display'] = 'none';
                if (_0x204ac3['e']) document['getElementById']('wellcraft')['style']['display'] = 'inline-block';
                else document['getElementById']('wellcraft')['style']['display'] = 'none';
                var _0x204ac3 = _0x204ac3['r'];
                for (var _0x21a318 = 0x0, _0x1cc8cd = 0x1; _0x21a318 < _0x204ac3['length']; _0x21a318++) {
                    document['getElementById']('inv' + _0x1cc8cd)['style']['display'] = 'inline-block', document['getElementById']('inv' + _0x1cc8cd)['src'] = sprite[INV_INFOS[_0x204ac3[_0x21a318][0x0]]['img']][0x0]['_src'] === undefined ? sprite[INV_INFOS[_0x204ac3[_0x21a318][0x0]]['img']][0x0]['src'] : sprite[INV_INFOS[_0x204ac3[_0x21a318][0x0]]['img']][0x0]['_src'], document['getElementById']('numb' + _0x1cc8cd)['innerHTML'] = '' + _0x204ac3[_0x21a318][0x1], _0x1cc8cd++;
                }
                for (; _0x1cc8cd < 0x6; _0x1cc8cd++) {
                    document['getElementById']('inv' + _0x1cc8cd)['style']['display'] = 'none', document['getElementById']('numb' + _0x1cc8cd)['innerHTML'] = '';
                }
            },
            'select': function(_0x52037f) {
                this['category'] = _0x52037f, document['getElementById']('home_craft')['style']['display'] = 'none', document['getElementById']('workcraft')['style']['display'] = 'none', document['getElementById']('firecraft')['style']['display'] = 'none', document['getElementById']('watercraft')['style']['display'] = 'none', document['getElementById']('wellcraft')['style']['display'] = 'none', document['getElementById']('recipe_craft')['style']['display'] = 'inline-block', document['getElementById']('inv1')['style']['display'] = 'none', document['getElementById']('inv2')['style']['display'] = 'none', document['getElementById']('inv3')['style']['display'] = 'none', document['getElementById']('inv4')['style']['display'] = 'none', document['getElementById']('inv5')['style']['display'] = 'none', document['getElementById']('numb1')['innerHTML'] = '', document['getElementById']('numb2')['innerHTML'] = '', document['getElementById']('numb3')['innerHTML'] = '', document['getElementById']('numb4')['innerHTML'] = '', document['getElementById']('numb5')['innerHTML'] = '';
                for (var _0x15cd26 = 0x0, _0x226ad3 = 0x0; _0x15cd26 < RECIPES['length']; _0x15cd26++) {
                    var _0x1b2720 = RECIPES[_0x15cd26];
                    _0x52037f === _0x1b2720['t'] && (this['recipes'][_0x226ad3] = _0x1b2720, _0x226ad3++, document['getElementById']('img_' + _0x226ad3)['style']['display'] = 'inline-block', document['getElementById']('img_' + _0x226ad3)['src'] = sprite[INV_INFOS[_0x1b2720['id2']]['img']][0x0]['_src'] === undefined ? sprite[INV_INFOS[_0x1b2720['id2']]['img']][0x0]['src'] : sprite[INV_INFOS[_0x1b2720['id2']]['img']][0x0]['_src']);
                }
                for (_0x226ad3++; _0x226ad3 < 0x31; _0x226ad3++) document['getElementById']('img_' + _0x226ad3)['style']['display'] = 'none';
            }
        },
        'home': {
            'id': document['getElementById']('home_craft'),
            'style': document['getElementById']('home_craft')['style'],
            'update': function() {
                this['style']['left'] = Math['floor'](canw2 - 0x11d) + 'px', this['style']['top'] = Math['floor'](canh2 - 0xaa) + 'px';
            },
            'quit': function() {
                document['getElementById']('home_craft')['style']['display'] = 'none', game['craft_list']['open'] = ![];
            }
        },
        'select_book': function() {
            this['open'] = !this['open'];
            if (!this['open']) document['getElementById']('home_craft')['style']['display'] = 'none', document['getElementById']('recipe_craft')['style']['display'] = 'none';
            else document['getElementById']('home_craft')['style']['display'] = 'inline-block';
        }
    }, document['getElementById']('quit')['addEventListener']('mouseup', this['craft_list']['home']['quit'], ![]), document['getElementById']('quitmenu')['addEventListener']('mouseup', this['craft_list']['list']['quit'], ![]), document['getElementById']('backhome')['addEventListener']('mouseup', this['craft_list']['list']['previous'], ![]), document['getElementById']('hatcategory')['addEventListener']('mouseup', function() {
        game['craft_list']['list']['select'](CATEGORY['CLOTHES']);
    }, ![]), document['getElementById']('weaponcategory')['addEventListener']('mouseup', function() {
        game['craft_list']['list']['select'](CATEGORY['WEAPONS']);
    }, ![]), document['getElementById']('toolcategory')['addEventListener']('mouseup', function() {
        game['craft_list']['list']['select'](CATEGORY['TOOLS']);
    }, ![]), document['getElementById']('foodcategory')['addEventListener']('mouseup', function() {
        game['craft_list']['list']['select'](CATEGORY['FOODS']);
    }, ![]), document['getElementById']('placeablecategory')['addEventListener']('mouseup', function() {
        game['craft_list']['list']['select'](CATEGORY['Utils']);
    }, ![]), document['getElementById']('constructioncategory')['addEventListener']('mouseup', function() {
        game['craft_list']['list']['select'](CATEGORY['BASES']);
    }, ![]), document['getElementById']('img_1')['addEventListener']('mousedown', function() {
        game['craft_list']['list']['get_recipe'](0x0);
    }, ![]), document['getElementById']('img_2')['addEventListener']('mousedown', function() {
        game['craft_list']['list']['get_recipe'](0x1);
    }, ![]), document['getElementById']('img_3')['addEventListener']('mousedown', function() {
        game['craft_list']['list']['get_recipe'](0x2);
    }, ![]), document['getElementById']('img_4')['addEventListener']('mousedown', function() {
        game['craft_list']['list']['get_recipe'](0x3);
    }, ![]), document['getElementById']('img_5')['addEventListener']('mousedown', function() {
        game['craft_list']['list']['get_recipe'](0x4);
    }, ![]), document['getElementById']('img_6')['addEventListener']('mousedown', function() {
        game['craft_list']['list']['get_recipe'](0x5);
    }, ![]), document['getElementById']('img_7')['addEventListener']('mousedown', function() {
        game['craft_list']['list']['get_recipe'](0x6);
    }, ![]), document['getElementById']('img_8')['addEventListener']('mousedown', function() {
        game['craft_list']['list']['get_recipe'](0x7);
    }, ![]), document['getElementById']('img_9')['addEventListener']('mousedown', function() {
        game['craft_list']['list']['get_recipe'](0x8);
    }, ![]), document['getElementById']('img_10')['addEventListener']('mousedown', function() {
        game['craft_list']['list']['get_recipe'](0x9);
    }, ![]), document['getElementById']('img_11')['addEventListener']('mousedown', function() {
        game['craft_list']['list']['get_recipe'](0xa);
    }, ![]), document['getElementById']('img_12')['addEventListener']('mousedown', function() {
        game['craft_list']['list']['get_recipe'](0xb);
    }, ![]), document['getElementById']('img_13')['addEventListener']('mousedown', function() {
        game['craft_list']['list']['get_recipe'](0xc);
    }, ![]), document['getElementById']('img_14')['addEventListener']('mousedown', function() {
        game['craft_list']['list']['get_recipe'](0xd);
    }, ![]), document['getElementById']('img_15')['addEventListener']('mousedown', function() {
        game['craft_list']['list']['get_recipe'](0xe);
    }, ![]), document['getElementById']('img_16')['addEventListener']('mousedown', function() {
        game['craft_list']['list']['get_recipe'](0xf);
    }, ![]), document['getElementById']('img_17')['addEventListener']('mousedown', function() {
        game['craft_list']['list']['get_recipe'](0x10);
    }, ![]), document['getElementById']('img_18')['addEventListener']('mousedown', function() {
        game['craft_list']['list']['get_recipe'](0x11);
    }, ![]), document['getElementById']('img_19')['addEventListener']('mousedown', function() {
        game['craft_list']['list']['get_recipe'](0x12);
    }, ![]), document['getElementById']('img_20')['addEventListener']('mousedown', function() {
        game['craft_list']['list']['get_recipe'](0x13);
    }, ![]), document['getElementById']('img_21')['addEventListener']('mousedown', function() {
        game['craft_list']['list']['get_recipe'](0x14);
    }, ![]), document['getElementById']('img_22')['addEventListener']('mousedown', function() {
        game['craft_list']['list']['get_recipe'](0x15);
    }, ![]), document['getElementById']('img_23')['addEventListener']('mousedown', function() {
        game['craft_list']['list']['get_recipe'](0x16);
    }, ![]), document['getElementById']('img_24')['addEventListener']('mousedown', function() {
        game['craft_list']['list']['get_recipe'](0x17);
    }, ![]), document['getElementById']('img_25')['addEventListener']('mousedown', function() {
        game['craft_list']['list']['get_recipe'](0x18);
    }, ![]), document['getElementById']('img_26')['addEventListener']('mousedown', function() {
        game['craft_list']['list']['get_recipe'](0x19);
    }, ![]), document['getElementById']('img_27')['addEventListener']('mousedown', function() {
        game['craft_list']['list']['get_recipe'](0x1a);
    }, ![]), document['getElementById']('img_28')['addEventListener']('mousedown', function() {
        game['craft_list']['list']['get_recipe'](0x1b);
    }, ![]), document['getElementById']('img_29')['addEventListener']('mousedown', function() {
        game['craft_list']['list']['get_recipe'](0x1c);
    }, ![]), document['getElementById']('img_30')['addEventListener']('mousedown', function() {
        game['craft_list']['list']['get_recipe'](0x1d);
    }, ![]), document['getElementById']('img_31')['addEventListener']('mousedown', function() {
        game['craft_list']['list']['get_recipe'](0x1e);
    }, ![]), document['getElementById']('img_32')['addEventListener']('mousedown', function() {
        game['craft_list']['list']['get_recipe'](0x1f);
    }, ![]), document['getElementById']('img_33')['addEventListener']('mousedown', function() {
        game['craft_list']['list']['get_recipe'](0x20);
    }, ![]), document['getElementById']('img_34')['addEventListener']('mousedown', function() {
        game['craft_list']['list']['get_recipe'](0x21);
    }, ![]), document['getElementById']('img_35')['addEventListener']('mousedown', function() {
        game['craft_list']['list']['get_recipe'](0x22);
    }, ![]), document['getElementById']('img_36')['addEventListener']('mousedown', function() {
        game['craft_list']['list']['get_recipe'](0x23);
    }, ![]), document['getElementById']('img_37')['addEventListener']('mousedown', function() {
        game['craft_list']['list']['get_recipe'](0x24);
    }, ![]), document['getElementById']('img_38')['addEventListener']('mousedown', function() {
        game['craft_list']['list']['get_recipe'](0x25);
    }, ![]), document['getElementById']('img_39')['addEventListener']('mousedown', function() {
        game['craft_list']['list']['get_recipe'](0x26);
    }, ![]), document['getElementById']('img_40')['addEventListener']('mousedown', function() {
        game['craft_list']['list']['get_recipe'](0x27);
    }, ![]), document['getElementById']('img_41')['addEventListener']('mousedown', function() {
        game['craft_list']['list']['get_recipe'](0x28);
    }, ![]), document['getElementById']('img_42')['addEventListener']('mousedown', function() {
        game['craft_list']['list']['get_recipe'](0x29);
    }, ![]), document['getElementById']('img_43')['addEventListener']('mousedown', function() {
        game['craft_list']['list']['get_recipe'](0x2a);
    }, ![]), document['getElementById']('img_44')['addEventListener']('mousedown', function() {
        game['craft_list']['list']['get_recipe'](0x2b);
    }, ![]), document['getElementById']('img_45')['addEventListener']('mousedown', function() {
        game['craft_list']['list']['get_recipe'](0x2c);
    }, ![]), document['getElementById']('img_46')['addEventListener']('mousedown', function() {
        game['craft_list']['list']['get_recipe'](0x2d);
    }, ![]), document['getElementById']('img_47')['addEventListener']('mousedown', function() {
        game['craft_list']['list']['get_recipe'](0x2e);
    }, ![]), document['getElementById']('img_48')['addEventListener']('mousedown', function() {
        game['craft_list']['list']['get_recipe'](0x2f);
    }, ![]), this['minimap'] = {
        'translate': {
            'x': 0x0,
            'y': 0x0
        },
        'marker': {
            'x': -0x1,
            'y': -0x1
        },
        'players': [],
        'focus': function(_0x496bec) {
            var _0x445a69 = this['translate']['y'] + (user['inv']['can_select']['length'] > 0x0 ? -0x78 : -0x32);
            _0x496bec['x'] > this['translate']['x'] && _0x496bec['x'] < this['translate']['x'] + 0xc1 && _0x496bec['y'] > _0x445a69 && _0x496bec['y'] < _0x445a69 + 0xc1 && (this['marker']['x'] = _0x496bec['x'] - this['translate']['x'], this['marker']['y'] = _0x496bec['y'] - _0x445a69);
        }
    }, this['leaderboard'] = {
        'translate': {
            'x': 0x0,
            'y': 0x0
        },
        'img': sprite[SPRITE['LEADERBOARD']],
        'can': document['createElement']('canvas')
    }, this['leaderboard']['can']['width'] = this['leaderboard']['img']['width'], this['leaderboard']['can']['height'] = this['leaderboard']['img']['height'], this['leaderboard']['ctx'] = this['leaderboard']['can']['getContext']('2d'), this['gauges'] = {
        'translate': {
            'x': 0x0,
            'y': 0x0
        },
        'img': sprite[SPRITE['GAUGES']],
        'draw': draw_gauges,
        'y': 0x0
    }, this['leave_team'] = function() {
        div = document['getElementById']('team_box'), div['innerHTML'] = '', div['innerHTML'] += '<div\x20id=\x22leader\x22><img\x20src=\x22./img/leaderlogo.png\x22\x20style=\x22width:25px;margin-right:5px;\x22\x20></img>' + world['players'][user['team'][0x0]]['nickname'] + '</div';
        for (var _0x29a8d5 = 0x1; _0x29a8d5 < user['team']['length']; _0x29a8d5++) {
            div['innerHTML'] += '<div\x20class=\x22nicknames\x22>\x20<div\x20style=\x22display:inline-block;padding-top:7px;\x22>' + world['players'][user['team'][_0x29a8d5]]['nickname'] + '</div></div>';
        }
        div['innerHTML'] += '<div\x20id=\x22leave\x22\x20style=\x22display:inline-block;\x22>LEAVE</div></div>', div['style']['display'] = 'inline-block', document['getElementById']('leave')['addEventListener']('click', client['leave_team'], ![]);
    }, this['show_team'] = function() {
        div = document['getElementById']('team_box'), div['innerHTML'] = '', div['innerHTML'] += '<div\x20id=\x22leader\x22><img\x20src=\x22./img/leaderlogo.png\x22\x20style=\x22width:25px;margin-right:5px;\x22\x20></img>' + world['players'][user['team'][0x0]]['nickname'] + '</div';
        for (var _0x4ff4ba = 0x1; _0x4ff4ba < user['team']['length']; _0x4ff4ba++) {
            div['innerHTML'] += '<div\x20class=\x22nicknames\x22>\x20<div\x20style=\x22display:inline-block;padding-top:7px;\x22>' + world['players'][user['team'][_0x4ff4ba]]['nickname'] + '</div></div>';
        }
        div['innerHTML'] += '</div>', div['style']['display'] = 'inline-block';
    }, this['manage_team'] = function() {
        div = document['getElementById']('team_box'), div['innerHTML'] = '', div['innerHTML'] += '<div\x20id=\x22leader\x22><img\x20src=\x22./img/leaderlogo.png\x22\x20style=\x22width:25px;margin-right:5px;\x22\x20></img>' + world['players'][user['team'][0x0]]['nickname'] + '</div';
        for (var _0x113fdd = 0x1; _0x113fdd < user['team']['length']; _0x113fdd++) div['innerHTML'] += '<div\x20class=\x22nicknames\x22>\x20<div\x20style=\x22display:inline-block;padding-top:7px;\x22>' + world['players'][user['team'][_0x113fdd]]['nickname'] + '</div><div\x20class=\x22eject_member\x22\x20id=\x22eject_member' + _0x113fdd + '\x22><img\x20src=\x22./img/close-team.png\x22\x20style=\x22width:20px;padding:5px;\x22></img></div>';
        if (user['totem']['lock'] === 0x0) div['innerHTML'] += '<div\x20id=\x22lock_team\x22\x20style=\x22display:inline-block;\x22>LOCK</div></div>';
        else div['innerHTML'] += '<div\x20id=\x22lock_team\x22\x20style=\x22display:inline-block;\x22>UNLOCK</div></div>';
        document['getElementById']('lock_team')['addEventListener']('click', client['lock_team'], ![]), div['style']['display'] = 'inline-block';
        for (var _0x113fdd = 0x1; _0x113fdd < user['team']['length']; _0x113fdd++) {
            switch (_0x113fdd) {
                case 0x1:
                    document['getElementById']('eject_member' + _0x113fdd)['addEventListener']('click', function() {
                        client['kick_team'](0x1);
                    }, ![]);
                    break;
                case 0x2:
                    document['getElementById']('eject_member' + _0x113fdd)['addEventListener']('click', function() {
                        client['kick_team'](0x2);
                    }, ![]);
                    break;
                case 0x3:
                    document['getElementById']('eject_member' + _0x113fdd)['addEventListener']('click', function() {
                        client['kick_team'](0x3);
                    }, ![]);
                    break;
                case 0x4:
                    document['getElementById']('eject_member' + _0x113fdd)['addEventListener']('click', function() {
                        client['kick_team'](0x4);
                    }, ![]);
                    break;
                case 0x5:
                    document['getElementById']('eject_member' + _0x113fdd)['addEventListener']('click', function() {
                        client['kick_team'](0x5);
                    }, ![]);
                    break;
                case 0x6:
                    document['getElementById']('eject_member' + _0x113fdd)['addEventListener']('click', function() {
                        client['kick_team'](0x6);
                    }, ![]);
                    break;
                case 0x7:
                    document['getElementById']('eject_member' + _0x113fdd)['addEventListener']('click', function() {
                        client['kick_team'](0x7);
                    }, ![]);
                    break;
                case 0x8:
                    document['getElementById']('eject_member' + _0x113fdd)['addEventListener']('click', function() {
                        client['kick_team'](0x8);
                    }, ![]);
                    break;
            }
        }
    }, this['team_buttons'] = [], this['team_buttons'][CLIENT['TEAM_LEAVE']] = {
        'button': gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['TEAM_BUTTON']]),
        'action': this['leave_team']
    }, this['team_buttons'][CLIENT['TEAM_JOIN']] = {
        'button': gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['TEAM_BUTTON']]),
        'action': client['join_team']
    }, this['team_buttons'][CLIENT['TEAM_MANAGE']] = {
        'button': gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['MANAGE_TEAM_BUTTON']]),
        'action': this['manage_team']
    }, this['team_buttons'][CLIENT['TEAM_SHOW']] = {
        'button': gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['SHOW_TEAM_BUTTON']]),
        'action': this['show_team']
    }, this['team_buttons'][CLIENT['TEAM_FULL']] = {
        'button': gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['FULL_TEAM_BUTTON']]),
        'action': function() {}
    }, this['team_buttons_id'] = -0x1, this['bread_oven_wood_button'] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['BREAD_OVEN_WOOD']]), this['bread_oven_bread_button'] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['BREAD_OVEN_BREAD']]), this['bread_oven_flour_button'] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['WINDMILL_FLOUR']]), this['windmill_wheat_button'] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['WINDMILL_WHEAT_SEED']]), this['windmill_flour_button'] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['WINDMILL_FLOUR']]), this['extractor_wood_button'] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_WOOD']]), this['extractor_stone_button'] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_STONE']]), this['extractor_gold_button'] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_GOLD']]), this['extractor_diamond_button'] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_DIAMOND']]), this['extractor_amethyst_button'] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_AMETHYST']]), this['extractor_reidite_button'] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_REIDITE']]), this['furnace_button'] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['FURNACE_BUTTON']]), this['chest_padlock'] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['PADLOCK']]), this['chest_lockpick'] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['KEY']]), this['chest_locked'] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['LOCKED']]), this['resurrection'] = gui_create_button(0x78, 0x78, '', sprite[SPRITE['DRAGON_HEART']]), this['resurrection']['info']['translate']['x'] = 0xa, this['resurrection']['info']['translate']['y'] = 0xa, this['chest_buttons'] = [], this['chest_buttons'][INV['SWORD']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_SWORD']], 0x3), this['chest_buttons'][INV['SWORD']]['id'] = INV['SWORD'], this['chest_buttons'][INV['PICK']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_PICK']], 0x3), this['chest_buttons'][INV['PICK']]['id'] = INV['PICK'], this['chest_buttons'][INV['STONE']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_STONE']], 0x3), this['chest_buttons'][INV['STONE']]['id'] = INV['STONE'], this['chest_buttons'][INV['WOOD']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_WOOD']], 0x3), this['chest_buttons'][INV['WOOD']]['id'] = INV['WOOD'], this['chest_buttons'][INV['PLANT']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_PLANT']], 0x3), this['chest_buttons'][INV['PLANT']]['id'] = INV['PLANT'], this['chest_buttons'][INV['CACTUS']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_CACTUS']], 0x3), this['chest_buttons'][INV['CACTUS']]['id'] = INV['CACTUS'], this['chest_buttons'][INV['GOLD']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_GOLD']], 0x3), this['chest_buttons'][INV['GOLD']]['id'] = INV['GOLD'], this['chest_buttons'][INV['DIAMOND']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_DIAMOND']], 0x3), this['chest_buttons'][INV['DIAMOND']]['id'] = INV['DIAMOND'], this['chest_buttons'][INV['PICK_GOLD']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_PICK_GOLD']], 0x3), this['chest_buttons'][INV['PICK_GOLD']]['id'] = INV['PICK_GOLD'], this['chest_buttons'][INV['PICK_DIAMOND']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_PICK_DIAMOND']], 0x3), this['chest_buttons'][INV['PICK_DIAMOND']]['id'] = INV['PICK_DIAMOND'], this['chest_buttons'][INV['SWORD_GOLD']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_SWORD_GOLD']], 0x3), this['chest_buttons'][INV['SWORD_GOLD']]['id'] = INV['SWORD_GOLD'], this['chest_buttons'][INV['SWORD_WOOD']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_SWORD_WOOD']], 0x3), this['chest_buttons'][INV['SWORD_WOOD']]['id'] = INV['SWORD_WOOD'], this['chest_buttons'][INV['SWORD_DIAMOND']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_SWORD_DIAMOND']], 0x3), this['chest_buttons'][INV['SWORD_DIAMOND']]['id'] = INV['SWORD_DIAMOND'], this['chest_buttons'][INV['FIRE']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_FIRE']], 0x3), this['chest_buttons'][INV['FIRE']]['id'] = INV['FIRE'], this['chest_buttons'][INV['WORKBENCH']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_WORKBENCH']], 0x3), this['chest_buttons'][INV['WORKBENCH']]['id'] = INV['WORKBENCH'], this['chest_buttons'][INV['SEED']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_SEED']], 0x3), this['chest_buttons'][INV['SEED']]['id'] = INV['SEED'], this['chest_buttons'][INV['WALL']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_WALL']], 0x3), this['chest_buttons'][INV['WALL']]['id'] = INV['WALL'], this['chest_buttons'][INV['SPIKE']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_SPIKE']], 0x3), this['chest_buttons'][INV['SPIKE']]['id'] = INV['SPIKE'], this['chest_buttons'][INV['PICK_WOOD']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_PICK_WOOD']], 0x3), this['chest_buttons'][INV['PICK_WOOD']]['id'] = INV['PICK_WOOD'], this['chest_buttons'][INV['COOKED_MEAT']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_COOKED_MEAT']], 0x3), this['chest_buttons'][INV['COOKED_MEAT']]['id'] = INV['COOKED_MEAT'], this['chest_buttons'][INV['MEAT']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_MEAT']], 0x3), this['chest_buttons'][INV['MEAT']]['id'] = INV['MEAT'], this['chest_buttons'][INV['BIG_FIRE']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_BIG_FIRE']], 0x3), this['chest_buttons'][INV['BIG_FIRE']]['id'] = INV['BIG_FIRE'], this['chest_buttons'][INV['BANDAGE']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_BANDAGE']], 0x3), this['chest_buttons'][INV['BANDAGE']]['id'] = INV['BANDAGE'], this['chest_buttons'][INV['CORD']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_CORD']], 0x3), this['chest_buttons'][INV['CORD']]['id'] = INV['CORD'], this['chest_buttons'][INV['STONE_WALL']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_STONE_WALL']], 0x3), this['chest_buttons'][INV['STONE_WALL']]['id'] = INV['STONE_WALL'], this['chest_buttons'][INV['GOLD_WALL']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_GOLD_WALL']], 0x3), this['chest_buttons'][INV['GOLD_WALL']]['id'] = INV['GOLD_WALL'], this['chest_buttons'][INV['DIAMOND_WALL']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_DIAMOND_WALL']], 0x3), this['chest_buttons'][INV['DIAMOND_WALL']]['id'] = INV['DIAMOND_WALL'], this['chest_buttons'][INV['WOOD_DOOR']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_DOOR_WOOD_CLOSE']], 0x3), this['chest_buttons'][INV['WOOD_DOOR']]['id'] = INV['WOOD_DOOR'], this['chest_buttons'][INV['CHEST']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_CHEST']], 0x3), this['chest_buttons'][INV['CHEST']]['id'] = INV['CHEST'], this['chest_buttons'][INV['STONE_SPIKE']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_STONE_SPIKE']], 0x3), this['chest_buttons'][INV['STONE_SPIKE']]['id'] = INV['STONE_SPIKE'], this['chest_buttons'][INV['GOLD_SPIKE']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_GOLD_SPIKE']], 0x3), this['chest_buttons'][INV['GOLD_SPIKE']]['id'] = INV['GOLD_SPIKE'], this['chest_buttons'][INV['DIAMOND_SPIKE']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_DIAMOND_SPIKE']], 0x3), this['chest_buttons'][INV['DIAMOND_SPIKE']]['id'] = INV['DIAMOND_SPIKE'], this['chest_buttons'][INV['FUR']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_FUR']], 0x3), this['chest_buttons'][INV['FUR']]['id'] = INV['FUR'], this['chest_buttons'][INV['FUR_BOAR']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_FUR_BOAR']], 0x3), this['chest_buttons'][INV['FUR_BOAR']]['id'] = INV['FUR_BOAR'], this['chest_buttons'][INV['FUR_WOLF']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_FUR_WOLF']], 0x3), this['chest_buttons'][INV['FUR_WOLF']]['id'] = INV['FUR_WOLF'], this['chest_buttons'][INV['PENGUIN_FEATHER']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_PENGUIN_FEATHER']], 0x3), this['chest_buttons'][INV['PENGUIN_FEATHER']]['id'] = INV['PENGUIN_FEATHER'], this['chest_buttons'][INV['HAWK_FEATHER']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_HAWK_FEATHER']], 0x3), this['chest_buttons'][INV['HAWK_FEATHER']]['id'] = INV['HAWK_FEATHER'], this['chest_buttons'][INV['VULTURE_FEATHER']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_VULTURE_FEATHER']], 0x3), this['chest_buttons'][INV['VULTURE_FEATHER']]['id'] = INV['VULTURE_FEATHER'], this['chest_buttons'][INV['EMERALD']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_EMERALD']], 0x3), this['chest_buttons'][INV['EMERALD']]['id'] = INV['EMERALD'], this['chest_buttons'][INV['EARMUFFS']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_EARMUFFS']], 0x3), this['chest_buttons'][INV['EARMUFFS']]['id'] = INV['EARMUFFS'], this['chest_buttons'][INV['STONE_DOOR']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_DOOR_STONE_CLOSE']], 0x3), this['chest_buttons'][INV['STONE_DOOR']]['id'] = INV['STONE_DOOR'], this['chest_buttons'][INV['GOLD_DOOR']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_DOOR_GOLD_CLOSE']], 0x3), this['chest_buttons'][INV['GOLD_DOOR']]['id'] = INV['GOLD_DOOR'], this['chest_buttons'][INV['DIAMOND_DOOR']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_DOOR_DIAMOND_CLOSE']], 0x3), this['chest_buttons'][INV['DIAMOND_DOOR']]['id'] = INV['DIAMOND_DOOR'], this['chest_buttons'][INV['COAT']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_COAT']], 0x3), this['chest_buttons'][INV['COAT']]['id'] = INV['COAT'], this['chest_buttons'][INV['WOOD_SPEAR']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_WOOD_SPEAR']], 0x3), this['chest_buttons'][INV['WOOD_SPEAR']]['id'] = INV['WOOD_SPEAR'], this['chest_buttons'][INV['SPEAR']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_SPEAR']], 0x3), this['chest_buttons'][INV['SPEAR']]['id'] = INV['SPEAR'], this['chest_buttons'][INV['GOLD_SPEAR']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_GOLD_SPEAR']], 0x3), this['chest_buttons'][INV['GOLD_SPEAR']]['id'] = INV['GOLD_SPEAR'], this['chest_buttons'][INV['DIAMOND_SPEAR']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_DIAMOND_SPEAR']], 0x3), this['chest_buttons'][INV['DIAMOND_SPEAR']]['id'] = INV['DIAMOND_SPEAR'], this['chest_buttons'][INV['DRAGON_SPEAR']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_DRAGON_SPEAR']], 0x3), this['chest_buttons'][INV['DRAGON_SPEAR']]['id'] = INV['DRAGON_SPEAR'], this['chest_buttons'][INV['FURNACE']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_FURNACE']], 0x3), this['chest_buttons'][INV['FURNACE']]['id'] = INV['FURNACE'], this['chest_buttons'][INV['EXPLORER_HAT']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_EXPLORER_HAT']], 0x3), this['chest_buttons'][INV['EXPLORER_HAT']]['id'] = INV['EXPLORER_HAT'], this['chest_buttons'][INV['PIRATE_HAT']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_PIRATE_HAT']], 0x3), this['chest_buttons'][INV['PIRATE_HAT']]['id'] = INV['PIRATE_HAT'], this['chest_buttons'][INV['FLOWER_HAT']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_FLOWER_HAT']], 0x3), this['chest_buttons'][INV['FLOWER_HAT']]['id'] = INV['FLOWER_HAT'], this['chest_buttons'][INV['FUR_HAT']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_FUR_HAT']], 0x3), this['chest_buttons'][INV['FUR_HAT']]['id'] = INV['FUR_HAT'], this['chest_buttons'][INV['TURBAN1']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_TURBAN1']], 0x3), this['chest_buttons'][INV['TURBAN1']]['id'] = INV['TURBAN1'], this['chest_buttons'][INV['TURBAN2']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_TURBAN2']], 0x3), this['chest_buttons'][INV['TURBAN2']]['id'] = INV['TURBAN2'], this['chest_buttons'][INV['WOOD_ARROW']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_WOOD_ARROW']], 0x3), this['chest_buttons'][INV['WOOD_ARROW']]['id'] = INV['WOOD_ARROW'], this['chest_buttons'][INV['WOOD_BOW']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_WOOD_BOW']], 0x3), this['chest_buttons'][INV['WOOD_BOW']]['id'] = INV['WOOD_BOW'], this['chest_buttons'][INV['WOOD_SHIELD']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_WOOD_SHIELD']], 0x3), this['chest_buttons'][INV['WOOD_SHIELD']]['id'] = INV['WOOD_SHIELD'], this['chest_buttons'][INV['STONE_ARROW']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_STONE_ARROW']], 0x3), this['chest_buttons'][INV['STONE_ARROW']]['id'] = INV['STONE_ARROW'], this['chest_buttons'][INV['STONE_BOW']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_STONE_BOW']], 0x3), this['chest_buttons'][INV['STONE_BOW']]['id'] = INV['STONE_BOW'], this['chest_buttons'][INV['STONE_SHIELD']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_STONE_SHIELD']], 0x3), this['chest_buttons'][INV['STONE_SHIELD']]['id'] = INV['STONE_SHIELD'], this['chest_buttons'][INV['GOLD_ARROW']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_GOLD_ARROW']], 0x3), this['chest_buttons'][INV['GOLD_ARROW']]['id'] = INV['GOLD_ARROW'], this['chest_buttons'][INV['GOLD_BOW']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_GOLD_BOW']], 0x3), this['chest_buttons'][INV['GOLD_BOW']]['id'] = INV['GOLD_BOW'], this['chest_buttons'][INV['GOLD_SHIELD']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_GOLD_SHIELD']], 0x3), this['chest_buttons'][INV['GOLD_SHIELD']]['id'] = INV['GOLD_SHIELD'], this['chest_buttons'][INV['DIAMOND_ARROW']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_DIAMOND_ARROW']], 0x3), this['chest_buttons'][INV['DIAMOND_ARROW']]['id'] = INV['DIAMOND_ARROW'], this['chest_buttons'][INV['DIAMOND_BOW']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_DIAMOND_BOW']], 0x3), this['chest_buttons'][INV['DIAMOND_BOW']]['id'] = INV['DIAMOND_BOW'], this['chest_buttons'][INV['DIAMOND_SHIELD']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_DIAMOND_SHIELD']], 0x3), this['chest_buttons'][INV['DIAMOND_SHIELD']]['id'] = INV['DIAMOND_SHIELD'], this['chest_buttons'][INV['AMETHYST_ARROW']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_AMETHYST_ARROW']], 0x3), this['chest_buttons'][INV['AMETHYST_ARROW']]['id'] = INV['AMETHYST_ARROW'], this['chest_buttons'][INV['AMETHYST_BOW']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_AMETHYST_BOW']], 0x3), this['chest_buttons'][INV['AMETHYST_BOW']]['id'] = INV['AMETHYST_BOW'], this['chest_buttons'][INV['AMETHYST_SHIELD']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_AMETHYST_SHIELD']], 0x3), this['chest_buttons'][INV['AMETHYST_SHIELD']]['id'] = INV['AMETHYST_SHIELD'], this['chest_buttons'][INV['REIDITE_ARROW']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_REIDITE_ARROW']], 0x3), this['chest_buttons'][INV['REIDITE_ARROW']]['id'] = INV['REIDITE_ARROW'], this['chest_buttons'][INV['REIDITE_BOW']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_REIDITE_BOW']], 0x3), this['chest_buttons'][INV['REIDITE_BOW']]['id'] = INV['REIDITE_BOW'], this['chest_buttons'][INV['REIDITE_SHIELD']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_REIDITE_SHIELD']], 0x3), this['chest_buttons'][INV['REIDITE_SHIELD']]['id'] = INV['REIDITE_SHIELD'], this['chest_buttons'][INV['DRAGON_ARROW']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_DRAGON_ARROW']], 0x3), this['chest_buttons'][INV['DRAGON_ARROW']]['id'] = INV['DRAGON_ARROW'], this['chest_buttons'][INV['DRAGON_BOW']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_DRAGON_BOW']], 0x3), this['chest_buttons'][INV['DRAGON_BOW']]['id'] = INV['DRAGON_BOW'], this['chest_buttons'][INV['WOOD_HELMET']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_WOOD_HELMET']], 0x3), this['chest_buttons'][INV['WOOD_HELMET']]['id'] = INV['WOOD_HELMET'], this['chest_buttons'][INV['STONE_HELMET']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_STONE_HELMET']], 0x3), this['chest_buttons'][INV['STONE_HELMET']]['id'] = INV['STONE_HELMET'], this['chest_buttons'][INV['GOLD_HELMET']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_GOLD_HELMET']], 0x3), this['chest_buttons'][INV['GOLD_HELMET']]['id'] = INV['GOLD_HELMET'], this['chest_buttons'][INV['DIAMOND_HELMET']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_DIAMOND_HELMET']], 0x3), this['chest_buttons'][INV['DIAMOND_HELMET']]['id'] = INV['DIAMOND_HELMET'], this['chest_buttons'][INV['BOOK']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_BOOK']], 0x3), this['chest_buttons'][INV['BOOK']]['id'] = INV['BOOK'], this['chest_buttons'][INV['PAPER']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_PAPER']], 0x3), this['chest_buttons'][INV['PAPER']]['id'] = INV['PAPER'], this['chest_buttons'][INV['BAG']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_BAG']], 0x3), this['chest_buttons'][INV['BAG']]['id'] = INV['BAG'], this['chest_buttons'][INV['AMETHYST']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_AMETHYST']], 0x3), this['chest_buttons'][INV['AMETHYST']]['id'] = INV['AMETHYST'], this['chest_buttons'][INV['SWORD_AMETHYST']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_SWORD_AMETHYST']], 0x3), this['chest_buttons'][INV['SWORD_AMETHYST']]['id'] = INV['SWORD_AMETHYST'], this['chest_buttons'][INV['PIRATE_SWORD']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_PIRATE_SWORD']], 0x3), this['chest_buttons'][INV['PIRATE_SWORD']]['id'] = INV['PIRATE_SWORD'], this['chest_buttons'][INV['PICK_AMETHYST']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_PICK_AMETHYST']], 0x3), this['chest_buttons'][INV['PICK_AMETHYST']]['id'] = INV['PICK_AMETHYST'], this['chest_buttons'][INV['PICK_REIDITE']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_PICK_REIDITE']], 0x3), this['chest_buttons'][INV['PICK_REIDITE']]['id'] = INV['PICK_REIDITE'], this['chest_buttons'][INV['AMETHYST_SPEAR']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_AMETHYST_SPEAR']], 0x3), this['chest_buttons'][INV['AMETHYST_SPEAR']]['id'] = INV['AMETHYST_SPEAR'], this['chest_buttons'][INV['HAMMER']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_HAMMER']], 0x3), this['chest_buttons'][INV['HAMMER']]['id'] = INV['HAMMER'], this['chest_buttons'][INV['HAMMER_GOLD']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_HAMMER_GOLD']], 0x3), this['chest_buttons'][INV['HAMMER_GOLD']]['id'] = INV['HAMMER_GOLD'], this['chest_buttons'][INV['HAMMER_DIAMOND']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_HAMMER_DIAMOND']], 0x3), this['chest_buttons'][INV['HAMMER_DIAMOND']]['id'] = INV['HAMMER_DIAMOND'], this['chest_buttons'][INV['HAMMER_AMETHYST']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_HAMMER_AMETHYST']], 0x3), this['chest_buttons'][INV['HAMMER_AMETHYST']]['id'] = INV['HAMMER_AMETHYST'], this['chest_buttons'][INV['HAMMER_REIDITE']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_HAMMER_REIDITE']], 0x3), this['chest_buttons'][INV['HAMMER_REIDITE']]['id'] = INV['HAMMER_REIDITE'], this['chest_buttons'][INV['AMETHYST_WALL']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_AMETHYST_WALL']], 0x3), this['chest_buttons'][INV['AMETHYST_WALL']]['id'] = INV['AMETHYST_WALL'], this['chest_buttons'][INV['AMETHYST_SPIKE']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_AMETHYST_SPIKE']], 0x3), this['chest_buttons'][INV['AMETHYST_SPIKE']]['id'] = INV['AMETHYST_SPIKE'], this['chest_buttons'][INV['AMETHYST_DOOR']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_DOOR_AMETHYST_CLOSE']], 0x3), this['chest_buttons'][INV['AMETHYST_DOOR']]['id'] = INV['AMETHYST_DOOR'], this['chest_buttons'][INV['CAP_SCARF']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_CAP_SCARF']], 0x3), this['chest_buttons'][INV['CAP_SCARF']]['id'] = INV['CAP_SCARF'], this['chest_buttons'][INV['FUR_WINTER']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_FUR_WINTER']], 0x3), this['chest_buttons'][INV['FUR_WINTER']]['id'] = INV['FUR_WINTER'], this['chest_buttons'][INV['FUR_MAMMOTH']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_FUR_MAMMOTH']], 0x3), this['chest_buttons'][INV['FUR_MAMMOTH']]['id'] = INV['FUR_MAMMOTH'], this['chest_buttons'][INV['BLUE_CORD']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_BLUE_CORD']], 0x3), this['chest_buttons'][INV['BLUE_CORD']]['id'] = INV['BLUE_CORD'], this['chest_buttons'][INV['LOCK']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_LOCK']], 0x3), this['chest_buttons'][INV['LOCK']]['id'] = INV['LOCK'], this['chest_buttons'][INV['DRAGON_HEART']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_DRAGON_HEART']], 0x3), this['chest_buttons'][INV['DRAGON_HEART']]['id'] = INV['DRAGON_HEART'], this['chest_buttons'][INV['LAVA_HEART']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_LAVA_HEART']], 0x3), this['chest_buttons'][INV['LAVA_HEART']]['id'] = INV['LAVA_HEART'], this['chest_buttons'][INV['RESURRECTION']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_RESURRECTION']], 0x3), this['chest_buttons'][INV['RESURRECTION']]['id'] = INV['RESURRECTION'], this['chest_buttons'][INV['LOCKPICK']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_LOCKPICK']], 0x3), this['chest_buttons'][INV['LOCKPICK']]['id'] = INV['LOCKPICK'], this['chest_buttons'][INV['TOTEM']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_TOTEM']], 0x3), this['chest_buttons'][INV['TOTEM']]['id'] = INV['TOTEM'], this['chest_buttons'][INV['AMETHYST_HELMET']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_AMETHYST_HELMET']], 0x3), this['chest_buttons'][INV['AMETHYST_HELMET']]['id'] = INV['AMETHYST_HELMET'], this['chest_buttons'][INV['SUPER_HAMMER']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_SUPER_HAMMER']], 0x3), this['chest_buttons'][INV['SUPER_HAMMER']]['id'] = INV['SUPER_HAMMER'], this['chest_buttons'][INV['BRIDGE']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_BRIDGE']], 0x3), this['chest_buttons'][INV['BRIDGE']]['id'] = INV['BRIDGE'], this['chest_buttons'][INV['WOOD_TOWER']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_WOOD_TOWER']], 0x3), this['chest_buttons'][INV['WOOD_TOWER']]['id'] = INV['WOOD_TOWER'], this['chest_buttons'][INV['BOAT']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_BOAT']], 0x3), this['chest_buttons'][INV['BOAT']]['id'] = INV['BOAT'], this['chest_buttons'][INV['SLED']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_SLED']], 0x3), this['chest_buttons'][INV['SLED']]['id'] = INV['SLED'], this['chest_buttons'][INV['PLANE']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_PLANE']], 0x3), this['chest_buttons'][INV['PLANE']]['id'] = INV['PLANE'], this['chest_buttons'][INV['SADDLE']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_SADDLE']], 0x3), this['chest_buttons'][INV['SADDLE']]['id'] = INV['SADDLE'], this['chest_buttons'][INV['MOUNT_BOAR']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_MOUNT_BOAR']], 0x3), this['chest_buttons'][INV['MOUNT_BOAR']]['id'] = INV['MOUNT_BOAR'], this['chest_buttons'][INV['BABY_DRAGON']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_BABY_DRAGON']], 0x3), this['chest_buttons'][INV['BABY_DRAGON']]['id'] = INV['BABY_DRAGON'], this['chest_buttons'][INV['BABY_MAMMOTH']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_BABY_MAMMOTH']], 0x3), this['chest_buttons'][INV['BABY_MAMMOTH']]['id'] = INV['BABY_MAMMOTH'], this['chest_buttons'][INV['BABY_LAVA']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_BABY_LAVA']], 0x3), this['chest_buttons'][INV['BABY_LAVA']]['id'] = INV['BABY_LAVA'], this['chest_buttons'][INV['HAWK']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_HAWK']], 0x3), this['chest_buttons'][INV['HAWK']]['id'] = INV['HAWK'], this['chest_buttons'][INV['CRAB_BOSS']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_CRAB_BOSS']], 0x3), this['chest_buttons'][INV['CRAB_BOSS']]['id'] = INV['CRAB_BOSS'], this['chest_buttons'][INV['SAND']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_SAND']], 0x3), this['chest_buttons'][INV['SAND']]['id'] = INV['SAND'], this['chest_buttons'][INV['BOTTLE_FULL']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_BOTTLE_FULL']], 0x3), this['chest_buttons'][INV['BOTTLE_FULL']]['id'] = INV['BOTTLE_FULL'], this['chest_buttons'][INV['BOTTLE_EMPTY']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_BOTTLE_EMPTY']], 0x3), this['chest_buttons'][INV['BOTTLE_EMPTY']]['id'] = INV['BOTTLE_EMPTY'], this['chest_buttons'][INV['SHOVEL']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_SHOVEL']], 0x3), this['chest_buttons'][INV['SHOVEL']]['id'] = INV['SHOVEL'], this['chest_buttons'][INV['SHOVEL_GOLD']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_SHOVEL_GOLD']], 0x3), this['chest_buttons'][INV['SHOVEL_GOLD']]['id'] = INV['SHOVEL_GOLD'], this['chest_buttons'][INV['SHOVEL_DIAMOND']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_SHOVEL_DIAMOND']], 0x3), this['chest_buttons'][INV['SHOVEL_DIAMOND']]['id'] = INV['SHOVEL_DIAMOND'], this['chest_buttons'][INV['SHOVEL_AMETHYST']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_SHOVEL_AMETHYST']], 0x3), this['chest_buttons'][INV['SHOVEL_AMETHYST']]['id'] = INV['SHOVEL_AMETHYST'], this['chest_buttons'][INV['SPANNER']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_SPANNER']], 0x3), this['chest_buttons'][INV['SPANNER']]['id'] = INV['SPANNER'], this['chest_buttons'][INV['KRAKEN_SKIN']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_KRAKEN_SKIN']], 0x3), this['chest_buttons'][INV['KRAKEN_SKIN']]['id'] = INV['KRAKEN_SKIN'], this['chest_buttons'][INV['WATERING_CAN']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_WATERING_CAN']], 0x3), this['chest_buttons'][INV['WATERING_CAN']]['id'] = INV['WATERING_CAN'], this['chest_buttons'][INV['FLOUR']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_FLOUR']], 0x3), this['chest_buttons'][INV['FLOUR']]['id'] = INV['FLOUR'], this['chest_buttons'][INV['WHEAT_SEED']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_WHEAT_SEED']], 0x3), this['chest_buttons'][INV['WHEAT_SEED']]['id'] = INV['WHEAT_SEED'], this['chest_buttons'][INV['COOKIE']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_COOKIE']], 0x3), this['chest_buttons'][INV['COOKIE']]['id'] = INV['COOKIE'], this['chest_buttons'][INV['WILD_WHEAT']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_WILD_WHEAT']], 0x3), this['chest_buttons'][INV['WILD_WHEAT']]['id'] = INV['WILD_WHEAT'], this['chest_buttons'][INV['WINDMILL']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_WINDMILL']], 0x3), this['chest_buttons'][INV['WINDMILL']]['id'] = INV['WINDMILL'], this['chest_buttons'][INV['SUPER_DIVING_SUIT']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_SUPER_DIVING_SUIT']], 0x3), this['chest_buttons'][INV['SUPER_DIVING_SUIT']]['id'] = INV['SUPER_DIVING_SUIT'], this['chest_buttons'][INV['DIVING_MASK']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_DIVING_MASK']], 0x3), this['chest_buttons'][INV['DIVING_MASK']]['id'] = INV['DIVING_MASK'], this['chest_buttons'][INV['WATERING_CAN_FULL']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_WATERING_CAN_FULL']], 0x3), this['chest_buttons'][INV['WATERING_CAN_FULL']]['id'] = INV['WATERING_CAN_FULL'], this['chest_buttons'][INV['CAKE']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_CAKE']], 0x3), this['chest_buttons'][INV['CAKE']]['id'] = INV['CAKE'], this['chest_buttons'][INV['BREAD']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_BREAD']], 0x3), this['chest_buttons'][INV['BREAD']]['id'] = INV['BREAD'], this['chest_buttons'][INV['FOODFISH']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_FOODFISH']], 0x3), this['chest_buttons'][INV['FOODFISH']]['id'] = INV['FOODFISH'], this['chest_buttons'][INV['FOODFISH_COOKED']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_FOODFISH_COOKED']], 0x3), this['chest_buttons'][INV['FOODFISH_COOKED']]['id'] = INV['FOODFISH_COOKED'], this['chest_buttons'][INV['SCALES']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_SCALES']], 0x3), this['chest_buttons'][INV['SCALES']]['id'] = INV['SCALES'], this['chest_buttons'][INV['GROUND']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_GROUND']], 0x3), this['chest_buttons'][INV['GROUND']]['id'] = INV['GROUND'], this['chest_buttons'][INV['PLOT']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_PLOT']], 0x3), this['chest_buttons'][INV['PLOT']]['id'] = INV['PLOT'], this['chest_buttons'][INV['ICE']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_ICE']], 0x3), this['chest_buttons'][INV['ICE']]['id'] = INV['ICE'], this['chest_buttons'][INV['BREAD_OVEN']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_BREAD_OVEN']], 0x3), this['chest_buttons'][INV['BREAD_OVEN']]['id'] = INV['BREAD_OVEN'], this['chest_buttons'][INV['SANDWICH']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_SANDWICH']], 0x3), this['chest_buttons'][INV['SANDWICH']]['id'] = INV['SANDWICH'], this['chest_buttons'][INV['DRAGON_HELMET']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_DRAGON_HELMET']], 0x3), this['chest_buttons'][INV['DRAGON_HELMET']]['id'] = INV['DRAGON_HELMET'], this['chest_buttons'][INV['DRAGON_SWORD']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_DRAGON_SWORD']], 0x3), this['chest_buttons'][INV['DRAGON_SWORD']]['id'] = INV['DRAGON_SWORD'], this['chest_buttons'][INV['DRAGON_ORB']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_DRAGON_ORB']], 0x3), this['chest_buttons'][INV['DRAGON_ORB']]['id'] = INV['DRAGON_ORB'], this['chest_buttons'][INV['DRAGON_CUBE']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_DRAGON_CUBE']], 0x3), this['chest_buttons'][INV['DRAGON_CUBE']]['id'] = INV['DRAGON_CUBE'], this['chest_buttons'][INV['LAVA_ORB']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_LAVA_ORB']], 0x3), this['chest_buttons'][INV['LAVA_ORB']]['id'] = INV['LAVA_ORB'], this['chest_buttons'][INV['LAVA_CUBE']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_LAVA_CUBE']], 0x3), this['chest_buttons'][INV['LAVA_CUBE']]['id'] = INV['LAVA_CUBE'], this['chest_buttons'][INV['CROWN_GREEN']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_CROWN_GREEN']], 0x3), this['chest_buttons'][INV['CROWN_GREEN']]['id'] = INV['CROWN_GREEN'], this['chest_buttons'][INV['GEMME_GREEN']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_GEMME_GREEN']], 0x3), this['chest_buttons'][INV['GEMME_GREEN']]['id'] = INV['GEMME_GREEN'], this['chest_buttons'][INV['GEMME_ORANGE']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_GEMME_ORANGE']], 0x3), this['chest_buttons'][INV['GEMME_ORANGE']]['id'] = INV['GEMME_ORANGE'], this['chest_buttons'][INV['CROWN_ORANGE']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_CROWN_ORANGE']], 0x3), this['chest_buttons'][INV['CROWN_ORANGE']]['id'] = INV['CROWN_ORANGE'], this['chest_buttons'][INV['GEMME_BLUE']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_GEMME_BLUE']], 0x3), this['chest_buttons'][INV['GEMME_BLUE']]['id'] = INV['GEMME_BLUE'], this['chest_buttons'][INV['CROWN_BLUE']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_CROWN_BLUE']], 0x3), this['chest_buttons'][INV['CROWN_BLUE']]['id'] = INV['CROWN_BLUE'], this['chest_buttons'][INV['HOOD']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_HOOD']], 0x3), this['chest_buttons'][INV['HOOD']]['id'] = INV['HOOD'], this['chest_buttons'][INV['PEASANT']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_PEASANT']], 0x3), this['chest_buttons'][INV['PEASANT']]['id'] = INV['PEASANT'], this['chest_buttons'][INV['SPECIAL_FUR']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_SPECIAL_FUR']], 0x3), this['chest_buttons'][INV['SPECIAL_FUR']]['id'] = INV['SPECIAL_FUR'], this['chest_buttons'][INV['SPECIAL_FUR_2']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_SPECIAL_FUR_2']], 0x3), this['chest_buttons'][INV['SPECIAL_FUR_2']]['id'] = INV['SPECIAL_FUR_2'], this['chest_buttons'][INV['WINTER_PEASANT']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_WINTER_PEASANT']], 0x3), this['chest_buttons'][INV['WINTER_PEASANT']]['id'] = INV['WINTER_PEASANT'], this['chest_buttons'][INV['WINTER_HOOD']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_WINTER_HOOD']], 0x3), this['chest_buttons'][INV['WINTER_HOOD']]['id'] = INV['WINTER_HOOD'], this['chest_buttons'][INV['BUCKET_FULL']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_BUCKET_FULL']], 0x3), this['chest_buttons'][INV['BUCKET_FULL']]['id'] = INV['BUCKET_FULL'], this['chest_buttons'][INV['BUCKET_EMPTY']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_BUCKET_EMPTY']], 0x3), this['chest_buttons'][INV['BUCKET_EMPTY']]['id'] = INV['BUCKET_EMPTY'], this['chest_buttons'][INV['WELL']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_WELL']], 0x3), this['chest_buttons'][INV['WELL']]['id'] = INV['WELL'], this['chest_buttons'][INV['SIGN']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_SIGN']], 0x3), this['chest_buttons'][INV['SIGN']]['id'] = INV['SIGN'], this['chest_buttons'][INV['PUMPKIN_SEED']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_PUMPKIN_SEED']], 0x3), this['chest_buttons'][INV['PUMPKIN_SEED']]['id'] = INV['PUMPKIN_SEED'], this['chest_buttons'][INV['PUMPKIN']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_PUMPKIN']], 0x3), this['chest_buttons'][INV['PUMPKIN']]['id'] = INV['PUMPKIN'], this['chest_buttons'][INV['ROOF']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_ROOF']], 0x3), this['chest_buttons'][INV['ROOF']]['id'] = INV['ROOF'], this['chest_buttons'][INV['GARLIC_SEED']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_GARLIC_SEED']], 0x3), this['chest_buttons'][INV['GARLIC_SEED']]['id'] = INV['GARLIC_SEED'], this['chest_buttons'][INV['GARLIC']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_GARLIC']], 0x3), this['chest_buttons'][INV['GARLIC']]['id'] = INV['GARLIC'], this['chest_buttons'][INV['THORNBUSH_SEED']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_THORNBUSH_SEED']], 0x3), this['chest_buttons'][INV['THORNBUSH_SEED']]['id'] = INV['THORNBUSH_SEED'], this['chest_buttons'][INV['THORNBUSH']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_THORNBUSH']], 0x3), this['chest_buttons'][INV['THORNBUSH']]['id'] = INV['THORNBUSH'], this['chest_buttons'][INV['TOMATO_SEED']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_TOMATO_SEED']], 0x3), this['chest_buttons'][INV['TOMATO_SEED']]['id'] = INV['TOMATO_SEED'], this['chest_buttons'][INV['TOMATO']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_TOMATO']], 0x3), this['chest_buttons'][INV['TOMATO']]['id'] = INV['TOMATO'], this['chest_buttons'][INV['CARROT_SEED']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_CARROT_SEED']], 0x3), this['chest_buttons'][INV['CARROT_SEED']]['id'] = INV['CARROT_SEED'], this['chest_buttons'][INV['CARROT']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_CARROT']], 0x3), this['chest_buttons'][INV['CARROT']]['id'] = INV['CARROT'], this['chest_buttons'][INV['WATERMELON_SEED']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_WATERMELON_SEED']], 0x3), this['chest_buttons'][INV['WATERMELON_SEED']]['id'] = INV['WATERMELON_SEED'], this['chest_buttons'][INV['WATERMELON']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_WATERMELON']], 0x3), this['chest_buttons'][INV['WATERMELON']]['id'] = INV['WATERMELON'], this['chest_buttons'][INV['ALOE_VERA_SEED']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_ALOE_VERA_SEED']], 0x3), this['chest_buttons'][INV['ALOE_VERA_SEED']]['id'] = INV['ALOE_VERA_SEED'], this['chest_buttons'][INV['ALOE_VERA']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_ALOE_VERA']], 0x3), this['chest_buttons'][INV['ALOE_VERA']]['id'] = INV['ALOE_VERA'], this['chest_buttons'][INV['CHRISTMAS_HAT']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_CHRISTMAS_HAT']], 0x3), this['chest_buttons'][INV['CHRISTMAS_HAT']]['id'] = INV['CHRISTMAS_HAT'], this['chest_buttons'][INV['ELF_HAT']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_ELF_HAT']], 0x3), this['chest_buttons'][INV['ELF_HAT']]['id'] = INV['ELF_HAT'], this['chest_buttons'][INV['WOOD_SPEAR']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_WOOD_SPEAR']], 0x3), this['chest_buttons'][INV['WOOD_SPEAR']]['id'] = INV['WOOD_SPEAR'], this['chest_buttons'][INV['DRAGON_SPEAR']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_DRAGON_SPEAR']], 0x3), this['chest_buttons'][INV['DRAGON_SPEAR']]['id'] = INV['DRAGON_SPEAR'], this['chest_buttons'][INV['CRAB_STICK']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_CRAB_STICK']], 0x3), this['chest_buttons'][INV['CRAB_STICK']]['id'] = INV['CRAB_STICK'], this['chest_buttons'][INV['CRAB_SPEAR']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_CRAB_SPEAR']], 0x3), this['chest_buttons'][INV['CRAB_SPEAR']]['id'] = INV['CRAB_SPEAR'], this['chest_buttons'][INV['CRAB_LOOT']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_CRAB_LOOT']], 0x3), this['chest_buttons'][INV['CRAB_LOOT']]['id'] = INV['CRAB_LOOT'], this['chest_buttons'][INV['BED']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_BED']], 0x3), this['chest_buttons'][INV['BED']]['id'] = INV['BED'], this['chest_buttons'][INV['CROWN_CRAB']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_CROWN_CRAB']], 0x3), this['chest_buttons'][INV['CROWN_CRAB']]['id'] = INV['CROWN_CRAB'], this['chest_buttons'][INV['GARLAND']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_GARLAND']], 0x3), this['chest_buttons'][INV['GARLAND']]['id'] = INV['GARLAND'], this['chest_buttons'][INV['SUGAR_CAN']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_SUGAR_CAN']], 0x3), this['chest_buttons'][INV['SUGAR_CAN']]['id'] = INV['SUGAR_CAN'], this['chest_buttons'][INV['CANDY']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_CANDY']], 0x3), this['chest_buttons'][INV['CANDY']]['id'] = INV['CANDY'], this['plus_buttons'] = [];
    for (var _0x15fb80 = 0x0; _0x15fb80 < 0xfa; _0x15fb80++) this['plus_buttons'][_0x15fb80] = gui_create_button(0x0, 0x0, '', sprite[SPRITE['CHEST_PLUS']]);
    this['inv_buttons'] = [], this['inv_buttons'][INV['SWORD']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_SWORD']], 0x3), this['inv_buttons'][INV['SWORD']]['id'] = INV['SWORD'], this['inv_buttons'][INV['PICK']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_PICK']], 0x3), this['inv_buttons'][INV['PICK']]['id'] = INV['PICK'], this['inv_buttons'][INV['STONE']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_STONE']], 0x3), this['inv_buttons'][INV['STONE']]['id'] = INV['STONE'], this['inv_buttons'][INV['STONE']]['info']['img'][0x2] = this['inv_buttons'][INV['STONE']]['info']['img'][0x0], this['inv_buttons'][INV['WOOD']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_WOOD']], 0x3), this['inv_buttons'][INV['WOOD']]['id'] = INV['WOOD'], this['inv_buttons'][INV['WOOD']]['info']['img'][0x2] = this['inv_buttons'][INV['WOOD']]['info']['img'][0x0], this['inv_buttons'][INV['PLANT']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_PLANT']], 0x3), this['inv_buttons'][INV['PLANT']]['id'] = INV['PLANT'], this['inv_buttons'][INV['CACTUS']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_CACTUS']], 0x3), this['inv_buttons'][INV['CACTUS']]['id'] = INV['CACTUS'], this['inv_buttons'][INV['GOLD']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_GOLD']], 0x3), this['inv_buttons'][INV['GOLD']]['id'] = INV['GOLD'], this['inv_buttons'][INV['GOLD']]['info']['img'][0x2] = this['inv_buttons'][INV['GOLD']]['info']['img'][0x0], this['inv_buttons'][INV['DIAMOND']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_DIAMOND']], 0x3), this['inv_buttons'][INV['DIAMOND']]['id'] = INV['DIAMOND'], this['inv_buttons'][INV['DIAMOND']]['info']['img'][0x2] = this['inv_buttons'][INV['DIAMOND']]['info']['img'][0x0], this['inv_buttons'][INV['PICK_GOLD']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_PICK_GOLD']], 0x3), this['inv_buttons'][INV['PICK_GOLD']]['id'] = INV['PICK_GOLD'], this['inv_buttons'][INV['PICK_DIAMOND']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_PICK_DIAMOND']], 0x3), this['inv_buttons'][INV['PICK_DIAMOND']]['id'] = INV['PICK_DIAMOND'], this['inv_buttons'][INV['SWORD_GOLD']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_SWORD_GOLD']], 0x3), this['inv_buttons'][INV['SWORD_GOLD']]['id'] = INV['SWORD_GOLD'], this['inv_buttons'][INV['SWORD_WOOD']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_SWORD_WOOD']], 0x3), this['inv_buttons'][INV['SWORD_WOOD']]['id'] = INV['SWORD_WOOD'], this['inv_buttons'][INV['SWORD_DIAMOND']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_SWORD_DIAMOND']], 0x3), this['inv_buttons'][INV['SWORD_DIAMOND']]['id'] = INV['SWORD_DIAMOND'], this['inv_buttons'][INV['FIRE']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_FIRE']], 0x3), this['inv_buttons'][INV['FIRE']]['id'] = INV['FIRE'], this['inv_buttons'][INV['WORKBENCH']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_WORK']], 0x3), this['inv_buttons'][INV['WORKBENCH']]['id'] = INV['WORKBENCH'], this['inv_buttons'][INV['SEED']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_SEED']], 0x3), this['inv_buttons'][INV['SEED']]['id'] = INV['SEED'], this['inv_buttons'][INV['WALL']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_WALL']], 0x3), this['inv_buttons'][INV['WALL']]['id'] = INV['WALL'], this['inv_buttons'][INV['SPIKE']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_SPIKE']], 0x3), this['inv_buttons'][INV['SPIKE']]['id'] = INV['SPIKE'], this['inv_buttons'][INV['PICK_WOOD']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_PICK_WOOD']], 0x3), this['inv_buttons'][INV['PICK_WOOD']]['id'] = INV['PICK_WOOD'], this['inv_buttons'][INV['COOKED_MEAT']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_COOKED_MEAT']], 0x3), this['inv_buttons'][INV['COOKED_MEAT']]['id'] = INV['COOKED_MEAT'], this['inv_buttons'][INV['MEAT']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_MEAT']], 0x3), this['inv_buttons'][INV['MEAT']]['id'] = INV['MEAT'], this['inv_buttons'][INV['BIG_FIRE']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_BIG_FIRE']], 0x3), this['inv_buttons'][INV['BIG_FIRE']]['id'] = INV['BIG_FIRE'], this['inv_buttons'][INV['BANDAGE']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_BANDAGE']], 0x3), this['inv_buttons'][INV['BANDAGE']]['id'] = INV['BANDAGE'], this['inv_buttons'][INV['CORD']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_CORD']], 0x3), this['inv_buttons'][INV['CORD']]['id'] = INV['CORD'], this['inv_buttons'][INV['CORD']]['info']['img'][0x2] = this['inv_buttons'][INV['CORD']]['info']['img'][0x0], this['inv_buttons'][INV['STONE_WALL']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_STONE_WALL']], 0x3), this['inv_buttons'][INV['STONE_WALL']]['id'] = INV['STONE_WALL'], this['inv_buttons'][INV['GOLD_WALL']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_GOLD_WALL']], 0x3), this['inv_buttons'][INV['GOLD_WALL']]['id'] = INV['GOLD_WALL'], this['inv_buttons'][INV['DIAMOND_WALL']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_DIAMOND_WALL']], 0x3), this['inv_buttons'][INV['DIAMOND_WALL']]['id'] = INV['DIAMOND_WALL'], this['inv_buttons'][INV['WOOD_DOOR']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_DOOR_WOOD_CLOSE']], 0x3), this['inv_buttons'][INV['WOOD_DOOR']]['id'] = INV['WOOD_DOOR'], this['inv_buttons'][INV['CHEST']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_CHEST']], 0x3), this['inv_buttons'][INV['CHEST']]['id'] = INV['CHEST'], this['inv_buttons'][INV['STONE_SPIKE']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_STONE_SPIKE']], 0x3), this['inv_buttons'][INV['STONE_SPIKE']]['id'] = INV['STONE_SPIKE'], this['inv_buttons'][INV['GOLD_SPIKE']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_GOLD_SPIKE']], 0x3), this['inv_buttons'][INV['GOLD_SPIKE']]['id'] = INV['GOLD_SPIKE'], this['inv_buttons'][INV['DIAMOND_SPIKE']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_DIAMOND_SPIKE']], 0x3), this['inv_buttons'][INV['DIAMOND_SPIKE']]['id'] = INV['DIAMOND_SPIKE'], this['inv_buttons'][INV['BAG']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_BAG']], 0x3), this['inv_buttons'][INV['BAG']]['id'] = INV['BAG'], this['inv_buttons'][INV['EARMUFFS']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_EARMUFFS']], 0x3), this['inv_buttons'][INV['EARMUFFS']]['id'] = INV['EARMUFFS'], this['inv_buttons'][INV['STONE_DOOR']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_DOOR_STONE_CLOSE']], 0x3), this['inv_buttons'][INV['STONE_DOOR']]['id'] = INV['STONE_DOOR'], this['inv_buttons'][INV['GOLD_DOOR']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_DOOR_GOLD_CLOSE']], 0x3), this['inv_buttons'][INV['GOLD_DOOR']]['id'] = INV['GOLD_DOOR'], this['inv_buttons'][INV['DIAMOND_DOOR']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_DOOR_DIAMOND_CLOSE']], 0x3), this['inv_buttons'][INV['DIAMOND_DOOR']]['id'] = INV['DIAMOND_DOOR'], this['inv_buttons'][INV['FUR']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_FUR']], 0x3), this['inv_buttons'][INV['FUR']]['id'] = INV['FUR'], this['inv_buttons'][INV['FUR']]['info']['img'][0x2] = this['inv_buttons'][INV['FUR']]['info']['img'][0x0], this['inv_buttons'][INV['FUR_BOAR']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_FUR_BOAR']], 0x3), this['inv_buttons'][INV['FUR_BOAR']]['id'] = INV['FUR_BOAR'], this['inv_buttons'][INV['FUR_BOAR']]['info']['img'][0x2] = this['inv_buttons'][INV['FUR_BOAR']]['info']['img'][0x0], this['inv_buttons'][INV['FUR_WOLF']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_FUR_WOLF']], 0x3), this['inv_buttons'][INV['FUR_WOLF']]['id'] = INV['FUR_WOLF'], this['inv_buttons'][INV['FUR_WOLF']]['info']['img'][0x2] = this['inv_buttons'][INV['FUR_WOLF']]['info']['img'][0x0], this['inv_buttons'][INV['PENGUIN_FEATHER']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_PENGUIN_FEATHER']], 0x3), this['inv_buttons'][INV['PENGUIN_FEATHER']]['id'] = INV['PENGUIN_FEATHER'], this['inv_buttons'][INV['HAWK_FEATHER']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_HAWK_FEATHER']], 0x3), this['inv_buttons'][INV['HAWK_FEATHER']]['id'] = INV['HAWK_FEATHER'], this['inv_buttons'][INV['VULTURE_FEATHER']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_VULTURE_FEATHER']], 0x3), this['inv_buttons'][INV['VULTURE_FEATHER']]['id'] = INV['VULTURE_FEATHER'], this['inv_buttons'][INV['EMERALD']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_EMERALD']], 0x3), this['inv_buttons'][INV['EMERALD']]['id'] = INV['EMERALD'], this['inv_buttons'][INV['EARMUFFS']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_EARMUFFS']], 0x3), this['inv_buttons'][INV['EARMUFFS']]['id'] = INV['EARMUFFS'], this['inv_buttons'][INV['COAT']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_COAT']], 0x3), this['inv_buttons'][INV['COAT']]['id'] = INV['COAT'], this['inv_buttons'][INV['WOOD_SPEAR']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_WOOD_SPEAR']], 0x3), this['inv_buttons'][INV['WOOD_SPEAR']]['id'] = INV['WOOD_SPEAR'], this['inv_buttons'][INV['SPEAR']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_SPEAR']], 0x3), this['inv_buttons'][INV['SPEAR']]['id'] = INV['SPEAR'], this['inv_buttons'][INV['GOLD_SPEAR']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_GOLD_SPEAR']], 0x3), this['inv_buttons'][INV['GOLD_SPEAR']]['id'] = INV['GOLD_SPEAR'], this['inv_buttons'][INV['DIAMOND_SPEAR']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_DIAMOND_SPEAR']], 0x3), this['inv_buttons'][INV['DIAMOND_SPEAR']]['id'] = INV['DIAMOND_SPEAR'], this['inv_buttons'][INV['DRAGON_SPEAR']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_DRAGON_SPEAR']], 0x3), this['inv_buttons'][INV['DRAGON_SPEAR']]['id'] = INV['DRAGON_SPEAR'], this['inv_buttons'][INV['FURNACE']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_FURNACE']], 0x3), this['inv_buttons'][INV['FURNACE']]['id'] = INV['FURNACE'], this['inv_buttons'][INV['EXPLORER_HAT']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_EXPLORER_HAT']], 0x3), this['inv_buttons'][INV['EXPLORER_HAT']]['id'] = INV['EXPLORER_HAT'], this['inv_buttons'][INV['PIRATE_HAT']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_PIRATE_HAT']], 0x3), this['inv_buttons'][INV['PIRATE_HAT']]['id'] = INV['PIRATE_HAT'], this['inv_buttons'][INV['FLOWER_HAT']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_FLOWER_HAT']], 0x3), this['inv_buttons'][INV['FLOWER_HAT']]['id'] = INV['FLOWER_HAT'], this['inv_buttons'][INV['FUR_HAT']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_FUR_HAT']], 0x3), this['inv_buttons'][INV['FUR_HAT']]['id'] = INV['FUR_HAT'], this['inv_buttons'][INV['TURBAN1']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_TURBAN1']], 0x3), this['inv_buttons'][INV['TURBAN1']]['id'] = INV['TURBAN1'], this['inv_buttons'][INV['TURBAN2']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_TURBAN2']], 0x3), this['inv_buttons'][INV['TURBAN2']]['id'] = INV['TURBAN2'], this['inv_buttons'][INV['WOOD_BOW']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_WOOD_BOW']], 0x3), this['inv_buttons'][INV['WOOD_BOW']]['id'] = INV['WOOD_BOW'], this['inv_buttons'][INV['WOOD_ARROW']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_WOOD_ARROW']], 0x3), this['inv_buttons'][INV['WOOD_ARROW']]['id'] = INV['WOOD_ARROW'], this['inv_buttons'][INV['WOOD_SHIELD']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_WOOD_SHIELD']], 0x3), this['inv_buttons'][INV['WOOD_SHIELD']]['id'] = INV['WOOD_SHIELD'], this['inv_buttons'][INV['STONE_BOW']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_STONE_BOW']], 0x3), this['inv_buttons'][INV['STONE_BOW']]['id'] = INV['STONE_BOW'], this['inv_buttons'][INV['STONE_ARROW']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_STONE_ARROW']], 0x3), this['inv_buttons'][INV['STONE_ARROW']]['id'] = INV['STONE_ARROW'], this['inv_buttons'][INV['STONE_SHIELD']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_STONE_SHIELD']], 0x3), this['inv_buttons'][INV['STONE_SHIELD']]['id'] = INV['STONE_SHIELD'], this['inv_buttons'][INV['GOLD_BOW']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_GOLD_BOW']], 0x3), this['inv_buttons'][INV['GOLD_BOW']]['id'] = INV['GOLD_BOW'], this['inv_buttons'][INV['GOLD_ARROW']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_GOLD_ARROW']], 0x3), this['inv_buttons'][INV['GOLD_ARROW']]['id'] = INV['GOLD_ARROW'], this['inv_buttons'][INV['GOLD_SHIELD']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_GOLD_SHIELD']], 0x3), this['inv_buttons'][INV['GOLD_SHIELD']]['id'] = INV['GOLD_SHIELD'], this['inv_buttons'][INV['DIAMOND_BOW']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_DIAMOND_BOW']], 0x3), this['inv_buttons'][INV['DIAMOND_BOW']]['id'] = INV['DIAMOND_BOW'], this['inv_buttons'][INV['DIAMOND_ARROW']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_DIAMOND_ARROW']], 0x3), this['inv_buttons'][INV['DIAMOND_ARROW']]['id'] = INV['DIAMOND_ARROW'], this['inv_buttons'][INV['DIAMOND_SHIELD']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_DIAMOND_SHIELD']], 0x3), this['inv_buttons'][INV['DIAMOND_SHIELD']]['id'] = INV['DIAMOND_SHIELD'], this['inv_buttons'][INV['AMETHYST_BOW']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_AMETHYST_BOW']], 0x3), this['inv_buttons'][INV['AMETHYST_BOW']]['id'] = INV['AMETHYST_BOW'], this['inv_buttons'][INV['AMETHYST_ARROW']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_AMETHYST_ARROW']], 0x3), this['inv_buttons'][INV['AMETHYST_ARROW']]['id'] = INV['AMETHYST_ARROW'], this['inv_buttons'][INV['AMETHYST_SHIELD']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_AMETHYST_SHIELD']], 0x3), this['inv_buttons'][INV['AMETHYST_SHIELD']]['id'] = INV['AMETHYST_SHIELD'], this['inv_buttons'][INV['REIDITE_BOW']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_REIDITE_BOW']], 0x3), this['inv_buttons'][INV['REIDITE_BOW']]['id'] = INV['REIDITE_BOW'], this['inv_buttons'][INV['REIDITE_ARROW']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_REIDITE_ARROW']], 0x3), this['inv_buttons'][INV['REIDITE_ARROW']]['id'] = INV['REIDITE_ARROW'], this['inv_buttons'][INV['REIDITE_SHIELD']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_REIDITE_SHIELD']], 0x3), this['inv_buttons'][INV['REIDITE_SHIELD']]['id'] = INV['REIDITE_SHIELD'], this['inv_buttons'][INV['DRAGON_BOW']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_DRAGON_BOW']], 0x3), this['inv_buttons'][INV['DRAGON_BOW']]['id'] = INV['DRAGON_BOW'], this['inv_buttons'][INV['DRAGON_ARROW']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_DRAGON_ARROW']], 0x3), this['inv_buttons'][INV['DRAGON_ARROW']]['id'] = INV['DRAGON_ARROW'], this['inv_buttons'][INV['WOOD_HELMET']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_WOOD_HELMET']], 0x3), this['inv_buttons'][INV['WOOD_HELMET']]['id'] = INV['WOOD_HELMET'], this['inv_buttons'][INV['STONE_HELMET']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_STONE_HELMET']], 0x3), this['inv_buttons'][INV['STONE_HELMET']]['id'] = INV['STONE_HELMET'], this['inv_buttons'][INV['GOLD_HELMET']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_GOLD_HELMET']], 0x3), this['inv_buttons'][INV['GOLD_HELMET']]['id'] = INV['GOLD_HELMET'], this['inv_buttons'][INV['DIAMOND_HELMET']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_DIAMOND_HELMET']], 0x3), this['inv_buttons'][INV['DIAMOND_HELMET']]['id'] = INV['DIAMOND_HELMET'], this['inv_buttons'][INV['BOOK']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_BOOK']], 0x3), this['inv_buttons'][INV['BOOK']]['id'] = INV['BOOK'], this['inv_buttons'][INV['PAPER']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_PAPER']], 0x3), this['inv_buttons'][INV['PAPER']]['id'] = INV['PAPER'], this['inv_buttons'][INV['PAPER']]['info']['img'][0x2] = this['inv_buttons'][INV['PAPER']]['info']['img'][0x0], this['inv_buttons'][INV['BAG']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_BAG']], 0x3), this['inv_buttons'][INV['BAG']]['id'] = INV['BAG'], this['inv_buttons'][INV['AMETHYST']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_AMETHYST']], 0x3), this['inv_buttons'][INV['AMETHYST']]['id'] = INV['AMETHYST'], this['inv_buttons'][INV['AMETHYST']]['info']['img'][0x2] = this['inv_buttons'][INV['AMETHYST']]['info']['img'][0x0], this['inv_buttons'][INV['SWORD_AMETHYST']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_SWORD_AMETHYST']], 0x3), this['inv_buttons'][INV['SWORD_AMETHYST']]['id'] = INV['SWORD_AMETHYST'], this['inv_buttons'][INV['PIRATE_SWORD']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_PIRATE_SWORD']], 0x3), this['inv_buttons'][INV['PIRATE_SWORD']]['id'] = INV['PIRATE_SWORD'], this['inv_buttons'][INV['PICK_AMETHYST']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_PICK_AMETHYST']], 0x3), this['inv_buttons'][INV['PICK_AMETHYST']]['id'] = INV['PICK_AMETHYST'], this['inv_buttons'][INV['PICK_REIDITE']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_PICK_REIDITE']], 0x3), this['inv_buttons'][INV['PICK_REIDITE']]['id'] = INV['PICK_REIDITE'], this['inv_buttons'][INV['AMETHYST_SPEAR']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_AMETHYST_SPEAR']], 0x3), this['inv_buttons'][INV['AMETHYST_SPEAR']]['id'] = INV['AMETHYST_SPEAR'], this['inv_buttons'][INV['HAMMER']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_HAMMER']], 0x3), this['inv_buttons'][INV['HAMMER']]['id'] = INV['HAMMER'], this['inv_buttons'][INV['HAMMER_GOLD']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_HAMMER_GOLD']], 0x3), this['inv_buttons'][INV['HAMMER_GOLD']]['id'] = INV['HAMMER_GOLD'], this['inv_buttons'][INV['HAMMER_DIAMOND']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_HAMMER_DIAMOND']], 0x3), this['inv_buttons'][INV['HAMMER_DIAMOND']]['id'] = INV['HAMMER_DIAMOND'], this['inv_buttons'][INV['HAMMER_AMETHYST']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_HAMMER_AMETHYST']], 0x3), this['inv_buttons'][INV['HAMMER_AMETHYST']]['id'] = INV['HAMMER_AMETHYST'], this['inv_buttons'][INV['HAMMER_REIDITE']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_HAMMER_REIDITE']], 0x3), this['inv_buttons'][INV['HAMMER_REIDITE']]['id'] = INV['HAMMER_REIDITE'], this['inv_buttons'][INV['AMETHYST_WALL']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_AMETHYST_WALL']], 0x3), this['inv_buttons'][INV['AMETHYST_WALL']]['id'] = INV['AMETHYST_WALL'], this['inv_buttons'][INV['AMETHYST_SPIKE']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_AMETHYST_SPIKE']], 0x3), this['inv_buttons'][INV['AMETHYST_SPIKE']]['id'] = INV['AMETHYST_SPIKE'], this['inv_buttons'][INV['AMETHYST_DOOR']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_DOOR_AMETHYST_CLOSE']], 0x3), this['inv_buttons'][INV['AMETHYST_DOOR']]['id'] = INV['AMETHYST_DOOR'], this['inv_buttons'][INV['CAP_SCARF']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_CAP_SCARF']], 0x3), this['inv_buttons'][INV['CAP_SCARF']]['id'] = INV['CAP_SCARF'], this['inv_buttons'][INV['FUR_WINTER']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_FUR_WINTER']], 0x3), this['inv_buttons'][INV['FUR_WINTER']]['id'] = INV['FUR_WINTER'], this['inv_buttons'][INV['FUR_WINTER']]['info']['img'][0x2] = this['inv_buttons'][INV['FUR_WINTER']]['info']['img'][0x0], this['inv_buttons'][INV['FUR_MAMMOTH']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_FUR_MAMMOTH']], 0x3), this['inv_buttons'][INV['FUR_MAMMOTH']]['id'] = INV['FUR_MAMMOTH'], this['inv_buttons'][INV['FUR_MAMMOTH']]['info']['img'][0x2] = this['inv_buttons'][INV['FUR_MAMMOTH']]['info']['img'][0x0], this['inv_buttons'][INV['BLUE_CORD']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_BLUE_CORD']], 0x3), this['inv_buttons'][INV['BLUE_CORD']]['id'] = INV['BLUE_CORD'], this['inv_buttons'][INV['BLUE_CORD']]['info']['img'][0x2] = this['inv_buttons'][INV['BLUE_CORD']]['info']['img'][0x0], this['inv_buttons'][INV['LOCK']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_LOCK']], 0x3), this['inv_buttons'][INV['LOCK']]['id'] = INV['LOCK'], this['inv_buttons'][INV['LOCK']]['info']['img'][0x2] = this['inv_buttons'][INV['LOCK']]['info']['img'][0x0], this['inv_buttons'][INV['DRAGON_HEART']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_DRAGON_HEART']], 0x3), this['inv_buttons'][INV['DRAGON_HEART']]['id'] = INV['DRAGON_HEART'], this['inv_buttons'][INV['LAVA_HEART']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_LAVA_HEART']], 0x3), this['inv_buttons'][INV['LAVA_HEART']]['id'] = INV['LAVA_HEART'], this['inv_buttons'][INV['RESURRECTION']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_RESURRECTION']], 0x3), this['inv_buttons'][INV['RESURRECTION']]['id'] = INV['RESURRECTION'], this['inv_buttons'][INV['LOCKPICK']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_LOCKPICK']], 0x3), this['inv_buttons'][INV['LOCKPICK']]['id'] = INV['LOCKPICK'], this['inv_buttons'][INV['TOTEM']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_TOTEM']], 0x3), this['inv_buttons'][INV['TOTEM']]['id'] = INV['TOTEM'], this['inv_buttons'][INV['AMETHYST_HELMET']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_AMETHYST_HELMET']], 0x3), this['inv_buttons'][INV['AMETHYST_HELMET']]['id'] = INV['AMETHYST_HELMET'], this['inv_buttons'][INV['SUPER_HAMMER']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_SUPER_HAMMER']], 0x3), this['inv_buttons'][INV['SUPER_HAMMER']]['id'] = INV['SUPER_HAMMER'], this['inv_buttons'][INV['BRIDGE']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_BRIDGE']], 0x3), this['inv_buttons'][INV['BRIDGE']]['id'] = INV['BRIDGE'], this['inv_buttons'][INV['WOOD_TOWER']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_WOOD_TOWER']], 0x3), this['inv_buttons'][INV['WOOD_TOWER']]['id'] = INV['WOOD_TOWER'], this['inv_buttons'][INV['BOAT']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_BOAT']], 0x3), this['inv_buttons'][INV['BOAT']]['id'] = INV['BOAT'], this['inv_buttons'][INV['SLED']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_SLED']], 0x3), this['inv_buttons'][INV['SLED']]['id'] = INV['SLED'], this['inv_buttons'][INV['PLANE']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_PLANE']], 0x3), this['inv_buttons'][INV['PLANE']]['id'] = INV['PLANE'], this['inv_buttons'][INV['SADDLE']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_SADDLE']], 0x3), this['inv_buttons'][INV['SADDLE']]['id'] = INV['SADDLE'], this['inv_buttons'][INV['MOUNT_BOAR']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_MOUNT_BOAR']], 0x3), this['inv_buttons'][INV['MOUNT_BOAR']]['id'] = INV['MOUNT_BOAR'], this['inv_buttons'][INV['CRAB_BOSS']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_CRAB_BOSS']], 0x3), this['inv_buttons'][INV['CRAB_BOSS']]['id'] = INV['CRAB_BOSS'], this['inv_buttons'][INV['BABY_DRAGON']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_BABY_DRAGON']], 0x3), this['inv_buttons'][INV['BABY_DRAGON']]['id'] = INV['BABY_DRAGON'], this['inv_buttons'][INV['BABY_MAMMOTH']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_BABY_MAMMOTH']], 0x3), this['inv_buttons'][INV['BABY_MAMMOTH']]['id'] = INV['BABY_MAMMOTH'], this['inv_buttons'][INV['BABY_LAVA']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_BABY_LAVA']], 0x3), this['inv_buttons'][INV['BABY_LAVA']]['id'] = INV['BABY_LAVA'], this['inv_buttons'][INV['HAWK']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_HAWK']], 0x3), this['inv_buttons'][INV['HAWK']]['id'] = INV['HAWK'], this['inv_buttons'][INV['SAND']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_SAND']], 0x3), this['inv_buttons'][INV['SAND']]['id'] = INV['SAND'], this['inv_buttons'][INV['SAND']]['info']['img'][0x2] = this['inv_buttons'][INV['SAND']]['info']['img'][0x0], this['inv_buttons'][INV['BOTTLE_FULL']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_BOTTLE_FULL']], 0x3), this['inv_buttons'][INV['BOTTLE_FULL']]['id'] = INV['BOTTLE_FULL'], this['inv_buttons'][INV['BOTTLE_EMPTY']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_BOTTLE_EMPTY']], 0x3), this['inv_buttons'][INV['BOTTLE_EMPTY']]['id'] = INV['BOTTLE_EMPTY'], this['inv_buttons'][INV['SHOVEL']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_SHOVEL']], 0x3), this['inv_buttons'][INV['SHOVEL']]['id'] = INV['SHOVEL'], this['inv_buttons'][INV['SHOVEL_GOLD']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_SHOVEL_GOLD']], 0x3), this['inv_buttons'][INV['SHOVEL_GOLD']]['id'] = INV['SHOVEL_GOLD'], this['inv_buttons'][INV['SHOVEL_DIAMOND']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_SHOVEL_DIAMOND']], 0x3), this['inv_buttons'][INV['SHOVEL_DIAMOND']]['id'] = INV['SHOVEL_DIAMOND'], this['inv_buttons'][INV['SHOVEL_AMETHYST']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_SHOVEL_AMETHYST']], 0x3), this['inv_buttons'][INV['SHOVEL_AMETHYST']]['id'] = INV['SHOVEL_AMETHYST'], this['inv_buttons'][INV['SPANNER']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_SPANNER']], 0x3), this['inv_buttons'][INV['SPANNER']]['id'] = INV['SPANNER'], this['inv_buttons'][INV['KRAKEN_SKIN']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_KRAKEN_SKIN']], 0x3), this['inv_buttons'][INV['KRAKEN_SKIN']]['id'] = INV['KRAKEN_SKIN'], this['inv_buttons'][INV['KRAKEN_SKIN']]['info']['img'][0x2] = this['inv_buttons'][INV['KRAKEN_SKIN']]['info']['img'][0x0], this['inv_buttons'][INV['WATERING_CAN']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_WATERING_CAN']], 0x3), this['inv_buttons'][INV['WATERING_CAN']]['id'] = INV['WATERING_CAN'], this['inv_buttons'][INV['FLOUR']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_FLOUR']], 0x3), this['inv_buttons'][INV['FLOUR']]['id'] = INV['FLOUR'], this['inv_buttons'][INV['FLOUR']]['info']['img'][0x2] = this['inv_buttons'][INV['FLOUR']]['info']['img'][0x0], this['inv_buttons'][INV['WHEAT_SEED']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_WHEAT_SEED']], 0x3), this['inv_buttons'][INV['WHEAT_SEED']]['id'] = INV['WHEAT_SEED'], this['inv_buttons'][INV['COOKIE']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_COOKIE']], 0x3), this['inv_buttons'][INV['COOKIE']]['id'] = INV['COOKIE'], this['inv_buttons'][INV['WILD_WHEAT']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_WILD_WHEAT']], 0x3), this['inv_buttons'][INV['WILD_WHEAT']]['id'] = INV['WILD_WHEAT'], this['inv_buttons'][INV['WILD_WHEAT']]['info']['img'][0x2] = this['inv_buttons'][INV['WILD_WHEAT']]['info']['img'][0x0], this['inv_buttons'][INV['WINDMILL']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_WINDMILL']], 0x3), this['inv_buttons'][INV['WINDMILL']]['id'] = INV['WINDMILL'], this['inv_buttons'][INV['SUPER_DIVING_SUIT']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_SUPER_DIVING_SUIT']], 0x3), this['inv_buttons'][INV['SUPER_DIVING_SUIT']]['id'] = INV['SUPER_DIVING_SUIT'], this['inv_buttons'][INV['DIVING_MASK']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_DIVING_MASK']], 0x3), this['inv_buttons'][INV['DIVING_MASK']]['id'] = INV['DIVING_MASK'], this['inv_buttons'][INV['WATERING_CAN_FULL']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_WATERING_CAN_FULL']], 0x3), this['inv_buttons'][INV['WATERING_CAN_FULL']]['id'] = INV['WATERING_CAN_FULL'], this['inv_buttons'][INV['CAKE']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_CAKE']], 0x3), this['inv_buttons'][INV['CAKE']]['id'] = INV['CAKE'], this['inv_buttons'][INV['BREAD']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_BREAD']], 0x3), this['inv_buttons'][INV['BREAD']]['id'] = INV['BREAD'], this['inv_buttons'][INV['FOODFISH']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_FOODFISH']], 0x3), this['inv_buttons'][INV['FOODFISH']]['id'] = INV['FOODFISH'], this['inv_buttons'][INV['FOODFISH_COOKED']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_FOODFISH_COOKED']], 0x3), this['inv_buttons'][INV['FOODFISH_COOKED']]['id'] = INV['FOODFISH_COOKED'], this['inv_buttons'][INV['SCALES']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_SCALES']], 0x3), this['inv_buttons'][INV['SCALES']]['id'] = INV['SCALES'], this['inv_buttons'][INV['SCALES']]['info']['img'][0x2] = this['inv_buttons'][INV['SCALES']]['info']['img'][0x0], this['inv_buttons'][INV['GROUND']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_GROUND']], 0x3), this['inv_buttons'][INV['GROUND']]['id'] = INV['GROUND'], this['inv_buttons'][INV['GROUND']]['info']['img'][0x2] = this['inv_buttons'][INV['GROUND']]['info']['img'][0x0], this['inv_buttons'][INV['PLOT']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_PLOT']], 0x3), this['inv_buttons'][INV['PLOT']]['id'] = INV['PLOT'], this['inv_buttons'][INV['ICE']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_ICE']], 0x3), this['inv_buttons'][INV['ICE']]['id'] = INV['ICE'], this['inv_buttons'][INV['ICE']]['info']['img'][0x2] = this['inv_buttons'][INV['ICE']]['info']['img'][0x0], this['inv_buttons'][INV['BREAD_OVEN']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_BREAD_OVEN']], 0x3), this['inv_buttons'][INV['BREAD_OVEN']]['id'] = INV['BREAD_OVEN'], this['inv_buttons'][INV['SANDWICH']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_SANDWICH']], 0x3), this['inv_buttons'][INV['SANDWICH']]['id'] = INV['SANDWICH'], this['inv_buttons'][INV['DRAGON_HELMET']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_DRAGON_HELMET']], 0x3), this['inv_buttons'][INV['DRAGON_HELMET']]['id'] = INV['DRAGON_HELMET'], this['inv_buttons'][INV['DRAGON_SWORD']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_DRAGON_SWORD']], 0x3), this['inv_buttons'][INV['DRAGON_SWORD']]['id'] = INV['DRAGON_SWORD'], this['inv_buttons'][INV['DRAGON_ORB']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_DRAGON_ORB']], 0x3), this['inv_buttons'][INV['DRAGON_ORB']]['id'] = INV['DRAGON_ORB'], this['inv_buttons'][INV['DRAGON_ORB']]['info']['img'][0x2] = this['inv_buttons'][INV['DRAGON_ORB']]['info']['img'][0x0], this['inv_buttons'][INV['DRAGON_CUBE']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_DRAGON_CUBE']], 0x3), this['inv_buttons'][INV['DRAGON_CUBE']]['id'] = INV['DRAGON_CUBE'], this['inv_buttons'][INV['DRAGON_CUBE']]['info']['img'][0x2] = this['inv_buttons'][INV['DRAGON_CUBE']]['info']['img'][0x0], this['inv_buttons'][INV['LAVA_SPEAR']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_LAVA_SPEAR']], 0x3), this['inv_buttons'][INV['LAVA_SPEAR']]['id'] = INV['LAVA_SPEAR'], this['inv_buttons'][INV['LAVA_SWORD']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_LAVA_SWORD']], 0x3), this['inv_buttons'][INV['LAVA_SWORD']]['id'] = INV['LAVA_SWORD'], this['inv_buttons'][INV['LAVA_ORB']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_LAVA_ORB']], 0x3), this['inv_buttons'][INV['LAVA_ORB']]['id'] = INV['LAVA_ORB'], this['inv_buttons'][INV['LAVA_ORB']]['info']['img'][0x2] = this['inv_buttons'][INV['LAVA_ORB']]['info']['img'][0x0], this['inv_buttons'][INV['LAVA_CUBE']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_LAVA_CUBE']], 0x3), this['inv_buttons'][INV['LAVA_CUBE']]['id'] = INV['LAVA_CUBE'], this['inv_buttons'][INV['LAVA_CUBE']]['info']['img'][0x2] = this['inv_buttons'][INV['LAVA_CUBE']]['info']['img'][0x0], this['inv_buttons'][INV['CROWN_GREEN']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_CROWN_GREEN']], 0x3), this['inv_buttons'][INV['CROWN_GREEN']]['id'] = INV['CROWN_GREEN'], this['inv_buttons'][INV['GEMME_GREEN']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_GEMME_GREEN']], 0x3), this['inv_buttons'][INV['GEMME_GREEN']]['id'] = INV['GEMME_GREEN'], this['inv_buttons'][INV['GEMME_GREEN']]['info']['img'][0x2] = this['inv_buttons'][INV['GEMME_GREEN']]['info']['img'][0x0], this['inv_buttons'][INV['GEMME_ORANGE']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_GEMME_ORANGE']], 0x3), this['inv_buttons'][INV['GEMME_ORANGE']]['id'] = INV['GEMME_ORANGE'], this['inv_buttons'][INV['GEMME_ORANGE']]['info']['img'][0x2] = this['inv_buttons'][INV['GEMME_ORANGE']]['info']['img'][0x0], this['inv_buttons'][INV['CROWN_ORANGE']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_CROWN_ORANGE']], 0x3), this['inv_buttons'][INV['CROWN_ORANGE']]['id'] = INV['CROWN_ORANGE'], this['inv_buttons'][INV['GEMME_BLUE']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_GEMME_BLUE']], 0x3), this['inv_buttons'][INV['GEMME_BLUE']]['id'] = INV['GEMME_BLUE'], this['inv_buttons'][INV['GEMME_BLUE']]['info']['img'][0x2] = this['inv_buttons'][INV['GEMME_BLUE']]['info']['img'][0x0], this['inv_buttons'][INV['CROWN_BLUE']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_CROWN_BLUE']], 0x3), this['inv_buttons'][INV['CROWN_BLUE']]['id'] = INV['CROWN_BLUE'], this['inv_buttons'][INV['HOOD']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_HOOD']], 0x3), this['inv_buttons'][INV['HOOD']]['id'] = INV['HOOD'], this['inv_buttons'][INV['PEASANT']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_PEASANT']], 0x3), this['inv_buttons'][INV['PEASANT']]['id'] = INV['PEASANT'], this['inv_buttons'][INV['SPECIAL_FUR']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_SPECIAL_FUR']], 0x3), this['inv_buttons'][INV['SPECIAL_FUR']]['id'] = INV['SPECIAL_FUR'], this['inv_buttons'][INV['SPECIAL_FUR_2']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_SPECIAL_FUR_2']], 0x3), this['inv_buttons'][INV['SPECIAL_FUR_2']]['id'] = INV['SPECIAL_FUR_2'], this['inv_buttons'][INV['WINTER_PEASANT']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_WINTER_PEASANT']], 0x3), this['inv_buttons'][INV['WINTER_PEASANT']]['id'] = INV['WINTER_PEASANT'], this['inv_buttons'][INV['WINTER_HOOD']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_WINTER_HOOD']], 0x3), this['inv_buttons'][INV['WINTER_HOOD']]['id'] = INV['WINTER_HOOD'], this['inv_buttons'][INV['BUCKET_FULL']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_BUCKET_FULL']], 0x3), this['inv_buttons'][INV['BUCKET_FULL']]['id'] = INV['BUCKET_FULL'], this['inv_buttons'][INV['BUCKET_EMPTY']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_BUCKET_EMPTY']], 0x3), this['inv_buttons'][INV['BUCKET_EMPTY']]['id'] = INV['BUCKET_EMPTY'], this['inv_buttons'][INV['WELL']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_WELL']], 0x3), this['inv_buttons'][INV['WELL']]['id'] = INV['WELL'], this['inv_buttons'][INV['SIGN']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_SIGN']], 0x3), this['inv_buttons'][INV['SIGN']]['id'] = INV['SIGN'], this['inv_buttons'][INV['PUMPKIN_SEED']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_PUMPKIN_SEED']], 0x3), this['inv_buttons'][INV['PUMPKIN_SEED']]['id'] = INV['PUMPKIN_SEED'], this['inv_buttons'][INV['PUMPKIN']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_PUMPKIN']], 0x3), this['inv_buttons'][INV['PUMPKIN']]['id'] = INV['PUMPKIN'], this['inv_buttons'][INV['GARLIC_SEED']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_GARLIC_SEED']], 0x3), this['inv_buttons'][INV['GARLIC_SEED']]['id'] = INV['GARLIC_SEED'], this['inv_buttons'][INV['GARLIC']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_GARLIC']], 0x3), this['inv_buttons'][INV['GARLIC']]['id'] = INV['GARLIC'], this['inv_buttons'][INV['ROOF']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_ROOF']], 0x3), this['inv_buttons'][INV['ROOF']]['id'] = INV['ROOF'], this['inv_buttons'][INV['THORNBUSH_SEED']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_THORNBUSH_SEED']], 0x3), this['inv_buttons'][INV['THORNBUSH_SEED']]['id'] = INV['THORNBUSH_SEED'], this['inv_buttons'][INV['THORNBUSH']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_THORNBUSH']], 0x3), this['inv_buttons'][INV['THORNBUSH']]['id'] = INV['THORNBUSH'], this['inv_buttons'][INV['CARROT_SEED']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_CARROT_SEED']], 0x3), this['inv_buttons'][INV['CARROT_SEED']]['id'] = INV['CARROT_SEED'], this['inv_buttons'][INV['CARROT']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_CARROT']], 0x3), this['inv_buttons'][INV['CARROT']]['id'] = INV['CARROT'], this['inv_buttons'][INV['TOMATO_SEED']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_TOMATO_SEED']], 0x3), this['inv_buttons'][INV['TOMATO_SEED']]['id'] = INV['TOMATO_SEED'], this['inv_buttons'][INV['TOMATO']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_TOMATO']], 0x3), this['inv_buttons'][INV['TOMATO']]['id'] = INV['TOMATO'], this['inv_buttons'][INV['WATERMELON_SEED']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_WATERMELON_SEED']], 0x3), this['inv_buttons'][INV['WATERMELON_SEED']]['id'] = INV['WATERMELON_SEED'], this['inv_buttons'][INV['WATERMELON']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_WATERMELON']], 0x3), this['inv_buttons'][INV['WATERMELON']]['id'] = INV['WATERMELON'], this['inv_buttons'][INV['ALOE_VERA_SEED']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_ALOE_VERA_SEED']], 0x3), this['inv_buttons'][INV['ALOE_VERA_SEED']]['id'] = INV['ALOE_VERA_SEED'], this['inv_buttons'][INV['ALOE_VERA']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_ALOE_VERA']], 0x3), this['inv_buttons'][INV['ALOE_VERA']]['id'] = INV['ALOE_VERA'], this['inv_buttons'][INV['CHRISTMAS_HAT']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_CHRISTMAS_HAT']], 0x3), this['inv_buttons'][INV['CHRISTMAS_HAT']]['id'] = INV['CHRISTMAS_HAT'], this['inv_buttons'][INV['ELF_HAT']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_ELF_HAT']], 0x3), this['inv_buttons'][INV['ELF_HAT']]['id'] = INV['ELF_HAT'], this['inv_buttons'][INV['WOOD_SPEAR']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_WOOD_SPEAR']], 0x3), this['inv_buttons'][INV['WOOD_SPEAR']]['id'] = INV['WOOD_SPEAR'], this['inv_buttons'][INV['DRAGON_SPEAR']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_DRAGON_SPEAR']], 0x3), this['inv_buttons'][INV['DRAGON_SPEAR']]['id'] = INV['DRAGON_SPEAR'], this['inv_buttons'][INV['CRAB_STICK']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_CRAB_STICK']], 0x3), this['inv_buttons'][INV['CRAB_STICK']]['id'] = INV['CRAB_STICK'], this['inv_buttons'][INV['CRAB_SPEAR']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_CRAB_SPEAR']], 0x3), this['inv_buttons'][INV['CRAB_SPEAR']]['id'] = INV['CRAB_SPEAR'], this['inv_buttons'][INV['CRAB_LOOT']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_CRAB_LOOT']], 0x3), this['inv_buttons'][INV['CRAB_LOOT']]['id'] = INV['CRAB_LOOT'], this['inv_buttons'][INV['BED']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_BED']], 0x3), this['inv_buttons'][INV['BED']]['id'] = INV['BED'], this['inv_buttons'][INV['CROWN_CRAB']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_CROWN_CRAB']], 0x3), this['inv_buttons'][INV['CROWN_CRAB']]['id'] = INV['CROWN_CRAB'], this['inv_buttons'][INV['GARLAND']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_GARLAND']], 0x3), this['inv_buttons'][INV['GARLAND']]['id'] = INV['GARLAND'], this['inv_buttons'][INV['CANDY']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_CANDY']], 0x3), this['inv_buttons'][INV['CANDY']]['id'] = INV['CANDY'], this['inv_buttons'][INV['SUGAR_CAN']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_SUGAR_CAN']], 0x3), this['inv_buttons'][INV['SUGAR_CAN']]['id'] = INV['SUGAR_CAN'], this['craft_buttons'] = [], this['craft_buttons'][CRAFT['SWORD']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_SWORD']], 0x3), this['craft_buttons'][CRAFT['SWORD']]['id'] = CRAFT['SWORD'], this['craft_buttons'][CRAFT['PICK']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_PICK']], 0x3), this['craft_buttons'][CRAFT['PICK']]['id'] = CRAFT['PICK'], this['craft_buttons'][CRAFT['FIRE']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_FIRE']], 0x3), this['craft_buttons'][CRAFT['FIRE']]['id'] = CRAFT['FIRE'], this['craft_buttons'][CRAFT['WORKBENCH']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_WORK']], 0x3), this['craft_buttons'][CRAFT['WORKBENCH']]['id'] = CRAFT['WORKBENCH'], this['craft_buttons'][CRAFT['WALL']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_WALL']], 0x3), this['craft_buttons'][CRAFT['WALL']]['id'] = CRAFT['WALL'], this['craft_buttons'][CRAFT['SPIKE']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_SPIKE']], 0x3), this['craft_buttons'][CRAFT['SPIKE']]['id'] = CRAFT['SPIKE'], this['craft_buttons'][CRAFT['SEED']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_SEED']], 0x3), this['craft_buttons'][CRAFT['SEED']]['id'] = CRAFT['SEED'], this['craft_buttons'][CRAFT['PICK_GOLD']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_PICK_GOLD']], 0x3), this['craft_buttons'][CRAFT['PICK_GOLD']]['id'] = CRAFT['PICK_GOLD'], this['craft_buttons'][CRAFT['PICK_DIAMOND']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_PICK_DIAMOND']], 0x3), this['craft_buttons'][CRAFT['PICK_DIAMOND']]['id'] = CRAFT['PICK_DIAMOND'], this['craft_buttons'][CRAFT['SWORD_GOLD']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_SWORD_GOLD']], 0x3), this['craft_buttons'][CRAFT['SWORD_GOLD']]['id'] = CRAFT['SWORD_GOLD'], this['craft_buttons'][CRAFT['SWORD_WOOD']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_SWORD_WOOD']], 0x3), this['craft_buttons'][CRAFT['SWORD_WOOD']]['id'] = CRAFT['SWORD_WOOD'], this['craft_buttons'][CRAFT['SWORD_DIAMOND']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_SWORD_DIAMOND']], 0x3), this['craft_buttons'][CRAFT['SWORD_DIAMOND']]['id'] = CRAFT['SWORD_DIAMOND'], this['craft_buttons'][CRAFT['PICK_WOOD']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_PICK_WOOD']], 0x3), this['craft_buttons'][CRAFT['PICK_WOOD']]['id'] = CRAFT['PICK_WOOD'], this['craft_buttons'][CRAFT['COOKED_MEAT']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_COOKED_MEAT']], 0x3), this['craft_buttons'][CRAFT['COOKED_MEAT']]['id'] = CRAFT['COOKED_MEAT'], this['craft_buttons'][CRAFT['BIG_FIRE']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_BIG_FIRE']], 0x3), this['craft_buttons'][CRAFT['BIG_FIRE']]['id'] = CRAFT['BIG_FIRE'], this['craft_buttons'][CRAFT['BANDAGE']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_BANDAGE']], 0x3), this['craft_buttons'][CRAFT['BANDAGE']]['id'] = CRAFT['BANDAGE'], this['craft_buttons'][CRAFT['STONE_WALL']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_STONE_WALL']], 0x3), this['craft_buttons'][CRAFT['STONE_WALL']]['id'] = CRAFT['STONE_WALL'], this['craft_buttons'][CRAFT['GOLD_WALL']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_GOLD_WALL']], 0x3), this['craft_buttons'][CRAFT['GOLD_WALL']]['id'] = CRAFT['GOLD_WALL'], this['craft_buttons'][CRAFT['DIAMOND_WALL']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_DIAMOND_WALL']], 0x3), this['craft_buttons'][CRAFT['DIAMOND_WALL']]['id'] = CRAFT['DIAMOND_WALL'], this['craft_buttons'][CRAFT['WOOD_DOOR']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_DOOR_WOOD_CLOSE']], 0x3), this['craft_buttons'][CRAFT['WOOD_DOOR']]['id'] = CRAFT['WOOD_DOOR'], this['craft_buttons'][CRAFT['CHEST']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_CHEST']], 0x3), this['craft_buttons'][CRAFT['CHEST']]['id'] = CRAFT['CHEST'], this['craft_buttons'][CRAFT['STONE_SPIKE']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_STONE_SPIKE']], 0x3), this['craft_buttons'][CRAFT['STONE_SPIKE']]['id'] = CRAFT['STONE_SPIKE'], this['craft_buttons'][CRAFT['GOLD_SPIKE']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_GOLD_SPIKE']], 0x3), this['craft_buttons'][CRAFT['GOLD_SPIKE']]['id'] = CRAFT['GOLD_SPIKE'], this['craft_buttons'][CRAFT['DIAMOND_SPIKE']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_DIAMOND_SPIKE']], 0x3), this['craft_buttons'][CRAFT['DIAMOND_SPIKE']]['id'] = CRAFT['DIAMOND_SPIKE'], this['craft_buttons'][CRAFT['BAG']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_BAG']], 0x3), this['craft_buttons'][CRAFT['BAG']]['id'] = CRAFT['BAG'], this['craft_buttons'][CRAFT['EARMUFFS']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_EARMUFFS']], 0x3), this['craft_buttons'][CRAFT['EARMUFFS']]['id'] = CRAFT['EARMUFFS'], this['craft_buttons'][CRAFT['STONE_DOOR']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_DOOR_STONE_CLOSE']], 0x3), this['craft_buttons'][CRAFT['STONE_DOOR']]['id'] = CRAFT['STONE_DOOR'], this['craft_buttons'][CRAFT['GOLD_DOOR']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_DOOR_GOLD_CLOSE']], 0x3), this['craft_buttons'][CRAFT['GOLD_DOOR']]['id'] = CRAFT['GOLD_DOOR'], this['craft_buttons'][CRAFT['DIAMOND_DOOR']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_DOOR_DIAMOND_CLOSE']], 0x3), this['craft_buttons'][CRAFT['DIAMOND_DOOR']]['id'] = CRAFT['DIAMOND_DOOR'], this['craft_buttons'][CRAFT['EARMUFFS']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_EARMUFFS']], 0x3), this['craft_buttons'][CRAFT['EARMUFFS']]['id'] = CRAFT['EARMUFFS'], this['craft_buttons'][CRAFT['COAT']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_COAT']], 0x3), this['craft_buttons'][CRAFT['COAT']]['id'] = CRAFT['COAT'], this['craft_buttons'][CRAFT['WOOD_SPEAR']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_WOOD_SPEAR']], 0x3), this['craft_buttons'][CRAFT['WOOD_SPEAR']]['id'] = CRAFT['WOOD_SPEAR'], this['craft_buttons'][CRAFT['SPEAR']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_SPEAR']], 0x3), this['craft_buttons'][CRAFT['SPEAR']]['id'] = CRAFT['SPEAR'], this['craft_buttons'][CRAFT['GOLD_SPEAR']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_GOLD_SPEAR']], 0x3), this['craft_buttons'][CRAFT['GOLD_SPEAR']]['id'] = CRAFT['GOLD_SPEAR'], this['craft_buttons'][CRAFT['DIAMOND_SPEAR']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_DIAMOND_SPEAR']], 0x3), this['craft_buttons'][CRAFT['DIAMOND_SPEAR']]['id'] = CRAFT['DIAMOND_SPEAR'], this['craft_buttons'][CRAFT['DRAGON_SPEAR']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_DRAGON_SPEAR']], 0x3), this['craft_buttons'][CRAFT['DRAGON_SPEAR']]['id'] = CRAFT['DRAGON_SPEAR'], this['craft_buttons'][CRAFT['FURNACE']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_FURNACE']], 0x3), this['craft_buttons'][CRAFT['FURNACE']]['id'] = CRAFT['FURNACE'], this['craft_buttons'][CRAFT['EXPLORER_HAT']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_EXPLORER_HAT']], 0x3), this['craft_buttons'][CRAFT['EXPLORER_HAT']]['id'] = CRAFT['EXPLORER_HAT'], this['craft_buttons'][CRAFT['PIRATE_HAT']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_PIRATE_HAT']], 0x3), this['craft_buttons'][CRAFT['PIRATE_HAT']]['id'] = CRAFT['PIRATE_HAT'], this['craft_buttons'][CRAFT['FLOWER_HAT']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_FLOWER_HAT']], 0x3), this['craft_buttons'][CRAFT['FLOWER_HAT']]['id'] = CRAFT['FLOWER_HAT'], this['craft_buttons'][CRAFT['FUR_HAT']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_FUR_HAT']], 0x3), this['craft_buttons'][CRAFT['FUR_HAT']]['id'] = CRAFT['FUR_HAT'], this['craft_buttons'][CRAFT['TURBAN1']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_TURBAN1']], 0x3), this['craft_buttons'][CRAFT['TURBAN1']]['id'] = CRAFT['TURBAN1'], this['craft_buttons'][CRAFT['TURBAN2']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_TURBAN2']], 0x3), this['craft_buttons'][CRAFT['TURBAN2']]['id'] = CRAFT['TURBAN2'], this['craft_buttons'][CRAFT['WOOD_BOW']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_WOOD_BOW']], 0x3), this['craft_buttons'][CRAFT['WOOD_BOW']]['id'] = CRAFT['WOOD_BOW'], this['craft_buttons'][CRAFT['WOOD_ARROW']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_WOOD_ARROW']], 0x3), this['craft_buttons'][CRAFT['WOOD_ARROW']]['id'] = CRAFT['WOOD_ARROW'], this['craft_buttons'][CRAFT['WOOD_SHIELD']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_WOOD_SHIELD']], 0x3), this['craft_buttons'][CRAFT['WOOD_SHIELD']]['id'] = CRAFT['WOOD_SHIELD'], this['craft_buttons'][CRAFT['STONE_BOW']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_STONE_BOW']], 0x3), this['craft_buttons'][CRAFT['STONE_BOW']]['id'] = CRAFT['STONE_BOW'], this['craft_buttons'][CRAFT['STONE_ARROW']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_STONE_ARROW']], 0x3), this['craft_buttons'][CRAFT['STONE_ARROW']]['id'] = CRAFT['STONE_ARROW'], this['craft_buttons'][CRAFT['STONE_SHIELD']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_STONE_SHIELD']], 0x3), this['craft_buttons'][CRAFT['STONE_SHIELD']]['id'] = CRAFT['STONE_SHIELD'], this['craft_buttons'][CRAFT['GOLD_BOW']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_GOLD_BOW']], 0x3), this['craft_buttons'][CRAFT['GOLD_BOW']]['id'] = CRAFT['GOLD_BOW'], this['craft_buttons'][CRAFT['GOLD_ARROW']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_GOLD_ARROW']], 0x3), this['craft_buttons'][CRAFT['GOLD_ARROW']]['id'] = CRAFT['GOLD_ARROW'], this['craft_buttons'][CRAFT['GOLD_SHIELD']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_GOLD_SHIELD']], 0x3), this['craft_buttons'][CRAFT['GOLD_SHIELD']]['id'] = CRAFT['GOLD_SHIELD'], this['craft_buttons'][CRAFT['DIAMOND_BOW']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_DIAMOND_BOW']], 0x3), this['craft_buttons'][CRAFT['DIAMOND_BOW']]['id'] = CRAFT['DIAMOND_BOW'], this['craft_buttons'][CRAFT['DIAMOND_ARROW']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_DIAMOND_ARROW']], 0x3), this['craft_buttons'][CRAFT['DIAMOND_ARROW']]['id'] = CRAFT['DIAMOND_ARROW'], this['craft_buttons'][CRAFT['DIAMOND_SHIELD']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_DIAMOND_SHIELD']], 0x3), this['craft_buttons'][CRAFT['DIAMOND_SHIELD']]['id'] = CRAFT['DIAMOND_SHIELD'], this['craft_buttons'][CRAFT['AMETHYST_BOW']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_AMETHYST_BOW']], 0x3), this['craft_buttons'][CRAFT['AMETHYST_BOW']]['id'] = CRAFT['AMETHYST_BOW'], this['craft_buttons'][CRAFT['AMETHYST_ARROW']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_AMETHYST_ARROW']], 0x3), this['craft_buttons'][CRAFT['AMETHYST_ARROW']]['id'] = CRAFT['AMETHYST_ARROW'], this['craft_buttons'][CRAFT['AMETHYST_SHIELD']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_AMETHYST_SHIELD']], 0x3), this['craft_buttons'][CRAFT['AMETHYST_SHIELD']]['id'] = CRAFT['AMETHYST_SHIELD'], this['craft_buttons'][CRAFT['REIDITE_BOW']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_REIDITE_BOW']], 0x3), this['craft_buttons'][CRAFT['REIDITE_BOW']]['id'] = CRAFT['REIDITE_BOW'], this['craft_buttons'][CRAFT['REIDITE_ARROW']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_REIDITE_ARROW']], 0x3), this['craft_buttons'][CRAFT['REIDITE_ARROW']]['id'] = CRAFT['REIDITE_ARROW'], this['craft_buttons'][CRAFT['REIDITE_SHIELD']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_REIDITE_SHIELD']], 0x3), this['craft_buttons'][CRAFT['REIDITE_SHIELD']]['id'] = CRAFT['REIDITE_SHIELD'], this['craft_buttons'][CRAFT['DRAGON_BOW']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_DRAGON_BOW']], 0x3), this['craft_buttons'][CRAFT['DRAGON_BOW']]['id'] = CRAFT['DRAGON_BOW'], this['craft_buttons'][CRAFT['DRAGON_ARROW']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_DRAGON_ARROW']], 0x3), this['craft_buttons'][CRAFT['DRAGON_ARROW']]['id'] = CRAFT['DRAGON_ARROW'], this['craft_buttons'][CRAFT['WOOD_HELMET']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_WOOD_HELMET']], 0x3), this['craft_buttons'][CRAFT['WOOD_HELMET']]['id'] = CRAFT['WOOD_HELMET'], this['craft_buttons'][CRAFT['STONE_HELMET']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_STONE_HELMET']], 0x3), this['craft_buttons'][CRAFT['STONE_HELMET']]['id'] = CRAFT['STONE_HELMET'], this['craft_buttons'][CRAFT['GOLD_HELMET']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_GOLD_HELMET']], 0x3), this['craft_buttons'][CRAFT['GOLD_HELMET']]['id'] = CRAFT['GOLD_HELMET'], this['craft_buttons'][CRAFT['DIAMOND_HELMET']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_DIAMOND_HELMET']], 0x3), this['craft_buttons'][CRAFT['DIAMOND_HELMET']]['id'] = CRAFT['DIAMOND_HELMET'], this['craft_buttons'][CRAFT['BOOK']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_BOOK']], 0x3), this['craft_buttons'][CRAFT['BOOK']]['id'] = CRAFT['BOOK'], this['craft_buttons'][CRAFT['PAPER']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_PAPER']], 0x3), this['craft_buttons'][CRAFT['PAPER']]['id'] = CRAFT['PAPER'], this['craft_buttons'][CRAFT['BAG']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_BAG']], 0x3), this['craft_buttons'][CRAFT['BAG']]['id'] = CRAFT['BAG'], this['craft_buttons'][CRAFT['SWORD_AMETHYST']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_SWORD_AMETHYST']], 0x3), this['craft_buttons'][CRAFT['SWORD_AMETHYST']]['id'] = CRAFT['SWORD_AMETHYST'], this['craft_buttons'][CRAFT['PIRATE_SWORD']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_PIRATE_SWORD']], 0x3), this['craft_buttons'][CRAFT['PIRATE_SWORD']]['id'] = CRAFT['PIRATE_SWORD'], this['craft_buttons'][CRAFT['PICK_AMETHYST']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_PICK_AMETHYST']], 0x3), this['craft_buttons'][CRAFT['PICK_AMETHYST']]['id'] = CRAFT['PICK_AMETHYST'], this['craft_buttons'][CRAFT['PICK_REIDITE']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_PICK_REIDITE']], 0x3), this['craft_buttons'][CRAFT['PICK_REIDITE']]['id'] = CRAFT['PICK_REIDITE'], this['craft_buttons'][CRAFT['AMETHYST_SPEAR']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_AMETHYST_SPEAR']], 0x3), this['craft_buttons'][CRAFT['AMETHYST_SPEAR']]['id'] = CRAFT['AMETHYST_SPEAR'], this['craft_buttons'][CRAFT['HAMMER']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_HAMMER']], 0x3), this['craft_buttons'][CRAFT['HAMMER']]['id'] = CRAFT['HAMMER'], this['craft_buttons'][CRAFT['HAMMER_GOLD']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_HAMMER_GOLD']], 0x3), this['craft_buttons'][CRAFT['HAMMER_GOLD']]['id'] = CRAFT['HAMMER_GOLD'], this['craft_buttons'][CRAFT['HAMMER_DIAMOND']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_HAMMER_DIAMOND']], 0x3), this['craft_buttons'][CRAFT['HAMMER_DIAMOND']]['id'] = CRAFT['HAMMER_DIAMOND'], this['craft_buttons'][CRAFT['HAMMER_AMETHYST']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_HAMMER_AMETHYST']], 0x3), this['craft_buttons'][CRAFT['HAMMER_AMETHYST']]['id'] = CRAFT['HAMMER_AMETHYST'], this['craft_buttons'][CRAFT['HAMMER_REIDITE']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_HAMMER_REIDITE']], 0x3), this['craft_buttons'][CRAFT['HAMMER_REIDITE']]['id'] = CRAFT['HAMMER_REIDITE'], this['craft_buttons'][CRAFT['AMETHYST_WALL']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_AMETHYST_WALL']], 0x3), this['craft_buttons'][CRAFT['AMETHYST_WALL']]['id'] = CRAFT['AMETHYST_WALL'], this['craft_buttons'][CRAFT['AMETHYST_SPIKE']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_AMETHYST_SPIKE']], 0x3), this['craft_buttons'][CRAFT['AMETHYST_SPIKE']]['id'] = CRAFT['AMETHYST_SPIKE'], this['craft_buttons'][CRAFT['AMETHYST_DOOR']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_DOOR_AMETHYST_CLOSE']], 0x3), this['craft_buttons'][CRAFT['AMETHYST_DOOR']]['id'] = CRAFT['AMETHYST_DOOR'], this['craft_buttons'][CRAFT['CAP_SCARF']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_CAP_SCARF']], 0x3), this['craft_buttons'][CRAFT['CAP_SCARF']]['id'] = CRAFT['CAP_SCARF'], this['craft_buttons'][CRAFT['BLUE_CORD']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_BLUE_CORD']], 0x3), this['craft_buttons'][CRAFT['BLUE_CORD']]['id'] = CRAFT['BLUE_CORD'], this['craft_buttons'][CRAFT['LOCK']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_LOCK']], 0x3), this['craft_buttons'][CRAFT['LOCK']]['id'] = CRAFT['LOCK'], this['craft_buttons'][CRAFT['RESURRECTION']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_RESURRECTION']], 0x3), this['craft_buttons'][CRAFT['RESURRECTION']]['id'] = CRAFT['RESURRECTION'], this['craft_buttons'][CRAFT['LOCKPICK']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_LOCKPICK']], 0x3), this['craft_buttons'][CRAFT['LOCKPICK']]['id'] = CRAFT['LOCKPICK'], this['craft_buttons'][CRAFT['TOTEM']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_TOTEM']], 0x3), this['craft_buttons'][CRAFT['TOTEM']]['id'] = CRAFT['TOTEM'], this['craft_buttons'][CRAFT['AMETHYST_HELMET']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_AMETHYST_HELMET']], 0x3), this['craft_buttons'][CRAFT['AMETHYST_HELMET']]['id'] = CRAFT['AMETHYST_HELMET'], this['craft_buttons'][CRAFT['SUPER_HAMMER']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_SUPER_HAMMER']], 0x3), this['craft_buttons'][CRAFT['SUPER_HAMMER']]['id'] = CRAFT['SUPER_HAMMER'], this['craft_buttons'][CRAFT['BRIDGE']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_BRIDGE']], 0x3), this['craft_buttons'][CRAFT['BRIDGE']]['id'] = CRAFT['BRIDGE'], this['craft_buttons'][CRAFT['WOOD_TOWER']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_WOOD_TOWER']], 0x3), this['craft_buttons'][CRAFT['WOOD_TOWER']]['id'] = CRAFT['WOOD_TOWER'], this['craft_buttons'][CRAFT['BOAT']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_BOAT']], 0x3), this['craft_buttons'][CRAFT['BOAT']]['id'] = CRAFT['BOAT'], this['craft_buttons'][CRAFT['SLED']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_SLED']], 0x3), this['craft_buttons'][CRAFT['SLED']]['id'] = CRAFT['SLED'], this['craft_buttons'][CRAFT['PLANE']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_PLANE']], 0x3), this['craft_buttons'][CRAFT['PLANE']]['id'] = CRAFT['PLANE'], this['craft_buttons'][CRAFT['SADDLE']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_SADDLE']], 0x3), this['craft_buttons'][CRAFT['SADDLE']]['id'] = CRAFT['SADDLE'], this['craft_buttons'][CRAFT['MOUNT_BOAR']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_MOUNT_BOAR']], 0x3), this['craft_buttons'][CRAFT['MOUNT_BOAR']]['id'] = CRAFT['MOUNT_BOAR'], this['craft_buttons'][CRAFT['BABY_DRAGON']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_BABY_DRAGON']], 0x3), this['craft_buttons'][CRAFT['BABY_DRAGON']]['id'] = CRAFT['BABY_DRAGON'], this['craft_buttons'][CRAFT['BABY_MAMMOTH']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_BABY_MAMMOTH']], 0x3), this['craft_buttons'][CRAFT['BABY_MAMMOTH']]['id'] = CRAFT['BABY_MAMMOTH'], this['craft_buttons'][CRAFT['CRAB_BOSS']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_CRAB_BOSS']], 0x3), this['craft_buttons'][CRAFT['CRAB_BOSS']]['id'] = CRAFT['CRAB_BOSS'], this['craft_buttons'][CRAFT['BOTTLE_EMPTY']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_BOTTLE_EMPTY']], 0x3), this['craft_buttons'][CRAFT['BOTTLE_EMPTY']]['id'] = CRAFT['BOTTLE_EMPTY'], this['craft_buttons'][CRAFT['BOTTLE_FULL']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_BOTTLE_FULL']], 0x3), this['craft_buttons'][CRAFT['BOTTLE_FULL']]['id'] = CRAFT['BOTTLE_FULL'], this['craft_buttons'][CRAFT['BOTTLE_FULL_2']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_BOTTLE_FULL']], 0x3), this['craft_buttons'][CRAFT['BOTTLE_FULL_2']]['id'] = CRAFT['BOTTLE_FULL_2'], this['craft_buttons'][CRAFT['BOTTLE_FULL_3']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_BOTTLE_FULL']], 0x3), this['craft_buttons'][CRAFT['BOTTLE_FULL_3']]['id'] = CRAFT['BOTTLE_FULL_3'], this['craft_buttons'][CRAFT['SHOVEL']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_SHOVEL']], 0x3), this['craft_buttons'][CRAFT['SHOVEL']]['id'] = CRAFT['SHOVEL'], this['craft_buttons'][CRAFT['SHOVEL_GOLD']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_SHOVEL_GOLD']], 0x3), this['craft_buttons'][CRAFT['SHOVEL_GOLD']]['id'] = CRAFT['SHOVEL_GOLD'], this['craft_buttons'][CRAFT['SHOVEL_DIAMOND']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_SHOVEL_DIAMOND']], 0x3), this['craft_buttons'][CRAFT['SHOVEL_DIAMOND']]['id'] = CRAFT['SHOVEL_DIAMOND'], this['craft_buttons'][CRAFT['SHOVEL_AMETHYST']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_SHOVEL_AMETHYST']], 0x3), this['craft_buttons'][CRAFT['SHOVEL_AMETHYST']]['id'] = CRAFT['SHOVEL_AMETHYST'], this['craft_buttons'][CRAFT['SPANNER']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_SPANNER']], 0x3), this['craft_buttons'][CRAFT['SPANNER']]['id'] = CRAFT['SPANNER'], this['craft_buttons'][CRAFT['WATERING_CAN']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_WATERING_CAN']], 0x3), this['craft_buttons'][CRAFT['WATERING_CAN']]['id'] = CRAFT['WATERING_CAN'], this['craft_buttons'][CRAFT['WHEAT_SEED']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_WHEAT_SEED']], 0x3), this['craft_buttons'][CRAFT['WHEAT_SEED']]['id'] = CRAFT['WHEAT_SEED'], this['craft_buttons'][CRAFT['COOKIE']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_COOKIE']], 0x3), this['craft_buttons'][CRAFT['COOKIE']]['id'] = CRAFT['COOKIE'], this['craft_buttons'][CRAFT['WINDMILL']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_WINDMILL']], 0x3), this['craft_buttons'][CRAFT['WINDMILL']]['id'] = CRAFT['WINDMILL'], this['craft_buttons'][CRAFT['SUPER_DIVING_SUIT']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_SUPER_DIVING_SUIT']], 0x3), this['craft_buttons'][CRAFT['SUPER_DIVING_SUIT']]['id'] = CRAFT['SUPER_DIVING_SUIT'], this['craft_buttons'][CRAFT['DIVING_MASK']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_DIVING_MASK']], 0x3), this['craft_buttons'][CRAFT['DIVING_MASK']]['id'] = CRAFT['DIVING_MASK'], this['craft_buttons'][CRAFT['WATERING_CAN_FULL']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_WATERING_CAN_FULL']], 0x3), this['craft_buttons'][CRAFT['WATERING_CAN_FULL']]['id'] = CRAFT['WATERING_CAN_FULL'], this['craft_buttons'][CRAFT['CAKE']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_CAKE']], 0x3), this['craft_buttons'][CRAFT['CAKE']]['id'] = CRAFT['CAKE'], this['craft_buttons'][CRAFT['BREAD']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_BREAD']], 0x3), this['craft_buttons'][CRAFT['BREAD']]['id'] = CRAFT['BREAD'], this['craft_buttons'][CRAFT['FOODFISH_COOKED']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_FOODFISH_COOKED']], 0x3), this['craft_buttons'][CRAFT['FOODFISH_COOKED']]['id'] = CRAFT['FOODFISH_COOKED'], this['craft_buttons'][CRAFT['PLOT']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_PLOT']], 0x3), this['craft_buttons'][CRAFT['PLOT']]['id'] = CRAFT['PLOT'], this['craft_buttons'][CRAFT['BREAD_OVEN']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_BREAD_OVEN']], 0x3), this['craft_buttons'][CRAFT['BREAD_OVEN']]['id'] = CRAFT['BREAD_OVEN'], this['craft_buttons'][CRAFT['SANDWICH']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_SANDWICH']], 0x3), this['craft_buttons'][CRAFT['SANDWICH']]['id'] = CRAFT['SANDWICH'], this['craft_buttons'][CRAFT['DRAGON_HELMET']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_DRAGON_HELMET']], 0x3), this['craft_buttons'][CRAFT['DRAGON_HELMET']]['id'] = CRAFT['DRAGON_HELMET'], this['craft_buttons'][CRAFT['DRAGON_SWORD']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_DRAGON_SWORD']], 0x3), this['craft_buttons'][CRAFT['DRAGON_SWORD']]['id'] = CRAFT['DRAGON_SWORD'], this['craft_buttons'][CRAFT['CROWN_GREEN']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_CROWN_GREEN']], 0x3), this['craft_buttons'][CRAFT['CROWN_GREEN']]['id'] = CRAFT['CROWN_GREEN'], this['craft_buttons'][CRAFT['CROWN_ORANGE']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_CROWN_ORANGE']], 0x3), this['craft_buttons'][CRAFT['CROWN_ORANGE']]['id'] = CRAFT['CROWN_ORANGE'], this['craft_buttons'][CRAFT['CROWN_BLUE']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_CROWN_BLUE']], 0x3), this['craft_buttons'][CRAFT['CROWN_BLUE']]['id'] = CRAFT['CROWN_BLUE'], this['craft_buttons'][CRAFT['HOOD']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_HOOD']], 0x3), this['craft_buttons'][CRAFT['HOOD']]['id'] = CRAFT['HOOD'], this['craft_buttons'][CRAFT['PEASANT']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_PEASANT']], 0x3), this['craft_buttons'][CRAFT['PEASANT']]['id'] = CRAFT['PEASANT'], this['craft_buttons'][CRAFT['WINTER_PEASANT']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_WINTER_PEASANT']], 0x3), this['craft_buttons'][CRAFT['WINTER_PEASANT']]['id'] = CRAFT['WINTER_PEASANT'], this['craft_buttons'][CRAFT['WINTER_HOOD']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_WINTER_HOOD']], 0x3), this['craft_buttons'][CRAFT['WINTER_HOOD']]['id'] = CRAFT['WINTER_HOOD'], this['craft_buttons'][CRAFT['BUCKET_FULL']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_BUCKET_FULL']], 0x3), this['craft_buttons'][CRAFT['BUCKET_FULL']]['id'] = CRAFT['BUCKET_FULL'], this['craft_buttons'][CRAFT['BUCKET_EMPTY']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_BUCKET_EMPTY']], 0x3), this['craft_buttons'][CRAFT['BUCKET_EMPTY']]['id'] = CRAFT['BUCKET_EMPTY'], this['craft_buttons'][CRAFT['WELL']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_WELL']], 0x3), this['craft_buttons'][CRAFT['WELL']]['id'] = CRAFT['WELL'], this['craft_buttons'][CRAFT['SIGN']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_SIGN']], 0x3), this['craft_buttons'][CRAFT['SIGN']]['id'] = CRAFT['SIGN'], this['craft_buttons'][CRAFT['PUMPKIN_SEED']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_PUMPKIN_SEED']], 0x3), this['craft_buttons'][CRAFT['PUMPKIN_SEED']]['id'] = CRAFT['PUMPKIN_SEED'], this['craft_buttons'][CRAFT['GARLIC_SEED']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_GARLIC_SEED']], 0x3), this['craft_buttons'][CRAFT['GARLIC_SEED']]['id'] = CRAFT['GARLIC_SEED'], this['craft_buttons'][CRAFT['ROOF']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_ROOF']], 0x3), this['craft_buttons'][CRAFT['ROOF']]['id'] = CRAFT['ROOF'], this['craft_buttons'][CRAFT['THORNBUSH_SEED']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_THORNBUSH_SEED']], 0x3), this['craft_buttons'][CRAFT['THORNBUSH_SEED']]['id'] = CRAFT['THORNBUSH_SEED'], this['craft_buttons'][CRAFT['TOMATO_SEED']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_TOMATO_SEED']], 0x3), this['craft_buttons'][CRAFT['TOMATO_SEED']]['id'] = CRAFT['TOMATO_SEED'], this['craft_buttons'][CRAFT['CARROT_SEED']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_CARROT_SEED']], 0x3), this['craft_buttons'][CRAFT['CARROT_SEED']]['id'] = CRAFT['CARROT_SEED'], this['craft_buttons'][CRAFT['WATERMELON_SEED']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_WATERMELON_SEED']], 0x3), this['craft_buttons'][CRAFT['WATERMELON_SEED']]['id'] = CRAFT['WATERMELON_SEED'], this['craft_buttons'][CRAFT['ALOE_VERA_SEED']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_ALOE_VERA_SEED']], 0x3), this['craft_buttons'][CRAFT['ALOE_VERA_SEED']]['id'] = CRAFT['ALOE_VERA_SEED'], this['craft_buttons'][CRAFT['WOOD_SPEAR']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_WOOD_SPEAR']], 0x3), this['craft_buttons'][CRAFT['WOOD_SPEAR']]['id'] = CRAFT['WOOD_SPEAR'], this['craft_buttons'][CRAFT['DRAGON_SPEAR']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_DRAGON_SPEAR']], 0x3), this['craft_buttons'][CRAFT['DRAGON_SPEAR']]['id'] = CRAFT['DRAGON_SPEAR'], this['craft_buttons'][CRAFT['CRAB_SPEAR']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_CRAB_SPEAR']], 0x3), this['craft_buttons'][CRAFT['CRAB_SPEAR']]['id'] = CRAFT['CRAB_SPEAR'], this['craft_buttons'][CRAFT['BED']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_BED']], 0x3), this['craft_buttons'][CRAFT['BED']]['id'] = CRAFT['BED'], this['craft_buttons'][CRAFT['CROWN_CRAB']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_CROWN_CRAB']], 0x3), this['craft_buttons'][CRAFT['CROWN_CRAB']]['id'] = CRAFT['CROWN_CRAB'], this['chest_buttons'][INV['PITCHFORK']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_PITCHFORK']], 0x3), this['chest_buttons'][INV['PITCHFORK']]['id'] = INV['PITCHFORK'], this['inv_buttons'][INV['PITCHFORK']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_PITCHFORK']], 0x3), this['inv_buttons'][INV['PITCHFORK']]['id'] = INV['PITCHFORK'], this['craft_buttons'][CRAFT['PITCHFORK']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_PITCHFORK']], 0x3), this['craft_buttons'][CRAFT['PITCHFORK']]['id'] = CRAFT['PITCHFORK'], this['chest_buttons'][INV['PITCHFORK2']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_PITCHFORK2']], 0x3), this['chest_buttons'][INV['PITCHFORK2']]['id'] = INV['PITCHFORK2'], this['inv_buttons'][INV['PITCHFORK2']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_PITCHFORK2']], 0x3), this['inv_buttons'][INV['PITCHFORK2']]['id'] = INV['PITCHFORK2'], this['craft_buttons'][CRAFT['PITCHFORK2']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_PITCHFORK2']], 0x3), this['craft_buttons'][CRAFT['PITCHFORK2']]['id'] = CRAFT['PITCHFORK2'], this['chest_buttons'][INV['MACHETE']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_MACHETE']], 0x3), this['chest_buttons'][INV['MACHETE']]['id'] = INV['MACHETE'], this['inv_buttons'][INV['MACHETE']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_MACHETE']], 0x3), this['inv_buttons'][INV['MACHETE']]['id'] = INV['MACHETE'], this['craft_buttons'][CRAFT['MACHETE']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_MACHETE']], 0x3), this['craft_buttons'][CRAFT['MACHETE']]['id'] = CRAFT['MACHETE'], this['chest_buttons'][INV['PILOT_HELMET']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_PILOT_HELMET']], 0x3), this['chest_buttons'][INV['PILOT_HELMET']]['id'] = INV['PILOT_HELMET'], this['inv_buttons'][INV['PILOT_HELMET']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_PILOT_HELMET']], 0x3), this['inv_buttons'][INV['PILOT_HELMET']]['id'] = INV['PILOT_HELMET'], this['craft_buttons'][CRAFT['PILOT_HELMET']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_PILOT_HELMET']], 0x3), this['craft_buttons'][CRAFT['PILOT_HELMET']]['id'] = CRAFT['PILOT_HELMET'], this['chest_buttons'][INV['PITCHFORK_PART']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_PITCHFORK_PART']], 0x3), this['chest_buttons'][INV['PITCHFORK_PART']]['id'] = INV['PITCHFORK_PART'], this['inv_buttons'][INV['PITCHFORK_PART']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_PITCHFORK_PART']], 0x3), this['inv_buttons'][INV['PITCHFORK_PART']]['id'] = INV['PITCHFORK_PART'], this['chest_buttons'][INV['SANDWORM_JUICE']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_SANDWORM_JUICE']], 0x3), this['chest_buttons'][INV['SANDWORM_JUICE']]['id'] = INV['SANDWORM_JUICE'], this['inv_buttons'][INV['SANDWORM_JUICE']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_SANDWORM_JUICE']], 0x3), this['inv_buttons'][INV['SANDWORM_JUICE']]['id'] = INV['SANDWORM_JUICE'], this['chest_buttons'][INV['PILOT_GLASSES']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_PILOT_GLASSES']], 0x3), this['chest_buttons'][INV['PILOT_GLASSES']]['id'] = INV['PILOT_GLASSES'], this['inv_buttons'][INV['PILOT_GLASSES']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_PILOT_GLASSES']], 0x3), this['inv_buttons'][INV['PILOT_GLASSES']]['id'] = INV['PILOT_GLASSES'], this['chest_buttons'][INV['EMERALD_MACHINE']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_EMERALD_MACHINE']], 0x3), this['chest_buttons'][INV['EMERALD_MACHINE']]['id'] = INV['EMERALD_MACHINE'], this['inv_buttons'][INV['EMERALD_MACHINE']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_EMERALD_MACHINE']], 0x3), this['inv_buttons'][INV['EMERALD_MACHINE']]['id'] = INV['EMERALD_MACHINE'], this['craft_buttons'][CRAFT['EMERALD_MACHINE']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_EMERALD_MACHINE']], 0x3), this['craft_buttons'][CRAFT['EMERALD_MACHINE']]['id'] = CRAFT['EMERALD_MACHINE'], this['chest_buttons'][INV['WOOD_DOOR_SPIKE']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_WOOD_DOOR_SPIKE']], 0x3), this['chest_buttons'][INV['WOOD_DOOR_SPIKE']]['id'] = INV['WOOD_DOOR_SPIKE'], this['inv_buttons'][INV['WOOD_DOOR_SPIKE']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_WOOD_DOOR_SPIKE']], 0x3), this['inv_buttons'][INV['WOOD_DOOR_SPIKE']]['id'] = INV['WOOD_DOOR_SPIKE'], this['craft_buttons'][CRAFT['WOOD_DOOR_SPIKE']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_WOOD_DOOR_SPIKE']], 0x3), this['craft_buttons'][CRAFT['WOOD_DOOR_SPIKE']]['id'] = CRAFT['WOOD_DOOR_SPIKE'], this['chest_buttons'][INV['STONE_DOOR_SPIKE']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_STONE_DOOR_SPIKE']], 0x3), this['chest_buttons'][INV['STONE_DOOR_SPIKE']]['id'] = INV['STONE_DOOR_SPIKE'], this['inv_buttons'][INV['STONE_DOOR_SPIKE']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_STONE_DOOR_SPIKE']], 0x3), this['inv_buttons'][INV['STONE_DOOR_SPIKE']]['id'] = INV['STONE_DOOR_SPIKE'], this['craft_buttons'][CRAFT['STONE_DOOR_SPIKE']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_STONE_DOOR_SPIKE']], 0x3), this['craft_buttons'][CRAFT['STONE_DOOR_SPIKE']]['id'] = CRAFT['STONE_DOOR_SPIKE'], this['chest_buttons'][INV['GOLD_DOOR_SPIKE']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_GOLD_DOOR_SPIKE']], 0x3), this['chest_buttons'][INV['GOLD_DOOR_SPIKE']]['id'] = INV['GOLD_DOOR_SPIKE'], this['inv_buttons'][INV['GOLD_DOOR_SPIKE']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_GOLD_DOOR_SPIKE']], 0x3), this['inv_buttons'][INV['GOLD_DOOR_SPIKE']]['id'] = INV['GOLD_DOOR_SPIKE'], this['craft_buttons'][CRAFT['GOLD_DOOR_SPIKE']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_GOLD_DOOR_SPIKE']], 0x3), this['craft_buttons'][CRAFT['GOLD_DOOR_SPIKE']]['id'] = CRAFT['GOLD_DOOR_SPIKE'], this['chest_buttons'][INV['DIAMOND_DOOR_SPIKE']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_DIAMOND_DOOR_SPIKE']], 0x3), this['chest_buttons'][INV['DIAMOND_DOOR_SPIKE']]['id'] = INV['DIAMOND_DOOR_SPIKE'], this['inv_buttons'][INV['DIAMOND_DOOR_SPIKE']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_DIAMOND_DOOR_SPIKE']], 0x3), this['inv_buttons'][INV['DIAMOND_DOOR_SPIKE']]['id'] = INV['DIAMOND_DOOR_SPIKE'], this['craft_buttons'][CRAFT['DIAMOND_DOOR_SPIKE']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_DIAMOND_DOOR_SPIKE']], 0x3), this['craft_buttons'][CRAFT['DIAMOND_DOOR_SPIKE']]['id'] = CRAFT['DIAMOND_DOOR_SPIKE'], this['chest_buttons'][INV['AMETHYST_DOOR_SPIKE']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_AMETHYST_DOOR_SPIKE']], 0x3), this['chest_buttons'][INV['AMETHYST_DOOR_SPIKE']]['id'] = INV['AMETHYST_DOOR_SPIKE'], this['inv_buttons'][INV['AMETHYST_DOOR_SPIKE']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_AMETHYST_DOOR_SPIKE']], 0x3), this['inv_buttons'][INV['AMETHYST_DOOR_SPIKE']]['id'] = INV['AMETHYST_DOOR_SPIKE'], this['craft_buttons'][CRAFT['AMETHYST_DOOR_SPIKE']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_AMETHYST_DOOR_SPIKE']], 0x3), this['craft_buttons'][CRAFT['AMETHYST_DOOR_SPIKE']]['id'] = CRAFT['AMETHYST_DOOR_SPIKE'], this['chest_buttons'][INV['REIDITE_DOOR_SPIKE']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_REIDITE_DOOR_SPIKE']], 0x3), this['chest_buttons'][INV['REIDITE_DOOR_SPIKE']]['id'] = INV['REIDITE_DOOR_SPIKE'], this['inv_buttons'][INV['REIDITE_DOOR_SPIKE']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_REIDITE_DOOR_SPIKE']], 0x3), this['inv_buttons'][INV['REIDITE_DOOR_SPIKE']]['id'] = INV['REIDITE_DOOR_SPIKE'], this['craft_buttons'][CRAFT['REIDITE_DOOR_SPIKE']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_REIDITE_DOOR_SPIKE']], 0x3), this['craft_buttons'][CRAFT['REIDITE_DOOR_SPIKE']]['id'] = CRAFT['REIDITE_DOOR_SPIKE'], this['chest_buttons'][INV['REIDITE_WALL']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_REIDITE_WALL']], 0x3), this['chest_buttons'][INV['REIDITE_WALL']]['id'] = INV['REIDITE_WALL'], this['inv_buttons'][INV['REIDITE_WALL']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_REIDITE_WALL']], 0x3), this['inv_buttons'][INV['REIDITE_WALL']]['id'] = INV['REIDITE_WALL'], this['craft_buttons'][CRAFT['REIDITE_WALL']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_REIDITE_WALL']], 0x3), this['craft_buttons'][CRAFT['REIDITE_WALL']]['id'] = CRAFT['REIDITE_WALL'], this['chest_buttons'][INV['REIDITE_SPIKE']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_REIDITE_SPIKE']], 0x3), this['chest_buttons'][INV['REIDITE_SPIKE']]['id'] = INV['REIDITE_SPIKE'], this['inv_buttons'][INV['REIDITE_SPIKE']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_REIDITE_SPIKE']], 0x3), this['inv_buttons'][INV['REIDITE_SPIKE']]['id'] = INV['REIDITE_SPIKE'], this['craft_buttons'][CRAFT['REIDITE_SPIKE']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_REIDITE_SPIKE']], 0x3), this['craft_buttons'][CRAFT['REIDITE_SPIKE']]['id'] = CRAFT['REIDITE_SPIKE'], this['chest_buttons'][INV['REIDITE_DOOR']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_REIDITE_DOOR']], 0x3), this['chest_buttons'][INV['REIDITE_DOOR']]['id'] = INV['REIDITE_DOOR'], this['inv_buttons'][INV['REIDITE_DOOR']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_REIDITE_DOOR']], 0x3), this['inv_buttons'][INV['REIDITE_DOOR']]['id'] = INV['REIDITE_DOOR'], this['craft_buttons'][CRAFT['REIDITE_DOOR']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_REIDITE_DOOR']], 0x3), this['craft_buttons'][CRAFT['REIDITE_DOOR']]['id'] = CRAFT['REIDITE_DOOR'], this['chest_buttons'][INV['EXTRACTOR_MACHINE_STONE']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_EXTRACTOR_MACHINE_STONE']], 0x3), this['chest_buttons'][INV['EXTRACTOR_MACHINE_STONE']]['id'] = INV['EXTRACTOR_MACHINE_STONE'], this['inv_buttons'][INV['EXTRACTOR_MACHINE_STONE']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_EXTRACTOR_MACHINE_STONE']], 0x3), this['inv_buttons'][INV['EXTRACTOR_MACHINE_STONE']]['id'] = INV['EXTRACTOR_MACHINE_STONE'], this['craft_buttons'][CRAFT['EXTRACTOR_MACHINE_STONE']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_EXTRACTOR_MACHINE_STONE']], 0x3), this['craft_buttons'][CRAFT['EXTRACTOR_MACHINE_STONE']]['id'] = CRAFT['EXTRACTOR_MACHINE_STONE'], this['chest_buttons'][INV['EXTRACTOR_MACHINE_GOLD']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_EXTRACTOR_MACHINE_GOLD']], 0x3), this['chest_buttons'][INV['EXTRACTOR_MACHINE_GOLD']]['id'] = INV['EXTRACTOR_MACHINE_GOLD'], this['inv_buttons'][INV['EXTRACTOR_MACHINE_GOLD']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_EXTRACTOR_MACHINE_GOLD']], 0x3), this['inv_buttons'][INV['EXTRACTOR_MACHINE_GOLD']]['id'] = INV['EXTRACTOR_MACHINE_GOLD'], this['craft_buttons'][CRAFT['EXTRACTOR_MACHINE_GOLD']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_EXTRACTOR_MACHINE_GOLD']], 0x3), this['craft_buttons'][CRAFT['EXTRACTOR_MACHINE_GOLD']]['id'] = CRAFT['EXTRACTOR_MACHINE_GOLD'], this['chest_buttons'][INV['EXTRACTOR_MACHINE_DIAMOND']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_EXTRACTOR_MACHINE_DIAMOND']], 0x3), this['chest_buttons'][INV['EXTRACTOR_MACHINE_DIAMOND']]['id'] = INV['EXTRACTOR_MACHINE_DIAMOND'], this['inv_buttons'][INV['EXTRACTOR_MACHINE_DIAMOND']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_EXTRACTOR_MACHINE_DIAMOND']], 0x3), this['inv_buttons'][INV['EXTRACTOR_MACHINE_DIAMOND']]['id'] = INV['EXTRACTOR_MACHINE_DIAMOND'], this['craft_buttons'][CRAFT['EXTRACTOR_MACHINE_DIAMOND']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_EXTRACTOR_MACHINE_DIAMOND']], 0x3), this['craft_buttons'][CRAFT['EXTRACTOR_MACHINE_DIAMOND']]['id'] = CRAFT['EXTRACTOR_MACHINE_DIAMOND'], this['chest_buttons'][INV['EXTRACTOR_MACHINE_AMETHYST']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_EXTRACTOR_MACHINE_AMETHYST']], 0x3), this['chest_buttons'][INV['EXTRACTOR_MACHINE_AMETHYST']]['id'] = INV['EXTRACTOR_MACHINE_AMETHYST'], this['inv_buttons'][INV['EXTRACTOR_MACHINE_AMETHYST']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_EXTRACTOR_MACHINE_AMETHYST']], 0x3), this['inv_buttons'][INV['EXTRACTOR_MACHINE_AMETHYST']]['id'] = INV['EXTRACTOR_MACHINE_AMETHYST'], this['craft_buttons'][CRAFT['EXTRACTOR_MACHINE_AMETHYST']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_EXTRACTOR_MACHINE_AMETHYST']], 0x3), this['craft_buttons'][CRAFT['EXTRACTOR_MACHINE_AMETHYST']]['id'] = CRAFT['EXTRACTOR_MACHINE_AMETHYST'], this['chest_buttons'][INV['EXTRACTOR_MACHINE_REIDITE']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_EXTRACTOR_MACHINE_REIDITE']], 0x3), this['chest_buttons'][INV['EXTRACTOR_MACHINE_REIDITE']]['id'] = INV['EXTRACTOR_MACHINE_REIDITE'], this['inv_buttons'][INV['EXTRACTOR_MACHINE_REIDITE']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_EXTRACTOR_MACHINE_REIDITE']], 0x3), this['inv_buttons'][INV['EXTRACTOR_MACHINE_REIDITE']]['id'] = INV['EXTRACTOR_MACHINE_REIDITE'], this['craft_buttons'][CRAFT['EXTRACTOR_MACHINE_REIDITE']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_EXTRACTOR_MACHINE_REIDITE']], 0x3), this['craft_buttons'][CRAFT['EXTRACTOR_MACHINE_REIDITE']]['id'] = CRAFT['EXTRACTOR_MACHINE_REIDITE'], this['chest_buttons'][INV['FLAME']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_FLAME']], 0x3), this['chest_buttons'][INV['FLAME']]['id'] = INV['FLAME'], this['inv_buttons'][INV['FLAME']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_FLAME']], 0x3), this['inv_buttons'][INV['FLAME']]['id'] = INV['FLAME'], this['inv_buttons'][INV['FLAME']]['info']['img'][0x2] = this['inv_buttons'][INV['FLAME']]['info']['img'][0x0], this['chest_buttons'][INV['LAVA_HEART']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_LAVA_HEART']], 0x3), this['chest_buttons'][INV['LAVA_HEART']]['id'] = INV['LAVA_HEART'], this['inv_buttons'][INV['LAVA_HEART']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_LAVA_HEART']], 0x3), this['inv_buttons'][INV['LAVA_HEART']]['id'] = INV['LAVA_HEART'], this['inv_buttons'][INV['LAVA_HEART']]['info']['img'][0x2] = this['inv_buttons'][INV['LAVA_HEART']]['info']['img'][0x0], this['chest_buttons'][INV['REIDITE']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_REIDITE']], 0x3), this['chest_buttons'][INV['REIDITE']]['id'] = INV['REIDITE'], this['inv_buttons'][INV['REIDITE']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_REIDITE']], 0x3), this['inv_buttons'][INV['REIDITE']]['id'] = INV['REIDITE'], this['inv_buttons'][INV['REIDITE']]['info']['img'][0x2] = this['inv_buttons'][INV['REIDITE']]['info']['img'][0x0], this['chest_buttons'][INV['REIDITE_SWORD']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_REIDITE_SWORD']], 0x3), this['chest_buttons'][INV['REIDITE_SWORD']]['id'] = INV['REIDITE_SWORD'], this['inv_buttons'][INV['REIDITE_SWORD']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_REIDITE_SWORD']], 0x3), this['inv_buttons'][INV['REIDITE_SWORD']]['id'] = INV['REIDITE_SWORD'], this['craft_buttons'][CRAFT['REIDITE_SWORD']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_REIDITE_SWORD']], 0x3), this['craft_buttons'][CRAFT['REIDITE_SWORD']]['id'] = CRAFT['REIDITE_SWORD'], this['chest_buttons'][INV['DIAMOND_PROTECTION']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_DIAMOND_PROTECTION']], 0x3), this['chest_buttons'][INV['DIAMOND_PROTECTION']]['id'] = INV['DIAMOND_PROTECTION'], this['inv_buttons'][INV['DIAMOND_PROTECTION']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_DIAMOND_PROTECTION']], 0x3), this['inv_buttons'][INV['DIAMOND_PROTECTION']]['id'] = INV['DIAMOND_PROTECTION'], this['craft_buttons'][CRAFT['DIAMOND_PROTECTION']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_DIAMOND_PROTECTION']], 0x3), this['craft_buttons'][CRAFT['DIAMOND_PROTECTION']]['id'] = CRAFT['DIAMOND_PROTECTION'], this['chest_buttons'][INV['AMETHYST_PROTECTION']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_AMETHYST_PROTECTION']], 0x3), this['chest_buttons'][INV['AMETHYST_PROTECTION']]['id'] = INV['AMETHYST_PROTECTION'], this['inv_buttons'][INV['AMETHYST_PROTECTION']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_AMETHYST_PROTECTION']], 0x3), this['inv_buttons'][INV['AMETHYST_PROTECTION']]['id'] = INV['AMETHYST_PROTECTION'], this['craft_buttons'][CRAFT['AMETHYST_PROTECTION']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_AMETHYST_PROTECTION']], 0x3), this['craft_buttons'][CRAFT['AMETHYST_PROTECTION']]['id'] = CRAFT['AMETHYST_PROTECTION'], this['chest_buttons'][INV['REIDITE_PROTECTION']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_REIDITE_PROTECTION']], 0x3), this['chest_buttons'][INV['REIDITE_PROTECTION']]['id'] = INV['REIDITE_PROTECTION'], this['inv_buttons'][INV['REIDITE_PROTECTION']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_REIDITE_PROTECTION']], 0x3), this['inv_buttons'][INV['REIDITE_PROTECTION']]['id'] = INV['REIDITE_PROTECTION'], this['craft_buttons'][CRAFT['REIDITE_PROTECTION']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_REIDITE_PROTECTION']], 0x3), this['craft_buttons'][CRAFT['REIDITE_PROTECTION']]['id'] = CRAFT['REIDITE_PROTECTION'], this['chest_buttons'][INV['LAVA_HELMET']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_LAVA_HELMET']], 0x3), this['chest_buttons'][INV['LAVA_HELMET']]['id'] = INV['LAVA_HELMET'], this['inv_buttons'][INV['LAVA_HELMET']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_LAVA_HELMET']], 0x3), this['inv_buttons'][INV['LAVA_HELMET']]['id'] = INV['LAVA_HELMET'], this['craft_buttons'][CRAFT['LAVA_HELMET']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_LAVA_HELMET']], 0x3), this['craft_buttons'][CRAFT['LAVA_HELMET']]['id'] = CRAFT['LAVA_HELMET'], this['chest_buttons'][INV['WITCH']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_WITCH']], 0x3), this['chest_buttons'][INV['WITCH']]['id'] = INV['WITCH'], this['inv_buttons'][INV['WITCH']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_WITCH']], 0x3), this['inv_buttons'][INV['WITCH']]['id'] = INV['WITCH'], this['craft_buttons'][CRAFT['WITCH']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_WITCH']], 0x3), this['craft_buttons'][CRAFT['WITCH']]['id'] = CRAFT['WITCH'], this['chest_buttons'][INV['WAND1']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_WAND1']], 0x3), this['chest_buttons'][INV['WAND1']]['id'] = INV['WAND1'], this['inv_buttons'][INV['WAND1']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_WAND1']], 0x3), this['inv_buttons'][INV['WAND1']]['id'] = INV['WAND1'], this['craft_buttons'][CRAFT['WAND1']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_WAND1']], 0x3), this['craft_buttons'][CRAFT['WAND1']]['id'] = CRAFT['WAND1'], this['chest_buttons'][INV['WAND2']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_WAND2']], 0x3), this['chest_buttons'][INV['WAND2']]['id'] = INV['WAND2'], this['inv_buttons'][INV['WAND2']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_WAND2']], 0x3), this['inv_buttons'][INV['WAND2']]['id'] = INV['WAND2'], this['craft_buttons'][CRAFT['WAND2']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_WAND2']], 0x3), this['craft_buttons'][CRAFT['WAND2']]['id'] = CRAFT['WAND2'], this['chest_buttons'][INV['NIMBUS']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_NIMBUS']], 0x3), this['chest_buttons'][INV['NIMBUS']]['id'] = INV['NIMBUS'], this['inv_buttons'][INV['NIMBUS']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_NIMBUS']], 0x3), this['inv_buttons'][INV['NIMBUS']]['id'] = INV['NIMBUS'], this['craft_buttons'][CRAFT['NIMBUS']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_NIMBUS']], 0x3), this['craft_buttons'][CRAFT['NIMBUS']]['id'] = CRAFT['NIMBUS'], this['chest_buttons'][INV['FIREFLY']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_FIREFLY']], 0x3), this['chest_buttons'][INV['FIREFLY']]['id'] = INV['FIREFLY'], this['inv_buttons'][INV['FIREFLY']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_FIREFLY']], 0x3), this['inv_buttons'][INV['FIREFLY']]['id'] = INV['FIREFLY'], this['craft_buttons'][CRAFT['FIREFLY']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_FIREFLY']], 0x3), this['craft_buttons'][CRAFT['FIREFLY']]['id'] = CRAFT['FIREFLY'], this['chest_buttons'][INV['REIDITE_SPEAR']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_REIDITE_SPEAR']], 0x3), this['chest_buttons'][INV['REIDITE_SPEAR']]['id'] = INV['REIDITE_SPEAR'], this['inv_buttons'][INV['REIDITE_SPEAR']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_REIDITE_SPEAR']], 0x3), this['inv_buttons'][INV['REIDITE_SPEAR']]['id'] = INV['REIDITE_SPEAR'], this['craft_buttons'][CRAFT['REIDITE_SPEAR']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_REIDITE_SPEAR']], 0x3), this['craft_buttons'][CRAFT['REIDITE_SPEAR']]['id'] = CRAFT['REIDITE_SPEAR'], this['chest_buttons'][INV['REIDITE_HELMET']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_REIDITE_HELMET']], 0x3), this['chest_buttons'][INV['REIDITE_HELMET']]['id'] = INV['REIDITE_HELMET'], this['inv_buttons'][INV['REIDITE_HELMET']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_REIDITE_HELMET']], 0x3), this['inv_buttons'][INV['REIDITE_HELMET']]['id'] = INV['REIDITE_HELMET'], this['craft_buttons'][CRAFT['REIDITE_HELMET']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_REIDITE_HELMET']], 0x3), this['craft_buttons'][CRAFT['REIDITE_HELMET']]['id'] = CRAFT['REIDITE_HELMET'], this['chest_buttons'][INV['LAVA_SPEAR']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_LAVA_SPEAR']], 0x3), this['chest_buttons'][INV['LAVA_SPEAR']]['id'] = INV['LAVA_SPEAR'], this['inv_buttons'][INV['LAVA_SPEAR']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_LAVA_SPEAR']], 0x3), this['inv_buttons'][INV['LAVA_SPEAR']]['id'] = INV['LAVA_SPEAR'], this['craft_buttons'][CRAFT['LAVA_SPEAR']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_LAVA_SPEAR']], 0x3), this['craft_buttons'][CRAFT['LAVA_SPEAR']]['id'] = CRAFT['LAVA_SPEAR'], this['chest_buttons'][INV['LAVA_SWORD']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_LAVA_SWORD']], 0x3), this['chest_buttons'][INV['LAVA_SWORD']]['id'] = INV['LAVA_SWORD'], this['inv_buttons'][INV['LAVA_SWORD']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_LAVA_SWORD']], 0x3), this['inv_buttons'][INV['LAVA_SWORD']]['id'] = INV['LAVA_SWORD'], this['craft_buttons'][CRAFT['LAVA_SWORD']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['CRAFT_LAVA_SWORD']], 0x3), this['craft_buttons'][CRAFT['LAVA_SWORD']]['id'] = CRAFT['LAVA_SWORD'], this['chest_buttons'][INV['LAVA_ORB']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_LAVA_ORB']], 0x3), this['chest_buttons'][INV['LAVA_ORB']]['id'] = INV['LAVA_ORB'], this['inv_buttons'][INV['LAVA_ORB']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_LAVA_ORB']], 0x3), this['inv_buttons'][INV['LAVA_ORB']]['id'] = INV['LAVA_ORB'], this['chest_buttons'][INV['EGG0']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_EGG0']], 0x3), this['chest_buttons'][INV['EGG0']]['id'] = INV['EGG0'], this['inv_buttons'][INV['EGG0']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_EGG0']], 0x3), this['inv_buttons'][INV['EGG0']]['id'] = INV['EGG0'], this['chest_buttons'][INV['EGG1']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_EGG1']], 0x3), this['chest_buttons'][INV['EGG1']]['id'] = INV['EGG1'], this['inv_buttons'][INV['EGG1']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_EGG1']], 0x3), this['inv_buttons'][INV['EGG1']]['id'] = INV['EGG1'], this['chest_buttons'][INV['EGG2']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_EGG2']], 0x3), this['chest_buttons'][INV['EGG2']]['id'] = INV['EGG2'], this['inv_buttons'][INV['EGG2']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_EGG2']], 0x3), this['inv_buttons'][INV['EGG2']]['id'] = INV['EGG2'], this['chest_buttons'][INV['EGG3']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_EGG3']], 0x3), this['chest_buttons'][INV['EGG3']]['id'] = INV['EGG3'], this['inv_buttons'][INV['EGG3']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_EGG3']], 0x3), this['inv_buttons'][INV['EGG3']]['id'] = INV['EGG3'], this['chest_buttons'][INV['EGG4']] = gui_create_button(0x44, 0x44, '', sprite[SPRITE['CHEST_EGG4']], 0x3), this['chest_buttons'][INV['EGG4']]['id'] = INV['EGG4'], this['inv_buttons'][INV['EGG4']] = gui_create_button(0x3c, 0x3c, '', sprite[SPRITE['INV_EGG4']], 0x3), this['inv_buttons'][INV['EGG4']]['id'] = INV['EGG4'], this['update_craft_buttons'] = function() {
        var _0x36dc8f = user['craft']['can_craft'],
            _0x4c10ed = 0xa,
            _0x8db3d9 = 0xa;
        for (var _0x3130c7 = 0x0; _0x3130c7 < _0x36dc8f['length']; _0x3130c7++) {
            _0x3130c7 > 0x0 && !(_0x3130c7 % 0x4) && (_0x4c10ed += _0x36dc8f[0x0]['info']['width'] + 0xa, _0x8db3d9 = 0xa), _0x36dc8f[_0x3130c7]['info']['translate']['x'] = _0x4c10ed, _0x36dc8f[_0x3130c7]['info']['translate']['y'] = _0x8db3d9, _0x8db3d9 += 0xa + _0x36dc8f[_0x3130c7]['info']['height'];
        }
    }, this['update_chest_buttons'] = function() {
        var _0x53861a = Math['floor'](Math['floor']((0x3 + user['craft']['can_craft']['length']) / 0x4) * (0xa + this['chest_buttons'][0x0]['info']['img'][0x0]['width']) + 0x23);
        for (var _0x5a5010 = 0x0; _0x5a5010 < this['chest_buttons']['length']; _0x5a5010++) {
            if (!this['chest_buttons'][_0x5a5010]) continue;
            this['chest_buttons'][_0x5a5010]['info']['translate']['x'] = _0x53861a, this['chest_buttons'][_0x5a5010]['info']['translate']['y'] = 0x16;
        }
        this['chest_lockpick']['info']['translate']['x'] = _0x53861a + 0x11, this['chest_lockpick']['info']['translate']['y'] = 0x16 + sprite[SPRITE['CHEST_SLOT']]['height'], this['chest_locked']['info']['translate']['x'] = _0x53861a + 0x11, this['chest_locked']['info']['translate']['y'] = 0x1e, this['chest_padlock']['info']['translate']['x'] = _0x53861a + 0x11, this['chest_padlock']['info']['translate']['y'] = 0x16 + sprite[SPRITE['CHEST_SLOT']]['height'];
    }, this['update_team_buttons'] = function() {
        var _0x5071bf = Math['floor']((canw - sprite[SPRITE['TEAM_BUTTON']][0x0]['width']) / 0x2);
        for (var _0x18dfd3 = 0x0; _0x18dfd3 < this['team_buttons']['length']; _0x18dfd3++) {
            this['team_buttons'][_0x18dfd3]['button']['info']['translate']['x'] = _0x5071bf, this['team_buttons'][_0x18dfd3]['button']['info']['translate']['y'] = -0xd;
        }
    }, this['update_bread_oven_button'] = function() {
        var _0x31bfca = 0xc + Math['floor'](Math['floor']((0x3 + user['craft']['can_craft']['length']) / 0x4) * (0xa + this['bread_oven_wood_button']['info']['img'][0x0]['width']) + 0x23);
        this['bread_oven_wood_button']['info']['translate']['x'] = _0x31bfca, this['bread_oven_wood_button']['info']['translate']['y'] = 0x21, this['bread_oven_flour_button']['info']['translate']['x'] = this['bread_oven_wood_button']['info']['translate']['x'], this['bread_oven_flour_button']['info']['translate']['y'] = 0x89, this['bread_oven_bread_button']['info']['translate']['x'] = this['bread_oven_wood_button']['info']['translate']['x'], this['bread_oven_bread_button']['info']['translate']['y'] = 0xf0;
    }, this['update_extractor_button'] = function() {
        var _0x3ea9e7 = 0xc + Math['floor'](Math['floor']((0x3 + user['craft']['can_craft']['length']) / 0x4) * (0xa + this['extractor_wood_button']['info']['img'][0x0]['width']) + 0x23);
        this['extractor_wood_button']['info']['translate']['x'] = _0x3ea9e7, this['extractor_wood_button']['info']['translate']['y'] = 0x24, _0x3ea9e7 += 0x53, this['extractor_stone_button']['info']['translate']['x'] = _0x3ea9e7, this['extractor_stone_button']['info']['translate']['y'] = 0x24, this['extractor_gold_button']['info']['translate']['x'] = _0x3ea9e7, this['extractor_gold_button']['info']['translate']['y'] = 0x24, this['extractor_diamond_button']['info']['translate']['x'] = _0x3ea9e7, this['extractor_diamond_button']['info']['translate']['y'] = 0x24, this['extractor_amethyst_button']['info']['translate']['x'] = _0x3ea9e7, this['extractor_amethyst_button']['info']['translate']['y'] = 0x24, this['extractor_reidite_button']['info']['translate']['x'] = _0x3ea9e7, this['extractor_reidite_button']['info']['translate']['y'] = 0x24;
    }, this['update_windmill_button'] = function() {
        var _0x451676 = 0xc + Math['floor'](Math['floor']((0x3 + user['craft']['can_craft']['length']) / 0x4) * (0xa + this['windmill_wheat_button']['info']['img'][0x0]['width']) + 0x23);
        this['windmill_wheat_button']['info']['translate']['x'] = _0x451676, this['windmill_wheat_button']['info']['translate']['y'] = 0x24, _0x451676 += 0x53, this['windmill_flour_button']['info']['translate']['x'] = _0x451676, this['windmill_flour_button']['info']['translate']['y'] = 0x24;
    }, this['update_furnace_button'] = function() {
        var _0x3b44ca = Math['floor'](Math['floor']((0x3 + user['craft']['can_craft']['length']) / 0x4) * (0xa + this['furnace_button']['info']['img'][0x0]['width']) + 0x23);
        this['furnace_button']['info']['translate']['x'] = _0x3b44ca, this['furnace_button']['info']['translate']['y'] = 0x16;
    }, this['update_inv_buttons'] = function() {
        var _0x2ec10c = user['inv']['can_select'];
        if (_0x2ec10c['length'] > 0x0) var _0x557155 = Math['floor']((canw - (_0x2ec10c[0x0]['info']['width'] + 0x5) * user['inv']['max']) / 0x2);
        for (var _0x1567f0 = 0x0; _0x1567f0 < _0x2ec10c['length']; _0x1567f0++) {
            _0x2ec10c[_0x1567f0]['info']['translate']['x'] = _0x557155 + (_0x2ec10c[_0x1567f0]['info']['width'] + 0x5) * _0x1567f0, _0x2ec10c[_0x1567f0]['info']['translate']['y'] = canh - _0x2ec10c[_0x1567f0]['info']['width'] - 0xa, this['plus_buttons'][_0x2ec10c[_0x1567f0]['id']]['info']['translate']['x'] = _0x2ec10c[_0x1567f0]['info']['translate']['x'] + 0xd, this['plus_buttons'][_0x2ec10c[_0x1567f0]['id']]['info']['translate']['y'] = _0x2ec10c[_0x1567f0]['info']['translate']['y'] - this['plus_buttons'][_0x2ec10c[_0x1567f0]['id']]['info']['img'][0x0]['height'] - 0x6;
        }
    };
    var _0x61e076 = 0x0,
        _0xc4ba23 = 0x1e,
        _0x23ee14 = function() {
            _0x26de52['update'](), _0x61e076++;
            if (_0x61e076 == _0xc4ba23) {
                _0x26de52['add_event_listener'](), _0x26de52['update']();
                return;
            }
            window['setTimeout'](_0x23ee14, 0x21);
        };
    this['quit'] = function(_0x13f399) {
        if (user['chat']['open']) user['chat']['quit']();
        if (user['terminal']['open']) user['terminal']['quit']();
        document['getElementById']('team_box')['style']['display'] = 'none', _0x26de52['market']['style']['display'] = 'none', _0x26de52['market']['open'] = ![], _0x26de52['sign']['style']['display'] = 'none', _0x26de52['sign']['open'] = ![], document['getElementById']('shop_starterkit')['style']['display'] = 'none', document['getElementById']('home_craft')['style']['display'] = 'none', document['getElementById']('recipe_craft')['style']['display'] = 'none', _0x26de52['craft_list']['open'] = ![], document['getElementById']('option_in_game')['style']['display'] = 'none', _0x26de52['options']['open'] = ![], document['getElementById']('sure_delete')['style']['display'] = 'none', _0x26de52['safe_delete']['open'] = ![], document['getElementById']('cancel_sure_delete')['style']['display'] = 'none', _0x26de52['safe_cancel']['open'] = ![], document['getElementById']('chronoquest')['style']['display'] = 'none', _0x26de52['quests']['open'] = ![], _0x182e7b = _0x13f399, _0x26de52['remove_event_listener'](), _0x26de52['can']['style']['cursor'] = _0x26de52['cursor0'], audio['quit'](), _0x406e6e = -0x1, _0x13acd7();
    };
    var _0x182e7b, _0x406e6e = -0x1,
        _0xdd0771 = 0x1e,
        _0x13acd7 = function() {
            _0x26de52['update'](), _0x406e6e++;
            if (_0x406e6e == _0xdd0771) {
                _0x26de52['stop'](), _0x182e7b();
                return;
            }
            window['setTimeout'](_0x13acd7, 0x21);
        };
    this['is_run'] = ![], this['stop'] = function() {
        this['is_run'] = ![];
    }, this['run'] = function() {
        client['change_ground'](), _0x26de52['is_run'] = !![], _0x406e6e = -0x1, _0x61e076 = 0x0, _0x23ee14();
    }, this['update'] = function() {
        this['leaderboard']['translate']['x'] = canw - this['leaderboard']['img']['width'] - 0xa, this['leaderboard']['translate']['y'] = 0x5, world['clock']['translate']['x'] = this['leaderboard']['translate']['x'] - sprite[SPRITE['CLOCK']][0x0]['width'] - 0x55, world['clock']['translate']['y'] = 0xa, this['craft_list']['button']['info']['translate']['x'] = this['leaderboard']['translate']['x'] - sprite[SPRITE['RECIPE_BUTTON']][0x0]['width'] - 0xa, this['craft_list']['button']['info']['translate']['y'] = 0xa, this['quests']['button']['info']['translate']['x'] = this['leaderboard']['translate']['x'] - sprite[SPRITE['QUEST_BUTTON']][0x0]['width'] - 0x14, this['quests']['button']['info']['translate']['y'] = this['craft_list']['button']['info']['translate']['y'] + sprite[SPRITE['RECIPE_BUTTON']][0x0]['height'] + 0x5, this['options']['button']['info']['translate']['x'] = this['leaderboard']['translate']['x'] - sprite[SPRITE['OPTION_BUTTON']][0x0]['width'] - 0x14, this['options']['button']['info']['translate']['y'] = this['quests']['button']['info']['translate']['y'] + sprite[SPRITE['OPTION_BUTTON']][0x0]['height'] + 0x12, this['audio']['button_on']['info']['translate']['x'] = this['leaderboard']['translate']['x'] - sprite[SPRITE['OPTION_BUTTON']][0x0]['width'] - 0x14, this['audio']['button_on']['info']['translate']['y'] = this['options']['button']['info']['translate']['y'] + sprite[SPRITE['SOUND_BUTTON_OFF']][0x0]['height'], this['audio']['button_off']['info']['translate']['x'] = this['leaderboard']['translate']['x'] - sprite[SPRITE['OPTION_BUTTON']][0x0]['width'] - 0x14, this['audio']['button_off']['info']['translate']['y'] = this['options']['button']['info']['translate']['y'] + sprite[SPRITE['SOUND_BUTTON_OFF']][0x0]['height'], this['market']['button']['info']['translate']['x'] = this['leaderboard']['translate']['x'] - sprite[SPRITE['MARKET_BUTTON']][0x0]['width'] - 0x14, this['market']['button']['info']['translate']['y'] = this['audio']['button_on']['info']['translate']['y'] + sprite[SPRITE['MARKET_BUTTON']][0x0]['height'], user['auto_feed']['translate']['x'] = this['leaderboard']['translate']['x'] - 0x3f - 0x55, user['auto_feed']['translate']['y'] = 0x64, user['show_spectators']['translate']['x'] = this['leaderboard']['translate']['x'] - sprite[SPRITE['SHOW_SPECTATORS']]['width'] - 0x55, user['show_spectators']['translate']['y'] = user['auto_feed']['translate']['y'] + 0xa + sprite[SPRITE['AUTO_FEED']]['height'], this['minimap']['translate']['y'] = canh - 0x3 - 0xc1, this['minimap']['translate']['x'] = canw - 0x3 - 0xc1, this['gauges']['translate']['x'] = 0x5, this['gauges']['translate']['y'] = canh - this['gauges']['img']['height'] - 0x5, this['shop']['button']['info']['translate']['x'] = canw2 - 0x5b / 0x2, this['shop']['button']['info']['translate']['y'] = 0x32, this['update_craft_buttons'](), this['update_inv_buttons'](), this['update_chest_buttons'](), this['update_furnace_button'](), this['update_windmill_button'](), this['update_extractor_button'](), this['update_bread_oven_button'](), this['update_team_buttons'](), this['sign']['update_button'](), draw_team_buttons(), user['chat']['update'](), user['terminal']['update'](), this['team_box']['update'](), this['craft_list']['home']['update'](), this['craft_list']['list']['update'](), this['safe_delete']['update'](), this['safe_cancel']['update'](), this['quests']['update'](), this['shop']['update'](), this['options']['update'](), this['market']['update'](), this['sign']['update']();
        var _0x5440e = 0x0;
        if (_0x61e076 != _0xc4ba23) var _0x5440e = 0x5dc / (_0x61e076 + 0x1) - 0x32;
        if (_0x406e6e != -0x1) var _0x5440e = -(0x5dc / (_0xdd0771 - _0x406e6e + 0x1) - 0x30);
        this['shop']['button']['info']['translate']['y'] -= _0x5440e > 0x0 ? _0x5440e : -_0x5440e, this['leaderboard']['translate']['y'] -= _0x5440e > 0x0 ? _0x5440e : -_0x5440e, user['auto_feed']['translate']['y'] -= _0x5440e > 0x0 ? _0x5440e : -_0x5440e, user['show_spectators']['translate']['y'] -= _0x5440e > 0x0 ? _0x5440e : -_0x5440e, this['craft_list']['button']['info']['translate']['y'] -= _0x5440e > 0x0 ? _0x5440e : -_0x5440e, this['quests']['button']['info']['translate']['y'] -= _0x5440e > 0x0 ? _0x5440e : -_0x5440e, this['options']['button']['info']['translate']['y'] -= _0x5440e > 0x0 ? _0x5440e : -_0x5440e, this['market']['button']['info']['translate']['y'] -= _0x5440e > 0x0 ? _0x5440e : -_0x5440e, this['audio']['button_on']['info']['translate']['y'] -= _0x5440e > 0x0 ? _0x5440e : -_0x5440e, this['audio']['button_off']['info']['translate']['y'] -= _0x5440e > 0x0 ? _0x5440e : -_0x5440e, world['clock']['translate']['y'] -= _0x5440e > 0x0 ? _0x5440e : -_0x5440e, this['gauges']['translate']['y'] -= _0x5440e < 0x0 ? _0x5440e : -_0x5440e, this['minimap']['translate']['y'] -= _0x5440e < 0x0 ? _0x5440e : -_0x5440e;
    }, this['draw_UI'] = function() {
        if (!user['ghost']['enabled'] && this['show_ui'] && !user['zombie']) draw_ui_crafting();
        draw_ui_gear(), draw_ui_chat();
        if (this['show_ui']) {
            draw_minimap();
            if (this['show_recipe_book'] === 0x1) this['craft_list']['button']['draw'](_0x46c7bc);
            if (world['mode'] !== WORLD['MODE_ZOMBIES'] && world['mode'] !== WORLD['MODE_LEGACY'] && world['mode'] !== WORLD['MODE_BR'] && this['show_quest'] === 0x1) this['quests']['button']['draw'](_0x46c7bc);
            this['options']['button']['draw'](_0x46c7bc);
            if (this['show_market'] === 0x1) this['market']['button']['draw'](_0x46c7bc);
            if (audio['run']) this['audio']['button_on']['draw'](_0x46c7bc);
            else this['audio']['button_off']['draw'](_0x46c7bc);
            draw_leaderboard(), draw_status(), this['gauges']['draw'](), draw_weapon_switch_delay(), draw_helmet_switch_delay(), draw_build_delay(), draw_totem_delay(), draw_ui_inventory(), draw_chest_inventory(), draw_furnace_inventory(), draw_well_inventory(), draw_windmill_inventory(), draw_extractor_inventory(), draw_bread_oven_inventory(), draw_sign_button(), draw_team_buttons(), draw_info_box();
        }
        if (user['ghost']['enabled']) draw_resurrection_inventory();
        draw_bigmap();
        if (this['show_ui'] && this['show_clock'] === 0x1) draw_clock();
        user['welcome']['draw'](), user['alert']['draw']('#FFF', '#000'), this['show_ui'] && (user['ghost']['draw'](), user['shop']['draw'](), user['inv']['drag']['draw'](mouse['pos']['x'], mouse['pos']['y'])), draw_reconnect();
    }, this['update_scene'] = function() {
        user['cam']['update'](), user['gauges']['update'](), !user['reconnect']['enabled'] && user['alive'] && (user['control']['update'](), user['auto_feed']['update']()), world['update'](), this['quests']['update_chrono']();
    }, this['draw_scene'] = function() {
        draw_world_with_effect();
    }, this['update_connection'] = function() {
        client['check_state'](), client['check_pong'](), client['try_ping'](), client['update_cam']();
    }, this['draw'] = function() {
        if (!user['reconnect']['enabled'] && user['alive']) this['update_connection']();
        audio['scheduler'](), this['update_scene']();
        if (ui['hijackedAsset'] === 0x1) {
            var _0x21d371 = IMAGES['CHEATING_BOX'];
            ctxDrawImage(_0x46c7bc, _0x21d371, canw2 - _0x21d371['width'] / 0x4, canh2 - _0x21d371['height'] / 0x4, _0x21d371['width'] / 0x2, _0x21d371['height'] / 0x2);
            return;
        }
        this['draw_scene'](), this['draw_UI']();
    }, this['trigger_keyup'] = function(_0x1b0b5c) {
        if (!user['chat']['open']) {
            if (_0x1b0b5c['code'] === Settings['AutoSteal']['k']) Settings['AutoSteal']['e'] = ![];
            _0x1b0b5c['code'] === Settings['AutoSpike']['k'] && (Settings['AutoSpike']['e'] = !0x1), _0x1b0b5c['code'] === Settings['AutoSpikee']['k'] && (Settings['AutoSpikee']['e'] = !0x1), _0x1b0b5c['code'] === Settings['AutoSpikeee']['k'] && (Settings['AutoSpikeee']['e'] = !0x1);
        };
        if (user['chat']['open'] && _0x1b0b5c['keyCode'] === 0x1b) user['chat']['quit']();
        else {
            if (user['terminal']['open'] && _0x1b0b5c['keyCode'] === 0x1b) user['terminal']['quit']();
            else {
                if (!user['chat']['open'] && !user['terminal']['open'] && _0x1b0b5c['keyCode'] == 0x4f && _0x406e6e == -0x1) user['terminal']['_open']();
                else {
                    if (_0x1b0b5c['keyCode'] == 0xd && _0x406e6e == -0x1) {
                        if (user['terminal']['open']) user['terminal']['_send']();
                        else user['chat']['run']();
                    } else {
                        if (!user['chat']['open'] && !user['terminal']['open']) {
                            if (_0x1b0b5c['keyCode'] === 0x52) user['auto_feed']['invert']();
                            else {
                                if (_0x1b0b5c['keyCode'] === 0x50 && world['mode'] === WORLD['MODE_HUNGER_GAMES'] && !user['spectator']) user['show_spectators']['invert']();
                                else {
                                    if (_0x1b0b5c['keyCode'] >= 0x31 && _0x1b0b5c['keyCode'] <= 0x39) {
                                        if (user['craft']['id'] < 0x0) {
                                            var _0x1349e0 = _0x1b0b5c['keyCode'] - 0x31,
                                                _0x13eea6 = user['inv']['can_select'][_0x1349e0];
                                            if (_0x13eea6) client['select_inv'](_0x13eea6['id'], _0x1349e0);
                                        }
                                    } else {
                                        if (_0x1b0b5c['keyCode'] == 0x59) user['bigmap'] = !user['bigmap'];
                                        else {
                                            if (_0x1b0b5c['keyCode'] == 0x47) user['craft']['change_mode']();
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        keyboard['up'](_0x1b0b5c);
    };
    let _0x46b9a5 = 0x0;
    this['trigger_keydown'] = function(_0x51b36c) {
        keyboard['down'](_0x51b36c);
        if (_0x51b36c['keyCode'] == 0x8 && !user['chat']['open'] && !user['terminal']['open']) _0x51b36c['preventDefault']();
        if (!user['chat']['open'] && !user['terminal']['open']) {
            _0x51b36c['code'] === Settings['killworm']['k'] && (Settings['killworm']['e'] = !Settings['killworm']['e']);
            if (_0x51b36c['code'] === Settings['killworm']['k']) {
                if (!client['socket'] || 0x1 != client['socket']['readyState']) return;
                Settings['killworm']['e'] && function _0x5338b2() {
                    Settings['killworm']['e'] && (0x8 == _0x46b9a5 && (_0x46b9a5 = 0x0), setTimeout(() => {
                        0x0 == _0x46b9a5 && client['send_move'](0x8);
                    }, Settings['speed']), setTimeout(() => {
                        0x1 == _0x46b9a5 && client['send_move'](0x9);
                    }, Settings['speed']), setTimeout(() => {
                        0x2 == _0x46b9a5 && client['send_move'](0x1);
                    }, Settings['speed']), setTimeout(() => {
                        0x3 == _0x46b9a5 && client['send_move'](0x5);
                    }, Settings['speed']), setTimeout(() => {
                        0x4 == _0x46b9a5 && client['send_move'](0x4);
                    }, Settings['speed']), setTimeout(() => {
                        0x5 == _0x46b9a5 && client['send_move'](0x6);
                    }, Settings['speed']), setTimeout(() => {
                        0x6 == _0x46b9a5 && client['send_move'](0x2);
                    }, Settings['speed']), setTimeout(() => {
                        0x7 == _0x46b9a5 && client['send_move'](0xa);
                    }, Settings['speed']), setTimeout(() => {
                        _0x46b9a5++, _0x5338b2();
                    }, Settings['speed']));
                }();
            };
            if (_0x51b36c['code'] === Settings['AutoRecycle']['k']) Settings['AutoRecycle']['e'] = !Settings['AutoRecycle']['e'];
            if (_0x51b36c['code'] === Settings['AutoCraft']['k']) Settings['AutoCraft']['e'] = !Settings['AutoCraft']['e'];
            if (_0x51b36c['code'] === Settings['AutoEme']['k']) Settings['AutoEme']['e'] = !Settings['AutoEme']['e'];
            if (_0x51b36c['code'] === Settings['Autofarm']['k']) Settings['Autofarm']['e'] = !Settings['Autofarm']['e'];
            if (_0x51b36c['code'] === Settings['AutoSteal']['k']) Settings['AutoSteal']['e'] = !![];
            if (_0x51b36c['code'] === Settings['AMB']['k']) Settings['AMB']['e'] = !Settings['AMB']['e'];
            if (_0x51b36c['code'] === Settings['Tame']['k']) Settings['Tame']['e'] = !Settings['Tame']['e'];
            _0x51b36c['code'] === Settings['Xray']['k'] && (Settings['Xray']['e'] = !Settings['Xray']['e']), (_0x51b36c['code'] === Settings['AutoSpike']['k'] && (Settings['AutoSpike']['e'] = !0x0), _0x51b36c['code'] === Settings['AutoSpikee']['k'] && (Settings['AutoSpikee']['e'] = !0x0), _0x51b36c['code'] === Settings['AutoSpikeee']['k'] && (Settings['AutoSpikeee']['e'] = !0x0));
            if (_0x51b36c['code'] === Settings['AutoTotem']['k']) Settings['AutoTotem']['e'] = !Settings['AutoTotem']['e'];
            if (_0x51b36c['code'] === Settings['AutoBuild']['k']) Settings['AutoBuild']['e'] = !Settings['AutoBuild']['e'];
            if (_0x51b36c['code'] === Settings['AutoExtTake']['k']) Settings['AutoExtTake']['e'] = !Settings['AutoExtTake']['e'];
            if (_0x51b36c['code'] === Settings['AutoExtPut']['k']) Settings['AutoExtPut']['e'] = !Settings['AutoExtPut']['e'];
            if (_0x51b36c['code'] === Settings['AutoBreadPut']['k']) Settings['AutoBreadPut']['e'] = !Settings['AutoBreadPut']['e'];
            if (_0x51b36c['code'] === Settings['AutoBreadTake']['k']) Settings['AutoBreadTake']['e'] = !Settings['AutoBreadTake']['e'];
            _0x51b36c['code'] === Settings['Spectator']['k'] && (Spectator ? Spectator = ![] : Spectator = !![]);;
        }
    }, this['trigger_mousedown'] = function(_0x106dc2) {
        mouse['pos'] = get_mouse_pos(_0x26de52['can'], _0x106dc2);
        var _0x36b8fc = ![];
        if (user['craft']['preview'] < 0x0) _0x26de52['minimap']['focus'](mouse['pos']);
        var _0x387698 = user['chest'];
        if (user['craft']['id'] < 0x0 && _0x387698['id'] >= 0x0) {
            if (!user['chest']['lock'] || user['chest']['pid'] === user['id']) _0x36b8fc |= _0x26de52['chest_buttons'][user['chest']['id']]['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_DOWN);
        }
        var _0x188407 = user['windmill'];
        _0x188407['open'] && _0x188407['amount_flour'] > 0x0 && (_0x36b8fc |= _0x26de52['windmill_flour_button']['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_DOWN));
        var _0x10ff62 = user['extractor'];
        _0x10ff62['open'] && _0x10ff62['amount_mineral'] > 0x0 && (_0x36b8fc |= _0x26de52['extractor_stone_button']['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_DOWN), _0x36b8fc |= _0x26de52['extractor_gold_button']['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_DOWN), _0x36b8fc |= _0x26de52['extractor_diamond_button']['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_DOWN), _0x36b8fc |= _0x26de52['extractor_amethyst_button']['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_DOWN), _0x36b8fc |= _0x26de52['extractor_reidite_button']['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_DOWN));
        var _0xbb0017 = user['bread_oven'];
        _0xbb0017['open'] && _0xbb0017['amount_bread'] > 0x0 && (_0x36b8fc |= _0x26de52['bread_oven_bread_button']['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_DOWN));
        if (user['sign']['open']) _0x36b8fc |= _0x26de52['sign']['button']['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_DOWN);
        if (!user['chest']['lock']) {
            if (user['chest']['padlock']) _0x36b8fc |= _0x26de52['chest_padlock']['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_DOWN);
        }
        if (user['chest']['lockpick']) _0x36b8fc |= _0x26de52['chest_lockpick']['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_DOWN);
        if (user['craft']['id'] < 0x0 && !_0x26de52['craft_list']['open'] && !_0x26de52['safe_delete']['open'] && !_0x26de52['safe_cancel']['open'] && !_0x26de52['quests']['open'] && !_0x26de52['options']['open'] && !_0x26de52['market']['open']) {
            var _0x1481c5 = user['inv']['can_select'];
            for (var _0x364cae = 0x0; _0x364cae < _0x1481c5['length']; _0x364cae++) {
                var _0x9a8943 = _0x1481c5[_0x364cae]['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_DOWN);
                _0x36b8fc |= _0x9a8943;
                if (_0x9a8943) user['inv']['drag']['start'](_0x364cae, mouse['pos']);
                (_0x387698['open'] && (_0x387698['id'] < 0x0 || _0x387698['id'] == _0x1481c5[_0x364cae]['id']) || user['furnace']['open'] && _0x1481c5[_0x364cae]['id'] === INV['WOOD'] || user['well']['open'] && _0x1481c5[_0x364cae]['id'] === INV['BUCKET_FULL'] || user['bread_oven']['open'] && (_0x1481c5[_0x364cae]['id'] === INV['WOOD'] || _0x1481c5[_0x364cae]['id'] === INV['FLOUR']) || user['windmill']['open'] && _0x1481c5[_0x364cae]['id'] === INV['WILD_WHEAT'] || user['extractor']['open'] && _0x1481c5[_0x364cae]['id'] === INV['WOOD']) && (_0x36b8fc |= _0x26de52['plus_buttons'][_0x1481c5[_0x364cae]['id']]['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_DOWN));
            }
        }
        if (user['resurrection']['open']) _0x36b8fc |= _0x26de52['resurrection']['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_DOWN);
        if (_0x26de52['team_buttons_id'] != -0x1) {
            _0x36b8fc |= _0x26de52['team_buttons'][_0x26de52['team_buttons_id']]['button']['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_DOWN);
            if (_0x36b8fc) var _0x3723a1 = !![];
        } else var _0x3723a1 = ![];
        if (user['craft']['id'] < 0x0 && user['craft']['preview'] < 0x0 && !_0x3723a1 && !_0x26de52['craft_list']['open'] && !_0x26de52['safe_delete']['open'] && !_0x26de52['options']['open'] && !_0x26de52['safe_cancel']['open'] && !_0x26de52['market']['open'] && !user['zombie']) {
            var _0x1481c5 = user['craft']['can_craft'];
            for (var _0x364cae = 0x0; _0x364cae < _0x1481c5['length']; _0x364cae++) {
                _0x36b8fc |= _0x1481c5[_0x364cae]['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_DOWN);
            }
        }
        if (user['craft']['id'] < 0x0 && user['craft']['preview'] < 0x0 && user['shop']['open'] && !_0x26de52['craft_list']['open'] && !_0x26de52['safe_delete']['open'] && !_0x26de52['options']['open'] && !_0x26de52['safe_cancel']['open'] && !_0x26de52['quests']['open'] && !_0x26de52['market']['open']) _0x36b8fc |= _0x26de52['shop']['button']['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_DOWN);
        if (user['craft']['preview'] < 0x0 && !_0x26de52['safe_delete']['open'] && !_0x26de52['options']['open'] && !_0x26de52['safe_cancel']['open'] && !_0x26de52['quests']['open'] && !_0x26de52['market']['open']) _0x36b8fc |= _0x26de52['craft_list']['button']['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_DOWN);
        if (user['craft']['preview'] < 0x0 && !_0x26de52['craft_list']['open'] && !_0x26de52['safe_delete']['open'] && !_0x26de52['safe_cancel']['open'] && !_0x26de52['quests']['open'] && !_0x26de52['market']['open']) _0x36b8fc |= _0x26de52['options']['button']['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_DOWN);
        if (user['craft']['preview'] < 0x0 && !_0x26de52['craft_list']['open'] && !_0x26de52['safe_delete']['open'] && !_0x26de52['safe_cancel']['open'] && !_0x26de52['quests']['open'] && !_0x26de52['options']['open']) _0x36b8fc |= _0x26de52['market']['button']['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_DOWN);
        if (user['craft']['preview'] < 0x0 && !_0x26de52['craft_list']['open'] && !_0x26de52['safe_delete']['open'] && !_0x26de52['safe_cancel']['open'] && !_0x26de52['quests']['open'] && !_0x26de52['options']['open'] && !_0x26de52['market']['open']) {
            if (audio['run']) _0x36b8fc |= _0x26de52['audio']['button_on']['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_DOWN);
            else _0x36b8fc |= _0x26de52['audio']['button_off']['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_DOWN);
        }
        if (user['craft']['preview'] < 0x0 && !_0x26de52['craft_list']['open'] && !_0x26de52['market']['open'] && !_0x26de52['safe_delete']['open'] && !_0x26de52['options']['open'] && !_0x26de52['safe_cancel']['open'] && world['mode'] !== WORLD['MODE_ZOMBIES'] && world['mode'] !== WORLD['MODE_LEGACY'] && world['mode'] !== WORLD['MODE_BR']) _0x36b8fc |= _0x26de52['quests']['button']['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_DOWN);
        if (!_0x36b8fc && !_0x26de52['craft_list']['open'] && !_0x26de52['safe_delete']['open'] && !_0x26de52['options']['open'] && !_0x26de52['safe_cancel']['open'] && !_0x26de52['quests']['open'] && !_0x26de52['market']['open'] && !_0x26de52['sign']['open']) {
            if (user['craft']['preview'] >= 0x0) client['send_build']();
            else {
                if (!_0x3723a1) mouse['down']();
            }
        }
    }, this['trigger_mouseup'] = function(_0x5beafa) {
        mouse['pos'] = get_mouse_pos(_0x26de52['can'], _0x5beafa), mouse['up']();
        if (user['inv']['drag']['release']()) return;
        var _0x2d4008 = user['chest'],
            _0x149f9d = user['furnace'],
            _0x18dc53 = user['well'],
            _0x2929a5 = user['windmill'],
            _0x2b78e7 = user['extractor'],
            _0x3b39d6 = user['bread_oven'];
        user['control']['attack'] && (user['control']['attack'] = 0x0, client['stop_attack']());
        if (_0x26de52['team_buttons_id'] != -0x1) {
            var _0x2e1ab7 = _0x26de52['team_buttons'][_0x26de52['team_buttons_id']]['button']['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_UP),
                _0x4361e8 = document['getElementById']('team_box')['style'];
            if (_0x2e1ab7 && _0x4361e8['display'] == 'inline-block') {
                _0x4361e8['display'] = 'none';
                return;
            } else {
                if (_0x2e1ab7) _0x26de52['team_buttons'][_0x26de52['team_buttons_id']]['action']();
            }
        }
        if (user['craft']['id'] < 0x0 && _0x2d4008['id'] >= 0x0 && !_0x26de52['safe_delete']['open']) {
            if (!user['chest']['lock'] || user['chest']['pid'] === user['id']) {
                var _0x2e1ab7 = _0x26de52['chest_buttons'][user['chest']['id']]['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_UP);
                if (_0x2e1ab7) client['take_chest'](_0x2d4008);
            }
        }
        var _0x2929a5 = user['windmill'];
        if (_0x2929a5['open'] && _0x2929a5['amount_flour'] > 0x0 && !_0x26de52['safe_delete']['open']) {
            var _0x2e1ab7 = _0x26de52['windmill_flour_button']['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_UP);
            if (_0x2e1ab7) client['take_flour'](_0x2929a5);
        }
        var _0x2b78e7 = user['extractor'];
        if (_0x2b78e7['open'] && _0x2b78e7['amount_mineral'] > 0x0 && !_0x26de52['safe_delete']['open']) switch (_0x2b78e7['type']) {
            case ITEMS['EXTRACTOR_MACHINE_STONE']:
                var _0x2e1ab7 = _0x26de52['extractor_stone_button']['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_UP);
                if (_0x2e1ab7) client['take_extractor'](_0x2b78e7);
                break;
            case ITEMS['EXTRACTOR_MACHINE_GOLD']:
                var _0x2e1ab7 = _0x26de52['extractor_gold_button']['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_UP);
                if (_0x2e1ab7) client['take_extractor'](_0x2b78e7);
                break;
            case ITEMS['EXTRACTOR_MACHINE_DIAMOND']:
                var _0x2e1ab7 = _0x26de52['extractor_diamond_button']['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_UP);
                if (_0x2e1ab7) client['take_extractor'](_0x2b78e7);
                break;
            case ITEMS['EXTRACTOR_MACHINE_AMETHYST']:
                var _0x2e1ab7 = _0x26de52['extractor_amethyst_button']['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_UP);
                if (_0x2e1ab7) client['take_extractor'](_0x2b78e7);
                break;
            case ITEMS['EXTRACTOR_MACHINE_REIDITE']:
                var _0x2e1ab7 = _0x26de52['extractor_reidite_button']['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_UP);
                if (_0x2e1ab7) client['take_extractor'](_0x2b78e7);
                break;
        }
        var _0x3b39d6 = user['bread_oven'];
        if (_0x3b39d6['open'] && _0x3b39d6['amount_bread'] > 0x0 && !_0x26de52['safe_delete']['open']) {
            var _0x2e1ab7 = _0x26de52['bread_oven_bread_button']['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_UP);
            if (_0x2e1ab7) client['take_bread'](_0x3b39d6);
        }
        if (user['sign']['open'] && !_0x26de52['safe_delete']['open']) {
            var _0x2e1ab7 = _0x26de52['sign']['button']['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_UP);
            if (_0x2e1ab7) _0x26de52['sign']['select']();
        }
        if (!user['chest']['lock'] && !_0x26de52['safe_delete']['open']) {
            if (user['chest']['padlock']) {
                _0x2e1ab7 = _0x26de52['chest_padlock']['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_UP);
                if (_0x2e1ab7) client['lock_chest'](_0x2d4008);
            }
        }
        if (user['chest']['lockpick'] && !_0x26de52['safe_delete']['open']) {
            _0x2e1ab7 = _0x26de52['chest_lockpick']['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_UP);
            if (_0x2e1ab7) {
                client['unlock_chest'](_0x2d4008);
                if (ga) ga('send', 'event', 'Game', 'lockpick');
            }
        }
        if (user['resurrection']['open']) {
            var _0x2e1ab7 = _0x26de52['resurrection']['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_UP);
            if (_0x2e1ab7) {
                client['resurrection']();
                if (ga) ga('send', 'event', 'Game', 'resurrection');
            }
        }
        if (user['craft']['id'] < 0x0 && !user['ghost']['enabled'] && !_0x26de52['safe_delete']['open']) {
            var _0x3e8836 = user['inv']['can_select'];
            for (var _0x72ea1a = 0x0; _0x72ea1a < _0x3e8836['length']; _0x72ea1a++) {
                var _0x2e1ab7 = _0x3e8836[_0x72ea1a]['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_UP);
                if (!_0x2e1ab7) {
                    if (_0x2d4008['open'] && (_0x2d4008['id'] < 0x0 || _0x2d4008['id'] === _0x3e8836[_0x72ea1a]['id'])) {
                        var _0x2e1ab7 = _0x26de52['plus_buttons'][_0x3e8836[_0x72ea1a]['id']]['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_UP);
                        if (_0x2e1ab7 && user['craft']['preview'] < 0x0) client['give_item'](_0x2d4008, _0x3e8836[_0x72ea1a]['id'], _0x5beafa['shiftKey'] ? 0xa : 0x1);
                    } else {
                        if (_0x18dc53['open'] && _0x3e8836[_0x72ea1a]['id'] === INV['BUCKET_FULL']) {
                            var _0x2e1ab7 = _0x26de52['plus_buttons'][_0x3e8836[_0x72ea1a]['id']]['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_UP);
                            if (_0x2e1ab7 && user['craft']['preview'] < 0x0) client['give_well'](_0x18dc53);
                        } else {
                            if (_0x149f9d['open'] && _0x3e8836[_0x72ea1a]['id'] === INV['WOOD']) {
                                var _0x2e1ab7 = _0x26de52['plus_buttons'][_0x3e8836[_0x72ea1a]['id']]['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_UP);
                                if (_0x2e1ab7 && user['craft']['preview'] < 0x0) client['give_wood'](_0x149f9d, _0x5beafa['shiftKey'] ? 0xa : 0x1);
                            } else {
                                if (_0x2929a5['open'] && _0x3e8836[_0x72ea1a]['id'] === INV['WILD_WHEAT']) {
                                    var _0x2e1ab7 = _0x26de52['plus_buttons'][_0x3e8836[_0x72ea1a]['id']]['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_UP);
                                    if (_0x2e1ab7 && user['craft']['preview'] < 0x0) client['give_wheat'](_0x2929a5, _0x5beafa['shiftKey'] ? 0xa : 0x1);
                                } else {
                                    if (_0x2b78e7['open'] && _0x3e8836[_0x72ea1a]['id'] === INV['WOOD']) {
                                        var _0x2e1ab7 = _0x26de52['plus_buttons'][_0x3e8836[_0x72ea1a]['id']]['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_UP);
                                        if (_0x2e1ab7 && user['craft']['preview'] < 0x0) client['give_wood_extractor'](_0x2b78e7, _0x5beafa['shiftKey'] ? 0xa : 0x1);
                                    } else {
                                        if (_0x3b39d6['open'] && (_0x3e8836[_0x72ea1a]['id'] === INV['WOOD'] || _0x3e8836[_0x72ea1a]['id'] === INV['FLOUR'])) {
                                            var _0x2e1ab7 = _0x26de52['plus_buttons'][_0x3e8836[_0x72ea1a]['id']]['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_UP);
                                            if (_0x2e1ab7 && user['craft']['preview'] < 0x0) {
                                                if (_0x3e8836[_0x72ea1a]['id'] === INV['WOOD']) client['give_bread_oven'](_0x3b39d6, _0x5beafa['shiftKey'] ? 0xa : 0x1, 0x0);
                                                else client['give_bread_oven'](_0x3b39d6, 0x0, _0x5beafa['shiftKey'] ? 0xa : 0x1);
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    continue;
                } else {
                    if (_0x5beafa['which'] == 0x1 && !_0x5beafa['shiftKey']) client['select_inv'](_0x3e8836[_0x72ea1a]['id'], _0x72ea1a);
                    else {
                        if ((_0x5beafa['which'] == 0x1 && _0x5beafa['shiftKey'] || _0x5beafa['which'] == 0x3) && user['craft']['preview'] < 0x0) _0x26de52['safe_delete']['del'](_0x3e8836[_0x72ea1a]['id']);
                    }
                }
            }
        }
        if (user['craft']['id'] < 0x0 && user['craft']['preview'] < 0x0 && !user['ghost']['enabled'] && !_0x26de52['safe_delete']['open'] && !user['zombie']) {
            var _0x3e8836 = user['craft']['can_craft'];
            for (var _0x72ea1a = 0x0; _0x72ea1a < _0x3e8836['length']; _0x72ea1a++) {
                var _0x2e1ab7 = _0x3e8836[_0x72ea1a]['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_UP);
                if (!_0x2e1ab7) continue;
                ret = client['select_craft'](_0x3e8836[_0x72ea1a]['id']);
                if (ret && ga) ga('send', 'event', 'Game', 'craft', INV_INFOS[RECIPES[_0x3e8836[_0x72ea1a]['id']]['id2']]['name']);
            }
        }
        if (user['craft']['id'] < 0x0 && user['craft']['preview'] < 0x0 && user['shop']['open'] && !_0x26de52['market']['open'] && !_0x26de52['craft_list']['open'] && !_0x26de52['safe_delete']['open'] && !_0x26de52['options']['open'] && !_0x26de52['safe_cancel']['open'] && !_0x26de52['quests']['open']) {
            var _0x2e1ab7 = _0x26de52['shop']['button']['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_MOVE);
            if (_0x2e1ab7) game['shop']['select']();
        }
        if (user['craft']['preview'] < 0x0 && !_0x26de52['craft_list']['open'] && !_0x26de52['safe_delete']['open'] && !_0x26de52['market']['open'] && !_0x26de52['safe_cancel']['open'] && !_0x26de52['quests']['open'] && !_0x26de52['options']['open']) {
            if (audio['run']) {
                var _0x2e1ab7 = _0x26de52['audio']['button_on']['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_UP);
                if (_0x2e1ab7) {
                    audio['select']();
                    if (ga) ga('send', 'event', 'Game', 'sound\x20on');
                }
            } else {
                var _0x2e1ab7 = _0x26de52['audio']['button_off']['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_UP);
                if (_0x2e1ab7) {
                    audio['select']();
                    if (ga) ga('send', 'event', 'Game', 'sound\x20off');
                }
            }
        }
        if (user['craft']['preview'] < 0x0 && !_0x26de52['craft_list']['open'] && !_0x26de52['safe_delete']['open'] && !_0x26de52['safe_cancel']['open'] && !_0x26de52['quests']['open'] && !_0x26de52['market']['open']) {
            var _0x2e1ab7 = _0x26de52['options']['button']['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_UP);
            if (_0x2e1ab7) {
                _0x26de52['options']['select_options']();
                if (ga) ga('send', 'event', 'Game', 'options');
            }
        }
        if (user['craft']['preview'] < 0x0 && !_0x26de52['craft_list']['open'] && !_0x26de52['safe_delete']['open'] && !_0x26de52['safe_cancel']['open'] && !_0x26de52['quests']['open'] && !_0x26de52['options']['open'] && _0x26de52['show_market'] === 0x1) {
            var _0x2e1ab7 = _0x26de52['market']['button']['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_UP);
            if (_0x2e1ab7) {
                _0x26de52['market']['select']();
                if (ga) ga('send', 'event', 'Game', 'market');
            }
        }
        if (user['craft']['preview'] < 0x0 && !_0x26de52['safe_delete']['open'] && !_0x26de52['market']['open'] && !_0x26de52['options']['open'] && !_0x26de52['safe_cancel']['open'] && !_0x26de52['quests']['open'] && _0x26de52['show_recipe_book'] === 0x1) {
            var _0x2e1ab7 = _0x26de52['craft_list']['button']['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_UP);
            if (_0x2e1ab7) {
                _0x26de52['craft_list']['select_book']();
                if (ga) ga('send', 'event', 'Game', 'recipe');
            }
        }
        if (user['craft']['preview'] < 0x0 && !_0x26de52['craft_list']['open'] && !_0x26de52['safe_delete']['open'] && !_0x26de52['options']['open'] && !_0x26de52['safe_cancel']['open'] && !_0x26de52['market']['open'] && world['mode'] !== WORLD['MODE_ZOMBIES'] && world['mode'] !== WORLD['MODE_LEGACY'] && world['mode'] !== WORLD['MODE_BR'] && _0x26de52['show_quest'] === 0x1) {
            var _0x2e1ab7 = _0x26de52['quests']['button']['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_UP);
            if (_0x2e1ab7) {
                _0x26de52['quests']['select']();
                if (ga) ga('send', 'event', 'Game', 'quests');
            }
        }
        if (user['craft']['crafting'] && _0x5beafa['which'] == 0x3) _0x26de52['safe_cancel']['del']();
    }, this['current_cursor'] = ![], this['trigger_mousemove'] = function(_0x56908d) {
        mouse['pos'] = get_mouse_pos(_0x26de52['can'], _0x56908d);
        var _0x22f92d = ![];
        game['info_box']['display'] = 0x0, user['inv']['drag']['move'](mouse['pos']);
        if (_0x26de52['team_buttons_id'] != -0x1) _0x22f92d |= _0x26de52['team_buttons'][_0x26de52['team_buttons_id']]['button']['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_MOVE);
        var _0x3ebe83 = user['windmill'];
        if (_0x3ebe83['open'] && _0x3ebe83['amount_flour'] > 0x0) _0x22f92d |= _0x26de52['windmill_flour_button']['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_MOVE);
        var _0x4db64a = user['extractor'];
        _0x4db64a['open'] && _0x4db64a['amount_mineral'] > 0x0 && (_0x22f92d |= _0x26de52['extractor_stone_button']['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_MOVE), _0x22f92d |= _0x26de52['extractor_gold_button']['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_MOVE), _0x22f92d |= _0x26de52['extractor_diamond_button']['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_MOVE), _0x22f92d |= _0x26de52['extractor_amethyst_button']['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_MOVE), _0x22f92d |= _0x26de52['extractor_reidite_button']['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_MOVE));
        var _0x453d36 = user['bread_oven'];
        if (_0x453d36['open'] && _0x453d36['amount_bread'] > 0x0) _0x22f92d |= _0x26de52['bread_oven_bread_button']['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_MOVE);
        if (user['sign']['open']) _0x22f92d |= _0x26de52['sign']['button']['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_MOVE);
        var _0x4f438d = user['chest'];
        if (user['craft']['id'] < 0x0 && _0x4f438d['id'] >= 0x0 && !user['ghost']['enabled']) {
            if (!user['chest']['lock'] || user['chest']['pid'] === user['id']) _0x22f92d |= _0x26de52['chest_buttons'][_0x4f438d['id']]['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_MOVE);
        }
        if (user['resurrection']['open']) _0x22f92d |= _0x26de52['resurrection']['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_MOVE);
        if (!user['chest']['lock'] && !user['ghost']['enabled']) {
            if (user['chest']['padlock']) _0x22f92d |= _0x26de52['chest_padlock']['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_MOVE);
        }
        if (user['chest']['lockpick'] && !user['ghost']['enabled']) _0x22f92d |= _0x26de52['chest_lockpick']['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_MOVE);
        if (user['craft']['id'] < 0x0 && !user['ghost']['enabled']) {
            var _0x4a63a9 = user['inv']['can_select'];
            for (var _0x55661a = 0x0; _0x55661a < _0x4a63a9['length']; _0x55661a++) {
                var _0x4fc263 = _0x4a63a9[_0x55661a]['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_MOVE);
                _0x22f92d |= game['info_box']['trigger'](_0x4fc263, _0x4a63a9[_0x55661a], 0x0), (_0x4f438d['open'] && (_0x4f438d['id'] < 0x0 || _0x4f438d['id'] == _0x4a63a9[_0x55661a]['id']) || user['furnace']['open'] && _0x4a63a9[_0x55661a]['id'] == INV['WOOD'] || user['well']['open'] && _0x4a63a9[_0x55661a]['id'] === INV['BUCKET_FULL'] || user['bread_oven']['open'] && (_0x4a63a9[_0x55661a]['id'] == INV['WOOD'] || _0x4a63a9[_0x55661a]['id'] == INV['FLOUR']) || user['windmill']['open'] && _0x4a63a9[_0x55661a]['id'] == INV['WILD_WHEAT'] || user['extractor']['open'] && _0x4a63a9[_0x55661a]['id'] == INV['WOOD']) && (_0x22f92d |= _0x26de52['plus_buttons'][_0x4a63a9[_0x55661a]['id']]['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_MOVE));
            }
        }
        if (user['craft']['id'] < 0x0 && user['craft']['preview'] < 0x0 && !user['ghost']['enabled'] && !user['zombie']) {
            var _0x4a63a9 = user['craft']['can_craft'];
            for (var _0x55661a = 0x0; _0x55661a < _0x4a63a9['length']; _0x55661a++) {
                var _0x4fc263 = ![];
                _0x4fc263 = _0x4a63a9[_0x55661a]['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_MOVE), _0x22f92d |= game['info_box']['trigger'](_0x4fc263, _0x4a63a9[_0x55661a], 0x1);
            }
        }
        if (user['craft']['id'] < 0x0 && user['craft']['preview'] < 0x0 && user['shop']['open'] && !_0x26de52['craft_list']['open'] && !_0x26de52['safe_delete']['open'] && !_0x26de52['options']['open'] && !_0x26de52['safe_cancel']['open'] && !_0x26de52['quests']['open'] && !_0x26de52['market']['open']) _0x22f92d |= _0x26de52['shop']['button']['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_MOVE);
        if (user['craft']['preview'] < 0x0 && !_0x26de52['safe_delete']['open'] && !_0x26de52['options']['open'] && !_0x26de52['safe_cancel']['open'] && !_0x26de52['quests']['open'] && !_0x26de52['market']['open'] && _0x26de52['show_recipe_book'] === 0x1) _0x22f92d |= _0x26de52['craft_list']['button']['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_MOVE);
        if (user['craft']['preview'] < 0x0 && !_0x26de52['craft_list']['open'] && !_0x26de52['safe_delete']['open'] && !_0x26de52['safe_cancel']['open'] && !_0x26de52['quests']['open'] && !_0x26de52['market']['open']) _0x22f92d |= _0x26de52['options']['button']['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_MOVE);
        if (user['craft']['preview'] < 0x0 && !_0x26de52['craft_list']['open'] && !_0x26de52['safe_delete']['open'] && !_0x26de52['safe_cancel']['open'] && !_0x26de52['quests']['open'] && !_0x26de52['options']['open'] && _0x26de52['show_market'] === 0x1) _0x22f92d |= _0x26de52['market']['button']['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_MOVE);
        if (user['craft']['preview'] < 0x0 && !_0x26de52['craft_list']['open'] && !_0x26de52['safe_delete']['open'] && !_0x26de52['safe_cancel']['open'] && !_0x26de52['quests']['open'] && !_0x26de52['options']['open'] && !_0x26de52['market']['open']) {
            if (audio['run']) _0x22f92d |= _0x26de52['audio']['button_on']['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_MOVE);
            else _0x22f92d |= _0x26de52['audio']['button_off']['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_MOVE);
        }
        if (user['craft']['preview'] < 0x0 && !_0x26de52['craft_list']['open'] && !_0x26de52['safe_delete']['open'] && !_0x26de52['options']['open'] && !_0x26de52['safe_cancel']['open'] && !_0x26de52['market']['open'] && world['mode'] !== WORLD['MODE_ZOMBIES'] && world['mode'] !== WORLD['MODE_LEGACY'] && world['mode'] !== WORLD['MODE_B'] && _0x26de52['show_quest'] === 0x1) _0x22f92d |= _0x26de52['quests']['button']['trigger'](_0x26de52['can'], mouse['pos'], MOUSE_MOVE);
        if (_0x26de52['current_cursor'] !== _0x22f92d) {
            _0x26de52['current_cursor'] = _0x22f92d;
            if (_0x22f92d) _0x4b8451['style']['cursor'] = _0x26de52['cursor1'];
            else _0x4b8451['style']['cursor'] = _0x26de52['cursor0'];
        }
    }, this['add_event_listener'] = function() {
        window['addEventListener']('mousedown', this['trigger_mousedown'], ![]), window['addEventListener']('mouseup', this['trigger_mouseup'], ![]), window['addEventListener']('mousemove', this['trigger_mousemove'], ![]), window['addEventListener']('keyup', this['trigger_keyup'], ![]), window['addEventListener']('keydown', this['trigger_keydown'], ![]);
    }, this['remove_event_listener'] = function() {
        window['removeEventListener']('mousedown', this['trigger_mousedown'], ![]), window['removeEventListener']('mouseup', this['trigger_mouseup'], ![]), window['removeEventListener']('mousemove', this['trigger_mousemove'], ![]), window['removeEventListener']('keyup', this['trigger_keyup'], ![]), window['removeEventListener']('keydown', this['trigger_keydown'], ![]);
    };
}

function open_twitter() {
    Utils['open_in_new_box']('https://twitter.com/intent/tweet?text=I%20survived%20' + user['day'] + '%20days%20with%20' + user['die']['score'] + '%20points%20in%20http%3A%2F%2Fstarve.io%2F%20%23starve.io');
}

function open_facebook() {
    Utils['open_in_new_box']('https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fwww.starve.io%2F&display=popup&ref=plugin&src=like&kid_directed_site=0');
}

function Scoreboard(_0x4612e2, _0x16de55) {
    this['can'] = _0x4612e2, this['ctx'] = _0x16de55;
    var _0xfe6e24 = this;
    this['enable_interface'] = ![], this['sb'] = {
        'id': document['getElementById']('scoreboard'),
        'style': document['getElementById']('scoreboard')['style'],
        'height': 0x0,
        'translate': {
            'x': 0x0,
            'y': 0x0
        },
        'update': function() {
            this['style']['left'] = this['translate']['x'] + 'px', this['style']['top'] = this['translate']['y'] + 'px';
        },
        'init': function() {
            this['id']['innerHTML'] = '<div\x20style=\x22position:absolute;\x22>\x20<img\x20src=\x22./img/scoreboard.png\x22style=\x22width:250px;transform:translate(125px,\x20-80px);\x22>\x20</img>\x20</div><div><div\x20id=\x22whokilled\x22>' + user['die']['howdie'] + '</div></div><div\x20class=\x22deco\x22\x20style=\x22margin-top:35px;\x22></div><div\x20class=\x22deco\x22></div><div><div\x20class=\x22stats\x22>\x20' + LANG[TEXT['DAYS_SURVIVED']] + '\x20:\x20' + user['day'] + '</div><div\x20class=\x22stats\x22>\x20' + LANG[TEXT['KILL']] + '\x20:\x20' + user['die']['kill'] + '</div></div>' + '<div\x20id=\x22flexDisplay\x22><div\x20id=\x22score\x22>\x20' + LANG[TEXT['SCORE']] + '\x20:\x20' + user['die']['score'] + '</div><div\x20id=\x22breadWon\x22><span\x20id=\x22breadWonInner\x22>0</span><img\x20src=\x22./img/golden-bread.png\x22\x20style=\x22width:50px;margin-left:-25px;transform:\x20translate(37px,\x208px);\x22></img></div></div><div><div\x20id=\x22points\x22>\x20' + user['die']['bank'] + '\x20' + LANG[TEXT['POINTS']] + '</div></div><div\x20id=\x22shop_points\x22>' + LANG[TEXT['KIT_NEXT']] + '</div><div\x20style=\x22display:inline-block;\x22><div\x20class=\x22social\x22\x20id=\x22tttwitter\x22>' + LANG[TEXT['TWITTER']] + '</div><div\x20class=\x22social\x22\x20id=\x22fffacebook\x22>' + LANG[TEXT['FACEBOOK']] + '</div></div><div\x20id=\x22bbback\x22>' + LANG[TEXT['BACK_TO_THE_GAME']] + '</div>', this['style']['display'] = 'inline-block', document['getElementById']('tttwitter')['addEventListener']('mouseup', open_twitter, ![]), document['getElementById']('bbback')['addEventListener']('mouseup', function() {
                scoreboard['quit'](ui['run']);
            }, ![]), document['getElementById']('fffacebook')['addEventListener']('mouseup', open_facebook, ![]), this['height'] = Math['floor'](this['id']['clientHeight'] / 0x2), getBreadAndScore();
        }
    };
    var _0x57e180 = 0x0,
        _0x350917 = 0x1e,
        _0x588483 = function() {
            _0xfe6e24['update'](), _0x57e180++;
            if (_0x57e180 == _0x350917) {
                _0xfe6e24['update']();
                return;
            }
            window['setTimeout'](_0x588483, 0x21);
        };
    this['quit'] = function(_0x36b0dd) {
        _0xfe6e24['enable_interface'] === !![] && (_0xfe6e24['enable_interface'] = ![], _0x2221d0 = _0x36b0dd, _0x48cbe8 = -0x1, _0x341a24());
    };
    var _0x2221d0, _0x48cbe8 = -0x1,
        _0x2cd720 = 0x1e,
        _0x341a24 = function() {
            _0xfe6e24['update'](), _0x48cbe8++;
            if (_0x48cbe8 == _0x2cd720) {
                _0xfe6e24['stop'](), _0xfe6e24['sb']['style']['display'] = 'none', _0x2221d0();
                return;
            }
            window['setTimeout'](_0x341a24, 0x21);
        };
    this['is_run'] = ![], this['stop'] = function() {
        this['is_run'] = ![];
    }, this['run'] = function() {
        check_ads(), document['getElementById']('game_body')['style']['backgroundColor'] = SPRITE['GROUND'][fake_world['time']], _0xfe6e24['sb']['init'](), ui['trevda']['style']['display'] = 'inline-block', _0xfe6e24['is_run'] = !![], _0xfe6e24['enable_interface'] = !![], _0x48cbe8 = -0x1, _0x57e180 = 0x0, _0x588483();
    }, this['update'] = function() {
        this['sb']['translate']['x'] = Math['floor'](canw2 - 0x113), this['sb']['translate']['y'] = Math['floor'](canh2 - this['sb']['height'] - 0x1c), ui['trevda']['translate']['x'] = this['sb']['translate']['x'] - 0x15e, ui['trevda']['translate']['y'] = this['sb']['translate']['y'] + 0x0, ui['trevda']['update']();
        if (_0x57e180 != _0x350917 || _0x48cbe8 != -0x1) {
            var _0x3dad9d = 0x0;
            if (_0x57e180 != _0x350917) var _0x3dad9d = 0x5dc / (_0x57e180 + 0x1) - 0x32;
            if (_0x48cbe8 != -0x1) var _0x3dad9d = -(0x6d6 / (_0x2cd720 - _0x48cbe8 + 0x1) - 0x30);
            this['sb']['translate']['y'] -= _0x3dad9d;
        }
        this['sb']['update']();
    }, this['draw'] = function() {
        draw_fake_world(), user['alert']['draw']('#FFF', '#000');
    };
}!(function() {
    'use strict';
    var _0x4ae138 = function() {
        this['init']();
    };
    _0x4ae138['prototype'] = {
        'init': function() {
            var _0x143b4b = this || _0x5783fc;
            return _0x143b4b['_counter'] = 0x3e8, _0x143b4b['_codecs'] = {}, _0x143b4b['_howls'] = [], _0x143b4b['_muted'] = !0x1, _0x143b4b['_volume'] = 0x1, _0x143b4b['_canPlayEvent'] = 'canplaythrough', _0x143b4b['_navigator'] = 'undefined' != typeof window && window['navigator'] ? window['navigator'] : null, _0x143b4b['masterGain'] = null, _0x143b4b['noAudio'] = !0x1, _0x143b4b['usingWebAudio'] = !0x0, _0x143b4b['autoSuspend'] = !0x0, _0x143b4b['ctx'] = null, _0x143b4b['mobileAutoEnable'] = !0x0, _0x143b4b['_setup'](), _0x143b4b;
        },
        'volume': function(_0x121197) {
            var _0x4cd9cc = this || _0x5783fc;
            if (_0x121197 = parseFloat(_0x121197), _0x4cd9cc['ctx'] || _0x3bb448(), void 0x0 !== _0x121197 && _0x121197 >= 0x0 && _0x121197 <= 0x1) {
                if (_0x4cd9cc['_volume'] = _0x121197, _0x4cd9cc['_muted']) return _0x4cd9cc;
                _0x4cd9cc['usingWebAudio'] && (_0x4cd9cc['masterGain']['gain']['value'] = _0x121197);
                for (var _0x3805e4 = 0x0; _0x3805e4 < _0x4cd9cc['_howls']['length']; _0x3805e4++)
                    if (!_0x4cd9cc['_howls'][_0x3805e4]['_webAudio'])
                        for (var _0x3bb482 = _0x4cd9cc['_howls'][_0x3805e4]['_getSoundIds'](), _0x4e95b0 = 0x0; _0x4e95b0 < _0x3bb482['length']; _0x4e95b0++) {
                            var _0x44973e = _0x4cd9cc['_howls'][_0x3805e4]['_soundById'](_0x3bb482[_0x4e95b0]);
                            _0x44973e && _0x44973e['_node'] && (_0x44973e['_node']['volume'] = _0x44973e['_volume'] * _0x121197);
                        }
                return _0x4cd9cc;
            }
            return _0x4cd9cc['_volume'];
        },
        'mute': function(_0x4ac67a) {
            var _0x4c2ccf = this || _0x5783fc;
            _0x4c2ccf['ctx'] || _0x3bb448(), _0x4c2ccf['_muted'] = _0x4ac67a, _0x4c2ccf['usingWebAudio'] && (_0x4c2ccf['masterGain']['gain']['value'] = _0x4ac67a ? 0x0 : _0x4c2ccf['_volume']);
            for (var _0x1eb31b = 0x0; _0x1eb31b < _0x4c2ccf['_howls']['length']; _0x1eb31b++)
                if (!_0x4c2ccf['_howls'][_0x1eb31b]['_webAudio'])
                    for (var _0x30b2d5 = _0x4c2ccf['_howls'][_0x1eb31b]['_getSoundIds'](), _0x58c8e8 = 0x0; _0x58c8e8 < _0x30b2d5['length']; _0x58c8e8++) {
                        var _0x2abd27 = _0x4c2ccf['_howls'][_0x1eb31b]['_soundById'](_0x30b2d5[_0x58c8e8]);
                        _0x2abd27 && _0x2abd27['_node'] && (_0x2abd27['_node']['muted'] = !!_0x4ac67a || _0x2abd27['_muted']);
                    }
            return _0x4c2ccf;
        },
        'unload': function() {
            for (var _0x3154a1 = this || _0x5783fc, _0xa0c57b = _0x3154a1['_howls']['length'] - 0x1; _0xa0c57b >= 0x0; _0xa0c57b--) _0x3154a1['_howls'][_0xa0c57b]['unload']();
            return _0x3154a1['usingWebAudio'] && _0x3154a1['ctx'] && void 0x0 !== _0x3154a1['ctx']['close'] && (_0x3154a1['ctx']['close'](), _0x3154a1['ctx'] = null, _0x3bb448()), _0x3154a1;
        },
        'codecs': function(_0x527093) {
            return (this || _0x5783fc)['_codecs'][_0x527093['replace'](/^x-/, '')];
        },
        '_setup': function() {
            var _0x3be468 = this || _0x5783fc;
            if (_0x3be468['state'] = _0x3be468['ctx'] ? _0x3be468['ctx']['state'] || 'running' : 'running', _0x3be468['_autoSuspend'](), !_0x3be468['usingWebAudio']) {
                if ('undefined' != typeof Audio) try {
                    var _0x5ad17b = new Audio();
                    void 0x0 === _0x5ad17b['oncanplaythrough'] && (_0x3be468['_canPlayEvent'] = 'canplay');
                } catch (_0x1302a9) {
                    _0x3be468['noAudio'] = !0x0;
                } else _0x3be468['noAudio'] = !0x0;
            }
            try {
                var _0x5ad17b = new Audio();
                _0x5ad17b['muted'] && (_0x3be468['noAudio'] = !0x0);
            } catch (_0x50a66e) {}
            return _0x3be468['noAudio'] || _0x3be468['_setupCodecs'](), _0x3be468;
        },
        '_setupCodecs': function() {
            var _0x405fe3 = this || _0x5783fc,
                _0x286e04 = null;
            try {
                _0x286e04 = 'undefined' != typeof Audio ? new Audio() : null;
            } catch (_0x26d549) {
                return _0x405fe3;
            }
            if (!_0x286e04 || 'function' != typeof _0x286e04['canPlayType']) return _0x405fe3;
            var _0x3458fa = _0x286e04['canPlayType']('audio/mpeg;')['replace'](/^no$/, ''),
                _0x5cb129 = _0x405fe3['_navigator'] && _0x405fe3['_navigator']['userAgent']['match'](/OPR\/([0-6].)/g),
                _0x300877 = _0x5cb129 && parseInt(_0x5cb129[0x0]['split']('/')[0x1], 0xa) < 0x21;
            return _0x405fe3['_codecs'] = {
                'mp3': !(_0x300877 || !_0x3458fa && !_0x286e04['canPlayType']('audio/mp3;')['replace'](/^no$/, '')),
                'mpeg': !!_0x3458fa,
                'opus': !!_0x286e04['canPlayType']('audio/ogg;\x20codecs=\x22opus\x22')['replace'](/^no$/, ''),
                'ogg': !!_0x286e04['canPlayType']('audio/ogg;\x20codecs=\x22vorbis\x22')['replace'](/^no$/, ''),
                'oga': !!_0x286e04['canPlayType']('audio/ogg;\x20codecs=\x22vorbis\x22')['replace'](/^no$/, ''),
                'wav': !!_0x286e04['canPlayType']('audio/wav;\x20codecs=\x221\x22')['replace'](/^no$/, ''),
                'aac': !!_0x286e04['canPlayType']('audio/aac;')['replace'](/^no$/, ''),
                'caf': !!_0x286e04['canPlayType']('audio/x-caf;')['replace'](/^no$/, ''),
                'm4a': !!(_0x286e04['canPlayType']('audio/x-m4a;') || _0x286e04['canPlayType']('audio/m4a;') || _0x286e04['canPlayType']('audio/aac;'))['replace'](/^no$/, ''),
                'mp4': !!(_0x286e04['canPlayType']('audio/x-mp4;') || _0x286e04['canPlayType']('audio/mp4;') || _0x286e04['canPlayType']('audio/aac;'))['replace'](/^no$/, ''),
                'weba': !!_0x286e04['canPlayType']('audio/webm;\x20codecs=\x22vorbis\x22')['replace'](/^no$/, ''),
                'webm': !!_0x286e04['canPlayType']('audio/webm;\x20codecs=\x22vorbis\x22')['replace'](/^no$/, ''),
                'dolby': !!_0x286e04['canPlayType']('audio/mp4;\x20codecs=\x22ec-3\x22')['replace'](/^no$/, ''),
                'flac': !!(_0x286e04['canPlayType']('audio/x-flac;') || _0x286e04['canPlayType']('audio/flac;'))['replace'](/^no$/, '')
            }, _0x405fe3;
        },
        '_enableMobileAudio': function() {
            var _0xfb0a2d = this || _0x5783fc,
                _0x4f259d = /iPhone|iPad|iPod|Android|BlackBerry|BB10|Silk|Mobi/i ['test'](_0xfb0a2d['_navigator'] && _0xfb0a2d['_navigator']['userAgent']),
                _0xfb93e6 = !!('ontouchend' in window || _0xfb0a2d['_navigator'] && _0xfb0a2d['_navigator']['maxTouchPoints'] > 0x0 || _0xfb0a2d['_navigator'] && _0xfb0a2d['_navigator']['msMaxTouchPoints'] > 0x0);
            if (!_0xfb0a2d['_mobileEnabled'] && _0xfb0a2d['ctx'] && (_0x4f259d || _0xfb93e6)) {
                _0xfb0a2d['_mobileEnabled'] = !0x1, _0xfb0a2d['_mobileUnloaded'] || 0xac44 === _0xfb0a2d['ctx']['sampleRate'] || (_0xfb0a2d['_mobileUnloaded'] = !0x0, _0xfb0a2d['unload']()), _0xfb0a2d['_scratchBuffer'] = _0xfb0a2d['ctx']['createBuffer'](0x1, 0x1, 0x5622);
                var _0x51a9a5 = function() {
                    _0x5783fc['_autoResume']();
                    var _0x3a852a = _0xfb0a2d['ctx']['createBufferSource']();
                    _0x3a852a['buffer'] = _0xfb0a2d['_scratchBuffer'], _0x3a852a['connect'](_0xfb0a2d['ctx']['destination']), void 0x0 === _0x3a852a['start'] ? _0x3a852a['noteOn'](0x0) : _0x3a852a['start'](0x0), 'function' == typeof _0xfb0a2d['ctx']['resume'] && _0xfb0a2d['ctx']['resume'](), _0x3a852a['onended'] = function() {
                        _0x3a852a['disconnect'](0x0), _0xfb0a2d['_mobileEnabled'] = !0x0, _0xfb0a2d['mobileAutoEnable'] = !0x1, document['removeEventListener']('touchend', _0x51a9a5, !0x0);
                    };
                };
                return document['addEventListener']('touchend', _0x51a9a5, !0x0), _0xfb0a2d;
            }
        },
        '_autoSuspend': function() {
            var _0x103774 = this;
            if (_0x103774['autoSuspend'] && _0x103774['ctx'] && void 0x0 !== _0x103774['ctx']['suspend'] && _0x5783fc['usingWebAudio']) {
                for (var _0x1797ff = 0x0; _0x1797ff < _0x103774['_howls']['length']; _0x1797ff++)
                    if (_0x103774['_howls'][_0x1797ff]['_webAudio']) {
                        for (var _0x5c9a2b = 0x0; _0x5c9a2b < _0x103774['_howls'][_0x1797ff]['_sounds']['length']; _0x5c9a2b++)
                            if (!_0x103774['_howls'][_0x1797ff]['_sounds'][_0x5c9a2b]['_paused']) return _0x103774;
                    } return _0x103774['_suspendTimer'] && clearTimeout(_0x103774['_suspendTimer']), _0x103774['_suspendTimer'] = setTimeout(function() {
                    _0x103774['autoSuspend'] && (_0x103774['_suspendTimer'] = null, _0x103774['state'] = 'suspending', _0x103774['ctx']['suspend']()['then'](function() {
                        _0x103774['state'] = 'suspended', _0x103774['_resumeAfterSuspend'] && (delete _0x103774['_resumeAfterSuspend'], _0x103774['_autoResume']());
                    }));
                }, 0x7530), _0x103774;
            }
        },
        '_autoResume': function() {
            var _0x574cd4 = this;
            if (_0x574cd4['ctx'] && void 0x0 !== _0x574cd4['ctx']['resume'] && _0x5783fc['usingWebAudio']) return 'running' === _0x574cd4['state'] && _0x574cd4['_suspendTimer'] ? (clearTimeout(_0x574cd4['_suspendTimer']), _0x574cd4['_suspendTimer'] = null) : 'suspended' === _0x574cd4['state'] ? (_0x574cd4['ctx']['resume']()['then'](function() {
                _0x574cd4['state'] = 'running';
                for (var _0x30ec8e = 0x0; _0x30ec8e < _0x574cd4['_howls']['length']; _0x30ec8e++) _0x574cd4['_howls'][_0x30ec8e]['_emit']('resume');
            }), _0x574cd4['_suspendTimer'] && (clearTimeout(_0x574cd4['_suspendTimer']), _0x574cd4['_suspendTimer'] = null)) : 'suspending' === _0x574cd4['state'] && (_0x574cd4['_resumeAfterSuspend'] = !0x0), _0x574cd4;
        }
    };
    var _0x5783fc = new _0x4ae138(),
        _0x9748d8 = function(_0x59f0c6) {
            var _0x26fcea = this;
            if (!_0x59f0c6['src'] || 0x0 === _0x59f0c6['src']['length']) return void console['error']('An\x20array\x20of\x20source\x20files\x20must\x20be\x20passed\x20with\x20any\x20new\x20Howl.');
            _0x26fcea['init'](_0x59f0c6);
        };
    _0x9748d8['prototype'] = {
        'init': function(_0x346c24) {
            var _0x1989cd = this;
            return _0x5783fc['ctx'] || _0x3bb448(), _0x1989cd['_autoplay'] = _0x346c24['autoplay'] || !0x1, _0x1989cd['_format'] = 'string' != typeof _0x346c24['format'] ? _0x346c24['format'] : [_0x346c24['format']], _0x1989cd['_html5'] = _0x346c24['html5'] || !0x1, _0x1989cd['_muted'] = _0x346c24['mute'] || !0x1, _0x1989cd['_loop'] = _0x346c24['loop'] || !0x1, _0x1989cd['_pool'] = _0x346c24['pool'] || 0x5, _0x1989cd['_preload'] = 'boolean' != typeof _0x346c24['preload'] || _0x346c24['preload'], _0x1989cd['_rate'] = _0x346c24['rate'] || 0x1, _0x1989cd['_sprite'] = _0x346c24['sprite'] || {}, _0x1989cd['_src'] = 'string' != typeof _0x346c24['src'] ? _0x346c24['src'] : [_0x346c24['src']], _0x1989cd['_volume'] = void 0x0 !== _0x346c24['volume'] ? _0x346c24['volume'] : 0x1, _0x1989cd['_duration'] = 0x0, _0x1989cd['_state'] = 'unloaded', _0x1989cd['_sounds'] = [], _0x1989cd['_endTimers'] = {}, _0x1989cd['_queue'] = [], _0x1989cd['_onend'] = _0x346c24['onend'] ? [{
                'fn': _0x346c24['onend']
            }] : [], _0x1989cd['_onfade'] = _0x346c24['onfade'] ? [{
                'fn': _0x346c24['onfade']
            }] : [], _0x1989cd['_onload'] = _0x346c24['onload'] ? [{
                'fn': _0x346c24['onload']
            }] : [], _0x1989cd['_onloaderror'] = _0x346c24['onloaderror'] ? [{
                'fn': _0x346c24['onloaderror']
            }] : [], _0x1989cd['_onpause'] = _0x346c24['onpause'] ? [{
                'fn': _0x346c24['onpause']
            }] : [], _0x1989cd['_onplay'] = _0x346c24['onplay'] ? [{
                'fn': _0x346c24['onplay']
            }] : [], _0x1989cd['_onstop'] = _0x346c24['onstop'] ? [{
                'fn': _0x346c24['onstop']
            }] : [], _0x1989cd['_onmute'] = _0x346c24['onmute'] ? [{
                'fn': _0x346c24['onmute']
            }] : [], _0x1989cd['_onvolume'] = _0x346c24['onvolume'] ? [{
                'fn': _0x346c24['onvolume']
            }] : [], _0x1989cd['_onrate'] = _0x346c24['onrate'] ? [{
                'fn': _0x346c24['onrate']
            }] : [], _0x1989cd['_onseek'] = _0x346c24['onseek'] ? [{
                'fn': _0x346c24['onseek']
            }] : [], _0x1989cd['_onresume'] = [], _0x1989cd['_webAudio'] = _0x5783fc['usingWebAudio'] && !_0x1989cd['_html5'], void 0x0 !== _0x5783fc['ctx'] && _0x5783fc['ctx'] && _0x5783fc['mobileAutoEnable'] && _0x5783fc['_enableMobileAudio'](), _0x5783fc['_howls']['push'](_0x1989cd), _0x1989cd['_autoplay'] && _0x1989cd['_queue']['push']({
                'event': 'play',
                'action': function() {
                    _0x1989cd['play']();
                }
            }), _0x1989cd['_preload'] && _0x1989cd['load'](), _0x1989cd;
        },
        'load': function() {
            var _0x85b007 = this,
                _0x58af9a = null;
            if (_0x5783fc['noAudio']) return void _0x85b007['_emit']('loaderror', null, 'No\x20audio\x20support.');
            'string' == typeof _0x85b007['_src'] && (_0x85b007['_src'] = [_0x85b007['_src']]);
            for (var _0x53773b = 0x0; _0x53773b < _0x85b007['_src']['length']; _0x53773b++) {
                var _0x4a02ab, _0x585919;
                if (_0x85b007['_format'] && _0x85b007['_format'][_0x53773b]) _0x4a02ab = _0x85b007['_format'][_0x53773b];
                else {
                    if ('string' != typeof(_0x585919 = _0x85b007['_src'][_0x53773b])) {
                        _0x85b007['_emit']('loaderror', null, 'Non-string\x20found\x20in\x20selected\x20audio\x20sources\x20-\x20ignoring.');
                        continue;
                    }
                    _0x4a02ab = /^data:audio\/([^;,]+);/i ['exec'](_0x585919), _0x4a02ab || (_0x4a02ab = /\.([^.]+)$/ ['exec'](_0x585919['split']('?', 0x1)[0x0])), _0x4a02ab && (_0x4a02ab = _0x4a02ab[0x1]['toLowerCase']());
                }
                if (_0x4a02ab || console['warn']('No\x20file\x20extension\x20was\x20found.\x20Consider\x20using\x20the\x20\x22format\x22\x20property\x20or\x20specify\x20an\x20extension.'), _0x4a02ab && _0x5783fc['codecs'](_0x4a02ab)) {
                    _0x58af9a = _0x85b007['_src'][_0x53773b];
                    break;
                }
            }
            return _0x58af9a ? (_0x85b007['_src'] = _0x58af9a, _0x85b007['_state'] = 'loading', 'https:' === window['location']['protocol'] && 'http:' === _0x58af9a['slice'](0x0, 0x5) && (_0x85b007['_html5'] = !0x0, _0x85b007['_webAudio'] = !0x1), new _0x50be48(_0x85b007), _0x85b007['_webAudio'] && _0x4f1f82(_0x85b007), _0x85b007) : void _0x85b007['_emit']('loaderror', null, 'No\x20codec\x20support\x20for\x20selected\x20audio\x20sources.');
        },
        'play': function(_0x359bb0, _0x10a72d) {
            var _0x34703e = this,
                _0x1b3e76 = null;
            if ('number' == typeof _0x359bb0) _0x1b3e76 = _0x359bb0, _0x359bb0 = null;
            else {
                if ('string' == typeof _0x359bb0 && 'loaded' === _0x34703e['_state'] && !_0x34703e['_sprite'][_0x359bb0]) return null;
                if (void 0x0 === _0x359bb0) {
                    _0x359bb0 = '__default';
                    for (var _0x44093d = 0x0, _0x48971c = 0x0; _0x48971c < _0x34703e['_sounds']['length']; _0x48971c++) _0x34703e['_sounds'][_0x48971c]['_paused'] && !_0x34703e['_sounds'][_0x48971c]['_ended'] && (_0x44093d++, _0x1b3e76 = _0x34703e['_sounds'][_0x48971c]['_id']);
                    0x1 === _0x44093d ? _0x359bb0 = null : _0x1b3e76 = null;
                }
            }
            var _0x3f4390 = _0x1b3e76 ? _0x34703e['_soundById'](_0x1b3e76) : _0x34703e['_inactiveSound']();
            if (!_0x3f4390) return null;
            if (_0x1b3e76 && !_0x359bb0 && (_0x359bb0 = _0x3f4390['_sprite'] || '__default'), 'loaded' !== _0x34703e['_state']) {
                _0x3f4390['_sprite'] = _0x359bb0, _0x3f4390['_ended'] = !0x1;
                var _0x3219c9 = _0x3f4390['_id'];
                return _0x34703e['_queue']['push']({
                    'event': 'play',
                    'action': function() {
                        _0x34703e['play'](_0x3219c9);
                    }
                }), _0x3219c9;
            }
            if (_0x1b3e76 && !_0x3f4390['_paused']) return _0x10a72d || setTimeout(function() {
                _0x34703e['_emit']('play', _0x3f4390['_id']);
            }, 0x0), _0x3f4390['_id'];
            _0x34703e['_webAudio'] && _0x5783fc['_autoResume']();
            var _0x5ee473 = Math['max'](0x0, _0x3f4390['_seek'] > 0x0 ? _0x3f4390['_seek'] : _0x34703e['_sprite'][_0x359bb0][0x0] / 0x3e8),
                _0x20131b = Math['max'](0x0, (_0x34703e['_sprite'][_0x359bb0][0x0] + _0x34703e['_sprite'][_0x359bb0][0x1]) / 0x3e8 - _0x5ee473),
                _0x502900 = 0x3e8 * _0x20131b / Math['abs'](_0x3f4390['_rate']);
            _0x3f4390['_paused'] = !0x1, _0x3f4390['_ended'] = !0x1, _0x3f4390['_sprite'] = _0x359bb0, _0x3f4390['_seek'] = _0x5ee473, _0x3f4390['_start'] = _0x34703e['_sprite'][_0x359bb0][0x0] / 0x3e8, _0x3f4390['_stop'] = (_0x34703e['_sprite'][_0x359bb0][0x0] + _0x34703e['_sprite'][_0x359bb0][0x1]) / 0x3e8, _0x3f4390['_loop'] = !(!_0x3f4390['_loop'] && !_0x34703e['_sprite'][_0x359bb0][0x2]);
            var _0x4ae9cc = _0x3f4390['_node'];
            if (_0x34703e['_webAudio']) {
                var _0x56e079 = function() {
                        _0x34703e['_refreshBuffer'](_0x3f4390);
                        var _0x35b40d = _0x3f4390['_muted'] || _0x34703e['_muted'] ? 0x0 : _0x3f4390['_volume'];
                        _0x4ae9cc['gain']['setValueAtTime'](_0x35b40d, _0x5783fc['ctx']['currentTime']), _0x3f4390['_playStart'] = _0x5783fc['ctx']['currentTime'], void 0x0 === _0x4ae9cc['bufferSource']['start'] ? _0x3f4390['_loop'] ? _0x4ae9cc['bufferSource']['noteGrainOn'](0x0, _0x5ee473, 0x15180) : _0x4ae9cc['bufferSource']['noteGrainOn'](0x0, _0x5ee473, _0x20131b) : _0x3f4390['_loop'] ? _0x4ae9cc['bufferSource']['start'](0x0, _0x5ee473, 0x15180) : _0x4ae9cc['bufferSource']['start'](0x0, _0x5ee473, _0x20131b), _0x502900 !== 0x1 / 0x0 && (_0x34703e['_endTimers'][_0x3f4390['_id']] = setTimeout(_0x34703e['_ended']['bind'](_0x34703e, _0x3f4390), _0x502900)), _0x10a72d || setTimeout(function() {
                            _0x34703e['_emit']('play', _0x3f4390['_id']);
                        }, 0x0);
                    },
                    _0x533a88 = 'running' === _0x5783fc['state'];
                if ('loaded' === _0x34703e['_state'] && _0x533a88) _0x56e079();
                else {
                    var _0x43fefc = _0x533a88 || 'loaded' !== _0x34703e['_state'] ? 'load' : 'resume';
                    _0x34703e['once'](_0x43fefc, _0x56e079, _0x533a88 ? _0x3f4390['_id'] : null), _0x34703e['_clearTimer'](_0x3f4390['_id']);
                }
            } else {
                var _0x34980e = function() {
                        _0x4ae9cc['currentTime'] = _0x5ee473, _0x4ae9cc['muted'] = _0x3f4390['_muted'] || _0x34703e['_muted'] || _0x5783fc['_muted'] || _0x4ae9cc['muted'], _0x4ae9cc['volume'] = _0x3f4390['_volume'] * _0x5783fc['volume'](), _0x4ae9cc['playbackRate'] = _0x3f4390['_rate'], _0x4ae9cc['play'](), _0x502900 !== 0x1 / 0x0 && (_0x34703e['_endTimers'][_0x3f4390['_id']] = setTimeout(_0x34703e['_ended']['bind'](_0x34703e, _0x3f4390), _0x502900)), _0x10a72d || _0x34703e['_emit']('play', _0x3f4390['_id']);
                    },
                    _0x41d944 = 'loaded' === _0x34703e['_state'] && (window && window['ejecta'] || !_0x4ae9cc['readyState'] && _0x5783fc['_navigator']['isCocoonJS']);
                if (0x4 === _0x4ae9cc['readyState'] || _0x41d944) _0x34980e();
                else {
                    var _0x5e5ebf = function() {
                        _0x34980e(), _0x4ae9cc['removeEventListener'](_0x5783fc['_canPlayEvent'], _0x5e5ebf, !0x1);
                    };
                    _0x4ae9cc['addEventListener'](_0x5783fc['_canPlayEvent'], _0x5e5ebf, !0x1), _0x34703e['_clearTimer'](_0x3f4390['_id']);
                }
            }
            return _0x3f4390['_id'];
        },
        'pause': function(_0x73b976) {
            var _0x3af2e2 = this;
            if ('loaded' !== _0x3af2e2['_state']) return _0x3af2e2['_queue']['push']({
                'event': 'pause',
                'action': function() {
                    _0x3af2e2['pause'](_0x73b976);
                }
            }), _0x3af2e2;
            for (var _0x469118 = _0x3af2e2['_getSoundIds'](_0x73b976), _0x2d093e = 0x0; _0x2d093e < _0x469118['length']; _0x2d093e++) {
                _0x3af2e2['_clearTimer'](_0x469118[_0x2d093e]);
                var _0x117abb = _0x3af2e2['_soundById'](_0x469118[_0x2d093e]);
                if (_0x117abb && !_0x117abb['_paused'] && (_0x117abb['_seek'] = _0x3af2e2['seek'](_0x469118[_0x2d093e]), _0x117abb['_rateSeek'] = 0x0, _0x117abb['_paused'] = !0x0, _0x3af2e2['_stopFade'](_0x469118[_0x2d093e]), _0x117abb['_node'])) {
                    if (_0x3af2e2['_webAudio']) {
                        if (!_0x117abb['_node']['bufferSource']) continue;
                        void 0x0 === _0x117abb['_node']['bufferSource']['stop'] ? _0x117abb['_node']['bufferSource']['noteOff'](0x0) : _0x117abb['_node']['bufferSource']['stop'](0x0), _0x3af2e2['_cleanBuffer'](_0x117abb['_node']);
                    } else isNaN(_0x117abb['_node']['duration']) && _0x117abb['_node']['duration'] !== 0x1 / 0x0 || _0x117abb['_node']['pause']();
                }
                arguments[0x1] || _0x3af2e2['_emit']('pause', _0x117abb ? _0x117abb['_id'] : null);
            }
            return _0x3af2e2;
        },
        'stop': function(_0x5cfe76, _0x592804) {
            var _0xcd118d = this;
            if ('loaded' !== _0xcd118d['_state']) return _0xcd118d['_queue']['push']({
                'event': 'stop',
                'action': function() {
                    _0xcd118d['stop'](_0x5cfe76);
                }
            }), _0xcd118d;
            for (var _0x1d1ce6 = _0xcd118d['_getSoundIds'](_0x5cfe76), _0x46d0bd = 0x0; _0x46d0bd < _0x1d1ce6['length']; _0x46d0bd++) {
                _0xcd118d['_clearTimer'](_0x1d1ce6[_0x46d0bd]);
                var _0x27bd8 = _0xcd118d['_soundById'](_0x1d1ce6[_0x46d0bd]);
                _0x27bd8 && (_0x27bd8['_seek'] = _0x27bd8['_start'] || 0x0, _0x27bd8['_rateSeek'] = 0x0, _0x27bd8['_paused'] = !0x0, _0x27bd8['_ended'] = !0x0, _0xcd118d['_stopFade'](_0x1d1ce6[_0x46d0bd]), _0x27bd8['_node'] && (_0xcd118d['_webAudio'] ? _0x27bd8['_node']['bufferSource'] && (void 0x0 === _0x27bd8['_node']['bufferSource']['stop'] ? _0x27bd8['_node']['bufferSource']['noteOff'](0x0) : _0x27bd8['_node']['bufferSource']['stop'](0x0), _0xcd118d['_cleanBuffer'](_0x27bd8['_node'])) : isNaN(_0x27bd8['_node']['duration']) && _0x27bd8['_node']['duration'] !== 0x1 / 0x0 || (_0x27bd8['_node']['currentTime'] = _0x27bd8['_start'] || 0x0, _0x27bd8['_node']['pause']())), _0x592804 || _0xcd118d['_emit']('stop', _0x27bd8['_id']));
            }
            return _0xcd118d;
        },
        'mute': function(_0x728773, _0x524891) {
            var _0x2dd8b9 = this;
            if ('loaded' !== _0x2dd8b9['_state']) return _0x2dd8b9['_queue']['push']({
                'event': 'mute',
                'action': function() {
                    _0x2dd8b9['mute'](_0x728773, _0x524891);
                }
            }), _0x2dd8b9;
            if (void 0x0 === _0x524891) {
                if ('boolean' != typeof _0x728773) return _0x2dd8b9['_muted'];
                _0x2dd8b9['_muted'] = _0x728773;
            }
            for (var _0x37dfe8 = _0x2dd8b9['_getSoundIds'](_0x524891), _0x31140a = 0x0; _0x31140a < _0x37dfe8['length']; _0x31140a++) {
                var _0x49b18a = _0x2dd8b9['_soundById'](_0x37dfe8[_0x31140a]);
                _0x49b18a && (_0x49b18a['_muted'] = _0x728773, _0x2dd8b9['_webAudio'] && _0x49b18a['_node'] ? _0x49b18a['_node']['gain']['setValueAtTime'](_0x728773 ? 0x0 : _0x49b18a['_volume'], _0x5783fc['ctx']['currentTime']) : _0x49b18a['_node'] && (_0x49b18a['_node']['muted'] = !!_0x5783fc['_muted'] || _0x728773), _0x2dd8b9['_emit']('mute', _0x49b18a['_id']));
            }
            return _0x2dd8b9;
        },
        'volume': function() {
            var _0x43f3d9, _0x211f9a, _0x5a120a = this,
                _0x5609fb = arguments;
            if (0x0 === _0x5609fb['length']) return _0x5a120a['_volume'];
            if (0x1 === _0x5609fb['length'] || 0x2 === _0x5609fb['length'] && void 0x0 === _0x5609fb[0x1]) _0x5a120a['_getSoundIds']()['indexOf'](_0x5609fb[0x0]) >= 0x0 ? _0x211f9a = parseInt(_0x5609fb[0x0], 0xa) : _0x43f3d9 = parseFloat(_0x5609fb[0x0]);
            else _0x5609fb['length'] >= 0x2 && (_0x43f3d9 = parseFloat(_0x5609fb[0x0]), _0x211f9a = parseInt(_0x5609fb[0x1], 0xa));
            var _0xd273bc;
            if (!(void 0x0 !== _0x43f3d9 && _0x43f3d9 >= 0x0 && _0x43f3d9 <= 0x1)) return _0xd273bc = _0x211f9a ? _0x5a120a['_soundById'](_0x211f9a) : _0x5a120a['_sounds'][0x0], _0xd273bc ? _0xd273bc['_volume'] : 0x0;
            if ('loaded' !== _0x5a120a['_state']) return _0x5a120a['_queue']['push']({
                'event': 'volume',
                'action': function() {
                    _0x5a120a['volume']['apply'](_0x5a120a, _0x5609fb);
                }
            }), _0x5a120a;
            void 0x0 === _0x211f9a && (_0x5a120a['_volume'] = _0x43f3d9), _0x211f9a = _0x5a120a['_getSoundIds'](_0x211f9a);
            for (var _0x1baaaa = 0x0; _0x1baaaa < _0x211f9a['length']; _0x1baaaa++)(_0xd273bc = _0x5a120a['_soundById'](_0x211f9a[_0x1baaaa])) && (_0xd273bc['_volume'] = _0x43f3d9, _0x5609fb[0x2] || _0x5a120a['_stopFade'](_0x211f9a[_0x1baaaa]), _0x5a120a['_webAudio'] && _0xd273bc['_node'] && !_0xd273bc['_muted'] ? _0xd273bc['_node']['gain']['setValueAtTime'](_0x43f3d9, _0x5783fc['ctx']['currentTime']) : _0xd273bc['_node'] && !_0xd273bc['_muted'] && (_0xd273bc['_node']['volume'] = _0x43f3d9 * _0x5783fc['volume']()), _0x5a120a['_emit']('volume', _0xd273bc['_id']));
            return _0x5a120a;
        },
        'fade': function(_0x5a90c5, _0x23fedc, _0x39c5a3, _0x48941e) {
            var _0x2fe01a = this,
                _0x2aba47 = Math['abs'](_0x5a90c5 - _0x23fedc),
                _0x42b7ea = _0x5a90c5 > _0x23fedc ? 'out' : 'in',
                _0x4bbc6b = _0x2aba47 / 0.01,
                _0x2a93c0 = _0x4bbc6b > 0x0 ? _0x39c5a3 / _0x4bbc6b : _0x39c5a3;
            if (_0x2a93c0 < 0x4 && (_0x4bbc6b = Math['ceil'](_0x4bbc6b / (0x4 / _0x2a93c0)), _0x2a93c0 = 0x4), 'loaded' !== _0x2fe01a['_state']) return _0x2fe01a['_queue']['push']({
                'event': 'fade',
                'action': function() {
                    _0x2fe01a['fade'](_0x5a90c5, _0x23fedc, _0x39c5a3, _0x48941e);
                }
            }), _0x2fe01a;
            _0x2fe01a['volume'](_0x5a90c5, _0x48941e);
            for (var _0x5c747e = _0x2fe01a['_getSoundIds'](_0x48941e), _0x3cb9cb = 0x0; _0x3cb9cb < _0x5c747e['length']; _0x3cb9cb++) {
                var _0xa6278a = _0x2fe01a['_soundById'](_0x5c747e[_0x3cb9cb]);
                if (_0xa6278a) {
                    if (_0x48941e || _0x2fe01a['_stopFade'](_0x5c747e[_0x3cb9cb]), _0x2fe01a['_webAudio'] && !_0xa6278a['_muted']) {
                        var _0x486dca = _0x5783fc['ctx']['currentTime'],
                            _0x4e5688 = _0x486dca + _0x39c5a3 / 0x3e8;
                        _0xa6278a['_volume'] = _0x5a90c5, _0xa6278a['_node']['gain']['setValueAtTime'](_0x5a90c5, _0x486dca), _0xa6278a['_node']['gain']['linearRampToValueAtTime'](_0x23fedc, _0x4e5688);
                    }
                    var _0x30ac38 = _0x5a90c5;
                    _0xa6278a['_interval'] = setInterval(function(_0x1411ed, _0x47734b) {
                        _0x4bbc6b > 0x0 && (_0x30ac38 += 'in' === _0x42b7ea ? 0.01 : -0.01), _0x30ac38 = Math['max'](0x0, _0x30ac38), _0x30ac38 = Math['min'](0x1, _0x30ac38), _0x30ac38 = Math['round'](0x64 * _0x30ac38) / 0x64, _0x2fe01a['_webAudio'] ? (void 0x0 === _0x48941e && (_0x2fe01a['_volume'] = _0x30ac38), _0x47734b['_volume'] = _0x30ac38) : _0x2fe01a['volume'](_0x30ac38, _0x1411ed, !0x0), (_0x23fedc < _0x5a90c5 && _0x30ac38 <= _0x23fedc || _0x23fedc > _0x5a90c5 && _0x30ac38 >= _0x23fedc) && (clearInterval(_0x47734b['_interval']), _0x47734b['_interval'] = null, _0x2fe01a['volume'](_0x23fedc, _0x1411ed), _0x2fe01a['_emit']('fade', _0x1411ed));
                    } ['bind'](_0x2fe01a, _0x5c747e[_0x3cb9cb], _0xa6278a), _0x2a93c0);
                }
            }
            return _0x2fe01a;
        },
        '_stopFade': function(_0x19019a) {
            var _0x1ddba4 = this,
                _0x3fb7fc = _0x1ddba4['_soundById'](_0x19019a);
            return _0x3fb7fc && _0x3fb7fc['_interval'] && (_0x1ddba4['_webAudio'] && _0x3fb7fc['_node']['gain']['cancelScheduledValues'](_0x5783fc['ctx']['currentTime']), clearInterval(_0x3fb7fc['_interval']), _0x3fb7fc['_interval'] = null, _0x1ddba4['_emit']('fade', _0x19019a)), _0x1ddba4;
        },
        'loop': function() {
            var _0x33a2d4, _0x583f3d, _0x4136af, _0x1535e2 = this,
                _0x44a559 = arguments;
            if (0x0 === _0x44a559['length']) return _0x1535e2['_loop'];
            if (0x1 === _0x44a559['length']) {
                if ('boolean' != typeof _0x44a559[0x0]) return !!(_0x4136af = _0x1535e2['_soundById'](parseInt(_0x44a559[0x0], 0xa))) && _0x4136af['_loop'];
                _0x33a2d4 = _0x44a559[0x0], _0x1535e2['_loop'] = _0x33a2d4;
            } else 0x2 === _0x44a559['length'] && (_0x33a2d4 = _0x44a559[0x0], _0x583f3d = parseInt(_0x44a559[0x1], 0xa));
            for (var _0x533129 = _0x1535e2['_getSoundIds'](_0x583f3d), _0x3e14d6 = 0x0; _0x3e14d6 < _0x533129['length']; _0x3e14d6++)(_0x4136af = _0x1535e2['_soundById'](_0x533129[_0x3e14d6])) && (_0x4136af['_loop'] = _0x33a2d4, _0x1535e2['_webAudio'] && _0x4136af['_node'] && _0x4136af['_node']['bufferSource'] && (_0x4136af['_node']['bufferSource']['loop'] = _0x33a2d4, _0x33a2d4 && (_0x4136af['_node']['bufferSource']['loopStart'] = _0x4136af['_start'] || 0x0, _0x4136af['_node']['bufferSource']['loopEnd'] = _0x4136af['_stop'])));
            return _0x1535e2;
        },
        'rate': function() {
            var _0x3b5fa7, _0x12ed09, _0xfd970a = this,
                _0x3ab22d = arguments;
            if (0x0 === _0x3ab22d['length']) _0x12ed09 = _0xfd970a['_sounds'][0x0]['_id'];
            else {
                if (0x1 === _0x3ab22d['length']) {
                    var _0x1cf18d = _0xfd970a['_getSoundIds'](),
                        _0x39030b = _0x1cf18d['indexOf'](_0x3ab22d[0x0]);
                    _0x39030b >= 0x0 ? _0x12ed09 = parseInt(_0x3ab22d[0x0], 0xa) : _0x3b5fa7 = parseFloat(_0x3ab22d[0x0]);
                } else 0x2 === _0x3ab22d['length'] && (_0x3b5fa7 = parseFloat(_0x3ab22d[0x0]), _0x12ed09 = parseInt(_0x3ab22d[0x1], 0xa));
            }
            var _0xa1acda;
            if ('number' != typeof _0x3b5fa7) return _0xa1acda = _0xfd970a['_soundById'](_0x12ed09), _0xa1acda ? _0xa1acda['_rate'] : _0xfd970a['_rate'];
            if ('loaded' !== _0xfd970a['_state']) return _0xfd970a['_queue']['push']({
                'event': 'rate',
                'action': function() {
                    _0xfd970a['rate']['apply'](_0xfd970a, _0x3ab22d);
                }
            }), _0xfd970a;
            void 0x0 === _0x12ed09 && (_0xfd970a['_rate'] = _0x3b5fa7), _0x12ed09 = _0xfd970a['_getSoundIds'](_0x12ed09);
            for (var _0x3ec503 = 0x0; _0x3ec503 < _0x12ed09['length']; _0x3ec503++)
                if (_0xa1acda = _0xfd970a['_soundById'](_0x12ed09[_0x3ec503])) {
                    _0xa1acda['_rateSeek'] = _0xfd970a['seek'](_0x12ed09[_0x3ec503]), _0xa1acda['_playStart'] = _0xfd970a['_webAudio'] ? _0x5783fc['ctx']['currentTime'] : _0xa1acda['_playStart'], _0xa1acda['_rate'] = _0x3b5fa7, _0xfd970a['_webAudio'] && _0xa1acda['_node'] && _0xa1acda['_node']['bufferSource'] ? _0xa1acda['_node']['bufferSource']['playbackRate']['value'] = _0x3b5fa7 : _0xa1acda['_node'] && (_0xa1acda['_node']['playbackRate'] = _0x3b5fa7);
                    var _0x3b7b14 = _0xfd970a['seek'](_0x12ed09[_0x3ec503]),
                        _0x1f1307 = (_0xfd970a['_sprite'][_0xa1acda['_sprite']][0x0] + _0xfd970a['_sprite'][_0xa1acda['_sprite']][0x1]) / 0x3e8 - _0x3b7b14,
                        _0x5678aa = 0x3e8 * _0x1f1307 / Math['abs'](_0xa1acda['_rate']);
                    !_0xfd970a['_endTimers'][_0x12ed09[_0x3ec503]] && _0xa1acda['_paused'] || (_0xfd970a['_clearTimer'](_0x12ed09[_0x3ec503]), _0xfd970a['_endTimers'][_0x12ed09[_0x3ec503]] = setTimeout(_0xfd970a['_ended']['bind'](_0xfd970a, _0xa1acda), _0x5678aa)), _0xfd970a['_emit']('rate', _0xa1acda['_id']);
                } return _0xfd970a;
        },
        'seek': function() {
            var _0x4dc80a, _0x388cbb, _0x31b3dd = this,
                _0x2c8201 = arguments;
            if (0x0 === _0x2c8201['length']) _0x388cbb = _0x31b3dd['_sounds'][0x0]['_id'];
            else {
                if (0x1 === _0x2c8201['length']) {
                    var _0x466704 = _0x31b3dd['_getSoundIds'](),
                        _0xac006c = _0x466704['indexOf'](_0x2c8201[0x0]);
                    _0xac006c >= 0x0 ? _0x388cbb = parseInt(_0x2c8201[0x0], 0xa) : (_0x388cbb = _0x31b3dd['_sounds'][0x0]['_id'], _0x4dc80a = parseFloat(_0x2c8201[0x0]));
                } else 0x2 === _0x2c8201['length'] && (_0x4dc80a = parseFloat(_0x2c8201[0x0]), _0x388cbb = parseInt(_0x2c8201[0x1], 0xa));
            }
            if (void 0x0 === _0x388cbb) return _0x31b3dd;
            if ('loaded' !== _0x31b3dd['_state']) return _0x31b3dd['_queue']['push']({
                'event': 'seek',
                'action': function() {
                    _0x31b3dd['seek']['apply'](_0x31b3dd, _0x2c8201);
                }
            }), _0x31b3dd;
            var _0x28ccdf = _0x31b3dd['_soundById'](_0x388cbb);
            if (_0x28ccdf) {
                if (!('number' == typeof _0x4dc80a && _0x4dc80a >= 0x0)) {
                    if (_0x31b3dd['_webAudio']) {
                        var _0x450622 = _0x31b3dd['playing'](_0x388cbb) ? _0x5783fc['ctx']['currentTime'] - _0x28ccdf['_playStart'] : 0x0,
                            _0x49b927 = _0x28ccdf['_rateSeek'] ? _0x28ccdf['_rateSeek'] - _0x28ccdf['_seek'] : 0x0;
                        return _0x28ccdf['_seek'] + (_0x49b927 + _0x450622 * Math['abs'](_0x28ccdf['_rate']));
                    }
                    return _0x28ccdf['_node']['currentTime'];
                }
                var _0x3351de = _0x31b3dd['playing'](_0x388cbb);
                _0x3351de && _0x31b3dd['pause'](_0x388cbb, !0x0), _0x28ccdf['_seek'] = _0x4dc80a, _0x28ccdf['_ended'] = !0x1, _0x31b3dd['_clearTimer'](_0x388cbb), _0x3351de && _0x31b3dd['play'](_0x388cbb, !0x0), !_0x31b3dd['_webAudio'] && _0x28ccdf['_node'] && (_0x28ccdf['_node']['currentTime'] = _0x4dc80a), _0x31b3dd['_emit']('seek', _0x388cbb);
            }
            return _0x31b3dd;
        },
        'playing': function(_0x551b2b) {
            var _0x5da571 = this;
            if ('number' == typeof _0x551b2b) {
                var _0xcc901e = _0x5da571['_soundById'](_0x551b2b);
                return !!_0xcc901e && !_0xcc901e['_paused'];
            }
            for (var _0x575093 = 0x0; _0x575093 < _0x5da571['_sounds']['length']; _0x575093++)
                if (!_0x5da571['_sounds'][_0x575093]['_paused']) return !0x0;
            return !0x1;
        },
        'duration': function(_0x1125c4) {
            var _0x5a5ac9 = this,
                _0x5f793e = _0x5a5ac9['_duration'],
                _0x27dd8e = _0x5a5ac9['_soundById'](_0x1125c4);
            return _0x27dd8e && (_0x5f793e = _0x5a5ac9['_sprite'][_0x27dd8e['_sprite']][0x1] / 0x3e8), _0x5f793e;
        },
        'state': function() {
            return this['_state'];
        },
        'unload': function() {
            for (var _0x12c4bb = this, _0x1ae579 = _0x12c4bb['_sounds'], _0x2af61a = 0x0; _0x2af61a < _0x1ae579['length']; _0x2af61a++) {
                (_0x1ae579[_0x2af61a]['_paused'] || _0x12c4bb['stop'](_0x1ae579[_0x2af61a]['_id']), !_0x12c4bb['_webAudio']) && (/MSIE |Trident\// ['test'](_0x5783fc['_navigator'] && _0x5783fc['_navigator']['userAgent']) || (_0x1ae579[_0x2af61a]['_node']['src'] = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA'), _0x1ae579[_0x2af61a]['_node']['removeEventListener']('error', _0x1ae579[_0x2af61a]['_errorFn'], !0x1), _0x1ae579[_0x2af61a]['_node']['removeEventListener'](_0x5783fc['_canPlayEvent'], _0x1ae579[_0x2af61a]['_loadFn'], !0x1));
                delete _0x1ae579[_0x2af61a]['_node'], _0x12c4bb['_clearTimer'](_0x1ae579[_0x2af61a]['_id']);
                var _0x3a11cc = _0x5783fc['_howls']['indexOf'](_0x12c4bb);
                _0x3a11cc >= 0x0 && _0x5783fc['_howls']['splice'](_0x3a11cc, 0x1);
            }
            var _0x569aa0 = !0x0;
            for (_0x2af61a = 0x0; _0x2af61a < _0x5783fc['_howls']['length']; _0x2af61a++)
                if (_0x5783fc['_howls'][_0x2af61a]['_src'] === _0x12c4bb['_src']) {
                    _0x569aa0 = !0x1;
                    break;
                } return _0x26c2b2 && _0x569aa0 && delete _0x26c2b2[_0x12c4bb['_src']], _0x5783fc['noAudio'] = !0x1, _0x12c4bb['_state'] = 'unloaded', _0x12c4bb['_sounds'] = [], _0x12c4bb = null, null;
        },
        'on': function(_0x2612ec, _0x173c5c, _0x2f4cba, _0x651bd3) {
            var _0x572f74 = this,
                _0x469aaf = _0x572f74['_on' + _0x2612ec];
            return 'function' == typeof _0x173c5c && _0x469aaf['push'](_0x651bd3 ? {
                'id': _0x2f4cba,
                'fn': _0x173c5c,
                'once': _0x651bd3
            } : {
                'id': _0x2f4cba,
                'fn': _0x173c5c
            }), _0x572f74;
        },
        'off': function(_0x4b7f35, _0x51e84c, _0xd4c504) {
            var _0x1d2758 = this,
                _0x19b7c8 = _0x1d2758['_on' + _0x4b7f35],
                _0x35ef17 = 0x0;
            if ('number' == typeof _0x51e84c && (_0xd4c504 = _0x51e84c, _0x51e84c = null), _0x51e84c || _0xd4c504)
                for (_0x35ef17 = 0x0; _0x35ef17 < _0x19b7c8['length']; _0x35ef17++) {
                    var _0x18a94e = _0xd4c504 === _0x19b7c8[_0x35ef17]['id'];
                    if (_0x51e84c === _0x19b7c8[_0x35ef17]['fn'] && _0x18a94e || !_0x51e84c && _0x18a94e) {
                        _0x19b7c8['splice'](_0x35ef17, 0x1);
                        break;
                    }
                } else {
                    if (_0x4b7f35) _0x1d2758['_on' + _0x4b7f35] = [];
                    else {
                        var _0x3af0a8 = Object['keys'](_0x1d2758);
                        for (_0x35ef17 = 0x0; _0x35ef17 < _0x3af0a8['length']; _0x35ef17++) 0x0 === _0x3af0a8[_0x35ef17]['indexOf']('_on') && Array['isArray'](_0x1d2758[_0x3af0a8[_0x35ef17]]) && (_0x1d2758[_0x3af0a8[_0x35ef17]] = []);
                    }
                }
            return _0x1d2758;
        },
        'once': function(_0x31dd11, _0x149c65, _0x353d31) {
            var _0x6c7772 = this;
            return _0x6c7772['on'](_0x31dd11, _0x149c65, _0x353d31, 0x1), _0x6c7772;
        },
        '_emit': function(_0x5269df, _0x1fbb0d, _0x398334) {
            for (var _0x48e267 = this, _0x224706 = _0x48e267['_on' + _0x5269df], _0x1d5303 = _0x224706['length'] - 0x1; _0x1d5303 >= 0x0; _0x1d5303--) _0x224706[_0x1d5303]['id'] && _0x224706[_0x1d5303]['id'] !== _0x1fbb0d && 'load' !== _0x5269df || (setTimeout(function(_0x3a1593) {
                _0x3a1593['call'](this, _0x1fbb0d, _0x398334);
            } ['bind'](_0x48e267, _0x224706[_0x1d5303]['fn']), 0x0), _0x224706[_0x1d5303]['once'] && _0x48e267['off'](_0x5269df, _0x224706[_0x1d5303]['fn'], _0x224706[_0x1d5303]['id']));
            return _0x48e267;
        },
        '_loadQueue': function() {
            var _0x4d359f = this;
            if (_0x4d359f['_queue']['length'] > 0x0) {
                var _0x2bf22b = _0x4d359f['_queue'][0x0];
                _0x4d359f['once'](_0x2bf22b['event'], function() {
                    _0x4d359f['_queue']['shift'](), _0x4d359f['_loadQueue']();
                }), _0x2bf22b['action']();
            }
            return _0x4d359f;
        },
        '_ended': function(_0x1a50c0) {
            var _0x256fd8 = this,
                _0xa7b10d = _0x1a50c0['_sprite'];
            if (!_0x256fd8['_webAudio'] && _0x256fd8['_node'] && !_0x256fd8['_node']['ended']) return setTimeout(_0x256fd8['_ended']['bind'](_0x256fd8, _0x1a50c0), 0x64), _0x256fd8;
            var _0x39e781 = !(!_0x1a50c0['_loop'] && !_0x256fd8['_sprite'][_0xa7b10d][0x2]);
            if (_0x256fd8['_emit']('end', _0x1a50c0['_id']), !_0x256fd8['_webAudio'] && _0x39e781 && _0x256fd8['stop'](_0x1a50c0['_id'], !0x0)['play'](_0x1a50c0['_id']), _0x256fd8['_webAudio'] && _0x39e781) {
                _0x256fd8['_emit']('play', _0x1a50c0['_id']), _0x1a50c0['_seek'] = _0x1a50c0['_start'] || 0x0, _0x1a50c0['_rateSeek'] = 0x0, _0x1a50c0['_playStart'] = _0x5783fc['ctx']['currentTime'];
                var _0x815b5b = 0x3e8 * (_0x1a50c0['_stop'] - _0x1a50c0['_start']) / Math['abs'](_0x1a50c0['_rate']);
                _0x256fd8['_endTimers'][_0x1a50c0['_id']] = setTimeout(_0x256fd8['_ended']['bind'](_0x256fd8, _0x1a50c0), _0x815b5b);
            }
            return _0x256fd8['_webAudio'] && !_0x39e781 && (_0x1a50c0['_paused'] = !0x0, _0x1a50c0['_ended'] = !0x0, _0x1a50c0['_seek'] = _0x1a50c0['_start'] || 0x0, _0x1a50c0['_rateSeek'] = 0x0, _0x256fd8['_clearTimer'](_0x1a50c0['_id']), _0x256fd8['_cleanBuffer'](_0x1a50c0['_node']), _0x5783fc['_autoSuspend']()), _0x256fd8['_webAudio'] || _0x39e781 || _0x256fd8['stop'](_0x1a50c0['_id']), _0x256fd8;
        },
        '_clearTimer': function(_0x28b009) {
            var _0x1dd9b4 = this;
            return _0x1dd9b4['_endTimers'][_0x28b009] && (clearTimeout(_0x1dd9b4['_endTimers'][_0x28b009]), delete _0x1dd9b4['_endTimers'][_0x28b009]), _0x1dd9b4;
        },
        '_soundById': function(_0x47e482) {
            for (var _0x447705 = this, _0x4025a4 = 0x0; _0x4025a4 < _0x447705['_sounds']['length']; _0x4025a4++)
                if (_0x47e482 === _0x447705['_sounds'][_0x4025a4]['_id']) return _0x447705['_sounds'][_0x4025a4];
            return null;
        },
        '_inactiveSound': function() {
            var _0x2cc1f2 = this;
            _0x2cc1f2['_drain']();
            for (var _0x3eb78c = 0x0; _0x3eb78c < _0x2cc1f2['_sounds']['length']; _0x3eb78c++)
                if (_0x2cc1f2['_sounds'][_0x3eb78c]['_ended']) return _0x2cc1f2['_sounds'][_0x3eb78c]['reset']();
            return new _0x50be48(_0x2cc1f2);
        },
        '_drain': function() {
            var _0x1f6ec4 = this,
                _0x19d144 = _0x1f6ec4['_pool'],
                _0x4b5d90 = 0x0,
                _0x57f464 = 0x0;
            if (!(_0x1f6ec4['_sounds']['length'] < _0x19d144)) {
                for (_0x57f464 = 0x0; _0x57f464 < _0x1f6ec4['_sounds']['length']; _0x57f464++) _0x1f6ec4['_sounds'][_0x57f464]['_ended'] && _0x4b5d90++;
                for (_0x57f464 = _0x1f6ec4['_sounds']['length'] - 0x1; _0x57f464 >= 0x0; _0x57f464--) {
                    if (_0x4b5d90 <= _0x19d144) return;
                    _0x1f6ec4['_sounds'][_0x57f464]['_ended'] && (_0x1f6ec4['_webAudio'] && _0x1f6ec4['_sounds'][_0x57f464]['_node'] && _0x1f6ec4['_sounds'][_0x57f464]['_node']['disconnect'](0x0), _0x1f6ec4['_sounds']['splice'](_0x57f464, 0x1), _0x4b5d90--);
                }
            }
        },
        '_getSoundIds': function(_0x291b89) {
            var _0xc3c0cf = this;
            if (void 0x0 === _0x291b89) {
                for (var _0x4578e5 = [], _0x29ea04 = 0x0; _0x29ea04 < _0xc3c0cf['_sounds']['length']; _0x29ea04++) _0x4578e5['push'](_0xc3c0cf['_sounds'][_0x29ea04]['_id']);
                return _0x4578e5;
            }
            return [_0x291b89];
        },
        '_refreshBuffer': function(_0x457b60) {
            var _0x3e4308 = this;
            return _0x457b60['_node']['bufferSource'] = _0x5783fc['ctx']['createBufferSource'](), _0x457b60['_node']['bufferSource']['buffer'] = _0x26c2b2[_0x3e4308['_src']], _0x457b60['_panner'] ? _0x457b60['_node']['bufferSource']['connect'](_0x457b60['_panner']) : _0x457b60['_node']['bufferSource']['connect'](_0x457b60['_node']), _0x457b60['_node']['bufferSource']['loop'] = _0x457b60['_loop'], _0x457b60['_loop'] && (_0x457b60['_node']['bufferSource']['loopStart'] = _0x457b60['_start'] || 0x0, _0x457b60['_node']['bufferSource']['loopEnd'] = _0x457b60['_stop']), _0x457b60['_node']['bufferSource']['playbackRate']['value'] = _0x457b60['_rate'], _0x3e4308;
        },
        '_cleanBuffer': function(_0x2e3202) {
            var _0x5bd11b = this;
            if (_0x5bd11b['_scratchBuffer']) {
                _0x2e3202['bufferSource']['onended'] = null, _0x2e3202['bufferSource']['disconnect'](0x0);
                try {
                    _0x2e3202['bufferSource']['buffer'] = _0x5bd11b['_scratchBuffer'];
                } catch (_0x88131) {}
            }
            return _0x2e3202['bufferSource'] = null, _0x5bd11b;
        }
    };
    var _0x50be48 = function(_0xeb8c3b) {
        this['_parent'] = _0xeb8c3b, this['init']();
    };
    _0x50be48['prototype'] = {
        'init': function() {
            var _0x12863f = this,
                _0x3e4888 = _0x12863f['_parent'];
            return _0x12863f['_muted'] = _0x3e4888['_muted'], _0x12863f['_loop'] = _0x3e4888['_loop'], _0x12863f['_volume'] = _0x3e4888['_volume'], _0x12863f['_rate'] = _0x3e4888['_rate'], _0x12863f['_seek'] = 0x0, _0x12863f['_paused'] = !0x0, _0x12863f['_ended'] = !0x0, _0x12863f['_sprite'] = '__default', _0x12863f['_id'] = ++_0x5783fc['_counter'], _0x3e4888['_sounds']['push'](_0x12863f), _0x12863f['create'](), _0x12863f;
        },
        'create': function() {
            var _0x10b9a0 = this,
                _0x5452ba = _0x10b9a0['_parent'],
                _0x13a8f8 = _0x5783fc['_muted'] || _0x10b9a0['_muted'] || _0x10b9a0['_parent']['_muted'] ? 0x0 : _0x10b9a0['_volume'];
            return _0x5452ba['_webAudio'] ? (_0x10b9a0['_node'] = void 0x0 === _0x5783fc['ctx']['createGain'] ? _0x5783fc['ctx']['createGainNode']() : _0x5783fc['ctx']['createGain'](), _0x10b9a0['_node']['gain']['setValueAtTime'](_0x13a8f8, _0x5783fc['ctx']['currentTime']), _0x10b9a0['_node']['paused'] = !0x0, _0x10b9a0['_node']['connect'](_0x5783fc['masterGain'])) : (_0x10b9a0['_node'] = new Audio(), _0x10b9a0['_errorFn'] = _0x10b9a0['_errorListener']['bind'](_0x10b9a0), _0x10b9a0['_node']['addEventListener']('error', _0x10b9a0['_errorFn'], !0x1), _0x10b9a0['_loadFn'] = _0x10b9a0['_loadListener']['bind'](_0x10b9a0), _0x10b9a0['_node']['addEventListener'](_0x5783fc['_canPlayEvent'], _0x10b9a0['_loadFn'], !0x1), _0x10b9a0['_node']['src'] = _0x5452ba['_src'], _0x10b9a0['_node']['preload'] = 'auto', _0x10b9a0['_node']['volume'] = _0x13a8f8 * _0x5783fc['volume'](), _0x10b9a0['_node']['load']()), _0x10b9a0;
        },
        'reset': function() {
            var _0xf23570 = this,
                _0x506651 = _0xf23570['_parent'];
            return _0xf23570['_muted'] = _0x506651['_muted'], _0xf23570['_loop'] = _0x506651['_loop'], _0xf23570['_volume'] = _0x506651['_volume'], _0xf23570['_rate'] = _0x506651['_rate'], _0xf23570['_seek'] = 0x0, _0xf23570['_rateSeek'] = 0x0, _0xf23570['_paused'] = !0x0, _0xf23570['_ended'] = !0x0, _0xf23570['_sprite'] = '__default', _0xf23570['_id'] = ++_0x5783fc['_counter'], _0xf23570;
        },
        '_errorListener': function() {
            var _0x46ff95 = this;
            _0x46ff95['_parent']['_emit']('loaderror', _0x46ff95['_id'], _0x46ff95['_node']['error'] ? _0x46ff95['_node']['error']['code'] : 0x0), _0x46ff95['_node']['removeEventListener']('error', _0x46ff95['_errorFn'], !0x1);
        },
        '_loadListener': function() {
            var _0x3fc9a2 = this,
                _0x43f84a = _0x3fc9a2['_parent'];
            _0x43f84a['_duration'] = Math['ceil'](0xa * _0x3fc9a2['_node']['duration']) / 0xa, 0x0 === Object['keys'](_0x43f84a['_sprite'])['length'] && (_0x43f84a['_sprite'] = {
                '__default': [0x0, 0x3e8 * _0x43f84a['_duration']]
            }), 'loaded' !== _0x43f84a['_state'] && (_0x43f84a['_state'] = 'loaded', _0x43f84a['_emit']('load'), _0x43f84a['_loadQueue']()), _0x3fc9a2['_node']['removeEventListener'](_0x5783fc['_canPlayEvent'], _0x3fc9a2['_loadFn'], !0x1);
        }
    };
    var _0x26c2b2 = {},
        _0x4f1f82 = function(_0x4ca524) {
            var _0x273172 = _0x4ca524['_src'];
            if (_0x26c2b2[_0x273172]) return _0x4ca524['_duration'] = _0x26c2b2[_0x273172]['duration'], void _0x479761(_0x4ca524);
            if (/^data:[^;]+;base64,/ ['test'](_0x273172)) {
                for (var _0xecb35b = atob(_0x273172['split'](',')[0x1]), _0x47b65a = new Uint8Array(_0xecb35b['length']), _0x498e85 = 0x0; _0x498e85 < _0xecb35b['length']; ++_0x498e85) _0x47b65a[_0x498e85] = _0xecb35b['charCodeAt'](_0x498e85);
                _0x14af4e(_0x47b65a['buffer'], _0x4ca524);
            } else {
                var _0x50fcfc = new XMLHttpRequest();
                _0x50fcfc['open']('GET', _0x273172, !0x0), _0x50fcfc['responseType'] = 'arraybuffer', _0x50fcfc['onload'] = function() {
                    var _0x58d407 = (_0x50fcfc['status'] + '')[0x0];
                    if ('0' !== _0x58d407 && '2' !== _0x58d407 && '3' !== _0x58d407) return void _0x4ca524['_emit']('loaderror', null, 'Failed\x20loading\x20audio\x20file\x20with\x20status:\x20' + _0x50fcfc['status'] + '.');
                    _0x14af4e(_0x50fcfc['response'], _0x4ca524);
                }, _0x50fcfc['onerror'] = function() {
                    _0x4ca524['_webAudio'] && (_0x4ca524['_html5'] = !0x0, _0x4ca524['_webAudio'] = !0x1, _0x4ca524['_sounds'] = [], delete _0x26c2b2[_0x273172], _0x4ca524['load']());
                }, _0x9f0bb3(_0x50fcfc);
            }
        },
        _0x9f0bb3 = function(_0x5361c7) {
            try {
                _0x5361c7['send']();
            } catch (_0x291df3) {
                _0x5361c7['onerror']();
            }
        },
        _0x14af4e = function(_0x2dbaad, _0x5750ae) {
            _0x5783fc['ctx']['decodeAudioData'](_0x2dbaad, function(_0x38a805) {
                _0x38a805 && _0x5750ae['_sounds']['length'] > 0x0 && (_0x26c2b2[_0x5750ae['_src']] = _0x38a805, _0x479761(_0x5750ae, _0x38a805));
            }, function() {
                _0x5750ae['_emit']('loaderror', null, 'Decoding\x20audio\x20data\x20failed.');
            });
        },
        _0x479761 = function(_0x33c259, _0x173b4c) {
            _0x173b4c && !_0x33c259['_duration'] && (_0x33c259['_duration'] = _0x173b4c['duration']), 0x0 === Object['keys'](_0x33c259['_sprite'])['length'] && (_0x33c259['_sprite'] = {
                '__default': [0x0, 0x3e8 * _0x33c259['_duration']]
            }), 'loaded' !== _0x33c259['_state'] && (_0x33c259['_state'] = 'loaded', _0x33c259['_emit']('load'), _0x33c259['_loadQueue']());
        },
        _0x3bb448 = function() {
            try {
                'undefined' != typeof AudioContext ? _0x5783fc['ctx'] = new AudioContext() : 'undefined' != typeof webkitAudioContext ? _0x5783fc['ctx'] = new webkitAudioContext() : _0x5783fc['usingWebAudio'] = !0x1;
            } catch (_0x5eac1c) {
                _0x5783fc['usingWebAudio'] = !0x1;
            }
            var _0x9fa907 = /iP(hone|od|ad)/ ['test'](_0x5783fc['_navigator'] && _0x5783fc['_navigator']['platform']),
                _0x1a3909 = _0x5783fc['_navigator'] && _0x5783fc['_navigator']['appVersion']['match'](/OS (\d+)_(\d+)_?(\d+)?/),
                _0xbb13ce = _0x1a3909 ? parseInt(_0x1a3909[0x1], 0xa) : null;
            if (_0x9fa907 && _0xbb13ce && _0xbb13ce < 0x9) {
                var _0x2777fc = /safari/ ['test'](_0x5783fc['_navigator'] && _0x5783fc['_navigator']['userAgent']['toLowerCase']());
                (_0x5783fc['_navigator'] && _0x5783fc['_navigator']['standalone'] && !_0x2777fc || _0x5783fc['_navigator'] && !_0x5783fc['_navigator']['standalone'] && !_0x2777fc) && (_0x5783fc['usingWebAudio'] = !0x1);
            }
            _0x5783fc['usingWebAudio'] && (_0x5783fc['masterGain'] = void 0x0 === _0x5783fc['ctx']['createGain'] ? _0x5783fc['ctx']['createGainNode']() : _0x5783fc['ctx']['createGain'](), _0x5783fc['masterGain']['gain']['value'] = _0x5783fc['_muted'] ? 0x0 : 0x1, _0x5783fc['masterGain']['connect'](_0x5783fc['ctx']['destination'])), _0x5783fc['_setup']();
        };
    'function' == typeof define && define['amd'] && define([], function() {
        return {
            'Howler': _0x5783fc,
            'Howl': _0x9748d8
        };
    }), 'undefined' != typeof exports && (exports['Howler'] = _0x5783fc, exports['Howl'] = _0x9748d8), 'undefined' != typeof window ? (window['HowlerGlobal'] = _0x4ae138, window['Howler'] = _0x5783fc, window['Howl'] = _0x9748d8, window['Sound'] = _0x50be48) : 'undefined' != typeof global && (global['HowlerGlobal'] = _0x4ae138, global['Howler'] = _0x5783fc, global['Howl'] = _0x9748d8, global['Sound'] = _0x50be48);
}()), !(function() {
    'use strict';
    HowlerGlobal['prototype']['_pos'] = [0x0, 0x0, 0x0], HowlerGlobal['prototype']['_orientation'] = [0x0, 0x0, -0x1, 0x0, 0x1, 0x0], HowlerGlobal['prototype']['stereo'] = function(_0x2b3afd) {
        var _0x1855cf = this;
        if (!_0x1855cf['ctx'] || !_0x1855cf['ctx']['listener']) return _0x1855cf;
        for (var _0x88d0dc = _0x1855cf['_howls']['length'] - 0x1; _0x88d0dc >= 0x0; _0x88d0dc--) _0x1855cf['_howls'][_0x88d0dc]['stereo'](_0x2b3afd);
        return _0x1855cf;
    }, HowlerGlobal['prototype']['pos'] = function(_0xc4c4f6, _0x1e2e95, _0x2914a3) {
        var _0x2497a0 = this;
        return _0x2497a0['ctx'] && _0x2497a0['ctx']['listener'] ? (_0x1e2e95 = 'number' != typeof _0x1e2e95 ? _0x2497a0['_pos'][0x1] : _0x1e2e95, _0x2914a3 = 'number' != typeof _0x2914a3 ? _0x2497a0['_pos'][0x2] : _0x2914a3, 'number' != typeof _0xc4c4f6 ? _0x2497a0['_pos'] : (_0x2497a0['_pos'] = [_0xc4c4f6, _0x1e2e95, _0x2914a3], _0x2497a0['ctx']['listener']['setPosition'](_0x2497a0['_pos'][0x0], _0x2497a0['_pos'][0x1], _0x2497a0['_pos'][0x2]), _0x2497a0)) : _0x2497a0;
    }, HowlerGlobal['prototype']['orientation'] = function(_0x2e3bed, _0x4389aa, _0x3903ee, _0x54e571, _0x284cc4, _0x201558) {
        var _0x2ecf7f = this;
        if (!_0x2ecf7f['ctx'] || !_0x2ecf7f['ctx']['listener']) return _0x2ecf7f;
        var _0x2e0390 = _0x2ecf7f['_orientation'];
        return _0x4389aa = 'number' != typeof _0x4389aa ? _0x2e0390[0x1] : _0x4389aa, _0x3903ee = 'number' != typeof _0x3903ee ? _0x2e0390[0x2] : _0x3903ee, _0x54e571 = 'number' != typeof _0x54e571 ? _0x2e0390[0x3] : _0x54e571, _0x284cc4 = 'number' != typeof _0x284cc4 ? _0x2e0390[0x4] : _0x284cc4, _0x201558 = 'number' != typeof _0x201558 ? _0x2e0390[0x5] : _0x201558, 'number' != typeof _0x2e3bed ? _0x2e0390 : (_0x2ecf7f['_orientation'] = [_0x2e3bed, _0x4389aa, _0x3903ee, _0x54e571, _0x284cc4, _0x201558], _0x2ecf7f['ctx']['listener']['setOrientation'](_0x2e3bed, _0x4389aa, _0x3903ee, _0x54e571, _0x284cc4, _0x201558), _0x2ecf7f);
    }, Howl['prototype']['init'] = function(_0x1d0f45) {
        return function(_0x3b53c1) {
            var _0x3e596c = this;
            return _0x3e596c['_orientation'] = _0x3b53c1['orientation'] || [0x1, 0x0, 0x0], _0x3e596c['_stereo'] = _0x3b53c1['stereo'] || null, _0x3e596c['_pos'] = _0x3b53c1['pos'] || null, _0x3e596c['_pannerAttr'] = {
                'coneInnerAngle': void 0x0 !== _0x3b53c1['coneInnerAngle'] ? _0x3b53c1['coneInnerAngle'] : 0x168,
                'coneOuterAngle': void 0x0 !== _0x3b53c1['coneOuterAngle'] ? _0x3b53c1['coneOuterAngle'] : 0x168,
                'coneOuterGain': void 0x0 !== _0x3b53c1['coneOuterGain'] ? _0x3b53c1['coneOuterGain'] : 0x0,
                'distanceModel': void 0x0 !== _0x3b53c1['distanceModel'] ? _0x3b53c1['distanceModel'] : 'inverse',
                'maxDistance': void 0x0 !== _0x3b53c1['maxDistance'] ? _0x3b53c1['maxDistance'] : 0x2710,
                'panningModel': void 0x0 !== _0x3b53c1['panningModel'] ? _0x3b53c1['panningModel'] : 'HRTF',
                'refDistance': void 0x0 !== _0x3b53c1['refDistance'] ? _0x3b53c1['refDistance'] : 0x1,
                'rolloffFactor': void 0x0 !== _0x3b53c1['rolloffFactor'] ? _0x3b53c1['rolloffFactor'] : 0x1
            }, _0x3e596c['_onstereo'] = _0x3b53c1['onstereo'] ? [{
                'fn': _0x3b53c1['onstereo']
            }] : [], _0x3e596c['_onpos'] = _0x3b53c1['onpos'] ? [{
                'fn': _0x3b53c1['onpos']
            }] : [], _0x3e596c['_onorientation'] = _0x3b53c1['onorientation'] ? [{
                'fn': _0x3b53c1['onorientation']
            }] : [], _0x1d0f45['call'](this, _0x3b53c1);
        };
    }(Howl['prototype']['init']), Howl['prototype']['stereo'] = function(_0x34f59c, _0x59f1d7) {
        var _0x100d6a = this;
        if (!_0x100d6a['_webAudio']) return _0x100d6a;
        if ('loaded' !== _0x100d6a['_state']) return _0x100d6a['_queue']['push']({
            'event': 'stereo',
            'action': function() {
                _0x100d6a['stereo'](_0x34f59c, _0x59f1d7);
            }
        }), _0x100d6a;
        var _0x1fefa8 = void 0x0 === Howler['ctx']['createStereoPanner'] ? 'spatial' : 'stereo';
        if (void 0x0 === _0x59f1d7) {
            if ('number' != typeof _0x34f59c) return _0x100d6a['_stereo'];
            _0x100d6a['_stereo'] = _0x34f59c, _0x100d6a['_pos'] = [_0x34f59c, 0x0, 0x0];
        }
        for (var _0x67c03b = _0x100d6a['_getSoundIds'](_0x59f1d7), _0xff3636 = 0x0; _0xff3636 < _0x67c03b['length']; _0xff3636++) {
            var _0x1b8f3d = _0x100d6a['_soundById'](_0x67c03b[_0xff3636]);
            if (_0x1b8f3d) {
                if ('number' != typeof _0x34f59c) return _0x1b8f3d['_stereo'];
                _0x1b8f3d['_stereo'] = _0x34f59c, _0x1b8f3d['_pos'] = [_0x34f59c, 0x0, 0x0], _0x1b8f3d['_node'] && (_0x1b8f3d['_pannerAttr']['panningModel'] = 'equalpower', _0x1b8f3d['_panner'] && _0x1b8f3d['_panner']['pan'] || _0x485f07(_0x1b8f3d, _0x1fefa8), 'spatial' === _0x1fefa8 ? _0x1b8f3d['_panner']['setPosition'](_0x34f59c, 0x0, 0x0) : _0x1b8f3d['_panner']['pan']['value'] = _0x34f59c), _0x100d6a['_emit']('stereo', _0x1b8f3d['_id']);
            }
        }
        return _0x100d6a;
    }, Howl['prototype']['pos'] = function(_0x2d9199, _0x10422a, _0x23532b, _0x96cefc) {
        var _0x18cc87 = this;
        if (!_0x18cc87['_webAudio']) return _0x18cc87;
        if ('loaded' !== _0x18cc87['_state']) return _0x18cc87['_queue']['push']({
            'event': 'pos',
            'action': function() {
                _0x18cc87['pos'](_0x2d9199, _0x10422a, _0x23532b, _0x96cefc);
            }
        }), _0x18cc87;
        if (_0x10422a = 'number' != typeof _0x10422a ? 0x0 : _0x10422a, _0x23532b = 'number' != typeof _0x23532b ? -0.5 : _0x23532b, void 0x0 === _0x96cefc) {
            if ('number' != typeof _0x2d9199) return _0x18cc87['_pos'];
            _0x18cc87['_pos'] = [_0x2d9199, _0x10422a, _0x23532b];
        }
        for (var _0xf0115b = _0x18cc87['_getSoundIds'](_0x96cefc), _0x2d8755 = 0x0; _0x2d8755 < _0xf0115b['length']; _0x2d8755++) {
            var _0x503c2e = _0x18cc87['_soundById'](_0xf0115b[_0x2d8755]);
            if (_0x503c2e) {
                if ('number' != typeof _0x2d9199) return _0x503c2e['_pos'];
                _0x503c2e['_pos'] = [_0x2d9199, _0x10422a, _0x23532b], _0x503c2e['_node'] && (_0x503c2e['_panner'] && !_0x503c2e['_panner']['pan'] || _0x485f07(_0x503c2e, 'spatial'), _0x503c2e['_panner']['setPosition'](_0x2d9199, _0x10422a, _0x23532b)), _0x18cc87['_emit']('pos', _0x503c2e['_id']);
            }
        }
        return _0x18cc87;
    }, Howl['prototype']['orientation'] = function(_0x487ad8, _0x4b7db0, _0x31261e, _0xdaced4) {
        var _0x598b04 = this;
        if (!_0x598b04['_webAudio']) return _0x598b04;
        if ('loaded' !== _0x598b04['_state']) return _0x598b04['_queue']['push']({
            'event': 'orientation',
            'action': function() {
                _0x598b04['orientation'](_0x487ad8, _0x4b7db0, _0x31261e, _0xdaced4);
            }
        }), _0x598b04;
        if (_0x4b7db0 = 'number' != typeof _0x4b7db0 ? _0x598b04['_orientation'][0x1] : _0x4b7db0, _0x31261e = 'number' != typeof _0x31261e ? _0x598b04['_orientation'][0x2] : _0x31261e, void 0x0 === _0xdaced4) {
            if ('number' != typeof _0x487ad8) return _0x598b04['_orientation'];
            _0x598b04['_orientation'] = [_0x487ad8, _0x4b7db0, _0x31261e];
        }
        for (var _0x2ecc5f = _0x598b04['_getSoundIds'](_0xdaced4), _0x444c94 = 0x0; _0x444c94 < _0x2ecc5f['length']; _0x444c94++) {
            var _0x219a7c = _0x598b04['_soundById'](_0x2ecc5f[_0x444c94]);
            if (_0x219a7c) {
                if ('number' != typeof _0x487ad8) return _0x219a7c['_orientation'];
                _0x219a7c['_orientation'] = [_0x487ad8, _0x4b7db0, _0x31261e], _0x219a7c['_node'] && (_0x219a7c['_panner'] || (_0x219a7c['_pos'] || (_0x219a7c['_pos'] = _0x598b04['_pos'] || [0x0, 0x0, -0.5]), _0x485f07(_0x219a7c, 'spatial')), _0x219a7c['_panner']['setOrientation'](_0x487ad8, _0x4b7db0, _0x31261e)), _0x598b04['_emit']('orientation', _0x219a7c['_id']);
            }
        }
        return _0x598b04;
    }, Howl['prototype']['pannerAttr'] = function() {
        var _0x3750ff, _0x30862b, _0x5733e5, _0x5ea7c6 = this,
            _0xf194a8 = arguments;
        if (!_0x5ea7c6['_webAudio']) return _0x5ea7c6;
        if (0x0 === _0xf194a8['length']) return _0x5ea7c6['_pannerAttr'];
        if (0x1 === _0xf194a8['length']) {
            if ('object' != typeof _0xf194a8[0x0]) return _0x5733e5 = _0x5ea7c6['_soundById'](parseInt(_0xf194a8[0x0], 0xa)), _0x5733e5 ? _0x5733e5['_pannerAttr'] : _0x5ea7c6['_pannerAttr'];
            _0x3750ff = _0xf194a8[0x0], void 0x0 === _0x30862b && (_0x5ea7c6['_pannerAttr'] = {
                'coneInnerAngle': void 0x0 !== _0x3750ff['coneInnerAngle'] ? _0x3750ff['coneInnerAngle'] : _0x5ea7c6['_coneInnerAngle'],
                'coneOuterAngle': void 0x0 !== _0x3750ff['coneOuterAngle'] ? _0x3750ff['coneOuterAngle'] : _0x5ea7c6['_coneOuterAngle'],
                'coneOuterGain': void 0x0 !== _0x3750ff['coneOuterGain'] ? _0x3750ff['coneOuterGain'] : _0x5ea7c6['_coneOuterGain'],
                'distanceModel': void 0x0 !== _0x3750ff['distanceModel'] ? _0x3750ff['distanceModel'] : _0x5ea7c6['_distanceModel'],
                'maxDistance': void 0x0 !== _0x3750ff['maxDistance'] ? _0x3750ff['maxDistance'] : _0x5ea7c6['_maxDistance'],
                'panningModel': void 0x0 !== _0x3750ff['panningModel'] ? _0x3750ff['panningModel'] : _0x5ea7c6['_panningModel'],
                'refDistance': void 0x0 !== _0x3750ff['refDistance'] ? _0x3750ff['refDistance'] : _0x5ea7c6['_refDistance'],
                'rolloffFactor': void 0x0 !== _0x3750ff['rolloffFactor'] ? _0x3750ff['rolloffFactor'] : _0x5ea7c6['_rolloffFactor']
            });
        } else 0x2 === _0xf194a8['length'] && (_0x3750ff = _0xf194a8[0x0], _0x30862b = parseInt(_0xf194a8[0x1], 0xa));
        for (var _0xb007a5 = _0x5ea7c6['_getSoundIds'](_0x30862b), _0xef9ca9 = 0x0; _0xef9ca9 < _0xb007a5['length']; _0xef9ca9++)
            if (_0x5733e5 = _0x5ea7c6['_soundById'](_0xb007a5[_0xef9ca9])) {
                var _0x524f1f = _0x5733e5['_pannerAttr'];
                _0x524f1f = {
                    'coneInnerAngle': void 0x0 !== _0x3750ff['coneInnerAngle'] ? _0x3750ff['coneInnerAngle'] : _0x524f1f['coneInnerAngle'],
                    'coneOuterAngle': void 0x0 !== _0x3750ff['coneOuterAngle'] ? _0x3750ff['coneOuterAngle'] : _0x524f1f['coneOuterAngle'],
                    'coneOuterGain': void 0x0 !== _0x3750ff['coneOuterGain'] ? _0x3750ff['coneOuterGain'] : _0x524f1f['coneOuterGain'],
                    'distanceModel': void 0x0 !== _0x3750ff['distanceModel'] ? _0x3750ff['distanceModel'] : _0x524f1f['distanceModel'],
                    'maxDistance': void 0x0 !== _0x3750ff['maxDistance'] ? _0x3750ff['maxDistance'] : _0x524f1f['maxDistance'],
                    'panningModel': void 0x0 !== _0x3750ff['panningModel'] ? _0x3750ff['panningModel'] : _0x524f1f['panningModel'],
                    'refDistance': void 0x0 !== _0x3750ff['refDistance'] ? _0x3750ff['refDistance'] : _0x524f1f['refDistance'],
                    'rolloffFactor': void 0x0 !== _0x3750ff['rolloffFactor'] ? _0x3750ff['rolloffFactor'] : _0x524f1f['rolloffFactor']
                };
                var _0x112e92 = _0x5733e5['_panner'];
                _0x112e92 ? (_0x112e92['coneInnerAngle'] = _0x524f1f['coneInnerAngle'], _0x112e92['coneOuterAngle'] = _0x524f1f['coneOuterAngle'], _0x112e92['coneOuterGain'] = _0x524f1f['coneOuterGain'], _0x112e92['distanceModel'] = _0x524f1f['distanceModel'], _0x112e92['maxDistance'] = _0x524f1f['maxDistance'], _0x112e92['panningModel'] = _0x524f1f['panningModel'], _0x112e92['refDistance'] = _0x524f1f['refDistance'], _0x112e92['rolloffFactor'] = _0x524f1f['rolloffFactor']) : (_0x5733e5['_pos'] || (_0x5733e5['_pos'] = _0x5ea7c6['_pos'] || [0x0, 0x0, -0.5]), _0x485f07(_0x5733e5, 'spatial'));
            } return _0x5ea7c6;
    }, Sound['prototype']['init'] = function(_0x466a2e) {
        return function() {
            var _0x30cf9d = this,
                _0x47ccf8 = _0x30cf9d['_parent'];
            _0x30cf9d['_orientation'] = _0x47ccf8['_orientation'], _0x30cf9d['_stereo'] = _0x47ccf8['_stereo'], _0x30cf9d['_pos'] = _0x47ccf8['_pos'], _0x30cf9d['_pannerAttr'] = _0x47ccf8['_pannerAttr'], _0x466a2e['call'](this), _0x30cf9d['_stereo'] ? _0x47ccf8['stereo'](_0x30cf9d['_stereo']) : _0x30cf9d['_pos'] && _0x47ccf8['pos'](_0x30cf9d['_pos'][0x0], _0x30cf9d['_pos'][0x1], _0x30cf9d['_pos'][0x2], _0x30cf9d['_id']);
        };
    }(Sound['prototype']['init']), Sound['prototype']['reset'] = function(_0x45981a) {
        return function() {
            var _0x52dd90 = this,
                _0x12f295 = _0x52dd90['_parent'];
            return _0x52dd90['_orientation'] = _0x12f295['_orientation'], _0x52dd90['_pos'] = _0x12f295['_pos'], _0x52dd90['_pannerAttr'] = _0x12f295['_pannerAttr'], _0x45981a['call'](this);
        };
    }(Sound['prototype']['reset']);
    var _0x485f07 = function(_0x5ee733, _0x45d2bb) {
        _0x45d2bb = _0x45d2bb || 'spatial', 'spatial' === _0x45d2bb ? (_0x5ee733['_panner'] = Howler['ctx']['createPanner'](), _0x5ee733['_panner']['coneInnerAngle'] = _0x5ee733['_pannerAttr']['coneInnerAngle'], _0x5ee733['_panner']['coneOuterAngle'] = _0x5ee733['_pannerAttr']['coneOuterAngle'], _0x5ee733['_panner']['coneOuterGain'] = _0x5ee733['_pannerAttr']['coneOuterGain'], _0x5ee733['_panner']['distanceModel'] = _0x5ee733['_pannerAttr']['distanceModel'], _0x5ee733['_panner']['maxDistance'] = _0x5ee733['_pannerAttr']['maxDistance'], _0x5ee733['_panner']['panningModel'] = _0x5ee733['_pannerAttr']['panningModel'], _0x5ee733['_panner']['refDistance'] = _0x5ee733['_pannerAttr']['refDistance'], _0x5ee733['_panner']['rolloffFactor'] = _0x5ee733['_pannerAttr']['rolloffFactor'], _0x5ee733['_panner']['setPosition'](_0x5ee733['_pos'][0x0], _0x5ee733['_pos'][0x1], _0x5ee733['_pos'][0x2]), _0x5ee733['_panner']['setOrientation'](_0x5ee733['_orientation'][0x0], _0x5ee733['_orientation'][0x1], _0x5ee733['_orientation'][0x2])) : (_0x5ee733['_panner'] = Howler['ctx']['createStereoPanner'](), _0x5ee733['_panner']['pan']['value'] = _0x5ee733['_stereo']), _0x5ee733['_panner']['connect'](_0x5ee733['_node']), _0x5ee733['_paused'] || _0x5ee733['_parent']['pause'](_0x5ee733['_id'], !0x0)['play'](_0x5ee733['_id']);
    };
}());
var VOLUME = {
        'AMB': 0x1,
        'FX': 0x1
    },
    CONST_AUDIO = {
        'SEA_DELAY': 0xc,
        'SEA_FADE': 0x1388,
        'FOREST_DELAY': 0xc,
        'FOREST_FADE': 0x1388,
        'SNOW_DELAY': 0xc,
        'SNOW_FADE': 0x1388,
        'TRANSITION': 0xbb8,
        'DISABLE_EFFECT': 0x704e0,
        'PLAYERS': 0x8,
        'ITEMS': 0x6,
        'HAND': 0x1,
        'MISC': 0x2,
        'SHOVEL': 0x3
    },
    SOUND = [];
SOUND[-0x1] = CONST_AUDIO['HAND'], SOUND[INV['BOOK']] = CONST_AUDIO['HAND'], SOUND[INV['WATERING_CAN_FULL']] = CONST_AUDIO['HAND'], SOUND[INV['WRENCH']] = CONST_AUDIO['MISC'], SOUND[INV['PICK_WOOD']] = CONST_AUDIO['MISC'], SOUND[INV['PICK']] = CONST_AUDIO['MISC'], SOUND[INV['PICK_GOLD']] = CONST_AUDIO['MISC'], SOUND[INV['PICK_DIAMOND']] = CONST_AUDIO['MISC'], SOUND[INV['PICK_AMETHYST']] = CONST_AUDIO['MISC'], SOUND[INV['PICK_REIDITE']] = CONST_AUDIO['MISC'], SOUND[INV['PIRATE_SWORD']] = CONST_AUDIO['MISC'], SOUND[INV['SWORD_WOOD']] = CONST_AUDIO['MISC'], SOUND[INV['SWORD']] = CONST_AUDIO['MISC'], SOUND[INV['LAVA_SWORD']] = CONST_AUDIO['MISC'], SOUND[INV['LAVA_SPEAR']] = CONST_AUDIO['MISC'], SOUND[INV['SWORD_GOLD']] = CONST_AUDIO['MISC'], SOUND[INV['SWORD_DIAMOND']] = CONST_AUDIO['MISC'], SOUND[INV['SWORD_AMETHYST']] = CONST_AUDIO['MISC'], SOUND[INV['SWORD_REIDITE']] = CONST_AUDIO['MISC'], SOUND[INV['CRAB_SPEAR']] = CONST_AUDIO['MISC'], SOUND[INV['WOOD_SPEAR']] = CONST_AUDIO['MISC'], SOUND[INV['SPEAR']] = CONST_AUDIO['MISC'], SOUND[INV['GOLD_SPEAR']] = CONST_AUDIO['MISC'], SOUND[INV['DIAMOND_SPEAR']] = CONST_AUDIO['MISC'], SOUND[INV['DRAGON_SPEAR']] = CONST_AUDIO['MISC'], SOUND[INV['AMETHYST_SPEAR']] = CONST_AUDIO['MISC'], SOUND[INV['AMETHYST_REIDITE']] = CONST_AUDIO['MISC'], SOUND[INV['HAMMER']] = CONST_AUDIO['MISC'], SOUND[INV['HAMMER_GOLD']] = CONST_AUDIO['MISC'], SOUND[INV['HAMMER_DIAMOND']] = CONST_AUDIO['MISC'], SOUND[INV['HAMMER_AMETHYST']] = CONST_AUDIO['MISC'], SOUND[INV['HAMMER_REIDITE']] = CONST_AUDIO['MISC'], SOUND[INV['SUPER_HAMMER']] = CONST_AUDIO['MISC'], SOUND[INV['DRAGON_SWORD']] = CONST_AUDIO['MISC'], SOUND[INV['PITCHFORK2']] = CONST_AUDIO['MISC'], SOUND[INV['PITCHFORK']] = CONST_AUDIO['MISC'], SOUND[INV['SHOVEL']] = CONST_AUDIO['SHOVEL'], SOUND[INV['SHOVEL_GOLD']] = CONST_AUDIO['SHOVEL'], SOUND[INV['SHOVEL_DIAMOND']] = CONST_AUDIO['SHOVEL'], SOUND[INV['SHOVEL_AMETHYST']] = CONST_AUDIO['SHOVEL'], SOUND_NATURE = [], SOUND_NATURE[0x0] = 0x0, SOUND_NATURE[0x1] = 0x1, SOUND_NATURE[0x2] = 0x1, SOUND_NATURE[0x3] = 0x1, SOUND_NATURE[0x4] = 0x0, SOUND_NATURE[0x5] = 0x0, SOUND_NATURE[0x6] = 0x0, SOUND_NATURE[0x7] = 0x0, SOUND_NATURE[0x8] = 0x0, SOUND_NATURE[0x9] = 0x0, SOUND_NATURE[0xa] = 0x1, SOUND_NATURE[0xb] = 0x1, SOUND_NATURE[0xc] = 0x1, SOUND_NATURE[0xd] = 0x1, SOUND_NATURE[0xe] = 0x1, SOUND_NATURE[0xf] = 0x1, SOUND_NATURE[0x10] = 0x0, SOUND_NATURE[0x11] = 0x0, SOUND_NATURE[0x12] = 0x0, SOUND_NATURE[0x13] = 0x0, SOUND_NATURE[0x14] = 0x0, SOUND_NATURE[0x15] = 0x0, SOUND_NATURE[0x16] = 0x0, SOUND_NATURE[0x17] = 0x1, SOUND_NATURE[0x18] = 0x1, SOUND_NATURE[0x19] = 0x1, SOUND_NATURE[0x1a] = 0x1, SOUND_NATURE[0x1b] = 0x1, SOUND_NATURE[0x1c] = 0x1, SOUND_NATURE[0x1d] = 0x1, SOUND_NATURE[0x1e] = 0x1, SOUND_NATURE[0x1f] = 0x1, SOUND_NATURE[0x20] = 0x1, SOUND_NATURE[0x21] = 0x1, SOUND_NATURE[0x22] = 0x1, SOUND_NATURE[0x23] = 0x1, SOUND_NATURE[0x24] = 0x1, SOUND_NATURE[0x25] = 0x1, SOUND_NATURE[0x26] = 0x1, SOUND_NATURE[0x28] = 0x0, SOUND_NATURE[0x29] = 0x0, SOUND_NATURE[0x2a] = 0x0, SOUND_NATURE[0x32] = 0x1, SOUND_NATURE[0x33] = 0x1, SOUND_NATURE[0x34] = 0x1, SOUND_NATURE[0x37] = 0x0, SOUND_NATURE[0x38] = 0x0, SOUND_NATURE[0x39] = 0x0, SOUND_NATURE[0x3a] = 0x0, SOUND_BUILD = [], SOUND_BUILD[ITEMS['PLANT']] = 0x0, SOUND_BUILD[ITEMS['FIRE']] = 0x0, SOUND_BUILD[ITEMS['TOTEM']] = 0x0, SOUND_BUILD[ITEMS['BIG_FIRE']] = 0x0, SOUND_BUILD[ITEMS['SEED']] = -0x1, SOUND_BUILD[ITEMS['WHEAT_SEED']] = -0x1, SOUND_BUILD[ITEMS['WORKBENCH']] = 0x0, SOUND_BUILD[ITEMS['WALL']] = 0x0, SOUND_BUILD[ITEMS['BRIDGE']] = 0x0, SOUND_BUILD[ITEMS['PLOT']] = 0x0, SOUND_BUILD[ITEMS['WINDMILL']] = 0x1, SOUND_BUILD[ITEMS['WELL']] = 0x1, SOUND_BUILD[ITEMS['STONE_WALL']] = 0x1, SOUND_BUILD[ITEMS['GOLD_WALL']] = 0x1, SOUND_BUILD[ITEMS['DIAMOND_WALL']] = 0x1, SOUND_BUILD[ITEMS['AMETHYST_WALL']] = 0x1, SOUND_BUILD[ITEMS['REIDITE_WALL']] = 0x1, SOUND_BUILD[ITEMS['SPIKE']] = 0x0, SOUND_BUILD[ITEMS['STONE_SPIKE']] = 0x1, SOUND_BUILD[ITEMS['GOLD_SPIKE']] = 0x1, SOUND_BUILD[ITEMS['DIAMOND_SPIKE']] = 0x1, SOUND_BUILD[ITEMS['AMETHYST_SPIKE']] = 0x1, SOUND_BUILD[ITEMS['REIDITE_SPIKE']] = 0x1, SOUND_BUILD[ITEMS['WOOD_DOOR']] = 0x0, SOUND_BUILD[ITEMS['STONE_DOOR']] = 0x1, SOUND_BUILD[ITEMS['GOLD_DOOR']] = 0x1, SOUND_BUILD[ITEMS['DIAMOND_DOOR']] = 0x1, SOUND_BUILD[ITEMS['AMETHYST_DOOR']] = 0x1, SOUND_BUILD[ITEMS['REIDITE_DOOR']] = 0x1, SOUND_BUILD[ITEMS['WOOD_DOOR_SPIKE']] = 0x0, SOUND_BUILD[ITEMS['STONE_DOOR_SPIKE']] = 0x1, SOUND_BUILD[ITEMS['GOLD_DOOR_SPIKE']] = 0x1, SOUND_BUILD[ITEMS['DIAMOND_DOOR_SPIKE']] = 0x1, SOUND_BUILD[ITEMS['AMETHYST_DOOR_SPIKE']] = 0x1, SOUND_BUILD[ITEMS['REIDITE_DOOR_SPIKE']] = 0x1, SOUND_BUILD[ITEMS['FURNACE']] = 0x1, SOUND_BUILD[ITEMS['RESURRECTION']] = 0x1, SOUND_BUILD[ITEMS['EMERALD_MACHINE']] = 0x1, SOUND_BUILD[ITEMS['CHEST']] = 0x0, SOUND_BUILD[ITEMS['BREAD_OVEN']] = 0x1;
var AUDIO = {
        'DIG': {
            'sound': null,
            'path': ['audio/ambience.mp3'],
            'sprite': {
                'd0': [0x15fe6, 0x12c, ![]],
                'd1': [0x16117, 0x12c, ![]],
                'd2': [0x1623c, 0x12c, ![]]
            },
            'sample': {
                'd0': CONST_AUDIO['PLAYERS'],
                'd1': CONST_AUDIO['PLAYERS'],
                'd2': CONST_AUDIO['PLAYERS']
            }
        },
        'PUNCH': {
            'sound': null,
            'path': ['audio/ambience.mp3'],
            'sprite': {
                'p0': [0x15cd7, 0x12c, ![]],
                'p1': [0x15dcd, 0x12c, ![]],
                'p2': [0x15ed7, 0x12c, ![]]
            },
            'sample': {
                'p0': CONST_AUDIO['PLAYERS'],
                'p1': CONST_AUDIO['PLAYERS'],
                'p2': CONST_AUDIO['PLAYERS']
            }
        },
        'WEAPON': {
            'sound': null,
            'path': ['audio/ambience.mp3'],
            'sprite': {
                'w0': [0x15883, 0x12c, ![]],
                'w1': [0x15999, 0x12c, ![]],
                'w2': [0x15aaf, 0x12c, ![]],
                'w3': [0x15bc1, 0x12c, ![]]
            },
            'sample': {
                'w0': CONST_AUDIO['PLAYERS'],
                'w1': CONST_AUDIO['PLAYERS'],
                'w2': CONST_AUDIO['PLAYERS'],
                'w3': CONST_AUDIO['PLAYERS']
            }
        },
        'AMBIENCE': {
            'sound': null,
            'path': ['audio/ambience.mp3'],
            'sprite': {
                'cook': [0x64, 0xaf0, !![]],
                'seaday': [0xc1c, 0x2260, !![]],
                'seanight': [0x4daa, 0x206d, !![]],
                'forestday': [0x7f5c, 0x5582, !![]],
                'forestnight': [0xd4fc, 0x2c81, !![]],
                'snowday': [0x10591, 0x52e7, !![]],
                'snownight': [0x10591, 0x52e7, !![]],
                'fire': [0x3044, 0x1b35, !![]],
                'swim': [0x6edc, 0x705, !![]],
                'sand': [0x7762, 0x28f, !![]],
                'walk': [0x7baa, 0x32d, !![]],
                'snow': [0x101de, 0x39d, !![]],
                'hwood': [0x1638e, 0x190, ![]],
                'hand': [0x16527, 0x190, ![]],
                'hstone': [0x16859, 0x1f4, ![]]
            },
            'sample': {
                'cook': 0x1,
                'seaday': 0x1,
                'seanight': 0x1,
                'forestday': 0x1,
                'forestnight': 0x1,
                'snowday': 0x1,
                'snownight': 0x1,
                'fire': CONST_AUDIO['PLAYERS'],
                'swim': CONST_AUDIO['PLAYERS'],
                'sand': CONST_AUDIO['PLAYERS'],
                'walk': CONST_AUDIO['PLAYERS'],
                'snow': CONST_AUDIO['PLAYERS'],
                'hwood': CONST_AUDIO['ITEMS'],
                'hand': CONST_AUDIO['ITEMS'],
                'hstone': CONST_AUDIO['ITEMS']
            }
        }
    },
    SoundArea = function(_0x4f2ac6, _0x3ce17d, _0x533860, _0x48beb1, _0x2096be, _0x708bd2, _0x396b0c, _0x15ed34, _0x529fd0, _0x4f462c, _0x4596e1) {
        this['r'] = 0x1, this['delay'] = _0x4f2ac6, this['max_delay'] = _0x4f2ac6, this['night'] = _0x3ce17d, this['day'] = _0x533860, this['fade'] = _0x48beb1, this['r_base'] = _0x2096be, this['r_seed'] = _0x708bd2, this['player'] = _0x396b0c, this['transition_delay'] = _0x15ed34, this['source'] = _0x529fd0, this['source']['lx'] = _0x529fd0['x'] + _0x529fd0['w'], this['source']['by'] = _0x529fd0['y'] + _0x529fd0['h'], this['outside_box'] = _0x4f462c, this['inside_box'] = _0x4596e1, this['inside'] = 0x0, this['hackish'] = {
            'd': 0x5,
            'm': 0x5
        }, this['effect'] = function() {
            this['delay'] -= delta;
            if (this['delay'] < 0x0) {
                this['delay'] = this['max_delay'];
                var _0x354667 = AUDIO['AMBIENCE']['sound']['playing'](this['night']),
                    _0x2927fe = AUDIO['AMBIENCE']['sound']['playing'](this['day']);
                if (_0x354667 && !_0x2927fe) {
                    var _0x20f526 = this['player']['volume'](this['night']) * VOLUME['AMB'],
                        _0x2f9e30 = (Math['random']() * this['r_seed'] + this['r_base']) * VOLUME['AMB'];
                    this['player']['fade'](_0x20f526, _0x2f9e30, this['fade'], this['night']);
                } else {
                    if (!_0x354667 && _0x2927fe) {
                        var _0x20f526 = this['player']['volume'](this['day']) * VOLUME['AMB'],
                            _0x2f9e30 = (Math['random']() * this['r_seed'] + this['r_base']) * VOLUME['AMB'];
                        this['player']['fade'](_0x20f526, _0x2f9e30, this['fade'], this['day']);
                    }
                }
            }
        }, this['transition'] = function() {
            this['delay'] = this['max_delay'], this['hackish']['d'] = this['hackish']['m'];
            if (world['time']) {
                this['player']['fade'](0x0, this['r_base'] * VOLUME['AMB'], this['transition_delay'], this['night']), this['player']['play'](this['night']);
                if (this['player']['playing'](this['day'])) {
                    var _0x20b2da = this['player']['volume'](this['day']) * VOLUME['AMB'];
                    this['player']['fade'](_0x20b2da, 0x0, this['transition_delay'], this['day']);
                }
            } else {
                this['player']['fade'](0x0, this['r_base'] * VOLUME['AMB'], this['transition_delay'], this['day']), this['player']['play'](this['day']);
                if (this['player']['playing'](this['night'])) {
                    var _0x20b2da = this['player']['volume'](this['night']) * VOLUME['AMB'];
                    this['player']['fade'](_0x20b2da, 0x0, this['transition_delay'], this['night']);
                }
            }
        }, this['check'] = function(_0x4abf21) {
            if (this['inside']) {
                if (!Utils['inside_box'](_0x4abf21, this['outside_box'])) {
                    this['inside'] = 0x0;
                    if (this['player']['playing'](this['night'])) {
                        var _0x492a25 = this['player']['volume'](this['night']) * VOLUME['AMB'];
                        this['player']['fade'](_0x492a25, 0x0, this['transition_delay'], this['night']);
                    }
                    if (this['player']['playing'](this['day'])) {
                        var _0x492a25 = this['player']['volume'](this['day']) * VOLUME['AMB'];
                        this['player']['fade'](_0x492a25, 0x0, this['transition_delay'], this['day']);
                    }
                } else {
                    if (!audio['transition'] && world['clock']['now'] < CONST_AUDIO['DISABLE_EFFECT']) {
                        if (world['time']) {
                            if (!this['player']['playing'](this['night'])) {
                                this['hackish']['d'] -= delta;
                                if (this['hackish']['d'] < 0x0) this['transition']();
                            }
                        } else {
                            if (!this['player']['playing'](this['day'])) {
                                this['hackish']['d'] -= delta;
                                if (this['hackish']['d'] < 0x0) this['transition']();
                            }
                        }
                    }
                }
            } else {
                if (Utils['inside_box'](_0x4abf21, this['inside_box'])) {
                    this['inside'] = 0x1;
                    if (!audio['transition'] && world['clock']['now'] < CONST_AUDIO['DISABLE_EFFECT']) this['transition']();
                }
            }
        }, this['update'] = function(_0x6b80ef, _0x4d297e) {
            var _0x26cbf7, _0x247aeb;
            if (_0x6b80ef['x'] < this['source']['x']) _0x26cbf7 = audio['get_x'](this['source']['x']);
            else {
                if (_0x6b80ef['x'] > this['source']['lx']) _0x26cbf7 = audio['get_x'](this['source']['lx']);
                else _0x26cbf7 = _0x4d297e['x'];
            }
            if (_0x6b80ef['y'] < this['source']['y']) _0x247aeb = audio['get_y'](this['source']['y']);
            else {
                if (_0x6b80ef['y'] > this['source']['by']) _0x247aeb = audio['get_y'](this['source']['by']);
                else _0x247aeb = _0x4d297e['y'];
            }
            this['player']['pos'](_0x26cbf7, _0x247aeb, -0.5, this['night']), this['player']['pos'](_0x26cbf7, _0x247aeb, -0.5, this['day']);
        };
    };
SOUND_PLAYER = {
    'DELAY_SWIM': 0.4,
    'DELAY_SAND': 0.2,
    'DELAY_WALK': 0.2,
    'DELAY_SNOW': 0.2,
    'FADE_SWIM': 0x12c,
    'FADE_SAND': 0x64,
    'FADE_WALK': 0x64,
    'FADE_SNOW': 0x64,
    'WALK': 0x0,
    'SWIM': 0x1,
    'SAND': 0x2,
    'SNOW': 0x3,
    'FACTOR': 0x4,
    'FACTOR2': 0x2
};
var SoundPlayerEffect = function(_0x5e8a0d, _0x21dd0b, _0xff65f3) {
        this['mom'] = _0x5e8a0d, this['c'] = 0x0, this['player'] = _0x21dd0b, this['ids'] = _0xff65f3, this['max'] = _0xff65f3['length'], this['play'] = function() {
            this['c'] = (this['c'] + 0x1) % this['max'];
            var _0x4aa9ec = this['ids'][this['c']];
            this['mom']['update_pos'](this['player'], _0x4aa9ec), this['player']['play'](_0x4aa9ec);
        };
    },
    SoundPlayer = function(_0x24b5ba) {
        this['free'] = 0x1, this['uid'] = 0x0, this['mode'] = -0x1, this['swim'] = audio['sample']['swim'][_0x24b5ba], this['sand'] = audio['sample']['sand'][_0x24b5ba], this['walk'] = audio['sample']['walk'][_0x24b5ba], this['snow'] = audio['sample']['snow'][_0x24b5ba], this['punch'] = new SoundPlayerEffect(this, AUDIO['PUNCH']['sound'], audio['samples']['punch'][_0x24b5ba]), this['weapon'] = new SoundPlayerEffect(this, AUDIO['WEAPON']['sound'], audio['samples']['weapon'][_0x24b5ba]), this['dig'] = new SoundPlayerEffect(this, AUDIO['DIG']['sound'], audio['samples']['dig'][_0x24b5ba]), this['sid'] = _0x24b5ba, this['x'] = 0x0, this['y'] = 0x0, this['move'] = 0x0, this['delay'] = SOUND_PLAYER['DELAY'], this['pos'] = {
            'x': 0x0,
            'y': 0x0
        }, this['ambience'] = AUDIO['AMBIENCE']['sound'], this['swing'] = function(_0x4dbf76) {
            if (_0x4dbf76 === CONST_AUDIO['HAND']) this['punch']['play']();
            else {
                if (_0x4dbf76 === CONST_AUDIO['MISC']) this['weapon']['play']();
                else {
                    if (_0x4dbf76 === CONST_AUDIO['SHOVEL']) this['dig']['play']();
                }
            }
        }, this['detect_position'] = function(_0xd14bed) {
            if (_0xd14bed['dist_sand'] > 0x0) return SOUND_PLAYER['SAND'];
            else {
                if (_0xd14bed['dist_water'] > 0x0) return SOUND_PLAYER['SWIM'];
                else {
                    if (_0xd14bed['dist_winter'] > 0x0 || _0xd14bed['dist_lava'] > 0x0) return SOUND_PLAYER['SNOW'];
                    else return SOUND_PLAYER['WALK'];
                }
            }
        }, this['init'] = function(_0x1e60b8) {
            this['free'] = 0x0, this['uid'] = _0x1e60b8;
            var _0x523931 = world['fast_units'][_0x1e60b8];
            _0x523931['sid'] = this['sid'], this['mode'] = this['detect_position'](_0x523931), this['pos']['x'] = _0x523931['x'], this['pos']['y'] = _0x523931['y'];
        }, this['clean'] = function() {
            this['free'] = 0x1, this['mode'] = -0x1, this['ambience']['stop'](this['swim']), this['ambience']['stop'](this['sand']), this['ambience']['stop'](this['walk']), this['ambience']['stop'](this['snow']);
        }, this['fade'] = function(_0x177263, _0x570479) {
            var _0x198661 = this['ambience']['volume'](_0x177263) * VOLUME['FX'];
            this['ambience']['fade'](_0x198661, 0x0, _0x570479, _0x177263);
        }, this['update_pos'] = function(_0x35e8b3, _0xc09d71) {
            this['move'] && this['sid'] && _0x35e8b3['pos'](this['x'], this['y'], -0.5, _0xc09d71);
        }, this['effect'] = function(_0x3bd8d7, _0x109de8, _0x2bcc8f, _0x5049a1, _0xbd0af5, _0x369a41, _0x5ab6f7) {
            this['delay'] = _0x369a41;
            if (_0x5049a1 && this['mode'] === _0xbd0af5) {
                var _0x415746 = this['ambience']['volume'](_0x3bd8d7) * VOLUME['FX'];
                if (this['move']) {
                    var _0x262f80 = (Math['random']() * _0x2bcc8f + _0x109de8) * VOLUME['FX'];
                    this['ambience']['fade'](_0x415746, _0x262f80, _0x5ab6f7, _0x3bd8d7);
                } else this['ambience']['fade'](_0x415746, 0x0, _0x5ab6f7, _0x3bd8d7);
            } else {
                if (this['mode'] != _0xbd0af5 && this['move']) this['ambience']['fade'](0x0, (_0x109de8 + _0x2bcc8f) * VOLUME['FX'], _0x5ab6f7, _0x3bd8d7);
                else {
                    if (this['move']) {
                        var _0x415746 = this['ambience']['volume'](_0x3bd8d7) * VOLUME['FX'],
                            _0x262f80 = (Math['random']() * _0x2bcc8f + _0x109de8) * VOLUME['FX'];
                        this['ambience']['fade'](_0x415746, _0x262f80, _0x5ab6f7, _0x3bd8d7);
                    }
                }
            }
            this['update_pos'](this['ambience'], _0x3bd8d7), this['ambience']['play'](_0x3bd8d7);
        }, this['update'] = function() {
            var _0x20316a = world['fast_units'][this['uid']];
            this['delay'] -= delta;
            if (this['delay'] > 0x0) return;
            var _0x339a45 = 0x0;
            _0x20316a['x'] != this['pos']['x'] || _0x20316a['y'] != this['pos']['y'] ? (!this['move'] && (_0x339a45 = 0x1, this['move'] = 0x1), this['x'] = audio['get_x_ext'](_0x20316a['x'], SOUND_PLAYER['FACTOR2']), this['y'] = audio['get_y_ext'](_0x20316a['y'], SOUND_PLAYER['FACTOR2'])) : this['move'] && (_0x339a45 = 0x1, this['move'] = 0x0);
            this['pos']['x'] = _0x20316a['x'], this['pos']['y'] = _0x20316a['y'], mode = this['detect_position'](_0x20316a);
            if (mode != this['mode']) {
                if (this['mode'] === SOUND_PLAYER['SWIM']) this['fade'](this['swim'], SOUND_PLAYER['FADE_SWIM']);
                else {
                    if (this['mode'] === SOUND_PLAYER['SAND']) this['fade'](this['sand'], SOUND_PLAYER['FADE_SAND']);
                    else {
                        if (this['mode'] === SOUND_PLAYER['WALK']) this['fade'](this['walk'], SOUND_PLAYER['FADE_WALK']);
                        else {
                            if (this['mode'] === SOUND_PLAYER['SNOW']) this['fade'](this['snow'], SOUND_PLAYER['FADE_SNOW']);
                        }
                    }
                }
            }
            if (mode === SOUND_PLAYER['SWIM']) this['effect'](this['swim'], 0.08, 0.3, _0x339a45, mode, SOUND_PLAYER['DELAY_SWIM'], SOUND_PLAYER['FADE_SWIM']);
            else {
                if (mode === SOUND_PLAYER['SAND']) this['effect'](this['sand'], 0.2, 0.3, _0x339a45, mode, SOUND_PLAYER['DELAY_SAND'], SOUND_PLAYER['FADE_SAND']);
                else {
                    if (mode === SOUND_PLAYER['WALK']) this['effect'](this['walk'], 0.3, 0.6, _0x339a45, mode, SOUND_PLAYER['DELAY_WALK'], SOUND_PLAYER['FADE_WALK']);
                    else {
                        if (mode === SOUND_PLAYER['SNOW']) this['effect'](this['snow'], 0.1, 0.25, _0x339a45, mode, SOUND_PLAYER['DELAY_SNOW'], SOUND_PLAYER['FADE_SNOW']);
                    }
                }
            }
            this['mode'] = mode;
        }, this['check'] = function() {
            var _0x4373c = world['fast_units'][this['uid']];
            if (!_0x4373c) return this['clean'](_0x4373c), ![];
            return !![];
        };
    },
    MyAudio = function() {
        this['run'] = 0x0, this['loaded'] = 0x0, this['transition'] = 0x0, this['get_x'] = function(_0x7cd502) {
            return 0x64 * (_0x7cd502 / world['w']);
        }, this['get_y'] = function(_0x5ce4b8) {
            return 0x64 * (_0x5ce4b8 / world['h']);
        }, this['get_x_ext'] = function(_0x970c60, _0x2389e1) {
            return _0x970c60 = this['get_x'](_0x970c60) - this['ltr']['x'], this['ltr']['x'] + _0x2389e1 * _0x970c60;
        }, this['get_y_ext'] = function(_0x50a766, _0x483b76) {
            return _0x50a766 = Math['abs'](this['get_y'](_0x50a766) - this['ltr']['y']), this['ltr']['y'] + _0x483b76 * _0x50a766;
        }, this['sample'] = {}, this['samples'] = {}, this['player'] = {}, this['play_sample'] = function(_0x5d79a3, _0x3a3030, _0x280c9e, _0x8ea30f) {
            for (var _0x48d374 = 0x0; _0x48d374 < _0x3a3030['length']; _0x48d374++) {
                var _0x4ec3c7 = _0x3a3030[_0x48d374];
                if (_0x5d79a3['playing'](_0x4ec3c7)) continue;
                return _0x5d79a3['pos'](_0x280c9e, _0x8ea30f, -0.5, _0x4ec3c7), _0x5d79a3['play'](_0x4ec3c7), !![];
            }
            return ![];
        }, this['hit'] = function(_0x3f0f2d, _0x1b2200, _0x33a1b7, _0x48bfa5) {
            _0x33a1b7 = this['get_x_ext'](_0x33a1b7, SOUND_PLAYER['FACTOR']), _0x48bfa5 = this['get_y_ext'](_0x48bfa5, SOUND_PLAYER['FACTOR']), console['log']('HIT', _0x3f0f2d, _0x1b2200, _0x33a1b7, _0x48bfa5, SOUND_PLAYER['FACTOR']);
            if (!_0x3f0f2d) this['play_sample'](this['player']['hand'], this['sample']['hand'], _0x33a1b7, _0x48bfa5);
            else {
                if (_0x1b2200 === 0x1) this['play_sample'](this['player']['hstone'], this['sample']['hstone'], _0x33a1b7, _0x48bfa5);
                else {
                    if (_0x1b2200 === 0x0) this['play_sample'](this['player']['hwood'], this['sample']['hwood'], _0x33a1b7, _0x48bfa5);
                }
            }
        }, this['ltr'] = {
            'x': 0x0,
            'y': 0x0
        }, this['oldp'] = {
            'x': 0x0,
            'y': 0x0
        }, this['area'] = {}, this['players'] = [], this['ambience'] = function(_0x5eb9d0, _0x2ead33) {
            for (var _0x4fb363 in this['area']) {
                var _0x33c988 = this['area'][_0x4fb363];
                _0x33c988['check'](_0x5eb9d0);
                if (_0x33c988['inside']) {
                    if (world['clock']['now'] < CONST_AUDIO['DISABLE_EFFECT']) _0x33c988['effect']();
                    if (_0x2ead33) _0x33c988['update'](_0x5eb9d0, this['ltr']);
                    if (this['transition']) _0x33c988['transition']();
                }
            }
            if (this['transition']) this['transition'] = 0x0;
        }, this['hook_players'] = function() {
            var _0x5ab2db = [];
            for (var _0x44f8bb = 0x0; _0x44f8bb < this['players']['length']; _0x44f8bb++) {
                var _0x26f6ef = this['players'][_0x44f8bb];
                if (_0x26f6ef['free']) _0x5ab2db['push'](_0x44f8bb);
                else !_0x26f6ef['free'] && !world['fast_units'][_0x26f6ef['uid']] && (_0x26f6ef['clean'](), _0x5ab2db['push'](_0x44f8bb));
            }
            var _0x13ac4c = world['units'][ITEMS['PLAYERS']];
            for (var _0x44f8bb = 0x0, _0x547742 = 0x0; _0x44f8bb < _0x13ac4c['length'] && _0x547742 < _0x5ab2db['length']; _0x44f8bb++) {
                var _0x26f6ef = _0x13ac4c[_0x44f8bb];
                if (world['mode'] == WORLD['MODE_HUNGER_GAMES'] && world['players'][_0x26f6ef['id']]['nickname'] === 'spectator' || _0x26f6ef['sid'] !== -0x1 || _0x26f6ef['uid'] === user['uid']) continue;
                this['players'][_0x5ab2db[_0x547742]]['init'](_0x26f6ef['uid']), _0x547742++;
            }
        }, this['players_effect'] = function() {
            this['hook_players']();
            for (var _0x2798c2 = 0x0; _0x2798c2 < this['players']['length']; _0x2798c2++) {
                var _0xeb5519 = this['players'][_0x2798c2];
                if (_0xeb5519['free'] || !_0xeb5519['check']()) continue;
                _0xeb5519['update']();
            }
        }, this['update_listener'] = function(_0x354fa4) {
            if (this['oldp']['x'] === _0x354fa4['x'] && this['oldp']['y'] === _0x354fa4['y']) return 0x0;
            return this['oldp']['x'] = _0x354fa4['x'], this['oldp']['y'] = _0x354fa4['y'], this['ltr']['x'] = this['get_x'](_0x354fa4['x']), this['ltr']['y'] = this['get_y'](_0x354fa4['y']), Howler['pos'](this['ltr']['x'], this['ltr']['y'], 0x0), 0x1;
        }, this['scheduler'] = function() {
            if (!this['run'] || !this['loaded']) return;
            var _0x52f103 = world['fast_units'][user['uid']];
            if (!_0x52f103) return;
            _0x52f103['sid'] = 0x0;
            var _0x52fb41 = this['update_listener'](_0x52f103);
            if (world['mode'] !== WORLD['MODE_ZOMBIES'] && world['mode'] !== WORLD['MODE_LEGACY'] && world['mode'] !== WORLD['MODE_BR']) this['ambience'](_0x52f103, _0x52fb41);
            this['players_effect']();
        }, this['load_sound'] = function() {
            var _0x19a14b = null;
            for (var _0x26433f in AUDIO) {
                var _0x4db0ae = AUDIO[_0x26433f];
                typeof _0x4db0ae === 'object' && _0x4db0ae['path'] && (_0x4db0ae['sound'] = new Howl({
                    'src': _0x4db0ae['path'],
                    'volume': 0x0,
                    'sprite': _0x4db0ae['sprite']
                }));
                for (var _0x54f899 in _0x4db0ae['sample']) {
                    var _0x2f3662 = _0x4db0ae['sample'][_0x54f899],
                        _0x80aeb9 = [];
                    console['log'](_0x54f899);
                    for (var _0x5bfe75 = 0x0; _0x5bfe75 < _0x2f3662; _0x5bfe75++) {
                        var _0x5f02d9 = _0x4db0ae['sound']['play'](_0x54f899);
                        _0x4db0ae['sound']['stop'](_0x5f02d9), _0x4db0ae['sound']['on']('fade', function(_0x3ce890) {
                            !this['volume'](_0x3ce890) && (console['log'](_0x3ce890, 'OUT'), this['stop'](_0x3ce890));
                        }, _0x5f02d9), _0x80aeb9['push'](_0x5f02d9);
                    }
                    if (_0x80aeb9['length'] > 0x1) audio['sample'][_0x54f899] = _0x80aeb9;
                    else audio['sample'][_0x54f899] = _0x80aeb9[0x0];
                    audio['player'][_0x54f899] = _0x4db0ae['sound'];
                }
            }
        }, this['volume_sample'] = function(_0x3c2771, _0x2da90c, _0x2322ee) {
            for (var _0x527c91 = 0x0; _0x527c91 < _0x3c2771['length']; _0x527c91++) _0x2da90c['volume'](_0x2322ee, _0x3c2771[_0x527c91]);
        }, this['organize_samples'] = function(_0x272a8f, _0x4b432f, _0x2a999b, _0x7fdfb1, _0x1e8ca9, _0x1744be) {
            var _0x2f7782 = _0x272a8f;
            for (var _0x168893 = 0x0; _0x168893 < _0x2a999b; _0x168893++) {
                var _0x52bb2f = _0x2f7782[_0x168893] = [];
                for (j = 0x0; j < _0x7fdfb1; j++) {
                    _0x52bb2f[j] = audio['sample'][_0x1e8ca9 + j][_0x168893], _0x4b432f['sound']['volume'](_0x1744be, _0x52bb2f[j]);
                }
            }
        }, this['init'] = function() {
            audio['load_sound'](), audio['samples']['punch'] = [], audio['samples']['weapon'] = [], audio['samples']['dig'] = [], audio['organize_samples'](audio['samples']['punch'], AUDIO['PUNCH'], CONST_AUDIO['PLAYERS'], 0x3, 'p', 0.15), audio['organize_samples'](audio['samples']['weapon'], AUDIO['WEAPON'], CONST_AUDIO['PLAYERS'], 0x4, 'w', 0.15), audio['organize_samples'](audio['samples']['dig'], AUDIO['DIG'], CONST_AUDIO['PLAYERS'], 0x3, 'd', 0.09), audio['volume_sample'](audio['sample']['hand'], audio['player']['hand'], 0.15), audio['volume_sample'](audio['sample']['hwood'], audio['player']['hwood'], 0.2), audio['volume_sample'](audio['sample']['hstone'], audio['player']['hstone'], 0x1), audio['area']['sea'] = new SoundArea(CONST_AUDIO['SEA_DELAY'], this['sample']['seanight'], this['sample']['seaday'], CONST_AUDIO['SEA_FADE'], 0.05, 0.4, AUDIO['AMBIENCE']['sound'], CONST_AUDIO['TRANSITION'], {
                'x': SPRITE['SEE_BIOME_X'],
                'y': SPRITE['WINTER_BIOME_Y'],
                'w': world['w'],
                'h': world['h']
            }, {
                'x': SPRITE['SEE_BIOME_X'] - 0x8fc,
                'y': SPRITE['WINTER_BIOME_Y'] - 0xfa0,
                'w': world['w'],
                'h': world['h']
            }, {
                'x': SPRITE['SEE_BIOME_X'] - 0x5dc,
                'y': SPRITE['WINTER_BIOME_Y'] - 0x7d0,
                'w': world['w'],
                'h': world['h']
            }), audio['area']['forest'] = new SoundArea(CONST_AUDIO['FOREST_DELAY'], this['sample']['forestnight'], this['sample']['forestday'], CONST_AUDIO['FOREST_FADE'], 0.03, 0.25, AUDIO['AMBIENCE']['sound'], CONST_AUDIO['TRANSITION'], {
                'x': 0x0,
                'y': SPRITE['WINTER_BIOME_Y'] + 0x320,
                'w': SPRITE['SEE_BIOME_X'] - 0x8fc,
                'h': world['h']
            }, {
                'x': -0x64,
                'y': SPRITE['WINTER_BIOME_Y'] - 0x12c,
                'w': SPRITE['SEE_BIOME_X'] - 0x64,
                'h': world['h']
            }, {
                'x': -0x64,
                'y': SPRITE['WINTER_BIOME_Y'] + 0x190,
                'w': SPRITE['SEE_BIOME_X'] - 0x578,
                'h': world['h']
            }), audio['area']['snow'] = new SoundArea(CONST_AUDIO['FOREST_DELAY'], this['sample']['snownight'], this['sample']['snowday'], CONST_AUDIO['SNOW_FADE'], 0.01, 0.22, AUDIO['AMBIENCE']['sound'], CONST_AUDIO['TRANSITION'], {
                'x': -0x64,
                'y': -0x64,
                'w': world['w'] + 0xc8,
                'h': SPRITE['WINTER_BIOME_Y'] - 0x3e8
            }, {
                'x': -0x64,
                'y': -0x64,
                'w': world['w'] + 0xc8,
                'h': SPRITE['WINTER_BIOME_Y'] + 0x258
            }, {
                'x': -0x64,
                'y': -0x64,
                'w': world['w'] + 0xc8,
                'h': SPRITE['WINTER_BIOME_Y'] + 0x64
            });
            for (var _0x58e68d = 0x0; _0x58e68d < CONST_AUDIO['PLAYERS']; _0x58e68d++) audio['players'][_0x58e68d] = new SoundPlayer(_0x58e68d);
            audio['players'][0x0]['init'](user['uid']), audio['loaded'] = 0x1;
        }, this['launch'] = function() {
            if (!this['transition'] && world['clock']['now'] < CONST_AUDIO['DISABLE_EFFECT']) this['transition'] = 0x1;
        }, this['quit'] = function() {
            if (!this['run'] || !this['loaded']) return;
            for (var _0x4386ed in audio['sample']) {
                var _0x3653f4 = audio['sample'][_0x4386ed];
                if (typeof _0x3653f4 === 'object') {
                    for (var _0x32fc0a = 0x0; _0x32fc0a < _0x3653f4['length']; _0x32fc0a++) audio['player'][_0x4386ed]['stop'](_0x3653f4[_0x32fc0a]);
                } else audio['player'][_0x4386ed]['stop'](_0x3653f4);
            }
            for (var _0x32fc0a = 0x0; _0x32fc0a < audio['players']['length']; _0x32fc0a++) audio['players'][_0x32fc0a]['clean']();
        }, this['select'] = function() {
            if (!audio['run']) {
                if (!audio['loaded']) audio['init']();
                audio['players'][0x0]['uid'] = user['uid'], audio['players'][0x0]['free'] = 0x0, audio['launch']();
            } else audio['quit']();
            audio['run'] = !audio['run'];
        };
    };
mobile = 0x0, document['getElementById']('version')['innerHTML'] = '' + CLIENT['VERSION_NUMBER'] + '.3';
var MAP = [],
    fake_world = {
        'time': Math['floor'](Math['random']() * 0x2),
        'items': []
    };
init_fake_world(), client = new NetworkClient();
var ui, game = {
        'is_run': ![]
    },
    world, user, scoreboard, audio = new MyAudio(),
    keyboard = new Keyboard(),
    mouse = new Mouse(),
    delta = 0x0,
    old_timestamp = 0x0,
    fps = {
        'img': ![],
        'counter': 0x0,
        'delay': 0x0,
        'cycle': 0x3c,
        'display': !![]
    },
    loader = new Loader(can, ctx, function() {
        create_images(), game = new Game(can, ctx), ui = new UI(can, ctx), ui['login_after'](), scoreboard = new Scoreboard(can, ctx), world = new World(), user = new User(), loader['quit'](function() {
            loader['logo']['style']['display'] = 'none', ui['run']();
        });
    }),
    times = [];
let TimeVar = Date['now']();

function draw(_0x4d4d46) {
    const _0x38bd96 = performance['now']();
    while (times['length'] > 0x0 && times[0x0] <= _0x38bd96 - 0x3e8) {
        times['shift']();
    }
    times['push'](_0x38bd96), window['requestAnimationFrame'](draw), delta = (_0x4d4d46 - old_timestamp) / 0x3e8, old_timestamp = _0x4d4d46;
    Date['now']() - TimeVar >= 0x3e8 && (TimeVar = Date['now'](), window['fpsdata'] = times['length'] - 0x1);
    delta = delta > 0x1 ? 0x1 : delta;
    if (game['is_run']) game['draw']();
    else {
        ctx['clearRect'](0x0, 0x0, canw, canh);
        if (loader['is_run']) loader['draw']();
        else {
            if (ui['is_run']) ui['draw']();
            else {
                if (scoreboard['is_run']) scoreboard['draw']();
            }
        }
    }
    ctx['save']();
    let _0x265bdc = 0x14;
    for (hack in Settings) {
        Settings[hack]['e'] && Settings[hack]['k'] && (ctx['font'] = '18px\x20Baloo\x20Paaji', ctx['strokeStyle'] = 'black', ctx['lineWidth'] = 0x7, ctx['fillStyle'] = 'red', ctx['strokeText'](hack, 0x0, _0x265bdc), ctx['fillText'](hack, 0x0, _0x265bdc), _0x265bdc += 0x14);;
    };
    Spectator && (ctx['font'] = '18px\x20Baloo\x20Paaji', ctx['strokeStyle'] = 'black', ctx['lineWidth'] = 0x7, ctx['fillStyle'] = 'red', ctx['strokeText']('Spectator', 0x0, _0x265bdc), ctx['fillText']('Spectator', 0x0, _0x265bdc));;
    ctx['restore']();
    if (Spectator) {
        if (keyboard['is_bottom']()) user['cam']['y'] -= Math['floor'](0xfa0 / window['fpsdata']), user['cam']['ex'] -= Math['floor'](0x1388 / window['fpsdata']);
        if (keyboard['is_top']()) user['cam']['y'] += Math['floor'](0xfa0 / window['fpsdata']), user['cam']['ex'] += Math['floor'](Math['floor'](0x1388 / window['fpsdata']));
        if (keyboard['is_right']()) user['cam']['x'] -= Math['floor'](0xfa0 / window['fpsdata']), user['cam']['ey'] -= Math['floor'](0x1388 / window['fpsdata']);
        if (keyboard['is_left']()) user['cam']['x'] += Math['floor'](0xfa0 / window['fpsdata']), user['cam']['ey'] += Math['floor'](0x1388 / window['fpsdata']);
    };
    if (world && user['alive'] && Settings['mob']) {
        ctx['save'](), ctx['font'] = '22px\x20Baloo\x20Paaji', ctx['strokeStyle'] = 'black', ctx['lineWidth'] = 0x7, ctx['fillStyle'] = 'red';
        for (let _0x42fef6 = 0x0; _0x42fef6 < world['units']['length']; _0x42fef6++) {
            this['entitylist'] = world['units'][_0x42fef6];
            if (typeof entitylist == 'object') {
                for (let _0x1e2d98 = 0x0; _0x1e2d98 < this['entitylist']['length']; _0x1e2d98++) {
                    this['entity'] = this['entitylist'][_0x1e2d98], this['aa'] = this['entity']['visualhealth'] - this['entity']['dmged'], this['xx'] = user['cam']['x'] + this['entity']['x'] - 0x32, this['x1'] = user['cam']['y'] + this['entity']['y'] - 0x1e + 0x16, this['aa'] <= 0x0 ? null : ctx['strokeText']('❤️' + this['aa'], this['xx'], this['x1']), this['aa'] <= 0x0 ? null : ctx['fillText']('❤️' + this['aa'], this['xx'], this['x1']);
                };
            };
        }
        ctx['restore']();
    }
}
window['onbeforeunload'] = function() {
    if (game['is_run']) return 'Are\x20you\x20sure\x20you\x20want\x20quit\x20starve.io\x20;-;\x20?';
}, resize_canvas(), draw(0x0), window['aiptag'] = window['aiptag'] || {}, window['aiptag']['consented'] = !![], window['aiptag']['cmd'] = window['aiptag']['cmd'] || [], window['aiptag']['cmd']['display'] = window['aiptag']['cmd']['display'] || [], window['aiptag']['cmd']['player'] = window['aiptag']['cmd']['player'] || [];
var fun = function() {
    adplayer = new aipPlayer({
        'AD_WIDTH': 0x3c0,
        'AD_HEIGHT': 0x21c,
        'AD_FULLSCREEN': !![],
        'AD_CENTERPLAYER': !![],
        'LOADING_TEXT': 'loading\x20advertisement',
        'PREROLL_ELEM': function() {
            return document['getElementById']('preroll');
        },
        'AIP_COMPLETE': function() {
            client['connect']();
        },
        'AIP_REMOVE': function() {}
    });
};
window['aiptag']['cmd']['player']['push'](fun);
var ___adsvid = 0x0;

function check_ads() {
    xhttp['open']('GET', 'https://cdn.jsdelivr.net/gh/prebid/currency-file@1/latest.json?date=20190929', !![]), xhttp['send']();
};
var xhttp = new XMLHttpRequest();
xhttp['onreadystatechange'] = function() {
    if (this['readyState'] === 0x4 && this['status'] === 0x0) {}
};
var DB = 'https://token.starve.io/';
if (environment === environments['DEV']) var DB = 'http://localhost:3002/';
var __GOOGLE_LOGIN__ = 0x0,
    __FACEBOOK_LOGIN__ = 0x1,
    userLoginType = undefined,
    userToken = undefined,
    userId = undefined,
    userData = undefined,
    userAlreadyLoggedIn = 0x0;
window['onUserLogin'] = function() {
    userAlreadyLoggedIn = 0x1;
};

function loginWithGoogle() {
    window['gapi']['auth2']['getAuthInstance']()['signIn']();
}
var ip = undefined,
    xsolla_options = {
        'access_token': 'ACCESS_TOKEN'
    },
    s = document['createElement']('script');
s['type'] = 'text/javascript', s['async'] = !![], s['src'] = 'https://static.xsolla.com/embed/paystation/1.0.7/widget.min.js', s['addEventListener']('load', function(_0xd109cc) {
    window['XPayStationWidget']['init'](xsolla_options), window['XPayStationWidget']['on']('status-done', claimBread);
}, ![]);
var head = document['getElementsByTagName']('head')[0x0];
head['appendChild'](s), login(),
    function(_0x2e15fc, _0x5636d4, _0x564d67) {
        var _0x54bf92, _0x4268c9 = _0x2e15fc['getElementsByTagName'](_0x5636d4)[0x0];
        if (_0x2e15fc['getElementById'](_0x564d67)) return;
        _0x54bf92 = _0x2e15fc['createElement'](_0x5636d4), _0x54bf92['id'] = _0x564d67, _0x54bf92['src'] = 'https://connect.facebook.net/en_US/sdk.js', _0x4268c9['parentNode']['insertBefore'](_0x54bf92, _0x4268c9);
    }(document, 'script', 'facebook-jssdk');

function logWithFacebook() {
    window['FB']['login'](function(_0x1989d9) {
        if (_0x1989d9['authResponse']) window['FB']['api']('/me', function(_0x9162ba) {
            userLoginType = __FACEBOOK_LOGIN__, userToken = window['FB']['getAuthResponse']()['accessToken'], login(), window['onUserLogin'](userId);
        });
        else {}
    });
}
var auth2 = undefined,
    googleUser = undefined,
    appStart = function() {
        window['gapi']['load']('auth2', initSigninV2);
    },
    initSigninV2 = function() {
        window['gapi']['auth2']['init']({
            'client_id': '604822901057-k3dp7j5qpl6pnfr86rvi4r2qp20nk1oh.apps.googleusercontent.com',
            'scope': 'https://www.googleapis.com/auth/userinfo.profile'
        })['then'](_0x2f7c7a => {
            auth2 = _0x2f7c7a, auth2['isSignedIn']['listen'](signinChanged), auth2['currentUser']['listen'](userChanged);
            const _0x2c5ad1 = auth2['isSignedIn']['get']();
            if (_0x2c5ad1) auth2['signIn']();
            refreshValues();
        });
    },
    signinChanged = function(_0x2a0b8b) {},
    userChanged = function(_0x496f68) {
        login(), userToken === undefined && googleUser !== undefined && (userToken = googleUser['getAuthResponse']()['id_token'], console['log'](':::\x20iandev\x20userToken\x20:::', userToken), userToken !== undefined && (userLoginType = __GOOGLE_LOGIN__, window['onUserLogin'](userId))), _0x496f68 !== undefined && _0x496f68['isSignedIn']() === !![] && (googleUser = _0x496f68, window['onUserLogin'](_0x496f68['id']));
    },
    refreshValues = function() {
        if (auth2) googleUser = auth2['currentUser']['get']();
    };
window['onload'] = function() {
    appStart();
};

function logout() {
    if (userLoginType === __FACEBOOK_LOGIN__ && window['FB']['getUserID']()) window['FB']['logout']();
    userLoginType === __GOOGLE_LOGIN__ && googleUser !== undefined && (window['gapi']['auth2']['getAuthInstance']()['signOut'](), googleUser = undefined), userId = undefined, userToken = undefined, userLoginType = undefined, ui['kit'] = 0x0, ui['bread'] = 0x0, ui['score'] = 0x0, ui['unlock_cosmetics'](), onUserLogout();
}

function login() {
    if (userId !== undefined) return;
    getUserId();
    if (!userId) return;
}

function getUserId() {
    try {
        window['FB'] && (window['FB']['getUserID']() && (userId = window['FB']['getUserID'](), userToken === undefined && window['FB']['getLoginStatus'](function() {
            userLoginType = __FACEBOOK_LOGIN__, userToken = window['FB']['getAuthResponse']()['accessToken'], window['onUserLogin'](userId);
        })));
    } catch (_0x39c305) {}
    try {
        userId = googleUser['getBasicProfile']()['getId']();
    } catch (_0xaca175) {}
}

function openXsolla(_0x30599e) {
    if (!userId) return;
    var _0x4f8a41 = new XMLHttpRequest();
    _0x4f8a41['open']('GET', DB + 'xsolla?userid=' + userId + '&item=' + _0x30599e), _0x4f8a41['setRequestHeader']('Content-Type', 'application/x-www-form-urlencoded'), _0x4f8a41['onreadystatechange'] = function() {
        this['readyState'] == 0x4 && this['status'] == 0xc8 && (_0x4f8a41['responseText'] !== '0' && (xsolla_options['access_token'] = _0x4f8a41['responseText'], window['XPayStationWidget']['init'](xsolla_options), window['XPayStationWidget']['open']()));
    }, _0x4f8a41['send']();
}

function getUserDetails(_0x32ce4e) {
    var _0x18d609 = new XMLHttpRequest();
    _0x18d609['open']('GET', DB + 'login?token=' + userToken + '&type=' + userLoginType), _0x18d609['setRequestHeader']('Content-Type', 'application/x-www-form-urlencoded'), _0x18d609['onreadystatechange'] = function() {
        if (this['readyState'] === 0x4 && this['status'] === 0xc8) {
            if (_0x18d609['responseText'] !== '0') _0x32ce4e(JSON['parse'](_0x18d609['responseText']));
        }
    }, _0x18d609['send']();
}

function rebootServer() {
    var _0xc9e7d6 = new XMLHttpRequest();
    _0xc9e7d6['open']('GET', DB + 'rebootServer?token=' + userToken + '&userid=' + userId), _0xc9e7d6['setRequestHeader']('Content-Type', 'application/x-www-form-urlencoded'), _0xc9e7d6['onreadystatechange'] = function() {
        if (this['readyState'] === 0x4 && this['status'] === 0xc8) {
            if (_0xc9e7d6['responseText'] !== '0') location['href'] = document['getElementById']('serverAddressInput')['value'];
        }
    }, _0xc9e7d6['send']();
}

function regionPreference(_0x2ed084) {
    var _0x344ddb = new XMLHttpRequest();
    _0x344ddb['open']('GET', DB + 'setRegion?token=' + userToken + '&userid=' + userId + '&region=' + _0x2ed084), _0x344ddb['setRequestHeader']('Content-Type', 'application/x-www-form-urlencoded'), _0x344ddb['onreadystatechange'] = function() {
        if (this['readyState'] === 0x4 && this['status'] === 0xc8) {
            if (_0x344ddb['responseText'] !== '0') ui['select_subview'](ui['__SERVER_DURATION__']);
            else ui['select_subview'](ui['__GAME__']);
        }
    }, _0x344ddb['send']();
}

function buySpin(_0x5ae8b2, _0x59e905) {
    if (ui['spin'] > 0x0) return;
    if (ui['bread'] < _0x59e905) {
        ui['select_subview'](ui['__BUY__']);
        return;
    }
    ui['spin'] = 0x2, ui['spin_effect'] = 0x0, ui['spin_target'] = 0x64;
    var _0x430cc0 = new XMLHttpRequest();
    _0x430cc0['open']('GET', DB + 'buySpin?token=' + userToken + '&userid=' + userId + '&spin=' + _0x5ae8b2), _0x430cc0['setRequestHeader']('Content-Type', 'application/x-www-form-urlencoded'), _0x430cc0['onreadystatechange'] = function() {
        if (this['readyState'] == 0x4 && this['status'] == 0xc8) {
            if (_0x430cc0['responseText'] !== '0') {
                var _0x38fa1c = JSON['parse'](_0x430cc0['responseText']);
                ui['play_spin'](_0x38fa1c['rand'] * Math['PI'] * 0x2, _0x38fa1c['type'], _0x38fa1c['id']), ui['bread'] -= _0x59e905;
            } else ui['spin'] = 0x0;
        }
    }, _0x430cc0['send']();
}

function buyNameChanger() {
    if (ui['bread'] < 0x12c && ui['firstName'] > 0x0) return;
    var _0x588bcc = document['getElementById']('account_nickname_input')['value']['trim']();
    document['getElementById']('account_nickname_input')['value'] = _0x588bcc;
    if (_0x588bcc['length'] < 0x1 || _0x588bcc['length'] > 0x14) return;
    var _0x1f2be2 = new XMLHttpRequest();
    _0x1f2be2['open']('GET', DB + 'changeNickname?token=' + userToken + '&userid=' + userId + '&nickname=' + encodeURIComponent(_0x588bcc)), _0x1f2be2['setRequestHeader']('Content-Type', 'application/x-www-form-urlencoded'), _0x1f2be2['onreadystatechange'] = function() {
        if (this['readyState'] == 0x4 && this['status'] == 0xc8) {
            if (_0x1f2be2['responseText'] !== '0') {
                var _0x4e8dbd = Number(_0x1f2be2['responseText']);
                if (_0x4e8dbd > 0x0) ui['bread'] -= _0x4e8dbd;
                ui['firstName'] = 0x1, ui['select_subview'](ui['__PROFILE__']);
            }
        }
    }, _0x1f2be2['send']();
}

function buyKit(_0x23318e, _0x3848d4) {
    if (ui['bread'] < _0x3848d4) {
        ui['select_subview'](ui['__BUY__']);
        return;
    }
    var _0x27b1b4 = new XMLHttpRequest();
    _0x27b1b4['open']('GET', DB + 'buyKit?token=' + userToken + '&userid=' + userId + '&kit=' + _0x23318e), _0x27b1b4['setRequestHeader']('Content-Type', 'application/x-www-form-urlencoded'), _0x27b1b4['onreadystatechange'] = function() {
        if (this['readyState'] == 0x4 && this['status'] == 0xc8) {
            if (_0x27b1b4['responseText'] !== '0') {
                var _0x38e234 = JSON['parse'](_0x27b1b4['responseText']);
                ui['bread'] -= _0x3848d4, ui['kit'] = Date['now']() + Number(_0x38e234);
            }
        }
    }, _0x27b1b4['send']();
}

function claimBread() {
    var _0x3789fd = new XMLHttpRequest();
    _0x3789fd['open']('GET', DB + 'claimBread?userid=' + userId), _0x3789fd['setRequestHeader']('Content-Type', 'application/x-www-form-urlencoded'), _0x3789fd['onreadystatechange'] = function() {
        if (this['readyState'] == 0x4 && this['status'] == 0xc8) {
            if (_0x3789fd['responseText'] !== '0') {
                var _0x40ce0a = Number(_0x3789fd['responseText']);
                if (!isNaN(_0x40ce0a)) ui['bread'] = _0x40ce0a;
            }
        }
    }, _0x3789fd['send']();
}

function getBreadAndScore() {
    var _0x1e9dd0 = new XMLHttpRequest();
    _0x1e9dd0['open']('GET', DB + 'getBreadAndScore?userid=' + userId), _0x1e9dd0['setRequestHeader']('Content-Type', 'application/x-www-form-urlencoded'), _0x1e9dd0['onreadystatechange'] = function() {
        if (this['readyState'] == 0x4 && this['status'] == 0xc8) {
            if (_0x1e9dd0['responseText'] !== '0') {
                var _0x2fbcff = JSON['parse'](_0x1e9dd0['responseText']),
                    _0x219d6d = _0x2fbcff['b'] - ui['bread'];
                ui['bread'] = _0x2fbcff['b'], ui['score'] = _0x2fbcff['s'], ui['lvl'] = ui['level_formula'](ui['score']), ui['xp_dest'] = ui['xp_formula'](ui['score']), ui['xp'] = 0x0, document['getElementById']('breadWonInner')['innerHTML'] = '' + _0x219d6d;
            }
        }
    }, _0x1e9dd0['send']();
}

function sendCheat() {
    xhr['open']('GET', DB + 'getScore?userid=' + userId), xhr['setRequestHeader']('Content-Type', 'application/x-www-form-urlencoded'), xhr['onreadystatechange'] = function() {
        if (this['readyState'] == 0x4 && this['status'] == 0xc8) {
            if (xhr['responseText'] !== '0') var _0x32dd82 = JSON['parse'](xhr['responseText']);
        }
    }, xhr['send']();
}

function getLeaderboard(_0x325dc9, _0x246443, _0x1f3267, _0x4b5663) {
    _0x325dc9 = _0x325dc9 === undefined ? ui['leaderboard_range'] : _0x325dc9, _0x246443 = _0x246443 === undefined ? ui['leaderboard_mode'] : _0x246443, _0x1f3267 = _0x1f3267 === undefined ? ui['leaderboard_sorted'] : _0x1f3267, _0x4b5663 = _0x4b5663 === undefined ? ui['leaderboard_season'] : _0x4b5663;
    if (_0x325dc9 === ui['leaderboard_range'] && _0x246443 === ui['leaderboard_mode'] && _0x1f3267 === ui['leaderboard_sorted'] && _0x4b5663 === ui['leaderboard_season']) return;
    ui['leaderboard_range'] = _0x325dc9, ui['leaderboard_mode'] = _0x246443, ui['leaderboard_sorted'] = _0x1f3267, ui['leaderboard_season'] = _0x4b5663;
    if (ui['LEADERBOARD_SEASON1'] === _0x4b5663) _0x4b5663 = '0';
    else {
        if (ui['LEADERBOARD_SEASON2'] === _0x4b5663) _0x4b5663 = '1';
        else {
            if (ui['LEADERBOARD_SEASON3'] === _0x4b5663) _0x4b5663 = '2';
            else {
                if (ui['LEADERBOARD_SEASON4'] === _0x4b5663) _0x4b5663 = '3';
            }
        }
    }
    if (ui['LEADERBOARD_TOTAL'] === _0x246443) _0x246443 = 'total';
    else {
        if (ui['LEADERBOARD_NORMAL'] === _0x246443) _0x246443 = 'normal';
        else {
            if (ui['LEADERBOARD_ZOMBIE'] === _0x246443) _0x246443 = 'zombie';
            else {
                if (ui['LEADERBOARD_VAMPIRE'] === _0x246443) _0x246443 = 'vampire';
                else {
                    if (ui['LEADERBOARD_FOREST'] === _0x246443) _0x246443 = 'forest';
                }
            }
        }
    }
    if (ui['LEADERBOARD_ALL'] === _0x325dc9) _0x325dc9 = 'all';
    if (ui['LEADERBOARD_WEEK'] === _0x325dc9) _0x325dc9 = 'week';
    if (ui['LEADERBOARD_TODAY'] === _0x325dc9) _0x325dc9 = 'today';
    if (ui['LEADERBOARD_KILL'] === _0x1f3267) _0x1f3267 = 'kill';
    else {
        if (ui['LEADERBOARD_SCORE'] === _0x1f3267) _0x1f3267 = 'score';
        else {
            if (ui['LEADERBOARD_TIME'] === _0x1f3267) _0x1f3267 = 'time';
        }
    }
    var _0x30bbfd = new XMLHttpRequest();
    _0x30bbfd['open']('GET', DB + 'leaderboard?range=' + _0x325dc9 + '&mode=' + _0x246443 + '&sort=' + _0x1f3267 + '&season=' + _0x4b5663), _0x30bbfd['setRequestHeader']('Content-Type', 'application/x-www-form-urlencoded'), _0x30bbfd['onreadystatechange'] = function() {
        if (this['readyState'] == 0x4 && this['status'] == 0xc8) {
            if (_0x30bbfd['responseText'] !== '0') {
                var _0x1fc012 = JSON['parse'](_0x30bbfd['responseText']),
                    _0x2f0b0e = '';
                for (var _0x48f836 = 0x0; _0x48f836 < _0x1fc012['length']; _0x48f836++) {
                    line = _0x1fc012[_0x48f836];
                    var _0x5896e9 = line[0x1];
                    if (_0x5896e9['indexOf']('Starver#') === -0x1) _0x5896e9 = window['decodeURIComponent'](window['escape'](window['atob'](_0x5896e9)));
                    _0x2f0b0e += '<div\x20class=\x22lineLeaderboard\x22>', _0x2f0b0e += '<div\x20class=\x22rank\x22>', _0x2f0b0e += _0x48f836 + 0x1 + '', _0x2f0b0e += '</div>', _0x2f0b0e += '<div\x20class=\x22name\x22>', _0x2f0b0e += _0x5896e9, _0x2f0b0e += '</div>', _0x2f0b0e += '<div\x20class=\x22lvl\x22>', _0x2f0b0e += ui['level_formula'](line[0x6]) + 0x1 + '', _0x2f0b0e += '</div>', _0x2f0b0e += '<div\x20class=\x22kills\x22>', _0x2f0b0e += line[0x5] + '', _0x2f0b0e += '</div>', _0x2f0b0e += '<div\x20class=\x22time\x22>', _0x2f0b0e += line[0x4] + '', _0x2f0b0e += '</div>', _0x2f0b0e += '<div\x20class=\x22score\x22>', _0x2f0b0e += line[0x3] + '', _0x2f0b0e += '</div>', _0x2f0b0e += '</div>';
                }
                document['getElementById']('leaderboard')['innerHTML'] = _0x2f0b0e;
            }
        }
    }, _0x30bbfd['send']();
}
window['UtilsUI'] = {
    'initUI': () => {
        let _0x2eb7aa = document['body'],
            _0x1e59ab = new guify({
                'title': 'sigma yard x)\x20',
                'theme': {
                    'name': '! Reeform#0168\x20',
                    'colors': {
                        'panelBackground': 'black',
                        'componentBackground': '#1a1f1f',
                        'componentForeground': '#00ffff',
                        'textPrimary': '#00ffff',
                        'textSecondary': '#00ffff',
                        'textHover': 'white'
                    },
                    'font': {
                        'fontFamily': 'Baloo\x20Paaji',
                        'fontSize': '24px',
                        'fontWeight': '4'
                    }
                },
                'align': 'right',
                'width': 0x250,
                'barMode': 'none',
                'panelMode': 'none',
                'opacity': 0.6,
                'root': window['container'],
                'open': ![]
            });
        _0x1e59ab['Register']({
            'type': 'folder',
            'label': 'Visuals',
            'open': ![]
        }), _0x1e59ab['Register']({
            'type': 'folder',
            'label': 'Misc',
            'open': ![]
        }), _0x1e59ab['Register']({
            'type': 'folder',
            'label': 'AutoSpike',
            'open': ![]
        }), _0x1e59ab['Register']({
            'type': 'folder',
            'label': 'AutoFarm',
            'open': ![]
        }), _0x1e59ab['Register']({
            'type': 'folder',
            'label': 'AutoCraft',
            'open': ![]
        }), _0x1e59ab['Register']({
            'type': 'folder',
            'label': 'AutoSteal',
            'open': ![]
        }), _0x1e59ab['Register']({
            'type': 'folder',
            'label': 'KeyBinds',
            'open': ![]
        }), _0x1e59ab['Register']({
            'type': 'folder',
            'label': 'AutoTame',
            'open': ![]
        }), (_0x1e59ab['Register']([{
            'type': 'checkbox',
            'label': 'Auto\x20Tame',
            'object': Settings['Tame'],
            'property': 'e',
            'onChange'(_0x5951f7) {
                UtilsUI['saveSettings']();
            }
        }, {
            'type': 'button',
            'label': 'Set\x20AutoTame\x20Key',
            'action'(_0x3cd7b1) {
                UtilsUI['controls']['setKeyBind']('Tame');
            }
        }, {
            'type': 'display',
            'label': 'AutoTame\x20Key:',
            'object': Settings['Tame'],
            'property': 'k'
        }, {
            'type': 'checkbox',
            'label': 'Zoom',
            'object': lla,
            'property': 'e',
            'onChange'(_0x1e65a7) {
                UtilsUI['saveSettings']();
            }
        }], {
            'folder': 'AutoTame'
        }), _0x1e59ab['Register']([{
            'type': 'checkbox',
            'label': 'Tracers',
            'object': Settings,
            'property': 'Tracers',
            'onChange'(_0x39a4ec) {
                UtilsUI['saveSettings']();
            }
        }, {
            'type': 'checkbox',
            'label': 'Timers',
            'object': Settings,
            'property': 'Timer',
            'onChange'(_0x29f108) {
                UtilsUI['saveSettings']();
            }
        }, {
            'type': 'checkbox',
            'label': 'ColoredSpikes',
            'object': Settings,
            'property': 'ColoredSpikes',
            'onChange': _0x118b31 => {
                UtilsUI['saveSettings']();
            }
        }, {
            'type': 'checkbox',
            'label': '\x20Join&Leaves',
            'object': Settings,
            'property': 'JoinLeave',
            'onChange': _0x5b5679 => {
                UtilsUI['saveSettings']();
            }
        }, {
            'type': 'checkbox',
            'label': 'AnimalsHP',
            'object': Settings,
            'property': 'mob',
            'onChange': _0x3be320 => {
                UtilsUI['saveSettings']();
            }
        }, {
            'type': 'checkbox',
            'label': 'PlayerESP',
            'object': Settings,
            'property': 'esp',
            'onChange': _0x473019 => {
                UtilsUI['saveSettings']();
            }
        }, {
            'type': 'checkbox',
            'label': 'Movement\x20',
            'object': Settings,
            'property': 'Moves',
            'onChange': _0x144104 => {
                UtilsUI['saveSettings']();
            }
        }], {
            'folder': 'Visuals'
        })), _0x1e59ab['Register']([{
            'type': 'checkbox',
            'label': 'AutoSeed',
            'object': Settings,
            'property': 'AutoSeed',
            'onChange': _0x2d673a => {
                UtilsUI['saveSettings']();
            }
        }, {
            'type': 'select',
            'label': 'AutoBuild\x20Mode',
            'object': Settings['AutoBuild']['c'],
            'property': '0',
            'options': ['Bridge', 'Roof', 'Plot'],
            'onChange': _0x4e057c => {
                UtilsUI['saveSettings']();
            }
        }, {
            'type': 'checkbox',
            'label': 'AutoCraft',
            'object': Settings['AutoCraft'],
            'property': 'e',
            'onChange': _0x271da7 => {
                UtilsUI['saveSettings']();
            }
        }, {
            'type': 'checkbox',
            'label': 'AutoRecycle',
            'object': Settings['AutoRecycle'],
            'property': 'e',
            'onChange': _0x2aa390 => {
                UtilsUI['saveSettings']();
            }
        }, {
            'type': 'button',
            'label': 'Set\x20AutoCraft\x20Key',
            'action': _0x230da1 => {
                UtilsUI['controls']['setKeyBind']('AutoCraft');
            }
        }, {
            'type': 'display',
            'label': 'AutoCraft\x20Key:',
            'object': Settings['AutoCraft'],
            'property': 'k'
        }, {
            'type': 'button',
            'label': 'Set\x20AutoRecycle\x20Key',
            'action': _0x2c26c0 => {
                UtilsUI['controls']['setKeyBind']('AutoRecycle');
            }
        }, {
            'type': 'display',
            'label': 'AutoRecycle\x20Key:',
            'object': Settings['AutoRecycle'],
            'property': 'k'
        }], {
            'folder': 'AutoCraft'
        }), _0x1e59ab['Register']([{
            'type': 'button',
            'label': 'TotemSetting',
            'action': _0x3867e7 => {
                UtilsUI['controls']['setKeyBind']('AutoTotem');
            }
        }, {
            'type': 'display',
            'label': 'TotemKey',
            'object': Settings['AutoTotem'],
            'property': 'k'
        }, {
            'type': 'button',
            'label': 'Xray',
            'action'(_0xffe00a) {
                UtilsUI['controls']['setKeyBind']('Xray');
            }
        }, {
            'type': 'display',
            'label': 'Xray\x20',
            'object': Settings['Xray'],
            'property': 'k'
        }, {
            'type': 'button',
            'label': 'Set\x20AutoExtractor\x20Put\x20Key',
            'action': _0x2156af => {
                UtilsUI['controls']['setKeyBind']('AutoExtPut');
            }
        }, {
            'type': 'display',
            'label': 'AutoExtractor\x20Put\x20Key:',
            'object': Settings['AutoExtPut'],
            'property': 'k'
        }, {
            'type': 'button',
            'label': 'Set\x20AutoExtractor\x20Take\x20Key',
            'action': _0x3aa090 => {
                UtilsUI['controls']['setKeyBind']('AutoExtTake');
            }
        }, {
            'type': 'display',
            'label': 'AutoExtractor\x20Take\x20Key:',
            'object': Settings['AutoExtTake'],
            'property': 'k'
        }, {
            'type': 'button',
            'label': 'Set\x20AutoBread\x20Take\x20Key',
            'action': _0x49e676 => {
                UtilsUI['controls']['setKeyBind']('AutoBreadTake');
            }
        }, {
            'type': 'display',
            'label': 'AutoBread\x20Take\x20Key:',
            'object': Settings['AutoBreadTake'],
            'property': 'k'
        }, {
            'type': 'button',
            'label': 'Set\x20AutoBread\x20Put\x20Key',
            'action': _0x41865d => {
                UtilsUI['controls']['setKeyBind']('AutoBreadPut');
            }
        }, {
            'type': 'display',
            'label': 'AutoBread\x20Put\x20Key:',
            'object': Settings['AutoBreadPut'],
            'property': 'k'
        }, {
            'type': 'button',
            'label': 'Set\x20Autofarm\x20Key',
            'action': _0x19a835 => {
                UtilsUI['controls']['setKeyBind']('Autofarm');
            }
        }, {
            'type': 'display',
            'label': 'Autofarm\x20Key:',
            'object': Settings['Autofarm'],
            'property': 'k'
        }, {
            'type': 'button',
            'label': 'Set\x20AutoEmerald\x20Key',
            'action': _0x2bd4ad => {
                UtilsUI['controls']['setKeyBind']('AutoEme');
            }
        }, {
            'type': 'display',
            'label': 'AutoEmerald\x20Key:',
            'object': Settings['AutoEme'],
            'property': 'k'
        }, {
            'type': 'button',
            'label': 'Set\x20Aimbot\x20Key',
            'action': _0x8e9d4 => {
                UtilsUI['controls']['setKeyBind']('AMB');
            }
        }, {
            'type': 'display',
            'label': 'Aimbot\x20Key:',
            'object': Settings['AMB'],
            'property': 'k'
        }, {
            'type': 'button',
            'label': 'Set\x20AutoBuild\x20Key',
            'action': _0xf70aa0 => {
                UtilsUI['controls']['setKeyBind']('AutoBuild');
            }
        }, {
            'type': 'display',
            'label': 'AutoBuild\x20Key:',
            'object': Settings['AutoBuild'],
            'property': 'k'
        }, {
            'type': 'button',
            'label': 'AutoKillWorm\x20Key',
            'action'(_0x33b9e1) {
                Utils['controls']['setKeyBind']('killworm');
            }
        }, {
            'type': 'display',
            'label': 'AutoKillWorm\x20Key',
            'object': Settings['killworm'],
            'property': 'k'
        }], {
            'folder': 'KeyBinds'
        }), _0x1e59ab['Register']([{
            'type': 'checkbox',
            'label': 'Start\x20AutoFarm',
            'object': Settings['Autofarm'],
            'property': 'e',
            'onChange': _0x368f93 => {
                UtilsUI['saveSettings']();
            }
        }, {
            'type': 'checkbox',
            'label': 'AutoWater',
            'object': Settings['Autofarm'],
            'property': 'w',
            'onChange': _0x1c6c3a => {
                UtilsUI['saveSettings']();
            }
        }, {
            'type': 'button',
            'label': 'Top\x20left\x20of\x20farm',
            'action': _0x4e4f4f => {
                let _0x96b07b = world['fast_units'][user['uid']];
                _0x96b07b && (Settings['Autofarm']['x'] = _0x96b07b['x'], Settings['Autofarm']['y'] = _0x96b07b['y']);;
            }
        }, {
            'type': 'button',
            'label': 'Bottom\x20right\x20of\x20farm',
            'action': _0x149323 => {
                let _0x3fcc7e = world['fast_units'][user['uid']];
                _0x3fcc7e && (Settings['Autofarm']['xx'] = _0x3fcc7e['x'], Settings['Autofarm']['yy'] = _0x3fcc7e['y']);;
            }
        }, {
            'type': 'button',
            'label': 'Safe\x20Point',
            'action': _0x4c4227 => {
                let _0x2c7c08 = world['fast_units'][user['uid']];
                _0x2c7c08 && (Settings['Autofarm']['sx'] = _0x2c7c08['x'], Settings['Autofarm']['sy'] = _0x2c7c08['y']);;
            }
        }, {
            'type': 'display',
            'label': 'X',
            'object': Settings['Autofarm'],
            'property': 'x'
        }, {
            'type': 'display',
            'label': 'Y',
            'object': Settings['Autofarm'],
            'property': 'y'
        }, {
            'type': 'display',
            'label': 'X1',
            'object': Settings['Autofarm'],
            'property': 'xx'
        }, {
            'type': 'display',
            'label': 'Y1',
            'object': Settings['Autofarm'],
            'property': 'yy'
        }, {
            'type': 'display',
            'label': 'SX',
            'object': Settings['Autofarm'],
            'property': 'sx'
        }, {
            'type': 'display',
            'label': 'SY',
            'object': Settings['Autofarm'],
            'property': 'sy'
        }], {
            'folder': 'AutoFarm'
        }), _0x1e59ab['Register']([{
            'type': 'button',
            'label': 'Set\x20AutoSteal\x20Key',
            'action': _0x5f1db0 => {
                UtilsUI['controls']['setKeyBind']('AutoSteal');
            }
        }, {
            'type': 'display',
            'label': 'AutoSteal\x20Key:',
            'object': Settings['AutoSteal'],
            'property': 'k'
        }, {
            'type': 'checkbox',
            'label': 'AutoSteal',
            'object': Settings['AutoSteal'],
            'property': 'e',
            'onChange': _0x5a0968 => {
                UtilsUI['saveSettings']();
            }
        }, {
            'type': 'checkbox',
            'label': 'AutoUnlock',
            'object': Settings['AutoSteal'],
            'property': 'u',
            'onChange': _0x2133a6 => {
                UtilsUI['saveSettings']();
            }
        }, {
            'type': 'range',
            'label': 'ItemID',
            'min': 0x0,
            'max': 0x2710,
            'step': 0x1,
            'object': Settings['AutoSteal'],
            'property': 'o',
            'onChange': _0x2d05c2 => {
                UtilsUI['saveSettings']();
            }
        }, {
            'type': 'button',
            'label': 'Add\x20Item\x20ID\x20to\x20SmartSteal',
            'action': _0x2e2c08 => {
                Settings['AutoSteal']['l']['push'](Settings['AutoSteal']['o']);
            }
        }, {
            'type': 'button',
            'label': 'Delete\x20ID',
            'action': _0x49deb3 => {
                let _0x508bdc = Settings['AutoSteal']['l']['indexOf'](Settings['AutoSteal']['o']);
                _0x508bdc !== -0x1 && Settings['AutoSteal']['l']['splice'](_0x508bdc, 0x1);
            }
        }, {
            'type': 'button',
            'label': 'Clear',
            'action': _0x189a56 => {
                Settings['AutoSteal']['l'] = [];
            }
        }], {
            'folder': 'AutoSteal'
        }), (_0x1e59ab['Register']([{
            'type': 'button',
            'label': 'AutoSpike\x20key',
            'action'(_0x1ebe8b) {
                UtilsUI['controls']['setKeyBind']('AutoSpike');
            }
        }, {
            'type': 'display',
            'label': 'AutoSpike\x20key:',
            'object': Settings['AutoSpike'],
            'property': 'k'
        }, {
            'type': 'checkbox',
            'label': 'AutoSpike2',
            'object': Settings['AutoSpike'],
            'property': 'm',
            'onChange'(_0x2ee23f) {
                UtilsUI['saveSettings']();
            }
        }, {
            'type': 'select',
            'label': '1',
            'object': Settings['AutoSpike']['p'],
            'property': '0',
            'options': ['Reidite\x20Spike', 'Amethyst\x20Spike', 'Diamond\x20Spike', 'Gold\x20Spike', 'Stone\x20Spike', 'Wood\x20Spike', 'Wood\x20Wall', 'Nothing'],
            'onChange'(_0x4f4069) {
                UtilsUI['saveSettings']();
            }
        }, {
            'type': 'select',
            'label': '2',
            'object': Settings['AutoSpike']['p'],
            'property': '1',
            'options': ['Reidite\x20Spike', 'Amethyst\x20Spike', 'Diamond\x20Spike', 'Gold\x20Spike', 'Stone\x20Spike', 'Wood\x20Spike', 'Wood\x20Wall', 'Nothing'],
            'onChange'(_0x1c66de) {
                UtilsUI['saveSettings']();
            }
        }, {
            'type': 'select',
            'label': '3',
            'object': Settings['AutoSpike']['p'],
            'property': '2',
            'options': ['Reidite\x20Spike', 'Amethyst\x20Spike', 'Diamond\x20Spike', 'Gold\x20Spike', 'Stone\x20Spike', 'Wood\x20Spike', 'Wood\x20Wall', 'Nothing'],
            'onChange'(_0x1d19af) {
                UtilsUI['saveSettings']();
            }
        }, {
            'type': 'select',
            'label': '4',
            'object': Settings['AutoSpike']['p'],
            'property': '3',
            'options': ['Reidite\x20Spike', 'Amethyst\x20Spike', 'Diamond\x20Spike', 'Gold\x20Spike', 'Stone\x20Spike', 'Wood\x20Spike', 'Wood\x20Wall', 'Nothing'],
            'onChange'(_0x3755c0) {
                UtilsUI['saveSettings']();
            }
        }, {
            'type': 'select',
            'label': '5',
            'object': Settings['AutoSpike']['p'],
            'property': '4',
            'options': ['Reidite\x20Spike', 'Amethyst\x20Spike', 'Diamond\x20Spike', 'Gold\x20Spike', 'Stone\x20Spike', 'Wood\x20Spike', 'Wood\x20Wall', 'Nothing'],
            'onChange'(_0xe8ce81) {
                UtilsUI['saveSettings']();
            }
        }, {
            'type': 'select',
            'label': '6',
            'object': Settings['AutoSpike']['p'],
            'property': '5',
            'options': ['Reidite\x20Spike', 'Amethyst\x20Spike', 'Diamond\x20Spike', 'Gold\x20Spike', 'Stone\x20Spike', 'Wood\x20Spike', 'Wood\x20Wall', 'Nothing'],
            'onChange'(_0x3c1906) {
                UtilsUI['saveSettings']();
            }
        }, {
            'type': 'select',
            'label': '7',
            'object': Settings['AutoSpike']['p'],
            'property': '6',
            'options': ['Reidite\x20Spike', 'Amethyst\x20Spike', 'Diamond\x20Spike', 'Gold\x20Spike', 'Stone\x20Spike', 'Wood\x20Spike', 'Wood\x20Wall', 'Nothing'],
            'onChange'(_0x477886) {
                UtilsUI['saveSettings']();
            }
        }, {
            'type': 'button',
            'label': 'AutoResuKey',
            'action'(_0x303c9d) {
                UtilsUI['controls']['setKeyBind']('AutoSpikee');
            }
        }, {
            'type': 'display',
            'label': 'AutoResu',
            'object': Settings['AutoSpikee'],
            'property': 'k'
        }, {
            'type': 'checkbox',
            'label': 'AutoResu2',
            'object': Settings['AutoSpikee'],
            'property': 'm',
            'onChange'(_0xe2879) {
                UtilsUI['saveSettings']();
            }
        }, {
            'type': 'button',
            'label': 'set\x20fire\x20key',
            'action'(_0x25ca27) {
                UtilsUI['controls']['setKeyBind']('AutoSpikeee');
            }
        }, {
            'type': 'display',
            'label': 'Fire\x20Key:',
            'object': Settings['AutoSpikeee'],
            'property': 'k'
        }, {
            'type': 'checkbox',
            'label': 'Fire2',
            'object': Settings['AutoSpikeee'],
            'property': 'm',
            'onChange'(_0x15fc71) {
                UtilsUI['saveSettings']();
            }
        }], {
            'folder': 'AutoSpike'
        }), _0x1e59ab['Register']([{
            'type': 'checkbox',
            'label': 'AutoIce',
            'object': Settings,
            'property': 'Ice',
            'onChange': _0x4da6ca => {
                UtilsUI['saveSettings']();
            }
        }, {
            'type': 'checkbox',
            'label': 'AutoIce2',
            'object': Settings,
            'property': 'Ice2',
            'onChange': _0x918f00 => {
                UtilsUI['saveSettings']();
            }
        }, {
            'type': 'checkbox',
            'label': 'AutoCrown',
            'object': Settings,
            'property': 'Crown',
            'onChange': _0x5e62c6 => {
                UtilsUI['saveSettings']();
            }
        }, {
            'type': 'checkbox',
            'label': 'AutoEmerald',
            'object': Settings['AutoEme'],
            'property': 'e',
            'onChange': _0x126d46 => {
                UtilsUI['saveSettings']();
            }
        }, {
            'type': 'button',
            'label': 'Set\x20Spectator\x20Key',
            'action': _0x4ef968 => {
                UtilsUI['controls']['setKeyBind']('Spectator');
            }
        }, {
            'type': 'display',
            'label': 'Spectator\x20Key:',
            'object': Settings['Spectator'],
            'property': 'k'
        }, {
            'type': 'checkbox',
            'label': 'Aimbot',
            'object': Settings['AMB'],
            'property': 'e',
            'onChange'(_0x5af77c) {
                UtilsUI['saveSettings']();
            }
        }, {
            'type': 'checkbox',
            'label': 'Totem',
            'object': Settings['AutoTotem'],
            'property': 'e',
            'onChange': _0x393af1 => {
                UtilsUI['saveSettings']();
            }
        }, {
            'type': 'checkbox',
            'label': 'Reeform?',
            'object': Settings,
            'property': 'aaa22',
            'onChange'(_0x4bc242) {
                UtilsUI['saveSettings']();
            }
        }, {
            'type': 'button',
            'label': 'ReSpawn',
            'action'(_0x7139cd) {
                client['rejoin_token']();
            }
        }, {
            'type': 'button',
            'label': 'Token',
            'action'(_0xdc74ff) {
                prompt('Copy\x20this', '```Token:\x20' + user['token'] + '\x0aTokenID:\x20' + user['token_id'] + '```');
            }
        }, {
            'type': 'button',
            'label': 'ServerIP',
            'action'(_0x3f961a) {
                prompt('Copy\x20this', kokoip);
            }
        }, {
            'type': 'checkbox',
            'label': 'Token\x20Joiner\x20Enabled',
            'object': Settings['Tokenjoin'],
            'property': 'e',
            'onChange'(_0x1c9dd0) {
                Settings['Tokenjoin']['e'] = _0x1c9dd0, UtilsUI['saveSettings']();
            }
        }, {
            'type': 'text',
            'label': 'Set\x20Token',
            'object': Settings['Tokenjoin'],
            'property': 'token',
            'onChange'(_0x15f843) {
                UtilsUI['saveSettings']();
            }
        }, {
            'type': 'text',
            'label': 'Set\x20TokenID',
            'object': Settings['Tokenjoin'],
            'property': 'id',
            'onChange'(_0x16a9e0) {
                UtilsUI['saveSettings']();
            }
        }, {
            'type': 'range',
            'label': 'WhenEat',
            'min': 0x14,
            'max': 0x64,
            'step': 0x1,
            'object': Settings,
            'property': 'food',
            'onChange'(_0x557bc4) {
                UtilsUI['saveSettings']();
            }
        }, {
            'type': 'checkbox',
            'label': 'Xray',
            'object': Settings['Xray'],
            'property': 'e',
            'onChange'(_0x17572e) {
                UtilsUI['saveSettings']();
            }
        }, {
            'type': 'checkbox',
            'label': 'AutoExtractor\x20Take',
            'object': Settings['AutoExtTake'],
            'property': 'e',
            'onChange': _0x5ce987 => {
                UtilsUI['saveSettings']();
            }
        }, {
            'type': 'checkbox',
            'label': 'AutoExtractor\x20Put',
            'object': Settings['AutoExtPut'],
            'property': 'e',
            'onChange': _0x16d114 => {
                UtilsUI['saveSettings']();
            }
        }, {
            'type': 'checkbox',
            'label': 'AutoBread\x20Take',
            'object': Settings['AutoBreadTake'],
            'property': 'e',
            'onChange': _0x271bc5 => {
                UtilsUI['saveSettings']();
            }
        }, {
            'type': 'checkbox',
            'label': 'AutoBread\x20Put',
            'object': Settings['AutoBreadPut'],
            'property': 'e',
            'onChange': _0x40d492 => {
                UtilsUI['saveSettings']();
            }
        }, {
            'type': 'checkbox',
            'label': 'Equip\x20after\x20place',
            'object': Settings,
            'property': 'Equiq',
            'onChange': _0x4e73ac => {
                UtilsUI['saveSettings']();
            }
        }], {
            'folder': 'Misc'
        }));
    },
    'controls': null,
    'controller': class {
        ['setKeyBind'](_0x4905b7) {
            Settings[_0x4905b7]['k'] = 'Press\x20any\x20key';
            let _0x2859f0 = 0x0;
            document['addEventListener']('keydown', function _0x1101e1(_0x149af0) {
                _0x2859f0++;
                if (_0x2859f0 >= 0x1) {
                    _0x149af0['code'] == 'Escape' ? Settings[_0x4905b7]['k'] = 'NONE' : Settings[_0x4905b7]['k'] = _0x149af0['code'];;
                    document['removeEventListener']('keydown', _0x1101e1), UtilsUI['saveSettings']();
                };
            });
        }
    },
    'saveSettings': () => {
        for (let _0xf40ab4 in Settings) {
            localStorage['setItem'](_0xf40ab4 + 'yusukedao', JSON['stringify'](Settings[_0xf40ab4]));
        };
    },
    'loadSettings': () => {
        for (let _0x573164 in Settings) {
            let _0x3e77cd = localStorage['getItem'](_0x573164 + 'yusukedao');
            if (_0x3e77cd) Settings[_0x573164] = JSON['parse'](_0x3e77cd);
        };
    },
    'LoadHack': () => {
        UtilsUI['loadSettings'](), (Settings['Xray']['e'] = !0x1, Settings['killworm']['e'] = !0x1, Settings['AutoSpike']['e'] = !0x1, Settings['AutoSpikee']['e'] = !0x1, Settings['AutoSpikeee']['e'] = !0x1, Settings['AMB']['e'] = !0x1, Settings['Autofarm']['e'] = !0x1, Settings['AutoEme']['e'] = !0x1, Settings['Tame']['e'] = !0x1, UtilsUI['controls'] = new UtilsUI['controller']());
        let _0x1e2374 = document['createElement']('script');
        _0x1e2374['onload'] = function() {
            try {
                UtilsUI['initUI']();
            } catch {
                Settings['GuiFixer'] = !![], UtilsUI['saveSettings']();
            }
        }, _0x1e2374['src'] = 'https://unpkg.com/guify@0.12.0/lib/guify.min.js', document['body']['appendChild'](_0x1e2374);
    }
}, UtilsUI['LoadHack']();

function HoldWeapon(_0x6756de, _0xad8dbe) {
    switch (_0x6756de) {
        case 0x22:
        case 0x12:
        case 0x21:
        case 0xf:
        case 0xe:
        case 0xd:
        case 0xc:
        case 0x10:
        case 0x11:
            return 0x2;
        case 0x39:
        case 0x5:
        case 0x6:
        case 0x1e:
        case 0x3e:
        case 0x9:
        case 0x0:
        case 0x3f:
        case 0x13:
            return 0x1;
        case 0x40:
        case 0x41:
        case 0x42:
        case 0x43:
        case 0x44:
        case 0x46:
        case 0x45:
            return 0x3;
        case 0x2d:
            if (_0xad8dbe) return 0x4;
        case -0x1:
            if (_0xad8dbe) return 0x5;
    }
    return 0x0;
}

function calcAngle(_0x3a0ac9, _0x3ad992, _0x5bb93a) {
    return _0x3a0ac9 && _0x3ad992 ? _0x5bb93a ? Math['atan2'](_0x3ad992['r']['y'] - _0x3a0ac9['r']['y'], _0x3ad992['r']['x'] - _0x3a0ac9['r']['x']) : Math['atan2'](_0x3ad992['y'] - _0x3a0ac9['y'], _0x3ad992['x'] - _0x3a0ac9['x']) : null;
}

function EnemyToAttack(_0x48c4c0, _0x320a0d) {
    let _0x460021 = null,
        _0x5447b2 = -0x1,
        _0x225fb4 = HoldWeapon(_0x48c4c0['right'], ![]) === 0x2 ? !![] : ![];
    for (var _0x485623 = 0x0, _0x15a44d = _0x320a0d['length'], _0x479848 = null, _0x37d97e = null; _0x485623 < _0x15a44d; ++_0x485623) {
        _0x479848 = _0x320a0d[_0x485623];
        if (_0x479848['pid'] === _0x48c4c0['pid']) continue;
        if (!_0x479848['ally'] && _0x48c4c0['fly'] === _0x479848['fly'] && !_0x479848['ghost']) {
            _0x37d97e = (_0x48c4c0['x'] - _0x479848['x']) ** 0x2 + (_0x48c4c0['y'] - _0x479848['y']) ** 0x2;
            if (_0x225fb4 && _0x37d97e < 0x14a) continue;
            (_0x5447b2 === -0x1 || _0x37d97e < _0x5447b2) && (_0x5447b2 = _0x37d97e, _0x460021 = _0x479848);;
        };
    };
    return _0x460021;
};

function AutoThings2() {
    let _0x1cb8f9 = world['fast_units'][user['uid']];
    if (!client['socket'] || 0x1 != client['socket']['readyState']) return;
    if (!_0x1cb8f9 && !Spectator && CurrentlyPlaying) client['socket']['send'](JSON['stringify']([0xb]));
    Settings['AutoRecycle']['e'] && !user['craft']['crafting'] && CurrentlyPlaying && client['socket']['send'](JSON['stringify']([0x1d, lastrecycled]));;
    Settings['AutoCraft']['e'] && !user['craft']['crafting'] && CurrentlyPlaying && client['socket']['send'](JSON['stringify']([0x7, lastcrafted]));;
}

function dist2dSQRT(_0x3c35bb, _0x249faf) {
    if (_0x3c35bb && _0x249faf) return Math['sqrt']((_0x3c35bb['x'] - _0x249faf['x']) ** 0x2 + (_0x3c35bb['y'] - _0x249faf['y']) ** 0x2);;
    return null;
};

function AutoThings() {
    let _0x459680 = world['fast_units'][user['uid']];
    if (!CurrentlyPlaying) return;
    if (!client['socket'] || 0x1 != client['socket']['readyState']) return;
    if (_0x459680) {
        if (Settings['AutoSpikee']['e']) {
            let _0x25830d = 0x2 * Math['PI'],
                _0x249a3b = Math['floor']((_0x459680['angle'] + _0x25830d) % _0x25830d * 0xff / _0x25830d);
            !Settings['AutoSpike']['m'] && client['socket']['send'](JSON['stringify']([0xa, 0x91, _0x249a3b, 0x0]));;
            if (Settings['AutoSpike']['m']) {
                for (let _0x58d90e = 0x0; _0x58d90e < 0x1e; _0x58d90e++) {
                    client['socket']['send'](JSON['stringify']([0xa, 0x91, (_0x58d90e + _0x249a3b) % 0xff, 0x0])), client['socket']['send'](JSON['stringify']([0xa, 0x91, (_0x249a3b - _0x58d90e + 0xff) % 0xff, 0x0])), client['socket']['send'](JSON['stringify']([0xa, 0x91, _0x249a3b, 0x0]));
                };
            };
        }
        if (Settings['AutoSpikeee']['e']) {
            let _0x3203c5 = 0x2 * Math['PI'],
                _0x55dfa3 = Math['floor']((_0x459680['angle'] + _0x3203c5) % _0x3203c5 * 0xff / _0x3203c5);
            !Settings['AutoSpike']['m'] && client['socket']['send'](JSON['stringify']([0xa, 0x6b, _0x55dfa3, 0x0]));;
            if (Settings['AutoSpike']['m']) {
                for (let _0x4943f2 = 0x0; _0x4943f2 < 0x1e; _0x4943f2++) {
                    client['socket']['send'](JSON['stringify']([0xa, 0x6b, (_0x4943f2 + _0x55dfa3) % 0xff, 0x0])), client['socket']['send'](JSON['stringify']([0xa, 0x6b, (_0x55dfa3 - _0x4943f2 + 0xff) % 0xff, 0x0])), client['socket']['send'](JSON['stringify']([0xa, 0x6b, _0x55dfa3, 0x0]));
                };
            };
        }
        if (Settings['AutoSpike']['e']) {
            for (let _0x38ce30 = 0x0, _0x4bf4a2 = Settings['AutoSpike']['p']; _0x38ce30 < _0x4bf4a2['length']; _0x38ce30++) {
                var _0x1d2904 = _0x4bf4a2[_0x38ce30];
                switch (_0x1d2904) {
                    case 'Reidite\x20Spike':
                        _0x1d2904 = 0xd5;
                        break;
                    case 'Amethyst\x20Spike':
                        _0x1d2904 = 0x75;
                        break;
                    case 'Diamond\x20Spike':
                        _0x1d2904 = 0xa4;
                        break;
                    case 'Gold\x20Spike':
                        _0x1d2904 = 0xa3;
                        break;
                    case 'Stone\x20Spike':
                        _0x1d2904 = 0xa2;
                        break;
                    case 'Wood\x20Spike':
                        _0x1d2904 = 0x9a;
                        break;
                    case 'Wood\x20Wall':
                        _0x1d2904 = 0x9c;
                        break;
                    case 'Nothing':
                        _0x1d2904 = -0x1;
                        break;
                };
                if (_0x1d2904 === -0x1 || !user['inv']['n'][_0x1d2904]) continue;
                var _0x46698a = _0x1d2904;
                break;
            };
            if (_0x46698a) {
                let _0x2b3415 = 0x2 * Math['PI'],
                    _0x5edd35 = Math['floor']((_0x459680['angle'] + _0x2b3415) % _0x2b3415 * 0xff / _0x2b3415);
                !Settings['AutoSpike']['m'] && client['socket']['send'](JSON['stringify']([0xa, _0x46698a, _0x5edd35, 0x0]));;
                if (Settings['AutoSpike']['m']) {
                    for (let _0x352eac = 0x0; _0x352eac < 0x1e; _0x352eac++) {
                        client['socket']['send'](JSON['stringify']([0xa, _0x46698a, (_0x352eac + _0x5edd35) % 0xff, 0x0])), client['socket']['send'](JSON['stringify']([0xa, _0x46698a, (_0x5edd35 - _0x352eac + 0xff) % 0xff, 0x0])), client['socket']['send'](JSON['stringify']([0xa, _0x46698a, _0x5edd35, 0x0]));
                    };
                };
            };
        };
        if (Settings['Crown'] && user['ghost']['enabled'] && +new Date() - CrownCooldown > 0x13ba) {
            let _0x2d1cac = world['units'][ITEMS['RESURRECTION']];
            if (_0x2d1cac['length'] > 0x0) {
                if (user['inv']['n'][0x27]) var _0x5a04ba = 0x27;
                else {
                    if (user['inv']['n'][0x26]) var _0x5a04ba = 0x26;
                    else {
                        if (user['inv']['n'][0x25]) var _0x5a04ba = 0x25;
                        else {
                            if (user['inv']['n'][0x24]) var _0x5a04ba = 0x24;
                            else {
                                if (user['inv']['n'][0x23]) var _0x5a04ba = 0x23;
                            }
                        }
                    }
                }
                for (let _0x2718ce = 0x0; _0x2718ce < _0x2d1cac['length']; _0x2718ce++) 0x15e > dist2dSQRT(_, _0x2d1cac[_0x2718ce]) && client['socket']['send'](JSON['stringify']([0x11, _0x2d1cac[_0x2718ce]['pid'], _0x2d1cac[_0x2718ce]['id']]));
                client['socket']['send'](JSON['stringify']([0x5, 0x4f])), _0x5a04ba && client['socket']['send'](JSON['stringify']([0x5, _0x5a04ba]));
            }
        }
        if (Settings['AutoBuild']['e'] && user['inv']['n'][getBuild()]) {
            let _0x2c5d31 = 0x2 * Math['PI'],
                _0xe8f264 = Math['floor']((_0x459680['angle'] + _0x2c5d31) % _0x2c5d31 * 0xff / _0x2c5d31);
            client['socket']['send'](JSON['stringify']([0xa, getBuild(), _0xe8f264, Settings['AutoBuild']['m'] ? 0x1 : 0x0]));
        };
        if (Settings['AutoEme']['e']) {
            let _0x580294 = {
                    'x': EmeraldPos[EmeraldIndex][0x0],
                    'y': EmeraldPos[EmeraldIndex][0x1]
                },
                _0xafe5da = {
                    'x': _0x459680['x'] - _0x580294['x'],
                    'y': _0x459680['y'] - _0x580294['y']
                },
                _0x3b84b4 = {
                    'x': Math['abs'](_0x459680['x'] - _0x580294['x']),
                    'y': Math['abs'](_0x459680['y'] - _0x580294['y'])
                },
                _0xb8ca75 = 0x0;
            if (_0x3b84b4['x'] > 0x3c) {
                if (_0xafe5da['x'] > 0x0) _0xb8ca75 += 0x1;
                if (_0xafe5da['x'] < 0x0) _0xb8ca75 += 0x2;
            };
            if (_0x3b84b4['y'] > 0x3c) {
                if (_0xafe5da['y'] > 0x0) _0xb8ca75 += 0x8;
                if (_0xafe5da['y'] < 0x0) _0xb8ca75 += 0x4;
            };
            client['send_move'](_0xb8ca75);
            if (_0x3b84b4['x'] < 0x64 && _0x3b84b4['y'] < 0x64) {
                switch (EmeraldIndex) {
                    case 0x0:
                        client['socket']['send'](JSON['stringify']([0x4, 0x69]));
                        break;
                    case 0x1:
                        client['socket']['send'](JSON['stringify']([0x4, 0x28]));
                        break;
                    case 0x2:
                        client['socket']['send'](JSON['stringify']([0x4, 0xd8]));
                        break;
                };
                client['socket']['send'](JSON['stringify']([0xe])), Settings['AutoEme']['a'] = _0x459680['angle'];
            };
        };
        if (Settings['AutoSeed'] && user['inv']['n'][toPlace]) {
            for (let _0x54d7bf = 0x0; _0x54d7bf < 0x1a; _0x54d7bf++) {
                client['socket']['send'](JSON['stringify']([0xa, toPlace, _0x54d7bf * 0xa, 0x0])), client['socket']['send'](JSON['stringify']([0xa, toPlace, _0x54d7bf * 0xa, 0x1]));
            };
        };
        if (Settings['Autofarm']['e']) {
            let _0x280912 = {
                'obj': null,
                'dist': -0x1,
                'type': 0x0
            };
            var _0x167fa2 = {
                'x': Settings['Autofarm']['x'],
                'y': Settings['Autofarm']['y'],
                'width': Settings['Autofarm']['xx'] - Settings['Autofarm']['x'],
                'height': Settings['Autofarm']['yy'] - Settings['Autofarm']['y']
            };
            for (var _0x29cdcd = 0x0, _0x4989ca = [...world['units'][ITEMS['SEED']], ...world['units'][ITEMS['WHEAT_SEED']], ...world['units'][ITEMS['THORNBUSH_SEED']], ...world['units'][ITEMS['GARLIC_SEED']], ...world['units'][ITEMS['CARROT_SEED']], ...world['units'][ITEMS['ALOE_VERA_SEED']], ...world['units'][ITEMS['WATERMELON_SEED']], ...world['units'][ITEMS['PUMPKIN_SEED']]], _0x42784a = _0x4989ca['length'], _0x386965 = null, _0x14de64 = null; _0x29cdcd < _0x42784a; ++_0x29cdcd) {
                _0x386965 = _0x4989ca[_0x29cdcd];
                if (!_0x386965['info'] || _0x386965['info'] === 0xa) continue;
                if (!Settings['Autofarm']['w'] && _0x386965['info'] === 0x10) continue;
                if (_0x167fa2['x'] < _0x386965['x'] - 0x32 + 0x64 && _0x167fa2['x'] + _0x167fa2['width'] > _0x386965['x'] - 0x32 && _0x167fa2['y'] < _0x386965['y'] - 0x32 + 0x64 && _0x167fa2['y'] + _0x167fa2['height'] > _0x386965['y'] - 0x32) {
                    _0x14de64 = (_0x459680['x'] - _0x386965['x']) ** 0x2 + (_0x459680['y'] - _0x386965['y']) ** 0x2;
                    (_0x280912['dist'] === -0x1 || _0x14de64 < _0x280912['dist']) && (_0x280912['dist'] = _0x14de64, _0x280912['obj'] = _0x386965);;
                };
            };
            if (_0x280912['obj'] && user['gauges']['realhp'] > 0xa0) {
                _0x280912['dist'] = dist2dSQRT(_0x459680, _0x280912['obj']);
                switch (_0x280912['obj']['info']) {
                    case 0x10:
                    case 0x11:
                    case 0x12:
                    case 0x13:
                        if (Settings['Autofarm']['w']) {
                            if (user['inv']['n'][0x31]) {
                                if (_0x459680['right'] !== 0x31) client['socket']['send'](JSON['stringify']([0x5, 0x31]));
                                _0x280912['type'] = 0x1;
                            };
                        } else {
                            if (user['inv']['n'][0x36]) {
                                _0x459680['right'] !== 0x36 && client['socket']['send'](JSON['stringify']([0x5, 0x36]));;
                            } else {
                                if (user['inv']['n'][0x35]) {
                                    _0x459680['right'] !== 0x35 && client['socket']['send'](JSON['stringify']([0x5, 0x35]));;
                                }
                            };
                            _0x280912['type'] = 0x2;
                        };
                        break;
                    case 0x1:
                    case 0x2:
                    case 0x3:
                        if (user['inv']['n'][0x36]) {
                            _0x459680['right'] !== 0x36 && client['socket']['send'](JSON['stringify']([0x5, 0x36]));;
                        } else {
                            if (user['inv']['n'][0x35]) {
                                _0x459680['right'] !== 0x35 && client['socket']['send'](JSON['stringify']([0x5, 0x35]));;
                            }
                        };
                        _0x280912['type'] = 0x2;
                        break;
                };
                let _0x1c7905 = {
                        'x': _0x459680['x'] - _0x280912['obj']['x'],
                        'y': _0x459680['y'] - _0x280912['obj']['y']
                    },
                    _0x9d0d49 = {
                        'x': Math['abs'](_0x459680['x'] - _0x280912['obj']['x']),
                        'y': Math['abs'](_0x459680['y'] - _0x280912['obj']['y'])
                    },
                    _0x3aa83b = 0x0;
                if (_0x9d0d49['x'] > 0x32) {
                    if (_0x1c7905['x'] > 0x0) _0x3aa83b += 0x1;
                    if (_0x1c7905['x'] < 0x0) _0x3aa83b += 0x2;
                };
                if (_0x9d0d49['y'] > 0x32) {
                    if (_0x1c7905['y'] > 0x0) _0x3aa83b += 0x8;
                    if (_0x1c7905['y'] < 0x0) _0x3aa83b += 0x4;
                };
                client['send_move'](_0x3aa83b);
                if (_0x9d0d49['x'] < (_0x280912['type'] === 0x1 ? 0x78 : 0x12c) && _0x9d0d49['y'] < (_0x280912['type'] === 0x1 ? 0x78 : 0x12c)) {
                    Settings['Autofarm']['a'] = calcAngle(_0x459680, _0x280912['obj'], !![]);
                    let _0x3aec49 = 0x2 * Math['PI'],
                        _0x32eed3 = Math['floor']((Settings['Autofarm']['a'] + _0x3aec49) % _0x3aec49 * 0xff / _0x3aec49);
                    Settings['Autofarm']['a'] && (client['socket']['send'](JSON['stringify']([0x4, _0x32eed3])), client['socket']['send'](JSON['stringify']([0xe])));;
                };
            } else {
                let _0x3f83dd = {
                        'x': _0x459680['x'] - Settings['Autofarm']['sx'],
                        'y': _0x459680['y'] - Settings['Autofarm']['sy']
                    },
                    _0x20f4a1 = {
                        'x': Math['abs'](_0x459680['x'] - Settings['Autofarm']['sx']),
                        'y': Math['abs'](_0x459680['y'] - Settings['Autofarm']['sy'])
                    },
                    _0x56c94d = 0x0;
                if (_0x20f4a1['x'] > 0x32) {
                    if (_0x3f83dd['x'] > 0x0) _0x56c94d += 0x1;
                    if (_0x3f83dd['x'] < 0x0) _0x56c94d += 0x2;
                };
                if (_0x20f4a1['y'] > 0x32) {
                    if (_0x3f83dd['y'] > 0x0) _0x56c94d += 0x8;
                    if (_0x3f83dd['y'] < 0x0) _0x56c94d += 0x4;
                };
                client['send_move'](_0x56c94d);
            };
        };

        function _0x5e61d2(_0x428235, _0x535eb8) {
            let _0x4a146d = null,
                _0x2861f8 = -0x1;
            return obj = _0x535eb8, _0x14de64 = (_0x428235['x'] - obj['x']) ** 0x2 + (_0x428235['y'] - obj['y']) ** 0x2, (-0x1 === _0x2861f8 || _0x14de64 < _0x2861f8) && (_0x2861f8 = _0x14de64, _0x4a146d = obj), _0x4a146d;
        }
        if (Settings['Tame']['e']) {
            for (let _0x38e964 = [...world['units'][ITEMS['HAWK']], ...world['units'][ITEMS['BABY_MAMMOTH']], ...world['units'][ITEMS['BABY_DRAGON']], ...world['units'][ITEMS['BABY_LAVA']], ...world['units'][ITEMS['CRAB_BOSS']], ...world['units'][ITEMS['BOAR']]], _0x38a663 = _0x38e964['length'], _0x4146c6 = 0x0; _0x4146c6 < _0x38a663; _0x4146c6++)
                if (_0x38e964[_0x4146c6]['info']) Settings['Tame']['a'] = null;
                else {
                    let _0x3db2ba = _0x5e61d2(_0x459680, _0x38e964[_0x4146c6]),
                        _0x58a04d = dist2dSQRT(_0x459680, _0x38e964[_0x4146c6]);
                    if (_0x58a04d <= 0xc8 && _0x459680['right'] == SPRITE['SADDLE']) {
                        Settings['Tame']['a'] = calcAngle(_0x459680, _0x3db2ba, !0x1);
                        let _0x4414 = 0x2 * Math['PI'],
                            _0x2e90d5 = Math['floor']((Settings['Tame']['a'] + _0x4414) % _0x4414 * 0xff / _0x4414);
                        client['socket']['send'](JSON['stringify']([0x3, _0x2e90d5])), Settings['Tame']['a'] && _0x58a04d <= 0xb2 && (client['socket']['send'](JSON['stringify']([0x4, _0x2e90d5])), client['socket']['send'](JSON['stringify']([0xe])));
                    } else Settings['Tame']['a'] = null;
                }
        }
        if (Settings['AMB']['e']) {
            switch (HoldWeapon(_0x459680['right'], !![])) {
                case 0x1:
                    var _0x2b70f9 = _0x459680['fly'] ? 196.8 : 157.6;
                    break;
                case 0x2:
                    var _0x2b70f9 = _0x459680['fly'] ? 291.8 : 227.6;
                    break;
                case 0x3:
                    var _0x2b70f9 = 0x26c;
                    break;
                case 0x4:
                    var _0x2b70f9 = _0x459680['fly'] ? 0x8c : 0x7d;
                    break;
                case 0x5:
                    if (_0x459680['clothe'] == SPRITE['WINTER_HOOD'] || _0x459680['clothe'] == SPRITE['GLOVES_HOOD']) var _0x2b70f9 = _0x459680['fly'] ? 120.8 : 97.6;
                    else Settings['AMB']['a'] = null;
                    break;
                default:
                    Settings['AMB']['a'] = null;
                    break;
            };
            if (_0x2b70f9) {
                let _0x4a13a3 = EnemyToAttack(_0x459680, world['units'][ITEMS['PLAYERS']]);
                if (_0x4a13a3) {
                    let _0x3cd772 = dist2dSQRT(_0x459680, _0x4a13a3);
                    if (_0x3cd772 <= _0x2b70f9) {
                        Settings['AMB']['a'] = calcAngle(_0x459680, _0x4a13a3, !![]);
                        let _0x36c4b8 = 0x2 * Math['PI'],
                            _0x27a42f = Math['floor']((Settings['AMB']['a'] + _0x36c4b8) % _0x36c4b8 * 0xff / _0x36c4b8);
                        client['socket']['send'](JSON['stringify']([0x3, _0x27a42f]));
                        Settings['AMB']['a'] && _0x3cd772 <= _0x2b70f9 - 0x16 && (client['socket']['send'](JSON['stringify']([0x4, _0x27a42f])), client['socket']['send'](JSON['stringify']([0xe])));;
                    } else Settings['AMB']['a'] = null;;
                } else Settings['AMB']['a'] = null;;
            };
        }
    }
}

function AutoFood() {
    if (client['socket']) {
        if (client['socket']['readyState'] === 0x1 && CurrentlyPlaying) {
            if (user['gauges']['h'] < Settings['food'] / 0x64 && !window['AutoEatWait'] && !user['craft']['crafting']) {
                window['AutoEatWait'] = !![];
                if (user['inv']['n'][INV['PLANT']]) client['select_inv'](INV['PLANT'], user['inv']['find_item'](INV['PLANT']));
                else {
                    if (user['inv']['n'][INV['GARLIC']]) client['select_inv'](INV['GARLIC'], user['inv']['find_item'](INV['GARLIC']));
                    else {
                        if (user['inv']['n'][INV['CRAB_STICK']]) client['select_inv'](INV['CRAB_STICK'], user['inv']['find_item'](INV['CRAB_STICK']));
                        else {
                            if (user['inv']['n'][INV['PUMPKIN']]) client['select_inv'](INV['PUMPKIN'], user['inv']['find_item'](INV['PUMPKIN']));
                            else {
                                if (user['inv']['n'][INV['TOMATO']]) client['select_inv'](INV['TOMATO'], user['inv']['find_item'](INV['TOMATO']));
                                else {
                                    if (user['inv']['n'][INV['CARROT']]) client['select_inv'](INV['CARROT'], user['inv']['find_item'](INV['CARROT']));
                                    else {
                                        if (user['inv']['n'][INV['WATERMELON']]) client['select_inv'](INV['WATERMELON'], user['inv']['find_item'](INV['WATERMELON']));
                                        else {
                                            if (user['inv']['n'][INV['BREAD']]) client['select_inv'](INV['BREAD'], user['inv']['find_item'](INV['BREAD']));
                                            else {
                                                if (user['inv']['n'][INV['COOKED_MEAT']]) client['select_inv'](INV['COOKED_MEAT'], user['inv']['find_item'](INV['COOKED_MEAT']));
                                                else {
                                                    if (user['inv']['n'][INV['FOODFISH_COOKED']]) client['select_inv'](INV['FOODFISH_COOKED'], user['inv']['find_item'](INV['FOODFISH_COOKED']));
                                                    else {
                                                        if (user['inv']['n'][INV['COOKIE']]) client['select_inv'](INV['COOKIE'], user['inv']['find_item'](INV['COOKIE']));
                                                        else {
                                                            if (user['inv']['n'][INV['SANDWICH']]) client['select_inv'](INV['SANDWICH'], user['inv']['find_item'](INV['SANDWICH']));
                                                            else {
                                                                if (user['inv']['n'][INV['CAKE']]) client['select_inv'](INV['CAKE'], user['inv']['find_item'](INV['CAKE']));
                                                                else {
                                                                    if (user['inv']['n'][INV['CRAB_LOOT']]) client['select_inv'](INV['CRAB_LOOT'], user['inv']['find_item'](INV['CRAB_LOOT']));
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                workerTimers['setTimeout'](() => {
                    window['AutoEatWait'] = ![];
                }, 0x1f4);
            } else {
                if (user['gauges']['t'] < 0.45 && !window['AutoDrinkWait'] && !user['craft']['crafting']) {
                    window['AutoDrinkWait'] = !![];
                    if (user['inv']['n'][INV['BOTTLE_FULL']]) client['select_inv'](INV['BOTTLE_FULL'], user['inv']['find_item'](INV['BOTTLE_FULL']));
                    workerTimers['setTimeout'](() => {
                        window['AutoDrinkWait'] = ![];
                    }, 0x12c);
                }
            }
        }
    }
}
let AutoFeedInterval, AHackInterval;
setTimeout(() => {
    AutoFeedInterval = workerTimers['setInterval'](AutoFood, 0x3e8 / 0x3c), HackInterval = workerTimers['setInterval'](AutoThings, 0x3e8 / 0x3c), workerTimers['setInterval'](AutoThings2, 0x3e8 / 0xa);
}, 0x1388);
